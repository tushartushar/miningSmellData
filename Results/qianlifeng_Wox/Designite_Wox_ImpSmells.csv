Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Wox.Helper,WindowsInteropHelper,C:\repos\qianlifeng_Wox\Wox\Helper\WindowsInteropHelper.cs,IsWindowFullscreen,Cyclomatic complexity of the method is 8
Complex Method,Wox.Storage,HistoryItem,C:\repos\qianlifeng_Wox\Wox\Storage\HistoryItem.cs,DateTimeAgo,Cyclomatic complexity of the method is 10
Long Identifier,Wox.Helper,SingleInstance<TApplication>,C:\repos\qianlifeng_Wox\Wox\Helper\SingleInstance.cs,SignalFirstInstance,The length of the parameter firstInstanceRemoteServiceReference is 35.
Long Statement,Wox.Helper,SingleInstance<TApplication>,C:\repos\qianlifeng_Wox\Wox\Helper\SingleInstance.cs,SignalFirstInstance,The length of the statement  "            IPCRemoteService firstInstanceRemoteServiceReference = (IPCRemoteService)RemotingServices.Connect(typeof(IPCRemoteService)' remotingServiceUrl); " is 144.
Long Statement,Wox.Helper,WindowsInteropHelper,C:\repos\qianlifeng_Wox\Wox\Helper\WindowsInteropHelper.cs,IsWindowFullscreen,The length of the statement  "                    if ((appBounds.Bottom - appBounds.Top) == screenBounds.Height && (appBounds.Right - appBounds.Left) == screenBounds.Width) " is 122.
Long Statement,Wox,CustomQueryHotkeySetting,C:\repos\qianlifeng_Wox\Wox\CustomQueryHotkeySetting.xaml.cs,UpdateItem,The length of the statement  "            updateCustomHotkey = _settings.CustomPluginHotkeys.FirstOrDefault(o => o.ActionKeyword == item.ActionKeyword && o.Hotkey == item.Hotkey); " is 137.
Long Statement,Wox,CustomQueryHotkeySetting,C:\repos\qianlifeng_Wox\Wox\CustomQueryHotkeySetting.xaml.cs,SetHotkey,The length of the statement  "                string errorMsg = string.Format(InternationalizationManager.Instance.GetTranslation("registerHotkeyFailed")' hotkeyStr); " is 120.
Long Statement,Wox,HotkeyControl,C:\repos\qianlifeng_Wox\Wox\HotkeyControl.xaml.cs,CheckHotkeyAvailability,The length of the statement  "                HotkeyManager.Current.AddOrReplace("HotkeyAvailabilityTest"' CurrentHotkey.CharKey' CurrentHotkey.ModifierKeys' (sender' e) => { }); " is 132.
Empty Catch Block,Wox.Helper,SingleInstance<TApplication>,C:\repos\qianlifeng_Wox\Wox\Helper\SingleInstance.cs,GetCommandLineArgs,The method has an empty catch block.
Empty Catch Block,Wox.Helper,WallpaperPathRetrieval,C:\repos\qianlifeng_Wox\Wox\Helper\WallpaperPathRetrieval.cs,GetWallpaperColor,The method has an empty catch block.
Empty Catch Block,Wox,HotkeyControl,C:\repos\qianlifeng_Wox\Wox\HotkeyControl.xaml.cs,CheckHotkeyAvailability,The method has an empty catch block.
Magic Number,Wox.Helper,WallpaperPathRetrieval,C:\repos\qianlifeng_Wox\Wox\Helper\WallpaperPathRetrieval.cs,GetWallpaperColor,The following statement contains a magic number: if (result != null && result is string)              {                  try                  {                      var parts = result.ToString().Trim().Split(new[] {' '}' 3).Select(byte.Parse).ToList();                      return Color.FromRgb(parts[0]' parts[1]' parts[2]);                  }                  catch                  {                  }              }
Magic Number,Wox.Helper,WallpaperPathRetrieval,C:\repos\qianlifeng_Wox\Wox\Helper\WallpaperPathRetrieval.cs,GetWallpaperColor,The following statement contains a magic number: if (result != null && result is string)              {                  try                  {                      var parts = result.ToString().Trim().Split(new[] {' '}' 3).Select(byte.Parse).ToList();                      return Color.FromRgb(parts[0]' parts[1]' parts[2]);                  }                  catch                  {                  }              }
Magic Number,Wox.Helper,WindowsInteropHelper,C:\repos\qianlifeng_Wox\Wox\Helper\WindowsInteropHelper.cs,IsWindowFullscreen,The following statement contains a magic number: if (hWnd != null && !hWnd.Equals(IntPtr.Zero))              {                  //if current active window is NOT desktop or shell                  if (!(hWnd.Equals(HWND_DESKTOP) || hWnd.Equals(HWND_SHELL)))                  {                      StringBuilder sb = new StringBuilder(256);                      GetClassName(hWnd' sb' sb.Capacity);                      string windowClass = sb.ToString();                        //for Win+Tab (Flip3D)                      if (windowClass == WINDOW_CLASS_WINTAB)                      {                          return false;                      }                        RECT appBounds;                      GetWindowRect(hWnd' out appBounds);                        //for console (ConsoleWindowClass)' we have to check for negative dimensions                      if (windowClass == WINDOW_CLASS_CONSOLE)                      {                          return appBounds.Top < 0 && appBounds.Bottom < 0;                      }                        //for desktop (Progman or WorkerW' depends on the system)' we have to check                       if (windowClass == WINDOW_CLASS_PROGMAN || windowClass == WINDOW_CLASS_WORKERW)                      {                          IntPtr hWndDesktop = FindWindowEx(hWnd' IntPtr.Zero' "SHELLDLL_DefView"' null);                          hWndDesktop = FindWindowEx(hWndDesktop' IntPtr.Zero' "SysListView32"' "FolderView");                          if (hWndDesktop != null && !hWndDesktop.Equals(IntPtr.Zero))                          {                              return false;                          }                      }                        Rectangle screenBounds = Screen.FromHandle(hWnd).Bounds;                      if ((appBounds.Bottom - appBounds.Top) == screenBounds.Height && (appBounds.Right - appBounds.Left) == screenBounds.Width)                      {                          return true;                      }                  }              }
Magic Number,Wox.Helper,DwmDropShadow,C:\repos\qianlifeng_Wox\Wox\Helper\DWMDropShadow.cs,DropShadow,The following statement contains a magic number: try              {                  WindowInteropHelper helper = new WindowInteropHelper(window);                  int val = 2;                  int ret1 = DwmSetWindowAttribute(helper.Handle' 2' ref val' 4);                      if (ret1 == 0)                  {                      Margins m = new Margins { Bottom = 0' Left = 0' Right = 0' Top = 0 };                      int ret2 = DwmExtendFrameIntoClientArea(helper.Handle' ref m);                      return ret2 == 0;                  }                  else                  {                      return false;                  }              }              catch (Exception)              {                  // Probably dwmapi.dll not found (incompatible OS)                  return false;              }
Magic Number,Wox.Helper,DwmDropShadow,C:\repos\qianlifeng_Wox\Wox\Helper\DWMDropShadow.cs,DropShadow,The following statement contains a magic number: try              {                  WindowInteropHelper helper = new WindowInteropHelper(window);                  int val = 2;                  int ret1 = DwmSetWindowAttribute(helper.Handle' 2' ref val' 4);                      if (ret1 == 0)                  {                      Margins m = new Margins { Bottom = 0' Left = 0' Right = 0' Top = 0 };                      int ret2 = DwmExtendFrameIntoClientArea(helper.Handle' ref m);                      return ret2 == 0;                  }                  else                  {                      return false;                  }              }              catch (Exception)              {                  // Probably dwmapi.dll not found (incompatible OS)                  return false;              }
Magic Number,Wox.Helper,DwmDropShadow,C:\repos\qianlifeng_Wox\Wox\Helper\DWMDropShadow.cs,DropShadow,The following statement contains a magic number: try              {                  WindowInteropHelper helper = new WindowInteropHelper(window);                  int val = 2;                  int ret1 = DwmSetWindowAttribute(helper.Handle' 2' ref val' 4);                      if (ret1 == 0)                  {                      Margins m = new Margins { Bottom = 0' Left = 0' Right = 0' Top = 0 };                      int ret2 = DwmExtendFrameIntoClientArea(helper.Handle' ref m);                      return ret2 == 0;                  }                  else                  {                      return false;                  }              }              catch (Exception)              {                  // Probably dwmapi.dll not found (incompatible OS)                  return false;              }
Magic Number,Wox,HotkeyControl,C:\repos\qianlifeng_Wox\Wox\HotkeyControl.xaml.cs,TbHotkey_OnPreviewKeyDown,The following statement contains a magic number: Dispatcher.InvokeAsync(async () =>              {                  await Task.Delay(500);                  SetHotkey(hotkeyModel);              });
Magic Number,Wox,Msg,C:\repos\qianlifeng_Wox\Wox\Msg.xaml.cs,Msg,The following statement contains a magic number: DoubleAnimation fadeOutAnimation = new DoubleAnimation(dipWorkingArea.Y - Height' dipWorkingArea.Y' new Duration(TimeSpan.FromSeconds(1)))              {                  AccelerationRatio = 0.2              };
Magic Number,Wox,App,C:\repos\qianlifeng_Wox\Wox\App.xaml.cs,AutoUpdates,The following statement contains a magic number: Task.Run(async () =>              {                  if (_settings.AutoUpdates)                  {                      // check udpate every 5 hours                      var timer = new Timer(1000 * 60 * 60 * 5);                      timer.Elapsed += async (s' e) =>                      {                          await Updater.UpdateApp();                      };                      timer.Start();                        // check updates on startup                      await Updater.UpdateApp();                  }              });
Magic Number,Wox,App,C:\repos\qianlifeng_Wox\Wox\App.xaml.cs,AutoUpdates,The following statement contains a magic number: Task.Run(async () =>              {                  if (_settings.AutoUpdates)                  {                      // check udpate every 5 hours                      var timer = new Timer(1000 * 60 * 60 * 5);                      timer.Elapsed += async (s' e) =>                      {                          await Updater.UpdateApp();                      };                      timer.Start();                        // check updates on startup                      await Updater.UpdateApp();                  }              });
Magic Number,Wox,App,C:\repos\qianlifeng_Wox\Wox\App.xaml.cs,AutoUpdates,The following statement contains a magic number: Task.Run(async () =>              {                  if (_settings.AutoUpdates)                  {                      // check udpate every 5 hours                      var timer = new Timer(1000 * 60 * 60 * 5);                      timer.Elapsed += async (s' e) =>                      {                          await Updater.UpdateApp();                      };                      timer.Start();                        // check updates on startup                      await Updater.UpdateApp();                  }              });
Magic Number,Wox,App,C:\repos\qianlifeng_Wox\Wox\App.xaml.cs,AutoUpdates,The following statement contains a magic number: Task.Run(async () =>              {                  if (_settings.AutoUpdates)                  {                      // check udpate every 5 hours                      var timer = new Timer(1000 * 60 * 60 * 5);                      timer.Elapsed += async (s' e) =>                      {                          await Updater.UpdateApp();                      };                      timer.Start();                        // check updates on startup                      await Updater.UpdateApp();                  }              });
Magic Number,Wox,MainWindow,C:\repos\qianlifeng_Wox\Wox\MainWindow.xaml.cs,InitProgressbarAnimation,The following statement contains a magic number: var da = new DoubleAnimation(ProgressBar.X2' ActualWidth + 100' new Duration(new TimeSpan(0' 0' 0' 0' 1600)));
Magic Number,Wox,MainWindow,C:\repos\qianlifeng_Wox\Wox\MainWindow.xaml.cs,InitProgressbarAnimation,The following statement contains a magic number: var da = new DoubleAnimation(ProgressBar.X2' ActualWidth + 100' new Duration(new TimeSpan(0' 0' 0' 0' 1600)));
Magic Number,Wox,MainWindow,C:\repos\qianlifeng_Wox\Wox\MainWindow.xaml.cs,InitProgressbarAnimation,The following statement contains a magic number: var da1 = new DoubleAnimation(ProgressBar.X1' ActualWidth' new Duration(new TimeSpan(0' 0' 0' 0' 1600)));
Magic Number,Wox,MainWindow,C:\repos\qianlifeng_Wox\Wox\MainWindow.xaml.cs,WindowLeft,The following statement contains a magic number: var left = (dip2.X - ActualWidth) / 2 + dip1.X;
Magic Number,Wox,MainWindow,C:\repos\qianlifeng_Wox\Wox\MainWindow.xaml.cs,WindowTop,The following statement contains a magic number: var top = (dip2.Y - QueryTextBox.ActualHeight) / 4 + dip1.Y;
Magic Number,Wox.Storage,HistoryItem,C:\repos\qianlifeng_Wox\Wox\Storage\HistoryItem.cs,DateTimeAgo,The following statement contains a magic number: if (span.Days > 365)              {                  int years = (span.Days / 365);                  if (span.Days % 365 != 0)                      years += 1;                  return $"about {years} {(years == 1 ? "year" : "years")} ago";              }
Magic Number,Wox.Storage,HistoryItem,C:\repos\qianlifeng_Wox\Wox\Storage\HistoryItem.cs,DateTimeAgo,The following statement contains a magic number: if (span.Days > 365)              {                  int years = (span.Days / 365);                  if (span.Days % 365 != 0)                      years += 1;                  return $"about {years} {(years == 1 ? "year" : "years")} ago";              }
Magic Number,Wox.Storage,HistoryItem,C:\repos\qianlifeng_Wox\Wox\Storage\HistoryItem.cs,DateTimeAgo,The following statement contains a magic number: if (span.Days > 365)              {                  int years = (span.Days / 365);                  if (span.Days % 365 != 0)                      years += 1;                  return $"about {years} {(years == 1 ? "year" : "years")} ago";              }
Magic Number,Wox.Storage,HistoryItem,C:\repos\qianlifeng_Wox\Wox\Storage\HistoryItem.cs,DateTimeAgo,The following statement contains a magic number: if (span.Days > 30)              {                  int months = (span.Days / 30);                  if (span.Days % 31 != 0)                      months += 1;                  return $"about {months} {(months == 1 ? "month" : "months")} ago";              }
Magic Number,Wox.Storage,HistoryItem,C:\repos\qianlifeng_Wox\Wox\Storage\HistoryItem.cs,DateTimeAgo,The following statement contains a magic number: if (span.Days > 30)              {                  int months = (span.Days / 30);                  if (span.Days % 31 != 0)                      months += 1;                  return $"about {months} {(months == 1 ? "month" : "months")} ago";              }
Magic Number,Wox.Storage,HistoryItem,C:\repos\qianlifeng_Wox\Wox\Storage\HistoryItem.cs,DateTimeAgo,The following statement contains a magic number: if (span.Days > 30)              {                  int months = (span.Days / 30);                  if (span.Days % 31 != 0)                      months += 1;                  return $"about {months} {(months == 1 ? "month" : "months")} ago";              }
Magic Number,Wox.Storage,HistoryItem,C:\repos\qianlifeng_Wox\Wox\Storage\HistoryItem.cs,DateTimeAgo,The following statement contains a magic number: if (span.Seconds > 5)                  return $"about {span.Seconds} seconds ago";
Magic Number,Wox.Storage,HistoryItem,C:\repos\qianlifeng_Wox\Wox\Storage\HistoryItem.cs,DateTimeAgo,The following statement contains a magic number: if (span.Seconds <= 5)                  return "just now";
Magic Number,Wox.ViewModel,MainViewModel,C:\repos\qianlifeng_Wox\Wox\ViewModel\MainViewModel.cs,QueryResults,The following statement contains a magic number: if (!string.IsNullOrEmpty(QueryText))              {                  _updateSource?.Cancel();                  _updateSource = new CancellationTokenSource();                  _updateToken = _updateSource.Token;                    ProgressBarVisibility = Visibility.Hidden;                  _queryHasReturn = false;                  var query = PluginManager.QueryInit(QueryText.Trim());                  if (query != null)                  {                      // handle the exclusiveness of plugin using action keyword                      string lastKeyword = _lastQuery.ActionKeyword;                      string keyword = query.ActionKeyword;                      if (string.IsNullOrEmpty(lastKeyword))                      {                          if (!string.IsNullOrEmpty(keyword))                          {                              Results.RemoveResultsExcept(PluginManager.NonGlobalPlugins[keyword].Metadata);                          }                      }                      else                      {                          if (string.IsNullOrEmpty(keyword))                          {                              Results.RemoveResultsFor(PluginManager.NonGlobalPlugins[lastKeyword].Metadata);                          }                          else if (lastKeyword != keyword)                          {                              Results.RemoveResultsExcept(PluginManager.NonGlobalPlugins[keyword].Metadata);                          }                      }                        _lastQuery = query;                      Task.Delay(200' _updateToken).ContinueWith(_ =>                      {                          if (query.RawQuery == _lastQuery.RawQuery && !_queryHasReturn)                          {                              ProgressBarVisibility = Visibility.Visible;                          }                      }' _updateToken);                        var plugins = PluginManager.ValidPluginsForQuery(query);                      Task.Run(() =>                      {                          Parallel.ForEach(plugins' plugin =>                          {                              var config = _settings.PluginSettings.Plugins[plugin.Metadata.ID];                              if (!config.Disabled)                              {                                    var results = PluginManager.QueryForPlugin(plugin' query);                                  UpdateResultView(results' plugin.Metadata' query);                              }                          });                      }' _updateToken);                  }              }              else              {                  Results.Clear();                  Results.Visbility = Visibility.Collapsed;              }
Magic Number,Wox.ViewModel,MainViewModel,C:\repos\qianlifeng_Wox\Wox\ViewModel\MainViewModel.cs,UpdateResultView,The following statement contains a magic number: foreach (var result in list)              {                  if (_topMostRecord.IsTopMost(result))                  {                      result.Score = int.MaxValue;                  }                  else                  {                      result.Score += _userSelectedRecord.GetSelectedCount(result) * 5;                  }              }
Magic Number,Wox.ViewModel,ResultsViewModel,C:\repos\qianlifeng_Wox\Wox\ViewModel\ResultsViewModel.cs,AddResults,The following statement contains a magic number: lock (_addResultsLock)              {                  var newResults = NewResults(newRawResults' resultId);                    // update UI in one run' so it can avoid UI flickering                  Results.Update(newResults);                    if (Results.Count > 0)                  {                      Margin = new Thickness { Top = 8 };                      SelectedIndex = 0;                  }                  else                  {                      Margin = new Thickness { Top = 0 };                  }              }
