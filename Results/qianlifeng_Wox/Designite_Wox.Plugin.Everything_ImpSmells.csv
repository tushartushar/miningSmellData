Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Wox.Plugin.Everything.Everything,EverythingAPI,C:\repos\qianlifeng_Wox\Plugins\Wox.Plugin.Everything\Everything\EverythingAPI.cs,Search,Cyclomatic complexity of the method is 9
Long Statement,Wox.Plugin.Everything,EverythingSettings,C:\repos\qianlifeng_Wox\Plugins\Wox.Plugin.Everything\EverythingSettings.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Wox.Plugin.Everything;component/everythingsettings.xaml"' System.UriKind.Relative); " is 129.
Long Statement,Wox.Plugin.Everything,Main,C:\repos\qianlifeng_Wox\Plugins\Wox.Plugin.Everything\Main.cs,LoadContextMenus,The length of the statement  "                                _context.API.ShowMsg(string.Format(_context.API.GetTranslation("wox_plugin_everything_canot_start")' record.FullPath)' string.Empty' string.Empty); " is 147.
Magic Number,Wox.Plugin.Everything,EverythingSettings,C:\repos\qianlifeng_Wox\Plugins\Wox.Plugin.Everything\EverythingSettings.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 7 "..\..\EverythingSettings.xaml"              ((Wox.Plugin.Everything.EverythingSettings)(target)).Loaded += new System.Windows.RoutedEventHandler(this.View_Loaded);                            #line default              #line hidden              return;              case 2:              this.UseLocationAsWorkingDir = ((System.Windows.Controls.CheckBox)(target));              return;              }
Magic Number,Wox.Plugin.Everything,Main,C:\repos\qianlifeng_Wox\Plugins\Wox.Plugin.Everything\Main.cs,Query,The following statement contains a magic number: if (!string.IsNullOrEmpty(query.Search))              {                  var keyword = query.Search;                  if (_settings.MaxSearchCount <= 0)                  {                      _settings.MaxSearchCount = 50;                  }                    try                  {                      var searchList = _api.Search(keyword' maxCount: _settings.MaxSearchCount).ToList();                      foreach (var s in searchList)                      {                          var path = s.FullPath;                            string workingDir = null;                          if (_settings.UseLocationAsWorkingDir)                              workingDir = Path.GetDirectoryName(path);                            Result r = new Result();                          r.Title = Path.GetFileName(path);                          r.SubTitle = path;                          r.IcoPath = path;                          r.Action = c =>                          {                              bool hide;                              try                              {                                  Process.Start(new ProcessStartInfo                                  {                                      FileName = path'                                      UseShellExecute = true'                                      WorkingDirectory = workingDir                                  });                                  hide = true;                              }                              catch (Win32Exception)                              {                                  var name = $"Plugin: {_context.CurrentPluginMetadata.Name}";                                  var message = "Can't open this file";                                  _context.API.ShowMsg(name' message' string.Empty);                                  hide = false;                              }                              return hide;                          };                          r.ContextData = s;                          results.Add(r);                      }                  }                  catch (IPCErrorException)                  {                      results.Add(new Result                      {                          Title = _context.API.GetTranslation("wox_plugin_everything_is_not_running")'                          IcoPath = "Images\\warning.png"                      });                  }                  catch (Exception e)                  {                      results.Add(new Result                      {                          Title = _context.API.GetTranslation("wox_plugin_everything_query_error")'                          SubTitle = e.Message'                          Action = _ =>                          {                              Clipboard.SetText(e.Message + "\r\n" + e.StackTrace);                              _context.API.ShowMsg(_context.API.GetTranslation("wox_plugin_everything_copied")' null' string.Empty);                              return false;                          }'                          IcoPath = "Images\\error.png"                      });                  }              }
Magic Number,Wox.Plugin.Everything.Everything,EverythingAPI,C:\repos\qianlifeng_Wox\Plugins\Wox.Plugin.Everything\Everything\EverythingAPI.cs,Search,The following statement contains a magic number: const int bufferSize = 4096;
Missing Default,Wox.Plugin.Everything,EverythingSettings,C:\repos\qianlifeng_Wox\Plugins\Wox.Plugin.Everything\EverythingSettings.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 7 "..\..\EverythingSettings.xaml"              ((Wox.Plugin.Everything.EverythingSettings)(target)).Loaded += new System.Windows.RoutedEventHandler(this.View_Loaded);                            #line default              #line hidden              return;              case 2:              this.UseLocationAsWorkingDir = ((System.Windows.Controls.CheckBox)(target));              return;              }
Missing Default,Wox.Plugin.Everything.Everything,EverythingAPI,C:\repos\qianlifeng_Wox\Plugins\Wox.Plugin.Everything\Everything\EverythingAPI.cs,no,The following switch statement is missing a default case: switch (Everything_GetLastError())              {                  case StateCode.CreateThreadError:                      throw new CreateThreadException();                  case StateCode.CreateWindowError:                      throw new CreateWindowException();                  case StateCode.InvalidCallError:                      throw new InvalidCallException();                  case StateCode.InvalidIndexError:                      throw new InvalidIndexException();                  case StateCode.IPCError:                      throw new IPCErrorException();                  case StateCode.MemoryError:                      throw new MemoryErrorException();                  case StateCode.RegisterClassExError:                      throw new RegisterClassExException();              }
Missing Default,Wox.Plugin.Everything.Everything,EverythingAPI,C:\repos\qianlifeng_Wox\Plugins\Wox.Plugin.Everything\Everything\EverythingAPI.cs,Search,The following switch statement is missing a default case: switch (Everything_GetLastError())                  {                      case StateCode.CreateThreadError:                          throw new CreateThreadException();                      case StateCode.CreateWindowError:                          throw new CreateWindowException();                      case StateCode.InvalidCallError:                          throw new InvalidCallException();                      case StateCode.InvalidIndexError:                          throw new InvalidIndexException();                      case StateCode.IPCError:                          throw new IPCErrorException();                      case StateCode.MemoryError:                          throw new MemoryErrorException();                      case StateCode.RegisterClassExError:                          throw new RegisterClassExException();                  }
