Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Wox.Plugin.Shell,Main,C:\research\architectureSmells\repos\qianlifeng_Wox\Plugins\Wox.Plugin.Shell\Main.cs,GetHistoryCmds,The following statement contains a magic number: IEnumerable<Result> history = _settings.Count.Where(o => o.Key.Contains(cmd))                  .OrderByDescending(o => o.Value)                  .Select(m =>                  {                      if (m.Key == cmd)                      {                          result.SubTitle = string.Format(_context.API.GetTranslation("wox_plugin_cmd_cmd_has_been_executed_times")' m.Value);                          return null;                      }                        var ret = new Result                      {                          Title = m.Key'                          SubTitle = string.Format(_context.API.GetTranslation("wox_plugin_cmd_cmd_has_been_executed_times")' m.Value)'                          IcoPath = Image'                          Action = c =>                          {                              Execute(m.Key);                              return true;                          }                      };                      return ret;                  }).Where(o => o != null).Take(4);
Magic Number,Wox.Plugin.Shell,Main,C:\research\architectureSmells\repos\qianlifeng_Wox\Plugins\Wox.Plugin.Shell\Main.cs,GetCurrentCmd,The following statement contains a magic number: Result result = new Result              {                  Title = cmd'                  Score = 5000'                  SubTitle = _context.API.GetTranslation("wox_plugin_cmd_execute_through_shell")'                  IcoPath = Image'                  Action = c =>                  {                      Execute(cmd);                      return true;                  }              };
Magic Number,Wox.Plugin.Shell,Main,C:\research\architectureSmells\repos\qianlifeng_Wox\Plugins\Wox.Plugin.Shell\Main.cs,ResultsFromlHistory,The following statement contains a magic number: IEnumerable<Result> history = _settings.Count.OrderByDescending(o => o.Value)                  .Select(m => new Result                  {                      Title = m.Key'                      SubTitle = string.Format(_context.API.GetTranslation("wox_plugin_cmd_cmd_has_been_executed_times")' m.Value)'                      IcoPath = Image'                      Action = c =>                      {                          Execute(m.Key);                          return true;                      }                  }).Take(5);
Magic Number,Wox.Plugin.Shell,CMDSetting,C:\research\architectureSmells\repos\qianlifeng_Wox\Plugins\Wox.Plugin.Shell\ShellSetting.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 7 "..\..\ShellSetting.xaml"              ((Wox.Plugin.Shell.CMDSetting)(target)).Loaded += new System.Windows.RoutedEventHandler(this.CMDSetting_OnLoaded);                            #line default              #line hidden              return;              case 2:              this.ReplaceWinR = ((System.Windows.Controls.CheckBox)(target));              return;              case 3:              this.LeaveShellOpen = ((System.Windows.Controls.CheckBox)(target));              return;              case 4:              this.ShellComboBox = ((System.Windows.Controls.ComboBox)(target));              return;              }
Magic Number,Wox.Plugin.Shell,CMDSetting,C:\research\architectureSmells\repos\qianlifeng_Wox\Plugins\Wox.Plugin.Shell\ShellSetting.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 7 "..\..\ShellSetting.xaml"              ((Wox.Plugin.Shell.CMDSetting)(target)).Loaded += new System.Windows.RoutedEventHandler(this.CMDSetting_OnLoaded);                            #line default              #line hidden              return;              case 2:              this.ReplaceWinR = ((System.Windows.Controls.CheckBox)(target));              return;              case 3:              this.LeaveShellOpen = ((System.Windows.Controls.CheckBox)(target));              return;              case 4:              this.ShellComboBox = ((System.Windows.Controls.ComboBox)(target));              return;              }
Magic Number,Wox.Plugin.Shell,CMDSetting,C:\research\architectureSmells\repos\qianlifeng_Wox\Plugins\Wox.Plugin.Shell\ShellSetting.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 7 "..\..\ShellSetting.xaml"              ((Wox.Plugin.Shell.CMDSetting)(target)).Loaded += new System.Windows.RoutedEventHandler(this.CMDSetting_OnLoaded);                            #line default              #line hidden              return;              case 2:              this.ReplaceWinR = ((System.Windows.Controls.CheckBox)(target));              return;              case 3:              this.LeaveShellOpen = ((System.Windows.Controls.CheckBox)(target));              return;              case 4:              this.ShellComboBox = ((System.Windows.Controls.ComboBox)(target));              return;              }
Missing Default,Wox.Plugin.Shell,CMDSetting,C:\research\architectureSmells\repos\qianlifeng_Wox\Plugins\Wox.Plugin.Shell\ShellSetting.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 7 "..\..\ShellSetting.xaml"              ((Wox.Plugin.Shell.CMDSetting)(target)).Loaded += new System.Windows.RoutedEventHandler(this.CMDSetting_OnLoaded);                            #line default              #line hidden              return;              case 2:              this.ReplaceWinR = ((System.Windows.Controls.CheckBox)(target));              return;              case 3:              this.LeaveShellOpen = ((System.Windows.Controls.CheckBox)(target));              return;              case 4:              this.ShellComboBox = ((System.Windows.Controls.ComboBox)(target));              return;              }
