Implementation smell,Namespace,Class,File,Method,Description
Magic Number,CSharp7,AsyncReturn,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\AsyncReturn.cs,CustomAsync,The following statement contains a magic number: await Task.Delay(5000);
Magic Number,CSharp7,AsyncReturn,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\AsyncReturn.cs,CustomAsync,The following statement contains a magic number: return 10;
Magic Number,CSharp7,LocalFunctions1,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\LocalFunctions1.cs,Main,The following statement contains a magic number: i < 10
Magic Number,CSharp7,LocalFunctions1,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\LocalFunctions1.cs,Main,The following statement contains a magic number: int fib(int n) => n < 2 ? n : fib(n - 1) + fib(n - 2);
Magic Number,CSharp7,LocalFunctions1,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\LocalFunctions1.cs,Main,The following statement contains a magic number: int fib(int n) => n < 2 ? n : fib(n - 1) + fib(n - 2);
Magic Number,CSharp7,LocalFunctions1,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\LocalFunctions1.cs,NonLocalVariables,The following statement contains a magic number: fib = n => n < 2 ? n : fib(n - 1) + fib(n - 2);
Magic Number,CSharp7,LocalFunctions1,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\LocalFunctions1.cs,NonLocalVariables,The following statement contains a magic number: fib = n => n < 2 ? n : fib(n - 1) + fib(n - 2);
Magic Number,CSharp7,LocalFunctions2,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\LocalFunctions2.cs,Main,The following statement contains a magic number: SelectBroken(source' x => x * 2);
Magic Number,CSharp7,LocalFunctions2,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\LocalFunctions2.cs,Main,The following statement contains a magic number: Select1(source' x => x * 2);
Magic Number,CSharp7,LocalFunctions2,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\LocalFunctions2.cs,Main,The following statement contains a magic number: Console.WriteLine(new[] { 1' 2' 3 }.Select1(x => x * 2).Count());
Magic Number,CSharp7,LocalFunctions2,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\LocalFunctions2.cs,Main,The following statement contains a magic number: Console.WriteLine(new[] { 1' 2' 3 }.Select1(x => x * 2).Count());
Magic Number,CSharp7,LocalFunctions2,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\LocalFunctions2.cs,Main,The following statement contains a magic number: Console.WriteLine(new[] { 1' 2' 3 }.Select1(x => x * 2).Count());
Magic Number,CSharp7,LocalFunctions2,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\LocalFunctions2.cs,Main,The following statement contains a magic number: Console.WriteLine(new[] { 1' 2' 3 }.Select2(x => x * 2).Count());
Magic Number,CSharp7,LocalFunctions2,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\LocalFunctions2.cs,Main,The following statement contains a magic number: Console.WriteLine(new[] { 1' 2' 3 }.Select2(x => x * 2).Count());
Magic Number,CSharp7,LocalFunctions2,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\LocalFunctions2.cs,Main,The following statement contains a magic number: Console.WriteLine(new[] { 1' 2' 3 }.Select2(x => x * 2).Count());
Magic Number,CSharp7,NamedTuple1,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\NamedTuple1.cs,Main,The following statement contains a magic number: var anon = new { x = 5' y = 3' z = "hello" };
Magic Number,CSharp7,NamedTuple1,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\NamedTuple1.cs,Main,The following statement contains a magic number: var anon = new { x = 5' y = 3' z = "hello" };
Magic Number,CSharp7,NamedTuple1,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\NamedTuple1.cs,Main,The following statement contains a magic number: tuple.x = 10;
Magic Number,CSharp7,NamedTuple1,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\NamedTuple1.cs,CreateTuple,The following statement contains a magic number: return (5' 3' "hello");
Magic Number,CSharp7,NamedTuple1,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\NamedTuple1.cs,CreateTuple,The following statement contains a magic number: return (5' 3' "hello");
Magic Number,CSharp7,NamedTuple1,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\NamedTuple1.cs,CreateTuple2,The following statement contains a magic number: return (10' 6' "world");
Magic Number,CSharp7,NamedTuple1,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\NamedTuple1.cs,CreateTuple2,The following statement contains a magic number: return (10' 6' "world");
Magic Number,CSharp7,NamedTuple2,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\NamedTuple2.cs,CreateTuple,The following statement contains a magic number: return (5' 3' "hello");
Magic Number,CSharp7,NamedTuple2,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\NamedTuple2.cs,CreateTuple,The following statement contains a magic number: return (5' 3' "hello");
Magic Number,CSharp7,OutDeconstruction,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\OutDeconstruction.cs,Main,The following statement contains a magic number: int code = 20;
Magic Number,CSharp7,OutDeconstruction,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\OutDeconstruction.cs,Main,The following statement contains a magic number: (code' message) = new Deconstructable { X = 10' Message = "Hi" };
Magic Number,CSharp7,OutDeconstruction,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\OutDeconstruction.cs,Main,The following statement contains a magic number: var instance = new Deconstructable { X = 10' Message = "Hi" };
Magic Number,CSharp7,OutVar,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\OutVar.cs,Main,The following statement contains a magic number: value6 = 10;
Magic Number,CSharp7,PatternMatching1,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\PatternMatching1.cs,Main,The following statement contains a magic number: PrintInt32s(10);
Magic Number,CSharp7,PatternMatching1,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\PatternMatching1.cs,Main,The following statement contains a magic number: PointlessConstantMatch(10);
Magic Number,CSharp7,PatternMatching1,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\PatternMatching1.cs,Main,The following statement contains a magic number: PointlessConstantMatch(5);
Magic Number,CSharp7,PatternMatching1,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\PatternMatching1.cs,Main,The following statement contains a magic number: LessPointlessConstantMatch(10);
Magic Number,CSharp7,PatternMatching1,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\PatternMatching1.cs,Main,The following statement contains a magic number: LessPointlessConstantMatch(5);
Magic Number,CSharp7,PatternMatching1,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\PatternMatching1.cs,Main,The following statement contains a magic number: LessPointlessConstantMatch(5L);
Magic Number,CSharp7,PatternMatching1,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\PatternMatching1.cs,PointlessConstantMatch,The following statement contains a magic number: x is 5
Magic Number,CSharp7,PatternMatching1,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\PatternMatching1.cs,LessPointlessConstantMatch,The following statement contains a magic number: x is 5
Magic Number,CSharp7,PatternMatching2,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\PatternMatching2.cs,Main,The following statement contains a magic number: Console.WriteLine(DoesItBlend(5L));
Magic Number,CSharp7,PatternMatching2,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\PatternMatching2.cs,Main,The following statement contains a magic number: Console.WriteLine(DoesItBlend(5));
Magic Number,CSharp7,PatternMatching2,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\PatternMatching2.cs,Main,The following statement contains a magic number: Console.WriteLine(DoesItBlend(6));
Magic Number,CSharp7,PatternMatching2,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\PatternMatching2.cs,Main,The following statement contains a magic number: Console.WriteLine(DoesItBlend(7));
Magic Number,CSharp7,PatternMatching2,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\PatternMatching2.cs,DoesItBlend,The following statement contains a magic number: switch (x)              {                  case 5:                      return "5s never blend";                  case int y when (y % 5 == 0):                  case int z when (z % 5 == 0):                      // Can't use y or z; they're not in scope                      return "I wish I could tell you the number...";                  case int y when (y & 1) == 1:                      Console.WriteLine(y);                      return "Odd numbers other than 5 always blend";                  // Scoping of y is interesting here - only this case.                  case int y:                      return "Even numbers are unreliable blenders";                  case string name when name.Length > 5:                      return "Long text blends";                  case var o:                      return $"Values of type {o.GetType()} may blend' or may not. I don't know.";                  // To demo: var vs default' and ordering.              }
Magic Number,CSharp7,PatternMatching2,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\PatternMatching2.cs,DoesItBlend,The following statement contains a magic number: switch (x)              {                  case 5:                      return "5s never blend";                  case int y when (y % 5 == 0):                  case int z when (z % 5 == 0):                      // Can't use y or z; they're not in scope                      return "I wish I could tell you the number...";                  case int y when (y & 1) == 1:                      Console.WriteLine(y);                      return "Odd numbers other than 5 always blend";                  // Scoping of y is interesting here - only this case.                  case int y:                      return "Even numbers are unreliable blenders";                  case string name when name.Length > 5:                      return "Long text blends";                  case var o:                      return $"Values of type {o.GetType()} may blend' or may not. I don't know.";                  // To demo: var vs default' and ordering.              }
Magic Number,CSharp7,PatternMatching2,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\PatternMatching2.cs,DoesItBlend,The following statement contains a magic number: switch (x)              {                  case 5:                      return "5s never blend";                  case int y when (y % 5 == 0):                  case int z when (z % 5 == 0):                      // Can't use y or z; they're not in scope                      return "I wish I could tell you the number...";                  case int y when (y & 1) == 1:                      Console.WriteLine(y);                      return "Odd numbers other than 5 always blend";                  // Scoping of y is interesting here - only this case.                  case int y:                      return "Even numbers are unreliable blenders";                  case string name when name.Length > 5:                      return "Long text blends";                  case var o:                      return $"Values of type {o.GetType()} may blend' or may not. I don't know.";                  // To demo: var vs default' and ordering.              }
Magic Number,CSharp7,PatternMatching2,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\PatternMatching2.cs,DoesItBlend,The following statement contains a magic number: switch (x)              {                  case 5:                      return "5s never blend";                  case int y when (y % 5 == 0):                  case int z when (z % 5 == 0):                      // Can't use y or z; they're not in scope                      return "I wish I could tell you the number...";                  case int y when (y & 1) == 1:                      Console.WriteLine(y);                      return "Odd numbers other than 5 always blend";                  // Scoping of y is interesting here - only this case.                  case int y:                      return "Even numbers are unreliable blenders";                  case string name when name.Length > 5:                      return "Long text blends";                  case var o:                      return $"Values of type {o.GetType()} may blend' or may not. I don't know.";                  // To demo: var vs default' and ordering.              }
Magic Number,CSharp7,RefLocal,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\RefLocal.cs,Main,The following statement contains a magic number: BigStruct[] array = new BigStruct[1000];
Magic Number,CSharp7,RefReturn,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\RefReturn.cs,Main,The following statement contains a magic number: i < 20
Magic Number,CSharp7,RefReturn,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\RefReturn.cs,GetRandomVariable,The following statement contains a magic number: rng.NextDouble() >= 0.5
Magic Number,CSharp7,Summing1,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\Summing1.cs,Main,The following statement contains a magic number: var result = SumAndCount(new[] { 5' 3' 1 });
Magic Number,CSharp7,Summing1,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\Summing1.cs,Main,The following statement contains a magic number: var result = SumAndCount(new[] { 5' 3' 1 });
Magic Number,CSharp7,Summing2,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\Summing2.cs,Main,The following statement contains a magic number: Console.WriteLine(SumAndCount(new[] { 5' 3' 1 }));
Magic Number,CSharp7,Summing2,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\Summing2.cs,Main,The following statement contains a magic number: Console.WriteLine(SumAndCount(new[] { 5' 3' 1 }));
Magic Number,CSharp7,Summing3,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\Summing3.cs,Main,The following statement contains a magic number: Console.WriteLine(SumAndCount(new[] { 5' 3' 1 }));
Magic Number,CSharp7,Summing3,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\Summing3.cs,Main,The following statement contains a magic number: Console.WriteLine(SumAndCount(new[] { 5' 3' 1 }));
Magic Number,CSharp7,TupleConstruction,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\TupleConstruction.cs,Main,The following statement contains a magic number: var tuple1 = (1' 2);
Magic Number,CSharp7,TupleConstruction,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\TupleConstruction.cs,Main,The following statement contains a magic number: var tuple2 = new ValueTuple<int' long>(1' 2);
Magic Number,CSharp7,TupleConstruction,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\TupleConstruction.cs,Main,The following statement contains a magic number: var tuple3 = (a: 1' b: 2);
Magic Number,CSharp7,TupleConstruction,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\TupleConstruction.cs,Main,The following statement contains a magic number: (long a' int b) tuple4 = (1' 2);
Magic Number,CSharp7,TupleConstruction,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\TupleConstruction.cs,Main,The following statement contains a magic number: (int' int) tuple5 = (a: 1' b: 2);
Magic Number,CSharp7,TupleConversion,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\TupleConversion.cs,Main,The following statement contains a magic number: (long' long) integers = (10' 2);
Magic Number,CSharp7,TupleConversion,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\TupleConversion.cs,Main,The following statement contains a magic number: (long' long) integers = (10' 2);
Magic Number,CSharp7,TupleConversion,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\TupleConversion.cs,Main,The following statement contains a magic number: (byte' byte) bytes = (5' 10);
Magic Number,CSharp7,TupleConversion,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\TupleConversion.cs,Main,The following statement contains a magic number: (byte' byte) bytes = (5' 10);
Magic Number,CSharp7,TupleDeconstruction,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\TupleDeconstruction.cs,CreateTuple,The following statement contains a magic number: return (5' 3' "hello");
Magic Number,CSharp7,TupleDeconstruction,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\TupleDeconstruction.cs,CreateTuple,The following statement contains a magic number: return (5' 3' "hello");
Magic Number,CSharp7,TupleMembers,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\TupleMembers.cs,Main,The following statement contains a magic number: var t1 = (x: 1' y: 2);
Magic Number,CSharp7,TupleMembers,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\TupleMembers.cs,Main,The following statement contains a magic number: var t2 = (a: 1' b: 2);
Magic Number,CSharp7,TupleMembers,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\TupleMembers.cs,Main,The following statement contains a magic number: var t3 = (a: 1' b: 2);
Magic Number,CSharp7,TupleParameters,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\TupleParameters.cs,Main,The following statement contains a magic number: (int foo' int bar) result = Add((5' 3)' (6' 4));
Magic Number,CSharp7,TupleParameters,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\TupleParameters.cs,Main,The following statement contains a magic number: (int foo' int bar) result = Add((5' 3)' (6' 4));
Magic Number,CSharp7,TupleParameters,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\TupleParameters.cs,Main,The following statement contains a magic number: (int foo' int bar) result = Add((5' 3)' (6' 4));
Magic Number,CSharp7,TupleParameters,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\TupleParameters.cs,Main,The following statement contains a magic number: (int foo' int bar) result = Add((5' 3)' (6' 4));
Magic Number,CSharp7,TupleTypeEquivalence,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\TupleTypeEquivalence.cs,Main,The following statement contains a magic number: var t2 = (x: 1' y: 2);
Magic Number,CSharp7,TupleTypeEquivalence,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\TupleTypeEquivalence.cs,Main,The following statement contains a magic number: var t3 = (a: 2' b: 1);
Magic Number,CSharp7,TupleTypeEquivalence,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\TupleTypeEquivalence.cs,Main,The following statement contains a magic number: var t4 = (a: 1' b: 2L);
Magic Number,CSharp7,TupleTypeEquivalence,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\TupleTypeEquivalence.cs,Main,The following statement contains a magic number: var arity3 = (a: 1' b: 2' c: 3);
Magic Number,CSharp7,TupleTypeEquivalence,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\TupleTypeEquivalence.cs,Main,The following statement contains a magic number: var arity3 = (a: 1' b: 2' c: 3);
Magic Number,CSharp7,TupleTypeEquivalence,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\TupleTypeEquivalence.cs,Main,The following statement contains a magic number: arity3 = t1.With(2);
Magic Number,CSharp7,UnnamedTuple,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\UnnamedTuple.cs,CreateTuple,The following statement contains a magic number: return ValueTuple.Create(5' 3' "hello");
Magic Number,CSharp7,UnnamedTuple,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\UnnamedTuple.cs,CreateTuple,The following statement contains a magic number: return ValueTuple.Create(5' 3' "hello");
Missing Default,CSharp7,PatternMatching2,D:\research\architectureSmells\repos\jskeet_DemoCode\CSharp7\CSharp7\PatternMatching2.cs,DoesItBlend,The following switch statement is missing a default case: switch (x)              {                  case 5:                      return "5s never blend";                  case int y when (y % 5 == 0):                  case int z when (z % 5 == 0):                      // Can't use y or z; they're not in scope                      return "I wish I could tell you the number...";                  case int y when (y & 1) == 1:                      Console.WriteLine(y);                      return "Odd numbers other than 5 always blend";                  // Scoping of y is interesting here - only this case.                  case int y:                      return "Even numbers are unreliable blenders";                  case string name when name.Length > 5:                      return "Long text blends";                  case var o:                      return $"Values of type {o.GetType()} may blend' or may not. I don't know.";                  // To demo: var vs default' and ordering.              }
