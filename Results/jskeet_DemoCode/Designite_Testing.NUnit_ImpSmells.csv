Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Testing.NUnit,StockBrokerTest,D:\research\architectureSmells\repos\jskeet_DemoCode\AsyncIntro\Code\Testing.NUnit\StockBrokerTest.cs,CalculateNetWorth_EmptyPortfolio,The following statement contains a magic number: var portfolioResult = tardis.ScheduleSuccess(2' new List<StockHolding>());
Magic Number,Testing.NUnit,StockBrokerTest,D:\research\architectureSmells\repos\jskeet_DemoCode\AsyncIntro\Code\Testing.NUnit\StockBrokerTest.cs,CalculateNetWorth_SingleItem,The following statement contains a magic number: var portfolio = new List<StockHolding>              {                  new StockHolding("FOO"' 10)              };
Magic Number,Testing.NUnit,StockBrokerTest,D:\research\architectureSmells\repos\jskeet_DemoCode\AsyncIntro\Code\Testing.NUnit\StockBrokerTest.cs,CalculateNetWorth_SingleItem,The following statement contains a magic number: var portfolioResult = tardis.ScheduleSuccess(2' portfolio);
Magic Number,Testing.NUnit,StockBrokerTest,D:\research\architectureSmells\repos\jskeet_DemoCode\AsyncIntro\Code\Testing.NUnit\StockBrokerTest.cs,CalculateNetWorth_SingleItem,The following statement contains a magic number: var priceResult = tardis.ScheduleSuccess<decimal?>(3' 34.25m);
Magic Number,Testing.NUnit,StockBrokerTest,D:\research\architectureSmells\repos\jskeet_DemoCode\AsyncIntro\Code\Testing.NUnit\StockBrokerTest.cs,CalculateNetWorth_SingleItem,The following statement contains a magic number: var priceResult = tardis.ScheduleSuccess<decimal?>(3' 34.25m);
Magic Number,Testing.NUnit,StockBrokerTest,D:\research\architectureSmells\repos\jskeet_DemoCode\AsyncIntro\Code\Testing.NUnit\StockBrokerTest.cs,CalculateNetWorth_SingleItem,The following statement contains a magic number: tardis.ExecuteInContext(advancer =>              {                  var worth = broker.CalculateWorthAsync("jon"' "pass");                  // Not complete until auth has completed...                  Assert.IsFalse(worth.IsCompleted);                  advancer.Advance();                  // Not complete until portfolio fetch has completed...                  Assert.IsFalse(worth.IsCompleted);                  advancer.Advance();                  // Not complete until price fetch has completed...                  Assert.IsFalse(worth.IsCompleted);                  advancer.Advance();                  AssertCompletion(worth' 10 * 34.25m);              });
Magic Number,Testing.NUnit,StockBrokerTest,D:\research\architectureSmells\repos\jskeet_DemoCode\AsyncIntro\Code\Testing.NUnit\StockBrokerTest.cs,CalculateNetWorth_SingleItem,The following statement contains a magic number: tardis.ExecuteInContext(advancer =>              {                  var worth = broker.CalculateWorthAsync("jon"' "pass");                  // Not complete until auth has completed...                  Assert.IsFalse(worth.IsCompleted);                  advancer.Advance();                  // Not complete until portfolio fetch has completed...                  Assert.IsFalse(worth.IsCompleted);                  advancer.Advance();                  // Not complete until price fetch has completed...                  Assert.IsFalse(worth.IsCompleted);                  advancer.Advance();                  AssertCompletion(worth' 10 * 34.25m);              });
Magic Number,Testing.NUnit,StockBrokerTest,D:\research\architectureSmells\repos\jskeet_DemoCode\AsyncIntro\Code\Testing.NUnit\StockBrokerTest.cs,CalculateNetWorth_MultipleItems,The following statement contains a magic number: var portfolio = new List<StockHolding>              {                  new StockHolding("FOO"' 10)'                  new StockHolding("BAR"' 5)              };
Magic Number,Testing.NUnit,StockBrokerTest,D:\research\architectureSmells\repos\jskeet_DemoCode\AsyncIntro\Code\Testing.NUnit\StockBrokerTest.cs,CalculateNetWorth_MultipleItems,The following statement contains a magic number: var portfolio = new List<StockHolding>              {                  new StockHolding("FOO"' 10)'                  new StockHolding("BAR"' 5)              };
Magic Number,Testing.NUnit,StockBrokerTest,D:\research\architectureSmells\repos\jskeet_DemoCode\AsyncIntro\Code\Testing.NUnit\StockBrokerTest.cs,CalculateNetWorth_MultipleItems,The following statement contains a magic number: var portfolioResult = tardis.ScheduleSuccess(2' portfolio);
Magic Number,Testing.NUnit,StockBrokerTest,D:\research\architectureSmells\repos\jskeet_DemoCode\AsyncIntro\Code\Testing.NUnit\StockBrokerTest.cs,CalculateNetWorth_MultipleItems,The following statement contains a magic number: var fooResult = tardis.ScheduleSuccess<decimal?>(3' 20m);
Magic Number,Testing.NUnit,StockBrokerTest,D:\research\architectureSmells\repos\jskeet_DemoCode\AsyncIntro\Code\Testing.NUnit\StockBrokerTest.cs,CalculateNetWorth_MultipleItems,The following statement contains a magic number: var fooResult = tardis.ScheduleSuccess<decimal?>(3' 20m);
Magic Number,Testing.NUnit,StockBrokerTest,D:\research\architectureSmells\repos\jskeet_DemoCode\AsyncIntro\Code\Testing.NUnit\StockBrokerTest.cs,CalculateNetWorth_MultipleItems,The following statement contains a magic number: var barResult = tardis.ScheduleSuccess<decimal?>(4' 10m);
Magic Number,Testing.NUnit,StockBrokerTest,D:\research\architectureSmells\repos\jskeet_DemoCode\AsyncIntro\Code\Testing.NUnit\StockBrokerTest.cs,CalculateNetWorth_MultipleItems,The following statement contains a magic number: var barResult = tardis.ScheduleSuccess<decimal?>(4' 10m);
Magic Number,Testing.NUnit,StockBrokerTest,D:\research\architectureSmells\repos\jskeet_DemoCode\AsyncIntro\Code\Testing.NUnit\StockBrokerTest.cs,CalculateNetWorth_MultipleItems,The following statement contains a magic number: tardis.ExecuteInContext(advancer =>              {                  var worth = broker.CalculateWorthAsync("jon"' "pass");                  advancer.AdvanceBy(3);                  // Still waiting' after first price has been fetched...                  Assert.IsFalse(worth.IsCompleted);                  advancer.Advance();                  AssertCompletion(worth' 10 * 20m + 5 * 10m);              });
Magic Number,Testing.NUnit,StockBrokerTest,D:\research\architectureSmells\repos\jskeet_DemoCode\AsyncIntro\Code\Testing.NUnit\StockBrokerTest.cs,CalculateNetWorth_MultipleItems,The following statement contains a magic number: tardis.ExecuteInContext(advancer =>              {                  var worth = broker.CalculateWorthAsync("jon"' "pass");                  advancer.AdvanceBy(3);                  // Still waiting' after first price has been fetched...                  Assert.IsFalse(worth.IsCompleted);                  advancer.Advance();                  AssertCompletion(worth' 10 * 20m + 5 * 10m);              });
Magic Number,Testing.NUnit,StockBrokerTest,D:\research\architectureSmells\repos\jskeet_DemoCode\AsyncIntro\Code\Testing.NUnit\StockBrokerTest.cs,CalculateNetWorth_MultipleItems,The following statement contains a magic number: tardis.ExecuteInContext(advancer =>              {                  var worth = broker.CalculateWorthAsync("jon"' "pass");                  advancer.AdvanceBy(3);                  // Still waiting' after first price has been fetched...                  Assert.IsFalse(worth.IsCompleted);                  advancer.Advance();                  AssertCompletion(worth' 10 * 20m + 5 * 10m);              });
Magic Number,Testing.NUnit,StockBrokerTest,D:\research\architectureSmells\repos\jskeet_DemoCode\AsyncIntro\Code\Testing.NUnit\StockBrokerTest.cs,CalculateNetWorth_MultipleItems,The following statement contains a magic number: tardis.ExecuteInContext(advancer =>              {                  var worth = broker.CalculateWorthAsync("jon"' "pass");                  advancer.AdvanceBy(3);                  // Still waiting' after first price has been fetched...                  Assert.IsFalse(worth.IsCompleted);                  advancer.Advance();                  AssertCompletion(worth' 10 * 20m + 5 * 10m);              });
Magic Number,Testing.NUnit,StockBrokerTest,D:\research\architectureSmells\repos\jskeet_DemoCode\AsyncIntro\Code\Testing.NUnit\StockBrokerTest.cs,CalculateNetWorth_MultipleItems,The following statement contains a magic number: tardis.ExecuteInContext(advancer =>              {                  var worth = broker.CalculateWorthAsync("jon"' "pass");                  advancer.AdvanceBy(3);                  // Still waiting' after first price has been fetched...                  Assert.IsFalse(worth.IsCompleted);                  advancer.Advance();                  AssertCompletion(worth' 10 * 20m + 5 * 10m);              });
Magic Number,Testing.NUnit,StockBrokerTest,D:\research\architectureSmells\repos\jskeet_DemoCode\AsyncIntro\Code\Testing.NUnit\StockBrokerTest.cs,CalculateNetWorth_MultipleItems_IncludingNullValue,The following statement contains a magic number: var portfolio = new List<StockHolding>              {                  new StockHolding("FOO"' 10)'                  new StockHolding("BAR"' 5)              };
Magic Number,Testing.NUnit,StockBrokerTest,D:\research\architectureSmells\repos\jskeet_DemoCode\AsyncIntro\Code\Testing.NUnit\StockBrokerTest.cs,CalculateNetWorth_MultipleItems_IncludingNullValue,The following statement contains a magic number: var portfolio = new List<StockHolding>              {                  new StockHolding("FOO"' 10)'                  new StockHolding("BAR"' 5)              };
Magic Number,Testing.NUnit,StockBrokerTest,D:\research\architectureSmells\repos\jskeet_DemoCode\AsyncIntro\Code\Testing.NUnit\StockBrokerTest.cs,CalculateNetWorth_MultipleItems_IncludingNullValue,The following statement contains a magic number: var portfolioResult = tardis.ScheduleSuccess(2' portfolio);
Magic Number,Testing.NUnit,StockBrokerTest,D:\research\architectureSmells\repos\jskeet_DemoCode\AsyncIntro\Code\Testing.NUnit\StockBrokerTest.cs,CalculateNetWorth_MultipleItems_IncludingNullValue,The following statement contains a magic number: var fooResult = tardis.ScheduleSuccess<decimal?>(3' 20m);
Magic Number,Testing.NUnit,StockBrokerTest,D:\research\architectureSmells\repos\jskeet_DemoCode\AsyncIntro\Code\Testing.NUnit\StockBrokerTest.cs,CalculateNetWorth_MultipleItems_IncludingNullValue,The following statement contains a magic number: var fooResult = tardis.ScheduleSuccess<decimal?>(3' 20m);
Magic Number,Testing.NUnit,StockBrokerTest,D:\research\architectureSmells\repos\jskeet_DemoCode\AsyncIntro\Code\Testing.NUnit\StockBrokerTest.cs,CalculateNetWorth_MultipleItems_IncludingNullValue,The following statement contains a magic number: var barResult = tardis.ScheduleSuccess<decimal?>(4' null);
Magic Number,Testing.NUnit,StockBrokerTest,D:\research\architectureSmells\repos\jskeet_DemoCode\AsyncIntro\Code\Testing.NUnit\StockBrokerTest.cs,CalculateNetWorth_MultipleItems_IncludingNullValue,The following statement contains a magic number: tardis.ExecuteInContext(advancer =>              {                  var worth = broker.CalculateWorthAsync("jon"' "pass");                  advancer.AdvanceBy(4);                  AssertCompletion(worth' 10 * 20m);              });
Magic Number,Testing.NUnit,StockBrokerTest,D:\research\architectureSmells\repos\jskeet_DemoCode\AsyncIntro\Code\Testing.NUnit\StockBrokerTest.cs,CalculateNetWorth_MultipleItems_IncludingNullValue,The following statement contains a magic number: tardis.ExecuteInContext(advancer =>              {                  var worth = broker.CalculateWorthAsync("jon"' "pass");                  advancer.AdvanceBy(4);                  AssertCompletion(worth' 10 * 20m);              });
Magic Number,Testing.NUnit,StockBrokerTest,D:\research\architectureSmells\repos\jskeet_DemoCode\AsyncIntro\Code\Testing.NUnit\StockBrokerTest.cs,CalculateNetWorth_MultipleItems_IncludingNullValue,The following statement contains a magic number: tardis.ExecuteInContext(advancer =>              {                  var worth = broker.CalculateWorthAsync("jon"' "pass");                  advancer.AdvanceBy(4);                  AssertCompletion(worth' 10 * 20m);              });
