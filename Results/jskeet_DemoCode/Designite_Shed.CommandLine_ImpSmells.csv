Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Shed.CommandLine,Program,C:\repos\jskeet_DemoCode\Shed\Shed.CommandLine\Program.cs,Main,The length of the statement  "                var command = controller.Commands.SingleOrDefault(c => c.Name.Equals(args[1]' StringComparison.CurrentCultureIgnoreCase)); " is 122.
Magic Number,Shed.CommandLine,Program,C:\repos\jskeet_DemoCode\Shed\Shed.CommandLine\Program.cs,Main,The following statement contains a magic number: if (args.Length == 0 || (args[0] == "help" && args.Length == 1))              {                  Console.WriteLine("Shed automation CLI. Available controllers and commands:");                  ListControllers();                  return;              }              else if (args[0] == "help") // Controller specific help...              {                  var controller = GetController(args[1]);                  if (controller == null)                  {                      Console.WriteLine($"No such controller: {args[1]}");                      ListControllers();                      return;                  }                  ListCommands(controller);                  return;              }              else              {                  var controller = GetController(args[0]);                  if (controller == null)                  {                      Console.WriteLine($"No such controller: {args[0]}");                      ListControllers();                      return;                  }                    if (args.Length == 1)                  {                      ListCommands(controller);                      return;                  }                                    var command = controller.Commands.SingleOrDefault(c => c.Name.Equals(args[1]' StringComparison.CurrentCultureIgnoreCase));                  if (command == null)                  {                      Console.WriteLine($"No such command: {args[1]}");                      ListCommands(controller);                      return;                  }                    // Great' we can actually do something...                  try                  {                      command.Execute(args.Skip(2).ToArray());                  }                  catch (Exception e)                  {                      Console.WriteLine($"Error: {e}");                  }              }
