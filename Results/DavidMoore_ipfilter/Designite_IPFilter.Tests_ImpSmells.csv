Implementation smell,Namespace,Class,File,Method,Description
Long Statement,IPFilter.Tests,ListMergerTests,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Tests\UnitTests\IPFilter.Tests\ListMergerTests.cs,Merge,The length of the statement  "            var lines1 = new[] { "000.000.000.000 - 000.255.255.255 ' 000 ' Bogon"' "001.002.008.000 - 001.002.008.255 ' 000 ' China Internet Information Center (CNNIC)" }; " is 160.
Long Statement,IPFilter.Tests.Formats,DatParserTests,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Tests\UnitTests\IPFilter.Tests\Formats\DatParserTests.cs,ParseLine,The length of the statement  "            Assert.AreEqual("192.168.1.1 - 192.168.1.254"' DatParser.ParseLine("192.168.1.1 - 192.168.1.254 ' 000 ' Some organization")); " is 125.
Long Statement,IPFilter.Tests.Formats,DatParserTests,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Tests\UnitTests\IPFilter.Tests\Formats\DatParserTests.cs,ParseLine,The length of the statement  "            Assert.AreEqual("192.168.1.1 - 192.168.1.254"' DatParser.ParseLine("192.168.1.1 - 192.168.1.254 ' 123 ' Some organization")); " is 125.
Long Statement,IPFilter.Tests.Formats,DatParserTests,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Tests\UnitTests\IPFilter.Tests\Formats\DatParserTests.cs,ParseLine,The length of the statement  "            Assert.AreEqual("12.28.15.152 - 12.28.15.159"' DatParser.ParseLine("012.028.015.152 - 012.028.015.159 ' 000 ' HILTON HOTEL CORPORATION")); " is 138.
Long Statement,IPFilter.Tests.Formats,EmuleWriterTests,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Tests\UnitTests\IPFilter.Tests\Formats\EmuleWriterTests.cs,Write,The length of the statement  "                Assert.AreEqual("1.2.3.4         - 1.2.3.255       '   0 ' Testing the description\r\n"' Encoding.ASCII.GetString(stream.ToArray())); " is 133.
Long Statement,IPFilter.Tests.Formats,FilterEntryComparerTests,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Tests\UnitTests\IPFilter.Tests\Formats\FilterEntryComparerTests.cs,Equal,The length of the statement  "            Assert.AreEqual(0' FilterEntry.Comparer.Compare( new FilterEntry("192.168.1.1"' "192.168.1.254")' new FilterEntry("192.168.1.1"' "192.168.1.254"))); " is 148.
Long Statement,IPFilter.Tests.Formats,FilterEntryComparerTests,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Tests\UnitTests\IPFilter.Tests\Formats\FilterEntryComparerTests.cs,LessThan,The length of the statement  "            Assert.AreEqual(-1' FilterEntry.Comparer.Compare(new FilterEntry("192.168.1.1"' "192.168.1.253")' new FilterEntry("192.168.1.1"' "192.168.1.254"))); " is 148.
Long Statement,IPFilter.Tests.Formats,FilterEntryComparerTests,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Tests\UnitTests\IPFilter.Tests\Formats\FilterEntryComparerTests.cs,LessThan,The length of the statement  "            Assert.AreEqual(-1' FilterEntry.Comparer.Compare(new FilterEntry("192.168.1.1"' "192.168.1.253")' new FilterEntry("192.168.1.2"' "192.168.1.2"))); " is 146.
Long Statement,IPFilter.Tests.Formats,FilterEntryComparerTests,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Tests\UnitTests\IPFilter.Tests\Formats\FilterEntryComparerTests.cs,GreaterThan,The length of the statement  "            Assert.AreEqual(1' FilterEntry.Comparer.Compare(new FilterEntry("192.168.1.2"' "192.168.1.2")' new FilterEntry("192.168.1.1"' "192.168.1.254"))); " is 145.
Long Statement,IPFilter.Tests.Formats,FilterEntryComparerTests,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Tests\UnitTests\IPFilter.Tests\Formats\FilterEntryComparerTests.cs,GreaterThan,The length of the statement  "            Assert.IsTrue(FilterEntry.Comparer.Compare(new FilterEntry("192.168.1.2"' "192.168.1.253")' new FilterEntry("192.168.1.2"' "192.168.1.250")) > 0); " is 146.
Long Statement,IPFilter.Tests.Formats,UTorrentWriterTests,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Tests\UnitTests\IPFilter.Tests\Formats\UTorrentWriterTests.cs,Write,The length of the statement  "                Assert.AreEqual("001.002.003.004 - 001.002.003.255 ' 000 ' Testing the description\r\n"' Encoding.ASCII.GetString(stream.ToArray())); " is 133.
Magic Number,IPFilter.Tests,DestinationPathsProviderTests,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Tests\UnitTests\IPFilter.Tests\DestinationPathsProviderTests.cs,Strips_duplicates,The following statement contains a magic number: Assert.AreEqual(2' results.Count);
Magic Number,IPFilter.Tests,ListMergerTests,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Tests\UnitTests\IPFilter.Tests\ListMergerTests.cs,Merge,The following statement contains a magic number: Assert.AreEqual("001.002.008.000 - 001.002.008.255 ' 000 ' China Internet Information Center (CNNIC)"' result[2]);
Magic Number,IPFilter.Tests,ListMergerTests,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Tests\UnitTests\IPFilter.Tests\ListMergerTests.cs,Merge,The following statement contains a magic number: Assert.AreEqual("001.009.096.105 - 001.009.096.105 ' 000 ' Botnet on Telekom Malaysia"' result[3]);
Magic Number,IPFilter.Tests,ListMergerTests,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Tests\UnitTests\IPFilter.Tests\ListMergerTests.cs,Merge,The following statement contains a magic number: Assert.AreEqual("001.009.102.251 - 001.009.102.251 ' 000 ' Botnet on Telekom Malaysia"' result[4]);
Magic Number,IPFilter.Tests,AddressTests,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Tests\UnitTests\IPFilter.Tests\AddressTests.cs,Ctor,The following statement contains a magic number: Assert.AreEqual( (byte)192' address.OctetA);
Magic Number,IPFilter.Tests,AddressTests,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Tests\UnitTests\IPFilter.Tests\AddressTests.cs,Ctor,The following statement contains a magic number: Assert.AreEqual( (byte)168' address.OctetB);
Magic Number,IPFilter.Tests,AddressTests,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Tests\UnitTests\IPFilter.Tests\AddressTests.cs,Ctor,The following statement contains a magic number: Assert.AreEqual( (byte)123' address.OctetD);
Magic Number,IPFilter.Tests,AddressTests,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Tests\UnitTests\IPFilter.Tests\AddressTests.cs,Ctor,The following statement contains a magic number: Assert.AreEqual((byte)192' address.OctetA);
Magic Number,IPFilter.Tests,AddressTests,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Tests\UnitTests\IPFilter.Tests\AddressTests.cs,Ctor,The following statement contains a magic number: Assert.AreEqual((byte)168' address.OctetB);
Magic Number,IPFilter.Tests,AddressTests,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Tests\UnitTests\IPFilter.Tests\AddressTests.cs,Ctor,The following statement contains a magic number: Assert.AreEqual((byte)123' address.OctetD);
Magic Number,IPFilter.Tests,ZipEnumeratorTests,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Tests\UnitTests\IPFilter.Tests\ZipEnumeratorTests.cs,GetFilters,The following statement contains a magic number: visitor.Verify(x => x.Visit(It.IsAny<FileNode>())' Times.Exactly(3));
Magic Number,IPFilter.Tests.Formats,FilterCollectionTests,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Tests\UnitTests\IPFilter.Tests\Formats\FilterCollectionTests.cs,Merge,The following statement contains a magic number: Assert.AreEqual(3' result.Count);
Magic Number,IPFilter.Tests.Formats,FilterCollectionTests,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Tests\UnitTests\IPFilter.Tests\Formats\FilterCollectionTests.cs,Merge,The following statement contains a magic number: Assert.AreEqual( new FilterEntry("192.168.1.1"' "192.168.1.254")' result[2] );
Magic Number,IPFilter.Tests.Formats,FilterCollectionTests,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Tests\UnitTests\IPFilter.Tests\Formats\FilterCollectionTests.cs,Sort,The following statement contains a magic number: Assert.AreEqual(3' result.Count);
Magic Number,IPFilter.Tests.Formats,FilterCollectionTests,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Tests\UnitTests\IPFilter.Tests\Formats\FilterCollectionTests.cs,Sort,The following statement contains a magic number: Assert.AreEqual(new FilterEntry("192.168.1.7"' "192.168.1.253")' result[2]);
Magic Number,IPFilter.Tests.Formats,IpAddressTests,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Tests\UnitTests\IPFilter.Tests\Formats\IpAddressTests.cs,GetBytes,The following statement contains a magic number: Assert.AreEqual(0x03' bytes[2]);
Magic Number,IPFilter.Tests.Formats,IpAddressTests,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Tests\UnitTests\IPFilter.Tests\Formats\IpAddressTests.cs,GetBytes,The following statement contains a magic number: Assert.AreEqual(254' bytes[3]);
Magic Number,IPFilter.Tests.Formats,IpAddressTests,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Tests\UnitTests\IPFilter.Tests\Formats\IpAddressTests.cs,GetBytes,The following statement contains a magic number: Assert.AreEqual(254' bytes[3]);
