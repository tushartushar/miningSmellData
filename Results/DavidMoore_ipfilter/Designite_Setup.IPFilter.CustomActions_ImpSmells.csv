Implementation smell,Namespace,Class,File,Method,Description
Long Method,IPFilter.Setup.CustomActions.IO,FileSystemEnumerator<TSource>,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\FileSystemEnumerator.cs,MoveNext,The method has 112 lines of code.
Long Method,IPFilter.Setup.CustomActions.IO,PathHelper,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelper.cs,MemCopyImpl,The method has 142 lines of code.
Long Method,IPFilter.Setup.CustomActions.IO,PathHelperMethods,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelperMethods.cs,NormalizePath,The method has 401 lines of code.
Complex Method,IPFilter.Setup.CustomActions,ClickOnceRegistry,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\ClickOnceRegistry.cs,ReadMarks,Cyclomatic complexity of the method is 8
Complex Method,IPFilter.Setup.CustomActions,RemoveRegistryKeys,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\RemoveRegistryKeys.cs,Prepare,Cyclomatic complexity of the method is 8
Complex Method,IPFilter.Setup.CustomActions.IO,ErrorHelper,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\ErrorHelper.cs,WinIoError,Cyclomatic complexity of the method is 11
Complex Method,IPFilter.Setup.CustomActions.IO,FileSystemEnumerator<TSource>,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\FileSystemEnumerator.cs,MoveNext,Cyclomatic complexity of the method is 19
Complex Method,IPFilter.Setup.CustomActions.IO,PathHelper,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelper.cs,GetFullPathName,Cyclomatic complexity of the method is 10
Complex Method,IPFilter.Setup.CustomActions.IO,PathHelper,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelper.cs,TryExpandShortFileName,Cyclomatic complexity of the method is 8
Complex Method,IPFilter.Setup.CustomActions.IO,PathHelperMethods,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelperMethods.cs,NormalizePath,Cyclomatic complexity of the method is 66
Long Parameter List,IPFilter.Setup.CustomActions,Win32Api,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\Win32Api.cs,FormatMessage,The method has 7 parameters. Parameters: dwFlags' lpSource' dwMessageId' dwLanguageId' lpBuffer' nSize' vaListArguments
Long Parameter List,IPFilter.Setup.CustomActions.IO,FileSystemEnumerator<TSource>,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\FileSystemEnumerator.cs,FileSystemEnumerator,The method has 5 parameters. Parameters: path' originalUserPath' searchPattern' searchOption' resultHandler
Long Parameter List,IPFilter.Setup.CustomActions.IO,FileSystemEnumerator<TSource>,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\FileSystemEnumerator.cs,FileSystemEnumerator,The method has 6 parameters. Parameters: fullPath' normalizedSearchPath' searchCriteria' userPath' searchOption' resultHandler
Long Parameter List,IPFilter.Setup.CustomActions.IO,PathHelper,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelper.cs,MemCopy,The method has 5 parameters. Parameters: src' srcIndex' dest' destIndex' len
Long Parameter List,IPFilter.Setup.CustomActions.IO,PathHelper,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelper.cs,MemCopy,The method has 5 parameters. Parameters: src' srcIndex' pDest' destIndex' len
Long Parameter List,IPFilter.Setup.CustomActions.IO,PathHelper,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelper.cs,MemCopy,The method has 5 parameters. Parameters: pSrc' srcIndex' pDest' destIndex' len
Long Identifier,IPFilter.Setup.CustomActions,Win32Error,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\Win32Error.cs,,The length of the parameter ERROR_TRUSTED_RELATIONSHIP_FAILURE is 34.
Long Identifier,IPFilter.Setup.CustomActions.IO,FileSystemEnumerator<TSource>,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\FileSystemEnumerator.cs,,The length of the parameter needsParentPathDiscoveryDemand is 30.
Long Statement,IPFilter.Setup.CustomActions,DeleteHelper,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\DeleteHelper.cs,DeleteFileSystemInfoWithSchedulingIfNecessary,The length of the statement  "                    foreach (var file in new FileSystemEnumerator<FileSystemInfo>(info.FullName' info.FullName' "*"' SearchOption.TopDirectoryOnly' new FileSystemInfoResultHandler())) " is 163.
Long Statement,IPFilter.Setup.CustomActions.IO,ErrorHelper,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\ErrorHelper.cs,GetDisplayablePath,The length of the statement  "            if( (PathHelperMethods.IsDirectorySeparator(path[0]) && PathHelperMethods.IsDirectorySeparator(path[1])) || path[1] == Path.VolumeSeparatorChar) " is 144.
Long Statement,IPFilter.Setup.CustomActions.IO,FileSystemEnumerator<TSource>,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\FileSystemEnumerator.cs,Clone,The length of the statement  "            return new FileSystemEnumerator<TSource>(fullPath' normalizedSearchPath' searchCriteria' userPath' searchOption' resultHandler); " is 128.
Long Statement,IPFilter.Setup.CustomActions.IO,FileSystemEnumerator<TSource>,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\FileSystemEnumerator.cs,MoveNext,The length of the statement  "                    Contract.Assert(searchData.searchOptions != SearchOption.TopDirectoryOnly' "should not reach this code path if searchOption == TopDirectoryOnly"); " is 146.
Long Statement,IPFilter.Setup.CustomActions.IO,FileSystemEnumerator<TSource>,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\FileSystemEnumerator.cs,MoveNext,The length of the statement  "                            if( hr == Win32Error.ERROR_ACCESS_DENIED || hr == Win32Error.ERROR_FILE_NOT_FOUND || hr == Win32Error.ERROR_NO_MORE_FILES || hr == Win32Error.ERROR_PATH_NOT_FOUND ) " is 164.
Long Statement,IPFilter.Setup.CustomActions.IO,FileSystemEnumerator<TSource>,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\FileSystemEnumerator.cs,AddSearchableDirsToStack,The length of the statement  "                    if( hr == Win32Error.ERROR_ACCESS_DENIED || hr == Win32Error.ERROR_FILE_NOT_FOUND || hr == Win32Error.ERROR_NO_MORE_FILES || hr == Win32Error.ERROR_PATH_NOT_FOUND ) " is 164.
Long Statement,IPFilter.Setup.CustomActions.IO,FileSystemEnumerator<TSource>,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\FileSystemEnumerator.cs,AddSearchableDirsToStack,The length of the statement  "                        if ((searchDataSubDir.searchOption == SearchOption.AllDirectories) && (0 != (data.dwFileAttributes & Win32Native.FILE_ATTRIBUTE_REPARSE_POINT))) " is 144.
Long Statement,IPFilter.Setup.CustomActions.IO,PathHelperMethods,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelperMethods.cs,CheckSearchPattern,The length of the statement  "                if (index + 2 == searchPattern.Length) throw new ArgumentException("Invalid search pattern: " + searchPattern' "searchPattern"); " is 128.
Complex Conditional,IPFilter.Setup.CustomActions.IO,FileSystemEnumerator<TSource>,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\FileSystemEnumerator.cs,MoveNext,The conditional expression  "hr == Win32Error.ERROR_ACCESS_DENIED || hr == Win32Error.ERROR_FILE_NOT_FOUND || hr == Win32Error.ERROR_NO_MORE_FILES || hr == Win32Error.ERROR_PATH_NOT_FOUND"  is complex.
Complex Conditional,IPFilter.Setup.CustomActions.IO,FileSystemEnumerator<TSource>,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\FileSystemEnumerator.cs,AddSearchableDirsToStack,The conditional expression  "hr == Win32Error.ERROR_ACCESS_DENIED || hr == Win32Error.ERROR_FILE_NOT_FOUND || hr == Win32Error.ERROR_NO_MORE_FILES || hr == Win32Error.ERROR_PATH_NOT_FOUND"  is complex.
Complex Conditional,IPFilter.Setup.CustomActions.IO,PathHelperMethods,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelperMethods.cs,IsPathRooted,The conditional expression  "(length >= 1 && (path[0] == DirectorySeparatorChar || path[0] == AltDirectorySeparatorChar))  #if !PLATFORM_UNIX   || (length >= 2 && path[1] == VolumeSeparatorChar)"  is complex.
Complex Conditional,IPFilter.Setup.CustomActions.IO,PathHelperMethods,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelperMethods.cs,CheckInvalidPathChars,The conditional expression  "c == '\"' || c == '<' || c == '>' || c == '|' || c < 32"  is complex.
Empty Catch Block,IPFilter.Setup.CustomActions,RemoveStartMenuEntry,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\RemoveStartMenuEntry.cs,Execute,The method has an empty catch block.
Empty Catch Block,IPFilter.Setup.CustomActions.IO,ErrorHelper,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\ErrorHelper.cs,GetDisplayablePath,The method has an empty catch block.
Empty Catch Block,IPFilter.Setup.CustomActions.IO,ErrorHelper,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\ErrorHelper.cs,GetDisplayablePath,The method has an empty catch block.
Empty Catch Block,IPFilter.Setup.CustomActions.IO,ErrorHelper,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\ErrorHelper.cs,GetDisplayablePath,The method has an empty catch block.
Magic Number,IPFilter.Setup.CustomActions,ClickOnceRegistry,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\ClickOnceRegistry.cs,ReadMarks,The following statement contains a magic number: mark.Implications.Add(new Implication                                                    {                                                        Key = implicationName'                                                        Name = implicationName.Substring(12)'                                                        Value = Encoding.ASCII.GetString(implication)                                                    });
Magic Number,IPFilter.Setup.CustomActions,CustomActions,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\CustomAction.cs,UninstallClickOnce,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromSeconds(10));
Magic Number,IPFilter.Setup.CustomActions,RemoveFiles,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\RemoveFiles.cs,IsWindowsXp,The following statement contains a magic number: return Environment.OSVersion.Version.Major == 5;
Magic Number,IPFilter.Setup.CustomActions,RemoveFiles,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\RemoveFiles.cs,DescendIntoSubfolders,The following statement contains a magic number: (Path.GetFileName(subSubFolder) ?? string.Empty).Length == 12
Magic Number,IPFilter.Setup.CustomActions,RemoveFiles,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\RemoveFiles.cs,DescendIntoSubfolders,The following statement contains a magic number: (Path.GetFileName(subFolder) ?? string.Empty).Length == 12
Magic Number,IPFilter.Setup.CustomActions,UninstallInfo,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\UninstallInfo.cs,GetPublicKeyToken,The following statement contains a magic number: var token = UninstallString.Split(''')                  .First(s => s.Trim().StartsWith("PublicKeyToken="' StringComparison.Ordinal)).Substring(16);
Magic Number,IPFilter.Setup.CustomActions,UninstallInfo,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\UninstallInfo.cs,GetPublicKeyToken,The following statement contains a magic number: token.Length != 16
Magic Number,IPFilter.Setup.CustomActions,Win32Error,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\Win32Error.cs,GetMessage,The following statement contains a magic number: var sb = new StringBuilder(512);
Magic Number,IPFilter.Setup.CustomActions.IO,ErrorHelper,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\ErrorHelper.cs,GetDisplayablePath,The following statement contains a magic number: path.Length < 2
Magic Number,IPFilter.Setup.CustomActions.IO,FileSystemEnumerator<TSource>,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\FileSystemEnumerator.cs,FileSystemEnumerator,The following statement contains a magic number: var demandPaths = new String[2];
Magic Number,IPFilter.Setup.CustomActions.IO,FileTime,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\FileTime.cs,FileTime,The following statement contains a magic number: FileTimeHigh = (uint)(fileTime >> 32);
Magic Number,IPFilter.Setup.CustomActions.IO,FileTime,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\FileTime.cs,ToTicks,The following statement contains a magic number: return ((long)FileTimeHigh << 32) + FileTimeLow;
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelper,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelper.cs,MemCopy,The following statement contains a magic number: MemCopyImpl((byte*)(pSrc + srcIndex)' (byte*)(pDest + destIndex)' len * 2);
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelper,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelper.cs,MemCopyImpl,The following statement contains a magic number: ((int*)dest)[2] = ((int*)src)[2];
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelper,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelper.cs,MemCopyImpl,The following statement contains a magic number: ((int*)dest)[2] = ((int*)src)[2];
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelper,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelper.cs,MemCopyImpl,The following statement contains a magic number: ((int*)dest)[3] = ((int*)src)[3];
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelper,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelper.cs,MemCopyImpl,The following statement contains a magic number: ((int*)dest)[3] = ((int*)src)[3];
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelper,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelper.cs,MemCopyImpl,The following statement contains a magic number: dest += 16;
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelper,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelper.cs,MemCopyImpl,The following statement contains a magic number: src += 16;
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelper,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelper.cs,MemCopyImpl,The following statement contains a magic number: len >= 16
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelper,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelper.cs,MemCopyImpl,The following statement contains a magic number: dest += 8;
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelper,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelper.cs,MemCopyImpl,The following statement contains a magic number: src += 8;
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelper,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelper.cs,MemCopyImpl,The following statement contains a magic number: (len & 8) != 0
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelper,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelper.cs,MemCopyImpl,The following statement contains a magic number: dest += 4;
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelper,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelper.cs,MemCopyImpl,The following statement contains a magic number: src += 4;
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelper,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelper.cs,MemCopyImpl,The following statement contains a magic number: (len & 4) != 0
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelper,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelper.cs,MemCopyImpl,The following statement contains a magic number: dest += 2;
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelper,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelper.cs,MemCopyImpl,The following statement contains a magic number: src += 2;
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelper,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelper.cs,MemCopyImpl,The following statement contains a magic number: (len & 2) != 0
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelperMethods,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelperMethods.cs,IsPathRooted,The following statement contains a magic number: (length >= 1 && (path[0] == DirectorySeparatorChar || path[0] == AltDirectorySeparatorChar))  #if !PLATFORM_UNIX   || (length >= 2 && path[1] == VolumeSeparatorChar)
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelperMethods,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelperMethods.cs,CheckSearchPattern,The following statement contains a magic number: index + 2 == searchPattern.Length
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelperMethods,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelperMethods.cs,CheckSearchPattern,The following statement contains a magic number: (searchPattern[index + 2] == DirectorySeparatorChar)                      || (searchPattern[index + 2] == AltDirectorySeparatorChar)
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelperMethods,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelperMethods.cs,CheckSearchPattern,The following statement contains a magic number: (searchPattern[index + 2] == DirectorySeparatorChar)                      || (searchPattern[index + 2] == AltDirectorySeparatorChar)
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelperMethods,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelperMethods.cs,CheckSearchPattern,The following statement contains a magic number: searchPattern = searchPattern.Substring(index + 2);
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelperMethods,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelperMethods.cs,CheckInvalidPathChars,The following statement contains a magic number: c == '\"' || c == '<' || c == '>' || c == '|' || c < 32
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelperMethods,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelperMethods.cs,NormalizePath,The following statement contains a magic number: startedWithVolumeSeparator && numDots > 2
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelperMethods,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelperMethods.cs,NormalizePath,The following statement contains a magic number: numDots = 2;
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelperMethods,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelperMethods.cs,NormalizePath,The following statement contains a magic number: numDots >= 2
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelperMethods,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelperMethods.cs,NormalizePath,The following statement contains a magic number: numDots == 2
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelperMethods,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelperMethods.cs,NormalizePath,The following statement contains a magic number: startedWithVolumeSeparator && numDots > 2
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelperMethods,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelperMethods.cs,NormalizePath,The following statement contains a magic number: numDots = 2;
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelperMethods,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelperMethods.cs,NormalizePath,The following statement contains a magic number: numDots >= 2
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelperMethods,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelperMethods.cs,NormalizePath,The following statement contains a magic number: numDots == 2
Magic Number,IPFilter.Setup.CustomActions.IO,PathHelperMethods,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\PathHelperMethods.cs,NormalizePath,The following statement contains a magic number: int startIndex = 2;
Missing Default,IPFilter.Setup.CustomActions,DeleteHelper,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\DeleteHelper.cs,DeleteFileSystemInfoWithSchedulingIfNecessary,The following switch statement is missing a default case: switch (Marshal.GetHRForException(ioe))                  {                      case -2147024894: // File doesn't exist                          return;                  }
Missing Default,IPFilter.Setup.CustomActions.IO,FileSystemEnumerator<TSource>,D:\research\architectureSmells\repos\DavidMoore_ipfilter\Setup\Setup.IPFilter.CustomActions\IO\FileSystemEnumerator.cs,MoveNext,The following switch statement is missing a default case: switch( state )              {                  case stateInit:                  {                      if( isEmpty )                      {                          state = stateFinish;                          goto case stateFinish;                      }                      if( searchData.searchOptions == SearchOption.TopDirectoryOnly )                      {                          state = stateFindNextFile;                          if( current != null )                          {                              return true;                          }                          goto case stateFindNextFile;                      }                      state = stateSearchNextDir;                      goto case stateSearchNextDir;                  }                  case stateSearchNextDir:                  {                      Contract.Assert(searchData.searchOptions != SearchOption.TopDirectoryOnly' "should not reach this code path if searchOption == TopDirectoryOnly");                      // Traverse directory structure. We need to get '*'                      while( searchStack.Count > 0 )                      {                          searchData = searchStack[0];                          Contract.Assert((searchData.fullPath != null)' "fullpath can't be null!");                          searchStack.RemoveAt(0);                            // Traverse the subdirs                          AddSearchableDirsToStack(searchData);                            // Execute searchCriteria against the current directory                          String searchPath = searchData.fullPath + searchCriteria;                            // Open a Find handle                          safeFindHandle = Win32Api.IO.FindFirstFile(searchPath' data);                          if( safeFindHandle.IsInvalid )                          {                              int hr = Marshal.GetLastWin32Error();                              if( hr == Win32Error.ERROR_ACCESS_DENIED || hr == Win32Error.ERROR_FILE_NOT_FOUND || hr == Win32Error.ERROR_NO_MORE_FILES || hr == Win32Error.ERROR_PATH_NOT_FOUND )                                  continue;                                safeFindHandle.Dispose();                              HandleError(hr' searchData.fullPath);                          }                            state = stateFindNextFile;                          needsParentPathDiscoveryDemand = true;                          SearchResult searchResult = CreateSearchResult(searchData' data);                          if( resultHandler.IsResultIncluded(searchResult) )                          {                              if( needsParentPathDiscoveryDemand )                              {                                  DoDemand(searchData.fullPath);                                  needsParentPathDiscoveryDemand = false;                              }                              current = resultHandler.CreateObject(searchResult);                              return true;                          }                          goto case stateFindNextFile;                      }                      state = stateFinish;                      goto case stateFinish;                  }                  case stateFindNextFile:                  {                      if( searchData != null && safeFindHandle != null )                      {                          // Keep asking for more matching files/dirs' add it to the list                           while( Win32Api.IO.FindNextFile(safeFindHandle' data) )                          {                              SearchResult searchResult = CreateSearchResult(searchData' data);                              if( resultHandler.IsResultIncluded(searchResult) )                              {                                  if( needsParentPathDiscoveryDemand )                                  {                                      DoDemand(searchData.fullPath);                                      needsParentPathDiscoveryDemand = false;                                  }                                  current = resultHandler.CreateObject(searchResult);                                  return true;                              }                          }                            // Make sure we quit with a sensible error.                           int hr = Marshal.GetLastWin32Error();                            if( safeFindHandle != null )                              safeFindHandle.Dispose();                            // ERROR_FILE_NOT_FOUND is valid here because if the top level                          // dir doen't contain any subdirs and matching files then                          // we will get here with this errorcode from the searchStack walk                          if( (hr != 0) && (hr != Win32Error.ERROR_NO_MORE_FILES)                              && (hr != Win32Error.ERROR_FILE_NOT_FOUND) )                          {                              HandleError(hr' searchData.fullPath);                          }                      }                      if( searchData.searchOptions == SearchOption.TopDirectoryOnly )                      {                          state = stateFinish;                          goto case stateFinish;                      }                      state = stateSearchNextDir;                      goto case stateSearchNextDir;                  }                  case stateFinish:                  {                      Dispose();                      break;                  }              }
