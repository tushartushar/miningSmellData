Implementation smell,Namespace,Class,File,Method,Description
Complex Method,WebFormsMvp.CodeAnalysisRules,PresentersShouldUseConsistentViewType,C:\repos\webformsmvp_webformsmvp\WebFormsMvp\WebFormsMvp.CodeAnalysisRules\PresentersShouldUseConsistentViewType.cs,Check,Cyclomatic complexity of the method is 8
Long Identifier,WebFormsMvp.CodeAnalysisRules,PresentersShouldUseConsistentViewType,C:\repos\webformsmvp_webformsmvp\WebFormsMvp\WebFormsMvp.CodeAnalysisRules\PresentersShouldUseConsistentViewType.cs,Check,The length of the parameter viewTypeFromGenericTypeArgument is 31.
Long Statement,WebFormsMvp.CodeAnalysisRules,PresentersShouldUseConsistentViewType,C:\repos\webformsmvp_webformsmvp\WebFormsMvp\WebFormsMvp.CodeAnalysisRules\PresentersShouldUseConsistentViewType.cs,Check,The length of the statement  "                throw new InvalidOperationException("Failed to find WebFormsMvp.Presenter`1 even though we found WebFormsMvp.IPresenter."); " is 123.
Long Statement,WebFormsMvp.CodeAnalysisRules,PresentersShouldUseProvidedBaseImplementation,C:\repos\webformsmvp_webformsmvp\WebFormsMvp\WebFormsMvp.CodeAnalysisRules\PresentersShouldUseProvidedBaseImplementation.cs,Check,The length of the statement  "                throw new InvalidOperationException("Failed to find WebFormsMvp.Presenter`1 even though we found WebFormsMvp.IPresenter."); " is 123.
Magic Number,WebFormsMvp.CodeAnalysisRules,PresentersShouldHaveDescriptiveNames,C:\repos\webformsmvp_webformsmvp\WebFormsMvp\WebFormsMvp.CodeAnalysisRules\PresentersShouldHaveDescriptiveNames.cs,Check,The following statement contains a magic number: if (type.Name.Name.Equals("Presenter"' StringComparison.OrdinalIgnoreCase))              {                  Problems.Add(new Problem(                      GetResolution(type.FullName)) {                      Certainty = 100'                      FixCategory = FixCategories.Breaking'                      MessageLevel = MessageLevel.Warning                  });              }
Magic Number,WebFormsMvp.CodeAnalysisRules,PresentersShouldHaveCorrectSuffix,C:\repos\webformsmvp_webformsmvp\WebFormsMvp\WebFormsMvp.CodeAnalysisRules\PresentersShouldHaveCorrectSuffix.cs,Check,The following statement contains a magic number: if (!type.Name.Name.EndsWith("Presenter"' StringComparison.Ordinal))              {                  Problems.Add(new Problem(                      GetResolution(type.FullName)) {                      Certainty = 100'                      FixCategory = FixCategories.Breaking'                      MessageLevel = MessageLevel.Warning                  });              }
Magic Number,WebFormsMvp.CodeAnalysisRules,PresentersShouldNotReplaceViewModel,C:\repos\webformsmvp_webformsmvp\WebFormsMvp\WebFormsMvp.CodeAnalysisRules\PresentersShouldNotReplaceViewModel.cs,VisitMethodCall,The following statement contains a magic number: if (IsViewSetModelCall(call))              {                  Problems.Add(new Problem(                                   GetResolution()' call)                               {                                   Certainty = 100'                                   FixCategory = FixCategories.NonBreaking'                                   MessageLevel = MessageLevel.Error                               });              }
Magic Number,WebFormsMvp.CodeAnalysisRules,PresentersShouldUseConsistentViewType,C:\repos\webformsmvp_webformsmvp\WebFormsMvp\WebFormsMvp.CodeAnalysisRules\PresentersShouldUseConsistentViewType.cs,Check,The following statement contains a magic number: foreach(var param in badParameters)              {                  Problems.Add(new Problem(GetResolution(new[]                               {                                   type.Name.Name'                                   viewTypeFromGenericTypeArgument.Name.Name'                                   param.Type.Name.Name                               })'                               param)                               {                                   Certainty = 100'                                   FixCategory = FixCategories.NonBreaking'                                   MessageLevel = MessageLevel.Error                               });              }
Magic Number,WebFormsMvp.CodeAnalysisRules,PresentersShouldUseProvidedBaseImplementation,C:\repos\webformsmvp_webformsmvp\WebFormsMvp\WebFormsMvp.CodeAnalysisRules\PresentersShouldUseProvidedBaseImplementation.cs,Check,The following statement contains a magic number: if (baseType.Template != basePresenter)              {                  Problems.Add(new Problem(                      GetResolution(type.FullName)) {                      Certainty = 100'                      FixCategory = FixCategories.NonBreaking'                      MessageLevel = MessageLevel.Warning                  });              }
