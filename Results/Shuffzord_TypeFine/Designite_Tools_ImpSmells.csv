Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Tools,Crossword,C:\repos\Shuffzord_TypeFine\Tools\Crossword.cs,CanBePlaced,Cyclomatic complexity of the method is 12
Complex Method,Tools,HtmlScrapper,C:\repos\Shuffzord_TypeFine\Tools\HtmlScrapper.cs,GetSjpDataFromHtml,Cyclomatic complexity of the method is 14
Complex Method,Tools,HtmlScrapper,C:\repos\Shuffzord_TypeFine\Tools\HtmlScrapper.cs,GetSjpWords,Cyclomatic complexity of the method is 15
Complex Method,Tools,HtmlScrapper,C:\repos\Shuffzord_TypeFine\Tools\HtmlScrapper.cs,GetWordOfTheDayFromHtml,Cyclomatic complexity of the method is 11
Complex Method,Tools,LevensteinHelper,C:\repos\Shuffzord_TypeFine\Tools\LevensteinHelper.cs,GetRanksForString,Cyclomatic complexity of the method is 8
Long Parameter List,Tools,Crossword,C:\repos\Shuffzord_TypeFine\Tools\Crossword.cs,PutWord,The method has 5 parameters.
Long Parameter List,Tools,LevensteinHelper,C:\repos\Shuffzord_TypeFine\Tools\LevensteinHelper.cs,GetRanksForString,The method has 9 parameters.
Long Statement,Tools,HtmlScrapper,C:\repos\Shuffzord_TypeFine\Tools\HtmlScrapper.cs,GetWordOfTheDayFromHtml,The length of the statement  "						var t = new Tuple<string' string' string' string' string> (titleNode != null ? titleNode.InnerText.Trim () : string.Empty' meaningNode != null ? meaningNode.InnerText.Trim () : string.Empty' usageNode != null ? usageNode.InnerText.Trim () : string.Empty' exampleNode != null ? exampleNode.InnerText.Trim () : string.Empty' etymologyNode != null ? etymologyNode.InnerText.Trim () : string.Empty); " is 395.
Long Statement,Tools,HtmlScrapper,C:\repos\Shuffzord_TypeFine\Tools\HtmlScrapper.cs,NormalizeKeyword,The length of the statement  "	return keyword.Trim ().ToLower (CultureInfo.InvariantCulture).Replace (' '' '_').Replace ('ą'' 'a').Replace ('ć'' 'c').Replace ('ę'' 'e').Replace ('ń'' 'n').Replace ('ł'' 'l').Replace ('ó'' 'o').Replace ('ś'' 's').Replace ('ź'' 'z').Replace ('ż'' 'z'); " is 252.
Magic Number,Tools,HtmlScrapper,C:\repos\Shuffzord_TypeFine\Tools\HtmlScrapper.cs,GetSjpDataFromHtml,The following statement contains a magic number: using (var fs = File.OpenWrite (@"C:\\Users\\Public\\" + Guid.NewGuid () + ".csv")) {  	using (var sw = new StreamWriter (fs' Encoding.UTF8)) {  		while (i < 3901) {  			var response = request.GetResponse ();  			using (response) {  				using (var responseStream = response.GetResponseStream ()) {  					if (responseStream != null) {  						HtmlNodeCollection nodes;  						using (var rdr = new StreamReader (responseStream' Encoding.GetEncoding ("ISO-8859-2"))) {  							var html = rdr.ReadToEnd ();  							var doc = new HtmlDocument ();  							html = HttpUtility.UrlDecode (html' Encoding.GetEncoding ("ISO-8859-2"));  							doc.LoadHtml (html);  							nodes = doc.DocumentNode.SelectNodes ("//td/a");  						}  						foreach (var item in nodes) {  							sw.WriteLine (item.InnerHtml);  						}  					}  					i++;  					request = WebRequest.Create (link + i);  				}  			}  		}  	}  }  
Magic Number,Tools,HtmlScrapper,C:\repos\Shuffzord_TypeFine\Tools\HtmlScrapper.cs,GetSjpDataFromHtml,The following statement contains a magic number: using (var sw = new StreamWriter (fs' Encoding.UTF8)) {  	while (i < 3901) {  		var response = request.GetResponse ();  		using (response) {  			using (var responseStream = response.GetResponseStream ()) {  				if (responseStream != null) {  					HtmlNodeCollection nodes;  					using (var rdr = new StreamReader (responseStream' Encoding.GetEncoding ("ISO-8859-2"))) {  						var html = rdr.ReadToEnd ();  						var doc = new HtmlDocument ();  						html = HttpUtility.UrlDecode (html' Encoding.GetEncoding ("ISO-8859-2"));  						doc.LoadHtml (html);  						nodes = doc.DocumentNode.SelectNodes ("//td/a");  					}  					foreach (var item in nodes) {  						sw.WriteLine (item.InnerHtml);  					}  				}  				i++;  				request = WebRequest.Create (link + i);  			}  		}  	}  }  
Magic Number,Tools,HtmlScrapper,C:\repos\Shuffzord_TypeFine\Tools\HtmlScrapper.cs,GetSjpDataFromHtml,The following statement contains a magic number: while (i < 3901) {  	var response = request.GetResponse ();  	using (response) {  		using (var responseStream = response.GetResponseStream ()) {  			if (responseStream != null) {  				HtmlNodeCollection nodes;  				using (var rdr = new StreamReader (responseStream' Encoding.GetEncoding ("ISO-8859-2"))) {  					var html = rdr.ReadToEnd ();  					var doc = new HtmlDocument ();  					html = HttpUtility.UrlDecode (html' Encoding.GetEncoding ("ISO-8859-2"));  					doc.LoadHtml (html);  					nodes = doc.DocumentNode.SelectNodes ("//td/a");  				}  				foreach (var item in nodes) {  					sw.WriteLine (item.InnerHtml);  				}  			}  			i++;  			request = WebRequest.Create (link + i);  		}  	}  }  
Magic Number,Tools,HtmlScrapper,C:\repos\Shuffzord_TypeFine\Tools\HtmlScrapper.cs,GetSjpWords,The following statement contains a magic number: using (var reader = new StreamReader (@"C:\\Users\\Public\\sjp lista.csv"' Encoding.UTF8)) {  	var fs = File.Create (@"C:\\Users\\Public\\" + Guid.NewGuid () + ".csv");  	using (var writer = new StreamWriter (fs' Encoding.UTF8)) {  		var line = reader.ReadLine ();  		while (!reader.EndOfStream && !string.IsNullOrWhiteSpace (line)) {  			line = HttpUtility.UrlEncode (line.Trim ()' Encoding.GetEncoding ("ISO-8859-2"));  			Console.WriteLine (line);  			var request = WebRequest.Create (link + line);  			WebResponse response;  			try {  				response = request.GetResponse ();  			}  			catch (Exception e) {  				Console.WriteLine (e.Message + Environment.NewLine + e.StackTrace);  				Thread.Sleep (300000);  				continue;  			}  			using (response) {  				using (var responseStream = response.GetResponseStream ()) {  					if (responseStream != null) {  						using (var rdr = new StreamReader (responseStream' Encoding.GetEncoding ("ISO-8859-2"))) {  							var html = rdr.ReadToEnd ();  							var doc = new HtmlDocument ();  							doc.LoadHtml (html);  							var titleNode = doc.DocumentNode.SelectSingleNode ("//h1");  							var descNode = doc.DocumentNode.SelectSingleNode ("//p[3]");  							try {  								writer.WriteLine (titleNode.InnerText + "$$" + descNode.InnerText.Replace ("<br>"' Environment.NewLine));  							}  							catch (Exception e) {  								Console.WriteLine (e.Message + Environment.NewLine + e.StackTrace);  							}  						}  					}  				}  			}  			line = reader.ReadLine ();  		}  	}  }  
Magic Number,Tools,HtmlScrapper,C:\repos\Shuffzord_TypeFine\Tools\HtmlScrapper.cs,GetSjpWords,The following statement contains a magic number: using (var writer = new StreamWriter (fs' Encoding.UTF8)) {  	var line = reader.ReadLine ();  	while (!reader.EndOfStream && !string.IsNullOrWhiteSpace (line)) {  		line = HttpUtility.UrlEncode (line.Trim ()' Encoding.GetEncoding ("ISO-8859-2"));  		Console.WriteLine (line);  		var request = WebRequest.Create (link + line);  		WebResponse response;  		try {  			response = request.GetResponse ();  		}  		catch (Exception e) {  			Console.WriteLine (e.Message + Environment.NewLine + e.StackTrace);  			Thread.Sleep (300000);  			continue;  		}  		using (response) {  			using (var responseStream = response.GetResponseStream ()) {  				if (responseStream != null) {  					using (var rdr = new StreamReader (responseStream' Encoding.GetEncoding ("ISO-8859-2"))) {  						var html = rdr.ReadToEnd ();  						var doc = new HtmlDocument ();  						doc.LoadHtml (html);  						var titleNode = doc.DocumentNode.SelectSingleNode ("//h1");  						var descNode = doc.DocumentNode.SelectSingleNode ("//p[3]");  						try {  							writer.WriteLine (titleNode.InnerText + "$$" + descNode.InnerText.Replace ("<br>"' Environment.NewLine));  						}  						catch (Exception e) {  							Console.WriteLine (e.Message + Environment.NewLine + e.StackTrace);  						}  					}  				}  			}  		}  		line = reader.ReadLine ();  	}  }  
Magic Number,Tools,HtmlScrapper,C:\repos\Shuffzord_TypeFine\Tools\HtmlScrapper.cs,GetSjpWords,The following statement contains a magic number: while (!reader.EndOfStream && !string.IsNullOrWhiteSpace (line)) {  	line = HttpUtility.UrlEncode (line.Trim ()' Encoding.GetEncoding ("ISO-8859-2"));  	Console.WriteLine (line);  	var request = WebRequest.Create (link + line);  	WebResponse response;  	try {  		response = request.GetResponse ();  	}  	catch (Exception e) {  		Console.WriteLine (e.Message + Environment.NewLine + e.StackTrace);  		Thread.Sleep (300000);  		continue;  	}  	using (response) {  		using (var responseStream = response.GetResponseStream ()) {  			if (responseStream != null) {  				using (var rdr = new StreamReader (responseStream' Encoding.GetEncoding ("ISO-8859-2"))) {  					var html = rdr.ReadToEnd ();  					var doc = new HtmlDocument ();  					doc.LoadHtml (html);  					var titleNode = doc.DocumentNode.SelectSingleNode ("//h1");  					var descNode = doc.DocumentNode.SelectSingleNode ("//p[3]");  					try {  						writer.WriteLine (titleNode.InnerText + "$$" + descNode.InnerText.Replace ("<br>"' Environment.NewLine));  					}  					catch (Exception e) {  						Console.WriteLine (e.Message + Environment.NewLine + e.StackTrace);  					}  				}  			}  		}  	}  	line = reader.ReadLine ();  }  
Magic Number,Tools,HtmlScrapper,C:\repos\Shuffzord_TypeFine\Tools\HtmlScrapper.cs,GetSjpWords,The following statement contains a magic number: try {  	response = request.GetResponse ();  }  catch (Exception e) {  	Console.WriteLine (e.Message + Environment.NewLine + e.StackTrace);  	Thread.Sleep (300000);  	continue;  }  
Magic Number,Tools,HtmlScrapper,C:\repos\Shuffzord_TypeFine\Tools\HtmlScrapper.cs,GetSjpWords,The following statement contains a magic number: Thread.Sleep (300000);  
