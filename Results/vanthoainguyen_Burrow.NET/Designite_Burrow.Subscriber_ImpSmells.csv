Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Burrow.Subscriber,TestSubscribingFromPriorityQueues,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Subscriber\TestSubscribingFromPriorityQueues.cs,ProcessMessage,The length of the statement  "            Global.DefaultWatcher.InfoFormat("Processed msg [{0}]' priority [{1}] in [{2}] ms\n"' bunny.Name' bunny.Age' processingTime); " is 125.
Long Statement,Burrow.Subscriber,TestSubscribingFromPriorityQueues,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Subscriber\TestSubscribingFromPriorityQueues.cs,PrintNotes,The length of the statement  "            Global.DefaultWatcher.InfoFormat("* You should run the publisher first to have some messages in the priority queues to see how the subscriber works!"); " is 151.
Long Statement,Burrow.Subscriber,TestSubscribingFromPriorityQueues,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Subscriber\TestSubscribingFromPriorityQueues.cs,PrintNotes,The length of the statement  "            Global.DefaultWatcher.InfoFormat("* By default' msgs from higher priority queue will be processed before messages from other lower priority queues."); " is 150.
Long Statement,Burrow.Subscriber,Program,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Subscriber\Program.cs,Main,The length of the statement  "            Global.DefaultWatcher.InfoFormat("This demo will show you how Burrow.NET subscribe messages from RabbitMQ.\nPress anykey to continue!!!"); " is 138.
Long Statement,Burrow.Subscriber,Program,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Subscriber\Program.cs,Main,The length of the statement  "            // This test also demonstrate the "DeadLetter" feature. Make sure queue "Burrow.Queue.Error" has already existed as DeadLetter msg will go to that queue " is 152.
Long Statement,Burrow.Subscriber,TestSubscribing,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Subscriber\TestSubscribing.cs,StartAsync,The length of the statement  "            Global.DefaultWatcher.InfoFormat("Click any key to asynchronously subscribe to queue Burrow.Queue.BurrowTestApp.Bunny"); " is 120.
Long Statement,Burrow.Subscriber,TestSubscribing,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Subscriber\TestSubscribing.cs,ProcessMessage,The length of the statement  "            Global.DefaultWatcher.InfoFormat("Processed msg [{0}]' priority [{1}] in [{2}] ms\n"' bunny.Name' bunny.Age' processingTime); " is 125.
Magic Number,Burrow.Subscriber,TestSubscribingFromPriorityQueues,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Subscriber\TestSubscribingFromPriorityQueues.cs,Start,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,Burrow.Subscriber,TestSubscribingFromPriorityQueues,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Subscriber\TestSubscribingFromPriorityQueues.cs,Start,The following statement contains a magic number: const ushort maxPriorityLevel = 3;
Magic Number,Burrow.Subscriber,TestSubscribingFromPriorityQueues,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Subscriber\TestSubscribingFromPriorityQueues.cs,Start,The following statement contains a magic number: tunnel.Subscribe(new PrioritySubscriptionOption<Bunny>              {                  SubscriptionName = "BurrowTestApp"'                  MaxPriorityLevel = maxPriorityLevel'                  MessageHandler = ProcessMessage'                  QueuePrefetchSize = 10'                  BatchSize = 2              });
Magic Number,Burrow.Subscriber,TestSubscribingFromPriorityQueues,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Subscriber\TestSubscribingFromPriorityQueues.cs,Start,The following statement contains a magic number: tunnel.Subscribe(new PrioritySubscriptionOption<Bunny>              {                  SubscriptionName = "BurrowTestApp"'                  MaxPriorityLevel = maxPriorityLevel'                  MessageHandler = ProcessMessage'                  QueuePrefetchSize = 10'                  BatchSize = 2              });
Magic Number,Burrow.Subscriber,TestSubscribingFromPriorityQueues,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Subscriber\TestSubscribingFromPriorityQueues.cs,StartAsync,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,Burrow.Subscriber,TestSubscribingFromPriorityQueues,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Subscriber\TestSubscribingFromPriorityQueues.cs,StartAsync,The following statement contains a magic number: const ushort maxPriorityLevel = 3;
Magic Number,Burrow.Subscriber,TestSubscribingFromPriorityQueues,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Subscriber\TestSubscribingFromPriorityQueues.cs,StartAsync,The following statement contains a magic number: subscription = tunnel.SubscribeAsync(new PriorityAsyncSubscriptionOption<Bunny>              {                  SubscriptionName = "BurrowTestApp"'                  MaxPriorityLevel = maxPriorityLevel'                  MessageHandler = messageHandler'                  QueuePrefetchSize = 10'                  BatchSize = 1              });
Magic Number,Burrow.Subscriber,TestSubscribingFromPriorityQueues,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Subscriber\TestSubscribingFromPriorityQueues.cs,ProcessMessage,The following statement contains a magic number: var processingTime = rand.Next(10' 100);
Magic Number,Burrow.Subscriber,TestSubscribingFromPriorityQueues,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Subscriber\TestSubscribingFromPriorityQueues.cs,ProcessMessage,The following statement contains a magic number: var processingTime = rand.Next(10' 100);
Magic Number,Burrow.Subscriber,TestSubscribingFromPriorityQueues,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Subscriber\TestSubscribingFromPriorityQueues.cs,ProcessMessage,The following statement contains a magic number: processingTime % 5 == 0
Magic Number,Burrow.Subscriber,TestSubscribingFromPriorityQueues,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Subscriber\TestSubscribingFromPriorityQueues.cs,PrintNotes,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,Burrow.Subscriber,TestSubscribingFromPriorityQueues,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Subscriber\TestSubscribingFromPriorityQueues.cs,PrintNotes,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,Burrow.Subscriber,TestSubscribingFromPriorityQueues,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Subscriber\TestSubscribingFromPriorityQueues.cs,PrintNotes,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,Burrow.Subscriber,TestSubscribing,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Subscriber\TestSubscribing.cs,Start,The following statement contains a magic number: tunnel.Subscribe(new SubscriptionOption<Bunny>              {                  BatchSize = 1'                  MessageHandler = ProcessMessage'                  QueuePrefetchSize = 10'                  SubscriptionName = "BurrowTestApp"              });
Magic Number,Burrow.Subscriber,TestSubscribing,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Subscriber\TestSubscribing.cs,StartAsync,The following statement contains a magic number: subscription = tunnel.SubscribeAsync(new AsyncSubscriptionOption<Bunny>              {                  BatchSize = 1'                  QueuePrefetchSize = 10'                  SubscriptionName = "BurrowTestApp"'                    MessageHandler = (bunny' subscriptionData) =>                  {                      var error = false;                      try                      {                          ProcessMessage(bunny);                      }                      catch (Exception)                      {                          error = true;                          if (subscription != null)                          {                              subscription.Nack(subscriptionData.DeliveryTag' false);                           }                      }                      finally                      {                          if (subscription != null && !error)                          {                              subscription.Ack(subscriptionData.DeliveryTag);                          }                      }                  }              });
Magic Number,Burrow.Subscriber,TestSubscribing,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Subscriber\TestSubscribing.cs,ProcessMessage,The following statement contains a magic number: var processingTime = rand.Next(1000' 1500);
Magic Number,Burrow.Subscriber,TestSubscribing,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Subscriber\TestSubscribing.cs,ProcessMessage,The following statement contains a magic number: var processingTime = rand.Next(1000' 1500);
Magic Number,Burrow.Subscriber,TestSubscribing,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Subscriber\TestSubscribing.cs,ProcessMessage,The following statement contains a magic number: processingTime % 3 == 0
