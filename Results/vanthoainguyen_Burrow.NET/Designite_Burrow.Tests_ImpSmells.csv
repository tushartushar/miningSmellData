Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Burrow.Tests.BurrowConsumerTests,BurrowConsumerForTest,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\BurrowConsumerForTest.cs,BurrowConsumerForTest,The method has 5 parameters. Parameters: channel' messageHandler' watcher' autoAck' batchSize
Long Parameter List,Burrow.Tests.DefaultMessageHandlerTests,DefaultMessageHandlerForTest<T>,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\DefaultMessageHandlerTests\DefaultMessageHandlerForTest.cs,DefaultMessageHandlerForTest,The method has 5 parameters. Parameters: subscriptionName' msgHandlingAction' consumerErrorHandler' messageSerializer' watcher
Long Parameter List,Burrow.Tests.Extras.Internal.PriorityMessageHandlerTests,PriorityMessageHandlerForTest<T>,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityMessageHandlerTests\MethodHandleMessage.cs,PriorityMessageHandlerForTest,The method has 5 parameters. Parameters: subscriptionName' msgHandlingAction' consumerErrorHandler' messageSerializer' watcher
Long Parameter List,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,RabbitTunnelWithPriorityQueuesSupportForTest,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\RabbitTunnelWithPriorityQueuesSupportForTest.cs,RabbitTunnelWithPriorityQueuesSupportForTest,The method has 7 parameters. Parameters: consumerManager' watcher' routeFinder' connection' serializer' correlationIdGenerator' setPersistent
Long Parameter List,Burrow.Tests.Extras.RabbitSetupTests,RabbitSetupForTest,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\RabbitSetupTests\RabbitSetupForTest.cs,BindQueue,The method has 5 parameters. Parameters: model' queue' exchangeName' queueName' routingKey
Long Parameter List,Burrow.Tests.RabbitTunnelTests,RabbitTunnelForTest,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\RabbitTunnelForTest.cs,RabbitTunnelForTest,The method has 7 parameters. Parameters: consumerManager' watcher' routeFinder' connection' serializer' correlationIdGenerator' setPersistent
Long Statement,Burrow.Tests.BurrowConsumerTests,MessageWasNotHandled,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MessageWasNotHandled.cs,Should_be_executed_when_the_message_was_not_handled,The length of the statement  "            var consumer = new BurrowConsumerForTest(model' msgHandler' Substitute.For<IRabbitWatcher>()' false' 3) { ConsumerTag = "ConsumerTag" }; " is 136.
Long Statement,Burrow.Tests.BurrowConsumerTests,MessageWasNotHandled,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MessageWasNotHandled.cs,Should_handle_all_exception,The length of the statement  "            model.When(x => x.BasicAck(Arg.Any<ulong>()' Arg.Any<bool>())).Do(callInfo => { throw new SubscriptionNotFoundException("Ack error"); }); " is 137.
Long Statement,Burrow.Tests.BurrowConsumerTests,MethodHandleMessageDelivery,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MethodHandleMessageDelivery.cs,When_called_should_execute_methods_on_message_handler,The length of the statement  "                      .Do(callInfo => msgHandler.HandlingComplete += Raise.Event<MessageHandlingEvent>(callInfo.Arg<BasicDeliverEventArgs>())); " is 121.
Long Statement,Burrow.Tests.BurrowConsumerTests,MethodDoAck,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MethodDoAck.cs,Should_do_nothing_if_not_connected,The length of the statement  "            var consumer = new BurrowConsumerForTest(model' msgHandler' Substitute.For<IRabbitWatcher>()' true' 3) { ConsumerTag = "ConsumerTag" }; " is 135.
Long Statement,Burrow.Tests.BurrowConsumerTests,MethodDoAck,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MethodDoAck.cs,Should_do_nothing_if_already_disposed,The length of the statement  "            var consumer = new BurrowConsumerForTest(model' Substitute.For<IMessageHandler>()' Substitute.For<IRabbitWatcher>()' true' 3) { ConsumerTag = "ConsumerTag" }; " is 158.
Long Statement,Burrow.Tests.BurrowConsumerTests,MethodWaitAndHandleMessageDelivery,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MethodWaitAndHandleMessageDelivery.cs,Should_log_error_if_arrived_message_is_null,The length of the statement  "            watcher.Received(1).ErrorFormat("Message arrived but it's null for some reason' properly a serious BUG :D' contact author asap' release semaphore for other messages"); " is 167.
Long Statement,Burrow.Tests.BurrowConsumerTests,MessageHandlerHandlingComplete,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MessageHandlerHandlingComplete.cs,Should_be_executed_when_the_message_handler_complete_message,The length of the statement  "            var consumer = new BurrowConsumerForTest(model' msgHandler' Substitute.For<IRabbitWatcher>()' true' 3) {ConsumerTag = "ConsumerTag"}; " is 133.
Long Statement,Burrow.Tests.BurrowConsumerTests,MessageHandlerHandlingComplete,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MessageHandlerHandlingComplete.cs,Should_handle_all_exception,The length of the statement  "            model.When(x => x.BasicAck(Arg.Any<ulong>()' Arg.Any<bool>())).Do(callInfo => { throw new SubscriptionNotFoundException("Ack error"); }); " is 137.
Long Statement,Burrow.Tests.DefaultMessageHandlerFactoryTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\DefaultMessageHandlerFactoryTests\Constructor.cs,Should_throw_exception_if_use_null_consumerErrorHandler,The length of the statement  "            new DefaultMessageHandlerFactory(null' NSubstitute.Substitute.For<ISerializer>()' NSubstitute.Substitute.For<IRabbitWatcher>()); " is 128.
Long Statement,Burrow.Tests.DefaultMessageHandlerFactoryTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\DefaultMessageHandlerFactoryTests\Constructor.cs,Should_throw_exception_if_use_null_serializer,The length of the statement  "            new DefaultMessageHandlerFactory(NSubstitute.Substitute.For<IConsumerErrorHandler>()' null' NSubstitute.Substitute.For<IRabbitWatcher>()); " is 138.
Long Statement,Burrow.Tests.DefaultMessageHandlerFactoryTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\DefaultMessageHandlerFactoryTests\Constructor.cs,Should_throw_exception_if_use_null_watcher,The length of the statement  "            new DefaultMessageHandlerFactory(NSubstitute.Substitute.For<IConsumerErrorHandler>()' NSubstitute.Substitute.For<ISerializer>()' null); " is 135.
Long Statement,Burrow.Tests.DefaultMessageHandlerTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\DefaultMessageHandlerTests\Constructor.cs,Should_throw_exceeption_if_provide_null_action,The length of the statement  "            new DefaultMessageHandler<Customer>("SubscriptionName"' null' Substitute.For<IConsumerErrorHandler>()' Substitute.For<ISerializer>()' Substitute.For<IRabbitWatcher>()); " is 168.
Long Statement,Burrow.Tests.DefaultMessageHandlerTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\DefaultMessageHandlerTests\Constructor.cs,Should_throw_exceeption_if_provide_null_consumerErrorHandler,The length of the statement  "            new DefaultMessageHandler<Customer>("SubscriptionName"' Substitute.For<Action<Customer' MessageDeliverEventArgs>>()' null' Substitute.For<ISerializer>()' Substitute.For<IRabbitWatcher>()); " is 188.
Long Statement,Burrow.Tests.DefaultMessageHandlerTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\DefaultMessageHandlerTests\Constructor.cs,Should_throw_exceeption_if_provide_null_serializer,The length of the statement  "            new DefaultMessageHandler<Customer>("SubscriptionName"' Substitute.For<Action<Customer' MessageDeliverEventArgs>>()' Substitute.For<IConsumerErrorHandler>()' null' Substitute.For<IRabbitWatcher>()); " is 198.
Long Statement,Burrow.Tests.DefaultMessageHandlerTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\DefaultMessageHandlerTests\Constructor.cs,Should_throw_exceeption_if_provide_null_rabbit_watcher,The length of the statement  "            new DefaultMessageHandler<Customer>("SubscriptionName"' Substitute.For<Action<Customer' MessageDeliverEventArgs>>()' Substitute.For<IConsumerErrorHandler>()' Substitute.For<ISerializer>()' null); " is 195.
Long Statement,Burrow.Tests.DefaultMessageHandlerTests,MethodCheckMessageType,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\DefaultMessageHandlerTests\MethodCheckMessageType.cs,Should_throw_exeception_if_Property_Type_is_not_equal_to_deserialized_message_type_string,The length of the statement  "            var handler = new DefaultMessageHandlerForTest<Customer>("SubscriptionName"' Substitute.For<Action<Customer' MessageDeliverEventArgs>>()' errorHanlder' Substitute.For<ISerializer>()' Substitute.For<IRabbitWatcher>()); " is 217.
Long Statement,Burrow.Tests.DefaultMessageHandlerTests,MethodCleanUp,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\DefaultMessageHandlerTests\MethodCleanUp.cs,Should_fire_event_MessageWasNotHandled_if_msg_was_not_handled,The length of the statement  "            watcher.DidNotReceive().ErrorFormat(Arg.Is<string>(e => e == "There is an error when trying to fire MessageWasNotDelivered event")' Arg.Any<object[]>()); " is 153.
Long Statement,Burrow.Tests.DefaultMessageHandlerTests,MethodCleanUp,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\DefaultMessageHandlerTests\MethodCleanUp.cs,Should_catch_all_exception_when_firing_event_MessageWasNotHandled,The length of the statement  "            handler.MessageWasNotHandled += x => { waitHandler.Set(); throw new Exception("Error firing event MessageWasNotHandled"); }; " is 124.
Long Statement,Burrow.Tests.DefaultMessageHandlerTests,MethodCleanUp,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\DefaultMessageHandlerTests\MethodCleanUp.cs,Should_catch_all_exception_when_firing_event_MessageWasNotHandled,The length of the statement  "            watcher.Received(1).ErrorFormat(Arg.Is<string>(e => e == "There is an error when trying to fire MessageWasNotDelivered event")' Arg.Any<object[]>()); " is 149.
Long Statement,Burrow.Tests.DefaultMessageHandlerTests,MethodHandleError,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\DefaultMessageHandlerTests\MethodHandleError.cs,Should_call_error_handler_to_handle_the_error,The length of the statement  "            var handler = new DefaultMessageHandler<Customer>("SubscriptionName"' Substitute.For<Action<Customer' MessageDeliverEventArgs>>()' errorHanlder' Substitute.For<ISerializer>()' Substitute.For<IRabbitWatcher>()); " is 210.
Long Statement,Burrow.Tests.DefaultMessageHandlerTests,MethodHandleError,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\DefaultMessageHandlerTests\MethodHandleError.cs,Should_call_error_handler_to_handle_the_error,The length of the statement  "            handler.HandleError(new BasicDeliverEventArgs("tag"' 1' false' "e"' "r"' Substitute.For<IBasicProperties>()' new byte[0])' new Exception()); " is 140.
Long Statement,Burrow.Tests.DefaultMessageHandlerTests,MethodHandleMessage,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\DefaultMessageHandlerTests\MethodHandleMessage.cs,Should_fire_event_HandlingComplete,The length of the statement  "            var handler = new DefaultMessageHandler<Customer>("SubscriptionName"' Substitute.For<Action<Customer' MessageDeliverEventArgs>>()' errorHanlder' Substitute.For<ISerializer>()' Substitute.For<IRabbitWatcher>()); " is 210.
Long Statement,Burrow.Tests.DefaultMessageHandlerTests,MethodHandleMessage,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\DefaultMessageHandlerTests\MethodHandleMessage.cs,Should_handle_error_if_the_task_failed,The length of the statement  "            var handler = new DefaultMessageHandler<Customer>("SubscriptionName"' taskFactory' errorHanlder' Substitute.For<ISerializer>()' Substitute.For<IRabbitWatcher>()); " is 162.
Long Statement,Burrow.Tests.DefaultMessageHandlerTests,MethodHandleMessage,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\DefaultMessageHandlerTests\MethodHandleMessage.cs,Should_handle_error_if_the_task_failed,The length of the statement  "            handler.HandleMessage(new BasicDeliverEventArgs("tag"' 1' false' "e"' "r"' Substitute.For<IBasicProperties>()' new byte[0])); " is 125.
Long Statement,Burrow.Tests.DefaultMessageHandlerTests,MethodHandleMessage,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\DefaultMessageHandlerTests\MethodHandleMessage.cs,Should_not_throw_any_exception,The length of the statement  "            errorHanlder.When(x => x.HandleError(Arg.Any<BasicDeliverEventArgs>()' Arg.Any<Exception>())).Do(callInfo => { throw new Exception("Cannot handle error"); }); " is 158.
Long Statement,Burrow.Tests.DefaultMessageHandlerTests,MethodHandleMessage,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\DefaultMessageHandlerTests\MethodHandleMessage.cs,Should_not_throw_any_exception,The length of the statement  "            var handler = new DefaultMessageHandler<Customer>("SubscriptionName"' taskFactory' errorHanlder' Substitute.For<ISerializer>()' watcher); " is 137.
Long Statement,Burrow.Tests.DefaultMessageHandlerTests,MethodHandleMessage,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\DefaultMessageHandlerTests\MethodHandleMessage.cs,Should_not_throw_any_exception,The length of the statement  "            watcher.Received().ErrorFormat(Arg.Is<string>(x => x.StartsWith("Failed to handle the exception: "))' Arg.Any<object>()' Arg.Any<object>()); " is 140.
Long Statement,Burrow.Tests.Extras.Internal.InMemoryPriorityQueueTests,MethodDeleteAll,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\InMemoryPriorityQueueTests\MethodDeleteAll.cs,Should_delete_all_items_match_predicate,The length of the statement  "            var queue = new InMemoryPriorityQueue<GenericPriorityMessage<string>>(20' new PriorityComparer<GenericPriorityMessage<string>>()); " is 130.
Long Statement,Burrow.Tests.Extras.Internal.InMemoryPriorityQueueTests,MethodEnqueue,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\InMemoryPriorityQueueTests\MethodEnqueue.cs,Should_add_item_to_queue_if_not_reach_match_size,The length of the statement  "            var queue = new InMemoryPriorityQueue<GenericPriorityMessage<string>>(2' new PriorityComparer<GenericPriorityMessage<string>>()); " is 129.
Long Statement,Burrow.Tests.Extras.Internal.InMemoryPriorityQueueTests,MethodEnqueue,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\InMemoryPriorityQueueTests\MethodEnqueue.cs,Should_block_the_adding_thread_if_queue_is_full,The length of the statement  "            var queue = new InMemoryPriorityQueue<GenericPriorityMessage<string>>(2' new PriorityComparer<GenericPriorityMessage<string>>()); " is 129.
Long Statement,Burrow.Tests.Extras.Internal.InMemoryPriorityQueueTests,MethodEnqueue,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\InMemoryPriorityQueueTests\MethodEnqueue.cs,Should_throw_exception_if_queue_is_closed,The length of the statement  "            var queue = new InMemoryPriorityQueue<GenericPriorityMessage<string>>(2' new PriorityComparer<GenericPriorityMessage<string>>()); " is 129.
Long Statement,Burrow.Tests.Extras.Internal.PriorityBurrowConsumerTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityBurrowConsumerTests\Constructor.cs,Should_throw_exception_if_provide_less_than_or_equal_0_batch_size,The length of the statement  "            new PriorityBurrowConsumer(Substitute.For<IModel>()' Substitute.For<IMessageHandler>()' Substitute.For<IRabbitWatcher>()' false' 0); " is 132.
Long Statement,Burrow.Tests.Extras.Internal.PriorityBurrowConsumerTests,MethodInit,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityBurrowConsumerTests\MethodInit.cs,Should_throw_exception_if_subscription_is_null,The length of the statement  "            var consumer = new PriorityBurrowConsumer(channel' Substitute.For<IMessageHandler>()' Substitute.For<IRabbitWatcher>()' true' 1); " is 129.
Long Statement,Burrow.Tests.Extras.Internal.PriorityBurrowConsumerTests,MethodInit,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityBurrowConsumerTests\MethodInit.cs,Should_throw_exception_if_PriorityQueue_is_null,The length of the statement  "            var consumer = new PriorityBurrowConsumer(channel' Substitute.For<IMessageHandler>()' Substitute.For<IRabbitWatcher>()' true' 1); " is 129.
Long Statement,Burrow.Tests.Extras.Internal.PriorityBurrowConsumerTests,MethodInit,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityBurrowConsumerTests\MethodInit.cs,Should_throw_exception_if_semaphore_name_is_null,The length of the statement  "            var consumer = new PriorityBurrowConsumer(channel' Substitute.For<IMessageHandler>()' Substitute.For<IRabbitWatcher>()' true' 1); " is 129.
Long Statement,Burrow.Tests.Extras.Internal.PriorityBurrowConsumerTests,MethodInit,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityBurrowConsumerTests\MethodInit.cs,Should_delete_all_existing_msgs_that_have_same_priority,The length of the statement  "            var consumer = new PriorityBurrowConsumer(channel' Substitute.For<IMessageHandler>()' Substitute.For<IRabbitWatcher>()' true' 1); " is 129.
Long Statement,Burrow.Tests.Extras.Internal.PriorityBurrowConsumerTests,MethodInit,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityBurrowConsumerTests\MethodInit.cs,Should_delete_all_existing_msgs_that_have_same_priority,The length of the statement  "            var queue = new InMemoryPriorityQueue<GenericPriorityMessage<BasicDeliverEventArgs>>(5' new PriorityComparer<GenericPriorityMessage<BasicDeliverEventArgs>>()); " is 159.
Long Statement,Burrow.Tests.Extras.Internal.PriorityBurrowConsumerTests,MethodOnCancel,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityBurrowConsumerTests\MethodOnCancel.cs,Should_close_queue_and_end_other_thread,The length of the statement  "            var consumer = new PriorityBurrowConsumer(channel' Substitute.For<IMessageHandler>()' Substitute.For<IRabbitWatcher>()' true' 1); " is 129.
Long Statement,Burrow.Tests.Extras.Internal.PriorityBurrowConsumerTests,MethodDoAck,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityBurrowConsumerTests\MethodDoAck.cs,Should_do_nothing_if_already_disposed,The length of the statement  "            var consumer = new PriorityBurrowConsumer(model' Substitute.For<IMessageHandler>()' Substitute.For<IRabbitWatcher>()' false' 1); " is 128.
Long Statement,Burrow.Tests.Extras.Internal.PriorityBurrowConsumerTests,MethodReady,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityBurrowConsumerTests\MethodReady.cs,Should_throw_exception_if_subscription_is_null,The length of the statement  "            var consumer = new PriorityBurrowConsumer(channel' Substitute.For<IMessageHandler>()' Substitute.For<IRabbitWatcher>()' true' 1); " is 129.
Long Statement,Burrow.Tests.Extras.Internal.PriorityBurrowConsumerTests,MethodReady,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityBurrowConsumerTests\MethodReady.cs,Should_throw_exception_if_PriorityQueue_is_null,The length of the statement  "            var consumer = new PriorityBurrowConsumer(channel' Substitute.For<IMessageHandler>()' Substitute.For<IRabbitWatcher>()' true' 1); " is 129.
Long Statement,Burrow.Tests.Extras.Internal.PriorityBurrowConsumerTests,MethodReady,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityBurrowConsumerTests\MethodReady.cs,Should_catch_ThreadStateException,The length of the statement  "            watcher.When(w => w.WarnFormat(Arg.Any<string>()' Arg.Any<string>()' Arg.Any<uint>()' Arg.Any<string>()' Arg.Any<string>())).Do(c => count.Set()); " is 146.
Long Statement,Burrow.Tests.Extras.Internal.PriorityBurrowConsumerTests,MethodReady,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityBurrowConsumerTests\MethodReady.cs,Should_catch_ThreadInterruptedException,The length of the statement  "            watcher.When(w => w.WarnFormat(Arg.Any<string>()' Arg.Any<string>()' Arg.Any<uint>()' Arg.Any<string>()' Arg.Any<string>())).Do(c => count.Set()); " is 146.
Long Statement,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribeAsync,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribeAsync.cs,Should_create_subscriptions_to_priority_queues,The length of the statement  "            newChannel.Received().BasicConsume("Queue_Priority0"' false' Arg.Is<string>(x => x.StartsWith("subscriptionName-"))' Arg.Any<IBasicConsumer>()); " is 144.
Long Statement,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribeAsync,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribeAsync.cs,Should_create_subscriptions_to_priority_queues,The length of the statement  "            newChannel.Received().BasicConsume("Queue_Priority1"' false' Arg.Is<string>(x => x.StartsWith("subscriptionName-"))' Arg.Any<IBasicConsumer>()); " is 144.
Long Statement,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribeAsync,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribeAsync.cs,Should_create_subscriptions_to_priority_queues,The length of the statement  "            newChannel.Received().BasicConsume("Queue_Priority2"' false' Arg.Is<string>(x => x.StartsWith("subscriptionName-"))' Arg.Any<IBasicConsumer>()); " is 144.
Long Statement,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribeAsync,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribeAsync.cs,Should_create_subscriptions_to_priority_queues,The length of the statement  "            newChannel.Received().BasicConsume("Queue_Priority3"' false' Arg.Is<string>(x => x.StartsWith("subscriptionName-"))' Arg.Any<IBasicConsumer>()); " is 144.
Long Statement,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribeAsync,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribeAsync.cs,Should_return_composite_subscription,The length of the statement  "            newChannel.Received().BasicConsume("Queue_Priority0"' false' Arg.Is<string>(x => x.StartsWith("subscriptionName-"))' Arg.Any<IBasicConsumer>()); " is 144.
Long Statement,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribeAsync,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribeAsync.cs,Should_return_composite_subscription,The length of the statement  "            newChannel.Received().BasicConsume("Queue_Priority1"' false' Arg.Is<string>(x => x.StartsWith("subscriptionName-"))' Arg.Any<IBasicConsumer>()); " is 144.
Long Statement,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribeAsync,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribeAsync.cs,Should_return_composite_subscription,The length of the statement  "            newChannel.Received().BasicConsume("Queue_Priority2"' false' Arg.Is<string>(x => x.StartsWith("subscriptionName-"))' Arg.Any<IBasicConsumer>()); " is 144.
Long Statement,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribeAsync,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribeAsync.cs,Should_return_composite_subscription,The length of the statement  "            newChannel.Received().BasicConsume("Queue_Priority3"' false' Arg.Is<string>(x => x.StartsWith("subscriptionName-"))' Arg.Any<IBasicConsumer>()); " is 144.
Long Statement,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodPublish,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodPublish.cs,Should_use_route_finder_to_find_routing_key_then_publish_serialized_msg,The length of the statement  "            newChannel.Received().BasicPublish(Arg.Any<string>()' Arg.Any<string>()' Arg.Is<IBasicProperties>(arg => arg.Headers["Priority"].ToString() == "10")' Arg.Any<byte[]>()); " is 169.
Long Statement,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodPublish,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodPublish.cs,Should_not_overwrite_the_priority_if_customer_headers_has_Priority_value_set,The length of the statement  "            tunnel.Publish("Muahaha"' 10' new Dictionary<string' object> { { "Priority"' "100" }' { "AnotherHeaderKey"' "something" } }); " is 125.
Long Statement,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodPublish,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodPublish.cs,Should_not_overwrite_the_priority_if_customer_headers_has_Priority_value_set,The length of the statement  "                                                Arg.Is<IBasicProperties>(arg => arg.Headers["Priority"].ToString() == "10" && arg.Headers["AnotherHeaderKey"].ToString() == "something")'  " is 137.
Long Statement,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_create_subscriptions_to_priority_queues,The length of the statement  "            newChannel.Received().BasicConsume("Queue_Priority0"' false' Arg.Is<string>(x => x.StartsWith("subscriptionName-"))' Arg.Any<IBasicConsumer>()); " is 144.
Long Statement,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_create_subscriptions_to_priority_queues,The length of the statement  "            newChannel.Received().BasicConsume("Queue_Priority1"' false' Arg.Is<string>(x => x.StartsWith("subscriptionName-"))' Arg.Any<IBasicConsumer>()); " is 144.
Long Statement,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_create_subscriptions_to_priority_queues,The length of the statement  "            newChannel.Received().BasicConsume("Queue_Priority2"' false' Arg.Is<string>(x => x.StartsWith("subscriptionName-"))' Arg.Any<IBasicConsumer>()); " is 144.
Long Statement,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_create_subscriptions_to_priority_queues,The length of the statement  "            newChannel.Received().BasicConsume("Queue_Priority3"' false' Arg.Is<string>(x => x.StartsWith("subscriptionName-"))' Arg.Any<IBasicConsumer>()); " is 144.
Long Statement,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_be_able_to_use_custom_route_finder_and_prefix_convention,The length of the statement  "            convention.Get(Arg.Any<Type>()' Arg.Any<uint>()).Returns(callInfo => "_P" + callInfo.Arg<uint>().ToString(CultureInfo.InvariantCulture)); " is 137.
Long Statement,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_be_able_to_use_custom_route_finder_and_prefix_convention,The length of the statement  "            newChannel.Received().BasicConsume("Q_P0"' false' Arg.Is<string>(x => x.StartsWith("subscriptionName-"))' Arg.Any<IBasicConsumer>()); " is 133.
Long Statement,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_be_able_to_use_custom_route_finder_and_prefix_convention,The length of the statement  "            newChannel.Received().BasicConsume("Q_P1"' false' Arg.Is<string>(x => x.StartsWith("subscriptionName-"))' Arg.Any<IBasicConsumer>()); " is 133.
Long Statement,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_be_able_to_use_custom_route_finder_and_prefix_convention,The length of the statement  "            newChannel.Received().BasicConsume("Q_P2"' false' Arg.Is<string>(x => x.StartsWith("subscriptionName-"))' Arg.Any<IBasicConsumer>()); " is 133.
Long Statement,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_be_able_to_use_custom_route_finder_and_prefix_convention,The length of the statement  "            newChannel.Received().BasicConsume("Q_P3"' false' Arg.Is<string>(x => x.StartsWith("subscriptionName-"))' Arg.Any<IBasicConsumer>()); " is 133.
Long Statement,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_be_able_to_use_custom_prefetchSize,The length of the statement  "            convention.Get(Arg.Any<Type>()' Arg.Any<uint>()).Returns(callInfo => "_P" + callInfo.Arg<uint>().ToString(CultureInfo.InvariantCulture)); " is 137.
Long Statement,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_use_default_prefetch_size_if_lt_0,The length of the statement  "            convention.Get(Arg.Any<Type>()' Arg.Any<uint>()).Returns(callInfo => "_P" + callInfo.Arg<uint>().ToString(CultureInfo.InvariantCulture)); " is 137.
Long Statement,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_use_max_ushort_prefetch_size_if_is_too_big,The length of the statement  "            convention.Get(Arg.Any<Type>()' Arg.Any<uint>()).Returns(callInfo => "_P" + callInfo.Arg<uint>().ToString(CultureInfo.InvariantCulture)); " is 137.
Long Statement,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_return_composite_subscription,The length of the statement  "            newChannel.Received().BasicConsume("Queue_Priority0"' false' Arg.Is<string>(x => x.StartsWith("subscriptionName-"))' Arg.Any<IBasicConsumer>()); " is 144.
Long Statement,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_return_composite_subscription,The length of the statement  "            newChannel.Received().BasicConsume("Queue_Priority1"' false' Arg.Is<string>(x => x.StartsWith("subscriptionName-"))' Arg.Any<IBasicConsumer>()); " is 144.
Long Statement,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_return_composite_subscription,The length of the statement  "            newChannel.Received().BasicConsume("Queue_Priority2"' false' Arg.Is<string>(x => x.StartsWith("subscriptionName-"))' Arg.Any<IBasicConsumer>()); " is 144.
Long Statement,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_return_composite_subscription,The length of the statement  "            newChannel.Received().BasicConsume("Queue_Priority3"' false' Arg.Is<string>(x => x.StartsWith("subscriptionName-"))' Arg.Any<IBasicConsumer>()); " is 144.
Long Statement,Burrow.Tests.Extras.PriorityQueuesRabbitSetupTests,MethodSetupExchangeAndQueueFor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\PriorityQueuesRabbitSetupTests\MethodSetupExchangeAndQueueFor.cs,Should_create_normal_queue_if_not_providing_PriorityQueueSetupData,The length of the statement  "            model.Received().QueueBind("Queue.Customer"' "Exchange.Customer"' "Customer"' normalRouteSetupData.OptionalBindingData); " is 120.
Long Statement,Burrow.Tests.Extras.PriorityQueuesRabbitSetupTests,MethodSetupExchangeAndQueueFor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\PriorityQueuesRabbitSetupTests\MethodSetupExchangeAndQueueFor.cs,Should_create_Priority_queue_if_provide_PriorityQueueSetupData,The length of the statement  "            model.Received().QueueBind("Queue.Customer_Priority0"' "Exchange.Customer"' "Customer"' Arg.Is<IDictionary<string' object>>(x => eval(x' 0))); " is 142.
Long Statement,Burrow.Tests.Extras.PriorityQueuesRabbitSetupTests,MethodSetupExchangeAndQueueFor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\PriorityQueuesRabbitSetupTests\MethodSetupExchangeAndQueueFor.cs,Should_create_Priority_queue_if_provide_PriorityQueueSetupData,The length of the statement  "            model.Received().QueueBind("Queue.Customer_Priority1"' "Exchange.Customer"' "Customer"' Arg.Is<IDictionary<string' object>>(x => eval(x' 1))); " is 142.
Long Statement,Burrow.Tests.Extras.PriorityQueuesRabbitSetupTests,MethodSetupExchangeAndQueueFor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\PriorityQueuesRabbitSetupTests\MethodSetupExchangeAndQueueFor.cs,Should_create_Priority_queue_if_provide_PriorityQueueSetupData,The length of the statement  "            model.Received().QueueBind("Queue.Customer_Priority2"' "Exchange.Customer"' "Customer"' Arg.Is<IDictionary<string' object>>(x => eval(x' 2))); " is 142.
Long Statement,Burrow.Tests.Extras.PriorityQueuesRabbitSetupTests,MethodSetupExchangeAndQueueFor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\PriorityQueuesRabbitSetupTests\MethodSetupExchangeAndQueueFor.cs,Should_create_Priority_queue_if_provide_PriorityQueueSetupData,The length of the statement  "            model.Received().QueueBind("Queue.Customer_Priority3"' "Exchange.Customer"' "Customer"' Arg.Is<IDictionary<string' object>>(x => eval(x' 3))); " is 142.
Long Statement,Burrow.Tests.Extras.PriorityQueuesRabbitSetupTests,MethodSetupExchangeAndQueueFor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\PriorityQueuesRabbitSetupTests\MethodSetupExchangeAndQueueFor.cs,Should_not_throw_excepton_if_cannot_create_PRIORITY_queues,The length of the statement  "            model.When(x => x.QueueDeclare(Arg.Any<string>()' true' false' false' Arg.Any<IDictionary<string' object>>())).Do(callInfo => " is 125.
Long Statement,Burrow.Tests.Extras.PriorityQueuesRabbitSetupTests,MethodSetupExchangeAndQueueFor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\PriorityQueuesRabbitSetupTests\MethodSetupExchangeAndQueueFor.cs,Should_not_throw_excepton_if_cannot_create_PRIORITY_queues,The length of the statement  "            Func<IDictionary<string' object>' int' bool> eval = (arg' priority) => "all".Equals(arg["x-match"]) && priority.ToString(CultureInfo.InvariantCulture).Equals(arg["Priority"]); " is 175.
Long Statement,Burrow.Tests.Extras.PriorityQueuesRabbitSetupTests,MethodSetupExchangeAndQueueFor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\PriorityQueuesRabbitSetupTests\MethodSetupExchangeAndQueueFor.cs,Should_not_throw_excepton_if_cannot_create_PRIORITY_queues,The length of the statement  "            model.Received().QueueBind("Queue.Customer_Priority0"' "Exchange.Customer"' "Customer"' Arg.Is<IDictionary<string' object>>(x => eval(x' 0))); " is 142.
Long Statement,Burrow.Tests.Extras.PriorityQueuesRabbitSetupTests,MethodSetupExchangeAndQueueFor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\PriorityQueuesRabbitSetupTests\MethodSetupExchangeAndQueueFor.cs,Should_not_throw_excepton_if_cannot_create_PRIORITY_queues,The length of the statement  "            model.Received().QueueBind("Queue.Customer_Priority1"' "Exchange.Customer"' "Customer"' Arg.Is<IDictionary<string' object>>(x => eval(x' 1))); " is 142.
Long Statement,Burrow.Tests.Extras.PriorityQueuesRabbitSetupTests,MethodSetupExchangeAndQueueFor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\PriorityQueuesRabbitSetupTests\MethodSetupExchangeAndQueueFor.cs,Should_not_throw_excepton_if_cannot_create_PRIORITY_queues,The length of the statement  "            model.Received().QueueBind("Queue.Customer_Priority2"' "Exchange.Customer"' "Customer"' Arg.Is<IDictionary<string' object>>(x => eval(x' 2))); " is 142.
Long Statement,Burrow.Tests.Extras.PriorityQueuesRabbitSetupTests,MethodSetupExchangeAndQueueFor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\PriorityQueuesRabbitSetupTests\MethodSetupExchangeAndQueueFor.cs,Should_not_throw_excepton_if_cannot_create_PRIORITY_queues,The length of the statement  "            model.Received().QueueBind("Queue.Customer_Priority3"' "Exchange.Customer"' "Customer"' Arg.Is<IDictionary<string' object>>(x => eval(x' 3))); " is 142.
Long Statement,Burrow.Tests.Extras.PriorityQueuesRabbitSetupTests,MethodSetupExchangeAndQueueFor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\PriorityQueuesRabbitSetupTests\MethodSetupExchangeAndQueueFor.cs,Should_not_throw_excepton_if_cannot_bind_PRIORITY_queues,The length of the statement  "            model.When(x => x.QueueBind(Arg.Any<string>()' "Exchange.Customer"' "Customer"' Arg.Any<IDictionary<string' object>>())).Do(callInfo => " is 135.
Long Statement,Burrow.Tests.Extras.PriorityQueuesRabbitSetupTests,MethodSetupExchangeAndQueueFor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\PriorityQueuesRabbitSetupTests\MethodSetupExchangeAndQueueFor.cs,Should_catch_OperationInterruptedException_when_trying_to_create_an_exist_queue_but_configuration_not_match,The length of the statement  "            model.When(x => x.QueueDeclare(Arg.Any<string>()' true' false' false' Arg.Any<IDictionary<string' object>>())).Do(callInfo => " is 125.
Long Statement,Burrow.Tests.Extras.PriorityQueuesRabbitSetupTests,MethodSetupExchangeAndQueueFor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\PriorityQueuesRabbitSetupTests\MethodSetupExchangeAndQueueFor.cs,Should_catch_OperationInterruptedException_and_log_error_when_trying_to_create_a_queue,The length of the statement  "            model.When(x => x.QueueDeclare(Arg.Any<string>()' true' false' false' Arg.Any<IDictionary<string' object>>())).Do(callInfo => " is 125.
Long Statement,Burrow.Tests.Extras.DependencyInjectionTunnelFactoryTests,MethodCreate,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\DependencyInjectionTunnelFactoryTests\MethodCreate.cs,Should_create_tunnel_with_HaConnection_if_the_connectionString_says_so,The length of the statement  "            var tunnel = RabbitTunnel.Factory.Create("host=rabbitmq.com:5672;username=guest;password=guest|host=2nd.rabbitmq.com:5672;username=guest;password=guest"' Substitute.For<IRabbitWatcher>()); " is 188.
Long Statement,Burrow.Tests.Extras.Internal.PriorityTunnelFactoryTests,MethodCreate,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityTunnelFactoryTests\MethodCreate.cs,Should_return_a_tunnel_using_PriorityMessageHandlerFactory,The length of the statement  "            var consumerManager = (IConsumerManager)typeof(RabbitTunnel).GetField("_consumerManager"' BindingFlags.NonPublic | BindingFlags.Instance).GetValue(tunnel); " is 155.
Long Statement,Burrow.Tests.Extras.Internal.PriorityTunnelFactoryTests,MethodCreate,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityTunnelFactoryTests\MethodCreate.cs,Should_create_ha_connection_if_provide_cuslter_connection_string,The length of the statement  "            FieldInfo fi = typeof(RabbitTunnelWithPriorityQueuesSupport).GetField("_connection"' BindingFlags.NonPublic | BindingFlags.Instance); " is 133.
Long Statement,Burrow.Tests.Extras.Internal.PriorityTunnelFactoryTests,MethodCreate,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityTunnelFactoryTests\MethodCreate.cs,Should_create_ha_connection_if_provide_cuslter_connection_string,The length of the statement  "            var tunnel = factory.Create("host=unreachable1.com;username=guest;password=guest|host=unreachable2.com;username=guest;password=guest|host=unreachable3.com;username=guest;password=guest"); " is 187.
Long Statement,Burrow.Tests.Extras.RabbitSetupTests,MethodDeclareExchange,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\RabbitSetupTests\MethodDeclareExchange.cs,Should_not_create_exchange_and_write_warning_log_if_exchangeName_is_null_or_empty,The length of the statement  "            model.DidNotReceive().ExchangeDeclare(Arg.Any<string>()' Arg.Any<string>()' Arg.Any<bool>()' Arg.Any<bool>()' Arg.Any<IDictionary<string' object>>()); " is 150.
Long Statement,Burrow.Tests.Extras.RabbitSetupTests,MethodDeclareExchange,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\RabbitSetupTests\MethodDeclareExchange.cs,Should_catch_OperationInterruptedException,The length of the statement  "            model.When(x => x.ExchangeDeclare(Arg.Any<string>()'Arg.Any<string>()'Arg.Any<bool>()'Arg.Any<bool>()'Arg.Any<IDictionary<string' object>>())) " is 142.
Long Statement,Burrow.Tests.Extras.RabbitSetupTests,MethodDeclareExchange,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\RabbitSetupTests\MethodDeclareExchange.cs,Should_catch_OperationInterruptedException,The length of the statement  "                    throw new OperationInterruptedException(new ShutdownEventArgs(ShutdownInitiator.Library' 101' "PRECONDITION_FAILED - Exchange exists")); " is 136.
Long Statement,Burrow.Tests.Extras.RabbitSetupTests,MethodDeclareExchange,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\RabbitSetupTests\MethodDeclareExchange.cs,Should_catch_OperationInterruptedException,The length of the statement  "            model.Received(1).ExchangeDeclare(Arg.Any<string>()' Arg.Any<string>()' Arg.Any<bool>()' Arg.Any<bool>()' Arg.Any<IDictionary<string' object>>()); " is 146.
Long Statement,Burrow.Tests.Extras.RabbitSetupTests,MethodDeclareExchange,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\RabbitSetupTests\MethodDeclareExchange.cs,Should_catch_OperationInterruptedException_and_write_errorLog,The length of the statement  "            model.When(x => x.ExchangeDeclare(Arg.Any<string>()' Arg.Any<string>()' Arg.Any<bool>()' Arg.Any<bool>()' Arg.Any<IDictionary<string' object>>())) " is 146.
Long Statement,Burrow.Tests.Extras.RabbitSetupTests,MethodDeclareExchange,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\RabbitSetupTests\MethodDeclareExchange.cs,Should_catch_OperationInterruptedException_and_write_errorLog,The length of the statement  "            model.Received(1).ExchangeDeclare(Arg.Any<string>()' Arg.Any<string>()' Arg.Any<bool>()' Arg.Any<bool>()' Arg.Any<IDictionary<string' object>>()); " is 146.
Long Statement,Burrow.Tests.Extras.RabbitSetupTests,MethodDeclareExchange,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\RabbitSetupTests\MethodDeclareExchange.cs,Should_catch_all_other_error,The length of the statement  "            model.When(x => x.ExchangeDeclare(Arg.Any<string>()' Arg.Any<string>()' Arg.Any<bool>()' Arg.Any<bool>()' Arg.Any<IDictionary<string' object>>())) " is 146.
Long Statement,Burrow.Tests.Extras.RabbitSetupTests,MethodDeclareExchange,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\RabbitSetupTests\MethodDeclareExchange.cs,Should_catch_all_other_error,The length of the statement  "            model.Received(1).ExchangeDeclare(Arg.Any<string>()' Arg.Any<string>()' Arg.Any<bool>()' Arg.Any<bool>()' Arg.Any<IDictionary<string' object>>()); " is 146.
Long Statement,Burrow.Tests.Extras.RabbitSetupTests,MethodBindQueue,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\RabbitSetupTests\MethodBindQueue.cs,Should_bind_with_provided_params,The length of the statement  "            model.Received().QueueBind(Arg.Any<string>()' Arg.Any<string>()' Arg.Any<string>()' Arg.Is<IDictionary<string' object>>(arg => arg["Key1"] == "Val1")); " is 151.
Long Statement,Burrow.Tests.Extras.RabbitSetupTests,MethodBindQueue,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\RabbitSetupTests\MethodBindQueue.cs,Should_catch_all_exception,The length of the statement  "            model.When(x => x.QueueBind(Arg.Any<string>()' Arg.Any<string>()' Arg.Any<string>()' Arg.Any<IDictionary<string' object>>())) " is 125.
Long Statement,Burrow.Tests.Extras.RabbitSetupTests,MethodSetupExchangeAndQueueFor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\RabbitSetupTests\MethodSetupExchangeAndQueueFor.cs,Should_create_exchange_queues_and_bind_them,The length of the statement  "            model.Received().ExchangeDeclare("Exchange.Customer"' "direct"' true' false' _routeSetupData.ExchangeSetupData.Arguments); " is 122.
Long Statement,Burrow.Tests.Extras.RabbitSetupTests,MethodSetupExchangeAndQueueFor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\RabbitSetupTests\MethodSetupExchangeAndQueueFor.cs,Should_not_throw_exception_if_cannot_declare_queue,The length of the statement  "            model.When(x => x.QueueDeclare("Queue.Customer"' true' false' false' Arg.Any<IDictionary<string' object>>())).Do(callInfo => " is 124.
Long Statement,Burrow.Tests.Extras.RabbitSetupTests,MethodSetupExchangeAndQueueFor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\RabbitSetupTests\MethodSetupExchangeAndQueueFor.cs,Should_catch_OperationInterruptedException_when_trying_to_create_an_exist_queue_but_configuration_not_match,The length of the statement  "            model.When(x => x.QueueDeclare("Queue.Customer"' true' false' false' Arg.Any<IDictionary<string' object>>())).Do(callInfo => " is 124.
Long Statement,Burrow.Tests.Extras.RabbitSetupTests,MethodSetupExchangeAndQueueFor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\RabbitSetupTests\MethodSetupExchangeAndQueueFor.cs,Should_catch_OperationInterruptedException_and_log_error_when_trying_to_create_a_queue,The length of the statement  "            model.When(x => x.QueueDeclare("Queue.Customer"' true' false' false' Arg.Any<IDictionary<string' object>>())).Do(callInfo => " is 124.
Long Statement,Burrow.Tests.Extras.RabbitSetupTests,MethodSetupExchangeAndQueueFor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\RabbitSetupTests\MethodSetupExchangeAndQueueFor.cs,Should_apply_DeadLetter_params,The length of the statement  "            model.Received(1).QueueDeclare(Arg.Any<string>()' true' false' false' Arg.Is<IDictionary<string' object>>(dic => dic.Count == 4)); " is 130.
Long Statement,Burrow.Tests.Extras.RabbitSetupTests,RabbitSetupForTest,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\RabbitSetupTests\RabbitSetupForTest.cs,CreateRabbitSetup,The length of the statement  "            var setup = new RabbitSetupForTest(watcher' "host=testhost;username=guest;password=guest") { DurableConnection = connectionFactory }; " is 133.
Long Statement,Burrow.Tests.Internal.ConsumerManagerTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\ConsumerManagerTests\Constructor.cs,Should_throw_exception_if_watcher_is_null,The length of the statement  "            new ConsumerManager(null' NSubstitute.Substitute.For<IMessageHandlerFactory>()' NSubstitute.Substitute.For<ISerializer>()); " is 123.
Long Statement,Burrow.Tests.Internal.ConsumerManagerTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\ConsumerManagerTests\Constructor.cs,Should_throw_exception_if_serialier_is_null,The length of the statement  "            new ConsumerManager(NSubstitute.Substitute.For<IRabbitWatcher>()' NSubstitute.Substitute.For<IMessageHandlerFactory>()' null); " is 126.
Long Statement,Burrow.Tests.Internal.ManagedConnectionFactoryTests,MethodCreateConnection,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\ManagedConnectionFactoryTests\MethodCreateConnection.cs,Should_clear_existing_connection_from_shared_connection_list_if_connection_is_dropped_by_peer,The length of the statement  "            connection.ConnectionShutdown += Raise.EventWith(connection' new ShutdownEventArgs(ShutdownInitiator.Application' 0' "Connection dropped for unknow reason ;)")); " is 161.
Long Statement,Burrow.Tests.RabbitTunnelTests,MethodTryReconnect,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodTryReconnect.cs,Should_reconnect_if_user_ack_wrong_delivery_id,The length of the statement  "            tunnel.PublicTryReconnect(channel' id' new ShutdownEventArgs(ShutdownInitiator.Peer' 406' "PRECONDITION_FAILED - unknown delivery tag 10000")); " is 143.
Long Statement,Burrow.Tests.RabbitTunnelTests,MethodTryReconnect,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodTryReconnect.cs,Should_log_exception_if_cannot_reconnect,The length of the statement  "            var tunnel = new RabbitTunnelForTest(Substitute.For<IConsumerManager>()' watcher' routeFinder' durableConnection' Substitute.For<ISerializer>()' Substitute.For<ICorrelationIdGenerator>()' true); " is 194.
Long Statement,Burrow.Tests.RabbitTunnelTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\Constructor.cs,Should_throw_exception_if_provide_null_IRouteFinder,The length of the statement  "            new RabbitTunnel(Substitute.For<IConsumerManager>()' Substitute.For<IRabbitWatcher>()' null' Substitute.For<IDurableConnection>()' Substitute.For<ISerializer>()' Substitute.For<ICorrelationIdGenerator>()' false); " is 212.
Long Statement,Burrow.Tests.RabbitTunnelTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\Constructor.cs,Should_throw_exception_if_provide_null_IDurableConnection,The length of the statement  "            new RabbitTunnel(Substitute.For<IConsumerManager>()' Substitute.For<IRabbitWatcher>()' Substitute.For<IRouteFinder>()' null' Substitute.For<ISerializer>()' Substitute.For<ICorrelationIdGenerator>()' false); " is 206.
Long Statement,Burrow.Tests.RabbitTunnelTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\Constructor.cs,Should_throw_exception_if_provide_null_ISerializer,The length of the statement  "            new RabbitTunnel(Substitute.For<IConsumerManager>()' Substitute.For<IRabbitWatcher>()' Substitute.For<IRouteFinder>()' Substitute.For<IDurableConnection>()' null' Substitute.For<ICorrelationIdGenerator>()' false); " is 213.
Long Statement,Burrow.Tests.RabbitTunnelTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\Constructor.cs,Should_throw_exception_if_provide_null_ICorrelationIdGenerator,The length of the statement  "            new RabbitTunnel(Substitute.For<IConsumerManager>()' Substitute.For<IRabbitWatcher>()' Substitute.For<IRouteFinder>()' Substitute.For<IDurableConnection>()' Substitute.For<ISerializer>()' null' false); " is 201.
Long Statement,Burrow.Tests.RabbitTunnelTests,MethodCloseTunnel,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodCloseTunnel.cs,Should_resubscribe_to_queues_after_reconnect_successfully,The length of the statement  "            newChannel.Received(4).BasicConsume("Queue"' false' Arg.Is<string>(x => x.StartsWith("subscriptionName"))' Arg.Any<IBasicConsumer>()); " is 134.
Long Statement,Burrow.Tests.RabbitTunnelTests,MethodPublish,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodPublish.cs,Should_use_route_finder_to_find_routing_key_then_publish_serialized_msg,The length of the statement  "            newChannel.Received().BasicPublish(Arg.Any<string>()' Arg.Any<string>()' Arg.Any<IBasicProperties>()' Arg.Any<byte[]>()); " is 121.
Long Statement,Burrow.Tests.RabbitTunnelTests,MethodPublish,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodPublish.cs,Should_use_topic_route_finder_to_find_routing_key_if_provided,The length of the statement  "            newChannel.Received(2).BasicPublish(Arg.Any<string>()' "This.Is.A.Topic"' Arg.Any<IBasicProperties>()' Arg.Any<byte[]>()); " is 122.
Long Statement,Burrow.Tests.RabbitTunnelTests,MethodPublish,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodPublish.cs,Should_be_able_to_publish_with_routingKey,The length of the statement  "            newChannel.Received().BasicPublish(Arg.Any<string>()' "RoutingKey"' Arg.Is<IBasicProperties>(p => p.Headers.Count == 0)' Arg.Any<byte[]>()); " is 140.
Long Statement,Burrow.Tests.RabbitTunnelTests,MethodPublish,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodPublish.cs,Should_publish_message_to_header_exchange_with_custom_headers_if_provided,The length of the statement  "            tunnel.Publish("Muahaha"' new Dictionary<string' object>{ { "SomeHeaderKey"' "somevalue" }' { "AnotherHeaderKey"' "somethingelse" } }); " is 135.
Long Statement,Burrow.Tests.RabbitTunnelTests,MethodPublish,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodPublish.cs,Should_publish_message_to_header_exchange_with_custom_headers_if_provided,The length of the statement  "                                                Arg.Is<IBasicProperties>(arg => arg.Headers["SomeHeaderKey"].ToString() == "somevalue" && arg.Headers["AnotherHeaderKey"].ToString() == "somethingelse")'  " is 153.
Long Statement,Burrow.Tests.RabbitTunnelTests,MethodPublish,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodPublish.cs,Should_create_dedicated_channel_without_reconnect_if_connection_has_been_connected_before,The length of the statement  "            newChannel.Received(2).BasicPublish(Arg.Any<string>()' Arg.Any<string>()' Arg.Any<IBasicProperties>()' Arg.Any<byte[]>()); " is 122.
Long Statement,Burrow.Tests.RabbitTunnelTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodSubscribe.cs,Should_create_subscriptions_to_queues,The length of the statement  "            newChannel.Received().BasicConsume("Queue"' false' Arg.Is<string>(x => x.StartsWith("subscriptionName-"))' Arg.Any<IBasicConsumer>()); " is 134.
Long Statement,Burrow.Tests.RabbitTunnelTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodSubscribe.cs,Should_return_subscription,The length of the statement  "            newChannel.Received().BasicConsume("Queue"' false' Arg.Is<string>(x => x.StartsWith("subscriptionName-"))' Arg.Any<IBasicConsumer>()); " is 134.
Long Statement,Burrow.Tests.RabbitTunnelTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodSubscribe.cs,Should_be_able_to_subscribe_with_provided_options,The length of the statement  "            newChannel.Received().BasicConsume("QueueByCustomRouteFinder"' false' Arg.Is<string>(x => x.StartsWith("subscriptionName-"))' Arg.Any<IBasicConsumer>()); " is 153.
Long Statement,Burrow.Tests.RabbitTunnelTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodSubscribe.cs,Should_warn_if_prefetch_size_is_too_large,The length of the statement  "            newChannel.Received().BasicConsume("QueueByCustomRouteFinder"' false' Arg.Is<string>(x => x.StartsWith("subscriptionName-"))' Arg.Any<IBasicConsumer>()); " is 153.
Long Statement,Burrow.Tests.RabbitTunnelTests,MethodSubscribeAsync,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodSubscribeAsync.cs,Should_create_subscriptions_to_queue,The length of the statement  "            newChannel.Received().BasicConsume("Queue"' false' Arg.Is<string>(x => x.StartsWith("subscriptionName-"))' Arg.Any<IBasicConsumer>()); " is 134.
Long Statement,Burrow.Tests.RabbitTunnelTests,MethodSubscribeAsync,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodSubscribeAsync.cs,Should_return_subscription,The length of the statement  "            newChannel.Received().BasicConsume("Queue"' false' Arg.Is<string>(x => x.StartsWith("subscriptionName-"))' Arg.Any<IBasicConsumer>()); " is 134.
Long Statement,Burrow.Tests.RabbitTunnelTests,MethodTrySubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodTrySubscribe.cs,Should_not_throw_OperationInterruptedException,The length of the statement  "            tunnel.TrySubscribeForTest(() => { throw new OperationInterruptedException(new ShutdownEventArgs(ShutdownInitiator.Peer' 3'"")); }); " is 132.
Long Statement,Burrow.Tests.RPC.BurrowRpcClientCoordinatorTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RPC\BurrowRpcClientCoordinatorTests\Constructor.cs,Should_create_request_and_response_queue_by_default,The length of the statement  "            model.Received(1).QueueDeclare("ISomeService.ResponseQueue"' true' false' true' Arg.Any<IDictionary<string' object>>()); " is 120.
Long Statement,Burrow.Tests.RPC.BurrowRpcClientCoordinatorTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RPC\BurrowRpcClientCoordinatorTests\Constructor.cs,Should_create_request_and_response_queue_by_default,The length of the statement  "            model.Received(1).QueueDeclare("ISomeService.RequestQueue"' true' false' false' Arg.Any<IDictionary<string' object>>()); " is 120.
Long Statement,Burrow.Tests.RPC.BurrowRpcServerCoordinatorTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RPC\BurrowRpcServerCoordinatorTests\Constructor.cs,Should_throw_exception_if_provide_null_route_finder,The length of the statement  "            new BurrowRpcServerCoordinator<ISomeService>(NSubstitute.Substitute.For<ISomeService>()' routeFinder' "queue-connnection-string"); " is 130.
Long Statement,Burrow.Tests.RPC.BurrowRpcServerCoordinatorTests,MethodHandleMesage,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RPC\BurrowRpcServerCoordinatorTests\MethodHandleMesage.cs,Should_publish_respones_with_Exception_if_method_not_match,The length of the statement  "            tunnel.Received(1).Publish(Arg.Is<RpcResponse>(arg => arg.Exception != null && arg.RequestId == request.Id)' "Address"); " is 120.
Long Statement,Burrow.Tests.RPC.BurrowRpcServerCoordinatorTests,MethodHandleMesage,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RPC\BurrowRpcServerCoordinatorTests\MethodHandleMesage.cs,Should_invoke_method_on_real_instance_and_map_response_params,The length of the statement  "                Params = new Dictionary<string' object> { { "page"' (long)1 /* long value will be converted to proper int value */}' {"query"' new SomeMessage " is 142.
Long Statement,Burrow.Tests.RPC.BurrowRpcServerCoordinatorTests,MethodStart,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RPC\BurrowRpcServerCoordinatorTests\MethodStart.cs,Should_create_exchange_and_auto_delete_request_queue_if_provide_serverId_and_exchange_not_empty,The length of the statement  "            var server = new BurrowRpcServerCoordinator<ISomeService>(instance' routeFinder' "queue-connnection-string"' "serverId"); " is 121.
Long Statement,Burrow.Tests.RPC.BurrowRpcServerCoordinatorTests,MethodStart,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RPC\BurrowRpcServerCoordinatorTests\MethodStart.cs,Should_create_exchange_and_auto_delete_request_queue_if_provide_serverId_and_exchange_not_empty,The length of the statement  "            model.Received(1).QueueDeclare("ISomeService.serverId.RequestQueue"' true' false' true' Arg.Any<IDictionary<string' object>>()); " is 128.
Long Statement,Burrow.Tests.RPC.BurrowRpcServerCoordinatorTests,MethodStart,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RPC\BurrowRpcServerCoordinatorTests\MethodStart.cs,Should_create_exchange_and_auto_delete_request_queue_if_provide_serverId_and_exchange_not_empty,The length of the statement  "            model.Received(1).QueueBind("ISomeService.serverId.RequestQueue"' "ISomeService.Exchange"' "ISomeService.serverId.RequestQueue"); " is 129.
Long Statement,Burrow.Tests.RPC.BurrowRpcServerCoordinatorTests,MethodStart,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RPC\BurrowRpcServerCoordinatorTests\MethodStart.cs,Should_create_durable_request_queue_if_not_provide_server_id,The length of the statement  "            model.Received(1).QueueDeclare("ISomeService.serverId.RequestQueue"' true' false' false' Arg.Any<IDictionary<string' object>>()); " is 129.
Long Statement,Burrow.Tests.RPC.BurrowRpcServerCoordinatorTests,MethodStart,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RPC\BurrowRpcServerCoordinatorTests\MethodStart.cs,Should_create_durable_request_queue_if_provide_server_id_but_exchange_name_is_null,The length of the statement  "            var server = new BurrowRpcServerCoordinator<ISomeService>(instance' routeFinder' "queue-connnection-string"' "serverId"); " is 121.
Long Statement,Burrow.Tests.RPC.BurrowRpcServerCoordinatorTests,MethodStart,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RPC\BurrowRpcServerCoordinatorTests\MethodStart.cs,Should_create_durable_request_queue_if_provide_server_id_but_exchange_name_is_null,The length of the statement  "            model.Received(1).QueueDeclare("ISomeService.serverId.RequestQueue"' true' false' false' Arg.Any<IDictionary<string' object>>()); " is 129.
Long Statement,Burrow.Tests.RPC.RpcFactoryTests,MethodCreateFanoutServer,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RPC\RpcFactoryTests\MethodCreateFanoutServer.cs,Should_use_DefaultFanoutRpcRequestRouteFinder,The length of the statement  "            var server = RpcFactory.CreateFanoutServer(Substitute.For<ISomeService>()' serverId: "ServerId") as BurrowRpcServerCoordinator<ISomeService>; " is 141.
Long Statement,Burrow.Tests.RPC.RpcFactoryTests,MethodCreateFanoutServer,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RPC\RpcFactoryTests\MethodCreateFanoutServer.cs,Should_use_DefaultFanoutRpcRequestRouteFinder,The length of the statement  "            model.Received(1).QueueDeclare("Burrow.Queue.Rpc.ServerId.ISomeService.Requests"' true' false' true' Arg.Any<IDictionary<string' object>>()); " is 141.
Long Statement,Burrow.Tests.RPC.RpcFactoryTests,MethodCreateServer,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RPC\RpcFactoryTests\MethodCreateServer.cs,Can_provide_request_queue_name,The length of the statement  "            var server = RpcFactory.CreateServer(Substitute.For<ISomeService>()' "RequestQueue") as BurrowRpcServerCoordinator<ISomeService>; " is 129.
Long Statement,Burrow.Tests.RPC.RpcFactoryTests,MethodCreateServer,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RPC\RpcFactoryTests\MethodCreateServer.cs,Should_use_DefaulRpcRouteFinder_if_not_provide_serverId,The length of the statement  "            model.Received(1).QueueDeclare("Burrow.Queue.Rpc.ISomeService.Requests"' true' false' false' Arg.Any<IDictionary<string' object>>()); " is 133.
Long Statement,Burrow.Tests.RPC.RpcFactoryTests,MethodCreateServer,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RPC\RpcFactoryTests\MethodCreateServer.cs,Should_use_DefaulRpcRouteFinder_if_not_provide_serverId,The length of the statement  "            model.DidNotReceive().ExchangeDeclare(Arg.Any<string>()' Arg.Any<string>()' Arg.Any<bool>()' Arg.Any<bool>()' Arg.Any<IDictionary<string' object>>()); " is 150.
Long Statement,Burrow.Tests.RPC.RpcFactoryTests,MethodCreateServer,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RPC\RpcFactoryTests\MethodCreateServer.cs,Should_use_DefaulRpcRouteFinder_and_declare_durable_request_queue,The length of the statement  "            var server = RpcFactory.CreateServer(Substitute.For<ISomeService>()' "RequestQueue"' serverId: "ServerId") as BurrowRpcServerCoordinator<ISomeService>; " is 151.
Long Statement,Burrow.Tests.RPC.RpcFactoryTests,MethodCreateServer,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RPC\RpcFactoryTests\MethodCreateServer.cs,Should_use_DefaulRpcRouteFinder_and_create_durable_queue_even_if_not_provide_serverId,The length of the statement  "            var server = RpcFactory.CreateServer(Substitute.For<ISomeService>()' "RequestQueue") as BurrowRpcServerCoordinator<ISomeService>; " is 129.
Long Statement,Burrow.Tests.RPC.RpcClientInterceptorTests,MethodIntercept,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RPC\RpcClientInterceptorTests\MethodIntercept.cs,Should_set_out_value_and_return_value,The length of the statement  "                           ChangedParams = new Dictionary<string' object> { { "totalCount"' (long)1000/* long value will be converted to proper int value */} } " is 132.
Long Statement,Burrow.Tests.SubscriptionTests,MethodTryCancel,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\SubscriptionTests\MethodTryCancel.cs,Should_catch_AlreadyClosedException_and_IOException,The length of the statement  "            subscription.TryCancel(m => { throw new AlreadyClosedException(new ShutdownEventArgs(ShutdownInitiator.Application' 0' "")); }' null' Substitute.For<IRabbitWatcher>()); " is 168.
Long Statement,Burrow.Tests.SubscriptionTests,MethodTryAckOrNAck,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\SubscriptionTests\MethodTryAckOrNAck.cs,Should_catch_AlreadyClosedException,The length of the statement  "            model.When(x => x.BasicAck(Arg.Any<ulong>()' Arg.Any<bool>())).Do(callInfo => { throw new AlreadyClosedException(new ShutdownEventArgs(ShutdownInitiator.Peer' 1' "Shutdown")); }); " is 179.
Long Statement,Burrow.Tests.SubscriptionTests,MethodTryAckOrNAck,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\SubscriptionTests\MethodTryAckOrNAck.cs,Should_throw_other_Exceptions,The length of the statement  "            model.When(x => x.BasicNack(Arg.Any<ulong>()' Arg.Any<bool>()' Arg.Any<bool>())).Do(callInfo => { throw new Exception(); }); " is 124.
Long Statement,Burrow.Tests.TunnelFactoryTests,MethodCloseAllConnections,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\TunnelFactoryTests\MethodCloseAllConnections.cs,Should_close_and_dispose_all_SharedConnections,The length of the statement  "            var connectionFactory = DurableConnectionTestHelper.CreateMockConnectionFactory<ManagedConnectionFactory>("/vHost22"' out rmqConnection); " is 137.
Long Statement,Burrow.Tests.TunnelFactoryTests,MethodCreate,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\TunnelFactoryTests\MethodCreate.cs,Should_be_able_to_create_tunnel_with_provided_values,The length of the statement  "            var tunnel = RabbitTunnel.Factory.Create("localhost"' 1000' "/"' "guest"' "guest"' NSubstitute.Substitute.For<IRabbitWatcher>()); " is 129.
Long Statement,Burrow.Tests.TunnelFactoryTests,MethodCreate,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\TunnelFactoryTests\MethodCreate.cs,Should_create_ha_connection_if_provide_cuslter_connection_string,The length of the statement  "            var tunnel = RabbitTunnel.Factory.Create("host=unreachable1.com;username=guest;password=guest|host=unreachable2.com;username=guest;password=guest|host=unreachable3.com;username=guest;password=guest"); " is 200.
Long Statement,Burrow.Tests.Internal.ConsumerErrorHandlerTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\ConsumerErrorHandlerTests\Constructor.cs,Should_throw_exception_if_conectionFactory_is_null,The length of the statement  "            new ConsumerErrorHandler(null' NSubstitute.Substitute.For<ISerializer>()' NSubstitute.Substitute.For<IRabbitWatcher>()); " is 120.
Long Statement,Burrow.Tests.Internal.ConsumerErrorHandlerTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\ConsumerErrorHandlerTests\Constructor.cs,Should_throw_exception_if_serializer_is_null,The length of the statement  "            new ConsumerErrorHandler(NSubstitute.Substitute.For<IDurableConnection>()' null' NSubstitute.Substitute.For<IRabbitWatcher>()); " is 127.
Long Statement,Burrow.Tests.Internal.ConsumerErrorHandlerTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\ConsumerErrorHandlerTests\Constructor.cs,Should_throw_exception_if_watcher_is_null,The length of the statement  "            new ConsumerErrorHandler(NSubstitute.Substitute.For<IDurableConnection>()' NSubstitute.Substitute.For<ISerializer>()' null); " is 124.
Long Statement,Burrow.Tests.Internal.ConsumerErrorHandlerTests,MethodHandleError,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\ConsumerErrorHandlerTests\MethodHandleError.cs,Should_create_exchange_queue_and_put_error_to_queue,The length of the statement  "            var handler = new ConsumerErrorHandler(durableConnection' Substitute.For<ISerializer>()' Substitute.For<IRabbitWatcher>()); " is 123.
Long Statement,Burrow.Tests.Internal.ConsumerErrorHandlerTests,MethodHandleError,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\ConsumerErrorHandlerTests\MethodHandleError.cs,Should_catch_OperationInterruptedException,The length of the statement  "                      .Do(callInfo => { throw new OperationInterruptedException(new ShutdownEventArgs(ShutdownInitiator.Peer' 1' "Shutdown ;)"));}); " is 126.
Long Statement,Burrow.Tests.Internal.DurableConnectionTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\DurableConnectionTests\Constructor.cs,Should_subscribe_to_ConnectionEstablished_event,The length of the statement  "            using(var connection = new DurableConnection(Substitute.For<IRetryPolicy>()' Substitute.For<IRabbitWatcher>()' connectionFactory)) " is 130.
Long Statement,Burrow.Tests.Internal.DurableConnectionTests,MethodDispose,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\DurableConnectionTests\MethodDispose.cs,Should_unsubscribe_to_ConnectionEstablished_event,The length of the statement  "            var connection = new DurableConnection(Substitute.For<IRetryPolicy>()' Substitute.For<IRabbitWatcher>()' connectionFactory); " is 124.
Long Statement,Burrow.Tests.Internal.DurableConnectionTests,MethodSharedConnectionShutdown,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\DurableConnectionTests\MethodSharedConnectionShutdown.cs,Should_be_called_if_App_is_closed_by_user,The length of the statement  "            rmqConnection.ConnectionShutdown += Raise.EventWith(rmqConnection' new ShutdownEventArgs(ShutdownInitiator.Application' 0' "Connection disposed by application")); " is 162.
Long Statement,Burrow.Tests.Internal.DurableConnectionTests,MethodSharedConnectionShutdown,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\DurableConnectionTests\MethodSharedConnectionShutdown.cs,Should_try_reconnect_by_retryPolicy_if_Connection_Shutdown_event_was_fired,The length of the statement  "            rmqConnection.ConnectionShutdown += Raise.EventWith(rmqConnection' new ShutdownEventArgs(ShutdownInitiator.Application' 0' "Connection dropped for unknow reason ;)")); " is 167.
Empty Catch Block,Burrow.Tests.Internal.DurableConnectionTests,DurableConnectionTestHelper,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\DurableConnectionTests\DurableConnectionTestHelper.cs,CleanUp,The method has an empty catch block.
Magic Number,Burrow.Tests.BurrowConsumerTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\Constructor.cs,Should_throw_exception_if_provide_null_channel,The following statement contains a magic number: new BurrowConsumer(null' NSubstitute.Substitute.For<IMessageHandler>()'                                 NSubstitute.Substitute.For<IRabbitWatcher>()' false' 3);
Magic Number,Burrow.Tests.BurrowConsumerTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\Constructor.cs,Should_throw_exception_if_provide_null_messageHandler,The following statement contains a magic number: new BurrowConsumer(NSubstitute.Substitute.For<IModel>()' null'                                 NSubstitute.Substitute.For<IRabbitWatcher>()' false' 3);
Magic Number,Burrow.Tests.BurrowConsumerTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\Constructor.cs,Should_throw_exception_if_provide_null_watcher,The following statement contains a magic number: new BurrowConsumer(NSubstitute.Substitute.For<IModel>()' NSubstitute.Substitute.For<IMessageHandler>()'                                 null' false' 3);
Magic Number,Burrow.Tests.BurrowConsumerTests,MessageWasNotHandled,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MessageWasNotHandled.cs,Should_be_executed_when_the_message_was_not_handled,The following statement contains a magic number: var consumer = new BurrowConsumerForTest(model' msgHandler' Substitute.For<IRabbitWatcher>()' false' 3) { ConsumerTag = "ConsumerTag" };
Magic Number,Burrow.Tests.BurrowConsumerTests,MessageWasNotHandled,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MessageWasNotHandled.cs,Should_be_executed_when_the_message_was_not_handled,The following statement contains a magic number: Assert.IsTrue(consumer.WaitHandler.WaitOne(5000)' "Test wait timeout");
Magic Number,Burrow.Tests.BurrowConsumerTests,MessageWasNotHandled,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MessageWasNotHandled.cs,Should_handle_all_exception,The following statement contains a magic number: var consumer = new BurrowConsumer(model' msgHandler' watcher' false' 3) { ConsumerTag = "ConsumerTag" };
Magic Number,Burrow.Tests.BurrowConsumerTests,MessageWasNotHandled,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MessageWasNotHandled.cs,Should_handle_all_exception,The following statement contains a magic number: Assert.IsTrue(waitHandler.WaitOne(1000));
Magic Number,Burrow.Tests.BurrowConsumerTests,MethodHandleMessageDelivery,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MethodHandleMessageDelivery.cs,When_called_should_execute_methods_on_message_handler,The following statement contains a magic number: var consumer = new BurrowConsumer(model' msgHandler' watcher' true' 3)                                 {                                     ConsumerTag = "ConsumerTag"                                 };
Magic Number,Burrow.Tests.BurrowConsumerTests,MethodHandleMessageDelivery,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MethodHandleMessageDelivery.cs,When_called_should_dispose_if_the_message_handler_throws_exception,The following statement contains a magic number: var consumer = new BurrowConsumer(model' msgHandler' watcher' true' 3) { ConsumerTag = "ConsumerTag" };
Magic Number,Burrow.Tests.BurrowConsumerTests,MethodHandleMessageDelivery,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MethodHandleMessageDelivery.cs,When_called_should_dispose_if_the_message_handler_throws_exception,The following statement contains a magic number: Assert.IsTrue(waitHandler.WaitOne(1000));
Magic Number,Burrow.Tests.BurrowConsumerTests,MethodDoAck,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MethodDoAck.cs,Should_do_nothing_if_not_connected,The following statement contains a magic number: var consumer = new BurrowConsumerForTest(model' msgHandler' Substitute.For<IRabbitWatcher>()' true' 3) { ConsumerTag = "ConsumerTag" };
Magic Number,Burrow.Tests.BurrowConsumerTests,MethodDoAck,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MethodDoAck.cs,Should_do_nothing_if_already_disposed,The following statement contains a magic number: var consumer = new BurrowConsumerForTest(model' Substitute.For<IMessageHandler>()' Substitute.For<IRabbitWatcher>()' true' 3) { ConsumerTag = "ConsumerTag" };
Magic Number,Burrow.Tests.BurrowConsumerTests,MethodDoAck,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MethodDoAck.cs,Should_catch_AlreadyClosedException,The following statement contains a magic number: var consumer = new BurrowConsumerForTest(model' msgHandler' watcher' true' 3) { ConsumerTag = "ConsumerTag" };
Magic Number,Burrow.Tests.BurrowConsumerTests,MethodDoAck,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MethodDoAck.cs,Should_catch_IOException,The following statement contains a magic number: var consumer = new BurrowConsumerForTest(model' msgHandler' watcher' true' 3) { ConsumerTag = "ConsumerTag" };
Magic Number,Burrow.Tests.BurrowConsumerTests,MethodDoAck,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MethodDoAck.cs,Should_throw_other_Exceptions,The following statement contains a magic number: var consumer = new BurrowConsumerForTest(model' msgHandler' watcher' true' 3) { ConsumerTag = "ConsumerTag" };
Magic Number,Burrow.Tests.BurrowConsumerTests,MethodWaitAndHandleMessageDelivery,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MethodWaitAndHandleMessageDelivery.cs,Should_log_error_if_arrived_message_is_null,The following statement contains a magic number: System.Threading.Thread.Sleep(500);
Magic Number,Burrow.Tests.BurrowConsumerTests,MethodWhenChannelShutdown,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MethodWhenChannelShutdown.cs,Should_be_executed_when_the_channel_is_shutdown,The following statement contains a magic number: var consumer = new BurrowConsumerForTest(model' msgHandler'                                                       Substitute.For<IRabbitWatcher>()' true' 3) { ConsumerTag = "ConsumerTag" };
Magic Number,Burrow.Tests.BurrowConsumerTests,MethodWhenChannelShutdown,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MethodWhenChannelShutdown.cs,Should_be_executed_when_the_channel_is_shutdown,The following statement contains a magic number: Assert.IsTrue(consumer.WaitHandler.WaitOne(5000)' "Test wait timeout");
Magic Number,Burrow.Tests.BurrowConsumerTests,MessageHandlerHandlingComplete,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MessageHandlerHandlingComplete.cs,Should_be_executed_when_the_message_handler_complete_message,The following statement contains a magic number: var consumer = new BurrowConsumerForTest(model' msgHandler' Substitute.For<IRabbitWatcher>()' true' 3) {ConsumerTag = "ConsumerTag"};
Magic Number,Burrow.Tests.BurrowConsumerTests,MessageHandlerHandlingComplete,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MessageHandlerHandlingComplete.cs,Should_be_executed_when_the_message_handler_complete_message,The following statement contains a magic number: Assert.IsTrue(consumer.WaitHandler.WaitOne(5000)' "Test wait timeout");
Magic Number,Burrow.Tests.BurrowConsumerTests,MessageHandlerHandlingComplete,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MessageHandlerHandlingComplete.cs,Should_handle_all_exception,The following statement contains a magic number: var consumer = new BurrowConsumer(model' msgHandler' watcher' true' 3) { ConsumerTag = "ConsumerTag" };
Magic Number,Burrow.Tests.BurrowConsumerTests,MessageHandlerHandlingComplete,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MessageHandlerHandlingComplete.cs,Should_handle_all_exception,The following statement contains a magic number: Assert.IsTrue(waitHandler.WaitOne(5000)' "Test wait timeout");
Magic Number,Burrow.Tests.BurrowConsumerTests,MethodDispose,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MethodDispose.cs,Can_called_many_times,The following statement contains a magic number: var consumer = new BurrowConsumer(Substitute.For<IModel>()' Substitute.For<IMessageHandler>()'                                                Substitute.For<IRabbitWatcher>()' false' 3) { ConsumerTag = "ConsumerTag" };
Magic Number,Burrow.Tests.BurrowConsumerTests,MethodDispose,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MethodDispose.cs,Can_wait_until_messageInProcess_down_to_0,The following statement contains a magic number: watcher.When(x => x.InfoFormat(Arg.Any<string>()' Arg.Any<object[]>()))                      .Do(callInfo => Task.Factory.StartNew(() =>                      {                          if (fireHandlingComplete) return;                          //When print log for waiting' fire HandlingComplete on msgHandler to decrease the messageInProcessCount                          Thread.Sleep(2000);                          msgHandler.HandlingComplete += Raise.Event<MessageHandlingEvent>(new BasicDeliverEventArgs                          {                              BasicProperties = Substitute.For<IBasicProperties>()'                              ConsumerTag = "ConsumerTag"                          });                          fireHandlingComplete = true;                      }));
Magic Number,Burrow.Tests.BurrowConsumerTests,MethodDispose,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MethodDispose.cs,Can_wait_until_messageInProcess_down_to_0,The following statement contains a magic number: msgHandler.When(x => x.HandleMessage(Arg.Any<BasicDeliverEventArgs>()))                        .Do(callInfo => Task.Factory.StartNew(() =>                        {                            Thread.Sleep(1000); // Wait 1 sec so the messageInProcessCount will increase' it will block the dispose later                            waitHandler.Set();  // Release the waitHandler so Dispose can be called                        }));
Magic Number,Burrow.Tests.BurrowConsumerTests,MethodDispose,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MethodDispose.cs,Can_wait_until_messageInProcess_down_to_0,The following statement contains a magic number: var consumer = new BurrowConsumer(model' msgHandler' watcher' true' 3) { ConsumerTag = "ConsumerTag" };
Magic Number,Burrow.Tests.BurrowConsumerTests,MethodDispose,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\BurrowConsumerTests\MethodDispose.cs,Can_wait_until_messageInProcess_down_to_0,The following statement contains a magic number: Assert.IsTrue(waitHandler.WaitOne(1500));
Magic Number,Burrow.Tests.ConnectionStringTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\ConnectionStringTests\Constructor.cs,Should_be_able_to_regconize_the_port_number,The following statement contains a magic number: Assert.AreEqual(1234' connection.Port);
Magic Number,Burrow.Tests.ConnectionStringTests,MethodGetValue,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\ConnectionStringTests\MethodGetValue.cs,Should_return_value_provided_in_connectionstring,The following statement contains a magic number: Assert.AreEqual(5672' con.Port);
Magic Number,Burrow.Tests.ConnectionStringTests,MethodGetValue,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\ConnectionStringTests\MethodGetValue.cs,Should_return_proper_host_and_port_if_provided_in_the_host_section,The following statement contains a magic number: Assert.AreEqual(5673' con.Port);
Magic Number,Burrow.Tests.DefaultMessageHandlerTests,MethodCleanUp,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\DefaultMessageHandlerTests\MethodCleanUp.cs,Should_fire_event_MessageWasNotHandled_if_msg_was_not_handled,The following statement contains a magic number: Assert.IsTrue(waitHandler.WaitOne(1000));
Magic Number,Burrow.Tests.DefaultMessageHandlerTests,MethodCleanUp,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\DefaultMessageHandlerTests\MethodCleanUp.cs,Should_catch_all_exception_when_firing_event_MessageWasNotHandled,The following statement contains a magic number: Assert.IsTrue(waitHandler.WaitOne(1000));
Magic Number,Burrow.Tests.DefaultMessageHandlerTests,MethodHandleMessage,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\DefaultMessageHandlerTests\MethodHandleMessage.cs,Should_fire_event_HandlingComplete,The following statement contains a magic number: Assert.IsTrue(are.WaitOne(1000));
Magic Number,Burrow.Tests.DefaultMessageHandlerTests,MethodHandleMessage,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\DefaultMessageHandlerTests\MethodHandleMessage.cs,Should_handle_error_if_the_task_failed,The following statement contains a magic number: Assert.IsTrue(are.WaitOne(1000));
Magic Number,Burrow.Tests.DefaultMessageHandlerTests,MethodHandleMessage,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\DefaultMessageHandlerTests\MethodHandleMessage.cs,Should_not_throw_any_exception,The following statement contains a magic number: Assert.IsTrue(are.WaitOne(1000));
Magic Number,Burrow.Tests.DefaultTaskCreationOptionProviderTests,MethodGetOptions,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\DefaultTaskCreationOptionProviderTests\MethodGetOptions.cs,Should_return_long_running_if_ThreadPool_is_full,The following statement contains a magic number: var t = new DefaultTaskCreationOptionProvider(1023);
Magic Number,Burrow.Tests.DefaultTaskCreationOptionProviderTests,MethodGetOptions,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\DefaultTaskCreationOptionProviderTests\MethodGetOptions.cs,Should_return_long_running_if_ThreadPool_is_full,The following statement contains a magic number: ThreadPool.SetMaxThreads(1023' 1000);
Magic Number,Burrow.Tests.DefaultTaskCreationOptionProviderTests,MethodGetOptions,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\DefaultTaskCreationOptionProviderTests\MethodGetOptions.cs,Should_return_long_running_if_ThreadPool_is_full,The following statement contains a magic number: ThreadPool.SetMaxThreads(1023' 1000);
Magic Number,Burrow.Tests.Extras.Internal.CompositeSubscriptionTests,MethodAckAllUpTo,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\CompositeSubscriptionTests\MethodAckAllUpTo.cs,Should_ack_with_provided_delivery_tag_with_multiple_flag,The following statement contains a magic number: subs.AckAllUpTo("ConsumerTag"' 10);
Magic Number,Burrow.Tests.Extras.Internal.CompositeSubscriptionTests,MethodAckAllUpTo,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\CompositeSubscriptionTests\MethodAckAllUpTo.cs,Should_ack_with_provided_delivery_tag_with_multiple_flag,The following statement contains a magic number: channel.Received().BasicAck(10' true);
Magic Number,Burrow.Tests.Extras.Internal.CompositeSubscriptionTests,MethodNackAllUpTo,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\CompositeSubscriptionTests\MethodNackAllUpTo.cs,Should_Nack_with_provided_delivery_tag_with_multiple_flag,The following statement contains a magic number: subs.NackAllUpTo("ConsumerTag"' 10' false);
Magic Number,Burrow.Tests.Extras.Internal.CompositeSubscriptionTests,MethodNackAllUpTo,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\CompositeSubscriptionTests\MethodNackAllUpTo.cs,Should_Nack_with_provided_delivery_tag_with_multiple_flag,The following statement contains a magic number: channel.Received(1).BasicNack(10' true' false);
Magic Number,Burrow.Tests.Extras.Internal.CompositeSubscriptionTests,MethodNack,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\CompositeSubscriptionTests\MethodNack.cs,Should_call_Nack_on_nested_subscriptions_with_all_delivery_tag,The following statement contains a magic number: subs.Nack("ConsumerTag"' new[] { (ulong)1' (ulong)2' (ulong)3' (ulong)4' (ulong)5 }' false);
Magic Number,Burrow.Tests.Extras.Internal.CompositeSubscriptionTests,MethodNack,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\CompositeSubscriptionTests\MethodNack.cs,Should_call_Nack_on_nested_subscriptions_with_all_delivery_tag,The following statement contains a magic number: subs.Nack("ConsumerTag"' new[] { (ulong)1' (ulong)2' (ulong)3' (ulong)4' (ulong)5 }' false);
Magic Number,Burrow.Tests.Extras.Internal.CompositeSubscriptionTests,MethodNack,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\CompositeSubscriptionTests\MethodNack.cs,Should_call_Nack_on_nested_subscriptions_with_all_delivery_tag,The following statement contains a magic number: subs.Nack("ConsumerTag"' new[] { (ulong)1' (ulong)2' (ulong)3' (ulong)4' (ulong)5 }' false);
Magic Number,Burrow.Tests.Extras.Internal.CompositeSubscriptionTests,MethodNack,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\CompositeSubscriptionTests\MethodNack.cs,Should_call_Nack_on_nested_subscriptions_with_all_delivery_tag,The following statement contains a magic number: subs.Nack("ConsumerTag"' new[] { (ulong)1' (ulong)2' (ulong)3' (ulong)4' (ulong)5 }' false);
Magic Number,Burrow.Tests.Extras.Internal.CompositeSubscriptionTests,MethodNack,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\CompositeSubscriptionTests\MethodNack.cs,Should_call_Nack_on_nested_subscriptions_with_all_delivery_tag,The following statement contains a magic number: channel.Received().BasicNack(5' true' false);
Magic Number,Burrow.Tests.Extras.Internal.CompositeSubscriptionTests,MethodAck,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\CompositeSubscriptionTests\MethodAck.cs,Should_call_ack_on_nested_subscriptions_with_all_delivery_tag,The following statement contains a magic number: Subscription.OutstandingDeliveryTags["ConsumerTag"].AddRange(new ulong[] { 1' 2' 3' 4' 5 });
Magic Number,Burrow.Tests.Extras.Internal.CompositeSubscriptionTests,MethodAck,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\CompositeSubscriptionTests\MethodAck.cs,Should_call_ack_on_nested_subscriptions_with_all_delivery_tag,The following statement contains a magic number: Subscription.OutstandingDeliveryTags["ConsumerTag"].AddRange(new ulong[] { 1' 2' 3' 4' 5 });
Magic Number,Burrow.Tests.Extras.Internal.CompositeSubscriptionTests,MethodAck,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\CompositeSubscriptionTests\MethodAck.cs,Should_call_ack_on_nested_subscriptions_with_all_delivery_tag,The following statement contains a magic number: Subscription.OutstandingDeliveryTags["ConsumerTag"].AddRange(new ulong[] { 1' 2' 3' 4' 5 });
Magic Number,Burrow.Tests.Extras.Internal.CompositeSubscriptionTests,MethodAck,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\CompositeSubscriptionTests\MethodAck.cs,Should_call_ack_on_nested_subscriptions_with_all_delivery_tag,The following statement contains a magic number: Subscription.OutstandingDeliveryTags["ConsumerTag"].AddRange(new ulong[] { 1' 2' 3' 4' 5 });
Magic Number,Burrow.Tests.Extras.Internal.CompositeSubscriptionTests,MethodAck,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\CompositeSubscriptionTests\MethodAck.cs,Should_call_ack_on_nested_subscriptions_with_all_delivery_tag,The following statement contains a magic number: subs.Ack("ConsumerTag"' new[] { (ulong)1' (ulong)2' (ulong)3' (ulong)4' (ulong)5 });
Magic Number,Burrow.Tests.Extras.Internal.CompositeSubscriptionTests,MethodAck,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\CompositeSubscriptionTests\MethodAck.cs,Should_call_ack_on_nested_subscriptions_with_all_delivery_tag,The following statement contains a magic number: subs.Ack("ConsumerTag"' new[] { (ulong)1' (ulong)2' (ulong)3' (ulong)4' (ulong)5 });
Magic Number,Burrow.Tests.Extras.Internal.CompositeSubscriptionTests,MethodAck,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\CompositeSubscriptionTests\MethodAck.cs,Should_call_ack_on_nested_subscriptions_with_all_delivery_tag,The following statement contains a magic number: subs.Ack("ConsumerTag"' new[] { (ulong)1' (ulong)2' (ulong)3' (ulong)4' (ulong)5 });
Magic Number,Burrow.Tests.Extras.Internal.CompositeSubscriptionTests,MethodAck,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\CompositeSubscriptionTests\MethodAck.cs,Should_call_ack_on_nested_subscriptions_with_all_delivery_tag,The following statement contains a magic number: subs.Ack("ConsumerTag"' new[] { (ulong)1' (ulong)2' (ulong)3' (ulong)4' (ulong)5 });
Magic Number,Burrow.Tests.Extras.Internal.CompositeSubscriptionTests,MethodAck,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\CompositeSubscriptionTests\MethodAck.cs,Should_call_ack_on_nested_subscriptions_with_all_delivery_tag,The following statement contains a magic number: channel.Received().BasicAck(5' true);
Magic Number,Burrow.Tests.Extras.Internal.InMemoryPriorityQueueTests,MethodDeleteAll,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\InMemoryPriorityQueueTests\MethodDeleteAll.cs,Should_delete_all_items_match_predicate,The following statement contains a magic number: var queue = new InMemoryPriorityQueue<GenericPriorityMessage<string>>(20' new PriorityComparer<GenericPriorityMessage<string>>());
Magic Number,Burrow.Tests.Extras.Internal.InMemoryPriorityQueueTests,MethodEnqueue,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\InMemoryPriorityQueueTests\MethodEnqueue.cs,Should_add_item_to_queue_if_not_reach_match_size,The following statement contains a magic number: var queue = new InMemoryPriorityQueue<GenericPriorityMessage<string>>(2' new PriorityComparer<GenericPriorityMessage<string>>());
Magic Number,Burrow.Tests.Extras.Internal.InMemoryPriorityQueueTests,MethodEnqueue,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\InMemoryPriorityQueueTests\MethodEnqueue.cs,Should_block_the_adding_thread_if_queue_is_full,The following statement contains a magic number: var queue = new InMemoryPriorityQueue<GenericPriorityMessage<string>>(2' new PriorityComparer<GenericPriorityMessage<string>>());
Magic Number,Burrow.Tests.Extras.Internal.InMemoryPriorityQueueTests,MethodEnqueue,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\InMemoryPriorityQueueTests\MethodEnqueue.cs,Should_block_the_adding_thread_if_queue_is_full,The following statement contains a magic number: Assert.IsTrue(waitFirstEnqueue.WaitOne(1000));
Magic Number,Burrow.Tests.Extras.Internal.InMemoryPriorityQueueTests,MethodEnqueue,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\InMemoryPriorityQueueTests\MethodEnqueue.cs,Should_throw_exception_if_queue_is_closed,The following statement contains a magic number: var queue = new InMemoryPriorityQueue<GenericPriorityMessage<string>>(2' new PriorityComparer<GenericPriorityMessage<string>>());
Magic Number,Burrow.Tests.Extras.Internal.PriorityBurrowConsumerTests,MethodInit,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityBurrowConsumerTests\MethodInit.cs,Should_delete_all_existing_msgs_that_have_same_priority,The following statement contains a magic number: var queue = new InMemoryPriorityQueue<GenericPriorityMessage<BasicDeliverEventArgs>>(5' new PriorityComparer<GenericPriorityMessage<BasicDeliverEventArgs>>());
Magic Number,Burrow.Tests.Extras.Internal.PriorityBurrowConsumerTests,MethodInit,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityBurrowConsumerTests\MethodInit.cs,Should_delete_all_existing_msgs_that_have_same_priority,The following statement contains a magic number: queue.Enqueue(new GenericPriorityMessage<BasicDeliverEventArgs>(new BasicDeliverEventArgs()' 2));
Magic Number,Burrow.Tests.Extras.Internal.PriorityBurrowConsumerTests,MethodInit,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityBurrowConsumerTests\MethodInit.cs,Should_delete_all_existing_msgs_that_have_same_priority,The following statement contains a magic number: queue.Enqueue(new GenericPriorityMessage<BasicDeliverEventArgs>(new BasicDeliverEventArgs()' 2));
Magic Number,Burrow.Tests.Extras.Internal.PriorityBurrowConsumerTests,MethodInit,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityBurrowConsumerTests\MethodInit.cs,Should_delete_all_existing_msgs_that_have_same_priority,The following statement contains a magic number: queue.Enqueue(new GenericPriorityMessage<BasicDeliverEventArgs>(new BasicDeliverEventArgs()' 2));
Magic Number,Burrow.Tests.Extras.Internal.PriorityBurrowConsumerTests,MethodInit,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityBurrowConsumerTests\MethodInit.cs,Should_delete_all_existing_msgs_that_have_same_priority,The following statement contains a magic number: queue.Enqueue(new GenericPriorityMessage<BasicDeliverEventArgs>(new BasicDeliverEventArgs()' 2));
Magic Number,Burrow.Tests.Extras.Internal.PriorityBurrowConsumerTests,MethodInit,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityBurrowConsumerTests\MethodInit.cs,Should_delete_all_existing_msgs_that_have_same_priority,The following statement contains a magic number: consumer.Init(queue' new CompositeSubscription()' 2' "sem");
Magic Number,Burrow.Tests.Extras.Internal.PriorityBurrowConsumerTests,MethodHandleBasicDeliver,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityBurrowConsumerTests\MethodHandleBasicDeliver.cs,Should_put_msg_to_queue,The following statement contains a magic number: queue.When(x => x.Dequeue()).Do(callInfo => Thread.Sleep(100));
Magic Number,Burrow.Tests.Extras.Internal.PriorityBurrowConsumerTests,MethodHandleBasicDeliver,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityBurrowConsumerTests\MethodHandleBasicDeliver.cs,Should_put_msg_to_queue,The following statement contains a magic number: var consumer = new PriorityBurrowConsumer(channel' handler' Substitute.For<IRabbitWatcher>()' true' 10);
Magic Number,Burrow.Tests.Extras.Internal.PriorityBurrowConsumerTests,MethodOnCancel,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityBurrowConsumerTests\MethodOnCancel.cs,Should_close_queue_and_end_other_thread,The following statement contains a magic number: queue.When(x => x.Dequeue()).Do(callInfo => Thread.Sleep(100));
Magic Number,Burrow.Tests.Extras.Internal.PriorityBurrowConsumerTests,MethodReady,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityBurrowConsumerTests\MethodReady.cs,Should_start_a_thread_to_dequeue_on_priority_queue,The following statement contains a magic number: Assert.IsTrue(dequeueCount.WaitOne(1000));
Magic Number,Burrow.Tests.Extras.Internal.PriorityBurrowConsumerTests,MethodReady,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityBurrowConsumerTests\MethodReady.cs,Should_start_a_thread_to_dequeue_on_priority_queue,The following statement contains a magic number: Assert.IsTrue(enqueueCount.WaitOne(1000));
Magic Number,Burrow.Tests.Extras.Internal.PriorityBurrowConsumerTests,MethodReady,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityBurrowConsumerTests\MethodReady.cs,Should_catch_EndOfStreamException,The following statement contains a magic number: var count = new CountdownEvent(2);
Magic Number,Burrow.Tests.Extras.Internal.PriorityBurrowConsumerTests,MethodReady,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityBurrowConsumerTests\MethodReady.cs,Should_catch_EndOfStreamException,The following statement contains a magic number: var consumer = new PriorityBurrowConsumer(channel' Substitute.For<IMessageHandler>()' watcher' true' 2);
Magic Number,Burrow.Tests.Extras.Internal.PriorityBurrowConsumerTests,MethodReady,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityBurrowConsumerTests\MethodReady.cs,Should_catch_EndOfStreamException,The following statement contains a magic number: Assert.IsTrue(count.Wait(1000));
Magic Number,Burrow.Tests.Extras.Internal.PriorityBurrowConsumerTests,MethodReady,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityBurrowConsumerTests\MethodReady.cs,Should_catch_ThreadStateException,The following statement contains a magic number: var consumer = new PriorityBurrowConsumer(channel' Substitute.For<IMessageHandler>()' watcher' true' 2);
Magic Number,Burrow.Tests.Extras.Internal.PriorityBurrowConsumerTests,MethodReady,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityBurrowConsumerTests\MethodReady.cs,Should_catch_ThreadStateException,The following statement contains a magic number: count.WaitOne(2000);
Magic Number,Burrow.Tests.Extras.Internal.PriorityBurrowConsumerTests,MethodReady,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityBurrowConsumerTests\MethodReady.cs,Should_catch_ThreadInterruptedException,The following statement contains a magic number: var consumer = new PriorityBurrowConsumer(channel' Substitute.For<IMessageHandler>()' watcher' true' 2);
Magic Number,Burrow.Tests.Extras.Internal.PriorityBurrowConsumerTests,MethodReady,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityBurrowConsumerTests\MethodReady.cs,Should_catch_ThreadInterruptedException,The following statement contains a magic number: count.WaitOne(2000);
Magic Number,Burrow.Tests.Extras.Internal.PriorityComparerTests,MethodCompare,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityComparerTests\MethodCompare.cs,Should_return_1_if_object_on_the_left_has_higher_priority_value,The following statement contains a magic number: var m2 = new GenericPriorityMessage<int>(1' 10);
Magic Number,Burrow.Tests.Extras.Internal.PriorityComparerTests,MethodCompare,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityComparerTests\MethodCompare.cs,Should_return_minus_1_if_object_on_the_left_has_lower_priority_value,The following statement contains a magic number: var m1 = new GenericPriorityMessage<int>(1' 10);
Magic Number,Burrow.Tests.Extras.Internal.PriorityMessageHandlerTests,MethodHandleMessage,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityMessageHandlerTests\MethodHandleMessage.cs,Should_invoke_the_callback_with_MessageDeliverEventArgs_that_has_PriorityValue,The following statement contains a magic number: properties.Priority = 10;
Magic Number,Burrow.Tests.Extras.Internal.PriorityMessageHandlerTests,MethodHandleMessage,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityMessageHandlerTests\MethodHandleMessage.cs,Should_invoke_the_callback_with_MessageDeliverEventArgs_that_has_PriorityValue,The following statement contains a magic number: Assert.AreEqual((uint)10' evt.MessagePriority);
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodGetMessageCount,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodGetMessageCount.cs,Should_return_the_messagecount,The following statement contains a magic number: newChannel.QueueDeclarePassive(Arg.Any<string>()).Returns(new QueueDeclareOk(""' 100' 0));
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodGetMessageCount,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodGetMessageCount.cs,Should_return_the_messagecount,The following statement contains a magic number: var count = tunnel.GetMessageCount(new PrioritySubscriptionOption<Customer>              {                  SubscriptionName = "subscriptionName"'                  MaxPriorityLevel = 4              });
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodGetMessageCount,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodGetMessageCount.cs,Should_return_the_messagecount,The following statement contains a magic number: Assert.AreEqual(500' count);
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodGetMessageCount,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodGetMessageCount.cs,Should_catch_all_exception,The following statement contains a magic number: var count = tunnel.GetMessageCount(new PrioritySubscriptionOption<Customer>              {                  SubscriptionName = "subscriptionName"'                  MaxPriorityLevel = 4              });
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribeAsync,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribeAsync.cs,Should_create_subscriptions_to_priority_queues,The following statement contains a magic number: tunnel.SubscribeAsync<Customer>("subscriptionName"' 3' x => { });
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribeAsync,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribeAsync.cs,Should_create_subscriptions_to_priority_queues,The following statement contains a magic number: newChannel.Received(4).BasicQos(0' (ushort)Global.PreFetchSize' false);
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribeAsync,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribeAsync.cs,Should_return_composite_subscription,The following statement contains a magic number: var subs = tunnel.SubscribeAsync<Customer>("subscriptionName"' 3' (x' y) => { });
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribeAsync,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribeAsync.cs,Should_return_composite_subscription,The following statement contains a magic number: newChannel.Received(4).BasicQos(0' (ushort)Global.PreFetchSize' false);
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribeAsync,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribeAsync.cs,Should_return_composite_subscription,The following statement contains a magic number: Assert.AreEqual(4' subs.Count);
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodPublish,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodPublish.cs,Should_use_route_finder_to_find_routing_key_then_publish_serialized_msg,The following statement contains a magic number: tunnel.Publish("Muahaha"' 10);
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodPublish,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodPublish.cs,Should_not_overwrite_the_priority_if_customer_headers_has_Priority_value_set,The following statement contains a magic number: tunnel.Publish("Muahaha"' 10' new Dictionary<string' object> { { "Priority"' "100" }' { "AnotherHeaderKey"' "something" } });
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodPublish,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodPublish.cs,Should_throw_exception_if_dedicated_publish_channel_is_not_created_properly,The following statement contains a magic number: tunnel.Publish("Muahaha"' 10);
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodPublish,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodPublish.cs,Should_throw_exception_if_dedicated_publish_channel_is_not_connected,The following statement contains a magic number: tunnel.Publish("Muahaha"' 10);
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodPublish,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodPublish.cs,Should_throw_exception_if_publish_failed,The following statement contains a magic number: tunnel.Publish("Muahaha"' 10);
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_create_subscriptions_to_priority_queues,The following statement contains a magic number: tunnel.Subscribe<Customer>("subscriptionName"' 3' x => { });
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_create_subscriptions_to_priority_queues,The following statement contains a magic number: newChannel.Received(4).BasicQos(0' (ushort)Global.PreFetchSize' false);
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_be_able_to_use_custom_route_finder_and_prefix_convention,The following statement contains a magic number: tunnel.Subscribe(new PrioritySubscriptionOption<Customer>                                             {                                                 SubscriptionName = "subscriptionName"'                                                 RouteFinder = routeFinder'                                                 MessageHandler = x => { }'                                                 BatchSize = 1'                                                 MaxPriorityLevel = 3'                                                 QueueSuffixNameConvention = convention                                             });
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_be_able_to_use_custom_prefetchSize,The following statement contains a magic number: tunnel.Subscribe(new PrioritySubscriptionOption<Customer>              {                  SubscriptionName = "subscriptionName"'                  MessageHandler = x => { }'                  BatchSize = 1'                  MaxPriorityLevel = 3'                  QueuePrefetchSize = 2'                  QueuePrefetchSizeSelector = x => x + 10              });
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_be_able_to_use_custom_prefetchSize,The following statement contains a magic number: tunnel.Subscribe(new PrioritySubscriptionOption<Customer>              {                  SubscriptionName = "subscriptionName"'                  MessageHandler = x => { }'                  BatchSize = 1'                  MaxPriorityLevel = 3'                  QueuePrefetchSize = 2'                  QueuePrefetchSizeSelector = x => x + 10              });
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_be_able_to_use_custom_prefetchSize,The following statement contains a magic number: tunnel.Subscribe(new PrioritySubscriptionOption<Customer>              {                  SubscriptionName = "subscriptionName"'                  MessageHandler = x => { }'                  BatchSize = 1'                  MaxPriorityLevel = 3'                  QueuePrefetchSize = 2'                  QueuePrefetchSizeSelector = x => x + 10              });
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_be_able_to_use_custom_prefetchSize,The following statement contains a magic number: newChannel.Received(1).BasicQos(0' 10' false);
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_be_able_to_use_custom_prefetchSize,The following statement contains a magic number: newChannel.Received(1).BasicQos(0' 11' false);
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_be_able_to_use_custom_prefetchSize,The following statement contains a magic number: newChannel.Received(1).BasicQos(0' 12' false);
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_be_able_to_use_custom_prefetchSize,The following statement contains a magic number: newChannel.Received(1).BasicQos(0' 13' false);
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_use_default_prefetch_size_if_lt_0,The following statement contains a magic number: tunnel.Subscribe(new PrioritySubscriptionOption<Customer>              {                  SubscriptionName = "subscriptionName"'                  MessageHandler = x => { }'                  BatchSize = 1'                  MaxPriorityLevel = 3'                  QueuePrefetchSize = 2'                  QueuePrefetchSizeSelector = x => 0              });
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_use_default_prefetch_size_if_lt_0,The following statement contains a magic number: tunnel.Subscribe(new PrioritySubscriptionOption<Customer>              {                  SubscriptionName = "subscriptionName"'                  MessageHandler = x => { }'                  BatchSize = 1'                  MaxPriorityLevel = 3'                  QueuePrefetchSize = 2'                  QueuePrefetchSizeSelector = x => 0              });
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_use_default_prefetch_size_if_lt_0,The following statement contains a magic number: newChannel.Received(4).BasicQos(0' (ushort)Global.PreFetchSize' false);
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_use_max_ushort_prefetch_size_if_is_too_big,The following statement contains a magic number: tunnel.Subscribe(new PrioritySubscriptionOption<Customer>              {                  SubscriptionName = "subscriptionName"'                  MessageHandler = x => { }'                  BatchSize = 1'                  MaxPriorityLevel = 3'                  QueuePrefetchSize = 2'                  QueuePrefetchSizeSelector = x => uint.MaxValue              });
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_use_max_ushort_prefetch_size_if_is_too_big,The following statement contains a magic number: tunnel.Subscribe(new PrioritySubscriptionOption<Customer>              {                  SubscriptionName = "subscriptionName"'                  MessageHandler = x => { }'                  BatchSize = 1'                  MaxPriorityLevel = 3'                  QueuePrefetchSize = 2'                  QueuePrefetchSizeSelector = x => uint.MaxValue              });
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_use_max_ushort_prefetch_size_if_is_too_big,The following statement contains a magic number: newChannel.Received(4).BasicQos(0' ushort.MaxValue' false);
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_return_composite_subscription,The following statement contains a magic number: var subs = tunnel.Subscribe<Customer>("subscriptionName"' 3' (x' y) => { });
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_return_composite_subscription,The following statement contains a magic number: newChannel.Received(4).BasicQos(0' (ushort)Global.PreFetchSize' false);
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_return_composite_subscription,The following statement contains a magic number: Assert.AreEqual(4' subs.Count);
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_register_ModelShutdown_event_on_each_created_channel,The following statement contains a magic number: tunnel.Subscribe<Customer>("subscriptionName"' 3' (x' y) => { });
Magic Number,Burrow.Tests.Extras.Internal.RabbitTunnelWithPriorityQueuesSupportTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\RabbitTunnelWithPriorityQueuesSupportTests\MethodSubscribe.cs,Should_throw_exception_if_provide_invalid_Comparer,The following statement contains a magic number: tunnel.Subscribe<Customer>("subscriptionName"' 3' (x' y) => { }' typeof(Customer));
Magic Number,Burrow.Tests.Extras.PriorityQueuesRabbitSetupTests,MethodDestroy,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\PriorityQueuesRabbitSetupTests\MethodDestroy.cs,Setup,The following statement contains a magic number: _priorityRouteSetupData = new RouteSetupData              {                  RouteFinder = _routeFinder'                  ExchangeSetupData = new HeaderExchangeSetupData()'                  QueueSetupData = new PriorityQueueSetupData(3)              };
Magic Number,Burrow.Tests.Extras.PriorityQueuesRabbitSetupTests,MethodSetupExchangeAndQueueFor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\PriorityQueuesRabbitSetupTests\MethodSetupExchangeAndQueueFor.cs,Setup,The following statement contains a magic number: _priorityRouteSetupData = new RouteSetupData              {                  RouteFinder = _routeFinder'                  ExchangeSetupData = new HeaderExchangeSetupData()'                  QueueSetupData = new PriorityQueueSetupData(3)              };
Magic Number,Burrow.Tests.Extras.PriorityQueuesRabbitSetupTests,MethodSetupExchangeAndQueueFor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\PriorityQueuesRabbitSetupTests\MethodSetupExchangeAndQueueFor.cs,Should_create_normal_queue_if_not_providing_PriorityQueueSetupData,The following statement contains a magic number: var normalRouteSetupData = new RouteSetupData              {                  RouteFinder = _routeFinder'                  ExchangeSetupData = new HeaderExchangeSetupData()'                  QueueSetupData = new QueueSetupData                  {                      AutoExpire = 10000'                      MessageTimeToLive = 10000000                  }              };
Magic Number,Burrow.Tests.Extras.PriorityQueuesRabbitSetupTests,MethodSetupExchangeAndQueueFor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\PriorityQueuesRabbitSetupTests\MethodSetupExchangeAndQueueFor.cs,Should_create_normal_queue_if_not_providing_PriorityQueueSetupData,The following statement contains a magic number: var normalRouteSetupData = new RouteSetupData              {                  RouteFinder = _routeFinder'                  ExchangeSetupData = new HeaderExchangeSetupData()'                  QueueSetupData = new QueueSetupData                  {                      AutoExpire = 10000'                      MessageTimeToLive = 10000000                  }              };
Magic Number,Burrow.Tests.Extras.PriorityQueuesRabbitSetupTests,MethodSetupExchangeAndQueueFor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\PriorityQueuesRabbitSetupTests\MethodSetupExchangeAndQueueFor.cs,Should_create_Priority_queue_if_provide_PriorityQueueSetupData,The following statement contains a magic number: model.Received().QueueBind("Queue.Customer_Priority2"' "Exchange.Customer"' "Customer"' Arg.Is<IDictionary<string' object>>(x => eval(x' 2)));
Magic Number,Burrow.Tests.Extras.PriorityQueuesRabbitSetupTests,MethodSetupExchangeAndQueueFor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\PriorityQueuesRabbitSetupTests\MethodSetupExchangeAndQueueFor.cs,Should_create_Priority_queue_if_provide_PriorityQueueSetupData,The following statement contains a magic number: model.Received().QueueBind("Queue.Customer_Priority3"' "Exchange.Customer"' "Customer"' Arg.Is<IDictionary<string' object>>(x => eval(x' 3)));
Magic Number,Burrow.Tests.Extras.PriorityQueuesRabbitSetupTests,MethodSetupExchangeAndQueueFor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\PriorityQueuesRabbitSetupTests\MethodSetupExchangeAndQueueFor.cs,Should_not_throw_excepton_if_cannot_create_PRIORITY_queues,The following statement contains a magic number: model.Received().QueueBind("Queue.Customer_Priority2"' "Exchange.Customer"' "Customer"' Arg.Is<IDictionary<string' object>>(x => eval(x' 2)));
Magic Number,Burrow.Tests.Extras.PriorityQueuesRabbitSetupTests,MethodSetupExchangeAndQueueFor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\PriorityQueuesRabbitSetupTests\MethodSetupExchangeAndQueueFor.cs,Should_not_throw_excepton_if_cannot_create_PRIORITY_queues,The following statement contains a magic number: model.Received().QueueBind("Queue.Customer_Priority3"' "Exchange.Customer"' "Customer"' Arg.Is<IDictionary<string' object>>(x => eval(x' 3)));
Magic Number,Burrow.Tests.Extras.Internal.PriorityConsumerManagerTests,MethodCreateAsyncConsumer,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityConsumerManagerTests\MethodCreateAsyncConsumer.cs,Should_return_PriorityBurrowConsumer_object_when_called,The following statement contains a magic number: var consumer2 = consumerManager.CreateAsyncConsumer<string>(channel' "name"' (x'y) => { }' 2);
Magic Number,Burrow.Tests.Extras.Internal.PriorityTunnelFactoryTests,MethodCreate,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\Internal\PriorityTunnelFactoryTests\MethodCreate.cs,Should_use_DependencyInjectionTunnelFactory_to_create_tunnel_if_it_is_default_TunnelFactory,The following statement contains a magic number: var tunnel2 = factory.Create("hostname"' 5672' "/"' "user"' "pass"' null);
Magic Number,Burrow.Tests.Extras.JsonSerializerTests,MethodSerialize,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\JsonSerializerTests\MethodSerialize.cs,Can_serialize_object,The following statement contains a magic number: var str = serializer.Serialize(new {Name = "Bunny"' Age = 30});
Magic Number,Burrow.Tests.Extras.PriorityQueueSetupDataTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\PriorityQueueSetupDataTests\Constructor.cs,Should_initialize_obj_with_MaxPriorityLevel,The following statement contains a magic number: var data = new PriorityQueueSetupData(3);
Magic Number,Burrow.Tests.Extras.PriorityQueueSetupDataTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\PriorityQueueSetupDataTests\Constructor.cs,Should_initialize_obj_with_MaxPriorityLevel,The following statement contains a magic number: Assert.AreEqual((uint)3' data.MaxPriorityLevel);
Magic Number,Burrow.Tests.Extras.RabbitSetupTests,MethodDeclareExchange,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\RabbitSetupTests\MethodDeclareExchange.cs,Should_catch_OperationInterruptedException,The following statement contains a magic number: model.When(x => x.ExchangeDeclare(Arg.Any<string>()'Arg.Any<string>()'Arg.Any<bool>()'Arg.Any<bool>()'Arg.Any<IDictionary<string' object>>()))                   .Do(callInfo =>                  {                      throw new OperationInterruptedException(new ShutdownEventArgs(ShutdownInitiator.Library' 101' "PRECONDITION_FAILED - Exchange exists"));                  });
Magic Number,Burrow.Tests.Extras.RabbitSetupTests,MethodDeclareExchange,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\RabbitSetupTests\MethodDeclareExchange.cs,Should_catch_OperationInterruptedException_and_write_errorLog,The following statement contains a magic number: model.When(x => x.ExchangeDeclare(Arg.Any<string>()' Arg.Any<string>()' Arg.Any<bool>()' Arg.Any<bool>()' Arg.Any<IDictionary<string' object>>()))                   .Do(callInfo =>                   {                       throw new OperationInterruptedException(new ShutdownEventArgs(ShutdownInitiator.Library' 101' "Some errors"));                   });
Magic Number,Burrow.Tests.Extras.RabbitSetupTests,MethodSetupExchangeAndQueueFor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\RabbitSetupTests\MethodSetupExchangeAndQueueFor.cs,Setup,The following statement contains a magic number: _routeSetupData = new RouteSetupData              {                  RouteFinder = _routeFinder'                  ExchangeSetupData = new ExchangeSetupData()'                  QueueSetupData = new QueueSetupData                  {                      AutoExpire = 10000'                      MessageTimeToLive = 10000000                  }              };
Magic Number,Burrow.Tests.Extras.RabbitSetupTests,MethodSetupExchangeAndQueueFor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\RabbitSetupTests\MethodSetupExchangeAndQueueFor.cs,Setup,The following statement contains a magic number: _routeSetupData = new RouteSetupData              {                  RouteFinder = _routeFinder'                  ExchangeSetupData = new ExchangeSetupData()'                  QueueSetupData = new QueueSetupData                  {                      AutoExpire = 10000'                      MessageTimeToLive = 10000000                  }              };
Magic Number,Burrow.Tests.Extras.RabbitSetupTests,MethodSetupExchangeAndQueueFor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Extras\RabbitSetupTests\MethodSetupExchangeAndQueueFor.cs,Should_apply_DeadLetter_params,The following statement contains a magic number: model.Received(1).QueueDeclare(Arg.Any<string>()' true' false' false' Arg.Is<IDictionary<string' object>>(dic => dic.Count == 4));
Magic Number,Burrow.Tests.Internal.ConsoleWatcherTests,MethodDebugFormat,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\ConsoleWatcherTests\MethodDebugFormat.cs,Should_not_write_if_debug_is_disable,The following statement contains a magic number: watcher.DebugFormat("{Debug}"' 1' 2);
Magic Number,Burrow.Tests.Internal.ConsoleWatcherTests,MethodDebugFormat,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\ConsoleWatcherTests\MethodDebugFormat.cs,Should_write_if_debug_is_enable,The following statement contains a magic number: watcher.DebugFormat("{Debug}"' 1' 2);
Magic Number,Burrow.Tests.Internal.ConsoleWatcherTests,AllWriteLogMethods,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\ConsoleWatcherTests\AllWriteLogMethods.cs,Should_catch_all_potential_exceptions,The following statement contains a magic number: watcher.WarnFormat("{0}{1}{2}"' 1' 2);
Magic Number,Burrow.Tests.Internal.ConsoleWatcherTests,AllWriteLogMethods,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\ConsoleWatcherTests\AllWriteLogMethods.cs,Should_catch_all_potential_exceptions,The following statement contains a magic number: watcher.ErrorFormat("{0}{1}{2}"' 1' 2);
Magic Number,Burrow.Tests.Internal.ConsumerManagerTests,MethodClearConsumers,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\ConsumerManagerTests\MethodClearConsumers.cs,Should_catch_all_exception_when_dispose_consumers,The following statement contains a magic number: Assert.IsTrue(autoResetEvent.WaitOne(1000));
Magic Number,Burrow.Tests.Internal.HaConnectionTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\HaConnectionTests\Constructor.cs,Should_convert_connection_factories_to_managed_connection_factories,The following statement contains a magic number: var connection = new HaConnection(Substitute.For<IRetryPolicy>()'                                Substitute.For<IRabbitWatcher>()'                                new List<ManagedConnectionFactory>                               {                                   new ManagedConnectionFactory                                   {                                       HostName = "localhost"'                                       Port = 5672'                                       VirtualHost = "/"'                                       UserName = "vantheshark"'                                       Password = "123"                                   }                               });
Magic Number,Burrow.Tests.Internal.HaConnectionTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\HaConnectionTests\Constructor.cs,Should_convert_connection_factories_to_managed_connection_factories,The following statement contains a magic number: Assert.AreEqual(5672' connection.ConnectionFactory.Port);
Magic Number,Burrow.Tests.Internal.HaConnectionTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\HaConnectionTests\Constructor.cs,Should_subscribe_to_ConnectionEstablished_event,The following statement contains a magic number: var connectionFactory = new ManagedConnectionFactory              {                  HostName = "localhost"'                  Port = 5672'                  VirtualHost = "/"'                  UserName = "vantheshark"'                  Password = "123"              };
Magic Number,Burrow.Tests.Internal.HaConnectionTests,MethodConnect,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\HaConnectionTests\MethodConnect.cs,Should_fire_connected_event_when_connect_successfully,The following statement contains a magic number: var f1 = CreateManagedConnectionFactory(5671);
Magic Number,Burrow.Tests.Internal.HaConnectionTests,MethodConnect,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\HaConnectionTests\MethodConnect.cs,Should_fire_connected_event_when_connect_successfully,The following statement contains a magic number: var f2 = CreateManagedConnectionFactory(5672);
Magic Number,Burrow.Tests.Internal.HaConnectionTests,MethodConnect,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\HaConnectionTests\MethodConnect.cs,Should_fire_connected_event_when_connect_successfully,The following statement contains a magic number: Assert.IsTrue(are.WaitOne(1000));
Magic Number,Burrow.Tests.Internal.HaConnectionTests,MethodConnect,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\HaConnectionTests\MethodConnect.cs,Should_fail_over_to_next_node_if_there_is_ConnectionFailureException,The following statement contains a magic number: var f1 = CreateManagedConnectionFactory(5671' new Exception());
Magic Number,Burrow.Tests.Internal.HaConnectionTests,MethodConnect,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\HaConnectionTests\MethodConnect.cs,Should_fail_over_to_next_node_if_there_is_ConnectionFailureException,The following statement contains a magic number: var f2 = CreateManagedConnectionFactory(5672' new Exception());
Magic Number,Burrow.Tests.Internal.HaConnectionTests,MethodConnect,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\HaConnectionTests\MethodConnect.cs,Should_fail_over_to_next_node_if_there_is_ConnectionFailureException,The following statement contains a magic number: var f3 = CreateManagedConnectionFactory(5673' new BrokerUnreachableException(new Exception()));
Magic Number,Burrow.Tests.Internal.HaConnectionTests,MethodConnect,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\HaConnectionTests\MethodConnect.cs,Should_create_only_one_connection_to_the_each_endpoint,The following statement contains a magic number: var f1 = CreateManagedConnectionFactory(5671);
Magic Number,Burrow.Tests.Internal.HaConnectionTests,MethodConnect,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\HaConnectionTests\MethodConnect.cs,Should_create_only_one_connection_to_the_each_endpoint,The following statement contains a magic number: var f2 = CreateManagedConnectionFactory(5672);
Magic Number,Burrow.Tests.Internal.HaConnectionTests,MethodConnect,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\HaConnectionTests\MethodConnect.cs,Should_create_only_one_connection_to_the_each_endpoint,The following statement contains a magic number: var f3 = CreateManagedConnectionFactory(5673);
Magic Number,Burrow.Tests.Internal.HaConnectionTests,MethodConnect,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\HaConnectionTests\MethodConnect.cs,Should_create_only_one_connection_to_the_each_endpoint,The following statement contains a magic number: var f4 = CreateManagedConnectionFactory(5674);
Magic Number,Burrow.Tests.Internal.HaConnectionTests,MethodConnect,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\HaConnectionTests\MethodConnect.cs,Should_create_only_one_connection_to_the_each_endpoint,The following statement contains a magic number: var f5 = CreateManagedConnectionFactory(5675);
Magic Number,Burrow.Tests.Internal.HaConnectionTests,MethodConnect,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\HaConnectionTests\MethodConnect.cs,Should_create_only_one_connection_to_the_each_endpoint,The following statement contains a magic number: var f6 = CreateManagedConnectionFactory(5676);
Magic Number,Burrow.Tests.Internal.HaConnectionTests,MethodConnect,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\HaConnectionTests\MethodConnect.cs,Should_create_only_one_connection_to_the_each_endpoint,The following statement contains a magic number: i < 100
Magic Number,Burrow.Tests.Internal.HaConnectionTests,MethodConnect,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\HaConnectionTests\MethodConnect.cs,Should_create_only_one_connection_to_the_each_endpoint,The following statement contains a magic number: Assert.AreEqual(2' ManagedConnectionFactory.SharedConnections.Count);
Magic Number,Burrow.Tests.Internal.HaConnectionTests,MethodConnect,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\HaConnectionTests\MethodConnect.cs,Should_be_notified_about_a_new_established_connection,The following statement contains a magic number: var f1 = CreateManagedConnectionFactory(5671);
Magic Number,Burrow.Tests.Internal.HaConnectionTests,MethodConnect,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\HaConnectionTests\MethodConnect.cs,Should_be_notified_about_a_new_established_connection,The following statement contains a magic number: var f2 = CreateManagedConnectionFactory(5672);
Magic Number,Burrow.Tests.Internal.HaConnectionTests,MethodConnect,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\HaConnectionTests\MethodConnect.cs,Should_be_notified_about_a_new_established_connection,The following statement contains a magic number: var f3 = CreateManagedConnectionFactory(5673);
Magic Number,Burrow.Tests.Internal.HaConnectionTests,MethodConnect,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\HaConnectionTests\MethodConnect.cs,Should_be_notified_about_a_new_established_connection,The following statement contains a magic number: var durableConnection = new DurableConnection(Substitute.For<IRetryPolicy>()'                                                            Substitute.For<IRabbitWatcher>()'                                                            CreateManagedConnectionFactory(5671));
Magic Number,Burrow.Tests.Internal.HaConnectionTests,MethodDispose,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\HaConnectionTests\MethodDispose.cs,Should_unsubscribe_to_ConnectionEstablished_event,The following statement contains a magic number: var connectionFactory = new ManagedConnectionFactory              {                  HostName = "localhost"'                  Port = 5672'                  VirtualHost = "/"'                  UserName = "vantheshark"'                  Password = "123"              };
Magic Number,Burrow.Tests.Internal.ManagedConnectionFactoryTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\ManagedConnectionFactoryTests\Constructor.cs,Should_copy_all_value_from_privided_factory,The following statement contains a magic number: var originalFactory = new ConnectionFactory              {                  HostName = "localhost"'                  Port = 5672'                  VirtualHost = "/"'                  UserName = "vantheshark"'                  Password = "123"              };
Magic Number,Burrow.Tests.RabbitTunnelTests,MethodGetMessageCount,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodGetMessageCount.cs,Should_return_the_messagecount,The following statement contains a magic number: newChannel.QueueDeclarePassive(Arg.Any<string>()).Returns(new QueueDeclareOk(""' 100' 0));
Magic Number,Burrow.Tests.RabbitTunnelTests,MethodGetMessageCount,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodGetMessageCount.cs,Should_return_the_messagecount,The following statement contains a magic number: Assert.AreEqual((uint)100' count);
Magic Number,Burrow.Tests.RabbitTunnelTests,MethodTryReconnect,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodTryReconnect.cs,Should_reconnect_if_user_ack_wrong_delivery_id,The following statement contains a magic number: tunnel.PublicTryReconnect(channel' id' new ShutdownEventArgs(ShutdownInitiator.Peer' 406' "PRECONDITION_FAILED - unknown delivery tag 10000"));
Magic Number,Burrow.Tests.RabbitTunnelTests,MethodTryReconnect,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodTryReconnect.cs,Should_reconnect_if_user_ack_wrong_delivery_id,The following statement contains a magic number: waitHandler.WaitOne(5000);
Magic Number,Burrow.Tests.RabbitTunnelTests,MethodTryReconnect,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodTryReconnect.cs,Should_log_exception_if_cannot_reconnect,The following statement contains a magic number: waitHandler.WaitOne(5000);
Magic Number,Burrow.Tests.RabbitTunnelTests,MethodCloseTunnel,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodCloseTunnel.cs,Should_resubscribe_to_queues_after_reconnect_successfully,The following statement contains a magic number: newChannel.Received(4).BasicConsume("Queue"' false' Arg.Is<string>(x => x.StartsWith("subscriptionName"))' Arg.Any<IBasicConsumer>());
Magic Number,Burrow.Tests.RabbitTunnelTests,MethodCloseTunnel,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodCloseTunnel.cs,Should_do_nothing_if_disposed,The following statement contains a magic number: newChannel.Received(2).Abort();
Magic Number,Burrow.Tests.RabbitTunnelTests,MethodCloseTunnel,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodCloseTunnel.cs,Should_do_nothing_if_disposed,The following statement contains a magic number: newChannel.Received(2).Dispose();
Magic Number,Burrow.Tests.RabbitTunnelTests,MethodDispose,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodDispose.cs,Should_dispose_everything,The following statement contains a magic number: var countDownEvent = new CountdownEvent(4);
Magic Number,Burrow.Tests.RabbitTunnelTests,MethodDispose,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodDispose.cs,Should_dispose_everything,The following statement contains a magic number: Assert.IsTrue(countDownEvent.Wait(1000));
Magic Number,Burrow.Tests.RabbitTunnelTests,MethodDispose,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodDispose.cs,Should_dispose_everything,The following statement contains a magic number: newChannel.Received(2).Dispose();
Magic Number,Burrow.Tests.RabbitTunnelTests,MethodDispose,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodDispose.cs,Should_dispose_everything,The following statement contains a magic number: newChannel.Received(2).Abort();
Magic Number,Burrow.Tests.RabbitTunnelTests,MethodDispose,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodDispose.cs,Should_not_throw_IOException,The following statement contains a magic number: var countDownEvent = new CountdownEvent(2);
Magic Number,Burrow.Tests.RabbitTunnelTests,MethodDispose,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodDispose.cs,Should_not_throw_IOException,The following statement contains a magic number: Assert.IsTrue(countDownEvent.Wait(1000));
Magic Number,Burrow.Tests.RabbitTunnelTests,MethodDispose,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodDispose.cs,Should_not_throw_any_other_Exception,The following statement contains a magic number: var countDownEvent = new CountdownEvent(2);
Magic Number,Burrow.Tests.RabbitTunnelTests,MethodDispose,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodDispose.cs,Should_not_throw_any_other_Exception,The following statement contains a magic number: Assert.IsTrue(countDownEvent.Wait(1000));
Magic Number,Burrow.Tests.RabbitTunnelTests,MethodPublish,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodPublish.cs,Should_use_topic_route_finder_to_find_routing_key_if_provided,The following statement contains a magic number: routeFinder.Received(2).FindRoutingKey("This.Is.A.Topic");
Magic Number,Burrow.Tests.RabbitTunnelTests,MethodPublish,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodPublish.cs,Should_use_topic_route_finder_to_find_routing_key_if_provided,The following statement contains a magic number: newChannel.Received(2).BasicPublish(Arg.Any<string>()' "This.Is.A.Topic"' Arg.Any<IBasicProperties>()' Arg.Any<byte[]>());
Magic Number,Burrow.Tests.RabbitTunnelTests,MethodPublish,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodPublish.cs,Should_create_dedicated_channel_without_reconnect_if_connection_has_been_connected_before,The following statement contains a magic number: newChannel.Received(2).BasicPublish(Arg.Any<string>()' Arg.Any<string>()' Arg.Any<IBasicProperties>()' Arg.Any<byte[]>());
Magic Number,Burrow.Tests.RabbitTunnelTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodSubscribe.cs,Should_be_able_to_subscribe_with_provided_options,The following statement contains a magic number: tunnel.Subscribe(new SubscriptionOption<Customer>              {                  SubscriptionName = "subscriptionName"'                  MessageHandler = x => { }'                  QueuePrefetchSize = 100'                  BatchSize = 100'                  RouteFinder = routeFinder              });
Magic Number,Burrow.Tests.RabbitTunnelTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodSubscribe.cs,Should_be_able_to_subscribe_with_provided_options,The following statement contains a magic number: tunnel.Subscribe(new SubscriptionOption<Customer>              {                  SubscriptionName = "subscriptionName"'                  MessageHandler = x => { }'                  QueuePrefetchSize = 100'                  BatchSize = 100'                  RouteFinder = routeFinder              });
Magic Number,Burrow.Tests.RabbitTunnelTests,MethodSubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodSubscribe.cs,Should_be_able_to_subscribe_with_provided_options,The following statement contains a magic number: newChannel.Received().BasicQos(0' 100' false);
Magic Number,Burrow.Tests.RabbitTunnelTests,MethodTrySubscribe,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RabbitTunnelTests\MethodTrySubscribe.cs,Should_not_throw_OperationInterruptedException,The following statement contains a magic number: tunnel.TrySubscribeForTest(() => { throw new OperationInterruptedException(new ShutdownEventArgs(ShutdownInitiator.Peer' 3'"")); });
Magic Number,Burrow.Tests.RPC.BurrowRpcClientCoordinatorTests,MethodReceiveResponse,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RPC\BurrowRpcClientCoordinatorTests\MethodReceiveResponse.cs,Should_set_respones_value_to_wait_handler_and_set_the_wait_handler,The following statement contains a magic number: Assert.IsTrue(wait.WaitHandle.WaitOne(1000));
Magic Number,Burrow.Tests.RPC.BurrowRpcClientCoordinatorTests,MethodSend,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RPC\BurrowRpcClientCoordinatorTests\MethodSend.cs,Should_publish_request_with_address,The following statement contains a magic number: var res = new RpcRequest              {                  MethodName = "TryParse"'                  Id = Guid.NewGuid()'                  UtcExpiryTime = DateTime.UtcNow.AddSeconds(20)'              };
Magic Number,Burrow.Tests.RPC.BurrowRpcServerCoordinatorTests,MethodHandleMesage,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RPC\BurrowRpcServerCoordinatorTests\MethodHandleMesage.cs,Should_print_warn_msg_and_return_if_msg_is_expired,The following statement contains a magic number: var request = new RpcRequest              {                  UtcExpiryTime = DateTime.UtcNow.AddSeconds(-10)              };
Magic Number,Burrow.Tests.RPC.RpcClientInterceptorTests,MethodIntercept,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RPC\RpcClientInterceptorTests\MethodIntercept.cs,Should_throw_exception_if_response_is_null,The following statement contains a magic number: service.Get(1' 200' out totalCount);
Magic Number,Burrow.Tests.RPC.RpcClientInterceptorTests,MethodIntercept,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RPC\RpcClientInterceptorTests\MethodIntercept.cs,Should_set_out_value_and_return_value,The following statement contains a magic number: coordinator.Send(Arg.Any<RpcRequest>())                         .Returns(new RpcResponse                         {                             ReturnValue = new List<SomeMessage>{new SomeMessage()}'                             ChangedParams = new Dictionary<string' object> { { "totalCount"' (long)1000/* long value will be converted to proper int value */} }                         });
Magic Number,Burrow.Tests.RPC.RpcClientInterceptorTests,MethodIntercept,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RPC\RpcClientInterceptorTests\MethodIntercept.cs,Should_set_out_value_and_return_value,The following statement contains a magic number: var result = service.Get(1' 200' out totalCount);
Magic Number,Burrow.Tests.RPC.RpcClientInterceptorTests,MethodIntercept,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RPC\RpcClientInterceptorTests\MethodIntercept.cs,Should_set_out_value_and_return_value,The following statement contains a magic number: Assert.AreEqual(1000' totalCount);
Magic Number,Burrow.Tests.RPC.RpcClientInterceptorTests,MethodIntercept,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\RPC\RpcClientInterceptorTests\MethodIntercept.cs,Should_throw_exception_if_missing_out_value_in_response_object,The following statement contains a magic number: service.Get(1' 200' out totalCount);
Magic Number,Burrow.Tests.SubscriptionTests,MethodNackAllUpTo,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\SubscriptionTests\MethodNackAllUpTo.cs,Should_Nack_with_provided_delivery_tag_with_multiple_flag,The following statement contains a magic number: subscription.NackAllUpTo(10' true);
Magic Number,Burrow.Tests.SubscriptionTests,MethodNackAllUpTo,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\SubscriptionTests\MethodNackAllUpTo.cs,Should_Nack_with_provided_delivery_tag_with_multiple_flag,The following statement contains a magic number: channel.Received(1).BasicNack(10' true' true);
Magic Number,Burrow.Tests.SubscriptionTests,MethodAckAllUpTo,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\SubscriptionTests\MethodAckAllUpTo.cs,Should_ack_with_provided_delivery_tag_with_multiple_flag,The following statement contains a magic number: subscription.AckAllUpTo(10);
Magic Number,Burrow.Tests.SubscriptionTests,MethodAckAllUpTo,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\SubscriptionTests\MethodAckAllUpTo.cs,Should_ack_with_provided_delivery_tag_with_multiple_flag,The following statement contains a magic number: channel.Received(1).BasicAck(10' true);
Magic Number,Burrow.Tests.SubscriptionTests,MethodTryAckOrNAck,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\SubscriptionTests\MethodTryAckOrNAck.cs,Should_catch_AlreadyClosedException,The following statement contains a magic number: Subscription.TryAckOrNack(""' true' model' 100' false' false' watcher);
Magic Number,Burrow.Tests.SubscriptionTests,MethodTryAckOrNAck,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\SubscriptionTests\MethodTryAckOrNAck.cs,Should_catch_IOException,The following statement contains a magic number: Subscription.TryAckOrNack(""' true' model' 100' false' false' watcher);
Magic Number,Burrow.Tests.SubscriptionTests,MethodTryAckOrNAck,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\SubscriptionTests\MethodTryAckOrNAck.cs,Should_throw_other_Exceptions,The following statement contains a magic number: Subscription.TryAckOrNack(""' false' model' 100' false' false' watcher);
Magic Number,Burrow.Tests.TunnelFactoryTests,MethodCreate,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\TunnelFactoryTests\MethodCreate.cs,Should_be_able_to_create_tunnel_with_provided_values,The following statement contains a magic number: var tunnel = RabbitTunnel.Factory.Create("localhost"' 1000' "/"' "guest"' "guest"' NSubstitute.Substitute.For<IRabbitWatcher>());
Magic Number,Burrow.Tests.Internal.BasicPropertiesWrapperTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\BasicPropertiesWrapperTests\Constructor.cs,Should_wrap_a_IBasicProperties_instance,The following statement contains a magic number: p.Priority.Returns((byte)10);
Magic Number,Burrow.Tests.Internal.BasicPropertiesWrapperTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\BasicPropertiesWrapperTests\Constructor.cs,Should_wrap_a_IBasicProperties_instance,The following statement contains a magic number: p.Headers.Returns(new Dictionary<string' object>{{"Priority"' 10}});
Magic Number,Burrow.Tests.Internal.BasicPropertiesWrapperTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\BasicPropertiesWrapperTests\Constructor.cs,Should_wrap_a_IBasicProperties_instance,The following statement contains a magic number: Assert.AreEqual((byte)10' w.Priority);
Magic Number,Burrow.Tests.Internal.BasicPropertiesWrapperTests,Constructor,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\BasicPropertiesWrapperTests\Constructor.cs,Should_wrap_a_IBasicProperties_instance,The following statement contains a magic number: Assert.AreEqual(10' w.Headers["Priority"]);
Magic Number,Burrow.Tests.Internal.DefaultRetryPolicyTests,MethodReset,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\DefaultRetryPolicyTests\MethodReset.cs,Should_reset_delay_time_to_0,The following statement contains a magic number: Assert.IsTrue(are.WaitOne(1000));
Magic Number,Burrow.Tests.Internal.DefaultRetryPolicyTests,MethodWaitForNextRetry,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\DefaultRetryPolicyTests\MethodWaitForNextRetry.cs,Should_wait_and_execute_retry_action,The following statement contains a magic number: Assert.IsTrue(are.WaitOne(1000));
Magic Number,Burrow.Tests.Internal.DefaultRetryPolicyTests,MethodWaitForNextRetry,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\DefaultRetryPolicyTests\MethodWaitForNextRetry.cs,Should_wait_and_execute_retry_action,The following statement contains a magic number: Assert.AreEqual(1000' policy.DelayTime);
Magic Number,Burrow.Tests.Internal.DefaultRetryPolicyTests,MethodWaitForNextRetry,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\DefaultRetryPolicyTests\MethodWaitForNextRetry.cs,Should_double_delay_time_for_next_retry,The following statement contains a magic number: Assert.IsTrue(are.WaitOne(3000));
Magic Number,Burrow.Tests.Internal.DefaultRetryPolicyTests,MethodWaitForNextRetry,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\DefaultRetryPolicyTests\MethodWaitForNextRetry.cs,Should_double_delay_time_for_next_retry,The following statement contains a magic number: Assert.IsTrue(are.WaitOne(6000));
Magic Number,Burrow.Tests.Internal.DefaultRetryPolicyTests,MethodWaitForNextRetry,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\DefaultRetryPolicyTests\MethodWaitForNextRetry.cs,Should_double_delay_time_for_next_retry,The following statement contains a magic number: Assert.IsTrue(are.WaitOne(12000));
Magic Number,Burrow.Tests.Internal.DefaultRetryPolicyTests,MethodWaitForNextRetry,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\DefaultRetryPolicyTests\MethodWaitForNextRetry.cs,Should_double_delay_time_for_next_retry,The following statement contains a magic number: Assert.AreEqual(4000' policy.DelayTime);
Magic Number,Burrow.Tests.Internal.DefaultRetryPolicyTests,MethodWaitForNextRetry,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\DefaultRetryPolicyTests\MethodWaitForNextRetry.cs,Should_double_delay_time_until_max_delay_value_is_reached,The following statement contains a magic number: var policy = new DefaultRetryPolicy(1000 * 2 /* 2 seconds */);
Magic Number,Burrow.Tests.Internal.DefaultRetryPolicyTests,MethodWaitForNextRetry,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\DefaultRetryPolicyTests\MethodWaitForNextRetry.cs,Should_double_delay_time_until_max_delay_value_is_reached,The following statement contains a magic number: var policy = new DefaultRetryPolicy(1000 * 2 /* 2 seconds */);
Magic Number,Burrow.Tests.Internal.DefaultRetryPolicyTests,MethodWaitForNextRetry,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\DefaultRetryPolicyTests\MethodWaitForNextRetry.cs,Should_double_delay_time_until_max_delay_value_is_reached,The following statement contains a magic number: Assert.IsTrue(are.WaitOne(3000));
Magic Number,Burrow.Tests.Internal.DefaultRetryPolicyTests,MethodWaitForNextRetry,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\DefaultRetryPolicyTests\MethodWaitForNextRetry.cs,Should_double_delay_time_until_max_delay_value_is_reached,The following statement contains a magic number: Assert.IsTrue(are.WaitOne(6000));
Magic Number,Burrow.Tests.Internal.DefaultRetryPolicyTests,MethodWaitForNextRetry,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\DefaultRetryPolicyTests\MethodWaitForNextRetry.cs,Should_double_delay_time_until_max_delay_value_is_reached,The following statement contains a magic number: Assert.IsTrue(are.WaitOne(12000));
Magic Number,Burrow.Tests.Internal.DefaultRetryPolicyTests,MethodWaitForNextRetry,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\DefaultRetryPolicyTests\MethodWaitForNextRetry.cs,Should_double_delay_time_until_max_delay_value_is_reached,The following statement contains a magic number: Assert.AreEqual(2000' policy.DelayTime);
Magic Number,Burrow.Tests.Internal.DurableConnectionTests,DurableConnectionTestHelper,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\DurableConnectionTests\DurableConnectionTestHelper.cs,CleanUp,The following statement contains a magic number: ManagedConnectionFactory.SharedConnections.Values.ToList().ForEach(c =>              {                  try                  {                      c.Close(200' "Connection disposed by application");                      c.Dispose();                  }                  catch                  {                  }              });
Magic Number,Burrow.Tests.Internal.DurableConnectionTests,MethodConnect,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\DurableConnectionTests\MethodConnect.cs,Should_fire_connected_event_when_connect_successfully,The following statement contains a magic number: Assert.IsTrue(are.WaitOne(1000));
Magic Number,Burrow.Tests.Internal.DurableConnectionTests,MethodConnect,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\DurableConnectionTests\MethodConnect.cs,Should_create_only_one_connection_to_the_same_endpoint,The following statement contains a magic number: i< 100
Magic Number,Burrow.Tests.Internal.DurableConnectionTests,MethodConnect,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\DurableConnectionTests\MethodConnect.cs,Should_create_only_one_connection_to_the_each_endpoint,The following statement contains a magic number: i < 100
Magic Number,Burrow.Tests.Internal.DurableConnectionTests,MethodConnect,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\DurableConnectionTests\MethodConnect.cs,Should_create_only_one_connection_to_the_each_endpoint,The following statement contains a magic number: Assert.AreEqual(2' ManagedConnectionFactory.SharedConnections.Count);
Magic Number,Burrow.Tests.Internal.DurableConnectionTests,MethodConnect,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\DurableConnectionTests\MethodConnect.cs,Can_create_connections_to_different_endpoints_which_have_the_same_virtualHost,The following statement contains a magic number: var endpoint1 = new AmqpTcpEndpoint("localhost"' 5672);
Magic Number,Burrow.Tests.Internal.DurableConnectionTests,MethodConnect,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\DurableConnectionTests\MethodConnect.cs,Can_create_connections_to_different_endpoints_which_have_the_same_virtualHost,The following statement contains a magic number: var endpoint2 = new AmqpTcpEndpoint("localhost"' 5673);
Magic Number,Burrow.Tests.Internal.DurableConnectionTests,MethodConnect,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\DurableConnectionTests\MethodConnect.cs,Can_create_connections_to_different_endpoints_which_have_the_same_virtualHost,The following statement contains a magic number: i < 100
Magic Number,Burrow.Tests.Internal.DurableConnectionTests,MethodConnect,D:\research\architectureSmells\repos\vanthoainguyen_Burrow.NET\src\Burrow.Tests\Internal\DurableConnectionTests\MethodConnect.cs,Can_create_connections_to_different_endpoints_which_have_the_same_virtualHost,The following statement contains a magic number: Assert.AreEqual(2' ManagedConnectionFactory.SharedConnections.Count);
