Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Common,ExceptionsTest,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\ExceptionsTest.cs,CheckStandardsCompliance,Cyclomatic complexity of the method is 8
Long Parameter List,Common,MyTestTraceListener,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\PerformanceTests.cs,TraceEvent,The method has 6 parameters. Parameters: eventCache' source' eventType' id' format' args
Long Parameter List,Common,MyTestLoggerFactoryAdapter,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\PerformanceTests.cs,CreateLogger,The method has 6 parameters. Parameters: name' level' showLevel' showDateTime' showLogName' dateTimeFormat
Long Parameter List,Common,MySimpleLogger,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\PerformanceTests.cs,MySimpleLogger,The method has 7 parameters. Parameters: messages' logName' logLevel' showLevel' showDateTime' showLogName' dateTimeFormat
Long Parameter List,Common.Logging.Simple,ConcreteLogger,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Simple\AbstractSimpleLoggerTests.cs,ConcreteLogger,The method has 6 parameters. Parameters: logName' logLevel' showlevel' showDateTime' showLogName' dateTimeFormat
Long Parameter List,Common.Logging.Simple,ConcreteLoggerFactory,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Simple\AbstractSimpleLoggerTests.cs,CreateLogger,The method has 6 parameters. Parameters: name' level' showLevel' showDateTime' showLogName' dateTimeFormat
Long Statement,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,LogsMessage,The length of the statement  "            Invoke(log' logMethods[8]' CultureInfo.CreateSpecificCulture("de-de")' TestFormatMessageCallback.MessageCallback("format8 {0}"' new object[] { 8.1 }));" is 151.
Long Statement,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,LogsMessage,The length of the statement  "            Invoke(log' logMethods[9]' CultureInfo.CreateSpecificCulture("de-de")' TestFormatMessageCallback.MessageCallback("format9 {0}"' new object[] { 9.1 })' ex);" is 155.
Long Statement,Common.Logging.Simple,CommonLoggingTraceListenerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Simple\CommonLoggingTraceListenerTests.cs,ProcessesInitializeData,The length of the statement  "            l = new CommonLoggingTraceListener("; DefaultTraceeventtype   =warninG; loggernameFORMAT= {listenerName}-{sourceName}\t; Name =  TestName\t; "); " is 144.
Long Statement,Common.Logging,LogManagerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\LogManagerTests.cs,ConfigureFromConfigurationReader,The length of the statement  "                Expect.Call(r.GetSection(LogManager.COMMON_LOGGING_SECTION)).Return(new LogSetting(typeof(ConsoleOutLoggerFactoryAdapter)' null)); " is 130.
Long Statement,Common.Logging,LogManagerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\LogManagerTests.cs,ConfigureFromConfigurationReader,The length of the statement  "                                .And.Message.EqualTo(string.Format("ConfigurationReader {0} returned unknown settings instance of type System.Object"' r.GetType().Name)) " is 137.
Long Statement,Common.Logging.Configuration,ArgUtilsTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Configuration\ArgUtilsTests.cs,Coalesce,The length of the statement  "            Assert.AreEqual(string.Empty' ArgUtils.Coalesce<object>( delegate(object v) { return v != null; }' null' string.Empty' "x"));" is 125.
Long Statement,Common.Logging.Configuration,ArgUtilsTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Configuration\ArgUtilsTests.cs,TryParseEnum,The length of the statement  "                Is.TypeOf<ArgumentException>().And.Message.EqualTo( string.Format("Type '{0}' is not an enum type"' typeof(int).FullName) )" is 123.
Long Statement,Common.Logging.Configuration,ArgUtilsTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Configuration\ArgUtilsTests.cs,AssertIsAssignable,The length of the statement  "                    .And.Message.EqualTo(new ArgumentOutOfRangeException("this"' this.GetType()'string.Format("Type '{0}' of parameter '{1}' is not assignable to target type '{2}'"" is 160.
Long Statement,Common.Logging.Configuration,ArgUtilsTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Configuration\ArgUtilsTests.cs,AssertNotNullThrowsArgumentNullException,The length of the statement  "            Assert.Throws(Is.TypeOf<ArgumentNullException>().And.Message.EqualTo(new ArgumentNullException("tmp"' "message msgarg").Message)'" is 129.
Long Statement,Common.Logging.Configuration,DefaultConfigurationReaderTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Configuration\DefaultConfigurationReaderTests.cs,ReadsAppConfig,The length of the statement  "            Assert.AreEqual("FromAppConfig"' ((System.Collections.Specialized.NameValueCollection)new DefaultConfigurationReader().GetSection("appSettings"))["appConfigCheck"]);" is 165.
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,LogsMessage,The following statement contains a magic number: Invoke(log' logMethods[2]' "format2 {0}"' new object[] { "arg2" });
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,LogsMessage,The following statement contains a magic number: Invoke(log' logMethods[3]' "format3 {0}"' ex' new object[] { "arg3" });
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,LogsMessage,The following statement contains a magic number: Invoke(log' logMethods[4]' CultureInfo.CreateSpecificCulture("de-de")' "format4 {0}"' new object[] { 4.1 });
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,LogsMessage,The following statement contains a magic number: Invoke(log' logMethods[4]' CultureInfo.CreateSpecificCulture("de-de")' "format4 {0}"' new object[] { 4.1 });
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,LogsMessage,The following statement contains a magic number: Invoke(log' logMethods[5]' CultureInfo.CreateSpecificCulture("de-de")' "format5 {0}"' ex' new object[] { 5.1 });
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,LogsMessage,The following statement contains a magic number: Invoke(log' logMethods[5]' CultureInfo.CreateSpecificCulture("de-de")' "format5 {0}"' ex' new object[] { 5.1 });
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,LogsMessage,The following statement contains a magic number: Invoke(log' logMethods[6]' TestFormatMessageCallback.MessageCallback("message6"));
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,LogsMessage,The following statement contains a magic number: Invoke(log' logMethods[7]' TestFormatMessageCallback.MessageCallback("message7")' ex);
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,LogsMessage,The following statement contains a magic number: Invoke(log' logMethods[8]' CultureInfo.CreateSpecificCulture("de-de")' TestFormatMessageCallback.MessageCallback("format8 {0}"' new object[] { 8.1 }));
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,LogsMessage,The following statement contains a magic number: Invoke(log' logMethods[8]' CultureInfo.CreateSpecificCulture("de-de")' TestFormatMessageCallback.MessageCallback("format8 {0}"' new object[] { 8.1 }));
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,LogsMessage,The following statement contains a magic number: Invoke(log' logMethods[9]' CultureInfo.CreateSpecificCulture("de-de")' TestFormatMessageCallback.MessageCallback("format9 {0}"' new object[] { 9.1 })' ex);
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,LogsMessage,The following statement contains a magic number: Invoke(log' logMethods[9]' CultureInfo.CreateSpecificCulture("de-de")' TestFormatMessageCallback.MessageCallback("format9 {0}"' new object[] { 9.1 })' ex);
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,WriteIsCalledWithCorrectLogLevel,The following statement contains a magic number: Invoke(log' logMethods[2]' "format"' new object[] { formatArg });
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,WriteIsCalledWithCorrectLogLevel,The following statement contains a magic number: Invoke(log' logMethods[3]' "format"' ex' new object[] { formatArg });
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,WriteIsCalledWithCorrectLogLevel,The following statement contains a magic number: Invoke(log' logMethods[4]' CultureInfo.InvariantCulture' "format"' new object[] { formatArg });
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,WriteIsCalledWithCorrectLogLevel,The following statement contains a magic number: Invoke(log' logMethods[5]' CultureInfo.InvariantCulture' "format"' ex' new object[] { formatArg });
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,WriteIsCalledWithCorrectLogLevel,The following statement contains a magic number: Invoke(log' logMethods[6]' failCallback);
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,WriteIsCalledWithCorrectLogLevel,The following statement contains a magic number: Invoke(log' logMethods[7]' failCallback' ex);
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,WriteIsCalledWithCorrectLogLevel,The following statement contains a magic number: Invoke(log' logMethods[8]' CultureInfo.InvariantCulture' failCallback);
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,WriteIsCalledWithCorrectLogLevel,The following statement contains a magic number: Invoke(log' logMethods[9]' CultureInfo.InvariantCulture' failCallback' ex);
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,WriteAndEvaluateOnlyWhenLevelEnabled,The following statement contains a magic number: Invoke(log' logMethods[2]' "format"' new object[] { formatArg });
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,WriteAndEvaluateOnlyWhenLevelEnabled,The following statement contains a magic number: Invoke(log' logMethods[3]' "format"' ex' new object[] { formatArg });
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,WriteAndEvaluateOnlyWhenLevelEnabled,The following statement contains a magic number: Invoke(log' logMethods[4]' CultureInfo.InvariantCulture' "format"' new object[] { formatArg });
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,WriteAndEvaluateOnlyWhenLevelEnabled,The following statement contains a magic number: Invoke(log' logMethods[5]' CultureInfo.InvariantCulture' "format"' ex' new object[] { formatArg });
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,WriteAndEvaluateOnlyWhenLevelEnabled,The following statement contains a magic number: Invoke(log' logMethods[6]' failCallback);
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,WriteAndEvaluateOnlyWhenLevelEnabled,The following statement contains a magic number: Invoke(log' logMethods[7]' failCallback' ex);
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,WriteAndEvaluateOnlyWhenLevelEnabled,The following statement contains a magic number: Invoke(log' logMethods[8]' CultureInfo.InvariantCulture' failCallback);
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,WriteAndEvaluateOnlyWhenLevelEnabled,The following statement contains a magic number: Invoke(log' logMethods[9]' CultureInfo.InvariantCulture' failCallback' ex);
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,WriteAndEvaluateOnlyWhenLevelEnabled,The following statement contains a magic number: Invoke(log' logMethods[2]' "format"' new object[] {formatArg});
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,WriteAndEvaluateOnlyWhenLevelEnabled,The following statement contains a magic number: Invoke(log' logMethods[3]' "format"' ex' new object[] { formatArg });
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,WriteAndEvaluateOnlyWhenLevelEnabled,The following statement contains a magic number: Invoke(log' logMethods[4]' CultureInfo.InvariantCulture' "format"' new object[] {formatArg});
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,WriteAndEvaluateOnlyWhenLevelEnabled,The following statement contains a magic number: Invoke(log' logMethods[5]' CultureInfo.InvariantCulture' "format"' ex' new object[] { formatArg });
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,WriteAndEvaluateOnlyWhenLevelEnabled,The following statement contains a magic number: Invoke(log' logMethods[6]' failCallback);
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,WriteAndEvaluateOnlyWhenLevelEnabled,The following statement contains a magic number: Invoke(log' logMethods[7]' failCallback' ex);
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,WriteAndEvaluateOnlyWhenLevelEnabled,The following statement contains a magic number: Invoke(log' logMethods[8]' CultureInfo.InvariantCulture' failCallback);
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,WriteAndEvaluateOnlyWhenLevelEnabled,The following statement contains a magic number: Invoke(log' logMethods[9]' CultureInfo.InvariantCulture' failCallback' ex);
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,GetLogMethodSignatures,The following statement contains a magic number: return new MethodInfo[]                        {                            typeof (ILog).GetMethod(levelName' methodSignatures[0])'                            typeof (ILog).GetMethod(levelName' methodSignatures[1])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[2])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[3])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[4])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[5])'                            typeof (ILog).GetMethod(levelName' methodSignatures[6])'                            typeof (ILog).GetMethod(levelName' methodSignatures[7])'                            typeof (ILog).GetMethod(levelName' methodSignatures[8])'                            typeof (ILog).GetMethod(levelName' methodSignatures[9])                        };
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,GetLogMethodSignatures,The following statement contains a magic number: return new MethodInfo[]                        {                            typeof (ILog).GetMethod(levelName' methodSignatures[0])'                            typeof (ILog).GetMethod(levelName' methodSignatures[1])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[2])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[3])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[4])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[5])'                            typeof (ILog).GetMethod(levelName' methodSignatures[6])'                            typeof (ILog).GetMethod(levelName' methodSignatures[7])'                            typeof (ILog).GetMethod(levelName' methodSignatures[8])'                            typeof (ILog).GetMethod(levelName' methodSignatures[9])                        };
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,GetLogMethodSignatures,The following statement contains a magic number: return new MethodInfo[]                        {                            typeof (ILog).GetMethod(levelName' methodSignatures[0])'                            typeof (ILog).GetMethod(levelName' methodSignatures[1])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[2])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[3])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[4])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[5])'                            typeof (ILog).GetMethod(levelName' methodSignatures[6])'                            typeof (ILog).GetMethod(levelName' methodSignatures[7])'                            typeof (ILog).GetMethod(levelName' methodSignatures[8])'                            typeof (ILog).GetMethod(levelName' methodSignatures[9])                        };
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,GetLogMethodSignatures,The following statement contains a magic number: return new MethodInfo[]                        {                            typeof (ILog).GetMethod(levelName' methodSignatures[0])'                            typeof (ILog).GetMethod(levelName' methodSignatures[1])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[2])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[3])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[4])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[5])'                            typeof (ILog).GetMethod(levelName' methodSignatures[6])'                            typeof (ILog).GetMethod(levelName' methodSignatures[7])'                            typeof (ILog).GetMethod(levelName' methodSignatures[8])'                            typeof (ILog).GetMethod(levelName' methodSignatures[9])                        };
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,GetLogMethodSignatures,The following statement contains a magic number: return new MethodInfo[]                        {                            typeof (ILog).GetMethod(levelName' methodSignatures[0])'                            typeof (ILog).GetMethod(levelName' methodSignatures[1])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[2])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[3])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[4])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[5])'                            typeof (ILog).GetMethod(levelName' methodSignatures[6])'                            typeof (ILog).GetMethod(levelName' methodSignatures[7])'                            typeof (ILog).GetMethod(levelName' methodSignatures[8])'                            typeof (ILog).GetMethod(levelName' methodSignatures[9])                        };
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,GetLogMethodSignatures,The following statement contains a magic number: return new MethodInfo[]                        {                            typeof (ILog).GetMethod(levelName' methodSignatures[0])'                            typeof (ILog).GetMethod(levelName' methodSignatures[1])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[2])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[3])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[4])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[5])'                            typeof (ILog).GetMethod(levelName' methodSignatures[6])'                            typeof (ILog).GetMethod(levelName' methodSignatures[7])'                            typeof (ILog).GetMethod(levelName' methodSignatures[8])'                            typeof (ILog).GetMethod(levelName' methodSignatures[9])                        };
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,GetLogMethodSignatures,The following statement contains a magic number: return new MethodInfo[]                        {                            typeof (ILog).GetMethod(levelName' methodSignatures[0])'                            typeof (ILog).GetMethod(levelName' methodSignatures[1])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[2])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[3])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[4])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[5])'                            typeof (ILog).GetMethod(levelName' methodSignatures[6])'                            typeof (ILog).GetMethod(levelName' methodSignatures[7])'                            typeof (ILog).GetMethod(levelName' methodSignatures[8])'                            typeof (ILog).GetMethod(levelName' methodSignatures[9])                        };
Magic Number,Common.Logging.Factory,AbstractLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Factory\AbstractLoggerTests.cs,GetLogMethodSignatures,The following statement contains a magic number: return new MethodInfo[]                        {                            typeof (ILog).GetMethod(levelName' methodSignatures[0])'                            typeof (ILog).GetMethod(levelName' methodSignatures[1])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[2])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[3])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[4])'                            typeof (ILog).GetMethod(levelName + "Format"' methodSignatures[5])'                            typeof (ILog).GetMethod(levelName' methodSignatures[6])'                            typeof (ILog).GetMethod(levelName' methodSignatures[7])'                            typeof (ILog).GetMethod(levelName' methodSignatures[8])'                            typeof (ILog).GetMethod(levelName' methodSignatures[9])                        };
Magic Number,Common,MethodInvokePerformanceTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\MethodInvokePerformanceTests.cs,DelegatePerformanceTest,The following statement contains a magic number: int runs = 5000000;
Magic Number,Common,MethodInvokePerformanceTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\MethodInvokePerformanceTests.cs,PerformanceTestTarget,The following statement contains a magic number: double x = 2.1;
Magic Number,Common,MethodInvokePerformanceTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\MethodInvokePerformanceTests.cs,PerformanceTestTarget,The following statement contains a magic number: i<10
Magic Number,Common,PerformanceTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\PerformanceTests.cs,DiagnosticsTracePerformanceTest,The following statement contains a magic number: int runs = 100000000;
Magic Number,Common.Logging.Simple,CapturingLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Simple\CapturingLoggerTests.cs,LoggerClearsEvents,The following statement contains a magic number: Assert.AreEqual(2' testLogger.LoggerEvents.Count);
Magic Number,Common.Logging.Simple,CapturingLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Simple\CapturingLoggerTests.cs,AdapterClearsEvents,The following statement contains a magic number: Assert.AreEqual(2' adapter.LoggerEvents.Count);
Magic Number,Common.Logging.Simple,CapturingLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Simple\CapturingLoggerTests.cs,LoggerCapturesIndividualEvents,The following statement contains a magic number: Assert.AreEqual(2' testLogger.LoggerEvents.Count);
Magic Number,Common.Logging.Simple,CapturingLoggerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Simple\CapturingLoggerTests.cs,AdapterCapturesAllEvents,The following statement contains a magic number: Assert.AreEqual(2' adapter.LoggerEvents.Count);
Magic Number,Common.Logging,ConfigurationSectionHandlerTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\ConfigurationSectionHandlerTests.cs,ArgumentKeysCaseInsensitive,The following statement contains a magic number: Assert.AreEqual(3' setting.Properties.Count);
Magic Number,Common.Logging.Configuration,ArgUtilsTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Configuration\ArgUtilsTests.cs,TryParse,The following statement contains a magic number: Assert.AreEqual( 1' ArgUtils.TryParse(2' "1") );
Magic Number,Common.Logging.Configuration,ArgUtilsTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Configuration\ArgUtilsTests.cs,TryParse,The following statement contains a magic number: Assert.AreEqual( 2' ArgUtils.TryParse(2' "2invalidnumber1") );
Magic Number,Common.Logging.Configuration,ArgUtilsTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Configuration\ArgUtilsTests.cs,TryParse,The following statement contains a magic number: Assert.AreEqual( 2' ArgUtils.TryParse(2' "2invalidnumber1") );
Magic Number,Common.Logging.Configuration,ArgUtilsTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Configuration\ArgUtilsTests.cs,TryParse,The following statement contains a magic number: Assert.AreEqual( (short)1' ArgUtils.TryParse((short)2' "1") );
Magic Number,Common.Logging.Configuration,ArgUtilsTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Configuration\ArgUtilsTests.cs,TryParse,The following statement contains a magic number: Assert.AreEqual( (long)1' ArgUtils.TryParse((long)2' "1") );
Magic Number,Common.Logging.Configuration,ArgUtilsTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Configuration\ArgUtilsTests.cs,TryParse,The following statement contains a magic number: Assert.AreEqual( (float)1' ArgUtils.TryParse((float)2' "1") );
Magic Number,Common.Logging.Configuration,ArgUtilsTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Configuration\ArgUtilsTests.cs,TryParse,The following statement contains a magic number: Assert.AreEqual( (double)1' ArgUtils.TryParse((double)2' "1") );
Magic Number,Common.Logging.Configuration,ArgUtilsTests,C:\research\architectureSmells\repos\net-commons_common-logging\test\Common.Logging.Tests\Logging\Configuration\ArgUtilsTests.cs,TryParse,The following statement contains a magic number: Assert.AreEqual( (decimal)1' ArgUtils.TryParse((decimal)2' "1") );
