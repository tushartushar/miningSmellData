Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Phamhilator.Pham.UI,PostCheckBack,C:\repos\ArcticEcho_Phamhilator\Pham\PostCheckBack.cs,CheckPosts,Cyclomatic complexity of the method is 9
Long Statement,Phamhilator.Pham.UI,ReportFormatter,C:\repos\ArcticEcho_Phamhilator\Pham\ReportFormatter.cs,FormatReport,The length of the statement  "            msg.AppendLink(post.AuthorName' post.AuthorLink' "Reputation: " + post.AuthorRep' TextFormattingOptions.None' WhiteSpace.None); " is 127.
Complex Conditional,Phamhilator.Pham.UI,Program,C:\repos\ArcticEcho_Phamhilator\Pham\Program.cs,CheckPost,The conditional expression  "checkedPosts.Contains(p) || p.Site != "stackoverflow.com" ||                      p.AuthorRep > 10000 || p.Score > 2"  is complex.
Magic Number,Phamhilator.Pham.UI,PostCheckBack,C:\repos\ArcticEcho_Phamhilator\Pham\PostCheckBack.cs,CheckPosts,The following statement contains a magic number: while (!dispose)              {                  try                  {                      checkBackMre.WaitOne(chkRate);                        if (dispose) return;                        var post = new Post                      {                          CreationDate = DateTime.MaxValue                      };                        foreach (var p in logger)                      {                          if (p.CreationDate < post.CreationDate)                          {                              post = p;                          }                      }                        var timeAlive = DateTime.UtcNow - post.CreationDate;                        if (timeAlive.TotalDays > 2)                      {                          logger.RemoveItem(post);                          continue;                      }                        if (timeAlive.TotalDays > 1)                      {                          CQ dom;                          if (post.IsQuestion && DeletedQuestionFound != null && ClosedQuestionFound != null)                          {                              if (PostFetcher.IsPostDeleted(post.Url' out dom))                              {                                  DeletedQuestionFound(post);                              }                              else if (PostFetcher.IsQuestionClosed(dom' post.Url' false))                              {                                  ClosedQuestionFound(post);                              }                          }                          else if (!post.IsQuestion && PostFetcher.IsPostDeleted(post.Url' out dom) &&                              DeletedAnswerFound != null)                          {                              DeletedAnswerFound(post);                          }                            logger.RemoveItem(post);                      }                  }                  catch (Exception ex)                  {                      Console.WriteLine(ex);                  }              }
Magic Number,Phamhilator.Pham.UI,PostClassifier,C:\repos\ArcticEcho_Phamhilator\Pham\PostClassifier.cs,ClassifyPost,The following statement contains a magic number: lock (bow)              {                  docs = bow.GetSimilarity(simple' 5);              }
Magic Number,Phamhilator.Pham.UI,Program,C:\repos\ArcticEcho_Phamhilator\Pham\Program.cs,CheckPost,The following statement contains a magic number: try              {                  if (checkedPosts.Contains(p) || p.Site != "stackoverflow.com" ||                      p.AuthorRep > 10000 || p.Score > 2) return;                  while (checkedPosts.Count > 1000)                  {                      Post temp;                      checkedPosts.TryPop(out temp);                  }                  checkedPosts.Push(p);                    Task.Run(() => checkBack.AddPost(p));                    if (p.IsQuestion)                  {                      CheckQuestion(p);                  }                  else                  {                      CheckAnswer(p);                  }              }              catch (Exception ex)              {                  Console.WriteLine(ex);              }
Magic Number,Phamhilator.Pham.UI,Program,C:\repos\ArcticEcho_Phamhilator\Pham\Program.cs,CheckPost,The following statement contains a magic number: try              {                  if (checkedPosts.Contains(p) || p.Site != "stackoverflow.com" ||                      p.AuthorRep > 10000 || p.Score > 2) return;                  while (checkedPosts.Count > 1000)                  {                      Post temp;                      checkedPosts.TryPop(out temp);                  }                  checkedPosts.Push(p);                    Task.Run(() => checkBack.AddPost(p));                    if (p.IsQuestion)                  {                      CheckQuestion(p);                  }                  else                  {                      CheckAnswer(p);                  }              }              catch (Exception ex)              {                  Console.WriteLine(ex);              }
Magic Number,Phamhilator.Pham.UI,Program,C:\repos\ArcticEcho_Phamhilator\Pham\Program.cs,CheckPost,The following statement contains a magic number: try              {                  if (checkedPosts.Contains(p) || p.Site != "stackoverflow.com" ||                      p.AuthorRep > 10000 || p.Score > 2) return;                  while (checkedPosts.Count > 1000)                  {                      Post temp;                      checkedPosts.TryPop(out temp);                  }                  checkedPosts.Push(p);                    Task.Run(() => checkBack.AddPost(p));                    if (p.IsQuestion)                  {                      CheckQuestion(p);                  }                  else                  {                      CheckAnswer(p);                  }              }              catch (Exception ex)              {                  Console.WriteLine(ex);              }
Magic Number,Phamhilator.Pham.UI,Program,C:\repos\ArcticEcho_Phamhilator\Pham\Program.cs,CheckQuestion,The following statement contains a magic number: if (cvRes.Similarity > 0.5 && cvRes.Similarity > dvRes.Similarity * 0.9)              {                  ReportPost(p' cvRes);              }              else if (dvRes.Similarity > 0.5 && dvRes.Similarity > cvRes.Similarity * 1.1)              {                  ReportPost(p' dvRes);              }
Magic Number,Phamhilator.Pham.UI,Program,C:\repos\ArcticEcho_Phamhilator\Pham\Program.cs,CheckQuestion,The following statement contains a magic number: if (cvRes.Similarity > 0.5 && cvRes.Similarity > dvRes.Similarity * 0.9)              {                  ReportPost(p' cvRes);              }              else if (dvRes.Similarity > 0.5 && dvRes.Similarity > cvRes.Similarity * 1.1)              {                  ReportPost(p' dvRes);              }
Magic Number,Phamhilator.Pham.UI,Program,C:\repos\ArcticEcho_Phamhilator\Pham\Program.cs,CheckQuestion,The following statement contains a magic number: if (cvRes.Similarity > 0.5 && cvRes.Similarity > dvRes.Similarity * 0.9)              {                  ReportPost(p' cvRes);              }              else if (dvRes.Similarity > 0.5 && dvRes.Similarity > cvRes.Similarity * 1.1)              {                  ReportPost(p' dvRes);              }
Magic Number,Phamhilator.Pham.UI,Program,C:\repos\ArcticEcho_Phamhilator\Pham\Program.cs,CheckQuestion,The following statement contains a magic number: if (cvRes.Similarity > 0.5 && cvRes.Similarity > dvRes.Similarity * 0.9)              {                  ReportPost(p' cvRes);              }              else if (dvRes.Similarity > 0.5 && dvRes.Similarity > cvRes.Similarity * 1.1)              {                  ReportPost(p' dvRes);              }
Magic Number,Phamhilator.Pham.UI,Program,C:\repos\ArcticEcho_Phamhilator\Pham\Program.cs,CheckAnswer,The following statement contains a magic number: if (dvRes.Similarity > 0.5)              {                  ReportPost(p' dvRes);                  return;              }
Magic Number,Phamhilator.Pham.UI,Program,C:\repos\ArcticEcho_Phamhilator\Pham\Program.cs,HandleChatCommand,The following statement contains a magic number: try              {                  if (UserAccess.Owners.Any(id => id == command.Author.ID) ||                      command.Author.IsRoomOwner || command.Author.IsMod)                  {                      var cmdMatches = HandleOwnerCommand(room' command);                        if (!cmdMatches)                      {                          cmdMatches = HandlePrivilegedUserCommand(room' command);                            if (!cmdMatches)                          {                              HandleNormalUserCommand(room' command);                          }                      }                  }                  else if (command.Author.Reputation >= 3000)                  {                      var cmdMatches = HandlePrivilegedUserCommand(room' command);                        if (!cmdMatches)                      {                          HandleNormalUserCommand(room' command);                      }                  }                  else                  {                      HandleNormalUserCommand(room' command);                  }              }              catch (Exception ex)              {                  Console.WriteLine(ex);                  room.PostReplyFast(command' $"`Unable to execute command: {ex.Message}`");              }
Magic Number,Phamhilator.Pham.UI,Program,C:\repos\ArcticEcho_Phamhilator\Pham\Program.cs,HandleNormalUserCommand,The following statement contains a magic number: switch (cmd)              {                  case "ALIVE":                  {                      var statusReport = $"Yes' I'm alive (`{DateTime.UtcNow - startTime}`).";                      room.PostMessageFast(statusReport);                      return true;                  }                  case "COMMANDS":                  {                      var msg = $"See [here]({wikiCmdsLink} \"Chat Commands Wiki\").";                      room.PostReplyFast(command' msg);                      return true;                  }                  case "THRESHOLD":                  {                      var msg = $"My current threshold is: `{cvClassifier.Threshold * 100}`%.";                      room.PostMessageFast(msg);                      return true;                  }                  //case "VERSION":                  //{                  //    var msg = $"My current version is: `{updater.CurrentVersion}`.";                  //    room.PostReplyFast(command' msg);                  //    return true;                  //}                  default:                  {                      return false;                  }              }
Magic Number,Phamhilator.Pham.UI,Program,C:\repos\ArcticEcho_Phamhilator\Pham\Program.cs,HandleOwnerCommand,The following statement contains a magic number: if (cmd.StartsWith("SET THRESHOLD"))              {                  var th = 0F;                    if (!float.TryParse(cmd.Remove(0' 14)' out th))                  {                      room.PostReplyFast(command' "Try using your hands to type a valid number between 0 and 1.");                      return true;                  }                    if (th < 0 || th > 1)                  {                      room.PostReplyFast(command' "Threshold must be between 0 and 1 (and *don't* include the % sign).");                      return true;                  }                    cvClassifier.Threshold = th;                  qdvClassifier.Threshold = th;                  advClassifier.Threshold = th;                    room.PostReplyFast(command' "Threshold updated.");                    return true;              }
Magic Number,Phamhilator.Pham.UI,ReportFormatter,C:\repos\ArcticEcho_Phamhilator\Pham\ReportFormatter.cs,FormatReport,The following statement contains a magic number: var boldTh = 1 - ((1 - threshold) / 2);
Magic Number,Phamhilator.Pham.UI,ReportFormatter,C:\repos\ArcticEcho_Phamhilator\Pham\ReportFormatter.cs,FormatReport,The following statement contains a magic number: var resData = $"Similarity: {Math.Round(results.Similarity * 100)}%";
Missing Default,Phamhilator.Pham.UI,ReportFormatter,C:\repos\ArcticEcho_Phamhilator\Pham\ReportFormatter.cs,FormatReport,The following switch statement is missing a default case: switch (results.Action)              {                  case ClassificationResults.SuggestedAction.Edit:                  {                      msg.AppendLink("Edit"' editUrl' resData' results.Similarity >= boldTh ?                          TextFormattingOptions.Bold :                          TextFormattingOptions.None'                          WhiteSpace.None);                      break;                  }                  case ClassificationResults.SuggestedAction.Close:                  {                      msg.AppendLink("Close"' closeUrl' resData' results.Similarity >= boldTh ?                          TextFormattingOptions.Bold :                          TextFormattingOptions.None'                          WhiteSpace.None);                      break;                  }                  case ClassificationResults.SuggestedAction.Delete:                  {                      msg.AppendLink("Delete"' deleteUrl' resData' results.Similarity >= boldTh ?                          TextFormattingOptions.Bold :                          TextFormattingOptions.None'                          WhiteSpace.None);                      break;                  }              }
