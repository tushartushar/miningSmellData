Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Phamhilator.Yam.Core,Answer,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\Answer.cs,Answer,The method has 12 parameters.
Long Parameter List,Phamhilator.Yam.Core,Question,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\Question.cs,Question,The method has 13 parameters.
Long Statement,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,GetQuestion,The length of the statement  "	return new Question (id' url' host' title' body' score' isClosed' creationDate' authorName' authorLink' networkID' authorRep' tags); " is 132.
Long Statement,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,GetQuestion,The length of the statement  "		if (dom [".post-signature.owner .user-details a"].Any (e => e.Attributes ["href"] != null && e.Attributes ["href"].Contains ("/users/"))) { " is 139.
Long Statement,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,GetQuestion,The length of the statement  "	return new Question (id' postUrl' host' title' body' score' isClosed' creationDate' authorName' authorLink' networkID' authorRep' tags.ToArray ()); " is 147.
Long Statement,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,IsQuestionClosed,The length of the statement  "			if (qStatus != null && ((qStatus.Contains ("on hold") || qStatus.Contains ("closed")) || (includeDupe && qStatus.Contains ("duplicate")))) { " is 140.
Long Statement,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,GetAnswer,The length of the statement  "	var creationDate = DateTime.Parse (dom [".post-signature .user-info .user-action-time .relativetime"].Last () [0].Attributes ["title"]); " is 136.
Long Statement,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,GetAnswer,The length of the statement  "		authorName = WebUtility.HtmlDecode (StripTags (dom [aDom + ".post-signature .user-details a"].Last () [0].InnerHTML).Trim ()); " is 126.
Long Statement,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,GetAnswer,The length of the statement  "		authorLink = TrimUrl ("http://" + host + dom [aDom + ".post-signature .user-details a"].Last () [0].Attributes ["href"].Trim ()); " is 129.
Long Statement,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,GetAnswer,The length of the statement  "			authorName = WebUtility.HtmlDecode (StripTags (dom [aDom + ".post-signature .user-details a"].Last () [0].InnerHTML).Trim ()); " is 126.
Long Statement,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,GetAnswer,The length of the statement  "	return new Answer (postId' url' excerpt' body' host' score' isAccepted' creationDate' authorName' authorLink' networkID' authorRep); " is 132.
Long Statement,Phamhilator.Yam.Core,RealtimePostSocket,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\RealtimePostSocket.cs,InitialiseSocket,The length of the statement  "	// 415'520'139'477'540'11'41'118'463'89'514'528'532'320'126'375'308'502'147'565'431'435'371'304'605'196'597'391'571'363'419'563'65'281'557'182'220'553'530'591'135'583'595'97'481'546'471'500'299'53'269'467'79'253'174'607'567'587'324'73'156'162'455'524'257'555'336'593'312'479'403'387'548'69'504'4'248'224'367'601'240'615'496'498'228'93'277'518'265'61'216'151'379'475'131'200'208'559'204'447'489'469'122'451'459'186'49'2'232'295'212'244'536'512'508'353'411'101'1'526'609'573'3'483'85'395'423'114'516'273'485'106'102'599'170'34'45'427'603'110'579'166'613'581 " is 555.
Complex Conditional,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,IsQuestionClosed,The conditional expression  "qStatus != null && ((qStatus.Contains ("on hold") || qStatus.Contains ("closed")) || (includeDupe && qStatus.Contains ("duplicate")))"  is complex.
Empty Catch Block,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,IsQuestionClosed,The method has an empty catch block.
Empty Catch Block,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,IsAnswerAccepted,The method has an empty catch block.
Magic Number,Phamhilator.Yam.Core,Logger,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\Logger.cs,Logger,The following statement contains a magic number: FlushRate = flushRate ?? TimeSpan.FromMinutes (60);  
Magic Number,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,GetQuestion,The following statement contains a magic number: if (dom [".post-signature.owner .reputation-score"] [0] != null) {  	// Normal answer.  	authorName = WebUtility.HtmlDecode (StripTags (dom [".post-signature.owner .user-details a"] [0].InnerHTML));  	authorLink = TrimUrl ("http://" + host + dom [".post-signature.owner .user-details a"] [0].Attributes ["href"]);  	authorRep = ParseRep (dom [".post-signature.owner .reputation-score"] [0].InnerHTML);  } else {  	if (dom [".post-signature.owner .user-details a"].Any (e => e.Attributes ["href"] != null && e.Attributes ["href"].Contains ("/users/"))) {  		// Community wiki.  		authorName = WebUtility.HtmlDecode (StripTags (dom [".post-signature.owner .user-details a"] [1].InnerHTML));  		authorLink = TrimUrl ("http://" + host + dom [".post-signature.owner .user-details a"] [1].Attributes ["href"]);  		authorRep = 1;  	} else {  		// Dead account owner.  		authorName = WebUtility.HtmlDecode (StripTags (dom [".post-signature.owner .user-details"] [0].InnerHTML));  		authorName = authorName.Remove (authorName.Length - 4);  		authorLink = null;  		authorRep = 1;  	}  }  
Magic Number,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,GetQuestion,The following statement contains a magic number: if (dom [".post-signature.owner .user-details a"].Any (e => e.Attributes ["href"] != null && e.Attributes ["href"].Contains ("/users/"))) {  	// Community wiki.  	authorName = WebUtility.HtmlDecode (StripTags (dom [".post-signature.owner .user-details a"] [1].InnerHTML));  	authorLink = TrimUrl ("http://" + host + dom [".post-signature.owner .user-details a"] [1].Attributes ["href"]);  	authorRep = 1;  } else {  	// Dead account owner.  	authorName = WebUtility.HtmlDecode (StripTags (dom [".post-signature.owner .user-details"] [0].InnerHTML));  	authorName = authorName.Remove (authorName.Length - 4);  	authorLink = null;  	authorRep = 1;  }  
Magic Number,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,GetQuestion,The following statement contains a magic number: authorName = authorName.Remove (authorName.Length - 4);  
Magic Number,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,ParsePostLink,The following statement contains a magic number: id = uint.Parse (postIDParser.Match (postUrl).Groups [3].Value);  
Magic Number,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,ParseRep,The following statement contains a magic number: trimmed = trimmed.EndsWith ("mil") ? trimmed.Substring (0' trimmed.Length - 3) : trimmed;  
Magic Number,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,ParseRep,The following statement contains a magic number: if (trimmed.ToLowerInvariant ().Contains ("k")) {  	if (trimmed.Contains (".")) {  		var charsAfterPeriod = trimmed.Substring (0' trimmed.IndexOf ("."' StringComparison.Ordinal) + 1).Length;  		var e = float.Parse (trimmed.Replace ("k"' ""));  		var p = Math.Pow (10' charsAfterPeriod);  		return (int)Math.Round (e * p);  	}  	return (int)float.Parse (trimmed.ToLowerInvariant ().Replace ("k"' "000"));  }  
Magic Number,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,ParseRep,The following statement contains a magic number: if (trimmed.Contains (".")) {  	var charsAfterPeriod = trimmed.Substring (0' trimmed.IndexOf ("."' StringComparison.Ordinal) + 1).Length;  	var e = float.Parse (trimmed.Replace ("k"' ""));  	var p = Math.Pow (10' charsAfterPeriod);  	return (int)Math.Round (e * p);  }  
Magic Number,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,GetUserNetworkID,The following statement contains a magic number: try {  	var req = (HttpWebRequest)WebRequest.Create (authorProfileLink);  	req.AddRange (0' 4096);  	var res = (HttpWebResponse)req.GetResponse ();  	using (var strm = res.GetResponseStream ()) {  		var bytes = new byte[4096];  		strm.Read (bytes' 0' 4096);  		var html = Encoding.UTF8.GetString (bytes);  		var id = new string (userNetworkID.Match (html).Value.Where (char.IsDigit).ToArray ());  		return int.Parse (id);  	}  } catch (Exception) {  	return -2;  }  
Magic Number,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,GetUserNetworkID,The following statement contains a magic number: try {  	var req = (HttpWebRequest)WebRequest.Create (authorProfileLink);  	req.AddRange (0' 4096);  	var res = (HttpWebResponse)req.GetResponse ();  	using (var strm = res.GetResponseStream ()) {  		var bytes = new byte[4096];  		strm.Read (bytes' 0' 4096);  		var html = Encoding.UTF8.GetString (bytes);  		var id = new string (userNetworkID.Match (html).Value.Where (char.IsDigit).ToArray ());  		return int.Parse (id);  	}  } catch (Exception) {  	return -2;  }  
Magic Number,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,GetUserNetworkID,The following statement contains a magic number: try {  	var req = (HttpWebRequest)WebRequest.Create (authorProfileLink);  	req.AddRange (0' 4096);  	var res = (HttpWebResponse)req.GetResponse ();  	using (var strm = res.GetResponseStream ()) {  		var bytes = new byte[4096];  		strm.Read (bytes' 0' 4096);  		var html = Encoding.UTF8.GetString (bytes);  		var id = new string (userNetworkID.Match (html).Value.Where (char.IsDigit).ToArray ());  		return int.Parse (id);  	}  } catch (Exception) {  	return -2;  }  
Magic Number,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,GetUserNetworkID,The following statement contains a magic number: try {  	var req = (HttpWebRequest)WebRequest.Create (authorProfileLink);  	req.AddRange (0' 4096);  	var res = (HttpWebResponse)req.GetResponse ();  	using (var strm = res.GetResponseStream ()) {  		var bytes = new byte[4096];  		strm.Read (bytes' 0' 4096);  		var html = Encoding.UTF8.GetString (bytes);  		var id = new string (userNetworkID.Match (html).Value.Where (char.IsDigit).ToArray ());  		return int.Parse (id);  	}  } catch (Exception) {  	return -2;  }  
Magic Number,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,GetUserNetworkID,The following statement contains a magic number: req.AddRange (0' 4096);  
Magic Number,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,GetUserNetworkID,The following statement contains a magic number: using (var strm = res.GetResponseStream ()) {  	var bytes = new byte[4096];  	strm.Read (bytes' 0' 4096);  	var html = Encoding.UTF8.GetString (bytes);  	var id = new string (userNetworkID.Match (html).Value.Where (char.IsDigit).ToArray ());  	return int.Parse (id);  }  
Magic Number,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,GetUserNetworkID,The following statement contains a magic number: using (var strm = res.GetResponseStream ()) {  	var bytes = new byte[4096];  	strm.Read (bytes' 0' 4096);  	var html = Encoding.UTF8.GetString (bytes);  	var id = new string (userNetworkID.Match (html).Value.Where (char.IsDigit).ToArray ());  	return int.Parse (id);  }  
Magic Number,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,GetUserNetworkID,The following statement contains a magic number: strm.Read (bytes' 0' 4096);  
Magic Number,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,GetUserNetworkID,The following statement contains a magic number: return -2;  
Magic Number,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,GetAnswer,The following statement contains a magic number: if (excerpt.Length > 80) {  	var lstWrdI = excerpt.IndexOf (' '' 75);  	excerpt = excerpt.Remove (lstWrdI) + "...";  }  
Magic Number,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,GetAnswer,The following statement contains a magic number: if (excerpt.Length > 80) {  	var lstWrdI = excerpt.IndexOf (' '' 75);  	excerpt = excerpt.Remove (lstWrdI) + "...";  }  
Magic Number,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,TrimUrl,The following statement contains a magic number: for (var i = 0; i < url.Length; i++) {  	if (url [i] == '/') {  		fsCount++;  	}  	if (fsCount == 5) {  		break;  	}  	trimmed += url [i];  }  
Magic Number,Phamhilator.Yam.Core,PostFetcher,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\PostFetcher.cs,TrimUrl,The following statement contains a magic number: if (fsCount == 5) {  	break;  }  
Magic Number,Phamhilator.Yam.Core,StringDownloader,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\StringDownloader.cs,DownloadString,The following statement contains a magic number: for (var i = 0; i < 3; i++) {  	try {  		var req = (HttpWebRequest)WebRequest.Create (url);  		req.Timeout = timeout;  		req.Proxy = null;  		using (var res = req.GetResponse ())  			using (var stream = res.GetResponseStream ())  				using (var sr = new StreamReader (stream' Encoding.UTF8)) {  					return sr.ReadToEnd ();  				}  	} catch (Exception e) {  		ex = e;  		Thread.Sleep (5000);  	}  }  
Magic Number,Phamhilator.Yam.Core,StringDownloader,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\StringDownloader.cs,DownloadString,The following statement contains a magic number: for (var i = 0; i < 3; i++) {  	try {  		var req = (HttpWebRequest)WebRequest.Create (url);  		req.Timeout = timeout;  		req.Proxy = null;  		using (var res = req.GetResponse ())  			using (var stream = res.GetResponseStream ())  				using (var sr = new StreamReader (stream' Encoding.UTF8)) {  					return sr.ReadToEnd ();  				}  	} catch (Exception e) {  		ex = e;  		Thread.Sleep (5000);  	}  }  
Magic Number,Phamhilator.Yam.Core,StringDownloader,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\StringDownloader.cs,DownloadString,The following statement contains a magic number: try {  	var req = (HttpWebRequest)WebRequest.Create (url);  	req.Timeout = timeout;  	req.Proxy = null;  	using (var res = req.GetResponse ())  		using (var stream = res.GetResponseStream ())  			using (var sr = new StreamReader (stream' Encoding.UTF8)) {  				return sr.ReadToEnd ();  			}  } catch (Exception e) {  	ex = e;  	Thread.Sleep (5000);  }  
Magic Number,Phamhilator.Yam.Core,StringDownloader,F:\newReposMay17\ArcticEcho_Phamhilator\Yam.Core\StringDownloader.cs,DownloadString,The following statement contains a magic number: Thread.Sleep (5000);  
