Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,FSWatcher,Watcher,C:\repos\acken_FSWatcher\FSWatcher\Watcher.cs,Watcher,The method has 6 parameters. Parameters: dir' directoryCreated' directoryDeleted' fileCreated' fileChanged' fileDeleted
Long Parameter List,FSWatcher.Caching,Cache,C:\repos\acken_FSWatcher\FSWatcher\Caching\Cache.cs,RefreshFromDisk,The method has 5 parameters. Parameters: directoryCreated' directoryDeleted' fileCreated' fileChanged' fileDeleted
Long Parameter List,FSWatcher.EventedWatchers,FSW,C:\repos\acken_FSWatcher\FSWatcher\EventedWatchers\FSW.cs,FSW,The method has 8 parameters. Parameters: watchPath' directoryCreated' directoryDeleted' fileCreated' fileChanged' fileDeleted' onError' cache
Long Parameter List,FSWatcher.Initialization,WatcherSettings,C:\repos\acken_FSWatcher\FSWatcher\Initialization\WatcherSettings.cs,WatcherSettings,The method has 7 parameters. Parameters: canDetectDirectoryCreate' canDetectDirectoryDelete' canDetectDirectoryRename' canDetectFileCreate' canDetectFileChange' canDetectFileDelete' canDetectFileRename
Empty Catch Block,FSWatcher.EventedWatchers,FSW,C:\repos\acken_FSWatcher\FSWatcher\EventedWatchers\FSW.cs,Stop,The method has an empty catch block.
Magic Number,FSWatcher,Watcher,C:\repos\acken_FSWatcher\FSWatcher\Watcher.cs,Watch,The following statement contains a magic number: _watcher = new Thread(() => {  				initialize();  				_fsw = new FSW(  					_dir'  					(dir) => {  						if (_cache.Patch(new Change(ChangeType.DirectoryCreated' dir)))  						    _directoryCreated(dir);                          setNextCatchup();  					}'  					(dir) => {  						if (_cache.Patch(new Change(ChangeType.DirectoryDeleted' dir)))  						    _directoryDeleted(dir);                          setNextCatchup();  					}'  					(file) => {  						if (_cache.Patch(new Change(ChangeType.FileCreated' file)))  						    _fileCreated(file);                          setNextCatchup();  					}'  					(file) => {  						if (_cache.Patch(new Change(ChangeType.FileChanged' file)))  						    _fileChanged(file);                          setNextCatchup();  					}'  					(file) => {  						if (_cache.Patch(new Change(ChangeType.FileDeleted' file)))  						    _fileDeleted(file);                          setNextCatchup();  					}'  					(item) => {                          setNextCatchup();  					}'  					_cache);  				_fsw.Start();    				while (!_exit) {  					if (_fsw.NeedsRestart) {  						_fsw.Start();  						setNextCatchup();  					}  						                      if (weNeedToCatchUp())  					    poll();                      if (_settings.ContinuousPolling && !waitingToCatchUp())                          setNextCatchup();  					Thread.Sleep(_settings.PollFrequency + 10);  				}  				_fsw.Stop();  			});
Magic Number,FSWatcher,Watcher,C:\repos\acken_FSWatcher\FSWatcher\Watcher.cs,StopWatching,The following statement contains a magic number: while (_watcher.IsAlive)  				Thread.Sleep(10);
Magic Number,FSWatcher,Watcher,C:\repos\acken_FSWatcher\FSWatcher\Watcher.cs,initialize,The following statement contains a magic number: _settings.SetPollFrequencyTo(timeSince(startTime) * 4);
Magic Number,FSWatcher.FS,File,C:\repos\acken_FSWatcher\FSWatcher\FS\File.cs,getContentHash,The following statement contains a magic number: try {  				if (!System.IO.File.Exists(Path))  					return 0;  				var info = new System.IO.FileInfo(Path);  				// Overflow is fine' just wrap  				unchecked  				{  					long hash = 17;  					hash = hash * 23 + info.Length;  					hash = hash * 23 + info.LastWriteTimeUtc.Ticks;  					return hash;  				}  			} catch {  				return 0;  			}
Magic Number,FSWatcher.FS,File,C:\repos\acken_FSWatcher\FSWatcher\FS\File.cs,getContentHash,The following statement contains a magic number: try {  				if (!System.IO.File.Exists(Path))  					return 0;  				var info = new System.IO.FileInfo(Path);  				// Overflow is fine' just wrap  				unchecked  				{  					long hash = 17;  					hash = hash * 23 + info.Length;  					hash = hash * 23 + info.LastWriteTimeUtc.Ticks;  					return hash;  				}  			} catch {  				return 0;  			}
Magic Number,FSWatcher.FS,File,C:\repos\acken_FSWatcher\FSWatcher\FS\File.cs,getContentHash,The following statement contains a magic number: try {  				if (!System.IO.File.Exists(Path))  					return 0;  				var info = new System.IO.FileInfo(Path);  				// Overflow is fine' just wrap  				unchecked  				{  					long hash = 17;  					hash = hash * 23 + info.Length;  					hash = hash * 23 + info.LastWriteTimeUtc.Ticks;  					return hash;  				}  			} catch {  				return 0;  			}
Magic Number,FSWatcher.Caching,Cache,C:\repos\acken_FSWatcher\FSWatcher\Caching\Cache.cs,RefreshFromDisk,The following statement contains a magic number: while (true)  			{  				try {  					var dirs = new Dictionary<string' string>();  					var files = new Dictionary<string' File>();  					getSnapshot(_dir' ref dirs' ref files);  					  					var hasChanges = false;  					if (handleDeleted(_directories' dirs' directoryDeleted))  						hasChanges = true;  					if (handleCreated(_directories' dirs' directoryCreated))  						hasChanges = true;  					if (handleDeleted(_files' files' fileDeleted))  						hasChanges = true;  					if (handleCreated(_files' files' fileCreated))  						hasChanges = true;  					if (handleChanged(_files' files' fileChanged))  						hasChanges = true;  					return hasChanges;  				} catch (Exception ex) {  					if (_onError != null)  						_onError(_dir' ex);  					System.Threading.Thread.Sleep(100);  				}  			}
Magic Number,FSWatcher.EventedWatchers,FSW,C:\repos\acken_FSWatcher\FSWatcher\EventedWatchers\FSW.cs,startListener,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,FSWatcher.Initialization,SettingsReader,C:\repos\acken_FSWatcher\FSWatcher\Initialization\WatcherSettings.cs,GetSettings,The following statement contains a magic number: var maxWaitTime = 3000;
Magic Number,FSWatcher.Initialization,SettingsReader,C:\repos\acken_FSWatcher\FSWatcher\Initialization\WatcherSettings.cs,GetSettings,The following statement contains a magic number: var fileChanges = new Thread(() => {                  var startTime = DateTime.Now;  				Directory.CreateDirectory(subdir);  				File.WriteAllText(file' "hey");  				using (var writer = File.AppendText(fileContentChange)) {  					writer.Write("moar content");  				}  				File.Move(file2' file3);  				File.Delete(file);  				Directory.Move(dir2' dir3);  				Directory.Delete(subdirDelete);                  while (!fullSupport() && timeSince(startTime) < maxWaitTime)  				    Thread.Sleep(10);  			});
Magic Number,FSWatcher.Initialization,WatcherSettings,C:\repos\acken_FSWatcher\FSWatcher\Initialization\WatcherSettings.cs,WatcherSettings,The following statement contains a magic number: PollFrequency = 100;
Magic Number,FSWatcher.Initialization,WatcherSettings,C:\repos\acken_FSWatcher\FSWatcher\Initialization\WatcherSettings.cs,SetPollFrequencyTo,The following statement contains a magic number: if (milliseconds > 100)                  PollFrequency = milliseconds;
