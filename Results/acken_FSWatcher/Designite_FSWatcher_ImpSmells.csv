Implementation smell,Namespace,Class,File,Method,Description
Complex Method,FSWatcher.Caching,Cache,F:\newReposMay17\acken_FSWatcher\FSWatcher\Caching\Cache.cs,RefreshFromDisk,Cyclomatic complexity of the method is 8
Complex Method,FSWatcher.EventedWatchers,FSW,F:\newReposMay17\acken_FSWatcher\FSWatcher\EventedWatchers\FSW.cs,WatcherChangeHandler,Cyclomatic complexity of the method is 8
Long Parameter List,FSWatcher,Watcher,F:\newReposMay17\acken_FSWatcher\FSWatcher\Watcher.cs,Watcher,The method has 6 parameters.
Long Parameter List,FSWatcher.Caching,Cache,F:\newReposMay17\acken_FSWatcher\FSWatcher\Caching\Cache.cs,RefreshFromDisk,The method has 5 parameters.
Long Parameter List,FSWatcher.EventedWatchers,FSW,F:\newReposMay17\acken_FSWatcher\FSWatcher\EventedWatchers\FSW.cs,FSW,The method has 8 parameters.
Long Parameter List,FSWatcher.Initialization,WatcherSettings,F:\newReposMay17\acken_FSWatcher\FSWatcher\Initialization\WatcherSettings.cs,WatcherSettings,The method has 7 parameters.
Long Statement,FSWatcher,Watcher,F:\newReposMay17\acken_FSWatcher\FSWatcher\Watcher.cs,poll,The length of the statement  "	var hasChanges = _cache.RefreshFromDisk (_directoryCreated' _directoryDeleted' _fileCreated' _fileChanged' _fileDeleted); " is 121.
Long Statement,FSWatcher.EventedWatchers,FSW,F:\newReposMay17\acken_FSWatcher\FSWatcher\EventedWatchers\FSW.cs,startListener,The length of the statement  "		NotifyFilter = NotifyFilters.CreationTime | NotifyFilters.LastWrite | NotifyFilters.DirectoryName | NotifyFilters.FileName | NotifyFilters.Size | NotifyFilters.Attributes' " is 171.
Long Statement,FSWatcher.Initialization,SettingsReader,F:\newReposMay17\acken_FSWatcher\FSWatcher\Initialization\WatcherSettings.cs,GetSettings,The length of the statement  "	changeDir = Path.Combine (Path.GetDirectoryName (changeDir)' "changedir_" + Path.GetFileNameWithoutExtension (changeDir)); " is 122.
Long Statement,FSWatcher.Initialization,SettingsReader,F:\newReposMay17\acken_FSWatcher\FSWatcher\Initialization\WatcherSettings.cs,GetSettings,The length of the statement  "		return _canDetectDirectoryCreate && _canDetectDirectoryDelete && dir2Deleted && dir3Created && _canDetectFileCreate && _canDetectFileChange && _canDetectFileDelete && file2Deleted && file3Created; " is 196.
Long Statement,FSWatcher.Initialization,SettingsReader,F:\newReposMay17\acken_FSWatcher\FSWatcher\Initialization\WatcherSettings.cs,GetSettings,The length of the statement  "	return new WatcherSettings (_canDetectDirectoryCreate' _canDetectDirectoryDelete' dir2Deleted && dir3Created' _canDetectFileCreate' _canDetectFileChange' _canDetectFileDelete' file2Deleted && file3Created); " is 206.
Empty Catch Block,FSWatcher.EventedWatchers,FSW,F:\newReposMay17\acken_FSWatcher\FSWatcher\EventedWatchers\FSW.cs,Stop,The method has an empty catch block.
Magic Number,FSWatcher,Watcher,F:\newReposMay17\acken_FSWatcher\FSWatcher\Watcher.cs,Watch,The following statement contains a magic number: _watcher = new Thread (() => {  	initialize ();  	_fsw = new FSW (_dir' dir => {  		if (_cache.Patch (new Change (ChangeType.DirectoryCreated' dir)))  			_directoryCreated (dir);  		setNextCatchup ();  	}' dir => {  		if (_cache.Patch (new Change (ChangeType.DirectoryDeleted' dir)))  			_directoryDeleted (dir);  		setNextCatchup ();  	}' file => {  		if (_cache.Patch (new Change (ChangeType.FileCreated' file)))  			_fileCreated (file);  		setNextCatchup ();  	}' file => {  		if (_cache.Patch (new Change (ChangeType.FileChanged' file)))  			_fileChanged (file);  		setNextCatchup ();  	}' file => {  		if (_cache.Patch (new Change (ChangeType.FileDeleted' file)))  			_fileDeleted (file);  		setNextCatchup ();  	}' item => {  		setNextCatchup ();  	}' _cache);  	_fsw.Start ();  	while (!_exit) {  		if (_fsw.NeedsRestart) {  			_fsw.Start ();  			setNextCatchup ();  		}  		if (weNeedToCatchUp ())  			poll ();  		if (_settings.ContinuousPolling && !waitingToCatchUp ())  			setNextCatchup ();  		Thread.Sleep (_settings.PollFrequency + 10);  	}  	_fsw.Stop ();  });  
Magic Number,FSWatcher,Watcher,F:\newReposMay17\acken_FSWatcher\FSWatcher\Watcher.cs,Watch,The following statement contains a magic number: while (!_exit) {  	if (_fsw.NeedsRestart) {  		_fsw.Start ();  		setNextCatchup ();  	}  	if (weNeedToCatchUp ())  		poll ();  	if (_settings.ContinuousPolling && !waitingToCatchUp ())  		setNextCatchup ();  	Thread.Sleep (_settings.PollFrequency + 10);  }  
Magic Number,FSWatcher,Watcher,F:\newReposMay17\acken_FSWatcher\FSWatcher\Watcher.cs,Watch,The following statement contains a magic number: Thread.Sleep (_settings.PollFrequency + 10);  
Magic Number,FSWatcher,Watcher,F:\newReposMay17\acken_FSWatcher\FSWatcher\Watcher.cs,StopWatching,The following statement contains a magic number: while (_watcher.IsAlive)  	Thread.Sleep (10);  
Magic Number,FSWatcher,Watcher,F:\newReposMay17\acken_FSWatcher\FSWatcher\Watcher.cs,StopWatching,The following statement contains a magic number: Thread.Sleep (10);  
Magic Number,FSWatcher,Watcher,F:\newReposMay17\acken_FSWatcher\FSWatcher\Watcher.cs,initialize,The following statement contains a magic number: _settings.SetPollFrequencyTo (timeSince (startTime) * 4);  
Magic Number,FSWatcher.FS,File,F:\newReposMay17\acken_FSWatcher\FSWatcher\FS\File.cs,getContentHash,The following statement contains a magic number: try {  	if (!System.IO.File.Exists (Path))  		return 0;  	var info = new System.IO.FileInfo (Path);  	// Overflow is fine' just wrap  	unchecked {  		long hash = 17;  		hash = hash * 23 + info.Length;  		hash = hash * 23 + info.LastWriteTimeUtc.Ticks;  		return hash;  	}  } catch {  	return 0;  }  
Magic Number,FSWatcher.FS,File,F:\newReposMay17\acken_FSWatcher\FSWatcher\FS\File.cs,getContentHash,The following statement contains a magic number: try {  	if (!System.IO.File.Exists (Path))  		return 0;  	var info = new System.IO.FileInfo (Path);  	// Overflow is fine' just wrap  	unchecked {  		long hash = 17;  		hash = hash * 23 + info.Length;  		hash = hash * 23 + info.LastWriteTimeUtc.Ticks;  		return hash;  	}  } catch {  	return 0;  }  
Magic Number,FSWatcher.FS,File,F:\newReposMay17\acken_FSWatcher\FSWatcher\FS\File.cs,getContentHash,The following statement contains a magic number: try {  	if (!System.IO.File.Exists (Path))  		return 0;  	var info = new System.IO.FileInfo (Path);  	// Overflow is fine' just wrap  	unchecked {  		long hash = 17;  		hash = hash * 23 + info.Length;  		hash = hash * 23 + info.LastWriteTimeUtc.Ticks;  		return hash;  	}  } catch {  	return 0;  }  
Magic Number,FSWatcher.FS,File,F:\newReposMay17\acken_FSWatcher\FSWatcher\FS\File.cs,getContentHash,The following statement contains a magic number: unchecked {  	long hash = 17;  	hash = hash * 23 + info.Length;  	hash = hash * 23 + info.LastWriteTimeUtc.Ticks;  	return hash;  }  
Magic Number,FSWatcher.FS,File,F:\newReposMay17\acken_FSWatcher\FSWatcher\FS\File.cs,getContentHash,The following statement contains a magic number: unchecked {  	long hash = 17;  	hash = hash * 23 + info.Length;  	hash = hash * 23 + info.LastWriteTimeUtc.Ticks;  	return hash;  }  
Magic Number,FSWatcher.FS,File,F:\newReposMay17\acken_FSWatcher\FSWatcher\FS\File.cs,getContentHash,The following statement contains a magic number: unchecked {  	long hash = 17;  	hash = hash * 23 + info.Length;  	hash = hash * 23 + info.LastWriteTimeUtc.Ticks;  	return hash;  }  
Magic Number,FSWatcher.FS,File,F:\newReposMay17\acken_FSWatcher\FSWatcher\FS\File.cs,getContentHash,The following statement contains a magic number: hash = hash * 23 + info.Length;  
Magic Number,FSWatcher.FS,File,F:\newReposMay17\acken_FSWatcher\FSWatcher\FS\File.cs,getContentHash,The following statement contains a magic number: hash = hash * 23 + info.LastWriteTimeUtc.Ticks;  
Magic Number,FSWatcher.Caching,Cache,F:\newReposMay17\acken_FSWatcher\FSWatcher\Caching\Cache.cs,RefreshFromDisk,The following statement contains a magic number: while (true) {  	try {  		var dirs = new Dictionary<string' string> ();  		var files = new Dictionary<string' File> ();  		getSnapshot (_dir' ref dirs' ref files);  		var hasChanges = false;  		if (handleDeleted (_directories' dirs' directoryDeleted))  			hasChanges = true;  		if (handleCreated (_directories' dirs' directoryCreated))  			hasChanges = true;  		if (handleDeleted (_files' files' fileDeleted))  			hasChanges = true;  		if (handleCreated (_files' files' fileCreated))  			hasChanges = true;  		if (handleChanged (_files' files' fileChanged))  			hasChanges = true;  		return hasChanges;  	} catch (Exception ex) {  		if (_onError != null)  			_onError (_dir' ex);  		System.Threading.Thread.Sleep (100);  	}  }  
Magic Number,FSWatcher.Caching,Cache,F:\newReposMay17\acken_FSWatcher\FSWatcher\Caching\Cache.cs,RefreshFromDisk,The following statement contains a magic number: try {  	var dirs = new Dictionary<string' string> ();  	var files = new Dictionary<string' File> ();  	getSnapshot (_dir' ref dirs' ref files);  	var hasChanges = false;  	if (handleDeleted (_directories' dirs' directoryDeleted))  		hasChanges = true;  	if (handleCreated (_directories' dirs' directoryCreated))  		hasChanges = true;  	if (handleDeleted (_files' files' fileDeleted))  		hasChanges = true;  	if (handleCreated (_files' files' fileCreated))  		hasChanges = true;  	if (handleChanged (_files' files' fileChanged))  		hasChanges = true;  	return hasChanges;  } catch (Exception ex) {  	if (_onError != null)  		_onError (_dir' ex);  	System.Threading.Thread.Sleep (100);  }  
Magic Number,FSWatcher.Caching,Cache,F:\newReposMay17\acken_FSWatcher\FSWatcher\Caching\Cache.cs,RefreshFromDisk,The following statement contains a magic number: System.Threading.Thread.Sleep (100);  
Magic Number,FSWatcher.EventedWatchers,FSW,F:\newReposMay17\acken_FSWatcher\FSWatcher\EventedWatchers\FSW.cs,startListener,The following statement contains a magic number: Thread.Sleep (500);  
Magic Number,FSWatcher.Initialization,SettingsReader,F:\newReposMay17\acken_FSWatcher\FSWatcher\Initialization\WatcherSettings.cs,GetSettings,The following statement contains a magic number: while (!fullSupport () && timeSince (startTime) < maxWaitTime)  	Thread.Sleep (10);  
Magic Number,FSWatcher.Initialization,SettingsReader,F:\newReposMay17\acken_FSWatcher\FSWatcher\Initialization\WatcherSettings.cs,GetSettings,The following statement contains a magic number: Thread.Sleep (10);  
Magic Number,FSWatcher.Initialization,WatcherSettings,F:\newReposMay17\acken_FSWatcher\FSWatcher\Initialization\WatcherSettings.cs,WatcherSettings,The following statement contains a magic number: PollFrequency = 100;  
Magic Number,FSWatcher.Initialization,WatcherSettings,F:\newReposMay17\acken_FSWatcher\FSWatcher\Initialization\WatcherSettings.cs,SetPollFrequencyTo,The following statement contains a magic number: if (milliseconds > 100)  	PollFrequency = milliseconds;  
