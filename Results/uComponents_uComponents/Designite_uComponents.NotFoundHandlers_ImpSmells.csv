Implementation smell,Namespace,Class,File,Method,Description
Complex Method,uComponents.NotFoundHandlers,SearchFor301MovedPermanently,C:\repos\uComponents_uComponents\src\uComponents.NotFoundHandlers\SearchFor301MovedPermanently.cs,Execute,Cyclomatic complexity of the method is 9
Long Statement,uComponents.NotFoundHandlers,SearchFor301MovedPermanently,C:\repos\uComponents_uComponents\src\uComponents.NotFoundHandlers\SearchFor301MovedPermanently.cs,Execute,The length of the statement  "					xpath = string.Concat(tmp' "//node[contains(concat(\"'\"' translate(data[@alias=\"umbraco301MovedPermanently\"]' \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"' \"abcdefghijklmnopqrstuvwxyz\")' \"'\")' \"'"' str.Replace(".aspx"' string.Empty).ToLower()' "'\")]"); " is 247.
Long Statement,uComponents.NotFoundHandlers,SearchFor301MovedPermanently,C:\repos\uComponents_uComponents\src\uComponents.NotFoundHandlers\SearchFor301MovedPermanently.cs,Execute,The length of the statement  "					xpath = string.Concat(tmp' "//*[@isDoc and contains(concat(\"'\"' translate(umbraco301MovedPermanently' \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"' \"abcdefghijklmnopqrstuvwxyz\")' \"'\")' \"'"' str.Replace(".aspx"' string.Empty).ToLower()' "'\")]"); " is 238.
Magic Number,uComponents.NotFoundHandlers,SearchFor301MovedPermanently,C:\repos\uComponents_uComponents\src\uComponents.NotFoundHandlers\SearchFor301MovedPermanently.cs,Execute,The following statement contains a magic number: if (str.Length > 0)  			{  				if (str.Substring(0' 1) == "/")  				{  					str = str.Substring(1' str.Length - 1);  				}    				HttpContext.Current.Trace.Write("umbraco301MovedPermanently"' string.Concat("'"' str' "'"));    				var tmp = string.Empty;  				var xpath = string.Empty;  				var domainName = HttpContext.Current.Request.ServerVariables["SERVER_NAME"];  				var port = HttpContext.Current.Request.ServerVariables["SERVER_PORT"];    				// if there is a port number' append it  				if (!string.IsNullOrEmpty(port) && port != "80" && port != "443" ) {  					domainName = string.Concat(domainName' ":"' port);  				}    				if (Domain.Exists(domainName))  				{  					if (uQuery.IsLegacyXmlSchema())  					{  						tmp = string.Concat("//node[@id=\""' Domain.GetRootFromDomain(domainName)' "\"]");  					}  					else  					{  						tmp = string.Concat("//*[@isDoc and @id=\""' Domain.GetRootFromDomain(domainName)' "\"]");  					}    					this.cacheUrl = false;  				}    				if (uQuery.IsLegacyXmlSchema())  				{  					xpath = string.Concat(tmp' "//node[contains(concat(\"'\"' translate(data[@alias=\"umbraco301MovedPermanently\"]' \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"' \"abcdefghijklmnopqrstuvwxyz\")' \"'\")' \"'"' str.Replace(".aspx"' string.Empty).ToLower()' "'\")]");  				}  				else  				{  					xpath = string.Concat(tmp' "//*[@isDoc and contains(concat(\"'\"' translate(umbraco301MovedPermanently' \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"' \"abcdefghijklmnopqrstuvwxyz\")' \"'\")' \"'"' str.Replace(".aspx"' string.Empty).ToLower()' "'\")]");  				}    				var node = content.Instance.XmlContent.DocumentElement.SelectSingleNode(xpath);    				if (node != null)  				{  					if (int.TryParse(node.Attributes.GetNamedItem("id").Value' out this.redirectId))  					{  						var niceUrl = library.NiceUrl(this.redirectId);    						this.cacheUrl = true;    						HttpContext.Current.Response.Clear();  						HttpContext.Current.Response.StatusCode = 301;  						HttpContext.Current.Response.Status = "301 Moved Permanently";  						HttpContext.Current.Response.AddHeader("Location"' niceUrl);  						HttpContext.Current.Response.End();    						return true;  					}  				}  			}
