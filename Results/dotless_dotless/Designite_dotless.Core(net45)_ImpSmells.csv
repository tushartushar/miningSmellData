Implementation smell,Namespace,Class,File,Method,Description
Long Method,dotless.Core.Parser.Infrastructure,Context,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Infrastructure\Context.cs,AppendSelector,The method has 130 lines of code.
Long Method,dotless.Core.Parser,Tokenizer,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tokenizer.cs,SetupInput,The method has 102 lines of code.
Complex Method,dotless.Core.Extensions,MissingTypeRegistrationException,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Extensions\MissingTypeRegistrationException.cs,GetFriendlyName,Cyclomatic complexity of the method is 13
Complex Method,dotless.Core.Importers,Importer,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Importers\Importer.cs,Import,Cyclomatic complexity of the method is 15
Complex Method,dotless.Core.Importers,Importer,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Importers\Importer.cs,ImportLessFile,Cyclomatic complexity of the method is 8
Complex Method,dotless.Core.Parser.Infrastructure,Context,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Infrastructure\Context.cs,AppendSelector,Cyclomatic complexity of the method is 16
Complex Method,dotless.Core.Parser,Parsers,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Parsers.cs,ExtendRule,Cyclomatic complexity of the method is 9
Complex Method,dotless.Core.Parser,Parsers,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Parsers.cs,MixinCall,Cyclomatic complexity of the method is 10
Complex Method,dotless.Core.Parser,Parsers,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Parsers.cs,MixinDefinition,Cyclomatic complexity of the method is 13
Complex Method,dotless.Core.Parser,Parsers,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Parsers.cs,Rule,Cyclomatic complexity of the method is 11
Complex Method,dotless.Core.Parser,Parsers,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Parsers.cs,Directive,Cyclomatic complexity of the method is 15
Complex Method,dotless.Core.Parser,Parsers,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Parsers.cs,MediaFeature,Cyclomatic complexity of the method is 10
Complex Method,dotless.Core.Parser,Parsers,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Parsers.cs,KeyFrameBlock,Cyclomatic complexity of the method is 8
Complex Method,dotless.Core.Parser,Parsers,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Parsers.cs,Operation,Cyclomatic complexity of the method is 8
Complex Method,dotless.Core.Parser,Tokenizer,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tokenizer.cs,SetupInput,Cyclomatic complexity of the method is 15
Complex Method,dotless.Core.Parser.Tree,Condition,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Condition.cs,Evaluate,Cyclomatic complexity of the method is 10
Complex Method,dotless.Core.Parser.Tree,Import,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Import.cs,Evaluate,Cyclomatic complexity of the method is 9
Complex Method,dotless.Core.Parser.Tree,Media,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Media.cs,AppendCSS,Cyclomatic complexity of the method is 8
Complex Method,dotless.Core.Parser.Tree,MixinCall,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\MixinCall.cs,Evaluate,Cyclomatic complexity of the method is 15
Complex Method,dotless.Core.Parser.Tree,MixinDefinition,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\MixinDefinition.cs,EvaluateParams,Cyclomatic complexity of the method is 13
Complex Method,dotless.Core.Parser.Tree,MixinDefinition,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\MixinDefinition.cs,MatchArguments,Cyclomatic complexity of the method is 10
Complex Method,dotless.Core.Parser.Tree,Ruleset,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Ruleset.cs,EvaluateRules,Cyclomatic complexity of the method is 8
Complex Method,dotless.Core.Parser.Tree,Ruleset,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Ruleset.cs,EvaluateRulesForFrame,Cyclomatic complexity of the method is 8
Complex Method,dotless.Core.Parser.Tree,Ruleset,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Ruleset.cs,AppendCSS,Cyclomatic complexity of the method is 18
Complex Method,dotless.Core.Plugins,RtlPlugin,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Plugins\RtlPlugin.cs,Execute,Cyclomatic complexity of the method is 10
Complex Method,dotless.Core.Plugins,ValuesReverserVisitor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Plugins\RtlPlugin.cs,ReverseRule,Cyclomatic complexity of the method is 8
Complex Method,dotless.Core.Utils,EnumerableExtensions,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\EnumerableExtensions.cs,IsSubsequenceOf,Cyclomatic complexity of the method is 9
Complex Method,dotless.Core.Utils,HslColor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\HslColor.cs,FromRgbColor,Cyclomatic complexity of the method is 8
Long Parameter List,dotless.Core,LessEngine,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Engine\LessEngine.cs,LessEngine,The method has 9 parameters. Parameters: parser' logger' compress' debug' disableVariableRedefines' disableColorCompression' keepFirstSpecialComment' strictMath' plugins
Long Parameter List,dotless.Core,LessEngine,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Engine\LessEngine.cs,LessEngine,The method has 8 parameters. Parameters: parser' logger' compress' debug' disableVariableRedefines' disableColorCompression' keepFirstSpecialComment' plugins
Long Parameter List,dotless.Core,LessEngine,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Engine\LessEngine.cs,LessEngine,The method has 5 parameters. Parameters: parser' logger' compress' debug' disableVariableRedefines
Long Parameter List,dotless.Core.Importers,Importer,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Importers\Importer.cs,Importer,The method has 5 parameters. Parameters: fileReader' disableUrlReWriting' rootPath' inlineCssFiles' importAllFilesAsLess
Long Parameter List,dotless.Core.Parser.Infrastructure,DefaultNodeProvider,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Infrastructure\DefaultNodeProvider.cs,MixinDefinition,The method has 6 parameters. Parameters: name' parameters' rules' condition' variadic' location
Long Parameter List,dotless.Core.Parser.Infrastructure,DefaultNodeProvider,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Infrastructure\DefaultNodeProvider.cs,Condition,The method has 5 parameters. Parameters: left' operation' right' negate' location
Long Parameter List,dotless.Core.Parser.Infrastructure,INodeProvider,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Infrastructure\INodeProvider.cs,MixinDefinition,The method has 6 parameters. Parameters: name' parameters' rules' condition' variadic' location
Long Parameter List,dotless.Core.Parser.Infrastructure,INodeProvider,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Infrastructure\INodeProvider.cs,Condition,The method has 5 parameters. Parameters: left' operation' right' negate' location
Long Parameter List,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,Color,The method has 5 parameters. Parameters: red' green' blue' alpha' text
Long Parameter List,dotless.Core.Parser.Tree,MixinDefinition,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\MixinDefinition.cs,MixinDefinition,The method has 5 parameters. Parameters: name' parameters' rules' condition' variadic
Long Identifier,dotless.Core.configuration,DotlessConfiguration,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\configuration\DotlessConfiguration.cs,,The length of the parameter DEFAULT_SESSION_QUERY_PARAM_NAME is 32.
Long Identifier,dotless.Core.Parser,Parsers,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Parsers.cs,MixinCall,The length of the parameter argumentListIsSemicolonSeparated is 32.
Long Statement,dotless.Core,Less,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Less.cs,Parse,The length of the statement  "                throw new Exception("Please use dotless.Core.LessWeb.Parse for web applications. This makes sure all web features are available."); " is 131.
Long Statement,dotless.Core.Importers,Importer,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Importers\Importer.cs,Import,The length of the statement  "                    throw new FileNotFoundException(string.Format(".less cannot import non local less files [{0}]."' import.Path)' import.Path); " is 124.
Long Statement,dotless.Core.Importers,Importer,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Importers\Importer.cs,Import,The length of the statement  "                    throw new FileNotFoundException(string.Format("You are importing a file ending in .less that cannot be found [{0}]."' file)' file); " is 131.
Long Statement,dotless.Core.Importers,ResourceLoader,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Importers\Importer.cs,GetResource,The length of the statement  "                throw new FileNotFoundException("Unable to load resource [" + loader._resourceName + "] in assembly [" + fileDependency + "]"); " is 127.
Long Statement,dotless.Core.Parser.Functions,FormatStringFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\FormatStringFunction.cs,Evaluate,The length of the statement  "            WarnNotSupportedByLessJS("formatstring(string' args...)"' null' @" You may want to consider using string interpolation (""@{variable}"") which does the same thing and is supported."); " is 183.
Long Statement,dotless.Core.Parser.Functions,Function,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\Function.cs,WarnNotSupportedByLessJS,The length of the statement  "                Logger.Info("{0} is not supported by less.js' so this will work but not compile with other less implementations.{1}"' functionPattern' extraInfo); " is 146.
Long Statement,dotless.Core.Parser.Functions,Function,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\Function.cs,WarnNotSupportedByLessJS,The length of the statement  "                    " You may want to consider using {1} which does the same thing and is supported.{2}"' functionPattern' replacementPattern' extraInfo); " is 134.
Long Statement,dotless.Core.Parser.Functions,GradientImageFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\GradientImageFunction.cs,GetColorPoints,The length of the statement  "                                string.Format("Incrementing color point position expected' at least {0}' found {1}"' prevPos + 1' numberArg.Value)' Location); " is 126.
Long Statement,dotless.Core.Parser.Functions,HexFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\HexFunction.cs,Eval,The length of the statement  "                throw new ParsingException(string.Format("Expected unitless number in function 'hex'' found {0}"' number.ToCSS(env))' number.Location); " is 135.
Long Statement,dotless.Core.Parser.Functions,ListFunctionBase,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\ListFunctionBase.cs,Evaluate,The length of the statement  "            throw new ParsingException(string.Format("First argument to the list function was a {0}"' Arguments[0].GetType().Name.ToLowerInvariant())' Location); " is 149.
Long Statement,dotless.Core.Parser.Functions,MixFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\MixFunction.cs,Mix,The length of the statement  "            // Note: this algorithm taken from http://github.com/nex3/haml/blob/0e249c844f66bd0872ed68d99de22b774794e967/lib/sass/script/functions.rb " is 137.
Long Statement,dotless.Core.Parser.Functions,SaturationFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\SaturationFunction.cs,EditHsl,The length of the statement  "            WarnNotSupportedByLessJS("saturation(color' number)"' "saturate(color' number) or its opposite desaturate(color' number)'"); " is 124.
Long Statement,dotless.Core.Parser.Infrastructure,Context,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Infrastructure\Context.cs,ToCss,The length of the statement  "            return string.Join(env.Compress ? "'" : "'\n"'Paths.Select(path => path.Select(p => p.ToCSS(env)).JoinStrings("").Trim()).ToArray()); " is 133.
Long Statement,dotless.Core.Parser.Infrastructure,Env,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Infrastructure\Env.cs,AddExtension,The length of the statement  "                if ((match = _extensions.OfType<ExactExtender>().FirstOrDefault(e => e.BaseSelector.ToString().Trim() == extending.ToString().Trim())) == null) " is 143.
Long Statement,dotless.Core.Parser.Infrastructure,Env,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Infrastructure\Env.cs,AddExtension,The length of the statement  "                if ((match = _extensions.OfType<PartialExtender>().FirstOrDefault(e => e.BaseSelector.ToString().Trim() == extending.ToString().Trim())) == null) " is 145.
Long Statement,dotless.Core.Parser.Infrastructure,Env,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Infrastructure\Env.cs,FindExactExtension,The length of the statement  "                var mediaScopedExtensions = ExtendMediaScope.Select(media => media.FindExactExtension(selection)).FirstOrDefault(result => result != null); " is 139.
Long Statement,dotless.Core.Parser.Infrastructure,Env,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Infrastructure\Env.cs,FindPartialExtensions,The length of the statement  "                var mediaScopedExtensions = ExtendMediaScope.Select(media => media.FindPartialExtensions(selection)).FirstOrDefault(result => result.Any()); " is 140.
Long Statement,dotless.Core.Parser.Infrastructure,Env,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Infrastructure\Env.cs,FindPartialExtensions,The length of the statement  "                var mediaScopedExtensions = ExtendMediaScope.Select(media => media.FindPartialExtensions(selection)).FirstOrDefault(result => result.Any()); " is 140.
Long Statement,dotless.Core.Parser.Infrastructure,Env,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Infrastructure\Env.cs,FindPartialExtensions,The length of the statement  "            return _extensions.OfType<PartialExtender>().Where(e => selection.Contains(e.BaseSelector.ToString().Trim())).ToArray(); " is 120.
Long Statement,dotless.Core.Parser.Infrastructure,PartialExtender,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Infrastructure\Extender.cs,Replacements,The length of the statement  "                yield return new Selector(new []{new Element(null' selection.Replace(BaseSelector.ToString().Trim()' ex.ToString().Trim()))});        " is 126.
Long Statement,dotless.Core.Parser,Parser,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Parser.cs,Parse,The length of the statement  "                throw GenerateParserError(new ParsingException("Content after finishing parsing (missing opening bracket?)"' Tokenizer.GetNodeLocation(Tokenizer.Location.Index))); " is 163.
Long Statement,dotless.Core.Parser,Parsers,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Parsers.cs,Primary,The length of the statement  "            while (node = MixinDefinition(parser) || ExtendRule(parser) || Rule(parser) || PullComments() || GuardedRuleset(parser) || Ruleset(parser) || " is 141.
Long Statement,dotless.Core.Parser,Parsers,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Parsers.cs,Dimension,The length of the statement  "            var value = parser.Tokenizer.Match(@"([+-]?[0-9]*\.?[0-9]+)(px|%|em|pc|ex|in|deg|s|ms|pt|cm|mm|ch|rem|vw|vh|vmin|vm(ax)?|grad|rad|fr|gr|Hz|kHz|dpi|dpcm|dppx)?"' true); " is 167.
Long Statement,dotless.Core.Parser,Parsers,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Parsers.cs,MixinCall,The length of the statement  "            for (var i = parser.Tokenizer.Location.Index; e = parser.Tokenizer.Match(@"[#.][a-zA-Z0-9_-]+"); i = parser.Tokenizer.Location.Index) " is 133.
Long Statement,dotless.Core.Parser,Parsers,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Parsers.cs,MixinDefinition,The length of the statement  "                return NodeProvider.MixinDefinition(name' parameters' rules' condition' variadic' parser.Tokenizer.GetNodeLocation(index)); " is 123.
Long Statement,dotless.Core.Parser,Parsers,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Parsers.cs,Condition,The length of the statement  "                Node right = Expect(Operation(parser) || Keyword(parser) || Quoted(parser)' "unrecognised right hand side condition expression"' parser); " is 137.
Long Statement,dotless.Core.Parser,Parsers,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Parsers.cs,Condition,The length of the statement  "                condition = NodeProvider.Condition(left' "="' NodeProvider.Keyword("true"' parser.Tokenizer.GetNodeLocation(index))' negate' parser.Tokenizer.GetNodeLocation(index)); " is 166.
Long Statement,dotless.Core.Parser,Parsers,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Parsers.cs,Combinator,The length of the statement  "            return NodeProvider.Combinator(char.IsWhiteSpace(parser.Tokenizer.GetPreviousCharIgnoringComments()) ? " " : null' parser.Tokenizer.GetNodeLocation(index)); " is 156.
Long Statement,dotless.Core.Parser,Parsers,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Parsers.cs,Selector,The length of the statement  "                return NodeProvider.Selector(new NodeList<Element>() { NodeProvider.Element(null' sel' parser.Tokenizer.GetNodeLocation(index)) }' parser.Tokenizer.GetNodeLocation(index)); " is 172.
Long Statement,dotless.Core.Parser,Parsers,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Parsers.cs,FilterExpression,The length of the statement  "            var result = NodeProvider.CssFunction(nameToken.Match.Groups[1].Value.Trim()' value' parser.Tokenizer.GetNodeLocation(index)); " is 126.
Long Statement,dotless.Core.Parser,Parsers,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Parsers.cs,ParseOptions,The length of the statement  "                    throw new ParsingException(string.Format("unrecognized @import option '{0}'"' keyword)' parser.Tokenizer.GetNodeLocation(index)); " is 129.
Long Statement,dotless.Core.Parser,Parsers,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Parsers.cs,Expect,The length of the statement  "            throw new ParsingException(string.Format(message' expectedString' parser.Tokenizer.NextChar)' parser.Tokenizer.GetNodeLocation()); " is 130.
Long Statement,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,TransformLinearToSrbg,The length of the statement  "            return (linearChannel <= 0.03928) ? linearChannel / phi : Math.Pow(((linearChannel + alpha) / (1 + alpha))' decodingGamma); " is 123.
Long Statement,dotless.Core.Parser.Tree,Directive,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Directive.cs,Evaluate,The length of the statement  "                evaldDirective = new Directive(Name' Identifier' new NodeList(Rules.Select(r => r.Evaluate(env))).ReducedFrom<NodeList>(Rules)); " is 128.
Long Statement,dotless.Core.Parser.Tree,Extend,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Extend.cs,Evaluate,The length of the statement  "                var selector = new Selector(new[] { new Element(e.Elements.First().Combinator' childContext.Output.ToString().Trim()) }); " is 121.
Long Statement,dotless.Core.Parser.Tree,Media,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Media.cs,AddExtension,The length of the statement  "                if ((match = Extensions.OfType<ExactExtender>().FirstOrDefault(e => e.BaseSelector.ToString().Trim() == extending.ToString().Trim())) == null) " is 142.
Long Statement,dotless.Core.Parser.Tree,Media,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Media.cs,AddExtension,The length of the statement  "                if ((match = Extensions.OfType<PartialExtender>().FirstOrDefault(e => e.BaseSelector.ToString().Trim() == extending.ToString().Trim())) == null) " is 144.
Long Statement,dotless.Core.Parser.Tree,MixinCall,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\MixinCall.cs,Evaluate,The length of the statement  "            // To address bug https://github.com/dotless/dotless/issues/136' where a mixin and ruleset selector may have the same name' we " is 126.
Long Statement,dotless.Core.Parser.Tree,MixinCall,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\MixinCall.cs,Evaluate,The length of the statement  "            // need to favour matching a MixinDefinition with the required Selector and only fall back to considering other Ruleset types " is 125.
Long Statement,dotless.Core.Parser.Tree,MixinCall,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\MixinCall.cs,Evaluate,The length of the statement  "            // mixin (see https://github.com/dotless/dotless/issues/387)' we need to take argument counts into account' so we make the " is 122.
Long Statement,dotless.Core.Parser.Tree,MixinCall,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\MixinCall.cs,MakeRulesImportant,The length of the statement  "                    importantRules.Add(new MixinCall(original.Selector.Elements' new List<NamedArgument>(original.Arguments)' true).ReducedFrom<MixinCall>(node)); " is 142.
Long Statement,dotless.Core.Parser.Tree,Operation,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Operation.cs,Evaluate,The length of the statement  "                throw new ParsingException(string.Format("Cannot apply operator {0} to the left hand side: {1}"' Operator' a.ToCSS(env))' Location); " is 132.
Long Statement,dotless.Core.Parser.Tree,Ruleset,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Ruleset.cs,EvaluateRulesForFrame,The length of the statement  "                    newRules.Add(new MixinDefinition(mixin.Name' new NodeList<Rule>(parameters)' mixin.Rules' mixin.Condition' mixin.Variadic)); " is 124.
Long Statement,dotless.Core.Plugins,GenericPluginConfigurator<T>,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Plugins\GenericPluginConfigurator.cs,SetParameterValues,The length of the statement  "            if (pluginParameters == null || pluginParameters.Count() == 0 || pluginParameters.All(parameter => parameter.Value == null)) " is 124.
Long Statement,dotless.Core.Plugins,GenericPluginConfigurator<T>,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Plugins\GenericPluginConfigurator.cs,GetConstructorInfos,The length of the statement  "                throw new Exception("Generic plugin configurator doesn't support less than 1 or more than 2 constructors. Add your own IPluginConfigurator to the assembly."); " is 158.
Long Statement,dotless.Core.Plugins,GenericPluginConfigurator<T>,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Plugins\GenericPluginConfigurator.cs,GetConstructorInfos,The length of the statement  "                    throw new Exception("Generic plugin configurator only supports 1 parameterless constructor and 1 with parameters. Add your own IPluginConfigurator to the assembly."); " is 166.
Long Statement,dotless.Core.Plugins,PluginFinder,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Plugins\PluginFinder.cs,GetConfigurators,The length of the statement  "            IEnumerable<Type> pluginsConfigurated = pluginConfigurators.Select(pluginConfigurator => pluginConfigurator.Configurates); " is 122.
Long Statement,dotless.Core.Utils,Guard,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\Guard.cs,ExpectNodeToBeOneOf,The length of the statement  "            var message = string.Format("Expected {0} or {1} in {2}' found {3}"' expected1' expected2' @in' actual.ToCSS(new Env(null))); " is 125.
Long Statement,dotless.Core.Utils,StringExtensions,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\StringExtensions.cs,CanonicalizePath,The length of the statement  "                    if (i < pathList.Count() && string.Equals(currentPathSegment' pathList.ElementAt(i++)' StringComparison.InvariantCultureIgnoreCase)) " is 132.
Complex Conditional,dotless.Core.Parser.Infrastructure,Env,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Infrastructure\Env.cs,IsCommentSilent,The conditional expression  "Compress && KeepFirstSpecialComment && !IsFirstSpecialCommentOutput && isSpecialComment"  is complex.
Complex Conditional,dotless.Core.Parser,Parsers,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Parsers.cs,Primary,The conditional expression  "node = MixinDefinition(parser) || ExtendRule(parser) || Rule(parser) || PullComments() || GuardedRuleset(parser) || Ruleset(parser) ||                            MixinCall(parser) || Directive(parser)"  is complex.
Complex Conditional,dotless.Core.Parser,Parsers,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Parsers.cs,Dimension,The conditional expression  "!(char.IsNumber(c) || c == '.' || c == '-' || c == '+')"  is complex.
Complex Conditional,dotless.Core.Parser,Parsers,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Parsers.cs,Expression,The conditional expression  "e = UnicodeRange(parser) || Operation(parser) || Entity(parser) || parser.Tokenizer.Match(@"[-+*/]")"  is complex.
Complex Conditional,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,CompareTo,The conditional expression  "col.R == R && col.G == G && col.B == B && col.Alpha == Alpha"  is complex.
Magic Number,dotless.Core.Parser.Functions,FadeInFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\AlphaFunction.cs,EditColor,The following statement contains a magic number: var alpha = number.Value/100d;
Magic Number,dotless.Core.Parser.Functions,AverageFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\AverageFunction.cs,Operate,The following statement contains a magic number: return (a + b) / 2;
Magic Number,dotless.Core.Parser.Functions,BlueFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\BlueFunction.cs,EditColor,The following statement contains a magic number: value = (value*255)/100d;
Magic Number,dotless.Core.Parser.Functions,BlueFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\BlueFunction.cs,EditColor,The following statement contains a magic number: value = (value*255)/100d;
Magic Number,dotless.Core.Parser.Functions,ColorFunctionBase,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\ColorFunctionBase.cs,Evaluate,The following statement contains a magic number: Arguments.Count == 2
Magic Number,dotless.Core.Parser.Functions,ColorMixFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\ColorMixFunction.cs,Evaluate,The following statement contains a magic number: Guard.ExpectNumArguments(2' Arguments.Count' this' Location);
Magic Number,dotless.Core.Parser.Functions,ComplementFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\ComplementFunction.cs,EvalHsl,The following statement contains a magic number: color.Hue += 0.5;
Magic Number,dotless.Core.Parser.Functions,ContrastFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\ContrastFunction.cs,Evaluate,The following statement contains a magic number: Guard.ExpectMaxArguments(4' Arguments.Count' this' Location);
Magic Number,dotless.Core.Parser.Functions,ContrastFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\ContrastFunction.cs,Evaluate,The following statement contains a magic number: Guard.ExpectNode<Color>(Arguments[2]' this' Location);
Magic Number,dotless.Core.Parser.Functions,ContrastFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\ContrastFunction.cs,Evaluate,The following statement contains a magic number: Arguments.Count > 2
Magic Number,dotless.Core.Parser.Functions,ContrastFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\ContrastFunction.cs,Evaluate,The following statement contains a magic number: Guard.ExpectNode<Number>(Arguments[3]' this' Location);
Magic Number,dotless.Core.Parser.Functions,ContrastFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\ContrastFunction.cs,Evaluate,The following statement contains a magic number: Arguments.Count > 3
Magic Number,dotless.Core.Parser.Functions,ContrastFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\ContrastFunction.cs,Evaluate,The following statement contains a magic number: var lightColor = Arguments.Count > 1 ? (Color)Arguments[1] : new Color(255d' 255d' 255d);
Magic Number,dotless.Core.Parser.Functions,ContrastFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\ContrastFunction.cs,Evaluate,The following statement contains a magic number: var lightColor = Arguments.Count > 1 ? (Color)Arguments[1] : new Color(255d' 255d' 255d);
Magic Number,dotless.Core.Parser.Functions,ContrastFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\ContrastFunction.cs,Evaluate,The following statement contains a magic number: var lightColor = Arguments.Count > 1 ? (Color)Arguments[1] : new Color(255d' 255d' 255d);
Magic Number,dotless.Core.Parser.Functions,ContrastFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\ContrastFunction.cs,Evaluate,The following statement contains a magic number: var darkColor = Arguments.Count > 2 ? (Color)Arguments[2] : new Color(0d' 0d' 0d);
Magic Number,dotless.Core.Parser.Functions,ContrastFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\ContrastFunction.cs,Evaluate,The following statement contains a magic number: var darkColor = Arguments.Count > 2 ? (Color)Arguments[2] : new Color(0d' 0d' 0d);
Magic Number,dotless.Core.Parser.Functions,ContrastFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\ContrastFunction.cs,Evaluate,The following statement contains a magic number: var threshold = Arguments.Count > 3 ? ((Number) Arguments[3]).ToNumber() : 0.43d;
Magic Number,dotless.Core.Parser.Functions,ContrastFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\ContrastFunction.cs,Evaluate,The following statement contains a magic number: var threshold = Arguments.Count > 3 ? ((Number) Arguments[3]).ToNumber() : 0.43d;
Magic Number,dotless.Core.Parser.Functions,ContrastFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\ContrastFunction.cs,Evaluate,The following statement contains a magic number: var threshold = Arguments.Count > 3 ? ((Number) Arguments[3]).ToNumber() : 0.43d;
Magic Number,dotless.Core.Parser.Functions,ExclusionFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\ExclusionFunction.cs,Operate,The following statement contains a magic number: return a + b * (255 - a - a) / 255;
Magic Number,dotless.Core.Parser.Functions,ExclusionFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\ExclusionFunction.cs,Operate,The following statement contains a magic number: return a + b * (255 - a - a) / 255;
Magic Number,dotless.Core.Parser.Functions,GradientImageFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\GradientImageFunction.cs,GetColorPoints,The following statement contains a magic number: Guard.ExpectMinArguments(2' argCount' this' Location);
Magic Number,dotless.Core.Parser.Functions,GradientImageFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\GradientImageFunction.cs,GetColorPoints,The following statement contains a magic number: Guard.ExpectAllNodes<Color>(Arguments.Take(2)' this' Location);
Magic Number,dotless.Core.Parser.Functions,GradientImageFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\GradientImageFunction.cs,AddToCache,The following statement contains a magic number: _cache.RemoveRange(0' CACHE_LIMIT / 2);
Magic Number,dotless.Core.Parser.Functions,GreyscaleFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\GrayscaleFunction.cs,Eval,The following statement contains a magic number: var grey = (color.RGB.Max() + color.RGB.Min())/2;
Magic Number,dotless.Core.Parser.Functions,GreenFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\GreenFunction.cs,EditColor,The following statement contains a magic number: value = (value*255)/100d;
Magic Number,dotless.Core.Parser.Functions,GreenFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\GreenFunction.cs,EditColor,The following statement contains a magic number: value = (value*255)/100d;
Magic Number,dotless.Core.Parser.Functions,HardlightFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\HardlightFunction.cs,Operate,The following statement contains a magic number: return b < 128 ? 2 * b * a / 255 : 255 - 2 * (255 - b) * (255 - a) / 255;
Magic Number,dotless.Core.Parser.Functions,HardlightFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\HardlightFunction.cs,Operate,The following statement contains a magic number: return b < 128 ? 2 * b * a / 255 : 255 - 2 * (255 - b) * (255 - a) / 255;
Magic Number,dotless.Core.Parser.Functions,HardlightFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\HardlightFunction.cs,Operate,The following statement contains a magic number: return b < 128 ? 2 * b * a / 255 : 255 - 2 * (255 - b) * (255 - a) / 255;
Magic Number,dotless.Core.Parser.Functions,HardlightFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\HardlightFunction.cs,Operate,The following statement contains a magic number: return b < 128 ? 2 * b * a / 255 : 255 - 2 * (255 - b) * (255 - a) / 255;
Magic Number,dotless.Core.Parser.Functions,HardlightFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\HardlightFunction.cs,Operate,The following statement contains a magic number: return b < 128 ? 2 * b * a / 255 : 255 - 2 * (255 - b) * (255 - a) / 255;
Magic Number,dotless.Core.Parser.Functions,HardlightFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\HardlightFunction.cs,Operate,The following statement contains a magic number: return b < 128 ? 2 * b * a / 255 : 255 - 2 * (255 - b) * (255 - a) / 255;
Magic Number,dotless.Core.Parser.Functions,HardlightFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\HardlightFunction.cs,Operate,The following statement contains a magic number: return b < 128 ? 2 * b * a / 255 : 255 - 2 * (255 - b) * (255 - a) / 255;
Magic Number,dotless.Core.Parser.Functions,HardlightFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\HardlightFunction.cs,Operate,The following statement contains a magic number: return b < 128 ? 2 * b * a / 255 : 255 - 2 * (255 - b) * (255 - a) / 255;
Magic Number,dotless.Core.Parser.Functions,HexFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\HexFunction.cs,Eval,The following statement contains a magic number: number.Value = Clamp(number.Value' 255' 0);
Magic Number,dotless.Core.Parser.Functions,HslaFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\HslaFunction.cs,Evaluate,The following statement contains a magic number: Guard.ExpectNumArguments(4' Arguments.Count' this' Location);
Magic Number,dotless.Core.Parser.Functions,HslaFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\HslaFunction.cs,Evaluate,The following statement contains a magic number: return new HslColor(args[0]' args[1]' args[2]' args[3]).ToRgbColor();
Magic Number,dotless.Core.Parser.Functions,HslaFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\HslaFunction.cs,Evaluate,The following statement contains a magic number: return new HslColor(args[0]' args[1]' args[2]' args[3]).ToRgbColor();
Magic Number,dotless.Core.Parser.Functions,HslFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\HslFunction.cs,Evaluate,The following statement contains a magic number: Guard.ExpectNumArguments(3' Arguments.Count' this' Location);
Magic Number,dotless.Core.Parser.Functions,HueFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\HueFunction.cs,EditHsl,The following statement contains a magic number: color.Hue += number.Value/360d;
Magic Number,dotless.Core.Parser.Functions,LightenFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\LightnessFunction.cs,EditHsl,The following statement contains a magic number: color.Lightness += number.Value/100;
Magic Number,dotless.Core.Parser.Functions,MixFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\MixFunction.cs,Evaluate,The following statement contains a magic number: Guard.ExpectMinArguments(2' Arguments.Count' this' Location);
Magic Number,dotless.Core.Parser.Functions,MixFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\MixFunction.cs,Evaluate,The following statement contains a magic number: Guard.ExpectMaxArguments(3' Arguments.Count' this' Location);
Magic Number,dotless.Core.Parser.Functions,MixFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\MixFunction.cs,Evaluate,The following statement contains a magic number: Guard.ExpectAllNodes<Color>(Arguments.Take(2)' this' Location);
Magic Number,dotless.Core.Parser.Functions,MixFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\MixFunction.cs,Evaluate,The following statement contains a magic number: double weight = 50;
Magic Number,dotless.Core.Parser.Functions,MixFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\MixFunction.cs,Evaluate,The following statement contains a magic number: Guard.ExpectNode<Number>(Arguments[2]' this' Location);
Magic Number,dotless.Core.Parser.Functions,MixFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\MixFunction.cs,Evaluate,The following statement contains a magic number: weight = ((Number)Arguments[2]).Value;
Magic Number,dotless.Core.Parser.Functions,MixFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\MixFunction.cs,Evaluate,The following statement contains a magic number: Arguments.Count == 3
Magic Number,dotless.Core.Parser.Functions,MixFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\MixFunction.cs,Evaluate,The following statement contains a magic number: var colors = Arguments.Take(2).Cast<Color>().ToArray();
Magic Number,dotless.Core.Parser.Functions,MixFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\MixFunction.cs,Mix,The following statement contains a magic number: var p = weight / 100.0;
Magic Number,dotless.Core.Parser.Functions,MixFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\MixFunction.cs,Mix,The following statement contains a magic number: var w = p * 2 - 1;
Magic Number,dotless.Core.Parser.Functions,MixFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\MixFunction.cs,Mix,The following statement contains a magic number: var w1 = (((w * a == -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;
Magic Number,dotless.Core.Parser.Functions,MixFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\MixFunction.cs,Mix,The following statement contains a magic number: var color = new Color(rgb[0]' rgb[1]' rgb[2]' alpha);
Magic Number,dotless.Core.Parser.Functions,TintFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\MixFunction.cs,Evaluate,The following statement contains a magic number: Guard.ExpectNumArguments(2' Arguments.Count' this' Location);
Magic Number,dotless.Core.Parser.Functions,TintFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\MixFunction.cs,Evaluate,The following statement contains a magic number: return Mix(new Color(255' 255' 255)'(Color)Arguments[0]' weight);
Magic Number,dotless.Core.Parser.Functions,TintFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\MixFunction.cs,Evaluate,The following statement contains a magic number: return Mix(new Color(255' 255' 255)'(Color)Arguments[0]' weight);
Magic Number,dotless.Core.Parser.Functions,TintFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\MixFunction.cs,Evaluate,The following statement contains a magic number: return Mix(new Color(255' 255' 255)'(Color)Arguments[0]' weight);
Magic Number,dotless.Core.Parser.Functions,ShadeFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\MixFunction.cs,Evaluate,The following statement contains a magic number: Guard.ExpectNumArguments(2' Arguments.Count' this' Location);
Magic Number,dotless.Core.Parser.Functions,MultiplyFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\MultiplyFunction.cs,Operate,The following statement contains a magic number: return a * b / 255;
Magic Number,dotless.Core.Parser.Functions,NegationFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\NegationFunction.cs,Operate,The following statement contains a magic number: return 255 - Math.Abs(255 - b - a);
Magic Number,dotless.Core.Parser.Functions,NegationFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\NegationFunction.cs,Operate,The following statement contains a magic number: return 255 - Math.Abs(255 - b - a);
Magic Number,dotless.Core.Parser.Functions,OverlayFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\OverlayFunction.cs,Operate,The following statement contains a magic number: return a < 128 ? 2 * a * b / 255 : 255 - 2 * (255 - a) * (255 - b) / 255;
Magic Number,dotless.Core.Parser.Functions,OverlayFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\OverlayFunction.cs,Operate,The following statement contains a magic number: return a < 128 ? 2 * a * b / 255 : 255 - 2 * (255 - a) * (255 - b) / 255;
Magic Number,dotless.Core.Parser.Functions,OverlayFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\OverlayFunction.cs,Operate,The following statement contains a magic number: return a < 128 ? 2 * a * b / 255 : 255 - 2 * (255 - a) * (255 - b) / 255;
Magic Number,dotless.Core.Parser.Functions,OverlayFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\OverlayFunction.cs,Operate,The following statement contains a magic number: return a < 128 ? 2 * a * b / 255 : 255 - 2 * (255 - a) * (255 - b) / 255;
Magic Number,dotless.Core.Parser.Functions,OverlayFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\OverlayFunction.cs,Operate,The following statement contains a magic number: return a < 128 ? 2 * a * b / 255 : 255 - 2 * (255 - a) * (255 - b) / 255;
Magic Number,dotless.Core.Parser.Functions,OverlayFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\OverlayFunction.cs,Operate,The following statement contains a magic number: return a < 128 ? 2 * a * b / 255 : 255 - 2 * (255 - a) * (255 - b) / 255;
Magic Number,dotless.Core.Parser.Functions,OverlayFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\OverlayFunction.cs,Operate,The following statement contains a magic number: return a < 128 ? 2 * a * b / 255 : 255 - 2 * (255 - a) * (255 - b) / 255;
Magic Number,dotless.Core.Parser.Functions,OverlayFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\OverlayFunction.cs,Operate,The following statement contains a magic number: return a < 128 ? 2 * a * b / 255 : 255 - 2 * (255 - a) * (255 - b) / 255;
Magic Number,dotless.Core.Parser.Functions,PercentageFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\PercentageFunction.cs,Eval,The following statement contains a magic number: return new Number(number.Value * 100' "%");
Magic Number,dotless.Core.Parser.Functions,PowFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\PowFunction.cs,Evaluate,The following statement contains a magic number: Guard.ExpectMinArguments(2' Arguments.Count' this' Location);
Magic Number,dotless.Core.Parser.Functions,PowFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\PowFunction.cs,Evaluate,The following statement contains a magic number: Guard.ExpectMaxArguments(2' Arguments.Count' this' Location);
Magic Number,dotless.Core.Parser.Functions,RedFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\RedFunction.cs,EditColor,The following statement contains a magic number: value = (value*255)/100d;
Magic Number,dotless.Core.Parser.Functions,RedFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\RedFunction.cs,EditColor,The following statement contains a magic number: value = (value*255)/100d;
Magic Number,dotless.Core.Parser.Functions,RgbaFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\RgbaFunction.cs,Evaluate,The following statement contains a magic number: Arguments.Count == 2
Magic Number,dotless.Core.Parser.Functions,RgbaFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\RgbaFunction.cs,Evaluate,The following statement contains a magic number: Guard.ExpectNumArguments(4' Arguments.Count' this' Location);
Magic Number,dotless.Core.Parser.Functions,RgbaFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\RgbaFunction.cs,Evaluate,The following statement contains a magic number: var rgb = args.Take(3).Select(n => n.ToNumber(255.0)).ToArray();
Magic Number,dotless.Core.Parser.Functions,RgbaFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\RgbaFunction.cs,Evaluate,The following statement contains a magic number: var rgb = args.Take(3).Select(n => n.ToNumber(255.0)).ToArray();
Magic Number,dotless.Core.Parser.Functions,RgbaFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\RgbaFunction.cs,Evaluate,The following statement contains a magic number: var alpha = args[3].ToNumber(1.0);
Magic Number,dotless.Core.Parser.Functions,RgbFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\RgbFunction.cs,Evaluate,The following statement contains a magic number: Guard.ExpectNumArguments(3' Arguments.Count' this' Location);
Magic Number,dotless.Core.Parser.Functions,SaturateFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\SaturationFunction.cs,EditHsl,The following statement contains a magic number: color.Saturation += number.Value/100;
Magic Number,dotless.Core.Parser.Functions,ScreenFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\ScreenFunction.cs,Operate,The following statement contains a magic number: return 255 - (255 - a) * (255 - b) / 255;
Magic Number,dotless.Core.Parser.Functions,ScreenFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\ScreenFunction.cs,Operate,The following statement contains a magic number: return 255 - (255 - a) * (255 - b) / 255;
Magic Number,dotless.Core.Parser.Functions,ScreenFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\ScreenFunction.cs,Operate,The following statement contains a magic number: return 255 - (255 - a) * (255 - b) / 255;
Magic Number,dotless.Core.Parser.Functions,ScreenFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\ScreenFunction.cs,Operate,The following statement contains a magic number: return 255 - (255 - a) * (255 - b) / 255;
Magic Number,dotless.Core.Parser.Functions,SoftlightFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\SoftlightFunction.cs,Operate,The following statement contains a magic number: double t = b * a / 255;
Magic Number,dotless.Core.Parser.Functions,SoftlightFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\SoftlightFunction.cs,Operate,The following statement contains a magic number: return t + a * (255 - (255 - a) * (255 - b) / 255 - t) / 255;
Magic Number,dotless.Core.Parser.Functions,SoftlightFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\SoftlightFunction.cs,Operate,The following statement contains a magic number: return t + a * (255 - (255 - a) * (255 - b) / 255 - t) / 255;
Magic Number,dotless.Core.Parser.Functions,SoftlightFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\SoftlightFunction.cs,Operate,The following statement contains a magic number: return t + a * (255 - (255 - a) * (255 - b) / 255 - t) / 255;
Magic Number,dotless.Core.Parser.Functions,SoftlightFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\SoftlightFunction.cs,Operate,The following statement contains a magic number: return t + a * (255 - (255 - a) * (255 - b) / 255 - t) / 255;
Magic Number,dotless.Core.Parser.Functions,SoftlightFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\SoftlightFunction.cs,Operate,The following statement contains a magic number: return t + a * (255 - (255 - a) * (255 - b) / 255 - t) / 255;
Magic Number,dotless.Core.Parser.Functions,UnitFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\UnitFunction.cs,Evaluate,The following statement contains a magic number: Guard.ExpectMaxArguments(2' Arguments.Count' this' Location);
Magic Number,dotless.Core.Parser.Functions,UnitFunction,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Functions\UnitFunction.cs,Evaluate,The following statement contains a magic number: Arguments.Count == 2
Magic Number,dotless.Core.Parser.Infrastructure,Env,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Infrastructure\Env.cs,GetFunctionNames,The following statement contains a magic number: name = name.Substring(0' name.Length - 8);
Magic Number,dotless.Core.Parser,Parsers,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Parsers.cs,Quoted,The following statement contains a magic number: return NodeProvider.Quoted(str' str.Substring(1' str.Length - 2)' escaped' parser.Tokenizer.GetNodeLocation(index));
Magic Number,dotless.Core.Parser,Parsers,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Parsers.cs,Dimension,The following statement contains a magic number: return NodeProvider.Number(value[1]' value[2]' parser.Tokenizer.GetNodeLocation(index));
Magic Number,dotless.Core.Parser,Parsers,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Parsers.cs,Directive,The following statement contains a magic number: nonVendorSpecificName = "@" + name.Substring(name.IndexOf('-'' 2) + 1);
Magic Number,dotless.Core.Parser,Parsers,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Parsers.cs,Directive,The following statement contains a magic number: name.StartsWith("@-") && name.IndexOf('-'' 2) > 0
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,GetColorFromKeyword,The following statement contains a magic number: var r = (rgb >> 16) & 0xFF;
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,GetColorFromKeyword,The following statement contains a magic number: var g = (rgb >> 8) & 0xFF;
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,GetKeyword,The following statement contains a magic number: var color = (rgb[0] << 16) + (rgb[1] << 8) + rgb[2];
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,GetKeyword,The following statement contains a magic number: var color = (rgb[0] << 16) + (rgb[1] << 8) + rgb[2];
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,GetKeyword,The following statement contains a magic number: var color = (rgb[0] << 16) + (rgb[1] << 8) + rgb[2];
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,FromHex,The following statement contains a magic number: rgb = ParseRgb(hex.Substring(2));
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,FromHex,The following statement contains a magic number: alpha = Parse(hex.Substring(0' 2))/255.0;
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,FromHex,The following statement contains a magic number: alpha = Parse(hex.Substring(0' 2))/255.0;
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,FromHex,The following statement contains a magic number: hex.Length == 8
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,ParseRgb,The following statement contains a magic number: return Enumerable.Range(0' 3)                  .Select(i => hex.Substring(i*2' 2))                  .Select(Parse)                  .ToArray();
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,ParseRgb,The following statement contains a magic number: return Enumerable.Range(0' 3)                  .Select(i => hex.Substring(i*2' 2))                  .Select(Parse)                  .ToArray();
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,ParseRgb,The following statement contains a magic number: return Enumerable.Range(0' 3)                  .Select(i => hex.Substring(i*2' 2))                  .Select(Parse)                  .ToArray();
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,Color,The following statement contains a magic number: RGB = new double[3];
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,Color,The following statement contains a magic number: color >>= 8;
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,Color,The following statement contains a magic number: color >>= 8;
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,Color,The following statement contains a magic number: rgb = ParseRgb(hex.Substring(2));
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,Color,The following statement contains a magic number: alpha = Parse(hex.Substring(0' 2))/255.0;
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,Color,The following statement contains a magic number: alpha = Parse(hex.Substring(0' 2))/255.0;
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,Color,The following statement contains a magic number: hex.Length == 8
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,Color,The following statement contains a magic number: B = rgb[2];
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,Color,The following statement contains a magic number: RGB = rgb.Select(c => NumberExtensions.Normalize(c' 255.0)).ToArray();
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,TransformLinearToSrbg,The following statement contains a magic number: const double decodingGamma = 2.4;
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,TransformLinearToSrbg,The following statement contains a magic number: const double phi = 12.92;
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,TransformLinearToSrbg,The following statement contains a magic number: const double alpha = .055;
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,TransformLinearToSrbg,The following statement contains a magic number: return (linearChannel <= 0.03928) ? linearChannel / phi : Math.Pow(((linearChannel + alpha) / (1 + alpha))' decodingGamma);
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,AppendCSS,The following statement contains a magic number: env.Output.AppendFormat("rgba({0}' {1}' {2}' {3})"' rgb[0]' rgb[1]' rgb[2]' Alpha);
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,Operate,The following statement contains a magic number: var rgb = Enumerable.Range(0' 3)                  .Select(i => Operation.Operate(op.Operator' RGB[i]' color.RGB[i]))                  .ToArray();
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,ToArgb,The following statement contains a magic number: var values = new[] {Alpha*255}.Concat(RGB);
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,CompareTo,The following statement contains a magic number: return (((256 * 3) - (col.R + col.G + col.B)) * col.Alpha) < (((256 * 3) - (R + G + B)) * Alpha) ? 1 : -1;
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,CompareTo,The following statement contains a magic number: return (((256 * 3) - (col.R + col.G + col.B)) * col.Alpha) < (((256 * 3) - (R + G + B)) * Alpha) ? 1 : -1;
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,CompareTo,The following statement contains a magic number: return (((256 * 3) - (col.R + col.G + col.B)) * col.Alpha) < (((256 * 3) - (R + G + B)) * Alpha) ? 1 : -1;
Magic Number,dotless.Core.Parser.Tree,Color,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Color.cs,CompareTo,The following statement contains a magic number: return (((256 * 3) - (col.R + col.G + col.B)) * col.Alpha) < (((256 * 3) - (R + G + B)) * Alpha) ? 1 : -1;
Magic Number,dotless.Core.Parser.Tree,Media,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Media.cs,AppendCSS,The following statement contains a magic number: env.Output.Trim().Indent(2);
Magic Number,dotless.Core.Parser.Tree,Number,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Number.cs,GetPrecision,The following statement contains a magic number: return 9;
Magic Number,dotless.Core.Parser.Tree,Number,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Number.cs,ToNumber,The following statement contains a magic number: return Unit == "%" ? Value*max/100d : Value;
Magic Number,dotless.Core.Parser.Tree,Ruleset,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Tree\Ruleset.cs,AppendRules,The following statement contains a magic number: env.Output                  .Append(env.Compress ? "{" : " {\n")                    .Push()                  .AppendMany(Rules' "\n")                  .Trim()                  .Indent(env.Compress ? 0 : 2)                  .PopAndAppend();
Magic Number,dotless.Core.Plugins,ColorSpinPlugin,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Plugins\ColorSpinPlugin.cs,Execute,The following statement contains a magic number: hslColor.Hue += Spin/360.0d;
Magic Number,dotless.Core.Plugins,GenericPluginConfigurator<T>,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Plugins\GenericPluginConfigurator.cs,GetConstructorInfos,The following statement contains a magic number: constructors.Count > 2  || constructors.Count == 0
Magic Number,dotless.Core.Plugins,ValuesReverserVisitor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Plugins\RtlPlugin.cs,ReverseRule,The following statement contains a magic number: _nodeContent[1] = _nodeContent[3];
Magic Number,dotless.Core.Plugins,ValuesReverserVisitor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Plugins\RtlPlugin.cs,ReverseRule,The following statement contains a magic number: _nodeContent[3] = tmp;
Magic Number,dotless.Core.Plugins,ValuesReverserVisitor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Plugins\RtlPlugin.cs,ReverseRule,The following statement contains a magic number: _nodeContent.Count == 4
Magic Number,dotless.Core.Stylizers,ConsoleStylizer,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Stylizers\ConsoleStylizer.cs,ConsoleStylizer,The following statement contains a magic number: styles = new Dictionary<string' int[]>                           {                               {"bold"' new[] {1' 22}}'                               {"inverse"' new[] {7' 27}}'                               {"underline"' new[] {4' 24}}'                               {"yellow"' new[] {33' 39}}'                               {"green"' new[] {32' 39}}'                               {"red"' new[] {31' 39}}'                               {"grey"' new[] {90' 39}}'                               {"reset"' new[] {0' 0}}                           };
Magic Number,dotless.Core.Stylizers,ConsoleStylizer,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Stylizers\ConsoleStylizer.cs,ConsoleStylizer,The following statement contains a magic number: styles = new Dictionary<string' int[]>                           {                               {"bold"' new[] {1' 22}}'                               {"inverse"' new[] {7' 27}}'                               {"underline"' new[] {4' 24}}'                               {"yellow"' new[] {33' 39}}'                               {"green"' new[] {32' 39}}'                               {"red"' new[] {31' 39}}'                               {"grey"' new[] {90' 39}}'                               {"reset"' new[] {0' 0}}                           };
Magic Number,dotless.Core.Stylizers,ConsoleStylizer,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Stylizers\ConsoleStylizer.cs,ConsoleStylizer,The following statement contains a magic number: styles = new Dictionary<string' int[]>                           {                               {"bold"' new[] {1' 22}}'                               {"inverse"' new[] {7' 27}}'                               {"underline"' new[] {4' 24}}'                               {"yellow"' new[] {33' 39}}'                               {"green"' new[] {32' 39}}'                               {"red"' new[] {31' 39}}'                               {"grey"' new[] {90' 39}}'                               {"reset"' new[] {0' 0}}                           };
Magic Number,dotless.Core.Stylizers,ConsoleStylizer,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Stylizers\ConsoleStylizer.cs,ConsoleStylizer,The following statement contains a magic number: styles = new Dictionary<string' int[]>                           {                               {"bold"' new[] {1' 22}}'                               {"inverse"' new[] {7' 27}}'                               {"underline"' new[] {4' 24}}'                               {"yellow"' new[] {33' 39}}'                               {"green"' new[] {32' 39}}'                               {"red"' new[] {31' 39}}'                               {"grey"' new[] {90' 39}}'                               {"reset"' new[] {0' 0}}                           };
Magic Number,dotless.Core.Stylizers,ConsoleStylizer,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Stylizers\ConsoleStylizer.cs,ConsoleStylizer,The following statement contains a magic number: styles = new Dictionary<string' int[]>                           {                               {"bold"' new[] {1' 22}}'                               {"inverse"' new[] {7' 27}}'                               {"underline"' new[] {4' 24}}'                               {"yellow"' new[] {33' 39}}'                               {"green"' new[] {32' 39}}'                               {"red"' new[] {31' 39}}'                               {"grey"' new[] {90' 39}}'                               {"reset"' new[] {0' 0}}                           };
Magic Number,dotless.Core.Stylizers,ConsoleStylizer,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Stylizers\ConsoleStylizer.cs,ConsoleStylizer,The following statement contains a magic number: styles = new Dictionary<string' int[]>                           {                               {"bold"' new[] {1' 22}}'                               {"inverse"' new[] {7' 27}}'                               {"underline"' new[] {4' 24}}'                               {"yellow"' new[] {33' 39}}'                               {"green"' new[] {32' 39}}'                               {"red"' new[] {31' 39}}'                               {"grey"' new[] {90' 39}}'                               {"reset"' new[] {0' 0}}                           };
Magic Number,dotless.Core.Stylizers,ConsoleStylizer,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Stylizers\ConsoleStylizer.cs,ConsoleStylizer,The following statement contains a magic number: styles = new Dictionary<string' int[]>                           {                               {"bold"' new[] {1' 22}}'                               {"inverse"' new[] {7' 27}}'                               {"underline"' new[] {4' 24}}'                               {"yellow"' new[] {33' 39}}'                               {"green"' new[] {32' 39}}'                               {"red"' new[] {31' 39}}'                               {"grey"' new[] {90' 39}}'                               {"reset"' new[] {0' 0}}                           };
Magic Number,dotless.Core.Stylizers,ConsoleStylizer,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Stylizers\ConsoleStylizer.cs,ConsoleStylizer,The following statement contains a magic number: styles = new Dictionary<string' int[]>                           {                               {"bold"' new[] {1' 22}}'                               {"inverse"' new[] {7' 27}}'                               {"underline"' new[] {4' 24}}'                               {"yellow"' new[] {33' 39}}'                               {"green"' new[] {32' 39}}'                               {"red"' new[] {31' 39}}'                               {"grey"' new[] {90' 39}}'                               {"reset"' new[] {0' 0}}                           };
Magic Number,dotless.Core.Stylizers,ConsoleStylizer,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Stylizers\ConsoleStylizer.cs,ConsoleStylizer,The following statement contains a magic number: styles = new Dictionary<string' int[]>                           {                               {"bold"' new[] {1' 22}}'                               {"inverse"' new[] {7' 27}}'                               {"underline"' new[] {4' 24}}'                               {"yellow"' new[] {33' 39}}'                               {"green"' new[] {32' 39}}'                               {"red"' new[] {31' 39}}'                               {"grey"' new[] {90' 39}}'                               {"reset"' new[] {0' 0}}                           };
Magic Number,dotless.Core.Stylizers,ConsoleStylizer,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Stylizers\ConsoleStylizer.cs,ConsoleStylizer,The following statement contains a magic number: styles = new Dictionary<string' int[]>                           {                               {"bold"' new[] {1' 22}}'                               {"inverse"' new[] {7' 27}}'                               {"underline"' new[] {4' 24}}'                               {"yellow"' new[] {33' 39}}'                               {"green"' new[] {32' 39}}'                               {"red"' new[] {31' 39}}'                               {"grey"' new[] {90' 39}}'                               {"reset"' new[] {0' 0}}                           };
Magic Number,dotless.Core.Stylizers,ConsoleStylizer,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Stylizers\ConsoleStylizer.cs,ConsoleStylizer,The following statement contains a magic number: styles = new Dictionary<string' int[]>                           {                               {"bold"' new[] {1' 22}}'                               {"inverse"' new[] {7' 27}}'                               {"underline"' new[] {4' 24}}'                               {"yellow"' new[] {33' 39}}'                               {"green"' new[] {32' 39}}'                               {"red"' new[] {31' 39}}'                               {"grey"' new[] {90' 39}}'                               {"reset"' new[] {0' 0}}                           };
Magic Number,dotless.Core.Stylizers,ConsoleStylizer,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Stylizers\ConsoleStylizer.cs,ConsoleStylizer,The following statement contains a magic number: styles = new Dictionary<string' int[]>                           {                               {"bold"' new[] {1' 22}}'                               {"inverse"' new[] {7' 27}}'                               {"underline"' new[] {4' 24}}'                               {"yellow"' new[] {33' 39}}'                               {"green"' new[] {32' 39}}'                               {"red"' new[] {31' 39}}'                               {"grey"' new[] {90' 39}}'                               {"reset"' new[] {0' 0}}                           };
Magic Number,dotless.Core.Stylizers,ConsoleStylizer,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Stylizers\ConsoleStylizer.cs,ConsoleStylizer,The following statement contains a magic number: styles = new Dictionary<string' int[]>                           {                               {"bold"' new[] {1' 22}}'                               {"inverse"' new[] {7' 27}}'                               {"underline"' new[] {4' 24}}'                               {"yellow"' new[] {33' 39}}'                               {"green"' new[] {32' 39}}'                               {"red"' new[] {31' 39}}'                               {"grey"' new[] {90' 39}}'                               {"reset"' new[] {0' 0}}                           };
Magic Number,dotless.Core.Utils,HslColor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\HslColor.cs,HslColor,The following statement contains a magic number: Hue = (hue.ToNumber()/360d)%1d;
Magic Number,dotless.Core.Utils,HslColor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\HslColor.cs,HslColor,The following statement contains a magic number: Saturation = saturation.Normalize(100d)/100d;
Magic Number,dotless.Core.Utils,HslColor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\HslColor.cs,HslColor,The following statement contains a magic number: Saturation = saturation.Normalize(100d)/100d;
Magic Number,dotless.Core.Utils,HslColor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\HslColor.cs,HslColor,The following statement contains a magic number: Lightness = lightness.Normalize(100d)/100d;
Magic Number,dotless.Core.Utils,HslColor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\HslColor.cs,HslColor,The following statement contains a magic number: Lightness = lightness.Normalize(100d)/100d;
Magic Number,dotless.Core.Utils,HslColor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\HslColor.cs,FromRgbColor,The following statement contains a magic number: const int B = 2;
Magic Number,dotless.Core.Utils,HslColor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\HslColor.cs,FromRgbColor,The following statement contains a magic number: var rgb = color.RGB.Select(x => x/255d).ToArray();
Magic Number,dotless.Core.Utils,HslColor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\HslColor.cs,FromRgbColor,The following statement contains a magic number: var lightness = (max + min)/2;
Magic Number,dotless.Core.Utils,HslColor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\HslColor.cs,FromRgbColor,The following statement contains a magic number: lightness < 0.5
Magic Number,dotless.Core.Utils,HslColor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\HslColor.cs,FromRgbColor,The following statement contains a magic number: var deltas = rgb.Select(x => (((max - x)/6) + (range/2))/range).ToArray();
Magic Number,dotless.Core.Utils,HslColor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\HslColor.cs,FromRgbColor,The following statement contains a magic number: var deltas = rgb.Select(x => (((max - x)/6) + (range/2))/range).ToArray();
Magic Number,dotless.Core.Utils,HslColor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\HslColor.cs,ToRgbColor,The following statement contains a magic number: var grey = Math.Round(Lightness*255);
Magic Number,dotless.Core.Utils,HslColor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\HslColor.cs,ToRgbColor,The following statement contains a magic number: Lightness < 0.5
Magic Number,dotless.Core.Utils,HslColor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\HslColor.cs,ToRgbColor,The following statement contains a magic number: var p = 2*Lightness - q;
Magic Number,dotless.Core.Utils,HslColor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\HslColor.cs,ToRgbColor,The following statement contains a magic number: var red = 255*Hue_2_RGB(p' q' Hue + (1d/3));
Magic Number,dotless.Core.Utils,HslColor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\HslColor.cs,ToRgbColor,The following statement contains a magic number: var red = 255*Hue_2_RGB(p' q' Hue + (1d/3));
Magic Number,dotless.Core.Utils,HslColor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\HslColor.cs,ToRgbColor,The following statement contains a magic number: var green = 255*Hue_2_RGB(p' q' Hue);
Magic Number,dotless.Core.Utils,HslColor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\HslColor.cs,ToRgbColor,The following statement contains a magic number: var blue = 255*Hue_2_RGB(p' q' Hue - (1d/3));
Magic Number,dotless.Core.Utils,HslColor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\HslColor.cs,ToRgbColor,The following statement contains a magic number: var blue = 255*Hue_2_RGB(p' q' Hue - (1d/3));
Magic Number,dotless.Core.Utils,HslColor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\HslColor.cs,Hue_2_RGB,The following statement contains a magic number: return (v1 + (v2 - v1)*6*vH);
Magic Number,dotless.Core.Utils,HslColor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\HslColor.cs,Hue_2_RGB,The following statement contains a magic number: (6*vH) < 1
Magic Number,dotless.Core.Utils,HslColor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\HslColor.cs,Hue_2_RGB,The following statement contains a magic number: (2*vH) < 1
Magic Number,dotless.Core.Utils,HslColor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\HslColor.cs,Hue_2_RGB,The following statement contains a magic number: return (v1 + (v2 - v1)*((2d/3) - vH)*6);
Magic Number,dotless.Core.Utils,HslColor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\HslColor.cs,Hue_2_RGB,The following statement contains a magic number: return (v1 + (v2 - v1)*((2d/3) - vH)*6);
Magic Number,dotless.Core.Utils,HslColor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\HslColor.cs,Hue_2_RGB,The following statement contains a magic number: return (v1 + (v2 - v1)*((2d/3) - vH)*6);
Magic Number,dotless.Core.Utils,HslColor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\HslColor.cs,Hue_2_RGB,The following statement contains a magic number: (3*vH) < 2
Magic Number,dotless.Core.Utils,HslColor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\HslColor.cs,Hue_2_RGB,The following statement contains a magic number: (3*vH) < 2
Magic Number,dotless.Core.Utils,HslColor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\HslColor.cs,GetHueInDegrees,The following statement contains a magic number: return new Number(Hue*360' "deg");
Magic Number,dotless.Core.Utils,HslColor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\HslColor.cs,GetSaturation,The following statement contains a magic number: return new Number(Saturation*100' "%");
Magic Number,dotless.Core.Utils,HslColor,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\HslColor.cs,GetLightness,The following statement contains a magic number: return new Number(Lightness*100' "%");
Magic Number,dotless.Core.Utils,StringExtensions,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Utils\StringExtensions.cs,CanonicalizePath,The following statement contains a magic number: pathList = pathList.Take(numberOfParents - numberOfMatchingParents)                      .Concat(pathList.Skip((numberOfParents - numberOfMatchingParents) + (numberOfMatchingParents*2)));
Missing Default,dotless.Core.Parser,Parsers,D:\research\architectureSmells\repos\dotless_dotless\src\dotless.Core\Parser\Parsers.cs,Directive,The following switch statement is missing a default case: switch (nonVendorSpecificName)              {                  case "@font-face":                      hasBlock = true;                      break;                  case "@page":                  case "@document":                  case "@supports":                      hasBlock = true;                      hasIdentifier = true;                      break;                  case "@viewport":                  case "@top-left":                  case "@top-left-corner":                  case "@top-center":                  case "@top-right":                  case "@top-right-corner":                  case "@bottom-left":                  case "@bottom-left-corner":                  case "@bottom-center":                  case "@bottom-right":                  case "@bottom-right-corner":                  case "@left-top":                  case "@left-middle":                  case "@left-bottom":                  case "@right-top":                  case "@right-middle":                  case "@right-bottom":                      hasBlock = true;                      break;                  case "@keyframes":                      isKeyFrame = true;                      hasIdentifier = true;                      break;              }
