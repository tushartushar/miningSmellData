Implementation smell,Namespace,Class,File,Method,Description
Long Method,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,MapRenderer,The method has 101 lines of code.
Complex Method,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,MapRenderer,Cyclomatic complexity of the method is 22
Complex Method,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,Start,Cyclomatic complexity of the method is 15
Complex Method,SCANsatRPM,MapMarkupLine,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,MapMarkupLine,Cyclomatic complexity of the method is 11
Long Parameter List,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,GetPositionAtT,The method has 6 parameters. Parameters: thatVessel' thatOrbit' initial' timePoint' coordinates' collision
Long Parameter List,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,DrawLine,The method has 6 parameters. Parameters: xStart' yStart' xEnd' yEnd' screenSpace' actualMapWidth
Long Parameter List,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,DrawIcon,The method has 5 parameters. Parameters: longitude' latitude' vt' iconColor' icon
Long Identifier,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,,The length of the parameter iconColorUnvisitedAnomalyValue is 30.
Long Statement,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,MapRenderer,The length of the statement  "						    GetPositionAtT(targetVessel' targetVessel.orbit' start' closestApproachMoment' out targetCoord' out targetCollision) && !targetCollision && " is 139.
Long Statement,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,MapRenderer,The length of the statement  "						    GetPositionAtT(vessel' targetVessel.orbit' start' closestApproachMoment' out vesselCoord' out vesselCollision) && !vesselCollision) { " is 133.
Long Statement,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,MapRenderer,The length of the statement  "						DrawOrbitIcon(vessel' MapIcons.OtherIcon.AN' iconColorANDNValue' vessel.orbit.TimeOfAscendingNode(targetVessel.orbit' start)); " is 126.
Long Statement,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,MapRenderer,The length of the statement  "						DrawOrbitIcon(vessel' MapIcons.OtherIcon.DN' iconColorANDNValue' vessel.orbit.TimeOfDescendingNode(targetVessel.orbit' start)); " is 127.
Long Statement,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,MapRenderer,The length of the statement  "				ManeuverNode node = vessel.patchedConicSolver.maneuverNodes.Count > 0 ? vessel.patchedConicSolver.maneuverNodes[0] : null; " is 122.
Long Statement,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,DrawTrail,The length of the statement  "				DrawLine(xStart' yStart' (float)longitudeToPixels(endPoint.x' endPoint.y)' (float)latitudeToPixels(endPoint.x' endPoint.y)' screenSpace' actualMapWidth); " is 153.
Long Statement,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,DrawScale,The length of the statement  "			Graphics.DrawTexture(scaleBarRect' scaleLabelTexture' new Rect(0f' scaleID * scaleLabelSpan' 1f' scaleLabelSpan)' 0' 0' 0' 0' scaleTint); " is 137.
Long Statement,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,RedrawMap,The length of the statement  "			double pixelsPerDegree = Math.Abs(longitudeToPixels(mapCenterLong + (((mapCenterLong + 1) > 360) ? -1 : 1)' mapCenterLat) - longitudeToPixels(mapCenterLong' mapCenterLat)); " is 172.
Complex Conditional,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,MapRenderer,The conditional expression  "closestApproachMoment != start &&  						    GetPositionAtT(targetVessel' targetVessel.orbit' start' closestApproachMoment' out targetCoord' out targetCollision) && !targetCollision &&  						    GetPositionAtT(vessel' targetVessel.orbit' start' closestApproachMoment' out vesselCoord' out vesselCollision) && !vesselCollision"  is complex.
Complex Conditional,SCANsatRPM,MapMarkupLine,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,MapMarkupLine,The conditional expression  "x > 180d || x < -180d || y > 90d || y < -90d"  is complex.
Magic Number,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,GetPositionAtT,The following statement contains a magic number: if (thatVessel.mainBody.rotates) {  				rotOffset = (360 * ((timePoint - initial) / thatVessel.mainBody.rotationPeriod)) % 360;  			}
Magic Number,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,GetPositionAtT,The following statement contains a magic number: if (thatVessel.mainBody.rotates) {  				rotOffset = (360 * ((timePoint - initial) / thatVessel.mainBody.rotationPeriod)) % 360;  			}
Magic Number,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,DrawTrail,The following statement contains a magic number: if (points.Count < 2)  				return;
Magic Number,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,DrawScale,The following statement contains a magic number: Graphics.DrawTexture(scaleBarRect' scaleBarTexture' new Rect(0' 0' 1f' 1f)' 4' 4' 4' 4' scaleTint);
Magic Number,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,DrawScale,The following statement contains a magic number: Graphics.DrawTexture(scaleBarRect' scaleBarTexture' new Rect(0' 0' 1f' 1f)' 4' 4' 4' 4' scaleTint);
Magic Number,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,DrawScale,The following statement contains a magic number: Graphics.DrawTexture(scaleBarRect' scaleBarTexture' new Rect(0' 0' 1f' 1f)' 4' 4' 4' 4' scaleTint);
Magic Number,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,DrawScale,The following statement contains a magic number: Graphics.DrawTexture(scaleBarRect' scaleBarTexture' new Rect(0' 0' 1f' 1f)' 4' 4' 4' 4' scaleTint);
Magic Number,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,DrawIcon,The following statement contains a magic number: var position = new Rect((float)(longitudeToPixels(longitude' latitude) - iconPixelSize / 2)'  				               (float)(latitudeToPixels(longitude' latitude) - iconPixelSize / 2)'  				               iconPixelSize' iconPixelSize);
Magic Number,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,DrawIcon,The following statement contains a magic number: var position = new Rect((float)(longitudeToPixels(longitude' latitude) - iconPixelSize / 2)'  				               (float)(latitudeToPixels(longitude' latitude) - iconPixelSize / 2)'  				               iconPixelSize' iconPixelSize);
Magic Number,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,latitudeToPixels,The following statement contains a magic number: double translatedLat = 90.0 + projLat - map.lat_offset;
Magic Number,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,latitudeToPixels,The following statement contains a magic number: double pix = scaledLat * screenHeight / 180.0;
Magic Number,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,ChangeMapMode,The following statement contains a magic number: if (mapMode > 2)  				mapMode = 0;
Magic Number,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,ChangeMapMode,The following statement contains a magic number: if (mapMode < 0)  				mapMode = 2;
Magic Number,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,RedrawMap,The following statement contains a magic number: mapSizeScale = new Vector2d(360.0 * map.mapscale / map.mapwidth' 180.0 * map.mapscale / map.mapheight);
Magic Number,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,RedrawMap,The following statement contains a magic number: mapSizeScale = new Vector2d(360.0 * map.mapscale / map.mapwidth' 180.0 * map.mapscale / map.mapheight);
Magic Number,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,RedrawMap,The following statement contains a magic number: redrawDeviation = redrawEdge * 180 / (zoomLevel * zoomLevel + zoomModifier);
Magic Number,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,RedrawMap,The following statement contains a magic number: double kmPerDegreeLon = (2 * Math.PI * (orbitingBody.Radius / 1000d)) / 360d;
Magic Number,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,RedrawMap,The following statement contains a magic number: double pixelsPerDegree = Math.Abs(longitudeToPixels(mapCenterLong + (((mapCenterLong + 1) > 360) ? -1 : 1)' mapCenterLat) - longitudeToPixels(mapCenterLong' mapCenterLat));
Magic Number,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,Start,The following statement contains a magic number: if (!string.IsNullOrEmpty(scaleBar) && !string.IsNullOrEmpty(scaleLabels) && !string.IsNullOrEmpty(scaleLevels)) {  				scaleBarTexture = GameDatabase.Instance.GetTexture(scaleBar' false);  				scaleLabelTexture = GameDatabase.Instance.GetTexture(scaleLabels' false);  				var scales = new List<float>();  				foreach (string scl in scaleLevels.Split(''')) {  					float scale;  					if (float.TryParse(scl.Trim()' out scale))  						scales.Add(scale / 1000);    				}  				scaleLevelValues = scales.ToArray();  				Array.Sort(scaleLevelValues);  				scaleLabelSpan = 1f / scaleLevelValues.Length;  			}
Magic Number,SCANsatRPM,MapMarkupLine,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,MapMarkupLine,The following statement contains a magic number: foreach (string pointData in node.GetValues("vertex")) {  					string[] tokens = pointData.Split(''');  					if (tokens.Length != 2)  						throw new ArgumentException("Incorrect vertex format.");  					double x' y;  					if (!(double.TryParse(tokens[0].Trim()' NumberStyles.Any' CultureInfo.InvariantCulture' out x) &&  					    double.TryParse(tokens[1].Trim()' NumberStyles.Any' CultureInfo.InvariantCulture' out y)))  						throw new ArgumentException("Could not parse a vertex position.");  					if (x > 180d || x < -180d || y > 90d || y < -90d)  						throw new ArgumentException("Vertex positions must be in degrees appropriate to longitude and latitude.");  					points.Add(new Vector2d(x' y));  				}
Missing Default,SCANsatRPM,JSISCANsatRPM,C:\repos\Mihara_RasterPropMonitor\SCANsatRPM\JSISCANsatRPM.cs,DrawOrbitIcon,The following switch statement is missing a default case: switch (iconType) {  				case MapIcons.OtherIcon.AP:  					timePoint += thatVessel.orbit.timeToAp;  					break;  				case MapIcons.OtherIcon.PE:  					timePoint += thatVessel.orbit.timeToPe;  					break;  				case MapIcons.OtherIcon.AN:  				case MapIcons.OtherIcon.DN:  				case MapIcons.OtherIcon.NODE:  					timePoint = givenPoint;  					break;  			}
