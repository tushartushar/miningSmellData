Implementation smell,Namespace,Class,File,Method,Description
Long Method,MechJebRPM,MechJebRPM,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPM.cs,UpdateRootMenu,The method has 153 lines of code.
Complex Method,MechJebRPM,MechJebRPM,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPM.cs,ShowMenu,Cyclomatic complexity of the method is 8
Complex Method,MechJebRPM,MechJebRPM,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPM.cs,ClickProcessor,Cyclomatic complexity of the method is 10
Complex Method,MechJebRPM,MechJebRPM,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPM.cs,UpdateRootMenu,Cyclomatic complexity of the method is 20
Complex Method,MechJebRPM,MechJebRPMButtons,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPMButtons.cs,ButtonPlotHohmannTransferState,Cyclomatic complexity of the method is 10
Long Statement,MechJebRPM,MechJebRPM,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPM.cs,GetActiveMode,The length of the statement  "                return MechJebModuleSmartASS.ModeTexts[(int)MechJebModuleSmartASS.Target2Mode[(int)activeSmartass.target]] + " " + MechJebModuleSmartASS.TargetTexts[(int)activeSmartass.target].Replace('\n'' ' '); " is 196.
Long Statement,MechJebRPM,MechJebRPM,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPM.cs,Start,The length of the statement  "                topMenu.Add(new TextMenu.Item(MechJebModuleSmartASS.TargetTexts[(int)MechJebModuleSmartASS.Target.KILLROT].Replace('\n'' ' ')' SmartASS_KillRot)); " is 146.
Long Statement,MechJebRPM,MechJebRPM,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPM.cs,Start,The length of the statement  "                nodeMenuItem = new TextMenu.Item(MechJebModuleSmartASS.TargetTexts[(int)MechJebModuleSmartASS.Target.NODE]' SmartASS_Node); " is 123.
Long Statement,MechJebRPM,MechJebRPM,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPM.cs,Start,The length of the statement  "                targetMenuItem = new TextMenu.Item(MechJebModuleSmartASS.ModeTexts[(int)MechJebModuleSmartASS.Mode.TARGET]' TargetMenu); " is 120.
Long Statement,MechJebRPM,MechJebRPM,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPM.cs,Start,The length of the statement  "                forceRollMenuItem = new TextMenu.Item(String.Format("Force Roll: {0:f0}"' (activeSmartass != null) ? (double)activeSmartass.rol : 0.0)' ToggleForceRoll); " is 153.
Long Statement,MechJebRPM,MechJebRPM,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPM.cs,UpdateRootMenu,The length of the statement  "            forceRollMenuItem.labelText = String.Format("Force Roll: {0:+0;-0;0}"' (activeSmartass != null) ? (double)activeSmartass.rol : 0.0); " is 132.
Long Statement,MechJebRPM,MechJebRPM,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPM.cs,UpdateOrbitalMenu,The length of the statement  "            activeMenu.menuTitle = "== " + MechJebModuleSmartASS.ModeTexts[(int)MechJebModuleSmartASS.Mode.ORBITAL] + " Menu: " + GetActiveMode(); " is 134.
Long Statement,MechJebRPM,MechJebRPM,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPM.cs,UpdateSurfaceMenu,The length of the statement  "            activeMenu.menuTitle = "== " + MechJebModuleSmartASS.ModeTexts[(int)MechJebModuleSmartASS.Mode.SURFACE] + " Menu: " + GetActiveMode(); " is 134.
Long Statement,MechJebRPM,MechJebRPM,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPM.cs,UpdateTargetMenu,The length of the statement  "            activeMenu.menuTitle = "== " + MechJebModuleSmartASS.ModeTexts[(int)MechJebModuleSmartASS.Mode.TARGET] + " Menu: " + GetActiveMode(); " is 133.
Long Statement,MechJebRPM,MechJebRPMButtons,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPMButtons.cs,ButtonPlotHohmannTransfer,The length of the statement  "                OrbitalManeuverCalculator.DeltaVAndTimeForInterplanetaryTransferEjection(o' UT' activeJeb.target.TargetOrbit' true' out UT); " is 124.
Long Statement,MechJebRPM,MechJebRPMButtons,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPMButtons.cs,ButtonPlotHohmannTransferState,The length of the statement  "                if (o.RelativeInclination(activeJeb.target.TargetOrbit) > 30.0 && o.RelativeInclination(activeJeb.target.TargetOrbit) < 150.0) " is 126.
Long Statement,MechJebRPM,MechJebRPMButtons,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPMButtons.cs,ButtonRendezvousAutopilot,The length of the statement  "            if (autopilot != null && activeJeb.target.NormalTargetExists && activeJeb.target.TargetOrbit.referenceBody == vessel.orbit.referenceBody) " is 137.
Magic Number,MechJebRPM,MechJebRPM,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPM.cs,ClickProcessor,The following statement contains a magic number: currentRoll -= 360.0;
Magic Number,MechJebRPM,MechJebRPM,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPM.cs,ClickProcessor,The following statement contains a magic number: currentRoll > 180.0
Magic Number,MechJebRPM,MechJebRPM,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPM.cs,ClickProcessor,The following statement contains a magic number: currentMenu == MJMenu.RootMenu && activeMenu.currentSelection == 5 && activeSmartass != null
Magic Number,MechJebRPM,MechJebRPM,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPM.cs,DoCircularize,The following statement contains a magic number: switch (tmi.id)              {                  case (int)TimeReference.APOAPSIS:                      UT = o.NextApoapsisTime(Planetarium.GetUniversalTime());                      dV = OrbitalManeuverCalculator.DeltaVToCircularize(o' UT);                      break;                  case (int)TimeReference.PERIAPSIS:                      UT = o.NextPeriapsisTime(Planetarium.GetUniversalTime());                      dV = OrbitalManeuverCalculator.DeltaVToCircularize(o' UT);                      break;                  case (int)TimeReference.X_FROM_NOW:                      UT = Planetarium.GetUniversalTime() + 15.0;                      dV = OrbitalManeuverCalculator.DeltaVToCircularize(o' UT);                      break;              }
Magic Number,MechJebRPM,MechJebRPMButtons,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPMButtons.cs,ButtonPlotHohmannTransferState,The following statement contains a magic number: o.eccentricity > 0.2
Magic Number,MechJebRPM,MechJebRPMButtons,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPMButtons.cs,ButtonPlotHohmannTransferState,The following statement contains a magic number: o.RelativeInclination(activeJeb.target.TargetOrbit) > 30.0 && o.RelativeInclination(activeJeb.target.TargetOrbit) < 150.0
Magic Number,MechJebRPM,MechJebRPMButtons,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPMButtons.cs,ButtonPlotHohmannTransferState,The following statement contains a magic number: o.RelativeInclination(activeJeb.target.TargetOrbit) > 30.0 && o.RelativeInclination(activeJeb.target.TargetOrbit) < 150.0
Magic Number,MechJebRPM,MechJebRPMButtons,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPMButtons.cs,ButtonForceRoll90,The following statement contains a magic number: activeSmartass.rol = 90.0;
Magic Number,MechJebRPM,MechJebRPMButtons,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPMButtons.cs,ButtonForceRoll90State,The following statement contains a magic number: return (activeSmartass != null && activeSmartass.forceRol && (double)activeSmartass.rol == 90.0);
Magic Number,MechJebRPM,MechJebRPMButtons,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPMButtons.cs,ButtonForceRoll180,The following statement contains a magic number: activeSmartass.rol = 180.0;
Magic Number,MechJebRPM,MechJebRPMButtons,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPMButtons.cs,ButtonForceRoll180State,The following statement contains a magic number: return (activeSmartass != null && activeSmartass.forceRol && (double)activeSmartass.rol == 180.0);
Magic Number,MechJebRPM,MechJebRPMButtons,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPMButtons.cs,ButtonForceRoll270,The following statement contains a magic number: activeSmartass.rol = -90.0;
Magic Number,MechJebRPM,MechJebRPMButtons,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPMButtons.cs,ButtonForceRoll270State,The following statement contains a magic number: return (activeSmartass != null && activeSmartass.forceRol && (double)activeSmartass.rol == -90.0);
Missing Default,MechJebRPM,MechJebRPM,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPM.cs,ShowMenu,The following switch statement is missing a default case: switch (currentMenu)                  {                      case MJMenu.RootMenu:                          UpdateRootMenu();                          break;                      case MJMenu.OrbitMenu:                          UpdateOrbitalMenu();                          break;                      case MJMenu.SurfaceMenu:                          UpdateSurfaceMenu();                          break;                      case MJMenu.TargetMenu:                          UpdateTargetMenu();                          break;                      case MJMenu.CircularizeMenu:                          UpdateCircularizeMenu();                          break;                  }
Missing Default,MechJebRPM,MechJebRPM,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPM.cs,DoCircularize,The following switch statement is missing a default case: switch (tmi.id)              {                  case (int)TimeReference.APOAPSIS:                      UT = o.NextApoapsisTime(Planetarium.GetUniversalTime());                      dV = OrbitalManeuverCalculator.DeltaVToCircularize(o' UT);                      break;                  case (int)TimeReference.PERIAPSIS:                      UT = o.NextPeriapsisTime(Planetarium.GetUniversalTime());                      dV = OrbitalManeuverCalculator.DeltaVToCircularize(o' UT);                      break;                  case (int)TimeReference.X_FROM_NOW:                      UT = Planetarium.GetUniversalTime() + 15.0;                      dV = OrbitalManeuverCalculator.DeltaVToCircularize(o' UT);                      break;              }
Missing Default,MechJebRPM,MechJebRPM,D:\research\architectureSmells\repos\Mihara_RasterPropMonitor\MechJebRPM\MechJebRPM.cs,SelectTarget,The following switch statement is missing a default case: switch (currentMenu)              {                  case MJMenu.OrbitMenu:                      activeTargets = orbitalTargets;                      break;                  case MJMenu.SurfaceMenu:                      activeTargets = surfaceTargets;                      break;                  case MJMenu.TargetMenu:                      activeTargets = targetTargets;                      break;              }
