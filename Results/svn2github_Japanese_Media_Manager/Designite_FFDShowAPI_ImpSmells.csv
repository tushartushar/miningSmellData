Implementation smell,Namespace,Class,File,Method,Description
Complex Method,FFDShowAPI,FFDShowAPI,C:\repos\svn2github_Japanese_Media_Manager\animeplugin3\FFDShowAPI\FFDShowAPI.cs,parseStreamsString,Cyclomatic complexity of the method is 9
Complex Method,FFDShowAPI,FFDShowAPI,C:\repos\svn2github_Japanese_Media_Manager\animeplugin3\FFDShowAPI\FFDShowAPI.cs,init,Cyclomatic complexity of the method is 26
Long Parameter List,FFDShowAPI.Interfaces,IAMStreamSelect,C:\repos\svn2github_Japanese_Media_Manager\animeplugin3\FFDShowAPI\Interfaces\DirectShow.cs,Info,The method has 8 parameters.
Long Parameter List,FFDShowAPI.Interfaces,IffdshowDec,C:\repos\svn2github_Japanese_Media_Manager\animeplugin3\FFDShowAPI\Interfaces\IffdshowDec.cs,getPresetAutoloadItemInfo,The method has 10 parameters.
Long Statement,FFDShowAPI,FFDShowAPI,C:\repos\svn2github_Japanese_Media_Manager\animeplugin3\FFDShowAPI\FFDShowAPI.cs,getCustomParam,The length of the statement  "	Win32.SendMessageTimeout (new IntPtr (ffDShowInstanceHandle)' (int)type' receiver.Handle' new IntPtr ((int)param)' Win32.SendMessageTimeoutFlags.SMTO_ABORTIFHUNG' requestTimeout' out ret); " is 188.
Long Statement,FFDShowAPI,FFDShowAPI,C:\repos\svn2github_Japanese_Media_Manager\animeplugin3\FFDShowAPI\FFDShowAPI.cs,setStringParam,The length of the statement  "	Win32.SendMessageTimeout (new IntPtr (ffDShowInstanceHandle)' (int)Win32.WM_COPYDATA' receiver.Handle' ref cd' Win32.SendMessageTimeoutFlags.SMTO_ABORTIFHUNG' (int)requestTimeout' out returnedValue); " is 199.
Complex Conditional,FFDShowAPI,FFDShowAPI,C:\repos\svn2github_Japanese_Media_Manager\animeplugin3\FFDShowAPI\FFDShowAPI.cs,FFDShowAPI,The conditional expression  "ffdshowDec == null || ffDecoder == null || ffdshowDecVideo == null || ffdshowBase == null"  is complex.
Empty Catch Block,FFDShowAPI,FFDShowReceiver,C:\repos\svn2github_Japanese_Media_Manager\animeplugin3\FFDShowAPI\FFDShowReceiver.cs,WndProc,The method has an empty catch block.
Empty Catch Block,FFDShowAPI,FFDShowAPI,C:\repos\svn2github_Japanese_Media_Manager\animeplugin3\FFDShowAPI\FFDShowAPI.cs,init,The method has an empty catch block.
Empty Catch Block,FFDShowAPI,FFDShowAPI,C:\repos\svn2github_Japanese_Media_Manager\animeplugin3\FFDShowAPI\FFDShowAPI.cs,getCustomParam,The method has an empty catch block.
Magic Number,FFDShowAPI,FFDShowAPI,C:\repos\svn2github_Japanese_Media_Manager\animeplugin3\FFDShowAPI\FFDShowAPI.cs,getFrameRate,The following statement contains a magic number: return (float)fps1000 / 1000;  
Magic Number,FFDShowAPI,FFDShowAPI,C:\repos\svn2github_Japanese_Media_Manager\animeplugin3\FFDShowAPI\FFDShowAPI.cs,captureJPGPicture,The following statement contains a magic number: if (playState == PlayState.PauseState) {  	startVideo ();  	Thread.Sleep (600);  	pauseVideo ();  }  else  	Thread.Sleep (600);  
Magic Number,FFDShowAPI,FFDShowAPI,C:\repos\svn2github_Japanese_Media_Manager\animeplugin3\FFDShowAPI\FFDShowAPI.cs,captureJPGPicture,The following statement contains a magic number: if (playState == PlayState.PauseState) {  	startVideo ();  	Thread.Sleep (600);  	pauseVideo ();  }  else  	Thread.Sleep (600);  
Magic Number,FFDShowAPI,FFDShowAPI,C:\repos\svn2github_Japanese_Media_Manager\animeplugin3\FFDShowAPI\FFDShowAPI.cs,captureJPGPicture,The following statement contains a magic number: Thread.Sleep (600);  
Magic Number,FFDShowAPI,FFDShowAPI,C:\repos\svn2github_Japanese_Media_Manager\animeplugin3\FFDShowAPI\FFDShowAPI.cs,captureJPGPicture,The following statement contains a magic number: Thread.Sleep (600);  
Missing Default,FFDShowAPI,FFDShowAPI,C:\repos\svn2github_Japanese_Media_Manager\animeplugin3\FFDShowAPI\FFDShowAPI.cs,init,The following switch statement is missing a default case: switch (fileNameMode) {  case FileNameMode.FullPath:  	if (fileName.Equals (FFDShowFileName)) {  		ffDShowInstanceHandle = localFFDShowInstanceHandle;  		return (IsFFDShowActive = true);  	}  	break;  case FileNameMode.FileName:  	fileInfo = new FileInfo (FFDShowFileName);  	if (fileName.Equals (fileInfo.Name)) {  		ffDShowInstanceHandle = localFFDShowInstanceHandle;  		return (IsFFDShowActive = true);  	}  	break;  case FileNameMode.FileNameWithoutExtension:  	fileInfo = new FileInfo (FFDShowFileName);  	string formattedFileName = fileInfo.Name;  	if (formattedFileName.LastIndexOf ('.') != -1)  		formattedFileName = formattedFileName.Substring (0' formattedFileName.LastIndexOf ('.'));  	if (fileName.Equals (formattedFileName)) {  		ffDShowInstanceHandle = localFFDShowInstanceHandle;  		return (IsFFDShowActive = true);  	}  	break;  }  
