Implementation smell,Namespace,Class,File,Method,Description
Complex Method,EntityFramework.Test.Reflection,DelegateFactoryTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Reflection\DelegateFactoryTest.cs,CreateSetProperty,Cyclomatic complexity of the method is 9
Long Statement,EntityFramework.Test.Reflection,DelegateFactoryTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Reflection\DelegateFactoryTest.cs,CreateGetProperty,The length of the statement  "            var properties = typeof(TestClass).GetProperties(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Static | BindingFlags.Instance); " is 141.
Long Statement,EntityFramework.Test.Reflection,DelegateFactoryTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Reflection\DelegateFactoryTest.cs,CreateGetPropertyValueType,The length of the statement  "            var properties = typeof(StructureClass).GetProperties(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Static | BindingFlags.Instance); " is 146.
Long Statement,EntityFramework.Test.Reflection,DelegateFactoryTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Reflection\DelegateFactoryTest.cs,CreateGetField,The length of the statement  "            var fieldInfos = typeof(TestClass).GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Static | BindingFlags.Instance); " is 137.
Long Statement,EntityFramework.Test.Reflection,DelegateFactoryTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Reflection\DelegateFactoryTest.cs,CreateGetFieldStructure,The length of the statement  "            var fieldInfos = typeof(StructureClass).GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Static | BindingFlags.Instance); " is 142.
Long Statement,EntityFramework.Test.Reflection,DelegateFactoryTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Reflection\DelegateFactoryTest.cs,CreateSetProperty,The length of the statement  "            var properties = typeof(TestClass).GetProperties(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Static | BindingFlags.Instance); " is 141.
Long Statement,EntityFramework.Test.Reflection,DelegateFactoryTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Reflection\DelegateFactoryTest.cs,CreateSetField,The length of the statement  "            var fieldInfos = typeof(TestClass).GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Static | BindingFlags.Instance); " is 137.
Magic Number,EntityFramework.Test.Caching,CacheKeyTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Caching\CacheKeyTest.cs,TagsTest,The following statement contains a magic number: target.Tags.Should().HaveCount(2);
Magic Number,EntityFramework.Test.Caching,CachePolicyTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Caching\CachePolicyTest.cs,WithAbsoluteExpirationTest,The following statement contains a magic number: var absoluteExpiration = new DateTimeOffset(2012' 1' 1' 12' 0' 0' TimeSpan.Zero);
Magic Number,EntityFramework.Test.Caching,CachePolicyTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Caching\CachePolicyTest.cs,WithAbsoluteExpirationTest,The following statement contains a magic number: var absoluteExpiration = new DateTimeOffset(2012' 1' 1' 12' 0' 0' TimeSpan.Zero);
Magic Number,EntityFramework.Test.Caching,CachePolicyTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Caching\CachePolicyTest.cs,WithSlidingExpirationTest,The following statement contains a magic number: TimeSpan slidingExpiration = TimeSpan.FromMinutes(5);
Magic Number,EntityFramework.Test.Caching,CachePolicyTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Caching\CachePolicyTest.cs,WithDurationExpirationTest,The following statement contains a magic number: TimeSpan expirationSpan = TimeSpan.FromSeconds(30);
Magic Number,EntityFramework.Test.Caching,MemoryCacheProviderTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Caching\MemoryCacheProviderTest.cs,ExpireTest,The following statement contains a magic number: cache.GetCount().Should().Be(6);
Magic Number,EntityFramework.Test.Caching,MemoryCacheProviderTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Caching\MemoryCacheProviderTest.cs,ExpireTest,The following statement contains a magic number: System.Threading.Thread.Sleep(500);
Magic Number,EntityFramework.Test.Caching,MemoryCacheProviderTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Caching\MemoryCacheProviderTest.cs,ExpireTest,The following statement contains a magic number: cache.GetCount().Should().Be(4);
Magic Number,EntityFramework.Test.Caching,MemoryCacheProviderTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Caching\MemoryCacheProviderTest.cs,CreateChangeMonitorTest,The following statement contains a magic number: monitor.CacheKeys.Should().HaveCount(2);
Magic Number,EntityFramework.Test.Caching,MemoryCacheProviderTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Caching\MemoryCacheProviderTest.cs,CreatePolicyAbsoluteTest,The following statement contains a magic number: var absoluteExpiration = DateTimeOffset.Now.AddMinutes(5);
Magic Number,EntityFramework.Test.Caching,MemoryCacheProviderTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Caching\MemoryCacheProviderTest.cs,CreatePolicySlidingTest,The following statement contains a magic number: var slidingExpiration = TimeSpan.FromMinutes(5);
Magic Number,EntityFramework.Test,CacheManagerTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Caching\CacheManagerTest.cs,ExpireTest,The following statement contains a magic number: System.Threading.Thread.Sleep(500);
Magic Number,EntityFramework.Test.Reflection,DelegateFactoryTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Reflection\DelegateFactoryTest.cs,CreateGetProperty,The following statement contains a magic number: var testClass = new TestClass              {                  Age = 21'                  FirstName = "John"'                  Internal = "test"'                  LastName = "Doe"'                  PrivateGet = "Private Get"              };
Magic Number,EntityFramework.Test.Reflection,DelegateFactoryTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Reflection\DelegateFactoryTest.cs,CreateGetPropertyValueType,The following statement contains a magic number: var testClass = new StructureClass              {                  Age = 21'                  FirstName = "John"'                  Internal = "test"'                  LastName = "Doe"'                  PrivateGet = "Private Get"              };
Magic Number,EntityFramework.Test.Reflection,DelegateFactoryTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Reflection\DelegateFactoryTest.cs,CreateGetField,The following statement contains a magic number: var testClass = new TestClass              {                  Age = 21'                  FirstName = "John"'                  Internal = "test"'                  LastName = "Doe"'                  PrivateGet = "Private Get"              };
Magic Number,EntityFramework.Test.Reflection,DelegateFactoryTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Reflection\DelegateFactoryTest.cs,CreateGetFieldStructure,The following statement contains a magic number: var testClass = new StructureClass              {                  Age = 21'                  FirstName = "John"'                  Internal = "test"'                  LastName = "Doe"'                  PrivateGet = "Private Get"              };
Magic Number,EntityFramework.Test.Reflection,DelegateFactoryTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Reflection\DelegateFactoryTest.cs,CreateSetProperty,The following statement contains a magic number: switch (propertyInfo.Name)                  {                      case "LastName":                          value = "Doe";                          break;                      case "Age":                          value = 21;                          break;                      case "PrivateSet":                          value = "Private Set";                          break;                      case "PrivateGet":                          value = "Private Get";                          break;                      case "Internal":                          value = "test";                          break;                      case "IsStatic":                          value = true;                          break;                      case "StaticName":                          value = "CreateSetProperty";                          break;                      case "FirstName":                          value = "John";                          break;                  }
Magic Number,EntityFramework.Test.Reflection,DelegateFactoryTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Reflection\DelegateFactoryTest.cs,CreateSetProperty,The following statement contains a magic number: Assert.Equal(21' testClass.Age);
Magic Number,EntityFramework.Test.Reflection,DelegateFactoryTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Reflection\DelegateFactoryTest.cs,CreateSetField,The following statement contains a magic number: switch (fieldInfo.Name)                  {                      case "fieldAge":                          value = 21;                          break;                      case "fieldIsStatic":                          value = true;                          break;                      case "fieldStaticKey":                          value = "Static";                          break;                      case "fieldName":                          value = "John Doe";                          break;                      default:                          continue;                  }
Magic Number,EntityFramework.Test.Reflection,DelegateFactoryTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Reflection\DelegateFactoryTest.cs,PublicMethods,The following statement contains a magic number: parameters = new object[] { "Test"' 2 };
Magic Number,EntityFramework.Test.Reflection,DelegateFactoryTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Reflection\DelegateFactoryTest.cs,PublicMethods,The following statement contains a magic number: parameters = new object[] { "Test"' 2 };
Magic Number,EntityFramework.Test.Reflection,DelegateFactoryTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Reflection\DelegateFactoryTest.cs,PrivateMethods,The following statement contains a magic number: parameters = new object[] { "Test"' 2 };
Magic Number,EntityFramework.Test.Reflection,DelegateFactoryTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Reflection\DelegateFactoryTest.cs,PrivateMethods,The following statement contains a magic number: parameters = new object[] { "Test"' 2 };
Magic Number,EntityFramework.Test.Reflection,StructureClass,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Reflection\DelegateFactoryTest.cs,Defaults,The following statement contains a magic number: fieldAge = 21;
Missing Default,EntityFramework.Test.Reflection,DelegateFactoryTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\EntityFramework.Extended.Test\Reflection\DelegateFactoryTest.cs,CreateSetProperty,The following switch statement is missing a default case: switch (propertyInfo.Name)                  {                      case "LastName":                          value = "Doe";                          break;                      case "Age":                          value = 21;                          break;                      case "PrivateSet":                          value = "Private Set";                          break;                      case "PrivateGet":                          value = "Private Get";                          break;                      case "Internal":                          value = "test";                          break;                      case "IsStatic":                          value = true;                          break;                      case "StaticName":                          value = "CreateSetProperty";                          break;                      case "FirstName":                          value = "John";                          break;                  }
