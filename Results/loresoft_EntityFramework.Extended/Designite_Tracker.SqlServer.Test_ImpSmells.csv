Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Tracker.SqlServer.Test,AuditTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\AuditTest.cs,LogWithNullableRelationWithoutValueAndAllreadyLoadedRelation,The length of the statement  "            var relation = entries.First().RelationshipManager.GetRelatedReference<Priority>("Tracker.SqlServer.CodeFirst.Task_Priority"' "Task_Priority_Target"); " is 150.
Long Statement,Tracker.SqlServer.Test,BatchDbContext,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\BatchDbContext.cs,DeleteWhereWithExpressionContainingNullParameter,The length of the statement  "            // This test verifies that the delete is processed correctly when the where expression uses a parameter with a null parameter " is 125.
Long Statement,Tracker.SqlServer.Test,BatchDbContext,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\BatchDbContext.cs,DeleteWhereWithExpressionContainingNullParameter,The length of the statement  "                .Where(u => u.EmailAddress.EndsWith(emailDomain) && (string.IsNullOrEmpty(optionalComparisonString) || u.AvatarType == optionalComparisonString)) " is 145.
Long Statement,Tracker.SqlServer.Test,BatchDbContext,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\BatchDbContext.cs,UpdateWithExpressionContainingNullParameter,The length of the statement  "            // This test verifies that the update is interpreted correctly when the where expression uses a parameter with a null parameter " is 127.
Long Statement,Tracker.SqlServer.Test,BatchDbContext,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\BatchDbContext.cs,UpdateWithExpressionContainingNullParameter,The length of the statement  "                .Where(u => u.EmailAddress.EndsWith(emailDomain) && (string.IsNullOrEmpty(optionalComparisonString) || u.AvatarType == optionalComparisonString)) " is 145.
Long Statement,Tracker.SqlServer.Test,BatchObjectContext,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\BatchObjectContext.cs,DeleteWhereWithExpressionContainingNullParameter,The length of the statement  "            // This test verifies that the delete is processed correctly when the where expression uses a parameter with a null parameter " is 125.
Long Statement,Tracker.SqlServer.Test,BatchObjectContext,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\BatchObjectContext.cs,DeleteWhereWithExpressionContainingNullParameter,The length of the statement  "                .Where(u => (string.IsNullOrEmpty(optionalComparisonString) || u.AvatarType == optionalComparisonString) && u.EmailAddress.EndsWith(emailDomain)) " is 145.
Long Statement,Tracker.SqlServer.Test,BatchObjectContext,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\BatchObjectContext.cs,UpdateWithExpressionContainingNullParameter,The length of the statement  "            // This test verifies that the update is interpreted correctly when the where expression uses a parameter with a null parameter " is 127.
Long Statement,Tracker.SqlServer.Test,BatchObjectContext,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\BatchObjectContext.cs,UpdateWithExpressionContainingNullParameter,The length of the statement  "                .Where(u => u.EmailAddress.EndsWith(emailDomain) && (string.IsNullOrEmpty(optionalComparisonString) || u.AvatarType == optionalComparisonString)) " is 145.
Magic Number,Tracker.SqlServer.Test,AuditTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\AuditTest.cs,CreateLogFormatWith,The following statement contains a magic number: var task = new Task()              {                  AssignedId = 1'                  CreatedId = 1'                  StatusId = 1'                  PriorityId = 2'                  Summary = "Summary: " + DateTime.Now.Ticks              };
Magic Number,Tracker.SqlServer.Test,AuditTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\AuditTest.cs,CreateLogFormatWith,The following statement contains a magic number: task2.PriorityId = 2;
Magic Number,Tracker.SqlServer.Test,AuditTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\AuditTest.cs,CreateLogFormatWith,The following statement contains a magic number: task2.StatusId = 2;
Magic Number,Tracker.SqlServer.Test,AuditTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\AuditTest.cs,CreateLogLoaded,The following statement contains a magic number: var newTask = new Task()              {                  AssignedId = 1'                  CreatedId = 1'                  StatusId = 1'                  PriorityId = 2'                  Summary = "Summary: " + DateTime.Now.Ticks              };
Magic Number,Tracker.SqlServer.Test,AuditTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\AuditTest.cs,CreateLogLoaded,The following statement contains a magic number: var p = db.Priorities.Find(2);
Magic Number,Tracker.SqlServer.Test,AuditTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\AuditTest.cs,CreateLogLoaded,The following statement contains a magic number: updateTask.StatusId = 2;
Magic Number,Tracker.SqlServer.Test,AuditTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\AuditTest.cs,CreateLog,The following statement contains a magic number: var task = new Task()              {                  AssignedId = 1'                  CreatedId = 1'                  StatusId = 1'                  PriorityId = 2'                  Summary = "Summary: " + DateTime.Now.Ticks              };
Magic Number,Tracker.SqlServer.Test,AuditTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\AuditTest.cs,CreateLog,The following statement contains a magic number: task2.PriorityId = 2;
Magic Number,Tracker.SqlServer.Test,AuditTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\AuditTest.cs,CreateLog,The following statement contains a magic number: task2.StatusId = 2;
Magic Number,Tracker.SqlServer.Test,AuditTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\AuditTest.cs,CreateLog2,The following statement contains a magic number: task.PriorityId = 2;
Magic Number,Tracker.SqlServer.Test,AuditTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\AuditTest.cs,CreateLog2,The following statement contains a magic number: task.StatusId = 2;
Magic Number,Tracker.SqlServer.Test,AuditTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\AuditTest.cs,MaintainAcrossSaves,The following statement contains a magic number: var task = new Task()              {                  AssignedId = 1'                  StatusId = 1'                  PriorityId = 2'                  Summary = "Summary: " + DateTime.Now.Ticks'                  CreatedId = 1'                  CreatedDate = DateTime.Now'                  ModifiedDate = DateTime.Now              };
Magic Number,Tracker.SqlServer.Test,AuditTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\AuditTest.cs,MaintainAcrossSaves,The following statement contains a magic number: Assert.Equal(2' audit.LastLog.Entities.Count);
Magic Number,Tracker.SqlServer.Test,AuditTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\AuditTest.cs,MaintainAcrossSaves,The following statement contains a magic number: task2.PriorityId = 2;
Magic Number,Tracker.SqlServer.Test,AuditTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\AuditTest.cs,MaintainAcrossSaves,The following statement contains a magic number: task2.StatusId = 2;
Magic Number,Tracker.SqlServer.Test,AuditTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\AuditTest.cs,MaintainAcrossSaves,The following statement contains a magic number: Assert.Equal(3' audit.LastLog.Entities.Count);
Magic Number,Tracker.SqlServer.Test,AuditTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\AuditTest.cs,CompareXml,The following statement contains a magic number: var task = new Task()              {                  AssignedId = 1'                  CreatedId = 1'                  StatusId = 1'                  PriorityId = 2'                  Summary = "Summary: " + DateTime.Now.Ticks              };
Magic Number,Tracker.SqlServer.Test,AuditTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\AuditTest.cs,CompareXml,The following statement contains a magic number: task2.PriorityId = 2;
Magic Number,Tracker.SqlServer.Test,AuditTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\AuditTest.cs,CompareXml,The following statement contains a magic number: task2.StatusId = 2;
Magic Number,Tracker.SqlServer.Test,AuditTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\AuditTest.cs,LogWithNullableRelations,The following statement contains a magic number: var task = new Task()              {                  AssignedId = 1'                  StatusId = 1'                  PriorityId = 2'                  Summary = "Summary: " + DateTime.Now.Ticks'                  CreatedId = 1'                  CreatedDate = DateTime.Now'                  ModifiedDate = DateTime.Now'                };
Magic Number,Tracker.SqlServer.Test,AuditTest,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\AuditTest.cs,LogWithNullableRelations,The following statement contains a magic number: task.PriorityId = 2;
Magic Number,Tracker.SqlServer.Test,CacheDbContext,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\CacheDbContext.cs,TaskFromCacheTest,The following statement contains a magic number: var tasks = db.Tasks                  .Where(t => t.AssignedId == myUserId && t.CompleteDate == null)                  .FromCache(CachePolicy.WithDurationExpiration(TimeSpan.FromSeconds(300)));
Magic Number,Tracker.SqlServer.Test,FutureDbContext,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\FutureDbContext.cs,PageTest,The following statement contains a magic number: var q = db.Tasks                  .Where(p => p.PriorityId == 2)                  .OrderByDescending(t => t.CreatedDate);
Magic Number,Tracker.SqlServer.Test,FutureDbContext,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\FutureDbContext.cs,PageTest,The following statement contains a magic number: var q2 = q.Skip(0).Take(10).Future();
Magic Number,Tracker.SqlServer.Test,FutureObjectContext,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\FutureObjectContext.cs,PageTest,The following statement contains a magic number: var q = db.Tasks                  .Where(p => p.PriorityId == 2)                  .OrderByDescending(t => t.CreatedDate);
Magic Number,Tracker.SqlServer.Test,FutureObjectContext,D:\research\architectureSmells\repos\loresoft_EntityFramework.Extended\Source\Samples\net45\Tracker.SqlServer.Test\FutureObjectContext.cs,PageTest,The following statement contains a magic number: var q2 = q.Skip(0).Take(10).Future();
