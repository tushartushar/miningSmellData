Implementation smell,Namespace,Class,File,Method,Description
Long Statement,JordyCodeGenerator,SqlServerDatabaseStructure,C:\repos\judypol_JordyLibary\JordyCodeGenerator\SqlServerDatabaseStructure.cs,GetAllTable,The length of the statement  "		string sql = "select t.name tablename's.name schemasName from sys.sysobjects t join sys.schemas s on t.uid=s.schema_id " + "where t.xtype='U' order by s.name't.name"; " is 166.
Long Statement,JordyCodeGenerator,SqlServerDatabaseStructure,C:\repos\judypol_JordyLibary\JordyCodeGenerator\SqlServerDatabaseStructure.cs,GetTableStructure,The length of the statement  "		string sql = "select c.name columnName't.name dataType'c.is_identity from sys.columns c " + "left join sys.types t on " + "c.user_type_id=t.user_type_id where c.[object_id]=object_id('{0}') order by c.column_id"; " is 212.
Magic Number,JordyCodeGenerator,SqliteDataStructure,C:\repos\judypol_JordyLibary\JordyCodeGenerator\SqliteDatabaseStructure.cs,GetTableStructure,The following statement contains a magic number: try {  	Dictionary<string' string> dbTypeMapSysType = DbTypeMapSystemType.DbTypeAndSystemType;  	string sql = "select sql from sqlite_master where name='{0}'";  	sql = string.Format (sql' ti.TableName);  	string sqliteSql = adoHelper.ExecuteScalar<string> (sql);  	int leftIndex = sqliteSql.IndexOf ("(") + 1;  	int rightIndex = sqliteSql.LastIndexOf (")");  	string columnsStr = sqliteSql.Substring (leftIndex' rightIndex - leftIndex);  	string[] columns = columnsStr.Split (''');  	foreach (string item in columns) {  		if (item.Contains ("FOREIGN KEY"))  			//如果是外键则返回  			continue;  		string[] temStrs = item.Trim ().Split (' ');  		if (temStrs.Length < 2) {  			continue;  		}  		string temColName = temStrs [0].TrimEnd (']').TrimStart ('[');  		ColumnInfo ci = new ColumnInfo ();  		ci.ColumnName = temColName.Replace (temColName [0].ToString ()' temColName [0].ToString ().ToUpper ());  		string dataType = temStrs [1];  		if (dataType.Contains ("("))  			dataType = dataType.Substring (0' dataType.IndexOf ('('));  		if (dbTypeMapSysType.ContainsKey (dataType))  			ci.ColumnType = dbTypeMapSysType [dataType];  		else  			ci.ColumnType = "string";  		ci.LitteColumnName = temColName.Replace (temColName [0].ToString ()' temColName [0].ToString ().ToLower ());  		ci.PrivateColumnName = "m" + temColName;  		ci.ID = temStrs.Contains ("PRIMARY");  		ti.ColumnInfoCollection.Add (ci);  	}  }  catch (Exception ex) {  	throw ex;  }  
Magic Number,JordyCodeGenerator,SqliteDataStructure,C:\repos\judypol_JordyLibary\JordyCodeGenerator\SqliteDatabaseStructure.cs,GetTableStructure,The following statement contains a magic number: foreach (string item in columns) {  	if (item.Contains ("FOREIGN KEY"))  		//如果是外键则返回  		continue;  	string[] temStrs = item.Trim ().Split (' ');  	if (temStrs.Length < 2) {  		continue;  	}  	string temColName = temStrs [0].TrimEnd (']').TrimStart ('[');  	ColumnInfo ci = new ColumnInfo ();  	ci.ColumnName = temColName.Replace (temColName [0].ToString ()' temColName [0].ToString ().ToUpper ());  	string dataType = temStrs [1];  	if (dataType.Contains ("("))  		dataType = dataType.Substring (0' dataType.IndexOf ('('));  	if (dbTypeMapSysType.ContainsKey (dataType))  		ci.ColumnType = dbTypeMapSysType [dataType];  	else  		ci.ColumnType = "string";  	ci.LitteColumnName = temColName.Replace (temColName [0].ToString ()' temColName [0].ToString ().ToLower ());  	ci.PrivateColumnName = "m" + temColName;  	ci.ID = temStrs.Contains ("PRIMARY");  	ti.ColumnInfoCollection.Add (ci);  }  
Magic Number,JordyCodeGenerator,SqliteDataStructure,C:\repos\judypol_JordyLibary\JordyCodeGenerator\SqliteDatabaseStructure.cs,GetTableStructure,The following statement contains a magic number: if (temStrs.Length < 2) {  	continue;  }  
Magic Number,JordyCodeGenerator,SqlServerDatabaseStructure,C:\repos\judypol_JordyLibary\JordyCodeGenerator\SqlServerDatabaseStructure.cs,GetTableStructure,The following statement contains a magic number: try {  	Dictionary<string' string> dbTypeMapSysType = DbTypeMapSystemType.DbTypeAndSystemType;  	string sql = "select c.name columnName't.name dataType'c.is_identity from sys.columns c " + "left join sys.types t on " + "c.user_type_id=t.user_type_id where c.[object_id]=object_id('{0}') order by c.column_id";  	sql = string.Format (sql' ti.SchemasTableName);  	DataTable colTable = adoHelper.ExecuteDataTable (sql);  	foreach (DataRow row in colTable.Rows) {  		string temColName = row [0].ToString ();  		ColumnInfo ci = new ColumnInfo ();  		ci.ColumnName = temColName.Replace (temColName [0].ToString ()' temColName [0].ToString ().ToUpper ());  		string dataType = row [1].ToString ();  		if (dataType.Contains ("("))  			dataType = dataType.Substring (0' dataType.IndexOf ('('));  		if (dbTypeMapSysType.ContainsKey (dataType))  			ci.ColumnType = dbTypeMapSysType [dataType];  		else  			ci.ColumnType = "string";  		ci.LitteColumnName = temColName.Replace (temColName [0].ToString ()' temColName [0].ToString ().ToLower ());  		ci.PrivateColumnName = "m" + temColName;  		ci.ID = Convert.ToBoolean (row [2]);  		ti.ColumnInfoCollection.Add (ci);  	}  }  catch (Exception ex) {  	throw ex;  }  
Magic Number,JordyCodeGenerator,SqlServerDatabaseStructure,C:\repos\judypol_JordyLibary\JordyCodeGenerator\SqlServerDatabaseStructure.cs,GetTableStructure,The following statement contains a magic number: foreach (DataRow row in colTable.Rows) {  	string temColName = row [0].ToString ();  	ColumnInfo ci = new ColumnInfo ();  	ci.ColumnName = temColName.Replace (temColName [0].ToString ()' temColName [0].ToString ().ToUpper ());  	string dataType = row [1].ToString ();  	if (dataType.Contains ("("))  		dataType = dataType.Substring (0' dataType.IndexOf ('('));  	if (dbTypeMapSysType.ContainsKey (dataType))  		ci.ColumnType = dbTypeMapSysType [dataType];  	else  		ci.ColumnType = "string";  	ci.LitteColumnName = temColName.Replace (temColName [0].ToString ()' temColName [0].ToString ().ToLower ());  	ci.PrivateColumnName = "m" + temColName;  	ci.ID = Convert.ToBoolean (row [2]);  	ti.ColumnInfoCollection.Add (ci);  }  
Magic Number,JordyCodeGenerator,SqlServerDatabaseStructure,C:\repos\judypol_JordyLibary\JordyCodeGenerator\SqlServerDatabaseStructure.cs,GetTableStructure,The following statement contains a magic number: ci.ID = Convert.ToBoolean (row [2]);  
