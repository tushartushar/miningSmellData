Implementation smell,Namespace,Class,File,Method,Description
Long Statement,OpenGlobe.Examples,DepthBufferPrecision,C:\repos\virtualglobebook_OpenGlobe\Source\Examples\Chapter06\DepthBufferPrecision\DepthBufferPrecision.cs,UpdateFramebufferAttachments,The length of the statement  "            _colorTexture = Device.CreateTexture2D(new Texture2DDescription(_window.Width' _window.Height' TextureFormat.RedGreenBlue8' false)); " is 132.
Long Statement,OpenGlobe.Examples,DepthBufferPrecision,C:\repos\virtualglobebook_OpenGlobe\Source\Examples\Chapter06\DepthBufferPrecision\DepthBufferPrecision.cs,UpdateFramebufferAttachments,The length of the statement  "            _depthTexture = Device.CreateTexture2D(new Texture2DDescription(_window.Width' _window.Height' _depthFormats[_depthFormatIndex]' false)); " is 137.
Long Statement,OpenGlobe.Examples,DepthBufferPrecision,C:\repos\virtualglobebook_OpenGlobe\Source\Examples\Chapter06\DepthBufferPrecision\DepthBufferPrecision.cs,UpdateHUD,The length of the statement  "            text += "Far Plane: " + string.Format(CultureInfo.CurrentCulture' "{0:N}" + " ('f' + up/down)"' _cubeRootFarDistance * _cubeRootFarDistance * _cubeRootFarDistance) + "\n"; " is 171.
Long Statement,OpenGlobe.Examples,DepthBufferPrecision,C:\repos\virtualglobebook_OpenGlobe\Source\Examples\Chapter06\DepthBufferPrecision\DepthBufferPrecision.cs,UpdateHUD,The length of the statement  "            text += "Plane Height: " + string.Format(CultureInfo.CurrentCulture' "{0:N}"' _cubeRootPlaneHeight * _cubeRootPlaneHeight * _cubeRootPlaneHeight) + " ('-'/'+')\n"; " is 163.
Complex Conditional,OpenGlobe.Examples,DepthBufferPrecision,C:\repos\virtualglobebook_OpenGlobe\Source\Examples\Chapter06\DepthBufferPrecision\DepthBufferPrecision.cs,OnKeyDown,The conditional expression  "(e.Key == KeyboardKey.Plus) || (e.Key == KeyboardKey.KeypadPlus) ||                  (e.Key == KeyboardKey.Minus) || (e.Key == KeyboardKey.KeypadMinus)"  is complex.
Virtual Method Call from Constructor,OpenGlobe.Examples,DepthBufferPrecision,C:\repos\virtualglobebook_OpenGlobe\Source\Examples\Chapter06\DepthBufferPrecision\DepthBufferPrecision.cs,DepthBufferPrecision,The constructor "DepthBufferPrecision" calls a virtual method "CreateFramebuffer".
Magic Number,OpenGlobe.Examples,DepthBufferPrecision,C:\repos\virtualglobebook_OpenGlobe\Source\Examples\Chapter06\DepthBufferPrecision\DepthBufferPrecision.cs,DepthBufferPrecision,The following statement contains a magic number: _cubeRootFarDistance = 300;
Magic Number,OpenGlobe.Examples,DepthBufferPrecision,C:\repos\virtualglobebook_OpenGlobe\Source\Examples\Chapter06\DepthBufferPrecision\DepthBufferPrecision.cs,DepthBufferPrecision,The following statement contains a magic number: _window = Device.CreateWindow(800' 600' "Chapter 6:  Depth Buffer Precision");
Magic Number,OpenGlobe.Examples,DepthBufferPrecision,C:\repos\virtualglobebook_OpenGlobe\Source\Examples\Chapter06\DepthBufferPrecision\DepthBufferPrecision.cs,DepthBufferPrecision,The following statement contains a magic number: _window = Device.CreateWindow(800' 600' "Chapter 6:  Depth Buffer Precision");
Magic Number,OpenGlobe.Examples,DepthBufferPrecision,C:\repos\virtualglobebook_OpenGlobe\Source\Examples\Chapter06\DepthBufferPrecision\DepthBufferPrecision.cs,DepthBufferPrecision,The following statement contains a magic number: _globe.NumberOfSlicePartitions = 64;
Magic Number,OpenGlobe.Examples,DepthBufferPrecision,C:\repos\virtualglobebook_OpenGlobe\Source\Examples\Chapter06\DepthBufferPrecision\DepthBufferPrecision.cs,DepthBufferPrecision,The following statement contains a magic number: _globe.NumberOfStackPartitions = 32;
Magic Number,OpenGlobe.Examples,DepthBufferPrecision,C:\repos\virtualglobebook_OpenGlobe\Source\Examples\Chapter06\DepthBufferPrecision\DepthBufferPrecision.cs,DepthBufferPrecision,The following statement contains a magic number: _plane.XAxis = 0.6 * _globeShape.MaximumRadius * Vector3D.UnitX;
Magic Number,OpenGlobe.Examples,DepthBufferPrecision,C:\repos\virtualglobebook_OpenGlobe\Source\Examples\Chapter06\DepthBufferPrecision\DepthBufferPrecision.cs,DepthBufferPrecision,The following statement contains a magic number: _plane.YAxis = 0.6 * _globeShape.MinimumRadius * Vector3D.UnitZ;
Magic Number,OpenGlobe.Examples,DepthBufferPrecision,C:\repos\virtualglobebook_OpenGlobe\Source\Examples\Chapter06\DepthBufferPrecision\DepthBufferPrecision.cs,DepthBufferPrecision,The following statement contains a magic number: _plane.OutlineWidth = 3;
Magic Number,OpenGlobe.Examples,DepthBufferPrecision,C:\repos\virtualglobebook_OpenGlobe\Source\Examples\Chapter06\DepthBufferPrecision\DepthBufferPrecision.cs,DepthBufferPrecision,The following statement contains a magic number: _cubeRootPlaneHeight = 100.0;
Magic Number,OpenGlobe.Examples,DepthBufferPrecision,C:\repos\virtualglobebook_OpenGlobe\Source\Examples\Chapter06\DepthBufferPrecision\DepthBufferPrecision.cs,DepthBufferPrecision,The following statement contains a magic number: _hudFont = new Font("Arial"' 16);
Magic Number,OpenGlobe.Examples,DepthBufferPrecision,C:\repos\virtualglobebook_OpenGlobe\Source\Examples\Chapter06\DepthBufferPrecision\DepthBufferPrecision.cs,OnKeyDown,The following statement contains a magic number: if (e.Key == KeyboardKey.N)              {                  _nKeyDown = true;              }              else if (e.Key == KeyboardKey.F)              {                  _fKeyDown = true;              }              else if (e.Key == KeyboardKey.C)              {                  _cKeyDown = true;              }              else if (_nKeyDown && ((e.Key == KeyboardKey.Up) || (e.Key == KeyboardKey.Down)))              {                  _nearDistance += (e.Key == KeyboardKey.Up) ? 1 : -1;                    UpdatePlanesAndDepthTests();              }              else if (_fKeyDown && ((e.Key == KeyboardKey.Up) || (e.Key == KeyboardKey.Down)))              {                  _cubeRootFarDistance += (e.Key == KeyboardKey.Up) ? 1 : -1;                    UpdatePlanesAndDepthTests();              }              else if ((e.Key == KeyboardKey.Plus) || (e.Key == KeyboardKey.KeypadPlus) ||                  (e.Key == KeyboardKey.Minus) || (e.Key == KeyboardKey.KeypadMinus))              {                  _cubeRootPlaneHeight += ((e.Key == KeyboardKey.Plus) || (e.Key == KeyboardKey.KeypadPlus)) ? 1 : -1;                    UpdatePlaneOrigin();              }              else if ((e.Key == KeyboardKey.Left) || (e.Key == KeyboardKey.Right))              {                  _depthFormatIndex += (e.Key == KeyboardKey.Right) ? 1 : -1;                  if (_depthFormatIndex < 0)                  {                      _depthFormatIndex = 2;                  }                  else if (_depthFormatIndex > 2)                  {                      _depthFormatIndex = 0;                  }                    UpdateFramebufferAttachments();              }              else if (e.Key == KeyboardKey.D)              {                  _depthTestLess = !_depthTestLess;                    UpdatePlanesAndDepthTests();              }              else if (e.Key == KeyboardKey.L)              {                  _logarithmicDepthBuffer = !_logarithmicDepthBuffer;                    UpdateLogarithmicDepthBuffer();              }              else if (_cKeyDown && ((e.Key == KeyboardKey.Up) || (e.Key == KeyboardKey.Down)))              {                  _logarithmicDepthConstant += (e.Key == KeyboardKey.Up) ? 0.1 : -0.1;                    UpdateLogarithmicDepthConstant();              }
Magic Number,OpenGlobe.Examples,DepthBufferPrecision,C:\repos\virtualglobebook_OpenGlobe\Source\Examples\Chapter06\DepthBufferPrecision\DepthBufferPrecision.cs,OnKeyDown,The following statement contains a magic number: if (e.Key == KeyboardKey.N)              {                  _nKeyDown = true;              }              else if (e.Key == KeyboardKey.F)              {                  _fKeyDown = true;              }              else if (e.Key == KeyboardKey.C)              {                  _cKeyDown = true;              }              else if (_nKeyDown && ((e.Key == KeyboardKey.Up) || (e.Key == KeyboardKey.Down)))              {                  _nearDistance += (e.Key == KeyboardKey.Up) ? 1 : -1;                    UpdatePlanesAndDepthTests();              }              else if (_fKeyDown && ((e.Key == KeyboardKey.Up) || (e.Key == KeyboardKey.Down)))              {                  _cubeRootFarDistance += (e.Key == KeyboardKey.Up) ? 1 : -1;                    UpdatePlanesAndDepthTests();              }              else if ((e.Key == KeyboardKey.Plus) || (e.Key == KeyboardKey.KeypadPlus) ||                  (e.Key == KeyboardKey.Minus) || (e.Key == KeyboardKey.KeypadMinus))              {                  _cubeRootPlaneHeight += ((e.Key == KeyboardKey.Plus) || (e.Key == KeyboardKey.KeypadPlus)) ? 1 : -1;                    UpdatePlaneOrigin();              }              else if ((e.Key == KeyboardKey.Left) || (e.Key == KeyboardKey.Right))              {                  _depthFormatIndex += (e.Key == KeyboardKey.Right) ? 1 : -1;                  if (_depthFormatIndex < 0)                  {                      _depthFormatIndex = 2;                  }                  else if (_depthFormatIndex > 2)                  {                      _depthFormatIndex = 0;                  }                    UpdateFramebufferAttachments();              }              else if (e.Key == KeyboardKey.D)              {                  _depthTestLess = !_depthTestLess;                    UpdatePlanesAndDepthTests();              }              else if (e.Key == KeyboardKey.L)              {                  _logarithmicDepthBuffer = !_logarithmicDepthBuffer;                    UpdateLogarithmicDepthBuffer();              }              else if (_cKeyDown && ((e.Key == KeyboardKey.Up) || (e.Key == KeyboardKey.Down)))              {                  _logarithmicDepthConstant += (e.Key == KeyboardKey.Up) ? 0.1 : -0.1;                    UpdateLogarithmicDepthConstant();              }
Magic Number,OpenGlobe.Examples,DepthBufferPrecision,C:\repos\virtualglobebook_OpenGlobe\Source\Examples\Chapter06\DepthBufferPrecision\DepthBufferPrecision.cs,OnKeyDown,The following statement contains a magic number: if (e.Key == KeyboardKey.N)              {                  _nKeyDown = true;              }              else if (e.Key == KeyboardKey.F)              {                  _fKeyDown = true;              }              else if (e.Key == KeyboardKey.C)              {                  _cKeyDown = true;              }              else if (_nKeyDown && ((e.Key == KeyboardKey.Up) || (e.Key == KeyboardKey.Down)))              {                  _nearDistance += (e.Key == KeyboardKey.Up) ? 1 : -1;                    UpdatePlanesAndDepthTests();              }              else if (_fKeyDown && ((e.Key == KeyboardKey.Up) || (e.Key == KeyboardKey.Down)))              {                  _cubeRootFarDistance += (e.Key == KeyboardKey.Up) ? 1 : -1;                    UpdatePlanesAndDepthTests();              }              else if ((e.Key == KeyboardKey.Plus) || (e.Key == KeyboardKey.KeypadPlus) ||                  (e.Key == KeyboardKey.Minus) || (e.Key == KeyboardKey.KeypadMinus))              {                  _cubeRootPlaneHeight += ((e.Key == KeyboardKey.Plus) || (e.Key == KeyboardKey.KeypadPlus)) ? 1 : -1;                    UpdatePlaneOrigin();              }              else if ((e.Key == KeyboardKey.Left) || (e.Key == KeyboardKey.Right))              {                  _depthFormatIndex += (e.Key == KeyboardKey.Right) ? 1 : -1;                  if (_depthFormatIndex < 0)                  {                      _depthFormatIndex = 2;                  }                  else if (_depthFormatIndex > 2)                  {                      _depthFormatIndex = 0;                  }                    UpdateFramebufferAttachments();              }              else if (e.Key == KeyboardKey.D)              {                  _depthTestLess = !_depthTestLess;                    UpdatePlanesAndDepthTests();              }              else if (e.Key == KeyboardKey.L)              {                  _logarithmicDepthBuffer = !_logarithmicDepthBuffer;                    UpdateLogarithmicDepthBuffer();              }              else if (_cKeyDown && ((e.Key == KeyboardKey.Up) || (e.Key == KeyboardKey.Down)))              {                  _logarithmicDepthConstant += (e.Key == KeyboardKey.Up) ? 0.1 : -0.1;                    UpdateLogarithmicDepthConstant();              }
Magic Number,OpenGlobe.Examples,DepthBufferPrecision,C:\repos\virtualglobebook_OpenGlobe\Source\Examples\Chapter06\DepthBufferPrecision\DepthBufferPrecision.cs,OnKeyDown,The following statement contains a magic number: if (e.Key == KeyboardKey.N)              {                  _nKeyDown = true;              }              else if (e.Key == KeyboardKey.F)              {                  _fKeyDown = true;              }              else if (e.Key == KeyboardKey.C)              {                  _cKeyDown = true;              }              else if (_nKeyDown && ((e.Key == KeyboardKey.Up) || (e.Key == KeyboardKey.Down)))              {                  _nearDistance += (e.Key == KeyboardKey.Up) ? 1 : -1;                    UpdatePlanesAndDepthTests();              }              else if (_fKeyDown && ((e.Key == KeyboardKey.Up) || (e.Key == KeyboardKey.Down)))              {                  _cubeRootFarDistance += (e.Key == KeyboardKey.Up) ? 1 : -1;                    UpdatePlanesAndDepthTests();              }              else if ((e.Key == KeyboardKey.Plus) || (e.Key == KeyboardKey.KeypadPlus) ||                  (e.Key == KeyboardKey.Minus) || (e.Key == KeyboardKey.KeypadMinus))              {                  _cubeRootPlaneHeight += ((e.Key == KeyboardKey.Plus) || (e.Key == KeyboardKey.KeypadPlus)) ? 1 : -1;                    UpdatePlaneOrigin();              }              else if ((e.Key == KeyboardKey.Left) || (e.Key == KeyboardKey.Right))              {                  _depthFormatIndex += (e.Key == KeyboardKey.Right) ? 1 : -1;                  if (_depthFormatIndex < 0)                  {                      _depthFormatIndex = 2;                  }                  else if (_depthFormatIndex > 2)                  {                      _depthFormatIndex = 0;                  }                    UpdateFramebufferAttachments();              }              else if (e.Key == KeyboardKey.D)              {                  _depthTestLess = !_depthTestLess;                    UpdatePlanesAndDepthTests();              }              else if (e.Key == KeyboardKey.L)              {                  _logarithmicDepthBuffer = !_logarithmicDepthBuffer;                    UpdateLogarithmicDepthBuffer();              }              else if (_cKeyDown && ((e.Key == KeyboardKey.Up) || (e.Key == KeyboardKey.Down)))              {                  _logarithmicDepthConstant += (e.Key == KeyboardKey.Up) ? 0.1 : -0.1;                    UpdateLogarithmicDepthConstant();              }
Magic Number,OpenGlobe.Examples,DepthBufferPrecision,C:\repos\virtualglobebook_OpenGlobe\Source\Examples\Chapter06\DepthBufferPrecision\DepthBufferPrecision.cs,Main,The following statement contains a magic number: using (DepthBufferPrecision example = new DepthBufferPrecision())              {                  example.Run(30.0);              }
