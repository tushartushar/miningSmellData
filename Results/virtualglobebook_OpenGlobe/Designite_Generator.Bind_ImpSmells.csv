Implementation smell,Namespace,Class,File,Method,Description
Long Method,Bind,MainClass,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Main.cs,Main,The method has 146 lines of code.
Long Method,Bind.GL2,Generator,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\GL2\Generator.cs,ReadEnums,The method has 107 lines of code.
Long Method,Bind.Structures,Type,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Type.cs,Translate,The method has 101 lines of code.
Long Method,Bind.Structures,Function,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Function.cs,CreateBody,The method has 179 lines of code.
Long Method,Bind.Structures,EnumCollection,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Enum.cs,Translate,The method has 117 lines of code.
Complex Method,Bind,MainClass,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Main.cs,Main,Cyclomatic complexity of the method is 26
Complex Method,Bind,Utilities,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Utilities.cs,GetGL2Extension,Cyclomatic complexity of the method is 24
Complex Method,Bind.GL2,Generator,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\GL2\Generator.cs,WriteBindings,Cyclomatic complexity of the method is 8
Complex Method,Bind.GL2,Generator,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\GL2\Generator.cs,WriteEnums,Cyclomatic complexity of the method is 8
Complex Method,Bind.Structures,Type,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Type.cs,Translate,Cyclomatic complexity of the method is 20
Complex Method,Bind.Structures,Function,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Function.cs,ToString,Cyclomatic complexity of the method is 9
Complex Method,Bind.Structures,Function,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Function.cs,WrapParameters,Cyclomatic complexity of the method is 8
Complex Method,Bind.Structures,Function,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Function.cs,CreateBody,Cyclomatic complexity of the method is 29
Complex Method,Bind.Structures,Enum,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Enum.cs,TranslateName,Cyclomatic complexity of the method is 8
Complex Method,Bind.Structures,EnumCollection,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Enum.cs,Translate,Cyclomatic complexity of the method is 27
Complex Method,Bind.Structures,Delegate,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Delegate.cs,TranslateReturnType,Cyclomatic complexity of the method is 8
Complex Method,Bind.Structures,Delegate,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Delegate.cs,TranslateParameters,Cyclomatic complexity of the method is 8
Complex Method,Bind.Structures,Parameter,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Parameter.cs,ToString,Cyclomatic complexity of the method is 14
Complex Method,Bind.Structures,Parameter,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Parameter.cs,Translate,Cyclomatic complexity of the method is 8
Complex Method,Bind.Structures,ParameterCollection,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Parameter.cs,BuildCallStringCache,Cyclomatic complexity of the method is 10
Complex Method,Bind.ES,ESGenerator,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\ES\ESGenerator.cs,ReadDelegates,Cyclomatic complexity of the method is 8
Long Statement,Bind,MainClass,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Main.cs,Main,The length of the statement  "                                Settings.Compatibility |= b[1].ToLower() == "simple_enums" ? Settings.Legacy.NoAdvancedEnumProcessing : Settings.Legacy.None; " is 125.
Long Statement,Bind,MainClass,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Main.cs,Main,The length of the statement  "                                //Settings.Compatibility |= b[1].ToLower().Contains("novoid") ? Settings.Legacy.TurnVoidPointersToIntPtr : Settings.Legacy.None; " is 128.
Long Statement,Bind,MainClass,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Main.cs,Main,The length of the statement  "                                Settings.Compatibility |= b[1].ToLower() == "permutations" ? Settings.Legacy.GenerateAllPermutations : Settings.Legacy.None; " is 124.
Long Statement,Bind,MainClass,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Main.cs,Main,The length of the statement  "                                Settings.Compatibility |= b[1].ToLower() == "keep_untyped_enums" ? Settings.Legacy.KeepUntypedEnums : Settings.Legacy.None; " is 123.
Long Statement,Bind.GL2,Generator,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\GL2\Generator.cs,Process,The length of the statement  "            //    new Regex(@"(Coord1|Attrib(I?)1(u?)|Stream1|Uniform2(u?)|(Point|Convolution|Transform|Sprite|List|Combiner|Tex)Parameter|Fog(Coord)?.*|VertexWeight|(Fragment)?Light(Model)?|Material|ReplacementCodeu?b?|Tex(Gen|Env)|Indexu?|TextureParameter.v)"' " is 250.
Long Statement,Bind.GL2,Generator,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\GL2\Generator.cs,WriteDelegates,The length of the statement  "            Trace.WriteLine(String.Format("Writing delegates to:\t{0}.{1}.{2}"' Settings.OutputNamespace' Settings.OutputClass' Settings.DelegatesClass)); " is 142.
Long Statement,Bind.GL2,Generator,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\GL2\Generator.cs,WriteImports,The length of the statement  "            Trace.WriteLine(String.Format("Writing imports to:\t{0}.{1}.{2}"' Settings.OutputNamespace' Settings.OutputClass' Settings.ImportsClass)); " is 138.
Long Statement,Bind.GL2,Generator,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\GL2\Generator.cs,WriteEnums,The length of the statement  "                Trace.WriteLine(String.Format("Writing enums to:\t{0}.{1}.{2}"' Settings.OutputNamespace' Settings.OutputClass' Settings.NestedEnumsClass)); " is 140.
Long Statement,Bind.GL2,Generator,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\GL2\Generator.cs,WriteEnums,The length of the statement  "                            Char.IsDigit(c.Value[0]) ? c.Value : c.Value.StartsWith(Settings.ConstantPrefix) ? c.Value : Settings.ConstantPrefix + c.Value' " is 127.
Long Statement,Bind.Structures,Type,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Type.cs,Translate,The length of the statement  "            XPathNavigator enum_override = overrides.SelectSingleNode(String.Format("/overrides/replace/enum[@name='{0}']/name"' CurrentType)); " is 131.
Long Statement,Bind.Structures,FunctionCollection,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Function.cs,AddChecked,The length of the statement  "                    if ((existing.Parameters.HasUnsignedParameters && !unsignedFunctions.IsMatch(existing.Name) && unsignedFunctions.IsMatch(f.Name)) || " is 132.
Long Statement,Bind.Structures,FunctionCollection,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Function.cs,AddChecked,The length of the statement  "                        (!existing.Parameters.HasUnsignedParameters && unsignedFunctions.IsMatch(existing.Name) && !unsignedFunctions.IsMatch(f.Name))) " is 127.
Long Statement,Bind.Structures,EnumCollection,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Enum.cs,Translate,The length of the statement  "                        XPathNavigator constant_override = enum_override.SelectSingleNode(String.Format("token[@name='{0}']"' c.PreviousName)) ?? " is 121.
Long Statement,Bind.Structures,Delegate,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Delegate.cs,TranslateParameters,The length of the statement  "                    XPathNavigator param_override = function_override.SelectSingleNode(String.Format("param[@name='{0}']"' Parameters[i].Name)); " is 124.
Long Statement,Bind.Structures,Parameter,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Parameter.cs,ToString,The length of the statement  "                if (!override_unsafe_setting && ((Settings.Compatibility & Settings.Legacy.NoPublicUnsafeFunctions) != Settings.Legacy.None)) " is 125.
Long Statement,Bind.Structures,Parameter,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Parameter.cs,Translate,The length of the statement  "                    (!String.IsNullOrEmpty(PreviousType) && PreviousType.ToLower().Contains("void"))) /*|| CurrentType.Contains("IntPtr"))*/ " is 120.
Long Statement,Bind.ES,ESGenerator,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\ES\ESGenerator.cs,ReadEnums,The length of the statement  "                            catch (ArgumentException ex) { Console.WriteLine("[Warning] Failed to add constant {0} to enum {1}: {2}"' c.Name' e.Name' ex.Message); } " is 136.
Complex Conditional,Bind,BindStreamWriter,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\BindStreamWriter.cs,WriteLine,The conditional expression  "Environment.OSVersion.Platform == PlatformID.Win32Windows ||                  Environment.OSVersion.Platform == PlatformID.Win32NT ||                  Environment.OSVersion.Platform == PlatformID.Win32S ||                  Environment.OSVersion.Platform == PlatformID.WinCE"  is complex.
Complex Conditional,Bind.GL2,Generator,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\GL2\Generator.cs,NextValidLine,The conditional expression  "String.IsNullOrEmpty(line) ||                      line.StartsWith("#") ||                 // Disregard comments.                      line.StartsWith("passthru") ||          // Disregard passthru statements.                      line.StartsWith("required-props:") ||                      line.StartsWith("param:") ||                      line.StartsWith("dlflags:") ||                      line.StartsWith("glxflags:") ||                      line.StartsWith("vectorequiv:") ||                      //line.StartsWith("category:") ||                      line.StartsWith("version:") ||                      line.StartsWith("glxsingle:") ||                      line.StartsWith("glxropcode:") ||                      line.StartsWith("glxvendorpriv:") ||                      line.StartsWith("glsflags:") ||                      line.StartsWith("glsopcode:") ||                      line.StartsWith("glsalias:") ||                      line.StartsWith("wglflags:") ||                      line.StartsWith("extension:") ||                      line.StartsWith("alias:") ||                      line.StartsWith("offset:")"  is complex.
Complex Conditional,Bind.Structures,Type,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Type.cs,Translate,The conditional expression  "(normal || aux) && @enum.Name != "GLenum" && @enum.Name != "Boolean""  is complex.
Complex Conditional,Bind.Structures,FunctionCollection,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Function.cs,AddChecked,The conditional expression  "(existing.Parameters.HasUnsignedParameters && !unsignedFunctions.IsMatch(existing.Name) && unsignedFunctions.IsMatch(f.Name)) ||                          (!existing.Parameters.HasUnsignedParameters && unsignedFunctions.IsMatch(existing.Name) && !unsignedFunctions.IsMatch(f.Name))"  is complex.
Complex Conditional,Bind.Structures,Delegate,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Delegate.cs,TrimName,The conditional expression  "m.Value[m.Length - 1] == 'v' && endingsAddV.IsMatch(name) &&                          !name.StartsWith("Get") && !name.StartsWith("MatrixIndex")"  is complex.
Empty Catch Block,Bind.GL2,Generator,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\GL2\Generator.cs,WriteDocumentation,The method has an empty catch block.
Magic Number,Bind,MainClass,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Main.cs,Main,The following statement contains a magic number: switch (b[0])                          {                              case "?":                              case "help":                                  ShowHelp();                                  return;                              case "in":                              case "input":                                  Settings.InputPath = string.Join(Path.DirectorySeparatorChar.ToString()' b.Skip(1).ToArray());                                  break;                              case "out":                              case "output":                                  Settings.OutputPath = string.Join(Path.DirectorySeparatorChar.ToString()' b.Skip(1).ToArray());                                  break;                              case "mode":                                  string arg = b[1].ToLower();                                  if (arg == "gl" || arg == "gl2")                                      mode = GeneratorMode.GL2;                                  else if (arg == "es10")                                      mode = GeneratorMode.ES10;                                  else if (arg == "es11")                                      mode = GeneratorMode.ES11;                                  else if (arg == "es20")                                      mode = GeneratorMode.ES20;                                  else if (arg=="cl" || arg == "cl10")                                      mode = GeneratorMode.CL10;                                  else                                      throw new NotImplementedException();                                  if (b.Length > 2)                                      dirName = b[2];                                  break;                              case "namespace":                              case "ns":                                  Settings.OutputNamespace = b[1];                                  break;                              case "class":                                  Settings.OutputClass = b[1];                                  break;                              case "gl":                                  Settings.GLClass = b[1];                                  break;                              case "legacy":                              case "o":                              case "option":                                  Settings.Compatibility |= b[1].ToLower() == "tao" ? Settings.Legacy.Tao : Settings.Legacy.None;                                  Settings.Compatibility |= b[1].ToLower() == "simple_enums" ? Settings.Legacy.NoAdvancedEnumProcessing : Settings.Legacy.None;                                  Settings.Compatibility |= b[1].ToLower() == "safe" ? Settings.Legacy.NoPublicUnsafeFunctions : Settings.Legacy.None;                                  //Settings.Compatibility |= b[1].ToLower().Contains("novoid") ? Settings.Legacy.TurnVoidPointersToIntPtr : Settings.Legacy.None;                                  Settings.Compatibility |= b[1].ToLower() == "permutations" ? Settings.Legacy.GenerateAllPermutations : Settings.Legacy.None;                                  Settings.Compatibility |= b[1].ToLower() == "enums_in_class" ? Settings.Legacy.NestedEnums : Settings.Legacy.None;                                  Settings.Compatibility |= b[1].ToLower() == "nodocs" ? Settings.Legacy.NoDocumentation : Settings.Legacy.None;                                  Settings.Compatibility |= b[1].ToLower() == "keep_untyped_enums" ? Settings.Legacy.KeepUntypedEnums : Settings.Legacy.None;                                  break;                              default:                                  throw new ArgumentException(                                      String.Format("Argument {0} not recognized. Use the '/?' switch for help."' a)                                  );                          }
Magic Number,Bind,MainClass,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Main.cs,Main,The following statement contains a magic number: switch (b[0])                          {                              case "?":                              case "help":                                  ShowHelp();                                  return;                              case "in":                              case "input":                                  Settings.InputPath = string.Join(Path.DirectorySeparatorChar.ToString()' b.Skip(1).ToArray());                                  break;                              case "out":                              case "output":                                  Settings.OutputPath = string.Join(Path.DirectorySeparatorChar.ToString()' b.Skip(1).ToArray());                                  break;                              case "mode":                                  string arg = b[1].ToLower();                                  if (arg == "gl" || arg == "gl2")                                      mode = GeneratorMode.GL2;                                  else if (arg == "es10")                                      mode = GeneratorMode.ES10;                                  else if (arg == "es11")                                      mode = GeneratorMode.ES11;                                  else if (arg == "es20")                                      mode = GeneratorMode.ES20;                                  else if (arg=="cl" || arg == "cl10")                                      mode = GeneratorMode.CL10;                                  else                                      throw new NotImplementedException();                                  if (b.Length > 2)                                      dirName = b[2];                                  break;                              case "namespace":                              case "ns":                                  Settings.OutputNamespace = b[1];                                  break;                              case "class":                                  Settings.OutputClass = b[1];                                  break;                              case "gl":                                  Settings.GLClass = b[1];                                  break;                              case "legacy":                              case "o":                              case "option":                                  Settings.Compatibility |= b[1].ToLower() == "tao" ? Settings.Legacy.Tao : Settings.Legacy.None;                                  Settings.Compatibility |= b[1].ToLower() == "simple_enums" ? Settings.Legacy.NoAdvancedEnumProcessing : Settings.Legacy.None;                                  Settings.Compatibility |= b[1].ToLower() == "safe" ? Settings.Legacy.NoPublicUnsafeFunctions : Settings.Legacy.None;                                  //Settings.Compatibility |= b[1].ToLower().Contains("novoid") ? Settings.Legacy.TurnVoidPointersToIntPtr : Settings.Legacy.None;                                  Settings.Compatibility |= b[1].ToLower() == "permutations" ? Settings.Legacy.GenerateAllPermutations : Settings.Legacy.None;                                  Settings.Compatibility |= b[1].ToLower() == "enums_in_class" ? Settings.Legacy.NestedEnums : Settings.Legacy.None;                                  Settings.Compatibility |= b[1].ToLower() == "nodocs" ? Settings.Legacy.NoDocumentation : Settings.Legacy.None;                                  Settings.Compatibility |= b[1].ToLower() == "keep_untyped_enums" ? Settings.Legacy.KeepUntypedEnums : Settings.Legacy.None;                                  break;                              default:                                  throw new ArgumentException(                                      String.Format("Argument {0} not recognized. Use the '/?' switch for help."' a)                                  );                          }
Magic Number,Bind,MainClass,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Main.cs,Main,The following statement contains a magic number: Console.WriteLine("Bindings generated in {0} seconds."' ticks / (double)10000000.0);
Magic Number,Bind,DocProcessor,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\DocProcessor.cs,ProcessFile,The following statement contains a magic number: text = text.Insert(m.Index'                          "<![CDATA[" +                          removed.Substring(equation + 4' removed.IndexOf(":-->") - equation - 4) +                          "]]>");
Magic Number,Bind,DocProcessor,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\DocProcessor.cs,ProcessFile,The following statement contains a magic number: text = text.Insert(m.Index'                          "<![CDATA[" +                          removed.Substring(equation + 4' removed.IndexOf(":-->") - equation - 4) +                          "]]>");
Magic Number,Bind.GL2,Generator,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\GL2\Generator.cs,ReadDelegates,The following statement contains a magic number: switch (words[0])                          {                              case "return":  // Line denotes return value                                  d.ReturnType.CurrentType = words[1];                                  break;                                case "param":   // Line denotes parameter                                  Parameter p = new Parameter();                                    p.Name = Utilities.Keywords.Contains(words[1]) ? "@" + words[1] : words[1];                                  p.CurrentType = words[2];                                  p.Pointer += words[4].Contains("array") ? 1 : 0;                                  p.Pointer += words[4].Contains("reference") ? 1 : 0;                                  if (p.Pointer != 0 && words.Count > 5 && words[5].Contains("[1]"))                                      p.ElementCount = 1;                                  p.Flow = words[3] == "in" ? FlowDirection.In : FlowDirection.Out;                                    d.Parameters.Add(p);                                  break;                                // GetTexParameterIivEXT and GetTexParameterIuivEXT define two(!) versions (why?)                              case "version": // Line denotes function version (i.e. 1.0' 1.2' 1.5)                                  d.Version = words[1];                                  break;                                case "category":                                  d.Category = words[1];                                  break;                          }
Magic Number,Bind.GL2,Generator,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\GL2\Generator.cs,ReadDelegates,The following statement contains a magic number: switch (words[0])                          {                              case "return":  // Line denotes return value                                  d.ReturnType.CurrentType = words[1];                                  break;                                case "param":   // Line denotes parameter                                  Parameter p = new Parameter();                                    p.Name = Utilities.Keywords.Contains(words[1]) ? "@" + words[1] : words[1];                                  p.CurrentType = words[2];                                  p.Pointer += words[4].Contains("array") ? 1 : 0;                                  p.Pointer += words[4].Contains("reference") ? 1 : 0;                                  if (p.Pointer != 0 && words.Count > 5 && words[5].Contains("[1]"))                                      p.ElementCount = 1;                                  p.Flow = words[3] == "in" ? FlowDirection.In : FlowDirection.Out;                                    d.Parameters.Add(p);                                  break;                                // GetTexParameterIivEXT and GetTexParameterIuivEXT define two(!) versions (why?)                              case "version": // Line denotes function version (i.e. 1.0' 1.2' 1.5)                                  d.Version = words[1];                                  break;                                case "category":                                  d.Category = words[1];                                  break;                          }
Magic Number,Bind.GL2,Generator,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\GL2\Generator.cs,ReadDelegates,The following statement contains a magic number: switch (words[0])                          {                              case "return":  // Line denotes return value                                  d.ReturnType.CurrentType = words[1];                                  break;                                case "param":   // Line denotes parameter                                  Parameter p = new Parameter();                                    p.Name = Utilities.Keywords.Contains(words[1]) ? "@" + words[1] : words[1];                                  p.CurrentType = words[2];                                  p.Pointer += words[4].Contains("array") ? 1 : 0;                                  p.Pointer += words[4].Contains("reference") ? 1 : 0;                                  if (p.Pointer != 0 && words.Count > 5 && words[5].Contains("[1]"))                                      p.ElementCount = 1;                                  p.Flow = words[3] == "in" ? FlowDirection.In : FlowDirection.Out;                                    d.Parameters.Add(p);                                  break;                                // GetTexParameterIivEXT and GetTexParameterIuivEXT define two(!) versions (why?)                              case "version": // Line denotes function version (i.e. 1.0' 1.2' 1.5)                                  d.Version = words[1];                                  break;                                case "category":                                  d.Category = words[1];                                  break;                          }
Magic Number,Bind.GL2,Generator,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\GL2\Generator.cs,ReadDelegates,The following statement contains a magic number: switch (words[0])                          {                              case "return":  // Line denotes return value                                  d.ReturnType.CurrentType = words[1];                                  break;                                case "param":   // Line denotes parameter                                  Parameter p = new Parameter();                                    p.Name = Utilities.Keywords.Contains(words[1]) ? "@" + words[1] : words[1];                                  p.CurrentType = words[2];                                  p.Pointer += words[4].Contains("array") ? 1 : 0;                                  p.Pointer += words[4].Contains("reference") ? 1 : 0;                                  if (p.Pointer != 0 && words.Count > 5 && words[5].Contains("[1]"))                                      p.ElementCount = 1;                                  p.Flow = words[3] == "in" ? FlowDirection.In : FlowDirection.Out;                                    d.Parameters.Add(p);                                  break;                                // GetTexParameterIivEXT and GetTexParameterIuivEXT define two(!) versions (why?)                              case "version": // Line denotes function version (i.e. 1.0' 1.2' 1.5)                                  d.Version = words[1];                                  break;                                case "category":                                  d.Category = words[1];                                  break;                          }
Magic Number,Bind.GL2,Generator,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\GL2\Generator.cs,ReadDelegates,The following statement contains a magic number: switch (words[0])                          {                              case "return":  // Line denotes return value                                  d.ReturnType.CurrentType = words[1];                                  break;                                case "param":   // Line denotes parameter                                  Parameter p = new Parameter();                                    p.Name = Utilities.Keywords.Contains(words[1]) ? "@" + words[1] : words[1];                                  p.CurrentType = words[2];                                  p.Pointer += words[4].Contains("array") ? 1 : 0;                                  p.Pointer += words[4].Contains("reference") ? 1 : 0;                                  if (p.Pointer != 0 && words.Count > 5 && words[5].Contains("[1]"))                                      p.ElementCount = 1;                                  p.Flow = words[3] == "in" ? FlowDirection.In : FlowDirection.Out;                                    d.Parameters.Add(p);                                  break;                                // GetTexParameterIivEXT and GetTexParameterIuivEXT define two(!) versions (why?)                              case "version": // Line denotes function version (i.e. 1.0' 1.2' 1.5)                                  d.Version = words[1];                                  break;                                case "category":                                  d.Category = words[1];                                  break;                          }
Magic Number,Bind.GL2,Generator,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\GL2\Generator.cs,ReadDelegates,The following statement contains a magic number: switch (words[0])                          {                              case "return":  // Line denotes return value                                  d.ReturnType.CurrentType = words[1];                                  break;                                case "param":   // Line denotes parameter                                  Parameter p = new Parameter();                                    p.Name = Utilities.Keywords.Contains(words[1]) ? "@" + words[1] : words[1];                                  p.CurrentType = words[2];                                  p.Pointer += words[4].Contains("array") ? 1 : 0;                                  p.Pointer += words[4].Contains("reference") ? 1 : 0;                                  if (p.Pointer != 0 && words.Count > 5 && words[5].Contains("[1]"))                                      p.ElementCount = 1;                                  p.Flow = words[3] == "in" ? FlowDirection.In : FlowDirection.Out;                                    d.Parameters.Add(p);                                  break;                                // GetTexParameterIivEXT and GetTexParameterIuivEXT define two(!) versions (why?)                              case "version": // Line denotes function version (i.e. 1.0' 1.2' 1.5)                                  d.Version = words[1];                                  break;                                case "category":                                  d.Category = words[1];                                  break;                          }
Magic Number,Bind.GL2,Generator,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\GL2\Generator.cs,ReadEnums,The following statement contains a magic number: c.Value = words[2];
Magic Number,Bind.GL2,Generator,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\GL2\Generator.cs,ReadCSTypeMap,The following statement contains a magic number: words.Length < 2
Magic Number,Bind.Structures,Function,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Function.cs,WrapVoidPointers,The following statement contains a magic number: Parameters[index].Array = 2;
Magic Number,Bind.Structures,Function,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Function.cs,WrapVoidPointers,The following statement contains a magic number: Parameters[index].Array = 3;
Magic Number,Bind.Structures,FunctionBody,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Function.cs,Unindent,The following statement contains a magic number: indent = indent.Substring(4);
Magic Number,Bind.Structures,FunctionBody,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Function.cs,Unindent,The following statement contains a magic number: indent.Length >= 4
Magic Number,Bind.Structures,ParameterCollection,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Parameter.cs,BuildToStringCache,The following statement contains a magic number: sb.Replace("' "' ")"' sb.Length - 2' 2);
Magic Number,Bind.Structures,ParameterCollection,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Parameter.cs,BuildToStringCache,The following statement contains a magic number: sb.Replace("' "' ")"' sb.Length - 2' 2);
Magic Number,Bind.Structures,ParameterCollection,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Parameter.cs,BuildCallStringCache,The following statement contains a magic number: sb.Replace("' "' ")"' sb.Length - 2' 2);
Magic Number,Bind.Structures,ParameterCollection,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Parameter.cs,BuildCallStringCache,The following statement contains a magic number: sb.Replace("' "' ")"' sb.Length - 2' 2);
Missing Default,Bind.GL2,Generator,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\GL2\Generator.cs,ReadDelegates,The following switch statement is missing a default case: switch (words[0])                          {                              case "return":  // Line denotes return value                                  d.ReturnType.CurrentType = words[1];                                  break;                                case "param":   // Line denotes parameter                                  Parameter p = new Parameter();                                    p.Name = Utilities.Keywords.Contains(words[1]) ? "@" + words[1] : words[1];                                  p.CurrentType = words[2];                                  p.Pointer += words[4].Contains("array") ? 1 : 0;                                  p.Pointer += words[4].Contains("reference") ? 1 : 0;                                  if (p.Pointer != 0 && words.Count > 5 && words[5].Contains("[1]"))                                      p.ElementCount = 1;                                  p.Flow = words[3] == "in" ? FlowDirection.In : FlowDirection.Out;                                    d.Parameters.Add(p);                                  break;                                // GetTexParameterIivEXT and GetTexParameterIuivEXT define two(!) versions (why?)                              case "version": // Line denotes function version (i.e. 1.0' 1.2' 1.5)                                  d.Version = words[1];                                  break;                                case "category":                                  d.Category = words[1];                                  break;                          }
Missing Default,Bind.Structures,Type,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Type.cs,GetCLSCompliantType,The following switch statement is missing a default case: switch (CurrentType)                  {                      case "UInt16":                      case "ushort":                          return "Int16";                      case "UInt32":                      case "uint":                          return "Int32";                      case "UInt64":                      case "ulong":                          return "Int64";                      case "SByte":                      case "sbyte":                          return "Byte";                      case "UIntPtr":                          return "IntPtr";                  }
Missing Default,Bind.Structures,Type,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Type.cs,Translate,The following switch statement is missing a default case: switch (CurrentType.ToLower())                      {                          case "string": QualifiedType = "String"; break;                      }
Missing Default,Bind.Structures,Function,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Function.cs,WrapReturnType,The following switch statement is missing a default case: switch (ReturnType.WrapperType)              {                  case WrapperTypes.StringReturnType:                      ReturnType.QualifiedType = "String";                      break;              }
Missing Default,Bind.Structures,EnumCollection,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Enum.cs,Translate,The following switch statement is missing a default case: switch (node.Name)                                  {                                      case "name": c.Name = (string)node.TypedValue; break;                                      case "value": c.Value = (string)node.TypedValue; break;                                  }
Missing Default,Bind.Structures,Delegate,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\Structures\Delegate.cs,TranslateParameters,The following switch statement is missing a default case: switch (node.Name)                              {                                  case "type": Parameters[i].CurrentType = (string)node.TypedValue; break;                                  case "name": Parameters[i].Name = (string)node.TypedValue; break;                                  case "flow":  Parameters[i].Flow = Parameter.GetFlowDirection((string)node.TypedValue); break;                              }
Missing Default,Bind.ES,ESGenerator,D:\research\architectureSmells\repos\virtualglobebook_OpenGlobe\ThirdParty\OpenTK.1.0\Source\Bind\ES\ESGenerator.cs,ReadDelegates,The following switch statement is missing a default case: switch (param.Name)                              {                                  case "returns":                                      d.ReturnType.CurrentType = param.GetAttribute("type"' String.Empty);                                      break;                                    case "param":                                      Parameter p = new Parameter();                                      p.CurrentType = param.GetAttribute("type"' String.Empty);                                      p.Name = param.GetAttribute("name"' String.Empty);                                        string element_count = param.GetAttribute("elementcount"' String.Empty);                                      if (!String.IsNullOrEmpty(element_count))                                          p.ElementCount = Int32.Parse(element_count);                                        p.Flow = Parameter.GetFlowDirection(param.GetAttribute("flow"' String.Empty));                                        d.Parameters.Add(p);                                      break;                              }
