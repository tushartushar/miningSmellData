Implementation smell,Namespace,Class,File,Method,Description
Long Method,SQLite,TableQuery,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,CompileExpr,The method has 160 lines of code.
Complex Method,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,Cyclomatic complexity of the method is 22
Complex Method,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,CreateButton,Cyclomatic complexity of the method is 8
Complex Method,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,Cyclomatic complexity of the method is 22
Complex Method,UBTalker,NewCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\NewCategoryPage.xaml.cs,CreateButton,Cyclomatic complexity of the method is 8
Complex Method,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,MainPage,Cyclomatic complexity of the method is 10
Complex Method,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,Speak_String,Cyclomatic complexity of the method is 18
Complex Method,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,DeleteItem,Cyclomatic complexity of the method is 8
Complex Method,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,OnNavigatedTo,Cyclomatic complexity of the method is 8
Complex Method,UBTalker,NewButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\NewButtonPage.xaml.cs,CreateButton,Cyclomatic complexity of the method is 9
Complex Method,UBTalker.Common,RichTextColumns,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\Common\RichTextColumns.cs,MeasureOverride,Cyclomatic complexity of the method is 8
Complex Method,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,Cyclomatic complexity of the method is 24
Complex Method,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,GeneralSettings,Cyclomatic complexity of the method is 16
Complex Method,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,LanguageSelection_SelectionChanged,Cyclomatic complexity of the method is 15
Complex Method,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,IntervalSelection_SelectionChanged,Cyclomatic complexity of the method is 17
Complex Method,SQLite,SQLiteConnection,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,CreateTable,Cyclomatic complexity of the method is 9
Complex Method,SQLite,Orm,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,SqlType,Cyclomatic complexity of the method is 9
Complex Method,SQLite,SQLiteCommand,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,BindParameter,Cyclomatic complexity of the method is 13
Complex Method,SQLite,SQLiteCommand,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,ReadCol,Cyclomatic complexity of the method is 19
Complex Method,SQLite,TableQuery,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,CompileExpr,Cyclomatic complexity of the method is 25
Complex Method,SQLite,TableQuery,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,GetSqlName,Cyclomatic complexity of the method is 10
Long Parameter List,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,Speak_String,The method has 5 parameters.
Long Parameter List,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,Store_String,The method has 5 parameters.
Long Parameter List,UBTalker.Data,SampleDataCommon,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,SampleDataCommon,The method has 5 parameters.
Long Parameter List,UBTalker.Data,SampleDataItem,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,SampleDataItem,The method has 7 parameters.
Long Parameter List,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,SampleDataGroup,The method has 5 parameters.
Long Parameter List,SQLite,SQLite3,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,Prepare2,The method has 5 parameters.
Long Parameter List,SQLite,SQLite3,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,BindText,The method has 5 parameters.
Long Parameter List,SQLite,SQLite3,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,BindBlob,The method has 5 parameters.
Long Statement,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,CreateButton,The length of the statement  "	/* Add button to database */using (var db = new SQLiteConnection (Path.Combine (ApplicationData.Current.LocalFolder.Path' "TalkerDB.sqlite"))) { " is 144.
Long Statement,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The length of the statement  "	using (var db = new SQLiteConnection (Path.Combine (Windows.Storage.ApplicationData.Current.LocalFolder.Path' "TalkerDB.sqlite"))) { " is 132.
Long Statement,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,CreateButton,The length of the statement  "	if ((SoundFileToggle.IsOn && string.IsNullOrWhiteSpace (SoundFileEntry.Text)) || (!SoundFileToggle.IsOn && string.IsNullOrWhiteSpace (ButtonTextEntry.Text))) { " is 159.
Long Statement,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,CreateButton,The length of the statement  "		MessageDialog dialog = new MessageDialog ("You must enter a string to be spoken or provide your own sound file"' "UB Talker"); " is 126.
Long Statement,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,CreateButton,The length of the statement  "	/* Add button to database */using (var db = new SQLiteConnection (Path.Combine (ApplicationData.Current.LocalFolder.Path' "TalkerDB.sqlite"))) { " is 144.
Long Statement,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The length of the statement  "	using (var db = new SQLiteConnection (Path.Combine (Windows.Storage.ApplicationData.Current.LocalFolder.Path' "TalkerDB.sqlite"))) { " is 132.
Long Statement,UBTalker,NewCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\NewCategoryPage.xaml.cs,CreateButton,The length of the statement  "	/* Add button to database */using (var db = new SQLiteConnection (Path.Combine (ApplicationData.Current.LocalFolder.Path' "TalkerDB.sqlite"))) { " is 144.
Long Statement,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,LoadState,The length of the statement  "		MessageDialog dialog = new MessageDialog ("You must obtain a Client ID and Secret in order to use this application. Please visit Azure DataMarket at https://datamarket.azure.com/developer/applications to get one.\r\nThen' go to https://datamarket.azure.com/dataset/1899a118-d202-492c-aa16-ba21c33c06cb and subscribe the Microsoft Translator Service.\n"' "UB Talker"); " is 367.
Long Statement,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,Store_String,The length of the statement  "	var file = await Windows.Storage.ApplicationData.Current.LocalFolder.CreateFileAsync (fileName' Windows.Storage.CreationCollisionOption.ReplaceExisting); " is 153.
Long Statement,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,Store_String,The length of the statement  "	/* Add filename to button's attributes */using (var db = new SQLiteConnection (Path.Combine (Windows.Storage.ApplicationData.Current.LocalFolder.Path' "TalkerDB.sqlite"))) { " is 173.
Long Statement,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,DeleteItem,The length of the statement  "	/* Delete item and sub items from database */using (var db = new SQLiteConnection (Path.Combine (Windows.Storage.ApplicationData.Current.LocalFolder.Path' "TalkerDB.sqlite"))) { " is 177.
Long Statement,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,OnNavigatedTo,The length of the statement  "	using (var db = new SQLiteConnection (Path.Combine (Windows.Storage.ApplicationData.Current.LocalFolder.Path' "TalkerDB.sqlite"))) { " is 132.
Long Statement,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,OnNavigatedTo,The length of the statement  "		ObservableCollection<Button> temp = new ObservableCollection<Button> (db.Table<Button> ().Where (x => x.Category == category).OrderBy (x => x.Order)); " is 150.
Long Statement,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,OnNavigatedTo,The length of the statement  "			/* Decide if the new button page should be shown if the category is empty*/bool newPage = (e.SourcePageType == typeof(MainPage)) && (e.NavigationMode == NavigationMode.New); " is 173.
Long Statement,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,Load_Buttons,The length of the statement  "		await Dispatcher.RunAsync (CoreDispatcherPriority.Normal' () => Frame.Navigate (typeof(NewButtonPage)' Current.category)); " is 122.
Long Statement,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,Col_CollectionChanged,The length of the statement  "	var db = new SQLiteConnection (Path.Combine (Windows.Storage.ApplicationData.Current.LocalFolder.Path' "TalkerDB.sqlite")); " is 123.
Long Statement,UBTalker,ColorHelper,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,GetColorFromHexa,The length of the statement  "	return Color.FromArgb (Convert.ToByte (hexaColor.Substring (1' 2)' 16)' Convert.ToByte (hexaColor.Substring (3' 2)' 16)' Convert.ToByte (hexaColor.Substring (5' 2)' 16)' Convert.ToByte (hexaColor.Substring (7' 2)' 16)); " is 219.
Long Statement,UBTalker,NewButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\NewButtonPage.xaml.cs,CreateButton,The length of the statement  "	if ((SoundFileToggle.IsOn && string.IsNullOrWhiteSpace (SoundFileEntry.Text)) || (!SoundFileToggle.IsOn && string.IsNullOrWhiteSpace (ButtonTextEntry.Text))) { " is 159.
Long Statement,UBTalker,NewButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\NewButtonPage.xaml.cs,CreateButton,The length of the statement  "		MessageDialog dialog = new MessageDialog ("You must enter a string to be spoken or provide your own sound file"' "UB Talker"); " is 126.
Long Statement,UBTalker,NewButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\NewButtonPage.xaml.cs,CreateButton,The length of the statement  "	/* Add button to database */using (var db = new SQLiteConnection (Path.Combine (ApplicationData.Current.LocalFolder.Path' "TalkerDB.sqlite"))) { " is 144.
Long Statement,UBTalker.Common,LayoutAwarePage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The length of the statement  "	if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || args.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) { " is 246.
Long Statement,UBTalker.Common,SuspensionManager,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\Common\SuspensionManager.cs,SaveAsync,The length of the statement  "	StorageFile file = await ApplicationData.Current.LocalFolder.CreateFileAsync (sessionStateFilename' CreationCollisionOption.ReplaceExisting); " is 141.
Long Statement,UBTalker.Common,SuspensionManager,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\Common\SuspensionManager.cs,RegisterFrame,The length of the statement  "		throw new InvalidOperationException ("Frames must be either be registered before accessing frame session state' or not registered at all"); " is 139.
Long Statement,UBTalker.Data,SampleDataSource,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,GetItem,The length of the statement  "	var matches = _sampleDataSource.AllGroups.SelectMany (group => group.Items).Where (item => item.UniqueId.Equals (uniqueId)); " is 124.
Long Statement,SQLite,SQLiteConnection,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,Execute,The length of the statement  "		Debug.WriteLine (string.Format ("Finished in {0} ms ({1:0.0} s total)"' _sw.ElapsedMilliseconds' _elapsedMilliseconds / 1000.0)); " is 129.
Long Statement,SQLite,SQLiteConnection,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,ExecuteScalar,The length of the statement  "		Debug.WriteLine (string.Format ("Finished in {0} ms ({1:0.0} s total)"' _sw.ElapsedMilliseconds' _elapsedMilliseconds / 1000.0)); " is 129.
Long Statement,SQLite,SQLiteConnection,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,DoSavePointExecute,The length of the statement  "	throw new ArgumentException ("savePoint"' "savePoint is not valid' and should be the result of a call to SaveTransactionPoint."); " is 129.
Long Statement,SQLite,Orm,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,SqlType,The length of the statement  "	if (clrType == typeof(Boolean) || clrType == typeof(Byte) || clrType == typeof(UInt16) || clrType == typeof(SByte) || clrType == typeof(Int16) || clrType == typeof(Int32)) { " is 173.
Long Statement,SQLite,TableQuery,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,GenerateCommand,The length of the statement  "			var t = string.Join ("' "' _orderBys.Select (o => "\"" + o.ColumnName + "\"" + (o.Ascending ? "" : " desc")).ToArray ()); " is 121.
Complex Conditional,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,CreateButton,The conditional expression  "(SoundFileToggle.IsOn && string.IsNullOrWhiteSpace (SoundFileEntry.Text)) || (!SoundFileToggle.IsOn && string.IsNullOrWhiteSpace (ButtonTextEntry.Text))"  is complex.
Complex Conditional,UBTalker,NewButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\NewButtonPage.xaml.cs,CreateButton,The conditional expression  "(SoundFileToggle.IsOn && string.IsNullOrWhiteSpace (SoundFileEntry.Text)) || (!SoundFileToggle.IsOn && string.IsNullOrWhiteSpace (ButtonTextEntry.Text))"  is complex.
Complex Conditional,UBTalker.Common,LayoutAwarePage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "(args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || args.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)"  is complex.
Complex Conditional,UBTalker.Common,LayoutAwarePage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)"  is complex.
Complex Conditional,UBTalker.Common,LayoutAwarePage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)"  is complex.
Complex Conditional,SQLite,Orm,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,SqlType,The conditional expression  "clrType == typeof(Boolean) || clrType == typeof(Byte) || clrType == typeof(UInt16) || clrType == typeof(SByte) || clrType == typeof(Int16) || clrType == typeof(Int32)"  is complex.
Complex Conditional,SQLite,SQLiteCommand,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,BindParameter,The conditional expression  "value is Byte || value is UInt16 || value is SByte || value is Int16"  is complex.
Empty Catch Block,UBTalker,NewCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\NewCategoryPage.xaml.cs,UIOpenFile_Click,The method has an empty catch block.
Empty Catch Block,UBTalker,NewCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\NewCategoryPage.xaml.cs,CreateButton,The method has an empty catch block.
Empty Catch Block,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,SetBackground,The method has an empty catch block.
Empty Catch Block,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,SingleSwitchPress,The method has an empty catch block.
Empty Catch Block,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,OnNavigatedTo,The method has an empty catch block.
Empty Catch Block,UBTalker,StringToImageConverter,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,GetImage,The method has an empty catch block.
Empty Catch Block,UBTalker,NewButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\NewButtonPage.xaml.cs,CreateButton,The method has an empty catch block.
Empty Catch Block,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,LanguageSelection_SelectionChanged,The method has an empty catch block.
Empty Catch Block,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,IntervalSelection_SelectionChanged,The method has an empty catch block.
Empty Catch Block,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,WhisperSelection_SelectionChanged,The method has an empty catch block.
Empty Catch Block,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,SizeSelection_SelectionChanged,The method has an empty catch block.
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ModButton.ID == MainPage.DEFAULT_CATEGORY) {  	ButtonNameEntry.IsReadOnly = true;  	ButtonDescEntry.IsReadOnly = true;  	ImageEntry.Visibility = Visibility.Collapsed;  	ButtonColorEntry.Visibility = Visibility.Collapsed;  	FontColorEntry.Visibility = Visibility.Collapsed;  }  else {  	/* Set color selections */if (ColorHex == Colors.White.ToString ())  		ButtonColorChoices.SelectedIndex = 1;  	else if (ColorHex == Colors.Red.ToString ())  		ButtonColorChoices.SelectedIndex = 2;  	else if (ColorHex == Colors.Blue.ToString ())  		ButtonColorChoices.SelectedIndex = 3;  	else if (ColorHex == Colors.Green.ToString ())  		ButtonColorChoices.SelectedIndex = 4;  	else if (ColorHex == Colors.Yellow.ToString ())  		ButtonColorChoices.SelectedIndex = 5;  	else if (ColorHex == Colors.Gray.ToString ())  		ButtonColorChoices.SelectedIndex = 6;  	else if (ColorHex == Colors.Purple.ToString ())  		ButtonColorChoices.SelectedIndex = 7;  	else if (ColorHex == Colors.Orange.ToString ())  		ButtonColorChoices.SelectedIndex = 8;  	else if (ColorHex == Colors.Brown.ToString ())  		ButtonColorChoices.SelectedIndex = 9;  	else  		ButtonColorChoices.SelectedIndex = 0;  	// Default to black  	if (FontColor == Colors.Black.ToString ())  		FontColorChoices.SelectedIndex = 0;  	else if (FontColor == Colors.Red.ToString ())  		FontColorChoices.SelectedIndex = 2;  	else if (FontColor == Colors.Blue.ToString ())  		FontColorChoices.SelectedIndex = 3;  	else if (FontColor == Colors.Green.ToString ())  		FontColorChoices.SelectedIndex = 4;  	else if (FontColor == Colors.Yellow.ToString ())  		FontColorChoices.SelectedIndex = 5;  	else if (FontColor == Colors.Gray.ToString ())  		FontColorChoices.SelectedIndex = 6;  	else if (FontColor == Colors.Purple.ToString ())  		FontColorChoices.SelectedIndex = 7;  	else if (FontColor == Colors.Orange.ToString ())  		FontColorChoices.SelectedIndex = 8;  	else if (FontColor == Colors.Brown.ToString ())  		FontColorChoices.SelectedIndex = 9;  	else  		FontColorChoices.SelectedIndex = 1;  	// Default to white  }  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ModButton.ID == MainPage.DEFAULT_CATEGORY) {  	ButtonNameEntry.IsReadOnly = true;  	ButtonDescEntry.IsReadOnly = true;  	ImageEntry.Visibility = Visibility.Collapsed;  	ButtonColorEntry.Visibility = Visibility.Collapsed;  	FontColorEntry.Visibility = Visibility.Collapsed;  }  else {  	/* Set color selections */if (ColorHex == Colors.White.ToString ())  		ButtonColorChoices.SelectedIndex = 1;  	else if (ColorHex == Colors.Red.ToString ())  		ButtonColorChoices.SelectedIndex = 2;  	else if (ColorHex == Colors.Blue.ToString ())  		ButtonColorChoices.SelectedIndex = 3;  	else if (ColorHex == Colors.Green.ToString ())  		ButtonColorChoices.SelectedIndex = 4;  	else if (ColorHex == Colors.Yellow.ToString ())  		ButtonColorChoices.SelectedIndex = 5;  	else if (ColorHex == Colors.Gray.ToString ())  		ButtonColorChoices.SelectedIndex = 6;  	else if (ColorHex == Colors.Purple.ToString ())  		ButtonColorChoices.SelectedIndex = 7;  	else if (ColorHex == Colors.Orange.ToString ())  		ButtonColorChoices.SelectedIndex = 8;  	else if (ColorHex == Colors.Brown.ToString ())  		ButtonColorChoices.SelectedIndex = 9;  	else  		ButtonColorChoices.SelectedIndex = 0;  	// Default to black  	if (FontColor == Colors.Black.ToString ())  		FontColorChoices.SelectedIndex = 0;  	else if (FontColor == Colors.Red.ToString ())  		FontColorChoices.SelectedIndex = 2;  	else if (FontColor == Colors.Blue.ToString ())  		FontColorChoices.SelectedIndex = 3;  	else if (FontColor == Colors.Green.ToString ())  		FontColorChoices.SelectedIndex = 4;  	else if (FontColor == Colors.Yellow.ToString ())  		FontColorChoices.SelectedIndex = 5;  	else if (FontColor == Colors.Gray.ToString ())  		FontColorChoices.SelectedIndex = 6;  	else if (FontColor == Colors.Purple.ToString ())  		FontColorChoices.SelectedIndex = 7;  	else if (FontColor == Colors.Orange.ToString ())  		FontColorChoices.SelectedIndex = 8;  	else if (FontColor == Colors.Brown.ToString ())  		FontColorChoices.SelectedIndex = 9;  	else  		FontColorChoices.SelectedIndex = 1;  	// Default to white  }  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ModButton.ID == MainPage.DEFAULT_CATEGORY) {  	ButtonNameEntry.IsReadOnly = true;  	ButtonDescEntry.IsReadOnly = true;  	ImageEntry.Visibility = Visibility.Collapsed;  	ButtonColorEntry.Visibility = Visibility.Collapsed;  	FontColorEntry.Visibility = Visibility.Collapsed;  }  else {  	/* Set color selections */if (ColorHex == Colors.White.ToString ())  		ButtonColorChoices.SelectedIndex = 1;  	else if (ColorHex == Colors.Red.ToString ())  		ButtonColorChoices.SelectedIndex = 2;  	else if (ColorHex == Colors.Blue.ToString ())  		ButtonColorChoices.SelectedIndex = 3;  	else if (ColorHex == Colors.Green.ToString ())  		ButtonColorChoices.SelectedIndex = 4;  	else if (ColorHex == Colors.Yellow.ToString ())  		ButtonColorChoices.SelectedIndex = 5;  	else if (ColorHex == Colors.Gray.ToString ())  		ButtonColorChoices.SelectedIndex = 6;  	else if (ColorHex == Colors.Purple.ToString ())  		ButtonColorChoices.SelectedIndex = 7;  	else if (ColorHex == Colors.Orange.ToString ())  		ButtonColorChoices.SelectedIndex = 8;  	else if (ColorHex == Colors.Brown.ToString ())  		ButtonColorChoices.SelectedIndex = 9;  	else  		ButtonColorChoices.SelectedIndex = 0;  	// Default to black  	if (FontColor == Colors.Black.ToString ())  		FontColorChoices.SelectedIndex = 0;  	else if (FontColor == Colors.Red.ToString ())  		FontColorChoices.SelectedIndex = 2;  	else if (FontColor == Colors.Blue.ToString ())  		FontColorChoices.SelectedIndex = 3;  	else if (FontColor == Colors.Green.ToString ())  		FontColorChoices.SelectedIndex = 4;  	else if (FontColor == Colors.Yellow.ToString ())  		FontColorChoices.SelectedIndex = 5;  	else if (FontColor == Colors.Gray.ToString ())  		FontColorChoices.SelectedIndex = 6;  	else if (FontColor == Colors.Purple.ToString ())  		FontColorChoices.SelectedIndex = 7;  	else if (FontColor == Colors.Orange.ToString ())  		FontColorChoices.SelectedIndex = 8;  	else if (FontColor == Colors.Brown.ToString ())  		FontColorChoices.SelectedIndex = 9;  	else  		FontColorChoices.SelectedIndex = 1;  	// Default to white  }  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ModButton.ID == MainPage.DEFAULT_CATEGORY) {  	ButtonNameEntry.IsReadOnly = true;  	ButtonDescEntry.IsReadOnly = true;  	ImageEntry.Visibility = Visibility.Collapsed;  	ButtonColorEntry.Visibility = Visibility.Collapsed;  	FontColorEntry.Visibility = Visibility.Collapsed;  }  else {  	/* Set color selections */if (ColorHex == Colors.White.ToString ())  		ButtonColorChoices.SelectedIndex = 1;  	else if (ColorHex == Colors.Red.ToString ())  		ButtonColorChoices.SelectedIndex = 2;  	else if (ColorHex == Colors.Blue.ToString ())  		ButtonColorChoices.SelectedIndex = 3;  	else if (ColorHex == Colors.Green.ToString ())  		ButtonColorChoices.SelectedIndex = 4;  	else if (ColorHex == Colors.Yellow.ToString ())  		ButtonColorChoices.SelectedIndex = 5;  	else if (ColorHex == Colors.Gray.ToString ())  		ButtonColorChoices.SelectedIndex = 6;  	else if (ColorHex == Colors.Purple.ToString ())  		ButtonColorChoices.SelectedIndex = 7;  	else if (ColorHex == Colors.Orange.ToString ())  		ButtonColorChoices.SelectedIndex = 8;  	else if (ColorHex == Colors.Brown.ToString ())  		ButtonColorChoices.SelectedIndex = 9;  	else  		ButtonColorChoices.SelectedIndex = 0;  	// Default to black  	if (FontColor == Colors.Black.ToString ())  		FontColorChoices.SelectedIndex = 0;  	else if (FontColor == Colors.Red.ToString ())  		FontColorChoices.SelectedIndex = 2;  	else if (FontColor == Colors.Blue.ToString ())  		FontColorChoices.SelectedIndex = 3;  	else if (FontColor == Colors.Green.ToString ())  		FontColorChoices.SelectedIndex = 4;  	else if (FontColor == Colors.Yellow.ToString ())  		FontColorChoices.SelectedIndex = 5;  	else if (FontColor == Colors.Gray.ToString ())  		FontColorChoices.SelectedIndex = 6;  	else if (FontColor == Colors.Purple.ToString ())  		FontColorChoices.SelectedIndex = 7;  	else if (FontColor == Colors.Orange.ToString ())  		FontColorChoices.SelectedIndex = 8;  	else if (FontColor == Colors.Brown.ToString ())  		FontColorChoices.SelectedIndex = 9;  	else  		FontColorChoices.SelectedIndex = 1;  	// Default to white  }  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ModButton.ID == MainPage.DEFAULT_CATEGORY) {  	ButtonNameEntry.IsReadOnly = true;  	ButtonDescEntry.IsReadOnly = true;  	ImageEntry.Visibility = Visibility.Collapsed;  	ButtonColorEntry.Visibility = Visibility.Collapsed;  	FontColorEntry.Visibility = Visibility.Collapsed;  }  else {  	/* Set color selections */if (ColorHex == Colors.White.ToString ())  		ButtonColorChoices.SelectedIndex = 1;  	else if (ColorHex == Colors.Red.ToString ())  		ButtonColorChoices.SelectedIndex = 2;  	else if (ColorHex == Colors.Blue.ToString ())  		ButtonColorChoices.SelectedIndex = 3;  	else if (ColorHex == Colors.Green.ToString ())  		ButtonColorChoices.SelectedIndex = 4;  	else if (ColorHex == Colors.Yellow.ToString ())  		ButtonColorChoices.SelectedIndex = 5;  	else if (ColorHex == Colors.Gray.ToString ())  		ButtonColorChoices.SelectedIndex = 6;  	else if (ColorHex == Colors.Purple.ToString ())  		ButtonColorChoices.SelectedIndex = 7;  	else if (ColorHex == Colors.Orange.ToString ())  		ButtonColorChoices.SelectedIndex = 8;  	else if (ColorHex == Colors.Brown.ToString ())  		ButtonColorChoices.SelectedIndex = 9;  	else  		ButtonColorChoices.SelectedIndex = 0;  	// Default to black  	if (FontColor == Colors.Black.ToString ())  		FontColorChoices.SelectedIndex = 0;  	else if (FontColor == Colors.Red.ToString ())  		FontColorChoices.SelectedIndex = 2;  	else if (FontColor == Colors.Blue.ToString ())  		FontColorChoices.SelectedIndex = 3;  	else if (FontColor == Colors.Green.ToString ())  		FontColorChoices.SelectedIndex = 4;  	else if (FontColor == Colors.Yellow.ToString ())  		FontColorChoices.SelectedIndex = 5;  	else if (FontColor == Colors.Gray.ToString ())  		FontColorChoices.SelectedIndex = 6;  	else if (FontColor == Colors.Purple.ToString ())  		FontColorChoices.SelectedIndex = 7;  	else if (FontColor == Colors.Orange.ToString ())  		FontColorChoices.SelectedIndex = 8;  	else if (FontColor == Colors.Brown.ToString ())  		FontColorChoices.SelectedIndex = 9;  	else  		FontColorChoices.SelectedIndex = 1;  	// Default to white  }  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ModButton.ID == MainPage.DEFAULT_CATEGORY) {  	ButtonNameEntry.IsReadOnly = true;  	ButtonDescEntry.IsReadOnly = true;  	ImageEntry.Visibility = Visibility.Collapsed;  	ButtonColorEntry.Visibility = Visibility.Collapsed;  	FontColorEntry.Visibility = Visibility.Collapsed;  }  else {  	/* Set color selections */if (ColorHex == Colors.White.ToString ())  		ButtonColorChoices.SelectedIndex = 1;  	else if (ColorHex == Colors.Red.ToString ())  		ButtonColorChoices.SelectedIndex = 2;  	else if (ColorHex == Colors.Blue.ToString ())  		ButtonColorChoices.SelectedIndex = 3;  	else if (ColorHex == Colors.Green.ToString ())  		ButtonColorChoices.SelectedIndex = 4;  	else if (ColorHex == Colors.Yellow.ToString ())  		ButtonColorChoices.SelectedIndex = 5;  	else if (ColorHex == Colors.Gray.ToString ())  		ButtonColorChoices.SelectedIndex = 6;  	else if (ColorHex == Colors.Purple.ToString ())  		ButtonColorChoices.SelectedIndex = 7;  	else if (ColorHex == Colors.Orange.ToString ())  		ButtonColorChoices.SelectedIndex = 8;  	else if (ColorHex == Colors.Brown.ToString ())  		ButtonColorChoices.SelectedIndex = 9;  	else  		ButtonColorChoices.SelectedIndex = 0;  	// Default to black  	if (FontColor == Colors.Black.ToString ())  		FontColorChoices.SelectedIndex = 0;  	else if (FontColor == Colors.Red.ToString ())  		FontColorChoices.SelectedIndex = 2;  	else if (FontColor == Colors.Blue.ToString ())  		FontColorChoices.SelectedIndex = 3;  	else if (FontColor == Colors.Green.ToString ())  		FontColorChoices.SelectedIndex = 4;  	else if (FontColor == Colors.Yellow.ToString ())  		FontColorChoices.SelectedIndex = 5;  	else if (FontColor == Colors.Gray.ToString ())  		FontColorChoices.SelectedIndex = 6;  	else if (FontColor == Colors.Purple.ToString ())  		FontColorChoices.SelectedIndex = 7;  	else if (FontColor == Colors.Orange.ToString ())  		FontColorChoices.SelectedIndex = 8;  	else if (FontColor == Colors.Brown.ToString ())  		FontColorChoices.SelectedIndex = 9;  	else  		FontColorChoices.SelectedIndex = 1;  	// Default to white  }  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ModButton.ID == MainPage.DEFAULT_CATEGORY) {  	ButtonNameEntry.IsReadOnly = true;  	ButtonDescEntry.IsReadOnly = true;  	ImageEntry.Visibility = Visibility.Collapsed;  	ButtonColorEntry.Visibility = Visibility.Collapsed;  	FontColorEntry.Visibility = Visibility.Collapsed;  }  else {  	/* Set color selections */if (ColorHex == Colors.White.ToString ())  		ButtonColorChoices.SelectedIndex = 1;  	else if (ColorHex == Colors.Red.ToString ())  		ButtonColorChoices.SelectedIndex = 2;  	else if (ColorHex == Colors.Blue.ToString ())  		ButtonColorChoices.SelectedIndex = 3;  	else if (ColorHex == Colors.Green.ToString ())  		ButtonColorChoices.SelectedIndex = 4;  	else if (ColorHex == Colors.Yellow.ToString ())  		ButtonColorChoices.SelectedIndex = 5;  	else if (ColorHex == Colors.Gray.ToString ())  		ButtonColorChoices.SelectedIndex = 6;  	else if (ColorHex == Colors.Purple.ToString ())  		ButtonColorChoices.SelectedIndex = 7;  	else if (ColorHex == Colors.Orange.ToString ())  		ButtonColorChoices.SelectedIndex = 8;  	else if (ColorHex == Colors.Brown.ToString ())  		ButtonColorChoices.SelectedIndex = 9;  	else  		ButtonColorChoices.SelectedIndex = 0;  	// Default to black  	if (FontColor == Colors.Black.ToString ())  		FontColorChoices.SelectedIndex = 0;  	else if (FontColor == Colors.Red.ToString ())  		FontColorChoices.SelectedIndex = 2;  	else if (FontColor == Colors.Blue.ToString ())  		FontColorChoices.SelectedIndex = 3;  	else if (FontColor == Colors.Green.ToString ())  		FontColorChoices.SelectedIndex = 4;  	else if (FontColor == Colors.Yellow.ToString ())  		FontColorChoices.SelectedIndex = 5;  	else if (FontColor == Colors.Gray.ToString ())  		FontColorChoices.SelectedIndex = 6;  	else if (FontColor == Colors.Purple.ToString ())  		FontColorChoices.SelectedIndex = 7;  	else if (FontColor == Colors.Orange.ToString ())  		FontColorChoices.SelectedIndex = 8;  	else if (FontColor == Colors.Brown.ToString ())  		FontColorChoices.SelectedIndex = 9;  	else  		FontColorChoices.SelectedIndex = 1;  	// Default to white  }  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ModButton.ID == MainPage.DEFAULT_CATEGORY) {  	ButtonNameEntry.IsReadOnly = true;  	ButtonDescEntry.IsReadOnly = true;  	ImageEntry.Visibility = Visibility.Collapsed;  	ButtonColorEntry.Visibility = Visibility.Collapsed;  	FontColorEntry.Visibility = Visibility.Collapsed;  }  else {  	/* Set color selections */if (ColorHex == Colors.White.ToString ())  		ButtonColorChoices.SelectedIndex = 1;  	else if (ColorHex == Colors.Red.ToString ())  		ButtonColorChoices.SelectedIndex = 2;  	else if (ColorHex == Colors.Blue.ToString ())  		ButtonColorChoices.SelectedIndex = 3;  	else if (ColorHex == Colors.Green.ToString ())  		ButtonColorChoices.SelectedIndex = 4;  	else if (ColorHex == Colors.Yellow.ToString ())  		ButtonColorChoices.SelectedIndex = 5;  	else if (ColorHex == Colors.Gray.ToString ())  		ButtonColorChoices.SelectedIndex = 6;  	else if (ColorHex == Colors.Purple.ToString ())  		ButtonColorChoices.SelectedIndex = 7;  	else if (ColorHex == Colors.Orange.ToString ())  		ButtonColorChoices.SelectedIndex = 8;  	else if (ColorHex == Colors.Brown.ToString ())  		ButtonColorChoices.SelectedIndex = 9;  	else  		ButtonColorChoices.SelectedIndex = 0;  	// Default to black  	if (FontColor == Colors.Black.ToString ())  		FontColorChoices.SelectedIndex = 0;  	else if (FontColor == Colors.Red.ToString ())  		FontColorChoices.SelectedIndex = 2;  	else if (FontColor == Colors.Blue.ToString ())  		FontColorChoices.SelectedIndex = 3;  	else if (FontColor == Colors.Green.ToString ())  		FontColorChoices.SelectedIndex = 4;  	else if (FontColor == Colors.Yellow.ToString ())  		FontColorChoices.SelectedIndex = 5;  	else if (FontColor == Colors.Gray.ToString ())  		FontColorChoices.SelectedIndex = 6;  	else if (FontColor == Colors.Purple.ToString ())  		FontColorChoices.SelectedIndex = 7;  	else if (FontColor == Colors.Orange.ToString ())  		FontColorChoices.SelectedIndex = 8;  	else if (FontColor == Colors.Brown.ToString ())  		FontColorChoices.SelectedIndex = 9;  	else  		FontColorChoices.SelectedIndex = 1;  	// Default to white  }  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ModButton.ID == MainPage.DEFAULT_CATEGORY) {  	ButtonNameEntry.IsReadOnly = true;  	ButtonDescEntry.IsReadOnly = true;  	ImageEntry.Visibility = Visibility.Collapsed;  	ButtonColorEntry.Visibility = Visibility.Collapsed;  	FontColorEntry.Visibility = Visibility.Collapsed;  }  else {  	/* Set color selections */if (ColorHex == Colors.White.ToString ())  		ButtonColorChoices.SelectedIndex = 1;  	else if (ColorHex == Colors.Red.ToString ())  		ButtonColorChoices.SelectedIndex = 2;  	else if (ColorHex == Colors.Blue.ToString ())  		ButtonColorChoices.SelectedIndex = 3;  	else if (ColorHex == Colors.Green.ToString ())  		ButtonColorChoices.SelectedIndex = 4;  	else if (ColorHex == Colors.Yellow.ToString ())  		ButtonColorChoices.SelectedIndex = 5;  	else if (ColorHex == Colors.Gray.ToString ())  		ButtonColorChoices.SelectedIndex = 6;  	else if (ColorHex == Colors.Purple.ToString ())  		ButtonColorChoices.SelectedIndex = 7;  	else if (ColorHex == Colors.Orange.ToString ())  		ButtonColorChoices.SelectedIndex = 8;  	else if (ColorHex == Colors.Brown.ToString ())  		ButtonColorChoices.SelectedIndex = 9;  	else  		ButtonColorChoices.SelectedIndex = 0;  	// Default to black  	if (FontColor == Colors.Black.ToString ())  		FontColorChoices.SelectedIndex = 0;  	else if (FontColor == Colors.Red.ToString ())  		FontColorChoices.SelectedIndex = 2;  	else if (FontColor == Colors.Blue.ToString ())  		FontColorChoices.SelectedIndex = 3;  	else if (FontColor == Colors.Green.ToString ())  		FontColorChoices.SelectedIndex = 4;  	else if (FontColor == Colors.Yellow.ToString ())  		FontColorChoices.SelectedIndex = 5;  	else if (FontColor == Colors.Gray.ToString ())  		FontColorChoices.SelectedIndex = 6;  	else if (FontColor == Colors.Purple.ToString ())  		FontColorChoices.SelectedIndex = 7;  	else if (FontColor == Colors.Orange.ToString ())  		FontColorChoices.SelectedIndex = 8;  	else if (FontColor == Colors.Brown.ToString ())  		FontColorChoices.SelectedIndex = 9;  	else  		FontColorChoices.SelectedIndex = 1;  	// Default to white  }  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ModButton.ID == MainPage.DEFAULT_CATEGORY) {  	ButtonNameEntry.IsReadOnly = true;  	ButtonDescEntry.IsReadOnly = true;  	ImageEntry.Visibility = Visibility.Collapsed;  	ButtonColorEntry.Visibility = Visibility.Collapsed;  	FontColorEntry.Visibility = Visibility.Collapsed;  }  else {  	/* Set color selections */if (ColorHex == Colors.White.ToString ())  		ButtonColorChoices.SelectedIndex = 1;  	else if (ColorHex == Colors.Red.ToString ())  		ButtonColorChoices.SelectedIndex = 2;  	else if (ColorHex == Colors.Blue.ToString ())  		ButtonColorChoices.SelectedIndex = 3;  	else if (ColorHex == Colors.Green.ToString ())  		ButtonColorChoices.SelectedIndex = 4;  	else if (ColorHex == Colors.Yellow.ToString ())  		ButtonColorChoices.SelectedIndex = 5;  	else if (ColorHex == Colors.Gray.ToString ())  		ButtonColorChoices.SelectedIndex = 6;  	else if (ColorHex == Colors.Purple.ToString ())  		ButtonColorChoices.SelectedIndex = 7;  	else if (ColorHex == Colors.Orange.ToString ())  		ButtonColorChoices.SelectedIndex = 8;  	else if (ColorHex == Colors.Brown.ToString ())  		ButtonColorChoices.SelectedIndex = 9;  	else  		ButtonColorChoices.SelectedIndex = 0;  	// Default to black  	if (FontColor == Colors.Black.ToString ())  		FontColorChoices.SelectedIndex = 0;  	else if (FontColor == Colors.Red.ToString ())  		FontColorChoices.SelectedIndex = 2;  	else if (FontColor == Colors.Blue.ToString ())  		FontColorChoices.SelectedIndex = 3;  	else if (FontColor == Colors.Green.ToString ())  		FontColorChoices.SelectedIndex = 4;  	else if (FontColor == Colors.Yellow.ToString ())  		FontColorChoices.SelectedIndex = 5;  	else if (FontColor == Colors.Gray.ToString ())  		FontColorChoices.SelectedIndex = 6;  	else if (FontColor == Colors.Purple.ToString ())  		FontColorChoices.SelectedIndex = 7;  	else if (FontColor == Colors.Orange.ToString ())  		FontColorChoices.SelectedIndex = 8;  	else if (FontColor == Colors.Brown.ToString ())  		FontColorChoices.SelectedIndex = 9;  	else  		FontColorChoices.SelectedIndex = 1;  	// Default to white  }  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ModButton.ID == MainPage.DEFAULT_CATEGORY) {  	ButtonNameEntry.IsReadOnly = true;  	ButtonDescEntry.IsReadOnly = true;  	ImageEntry.Visibility = Visibility.Collapsed;  	ButtonColorEntry.Visibility = Visibility.Collapsed;  	FontColorEntry.Visibility = Visibility.Collapsed;  }  else {  	/* Set color selections */if (ColorHex == Colors.White.ToString ())  		ButtonColorChoices.SelectedIndex = 1;  	else if (ColorHex == Colors.Red.ToString ())  		ButtonColorChoices.SelectedIndex = 2;  	else if (ColorHex == Colors.Blue.ToString ())  		ButtonColorChoices.SelectedIndex = 3;  	else if (ColorHex == Colors.Green.ToString ())  		ButtonColorChoices.SelectedIndex = 4;  	else if (ColorHex == Colors.Yellow.ToString ())  		ButtonColorChoices.SelectedIndex = 5;  	else if (ColorHex == Colors.Gray.ToString ())  		ButtonColorChoices.SelectedIndex = 6;  	else if (ColorHex == Colors.Purple.ToString ())  		ButtonColorChoices.SelectedIndex = 7;  	else if (ColorHex == Colors.Orange.ToString ())  		ButtonColorChoices.SelectedIndex = 8;  	else if (ColorHex == Colors.Brown.ToString ())  		ButtonColorChoices.SelectedIndex = 9;  	else  		ButtonColorChoices.SelectedIndex = 0;  	// Default to black  	if (FontColor == Colors.Black.ToString ())  		FontColorChoices.SelectedIndex = 0;  	else if (FontColor == Colors.Red.ToString ())  		FontColorChoices.SelectedIndex = 2;  	else if (FontColor == Colors.Blue.ToString ())  		FontColorChoices.SelectedIndex = 3;  	else if (FontColor == Colors.Green.ToString ())  		FontColorChoices.SelectedIndex = 4;  	else if (FontColor == Colors.Yellow.ToString ())  		FontColorChoices.SelectedIndex = 5;  	else if (FontColor == Colors.Gray.ToString ())  		FontColorChoices.SelectedIndex = 6;  	else if (FontColor == Colors.Purple.ToString ())  		FontColorChoices.SelectedIndex = 7;  	else if (FontColor == Colors.Orange.ToString ())  		FontColorChoices.SelectedIndex = 8;  	else if (FontColor == Colors.Brown.ToString ())  		FontColorChoices.SelectedIndex = 9;  	else  		FontColorChoices.SelectedIndex = 1;  	// Default to white  }  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ModButton.ID == MainPage.DEFAULT_CATEGORY) {  	ButtonNameEntry.IsReadOnly = true;  	ButtonDescEntry.IsReadOnly = true;  	ImageEntry.Visibility = Visibility.Collapsed;  	ButtonColorEntry.Visibility = Visibility.Collapsed;  	FontColorEntry.Visibility = Visibility.Collapsed;  }  else {  	/* Set color selections */if (ColorHex == Colors.White.ToString ())  		ButtonColorChoices.SelectedIndex = 1;  	else if (ColorHex == Colors.Red.ToString ())  		ButtonColorChoices.SelectedIndex = 2;  	else if (ColorHex == Colors.Blue.ToString ())  		ButtonColorChoices.SelectedIndex = 3;  	else if (ColorHex == Colors.Green.ToString ())  		ButtonColorChoices.SelectedIndex = 4;  	else if (ColorHex == Colors.Yellow.ToString ())  		ButtonColorChoices.SelectedIndex = 5;  	else if (ColorHex == Colors.Gray.ToString ())  		ButtonColorChoices.SelectedIndex = 6;  	else if (ColorHex == Colors.Purple.ToString ())  		ButtonColorChoices.SelectedIndex = 7;  	else if (ColorHex == Colors.Orange.ToString ())  		ButtonColorChoices.SelectedIndex = 8;  	else if (ColorHex == Colors.Brown.ToString ())  		ButtonColorChoices.SelectedIndex = 9;  	else  		ButtonColorChoices.SelectedIndex = 0;  	// Default to black  	if (FontColor == Colors.Black.ToString ())  		FontColorChoices.SelectedIndex = 0;  	else if (FontColor == Colors.Red.ToString ())  		FontColorChoices.SelectedIndex = 2;  	else if (FontColor == Colors.Blue.ToString ())  		FontColorChoices.SelectedIndex = 3;  	else if (FontColor == Colors.Green.ToString ())  		FontColorChoices.SelectedIndex = 4;  	else if (FontColor == Colors.Yellow.ToString ())  		FontColorChoices.SelectedIndex = 5;  	else if (FontColor == Colors.Gray.ToString ())  		FontColorChoices.SelectedIndex = 6;  	else if (FontColor == Colors.Purple.ToString ())  		FontColorChoices.SelectedIndex = 7;  	else if (FontColor == Colors.Orange.ToString ())  		FontColorChoices.SelectedIndex = 8;  	else if (FontColor == Colors.Brown.ToString ())  		FontColorChoices.SelectedIndex = 9;  	else  		FontColorChoices.SelectedIndex = 1;  	// Default to white  }  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ModButton.ID == MainPage.DEFAULT_CATEGORY) {  	ButtonNameEntry.IsReadOnly = true;  	ButtonDescEntry.IsReadOnly = true;  	ImageEntry.Visibility = Visibility.Collapsed;  	ButtonColorEntry.Visibility = Visibility.Collapsed;  	FontColorEntry.Visibility = Visibility.Collapsed;  }  else {  	/* Set color selections */if (ColorHex == Colors.White.ToString ())  		ButtonColorChoices.SelectedIndex = 1;  	else if (ColorHex == Colors.Red.ToString ())  		ButtonColorChoices.SelectedIndex = 2;  	else if (ColorHex == Colors.Blue.ToString ())  		ButtonColorChoices.SelectedIndex = 3;  	else if (ColorHex == Colors.Green.ToString ())  		ButtonColorChoices.SelectedIndex = 4;  	else if (ColorHex == Colors.Yellow.ToString ())  		ButtonColorChoices.SelectedIndex = 5;  	else if (ColorHex == Colors.Gray.ToString ())  		ButtonColorChoices.SelectedIndex = 6;  	else if (ColorHex == Colors.Purple.ToString ())  		ButtonColorChoices.SelectedIndex = 7;  	else if (ColorHex == Colors.Orange.ToString ())  		ButtonColorChoices.SelectedIndex = 8;  	else if (ColorHex == Colors.Brown.ToString ())  		ButtonColorChoices.SelectedIndex = 9;  	else  		ButtonColorChoices.SelectedIndex = 0;  	// Default to black  	if (FontColor == Colors.Black.ToString ())  		FontColorChoices.SelectedIndex = 0;  	else if (FontColor == Colors.Red.ToString ())  		FontColorChoices.SelectedIndex = 2;  	else if (FontColor == Colors.Blue.ToString ())  		FontColorChoices.SelectedIndex = 3;  	else if (FontColor == Colors.Green.ToString ())  		FontColorChoices.SelectedIndex = 4;  	else if (FontColor == Colors.Yellow.ToString ())  		FontColorChoices.SelectedIndex = 5;  	else if (FontColor == Colors.Gray.ToString ())  		FontColorChoices.SelectedIndex = 6;  	else if (FontColor == Colors.Purple.ToString ())  		FontColorChoices.SelectedIndex = 7;  	else if (FontColor == Colors.Orange.ToString ())  		FontColorChoices.SelectedIndex = 8;  	else if (FontColor == Colors.Brown.ToString ())  		FontColorChoices.SelectedIndex = 9;  	else  		FontColorChoices.SelectedIndex = 1;  	// Default to white  }  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ModButton.ID == MainPage.DEFAULT_CATEGORY) {  	ButtonNameEntry.IsReadOnly = true;  	ButtonDescEntry.IsReadOnly = true;  	ImageEntry.Visibility = Visibility.Collapsed;  	ButtonColorEntry.Visibility = Visibility.Collapsed;  	FontColorEntry.Visibility = Visibility.Collapsed;  }  else {  	/* Set color selections */if (ColorHex == Colors.White.ToString ())  		ButtonColorChoices.SelectedIndex = 1;  	else if (ColorHex == Colors.Red.ToString ())  		ButtonColorChoices.SelectedIndex = 2;  	else if (ColorHex == Colors.Blue.ToString ())  		ButtonColorChoices.SelectedIndex = 3;  	else if (ColorHex == Colors.Green.ToString ())  		ButtonColorChoices.SelectedIndex = 4;  	else if (ColorHex == Colors.Yellow.ToString ())  		ButtonColorChoices.SelectedIndex = 5;  	else if (ColorHex == Colors.Gray.ToString ())  		ButtonColorChoices.SelectedIndex = 6;  	else if (ColorHex == Colors.Purple.ToString ())  		ButtonColorChoices.SelectedIndex = 7;  	else if (ColorHex == Colors.Orange.ToString ())  		ButtonColorChoices.SelectedIndex = 8;  	else if (ColorHex == Colors.Brown.ToString ())  		ButtonColorChoices.SelectedIndex = 9;  	else  		ButtonColorChoices.SelectedIndex = 0;  	// Default to black  	if (FontColor == Colors.Black.ToString ())  		FontColorChoices.SelectedIndex = 0;  	else if (FontColor == Colors.Red.ToString ())  		FontColorChoices.SelectedIndex = 2;  	else if (FontColor == Colors.Blue.ToString ())  		FontColorChoices.SelectedIndex = 3;  	else if (FontColor == Colors.Green.ToString ())  		FontColorChoices.SelectedIndex = 4;  	else if (FontColor == Colors.Yellow.ToString ())  		FontColorChoices.SelectedIndex = 5;  	else if (FontColor == Colors.Gray.ToString ())  		FontColorChoices.SelectedIndex = 6;  	else if (FontColor == Colors.Purple.ToString ())  		FontColorChoices.SelectedIndex = 7;  	else if (FontColor == Colors.Orange.ToString ())  		FontColorChoices.SelectedIndex = 8;  	else if (FontColor == Colors.Brown.ToString ())  		FontColorChoices.SelectedIndex = 9;  	else  		FontColorChoices.SelectedIndex = 1;  	// Default to white  }  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ModButton.ID == MainPage.DEFAULT_CATEGORY) {  	ButtonNameEntry.IsReadOnly = true;  	ButtonDescEntry.IsReadOnly = true;  	ImageEntry.Visibility = Visibility.Collapsed;  	ButtonColorEntry.Visibility = Visibility.Collapsed;  	FontColorEntry.Visibility = Visibility.Collapsed;  }  else {  	/* Set color selections */if (ColorHex == Colors.White.ToString ())  		ButtonColorChoices.SelectedIndex = 1;  	else if (ColorHex == Colors.Red.ToString ())  		ButtonColorChoices.SelectedIndex = 2;  	else if (ColorHex == Colors.Blue.ToString ())  		ButtonColorChoices.SelectedIndex = 3;  	else if (ColorHex == Colors.Green.ToString ())  		ButtonColorChoices.SelectedIndex = 4;  	else if (ColorHex == Colors.Yellow.ToString ())  		ButtonColorChoices.SelectedIndex = 5;  	else if (ColorHex == Colors.Gray.ToString ())  		ButtonColorChoices.SelectedIndex = 6;  	else if (ColorHex == Colors.Purple.ToString ())  		ButtonColorChoices.SelectedIndex = 7;  	else if (ColorHex == Colors.Orange.ToString ())  		ButtonColorChoices.SelectedIndex = 8;  	else if (ColorHex == Colors.Brown.ToString ())  		ButtonColorChoices.SelectedIndex = 9;  	else  		ButtonColorChoices.SelectedIndex = 0;  	// Default to black  	if (FontColor == Colors.Black.ToString ())  		FontColorChoices.SelectedIndex = 0;  	else if (FontColor == Colors.Red.ToString ())  		FontColorChoices.SelectedIndex = 2;  	else if (FontColor == Colors.Blue.ToString ())  		FontColorChoices.SelectedIndex = 3;  	else if (FontColor == Colors.Green.ToString ())  		FontColorChoices.SelectedIndex = 4;  	else if (FontColor == Colors.Yellow.ToString ())  		FontColorChoices.SelectedIndex = 5;  	else if (FontColor == Colors.Gray.ToString ())  		FontColorChoices.SelectedIndex = 6;  	else if (FontColor == Colors.Purple.ToString ())  		FontColorChoices.SelectedIndex = 7;  	else if (FontColor == Colors.Orange.ToString ())  		FontColorChoices.SelectedIndex = 8;  	else if (FontColor == Colors.Brown.ToString ())  		FontColorChoices.SelectedIndex = 9;  	else  		FontColorChoices.SelectedIndex = 1;  	// Default to white  }  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ModButton.ID == MainPage.DEFAULT_CATEGORY) {  	ButtonNameEntry.IsReadOnly = true;  	ButtonDescEntry.IsReadOnly = true;  	ImageEntry.Visibility = Visibility.Collapsed;  	ButtonColorEntry.Visibility = Visibility.Collapsed;  	FontColorEntry.Visibility = Visibility.Collapsed;  }  else {  	/* Set color selections */if (ColorHex == Colors.White.ToString ())  		ButtonColorChoices.SelectedIndex = 1;  	else if (ColorHex == Colors.Red.ToString ())  		ButtonColorChoices.SelectedIndex = 2;  	else if (ColorHex == Colors.Blue.ToString ())  		ButtonColorChoices.SelectedIndex = 3;  	else if (ColorHex == Colors.Green.ToString ())  		ButtonColorChoices.SelectedIndex = 4;  	else if (ColorHex == Colors.Yellow.ToString ())  		ButtonColorChoices.SelectedIndex = 5;  	else if (ColorHex == Colors.Gray.ToString ())  		ButtonColorChoices.SelectedIndex = 6;  	else if (ColorHex == Colors.Purple.ToString ())  		ButtonColorChoices.SelectedIndex = 7;  	else if (ColorHex == Colors.Orange.ToString ())  		ButtonColorChoices.SelectedIndex = 8;  	else if (ColorHex == Colors.Brown.ToString ())  		ButtonColorChoices.SelectedIndex = 9;  	else  		ButtonColorChoices.SelectedIndex = 0;  	// Default to black  	if (FontColor == Colors.Black.ToString ())  		FontColorChoices.SelectedIndex = 0;  	else if (FontColor == Colors.Red.ToString ())  		FontColorChoices.SelectedIndex = 2;  	else if (FontColor == Colors.Blue.ToString ())  		FontColorChoices.SelectedIndex = 3;  	else if (FontColor == Colors.Green.ToString ())  		FontColorChoices.SelectedIndex = 4;  	else if (FontColor == Colors.Yellow.ToString ())  		FontColorChoices.SelectedIndex = 5;  	else if (FontColor == Colors.Gray.ToString ())  		FontColorChoices.SelectedIndex = 6;  	else if (FontColor == Colors.Purple.ToString ())  		FontColorChoices.SelectedIndex = 7;  	else if (FontColor == Colors.Orange.ToString ())  		FontColorChoices.SelectedIndex = 8;  	else if (FontColor == Colors.Brown.ToString ())  		FontColorChoices.SelectedIndex = 9;  	else  		FontColorChoices.SelectedIndex = 1;  	// Default to white  }  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.White.ToString ())  	ButtonColorChoices.SelectedIndex = 1;  else if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.White.ToString ())  	ButtonColorChoices.SelectedIndex = 1;  else if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.White.ToString ())  	ButtonColorChoices.SelectedIndex = 1;  else if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.White.ToString ())  	ButtonColorChoices.SelectedIndex = 1;  else if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.White.ToString ())  	ButtonColorChoices.SelectedIndex = 1;  else if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.White.ToString ())  	ButtonColorChoices.SelectedIndex = 1;  else if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.White.ToString ())  	ButtonColorChoices.SelectedIndex = 1;  else if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.White.ToString ())  	ButtonColorChoices.SelectedIndex = 1;  else if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: ButtonColorChoices.SelectedIndex = 2;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: ButtonColorChoices.SelectedIndex = 3;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: ButtonColorChoices.SelectedIndex = 4;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: ButtonColorChoices.SelectedIndex = 5;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: ButtonColorChoices.SelectedIndex = 6;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: ButtonColorChoices.SelectedIndex = 7;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: ButtonColorChoices.SelectedIndex = 8;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: ButtonColorChoices.SelectedIndex = 9;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Black.ToString ())  	FontColorChoices.SelectedIndex = 0;  else if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Black.ToString ())  	FontColorChoices.SelectedIndex = 0;  else if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Black.ToString ())  	FontColorChoices.SelectedIndex = 0;  else if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Black.ToString ())  	FontColorChoices.SelectedIndex = 0;  else if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Black.ToString ())  	FontColorChoices.SelectedIndex = 0;  else if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Black.ToString ())  	FontColorChoices.SelectedIndex = 0;  else if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Black.ToString ())  	FontColorChoices.SelectedIndex = 0;  else if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Black.ToString ())  	FontColorChoices.SelectedIndex = 0;  else if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: FontColorChoices.SelectedIndex = 2;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: FontColorChoices.SelectedIndex = 3;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: FontColorChoices.SelectedIndex = 4;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: FontColorChoices.SelectedIndex = 5;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: FontColorChoices.SelectedIndex = 6;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: FontColorChoices.SelectedIndex = 7;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: FontColorChoices.SelectedIndex = 8;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditCategoryPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditCategoryPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: FontColorChoices.SelectedIndex = 9;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.White.ToString ())  	ButtonColorChoices.SelectedIndex = 1;  else if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.White.ToString ())  	ButtonColorChoices.SelectedIndex = 1;  else if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.White.ToString ())  	ButtonColorChoices.SelectedIndex = 1;  else if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.White.ToString ())  	ButtonColorChoices.SelectedIndex = 1;  else if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.White.ToString ())  	ButtonColorChoices.SelectedIndex = 1;  else if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.White.ToString ())  	ButtonColorChoices.SelectedIndex = 1;  else if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.White.ToString ())  	ButtonColorChoices.SelectedIndex = 1;  else if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.White.ToString ())  	ButtonColorChoices.SelectedIndex = 1;  else if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Red.ToString ())  	ButtonColorChoices.SelectedIndex = 2;  else if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: ButtonColorChoices.SelectedIndex = 2;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Blue.ToString ())  	ButtonColorChoices.SelectedIndex = 3;  else if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: ButtonColorChoices.SelectedIndex = 3;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Green.ToString ())  	ButtonColorChoices.SelectedIndex = 4;  else if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: ButtonColorChoices.SelectedIndex = 4;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Yellow.ToString ())  	ButtonColorChoices.SelectedIndex = 5;  else if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: ButtonColorChoices.SelectedIndex = 5;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Gray.ToString ())  	ButtonColorChoices.SelectedIndex = 6;  else if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: ButtonColorChoices.SelectedIndex = 6;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Purple.ToString ())  	ButtonColorChoices.SelectedIndex = 7;  else if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: ButtonColorChoices.SelectedIndex = 7;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Orange.ToString ())  	ButtonColorChoices.SelectedIndex = 8;  else if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: ButtonColorChoices.SelectedIndex = 8;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (ColorHex == Colors.Brown.ToString ())  	ButtonColorChoices.SelectedIndex = 9;  else  	ButtonColorChoices.SelectedIndex = 0;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: ButtonColorChoices.SelectedIndex = 9;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Black.ToString ())  	FontColorChoices.SelectedIndex = 0;  else if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Black.ToString ())  	FontColorChoices.SelectedIndex = 0;  else if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Black.ToString ())  	FontColorChoices.SelectedIndex = 0;  else if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Black.ToString ())  	FontColorChoices.SelectedIndex = 0;  else if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Black.ToString ())  	FontColorChoices.SelectedIndex = 0;  else if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Black.ToString ())  	FontColorChoices.SelectedIndex = 0;  else if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Black.ToString ())  	FontColorChoices.SelectedIndex = 0;  else if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Black.ToString ())  	FontColorChoices.SelectedIndex = 0;  else if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Red.ToString ())  	FontColorChoices.SelectedIndex = 2;  else if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: FontColorChoices.SelectedIndex = 2;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Blue.ToString ())  	FontColorChoices.SelectedIndex = 3;  else if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: FontColorChoices.SelectedIndex = 3;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Green.ToString ())  	FontColorChoices.SelectedIndex = 4;  else if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: FontColorChoices.SelectedIndex = 4;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Yellow.ToString ())  	FontColorChoices.SelectedIndex = 5;  else if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: FontColorChoices.SelectedIndex = 5;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Gray.ToString ())  	FontColorChoices.SelectedIndex = 6;  else if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: FontColorChoices.SelectedIndex = 6;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Purple.ToString ())  	FontColorChoices.SelectedIndex = 7;  else if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: FontColorChoices.SelectedIndex = 7;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Orange.ToString ())  	FontColorChoices.SelectedIndex = 8;  else if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: FontColorChoices.SelectedIndex = 8;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: if (FontColor == Colors.Brown.ToString ())  	FontColorChoices.SelectedIndex = 9;  else  	FontColorChoices.SelectedIndex = 1;  
Magic Number,UBTalker,EditButtonPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\EditButtonPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: FontColorChoices.SelectedIndex = 9;  
Magic Number,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,MainPage,The following statement contains a magic number: if (Timer == null)// Ensure that there's only one Timer   {  	Timer = new DispatcherTimer ();  	Timer.Interval = TimeSpan.FromSeconds (3);  	Timer.Tick += timer_Ticker;  }  
Magic Number,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,MainPage,The following statement contains a magic number: Timer.Interval = TimeSpan.FromSeconds (3);  
Magic Number,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,MainPage,The following statement contains a magic number: if (b == null && category == DEFAULT_CATEGORY) {  	/* Create default category */db.Insert (new Button {  		Name = "Default"'  		Text = "Category Default"'  		Description = "Starting Category"'  		ImagePath = ""'  		Order = 0'  		ColorHex = Colors.Black.ToString ()'  		FontColor = Colors.White.ToString ()'  		Category = 999999'  		isFolder = true'  		BGImagePath = ""'  		Language = MainPage.SpeakingLanguage  	});  }  /* Set background image */else if (b != null && b.BGImagePath != null)  	SetBackground (b.BGImagePath);  
Magic Number,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,MainPage,The following statement contains a magic number: db.Insert (new Button {  	Name = "Default"'  	Text = "Category Default"'  	Description = "Starting Category"'  	ImagePath = ""'  	Order = 0'  	ColorHex = Colors.Black.ToString ()'  	FontColor = Colors.White.ToString ()'  	Category = 999999'  	isFolder = true'  	BGImagePath = ""'  	Language = MainPage.SpeakingLanguage  });  
Magic Number,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,FindFilename,The following statement contains a magic number: return index + "_" + StringExt.Truncate (text' 20) + ext;  
Magic Number,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,Speak_String,The following statement contains a magic number: if (speak_whisper) {  	switch (Whisper) {  	/* Whisper */case 1:  		WhisperMediaElement.Volume = 0.15;  		WhisperMediaElement.Balance = 0;  		break;  	/* Right-Only */case 2:  		WhisperMediaElement.Volume = 1;  		WhisperMediaElement.Balance = 1;  		break;  	/* Both */case 3:  		WhisperMediaElement.Volume = 0.15;  		WhisperMediaElement.Balance = 1;  		break;  	/* Silent */default:  		speak_whisper = false;  		// Should not occur  		break;  	}  }  
Magic Number,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,Speak_String,The following statement contains a magic number: if (speak_whisper) {  	switch (Whisper) {  	/* Whisper */case 1:  		WhisperMediaElement.Volume = 0.15;  		WhisperMediaElement.Balance = 0;  		break;  	/* Right-Only */case 2:  		WhisperMediaElement.Volume = 1;  		WhisperMediaElement.Balance = 1;  		break;  	/* Both */case 3:  		WhisperMediaElement.Volume = 0.15;  		WhisperMediaElement.Balance = 1;  		break;  	/* Silent */default:  		speak_whisper = false;  		// Should not occur  		break;  	}  }  
Magic Number,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,Speak_String,The following statement contains a magic number: if (speak_whisper) {  	switch (Whisper) {  	/* Whisper */case 1:  		WhisperMediaElement.Volume = 0.15;  		WhisperMediaElement.Balance = 0;  		break;  	/* Right-Only */case 2:  		WhisperMediaElement.Volume = 1;  		WhisperMediaElement.Balance = 1;  		break;  	/* Both */case 3:  		WhisperMediaElement.Volume = 0.15;  		WhisperMediaElement.Balance = 1;  		break;  	/* Silent */default:  		speak_whisper = false;  		// Should not occur  		break;  	}  }  
Magic Number,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,Speak_String,The following statement contains a magic number: if (speak_whisper) {  	switch (Whisper) {  	/* Whisper */case 1:  		WhisperMediaElement.Volume = 0.15;  		WhisperMediaElement.Balance = 0;  		break;  	/* Right-Only */case 2:  		WhisperMediaElement.Volume = 1;  		WhisperMediaElement.Balance = 1;  		break;  	/* Both */case 3:  		WhisperMediaElement.Volume = 0.15;  		WhisperMediaElement.Balance = 1;  		break;  	/* Silent */default:  		speak_whisper = false;  		// Should not occur  		break;  	}  }  
Magic Number,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,Speak_String,The following statement contains a magic number: switch (Whisper) {  /* Whisper */case 1:  	WhisperMediaElement.Volume = 0.15;  	WhisperMediaElement.Balance = 0;  	break;  /* Right-Only */case 2:  	WhisperMediaElement.Volume = 1;  	WhisperMediaElement.Balance = 1;  	break;  /* Both */case 3:  	WhisperMediaElement.Volume = 0.15;  	WhisperMediaElement.Balance = 1;  	break;  /* Silent */default:  	speak_whisper = false;  	// Should not occur  	break;  }  
Magic Number,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,Speak_String,The following statement contains a magic number: switch (Whisper) {  /* Whisper */case 1:  	WhisperMediaElement.Volume = 0.15;  	WhisperMediaElement.Balance = 0;  	break;  /* Right-Only */case 2:  	WhisperMediaElement.Volume = 1;  	WhisperMediaElement.Balance = 1;  	break;  /* Both */case 3:  	WhisperMediaElement.Volume = 0.15;  	WhisperMediaElement.Balance = 1;  	break;  /* Silent */default:  	speak_whisper = false;  	// Should not occur  	break;  }  
Magic Number,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,Speak_String,The following statement contains a magic number: switch (Whisper) {  /* Whisper */case 1:  	WhisperMediaElement.Volume = 0.15;  	WhisperMediaElement.Balance = 0;  	break;  /* Right-Only */case 2:  	WhisperMediaElement.Volume = 1;  	WhisperMediaElement.Balance = 1;  	break;  /* Both */case 3:  	WhisperMediaElement.Volume = 0.15;  	WhisperMediaElement.Balance = 1;  	break;  /* Silent */default:  	speak_whisper = false;  	// Should not occur  	break;  }  
Magic Number,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,Speak_String,The following statement contains a magic number: switch (Whisper) {  /* Whisper */case 1:  	WhisperMediaElement.Volume = 0.15;  	WhisperMediaElement.Balance = 0;  	break;  /* Right-Only */case 2:  	WhisperMediaElement.Volume = 1;  	WhisperMediaElement.Balance = 1;  	break;  /* Both */case 3:  	WhisperMediaElement.Volume = 0.15;  	WhisperMediaElement.Balance = 1;  	break;  /* Silent */default:  	speak_whisper = false;  	// Should not occur  	break;  }  
Magic Number,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,Speak_String,The following statement contains a magic number: WhisperMediaElement.Volume = 0.15;  
Magic Number,UBTalker,MainPage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,Speak_String,The following statement contains a magic number: WhisperMediaElement.Volume = 0.15;  
Magic Number,UBTalker,ColorHelper,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,GetColorFromHexa,The following statement contains a magic number: return Color.FromArgb (Convert.ToByte (hexaColor.Substring (1' 2)' 16)' Convert.ToByte (hexaColor.Substring (3' 2)' 16)' Convert.ToByte (hexaColor.Substring (5' 2)' 16)' Convert.ToByte (hexaColor.Substring (7' 2)' 16));  
Magic Number,UBTalker,ColorHelper,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,GetColorFromHexa,The following statement contains a magic number: return Color.FromArgb (Convert.ToByte (hexaColor.Substring (1' 2)' 16)' Convert.ToByte (hexaColor.Substring (3' 2)' 16)' Convert.ToByte (hexaColor.Substring (5' 2)' 16)' Convert.ToByte (hexaColor.Substring (7' 2)' 16));  
Magic Number,UBTalker,ColorHelper,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,GetColorFromHexa,The following statement contains a magic number: return Color.FromArgb (Convert.ToByte (hexaColor.Substring (1' 2)' 16)' Convert.ToByte (hexaColor.Substring (3' 2)' 16)' Convert.ToByte (hexaColor.Substring (5' 2)' 16)' Convert.ToByte (hexaColor.Substring (7' 2)' 16));  
Magic Number,UBTalker,ColorHelper,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,GetColorFromHexa,The following statement contains a magic number: return Color.FromArgb (Convert.ToByte (hexaColor.Substring (1' 2)' 16)' Convert.ToByte (hexaColor.Substring (3' 2)' 16)' Convert.ToByte (hexaColor.Substring (5' 2)' 16)' Convert.ToByte (hexaColor.Substring (7' 2)' 16));  
Magic Number,UBTalker,ColorHelper,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,GetColorFromHexa,The following statement contains a magic number: return Color.FromArgb (Convert.ToByte (hexaColor.Substring (1' 2)' 16)' Convert.ToByte (hexaColor.Substring (3' 2)' 16)' Convert.ToByte (hexaColor.Substring (5' 2)' 16)' Convert.ToByte (hexaColor.Substring (7' 2)' 16));  
Magic Number,UBTalker,ColorHelper,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,GetColorFromHexa,The following statement contains a magic number: return Color.FromArgb (Convert.ToByte (hexaColor.Substring (1' 2)' 16)' Convert.ToByte (hexaColor.Substring (3' 2)' 16)' Convert.ToByte (hexaColor.Substring (5' 2)' 16)' Convert.ToByte (hexaColor.Substring (7' 2)' 16));  
Magic Number,UBTalker,ColorHelper,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,GetColorFromHexa,The following statement contains a magic number: return Color.FromArgb (Convert.ToByte (hexaColor.Substring (1' 2)' 16)' Convert.ToByte (hexaColor.Substring (3' 2)' 16)' Convert.ToByte (hexaColor.Substring (5' 2)' 16)' Convert.ToByte (hexaColor.Substring (7' 2)' 16));  
Magic Number,UBTalker,ColorHelper,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,GetColorFromHexa,The following statement contains a magic number: return Color.FromArgb (Convert.ToByte (hexaColor.Substring (1' 2)' 16)' Convert.ToByte (hexaColor.Substring (3' 2)' 16)' Convert.ToByte (hexaColor.Substring (5' 2)' 16)' Convert.ToByte (hexaColor.Substring (7' 2)' 16));  
Magic Number,UBTalker,ColorHelper,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,GetColorFromHexa,The following statement contains a magic number: return Color.FromArgb (Convert.ToByte (hexaColor.Substring (1' 2)' 16)' Convert.ToByte (hexaColor.Substring (3' 2)' 16)' Convert.ToByte (hexaColor.Substring (5' 2)' 16)' Convert.ToByte (hexaColor.Substring (7' 2)' 16));  
Magic Number,UBTalker,ColorHelper,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,GetColorFromHexa,The following statement contains a magic number: return Color.FromArgb (Convert.ToByte (hexaColor.Substring (1' 2)' 16)' Convert.ToByte (hexaColor.Substring (3' 2)' 16)' Convert.ToByte (hexaColor.Substring (5' 2)' 16)' Convert.ToByte (hexaColor.Substring (7' 2)' 16));  
Magic Number,UBTalker,ColorHelper,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,GetColorFromHexa,The following statement contains a magic number: return Color.FromArgb (Convert.ToByte (hexaColor.Substring (1' 2)' 16)' Convert.ToByte (hexaColor.Substring (3' 2)' 16)' Convert.ToByte (hexaColor.Substring (5' 2)' 16)' Convert.ToByte (hexaColor.Substring (7' 2)' 16));  
Magic Number,UBTalker,GetItemHeight,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,Convert,The following statement contains a magic number: return 150 + (MainPage.Size * 50);  
Magic Number,UBTalker,GetItemHeight,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,Convert,The following statement contains a magic number: return 150 + (MainPage.Size * 50);  
Magic Number,UBTalker,GetItemWidth,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,Convert,The following statement contains a magic number: return 200 + (MainPage.Size * 50);  
Magic Number,UBTalker,GetItemWidth,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,Convert,The following statement contains a magic number: return 200 + (MainPage.Size * 50);  
Magic Number,UBTalker,GetFontSize,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,Convert,The following statement contains a magic number: return 15 + (MainPage.Size * 3);  
Magic Number,UBTalker,GetFontSize,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\MainPage.xaml.cs,Convert,The following statement contains a magic number: return 15 + (MainPage.Size * 3);  
Magic Number,UBTalker.Common,LayoutAwarePage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || args.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		args.Handled = true;  		this.GoBack (this' new RoutedEventArgs ());  	}  	else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		args.Handled = true;  		this.GoForward (this' new RoutedEventArgs ());  	}  }  
Magic Number,UBTalker.Common,LayoutAwarePage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || args.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		args.Handled = true;  		this.GoBack (this' new RoutedEventArgs ());  	}  	else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		args.Handled = true;  		this.GoForward (this' new RoutedEventArgs ());  	}  }  
Magic Number,UBTalker.Common,LayoutAwarePage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || args.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		args.Handled = true;  		this.GoBack (this' new RoutedEventArgs ());  	}  	else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		args.Handled = true;  		this.GoForward (this' new RoutedEventArgs ());  	}  }  
Magic Number,UBTalker.Common,LayoutAwarePage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || args.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		args.Handled = true;  		this.GoBack (this' new RoutedEventArgs ());  	}  	else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		args.Handled = true;  		this.GoForward (this' new RoutedEventArgs ());  	}  }  
Magic Number,UBTalker.Common,LayoutAwarePage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  	// When the previous key or Alt+Left are pressed navigate back  	args.Handled = true;  	this.GoBack (this' new RoutedEventArgs ());  }  else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  	// When the next key or Alt+Right are pressed navigate forward  	args.Handled = true;  	this.GoForward (this' new RoutedEventArgs ());  }  
Magic Number,UBTalker.Common,LayoutAwarePage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  	// When the previous key or Alt+Left are pressed navigate back  	args.Handled = true;  	this.GoBack (this' new RoutedEventArgs ());  }  else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  	// When the next key or Alt+Right are pressed navigate forward  	args.Handled = true;  	this.GoForward (this' new RoutedEventArgs ());  }  
Magic Number,UBTalker.Common,LayoutAwarePage,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  	// When the next key or Alt+Right are pressed navigate forward  	args.Handled = true;  	this.GoForward (this' new RoutedEventArgs ());  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	}  	else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	}  	else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	}  	else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	}  	else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	}  	else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	}  	else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	}  	else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	}  	else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	}  	else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	}  	else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	}  	else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	}  	else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	}  	else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	}  	else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	}  	else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	}  	else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	}  	else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	}  	else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	}  	else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	}  	else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	}  	else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	}  	else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	}  	else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	}  	else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	}  	else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	}  	else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	}  	else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	}  	else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	if (TopItems.Count > 12) {  		TopItems.RemoveAt (12);  	}  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	if (TopItems.Count > 12) {  		TopItems.RemoveAt (12);  	}  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	if (TopItems.Count > 12) {  		TopItems.RemoveAt (12);  	}  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (TopItems.Count > 12) {  	TopItems.RemoveAt (12);  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (TopItems.Count > 12) {  	TopItems.RemoveAt (12);  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: TopItems.RemoveAt (12);  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  	TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  }  else if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  }  else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  	TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  }  else if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  }  else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  	TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  }  else if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  }  else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  	TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  }  else if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  }  else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  	TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  }  else if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  }  else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  	TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  }  else if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  }  else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  }  else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  }  else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  }  else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  }  else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: TopItems.Add (Items [11]);  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: TopItems.RemoveAt (12);  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	if (Items.Count >= 12) {  		TopItems.Add (Items [11]);  	}  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	if (Items.Count >= 12) {  		TopItems.Add (Items [11]);  	}  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	if (Items.Count >= 12) {  		TopItems.Add (Items [11]);  	}  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (Items.Count >= 12) {  	TopItems.Add (Items [11]);  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (Items.Count >= 12) {  	TopItems.Add (Items [11]);  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: TopItems.Add (Items [11]);  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  }  
Magic Number,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: while (TopItems.Count < Items.Count && TopItems.Count < 12) {  	TopItems.Add (Items [TopItems.Count]);  }  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,GeneralSettings,The following statement contains a magic number: switch (MainPage.SpeakingLanguage) {  case "en-us":  	LanguageSelection.SelectedIndex = 0;  	break;  case "es":  	LanguageSelection.SelectedIndex = 1;  	break;  case "gr":  	LanguageSelection.SelectedIndex = 2;  	break;  case "fr":  	LanguageSelection.SelectedIndex = 3;  	break;  }  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,GeneralSettings,The following statement contains a magic number: switch (MainPage.SpeakingLanguage) {  case "en-us":  	LanguageSelection.SelectedIndex = 0;  	break;  case "es":  	LanguageSelection.SelectedIndex = 1;  	break;  case "gr":  	LanguageSelection.SelectedIndex = 2;  	break;  case "fr":  	LanguageSelection.SelectedIndex = 3;  	break;  }  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,GeneralSettings,The following statement contains a magic number: LanguageSelection.SelectedIndex = 2;  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,GeneralSettings,The following statement contains a magic number: LanguageSelection.SelectedIndex = 3;  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,GeneralSettings,The following statement contains a magic number: if (MainPage.Timer.Interval == TimeSpan.FromSeconds (1))  	IntervalSelection.SelectedIndex = 0;  else if (MainPage.Timer.Interval == TimeSpan.FromSeconds (3))  	IntervalSelection.SelectedIndex = 1;  else if (MainPage.Timer.Interval == TimeSpan.FromSeconds (5))  	IntervalSelection.SelectedIndex = 2;  else  	IntervalSelection.SelectedIndex = 3;  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,GeneralSettings,The following statement contains a magic number: if (MainPage.Timer.Interval == TimeSpan.FromSeconds (1))  	IntervalSelection.SelectedIndex = 0;  else if (MainPage.Timer.Interval == TimeSpan.FromSeconds (3))  	IntervalSelection.SelectedIndex = 1;  else if (MainPage.Timer.Interval == TimeSpan.FromSeconds (5))  	IntervalSelection.SelectedIndex = 2;  else  	IntervalSelection.SelectedIndex = 3;  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,GeneralSettings,The following statement contains a magic number: if (MainPage.Timer.Interval == TimeSpan.FromSeconds (1))  	IntervalSelection.SelectedIndex = 0;  else if (MainPage.Timer.Interval == TimeSpan.FromSeconds (3))  	IntervalSelection.SelectedIndex = 1;  else if (MainPage.Timer.Interval == TimeSpan.FromSeconds (5))  	IntervalSelection.SelectedIndex = 2;  else  	IntervalSelection.SelectedIndex = 3;  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,GeneralSettings,The following statement contains a magic number: if (MainPage.Timer.Interval == TimeSpan.FromSeconds (1))  	IntervalSelection.SelectedIndex = 0;  else if (MainPage.Timer.Interval == TimeSpan.FromSeconds (3))  	IntervalSelection.SelectedIndex = 1;  else if (MainPage.Timer.Interval == TimeSpan.FromSeconds (5))  	IntervalSelection.SelectedIndex = 2;  else  	IntervalSelection.SelectedIndex = 3;  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,GeneralSettings,The following statement contains a magic number: if (MainPage.Timer.Interval == TimeSpan.FromSeconds (3))  	IntervalSelection.SelectedIndex = 1;  else if (MainPage.Timer.Interval == TimeSpan.FromSeconds (5))  	IntervalSelection.SelectedIndex = 2;  else  	IntervalSelection.SelectedIndex = 3;  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,GeneralSettings,The following statement contains a magic number: if (MainPage.Timer.Interval == TimeSpan.FromSeconds (3))  	IntervalSelection.SelectedIndex = 1;  else if (MainPage.Timer.Interval == TimeSpan.FromSeconds (5))  	IntervalSelection.SelectedIndex = 2;  else  	IntervalSelection.SelectedIndex = 3;  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,GeneralSettings,The following statement contains a magic number: if (MainPage.Timer.Interval == TimeSpan.FromSeconds (3))  	IntervalSelection.SelectedIndex = 1;  else if (MainPage.Timer.Interval == TimeSpan.FromSeconds (5))  	IntervalSelection.SelectedIndex = 2;  else  	IntervalSelection.SelectedIndex = 3;  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,GeneralSettings,The following statement contains a magic number: if (MainPage.Timer.Interval == TimeSpan.FromSeconds (3))  	IntervalSelection.SelectedIndex = 1;  else if (MainPage.Timer.Interval == TimeSpan.FromSeconds (5))  	IntervalSelection.SelectedIndex = 2;  else  	IntervalSelection.SelectedIndex = 3;  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,GeneralSettings,The following statement contains a magic number: if (MainPage.Timer.Interval == TimeSpan.FromSeconds (5))  	IntervalSelection.SelectedIndex = 2;  else  	IntervalSelection.SelectedIndex = 3;  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,GeneralSettings,The following statement contains a magic number: if (MainPage.Timer.Interval == TimeSpan.FromSeconds (5))  	IntervalSelection.SelectedIndex = 2;  else  	IntervalSelection.SelectedIndex = 3;  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,GeneralSettings,The following statement contains a magic number: if (MainPage.Timer.Interval == TimeSpan.FromSeconds (5))  	IntervalSelection.SelectedIndex = 2;  else  	IntervalSelection.SelectedIndex = 3;  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,GeneralSettings,The following statement contains a magic number: IntervalSelection.SelectedIndex = 2;  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,GeneralSettings,The following statement contains a magic number: IntervalSelection.SelectedIndex = 3;  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,LanguageSelection_SelectionChanged,The following statement contains a magic number: try {  	/* Update language */switch (LanguageSelection.SelectedIndex) {  	case 0:  		MainPage.SpeakingLanguage = "en-us";  		break;  	case 1:  		MainPage.SpeakingLanguage = "es";  		break;  	case 2:  		MainPage.SpeakingLanguage = "gr";  		break;  	case 3:  		MainPage.SpeakingLanguage = "fr";  		break;  	}  	/* Store setting */var settings = ApplicationData.Current.LocalSettings;  	if (settings != null) {  		if (settings.Values.ContainsKey ("lang"))  			settings.Values ["lang"] = MainPage.SpeakingLanguage;  		else  			settings.Values.Add ("lang"' MainPage.SpeakingLanguage);  	}  }  catch (Exception) {  }  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,LanguageSelection_SelectionChanged,The following statement contains a magic number: try {  	/* Update language */switch (LanguageSelection.SelectedIndex) {  	case 0:  		MainPage.SpeakingLanguage = "en-us";  		break;  	case 1:  		MainPage.SpeakingLanguage = "es";  		break;  	case 2:  		MainPage.SpeakingLanguage = "gr";  		break;  	case 3:  		MainPage.SpeakingLanguage = "fr";  		break;  	}  	/* Store setting */var settings = ApplicationData.Current.LocalSettings;  	if (settings != null) {  		if (settings.Values.ContainsKey ("lang"))  			settings.Values ["lang"] = MainPage.SpeakingLanguage;  		else  			settings.Values.Add ("lang"' MainPage.SpeakingLanguage);  	}  }  catch (Exception) {  }  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,LanguageSelection_SelectionChanged,The following statement contains a magic number: switch (LanguageSelection.SelectedIndex) {  case 0:  	MainPage.SpeakingLanguage = "en-us";  	break;  case 1:  	MainPage.SpeakingLanguage = "es";  	break;  case 2:  	MainPage.SpeakingLanguage = "gr";  	break;  case 3:  	MainPage.SpeakingLanguage = "fr";  	break;  }  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,LanguageSelection_SelectionChanged,The following statement contains a magic number: switch (LanguageSelection.SelectedIndex) {  case 0:  	MainPage.SpeakingLanguage = "en-us";  	break;  case 1:  	MainPage.SpeakingLanguage = "es";  	break;  case 2:  	MainPage.SpeakingLanguage = "gr";  	break;  case 3:  	MainPage.SpeakingLanguage = "fr";  	break;  }  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,IntervalSelection_SelectionChanged,The following statement contains a magic number: try {  	/* Update Interval */switch (IntervalSelection.SelectedIndex) {  	case 0:  		MainPage.Timer.Interval = TimeSpan.FromSeconds (1);  		break;  	case 1:  		MainPage.Timer.Interval = TimeSpan.FromSeconds (3);  		break;  	case 2:  		MainPage.Timer.Interval = TimeSpan.FromSeconds (5);  		break;  	case 3:  		MainPage.Timer.Interval = TimeSpan.FromSeconds (10);  		break;  	default:  		break;  	}  	/* Store setting */var settings = ApplicationData.Current.LocalSettings;  	if (settings != null) {  		if (settings.Values.ContainsKey ("timer_interval"))  			settings.Values ["timer_interval"] = MainPage.Timer.Interval;  		else  			settings.Values.Add ("timer_interval"' MainPage.Timer.Interval);  	}  }  catch (Exception) {  }  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,IntervalSelection_SelectionChanged,The following statement contains a magic number: try {  	/* Update Interval */switch (IntervalSelection.SelectedIndex) {  	case 0:  		MainPage.Timer.Interval = TimeSpan.FromSeconds (1);  		break;  	case 1:  		MainPage.Timer.Interval = TimeSpan.FromSeconds (3);  		break;  	case 2:  		MainPage.Timer.Interval = TimeSpan.FromSeconds (5);  		break;  	case 3:  		MainPage.Timer.Interval = TimeSpan.FromSeconds (10);  		break;  	default:  		break;  	}  	/* Store setting */var settings = ApplicationData.Current.LocalSettings;  	if (settings != null) {  		if (settings.Values.ContainsKey ("timer_interval"))  			settings.Values ["timer_interval"] = MainPage.Timer.Interval;  		else  			settings.Values.Add ("timer_interval"' MainPage.Timer.Interval);  	}  }  catch (Exception) {  }  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,IntervalSelection_SelectionChanged,The following statement contains a magic number: try {  	/* Update Interval */switch (IntervalSelection.SelectedIndex) {  	case 0:  		MainPage.Timer.Interval = TimeSpan.FromSeconds (1);  		break;  	case 1:  		MainPage.Timer.Interval = TimeSpan.FromSeconds (3);  		break;  	case 2:  		MainPage.Timer.Interval = TimeSpan.FromSeconds (5);  		break;  	case 3:  		MainPage.Timer.Interval = TimeSpan.FromSeconds (10);  		break;  	default:  		break;  	}  	/* Store setting */var settings = ApplicationData.Current.LocalSettings;  	if (settings != null) {  		if (settings.Values.ContainsKey ("timer_interval"))  			settings.Values ["timer_interval"] = MainPage.Timer.Interval;  		else  			settings.Values.Add ("timer_interval"' MainPage.Timer.Interval);  	}  }  catch (Exception) {  }  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,IntervalSelection_SelectionChanged,The following statement contains a magic number: try {  	/* Update Interval */switch (IntervalSelection.SelectedIndex) {  	case 0:  		MainPage.Timer.Interval = TimeSpan.FromSeconds (1);  		break;  	case 1:  		MainPage.Timer.Interval = TimeSpan.FromSeconds (3);  		break;  	case 2:  		MainPage.Timer.Interval = TimeSpan.FromSeconds (5);  		break;  	case 3:  		MainPage.Timer.Interval = TimeSpan.FromSeconds (10);  		break;  	default:  		break;  	}  	/* Store setting */var settings = ApplicationData.Current.LocalSettings;  	if (settings != null) {  		if (settings.Values.ContainsKey ("timer_interval"))  			settings.Values ["timer_interval"] = MainPage.Timer.Interval;  		else  			settings.Values.Add ("timer_interval"' MainPage.Timer.Interval);  	}  }  catch (Exception) {  }  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,IntervalSelection_SelectionChanged,The following statement contains a magic number: try {  	/* Update Interval */switch (IntervalSelection.SelectedIndex) {  	case 0:  		MainPage.Timer.Interval = TimeSpan.FromSeconds (1);  		break;  	case 1:  		MainPage.Timer.Interval = TimeSpan.FromSeconds (3);  		break;  	case 2:  		MainPage.Timer.Interval = TimeSpan.FromSeconds (5);  		break;  	case 3:  		MainPage.Timer.Interval = TimeSpan.FromSeconds (10);  		break;  	default:  		break;  	}  	/* Store setting */var settings = ApplicationData.Current.LocalSettings;  	if (settings != null) {  		if (settings.Values.ContainsKey ("timer_interval"))  			settings.Values ["timer_interval"] = MainPage.Timer.Interval;  		else  			settings.Values.Add ("timer_interval"' MainPage.Timer.Interval);  	}  }  catch (Exception) {  }  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,IntervalSelection_SelectionChanged,The following statement contains a magic number: switch (IntervalSelection.SelectedIndex) {  case 0:  	MainPage.Timer.Interval = TimeSpan.FromSeconds (1);  	break;  case 1:  	MainPage.Timer.Interval = TimeSpan.FromSeconds (3);  	break;  case 2:  	MainPage.Timer.Interval = TimeSpan.FromSeconds (5);  	break;  case 3:  	MainPage.Timer.Interval = TimeSpan.FromSeconds (10);  	break;  default:  	break;  }  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,IntervalSelection_SelectionChanged,The following statement contains a magic number: switch (IntervalSelection.SelectedIndex) {  case 0:  	MainPage.Timer.Interval = TimeSpan.FromSeconds (1);  	break;  case 1:  	MainPage.Timer.Interval = TimeSpan.FromSeconds (3);  	break;  case 2:  	MainPage.Timer.Interval = TimeSpan.FromSeconds (5);  	break;  case 3:  	MainPage.Timer.Interval = TimeSpan.FromSeconds (10);  	break;  default:  	break;  }  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,IntervalSelection_SelectionChanged,The following statement contains a magic number: switch (IntervalSelection.SelectedIndex) {  case 0:  	MainPage.Timer.Interval = TimeSpan.FromSeconds (1);  	break;  case 1:  	MainPage.Timer.Interval = TimeSpan.FromSeconds (3);  	break;  case 2:  	MainPage.Timer.Interval = TimeSpan.FromSeconds (5);  	break;  case 3:  	MainPage.Timer.Interval = TimeSpan.FromSeconds (10);  	break;  default:  	break;  }  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,IntervalSelection_SelectionChanged,The following statement contains a magic number: switch (IntervalSelection.SelectedIndex) {  case 0:  	MainPage.Timer.Interval = TimeSpan.FromSeconds (1);  	break;  case 1:  	MainPage.Timer.Interval = TimeSpan.FromSeconds (3);  	break;  case 2:  	MainPage.Timer.Interval = TimeSpan.FromSeconds (5);  	break;  case 3:  	MainPage.Timer.Interval = TimeSpan.FromSeconds (10);  	break;  default:  	break;  }  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,IntervalSelection_SelectionChanged,The following statement contains a magic number: switch (IntervalSelection.SelectedIndex) {  case 0:  	MainPage.Timer.Interval = TimeSpan.FromSeconds (1);  	break;  case 1:  	MainPage.Timer.Interval = TimeSpan.FromSeconds (3);  	break;  case 2:  	MainPage.Timer.Interval = TimeSpan.FromSeconds (5);  	break;  case 3:  	MainPage.Timer.Interval = TimeSpan.FromSeconds (10);  	break;  default:  	break;  }  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,IntervalSelection_SelectionChanged,The following statement contains a magic number: MainPage.Timer.Interval = TimeSpan.FromSeconds (3);  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,IntervalSelection_SelectionChanged,The following statement contains a magic number: MainPage.Timer.Interval = TimeSpan.FromSeconds (5);  
Magic Number,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,IntervalSelection_SelectionChanged,The following statement contains a magic number: MainPage.Timer.Interval = TimeSpan.FromSeconds (10);  
Magic Number,SQLite,SQLiteConnection,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,SQLiteConnection,The following statement contains a magic number: SQLite3.SetDirectory (/*temp directory type*/2' Windows.Storage.ApplicationData.Current.TemporaryFolder.Path);  
Magic Number,SQLite,SQLiteConnection,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,SQLiteConnection,The following statement contains a magic number: BusyTimeout = TimeSpan.FromSeconds (0.1);  
Magic Number,SQLite,SQLiteConnection,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,Execute,The following statement contains a magic number: if (TimeExecution) {  	_sw.Stop ();  	_elapsedMilliseconds += _sw.ElapsedMilliseconds;  	Debug.WriteLine (string.Format ("Finished in {0} ms ({1:0.0} s total)"' _sw.ElapsedMilliseconds' _elapsedMilliseconds / 1000.0));  }  
Magic Number,SQLite,SQLiteConnection,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,Execute,The following statement contains a magic number: Debug.WriteLine (string.Format ("Finished in {0} ms ({1:0.0} s total)"' _sw.ElapsedMilliseconds' _elapsedMilliseconds / 1000.0));  
Magic Number,SQLite,SQLiteConnection,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,ExecuteScalar,The following statement contains a magic number: if (TimeExecution) {  	_sw.Stop ();  	_elapsedMilliseconds += _sw.ElapsedMilliseconds;  	Debug.WriteLine (string.Format ("Finished in {0} ms ({1:0.0} s total)"' _sw.ElapsedMilliseconds' _elapsedMilliseconds / 1000.0));  }  
Magic Number,SQLite,SQLiteConnection,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,ExecuteScalar,The following statement contains a magic number: Debug.WriteLine (string.Format ("Finished in {0} ms ({1:0.0} s total)"' _sw.ElapsedMilliseconds' _elapsedMilliseconds / 1000.0));  
Magic Number,SQLite,SQLiteConnection,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,DoSavePointExecute,The following statement contains a magic number: if (firstLen >= 2 && savepoint.Length > firstLen + 1) {  	int depth;  	if (Int32.TryParse (savepoint.Substring (firstLen + 1)' out depth)) {  		// TODO: Mild race here' but inescapable without locking almost everywhere.  		if (0 <= depth && depth < _trasactionDepth) {  			#if NETFX_CORE  			Volatile.Write (ref _trasactionDepth' depth);  			#elif SILVERLIGHT  									_trasactionDepth = depth; #else  			#                        Thread.VolatileWrite (ref _trasactionDepth' depth); #endif  			Execute (cmd + savepoint);  			return;  		}  	}  }  
Magic Number,SQLite,SQLiteCommand,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,BindParameter,The following statement contains a magic number: if (value == null) {  	SQLite3.BindNull (stmt' index);  }  else {  	if (value is Int32) {  		SQLite3.BindInt (stmt' index' (int)value);  	}  	else if (value is String) {  		SQLite3.BindText (stmt' index' (string)value' -1' NegativePointer);  	}  	else if (value is Byte || value is UInt16 || value is SByte || value is Int16) {  		SQLite3.BindInt (stmt' index' Convert.ToInt32 (value));  	}  	else if (value is Boolean) {  		SQLite3.BindInt (stmt' index' (bool)value ? 1 : 0);  	}  	else if (value is UInt32 || value is Int64) {  		SQLite3.BindInt64 (stmt' index' Convert.ToInt64 (value));  	}  	else if (value is Single || value is Double || value is Decimal) {  		SQLite3.BindDouble (stmt' index' Convert.ToDouble (value));  	}  	else if (value is DateTime) {  		if (storeDateTimeAsTicks) {  			SQLite3.BindInt64 (stmt' index' ((DateTime)value).Ticks);  		}  		else {  			SQLite3.BindText (stmt' index' ((DateTime)value).ToString ("yyyy-MM-dd HH:mm:ss")' -1' NegativePointer);  		}  		#if !NETFX_CORE  						} else if (value.GetType().IsEnum) { #else  	}  	else if (value.GetType ().GetTypeInfo ().IsEnum) {  		#endif  		SQLite3.BindInt (stmt' index' Convert.ToInt32 (value));  	}  	else if (value is byte[]) {  		SQLite3.BindBlob (stmt' index' (byte[])value' ((byte[])value).Length' NegativePointer);  	}  	else if (value is Guid) {  		SQLite3.BindText (stmt' index' ((Guid)value).ToString ()' 72' NegativePointer);  	}  	else {  		throw new NotSupportedException ("Cannot store type: " + value.GetType ());  	}  }  
Magic Number,SQLite,SQLiteCommand,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,BindParameter,The following statement contains a magic number: if (value is Int32) {  	SQLite3.BindInt (stmt' index' (int)value);  }  else if (value is String) {  	SQLite3.BindText (stmt' index' (string)value' -1' NegativePointer);  }  else if (value is Byte || value is UInt16 || value is SByte || value is Int16) {  	SQLite3.BindInt (stmt' index' Convert.ToInt32 (value));  }  else if (value is Boolean) {  	SQLite3.BindInt (stmt' index' (bool)value ? 1 : 0);  }  else if (value is UInt32 || value is Int64) {  	SQLite3.BindInt64 (stmt' index' Convert.ToInt64 (value));  }  else if (value is Single || value is Double || value is Decimal) {  	SQLite3.BindDouble (stmt' index' Convert.ToDouble (value));  }  else if (value is DateTime) {  	if (storeDateTimeAsTicks) {  		SQLite3.BindInt64 (stmt' index' ((DateTime)value).Ticks);  	}  	else {  		SQLite3.BindText (stmt' index' ((DateTime)value).ToString ("yyyy-MM-dd HH:mm:ss")' -1' NegativePointer);  	}  	#if !NETFX_CORE  					} else if (value.GetType().IsEnum) { #else  }  else if (value.GetType ().GetTypeInfo ().IsEnum) {  	#endif  	SQLite3.BindInt (stmt' index' Convert.ToInt32 (value));  }  else if (value is byte[]) {  	SQLite3.BindBlob (stmt' index' (byte[])value' ((byte[])value).Length' NegativePointer);  }  else if (value is Guid) {  	SQLite3.BindText (stmt' index' ((Guid)value).ToString ()' 72' NegativePointer);  }  else {  	throw new NotSupportedException ("Cannot store type: " + value.GetType ());  }  
Magic Number,SQLite,SQLiteCommand,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,BindParameter,The following statement contains a magic number: if (value is String) {  	SQLite3.BindText (stmt' index' (string)value' -1' NegativePointer);  }  else if (value is Byte || value is UInt16 || value is SByte || value is Int16) {  	SQLite3.BindInt (stmt' index' Convert.ToInt32 (value));  }  else if (value is Boolean) {  	SQLite3.BindInt (stmt' index' (bool)value ? 1 : 0);  }  else if (value is UInt32 || value is Int64) {  	SQLite3.BindInt64 (stmt' index' Convert.ToInt64 (value));  }  else if (value is Single || value is Double || value is Decimal) {  	SQLite3.BindDouble (stmt' index' Convert.ToDouble (value));  }  else if (value is DateTime) {  	if (storeDateTimeAsTicks) {  		SQLite3.BindInt64 (stmt' index' ((DateTime)value).Ticks);  	}  	else {  		SQLite3.BindText (stmt' index' ((DateTime)value).ToString ("yyyy-MM-dd HH:mm:ss")' -1' NegativePointer);  	}  	#if !NETFX_CORE  					} else if (value.GetType().IsEnum) { #else  }  else if (value.GetType ().GetTypeInfo ().IsEnum) {  	#endif  	SQLite3.BindInt (stmt' index' Convert.ToInt32 (value));  }  else if (value is byte[]) {  	SQLite3.BindBlob (stmt' index' (byte[])value' ((byte[])value).Length' NegativePointer);  }  else if (value is Guid) {  	SQLite3.BindText (stmt' index' ((Guid)value).ToString ()' 72' NegativePointer);  }  else {  	throw new NotSupportedException ("Cannot store type: " + value.GetType ());  }  
Magic Number,SQLite,SQLiteCommand,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,BindParameter,The following statement contains a magic number: if (value is Byte || value is UInt16 || value is SByte || value is Int16) {  	SQLite3.BindInt (stmt' index' Convert.ToInt32 (value));  }  else if (value is Boolean) {  	SQLite3.BindInt (stmt' index' (bool)value ? 1 : 0);  }  else if (value is UInt32 || value is Int64) {  	SQLite3.BindInt64 (stmt' index' Convert.ToInt64 (value));  }  else if (value is Single || value is Double || value is Decimal) {  	SQLite3.BindDouble (stmt' index' Convert.ToDouble (value));  }  else if (value is DateTime) {  	if (storeDateTimeAsTicks) {  		SQLite3.BindInt64 (stmt' index' ((DateTime)value).Ticks);  	}  	else {  		SQLite3.BindText (stmt' index' ((DateTime)value).ToString ("yyyy-MM-dd HH:mm:ss")' -1' NegativePointer);  	}  	#if !NETFX_CORE  					} else if (value.GetType().IsEnum) { #else  }  else if (value.GetType ().GetTypeInfo ().IsEnum) {  	#endif  	SQLite3.BindInt (stmt' index' Convert.ToInt32 (value));  }  else if (value is byte[]) {  	SQLite3.BindBlob (stmt' index' (byte[])value' ((byte[])value).Length' NegativePointer);  }  else if (value is Guid) {  	SQLite3.BindText (stmt' index' ((Guid)value).ToString ()' 72' NegativePointer);  }  else {  	throw new NotSupportedException ("Cannot store type: " + value.GetType ());  }  
Magic Number,SQLite,SQLiteCommand,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,BindParameter,The following statement contains a magic number: if (value is Boolean) {  	SQLite3.BindInt (stmt' index' (bool)value ? 1 : 0);  }  else if (value is UInt32 || value is Int64) {  	SQLite3.BindInt64 (stmt' index' Convert.ToInt64 (value));  }  else if (value is Single || value is Double || value is Decimal) {  	SQLite3.BindDouble (stmt' index' Convert.ToDouble (value));  }  else if (value is DateTime) {  	if (storeDateTimeAsTicks) {  		SQLite3.BindInt64 (stmt' index' ((DateTime)value).Ticks);  	}  	else {  		SQLite3.BindText (stmt' index' ((DateTime)value).ToString ("yyyy-MM-dd HH:mm:ss")' -1' NegativePointer);  	}  	#if !NETFX_CORE  					} else if (value.GetType().IsEnum) { #else  }  else if (value.GetType ().GetTypeInfo ().IsEnum) {  	#endif  	SQLite3.BindInt (stmt' index' Convert.ToInt32 (value));  }  else if (value is byte[]) {  	SQLite3.BindBlob (stmt' index' (byte[])value' ((byte[])value).Length' NegativePointer);  }  else if (value is Guid) {  	SQLite3.BindText (stmt' index' ((Guid)value).ToString ()' 72' NegativePointer);  }  else {  	throw new NotSupportedException ("Cannot store type: " + value.GetType ());  }  
Magic Number,SQLite,SQLiteCommand,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,BindParameter,The following statement contains a magic number: if (value is UInt32 || value is Int64) {  	SQLite3.BindInt64 (stmt' index' Convert.ToInt64 (value));  }  else if (value is Single || value is Double || value is Decimal) {  	SQLite3.BindDouble (stmt' index' Convert.ToDouble (value));  }  else if (value is DateTime) {  	if (storeDateTimeAsTicks) {  		SQLite3.BindInt64 (stmt' index' ((DateTime)value).Ticks);  	}  	else {  		SQLite3.BindText (stmt' index' ((DateTime)value).ToString ("yyyy-MM-dd HH:mm:ss")' -1' NegativePointer);  	}  	#if !NETFX_CORE  					} else if (value.GetType().IsEnum) { #else  }  else if (value.GetType ().GetTypeInfo ().IsEnum) {  	#endif  	SQLite3.BindInt (stmt' index' Convert.ToInt32 (value));  }  else if (value is byte[]) {  	SQLite3.BindBlob (stmt' index' (byte[])value' ((byte[])value).Length' NegativePointer);  }  else if (value is Guid) {  	SQLite3.BindText (stmt' index' ((Guid)value).ToString ()' 72' NegativePointer);  }  else {  	throw new NotSupportedException ("Cannot store type: " + value.GetType ());  }  
Magic Number,SQLite,SQLiteCommand,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,BindParameter,The following statement contains a magic number: if (value is Single || value is Double || value is Decimal) {  	SQLite3.BindDouble (stmt' index' Convert.ToDouble (value));  }  else if (value is DateTime) {  	if (storeDateTimeAsTicks) {  		SQLite3.BindInt64 (stmt' index' ((DateTime)value).Ticks);  	}  	else {  		SQLite3.BindText (stmt' index' ((DateTime)value).ToString ("yyyy-MM-dd HH:mm:ss")' -1' NegativePointer);  	}  	#if !NETFX_CORE  					} else if (value.GetType().IsEnum) { #else  }  else if (value.GetType ().GetTypeInfo ().IsEnum) {  	#endif  	SQLite3.BindInt (stmt' index' Convert.ToInt32 (value));  }  else if (value is byte[]) {  	SQLite3.BindBlob (stmt' index' (byte[])value' ((byte[])value).Length' NegativePointer);  }  else if (value is Guid) {  	SQLite3.BindText (stmt' index' ((Guid)value).ToString ()' 72' NegativePointer);  }  else {  	throw new NotSupportedException ("Cannot store type: " + value.GetType ());  }  
Magic Number,SQLite,SQLiteCommand,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,BindParameter,The following statement contains a magic number: if (value is DateTime) {  	if (storeDateTimeAsTicks) {  		SQLite3.BindInt64 (stmt' index' ((DateTime)value).Ticks);  	}  	else {  		SQLite3.BindText (stmt' index' ((DateTime)value).ToString ("yyyy-MM-dd HH:mm:ss")' -1' NegativePointer);  	}  	#if !NETFX_CORE  					} else if (value.GetType().IsEnum) { #else  }  else if (value.GetType ().GetTypeInfo ().IsEnum) {  	#endif  	SQLite3.BindInt (stmt' index' Convert.ToInt32 (value));  }  else if (value is byte[]) {  	SQLite3.BindBlob (stmt' index' (byte[])value' ((byte[])value).Length' NegativePointer);  }  else if (value is Guid) {  	SQLite3.BindText (stmt' index' ((Guid)value).ToString ()' 72' NegativePointer);  }  else {  	throw new NotSupportedException ("Cannot store type: " + value.GetType ());  }  
Magic Number,SQLite,SQLiteCommand,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,BindParameter,The following statement contains a magic number: if (value.GetType ().GetTypeInfo ().IsEnum) {  	#endif  	SQLite3.BindInt (stmt' index' Convert.ToInt32 (value));  }  else if (value is byte[]) {  	SQLite3.BindBlob (stmt' index' (byte[])value' ((byte[])value).Length' NegativePointer);  }  else if (value is Guid) {  	SQLite3.BindText (stmt' index' ((Guid)value).ToString ()' 72' NegativePointer);  }  else {  	throw new NotSupportedException ("Cannot store type: " + value.GetType ());  }  
Magic Number,SQLite,SQLiteCommand,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,BindParameter,The following statement contains a magic number: if (value is byte[]) {  	SQLite3.BindBlob (stmt' index' (byte[])value' ((byte[])value).Length' NegativePointer);  }  else if (value is Guid) {  	SQLite3.BindText (stmt' index' ((Guid)value).ToString ()' 72' NegativePointer);  }  else {  	throw new NotSupportedException ("Cannot store type: " + value.GetType ());  }  
Magic Number,SQLite,SQLiteCommand,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,BindParameter,The following statement contains a magic number: if (value is Guid) {  	SQLite3.BindText (stmt' index' ((Guid)value).ToString ()' 72' NegativePointer);  }  else {  	throw new NotSupportedException ("Cannot store type: " + value.GetType ());  }  
Magic Number,SQLite,SQLiteCommand,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,BindParameter,The following statement contains a magic number: SQLite3.BindText (stmt' index' ((Guid)value).ToString ()' 72' NegativePointer);  
Magic Number,SQLite,TableQuery,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,CompileExpr,The following statement contains a magic number: if (expr == null) {  	throw new NotSupportedException ("Expression is NULL");  }  else if (expr is BinaryExpression) {  	var bin = (BinaryExpression)expr;  	var leftr = CompileExpr (bin.Left' queryArgs);  	var rightr = CompileExpr (bin.Right' queryArgs);  	//If either side is a parameter and is null' then handle the other side specially (for "is null"/"is not null")  	string text;  	if (leftr.CommandText == "?" && leftr.Value == null)  		text = CompileNullBinaryExpression (bin' rightr);  	else if (rightr.CommandText == "?" && rightr.Value == null)  		text = CompileNullBinaryExpression (bin' leftr);  	else  		text = "(" + leftr.CommandText + " " + GetSqlName (bin) + " " + rightr.CommandText + ")";  	return new CompileResult {  		CommandText = text  	};  }  else if (expr.NodeType == ExpressionType.Call) {  	var call = (MethodCallExpression)expr;  	var args = new CompileResult[call.Arguments.Count];  	var obj = call.Object != null ? CompileExpr (call.Object' queryArgs) : null;  	for (var i = 0; i < args.Length; i++) {  		args [i] = CompileExpr (call.Arguments [i]' queryArgs);  	}  	var sqlCall = "";  	if (call.Method.Name == "Like" && args.Length == 2) {  		sqlCall = "(" + args [0].CommandText + " like " + args [1].CommandText + ")";  	}  	else if (call.Method.Name == "Contains" && args.Length == 2) {  		sqlCall = "(" + args [1].CommandText + " in " + args [0].CommandText + ")";  	}  	else if (call.Method.Name == "Contains" && args.Length == 1) {  		if (call.Object != null && call.Object.Type == typeof(string)) {  			sqlCall = "(" + obj.CommandText + " like ('%' || " + args [0].CommandText + " || '%'))";  		}  		else {  			sqlCall = "(" + args [0].CommandText + " in " + obj.CommandText + ")";  		}  	}  	else if (call.Method.Name == "StartsWith" && args.Length == 1) {  		sqlCall = "(" + obj.CommandText + " like (" + args [0].CommandText + " || '%'))";  	}  	else if (call.Method.Name == "EndsWith" && args.Length == 1) {  		sqlCall = "(" + obj.CommandText + " like ('%' || " + args [0].CommandText + "))";  	}  	else if (call.Method.Name == "Equals" && args.Length == 1) {  		sqlCall = "(" + obj.CommandText + " = (" + args [0].CommandText + "))";  	}  	else {  		sqlCall = call.Method.Name.ToLower () + "(" + string.Join ("'"' args.Select (a => a.CommandText).ToArray ()) + ")";  	}  	return new CompileResult {  		CommandText = sqlCall  	};  }  else if (expr.NodeType == ExpressionType.Constant) {  	var c = (ConstantExpression)expr;  	queryArgs.Add (c.Value);  	return new CompileResult {  		CommandText = "?"'  		Value = c.Value  	};  }  else if (expr.NodeType == ExpressionType.Convert) {  	var u = (UnaryExpression)expr;  	var ty = u.Type;  	var valr = CompileExpr (u.Operand' queryArgs);  	return new CompileResult {  		CommandText = valr.CommandText'  		Value = valr.Value != null ? ConvertTo (valr.Value' ty) : null  	};  }  else if (expr.NodeType == ExpressionType.MemberAccess) {  	var mem = (MemberExpression)expr;  	if (mem.Expression != null && mem.Expression.NodeType == ExpressionType.Parameter) {  		//  		// This is a column of our table' output just the column name  		// Need to translate it if that column name is mapped  		//  		var columnName = Table.FindColumnWithPropertyName (mem.Member.Name).Name;  		return new CompileResult {  			CommandText = "\"" + columnName + "\""  		};  	}  	else {  		object obj = null;  		if (mem.Expression != null) {  			var r = CompileExpr (mem.Expression' queryArgs);  			if (r.Value == null) {  				throw new NotSupportedException ("Member access failed to compile expression");  			}  			if (r.CommandText == "?") {  				queryArgs.RemoveAt (queryArgs.Count - 1);  			}  			obj = r.Value;  		}  		//  		// Get the member value  		//  		object val = null;  		#if !NETFX_CORE  							if (mem.Member.MemberType == MemberTypes.Property) { #else  		if (mem.Member is PropertyInfo) {  			#endif  			var m = (PropertyInfo)mem.Member;  			val = m.GetValue (obj' null);  			#if !NETFX_CORE  								} else if (mem.Member.MemberType == MemberTypes.Field) { #else  		}  		else if (mem.Member is FieldInfo) {  			#endif  			#if SILVERLIGHT  									val = Expression.Lambda (expr).Compile ().DynamicInvoke (); #else  			var m = (FieldInfo)mem.Member;  			val = m.GetValue (obj);  			#endif  		}  		else {  			#if !NETFX_CORE  									throw new NotSupportedException ("MemberExpr: " + mem.Member.MemberType.ToString ()); #else  			throw new NotSupportedException ("MemberExpr: " + mem.Member.DeclaringType.ToString ());  			#endif  		}  		//  		// Work special magic for enumerables  		//  		if (val != null && val is System.Collections.IEnumerable && !(val is string)) {  			var sb = new System.Text.StringBuilder ();  			sb.Append ("(");  			var head = "";  			foreach (var a in (System.Collections.IEnumerable)val) {  				queryArgs.Add (a);  				sb.Append (head);  				sb.Append ("?");  				head = "'";  			}  			sb.Append (")");  			return new CompileResult {  				CommandText = sb.ToString ()'  				Value = val  			};  		}  		else {  			queryArgs.Add (val);  			return new CompileResult {  				CommandText = "?"'  				Value = val  			};  		}  	}  }  
Magic Number,SQLite,TableQuery,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,CompileExpr,The following statement contains a magic number: if (expr == null) {  	throw new NotSupportedException ("Expression is NULL");  }  else if (expr is BinaryExpression) {  	var bin = (BinaryExpression)expr;  	var leftr = CompileExpr (bin.Left' queryArgs);  	var rightr = CompileExpr (bin.Right' queryArgs);  	//If either side is a parameter and is null' then handle the other side specially (for "is null"/"is not null")  	string text;  	if (leftr.CommandText == "?" && leftr.Value == null)  		text = CompileNullBinaryExpression (bin' rightr);  	else if (rightr.CommandText == "?" && rightr.Value == null)  		text = CompileNullBinaryExpression (bin' leftr);  	else  		text = "(" + leftr.CommandText + " " + GetSqlName (bin) + " " + rightr.CommandText + ")";  	return new CompileResult {  		CommandText = text  	};  }  else if (expr.NodeType == ExpressionType.Call) {  	var call = (MethodCallExpression)expr;  	var args = new CompileResult[call.Arguments.Count];  	var obj = call.Object != null ? CompileExpr (call.Object' queryArgs) : null;  	for (var i = 0; i < args.Length; i++) {  		args [i] = CompileExpr (call.Arguments [i]' queryArgs);  	}  	var sqlCall = "";  	if (call.Method.Name == "Like" && args.Length == 2) {  		sqlCall = "(" + args [0].CommandText + " like " + args [1].CommandText + ")";  	}  	else if (call.Method.Name == "Contains" && args.Length == 2) {  		sqlCall = "(" + args [1].CommandText + " in " + args [0].CommandText + ")";  	}  	else if (call.Method.Name == "Contains" && args.Length == 1) {  		if (call.Object != null && call.Object.Type == typeof(string)) {  			sqlCall = "(" + obj.CommandText + " like ('%' || " + args [0].CommandText + " || '%'))";  		}  		else {  			sqlCall = "(" + args [0].CommandText + " in " + obj.CommandText + ")";  		}  	}  	else if (call.Method.Name == "StartsWith" && args.Length == 1) {  		sqlCall = "(" + obj.CommandText + " like (" + args [0].CommandText + " || '%'))";  	}  	else if (call.Method.Name == "EndsWith" && args.Length == 1) {  		sqlCall = "(" + obj.CommandText + " like ('%' || " + args [0].CommandText + "))";  	}  	else if (call.Method.Name == "Equals" && args.Length == 1) {  		sqlCall = "(" + obj.CommandText + " = (" + args [0].CommandText + "))";  	}  	else {  		sqlCall = call.Method.Name.ToLower () + "(" + string.Join ("'"' args.Select (a => a.CommandText).ToArray ()) + ")";  	}  	return new CompileResult {  		CommandText = sqlCall  	};  }  else if (expr.NodeType == ExpressionType.Constant) {  	var c = (ConstantExpression)expr;  	queryArgs.Add (c.Value);  	return new CompileResult {  		CommandText = "?"'  		Value = c.Value  	};  }  else if (expr.NodeType == ExpressionType.Convert) {  	var u = (UnaryExpression)expr;  	var ty = u.Type;  	var valr = CompileExpr (u.Operand' queryArgs);  	return new CompileResult {  		CommandText = valr.CommandText'  		Value = valr.Value != null ? ConvertTo (valr.Value' ty) : null  	};  }  else if (expr.NodeType == ExpressionType.MemberAccess) {  	var mem = (MemberExpression)expr;  	if (mem.Expression != null && mem.Expression.NodeType == ExpressionType.Parameter) {  		//  		// This is a column of our table' output just the column name  		// Need to translate it if that column name is mapped  		//  		var columnName = Table.FindColumnWithPropertyName (mem.Member.Name).Name;  		return new CompileResult {  			CommandText = "\"" + columnName + "\""  		};  	}  	else {  		object obj = null;  		if (mem.Expression != null) {  			var r = CompileExpr (mem.Expression' queryArgs);  			if (r.Value == null) {  				throw new NotSupportedException ("Member access failed to compile expression");  			}  			if (r.CommandText == "?") {  				queryArgs.RemoveAt (queryArgs.Count - 1);  			}  			obj = r.Value;  		}  		//  		// Get the member value  		//  		object val = null;  		#if !NETFX_CORE  							if (mem.Member.MemberType == MemberTypes.Property) { #else  		if (mem.Member is PropertyInfo) {  			#endif  			var m = (PropertyInfo)mem.Member;  			val = m.GetValue (obj' null);  			#if !NETFX_CORE  								} else if (mem.Member.MemberType == MemberTypes.Field) { #else  		}  		else if (mem.Member is FieldInfo) {  			#endif  			#if SILVERLIGHT  									val = Expression.Lambda (expr).Compile ().DynamicInvoke (); #else  			var m = (FieldInfo)mem.Member;  			val = m.GetValue (obj);  			#endif  		}  		else {  			#if !NETFX_CORE  									throw new NotSupportedException ("MemberExpr: " + mem.Member.MemberType.ToString ()); #else  			throw new NotSupportedException ("MemberExpr: " + mem.Member.DeclaringType.ToString ());  			#endif  		}  		//  		// Work special magic for enumerables  		//  		if (val != null && val is System.Collections.IEnumerable && !(val is string)) {  			var sb = new System.Text.StringBuilder ();  			sb.Append ("(");  			var head = "";  			foreach (var a in (System.Collections.IEnumerable)val) {  				queryArgs.Add (a);  				sb.Append (head);  				sb.Append ("?");  				head = "'";  			}  			sb.Append (")");  			return new CompileResult {  				CommandText = sb.ToString ()'  				Value = val  			};  		}  		else {  			queryArgs.Add (val);  			return new CompileResult {  				CommandText = "?"'  				Value = val  			};  		}  	}  }  
Magic Number,SQLite,TableQuery,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,CompileExpr,The following statement contains a magic number: if (expr is BinaryExpression) {  	var bin = (BinaryExpression)expr;  	var leftr = CompileExpr (bin.Left' queryArgs);  	var rightr = CompileExpr (bin.Right' queryArgs);  	//If either side is a parameter and is null' then handle the other side specially (for "is null"/"is not null")  	string text;  	if (leftr.CommandText == "?" && leftr.Value == null)  		text = CompileNullBinaryExpression (bin' rightr);  	else if (rightr.CommandText == "?" && rightr.Value == null)  		text = CompileNullBinaryExpression (bin' leftr);  	else  		text = "(" + leftr.CommandText + " " + GetSqlName (bin) + " " + rightr.CommandText + ")";  	return new CompileResult {  		CommandText = text  	};  }  else if (expr.NodeType == ExpressionType.Call) {  	var call = (MethodCallExpression)expr;  	var args = new CompileResult[call.Arguments.Count];  	var obj = call.Object != null ? CompileExpr (call.Object' queryArgs) : null;  	for (var i = 0; i < args.Length; i++) {  		args [i] = CompileExpr (call.Arguments [i]' queryArgs);  	}  	var sqlCall = "";  	if (call.Method.Name == "Like" && args.Length == 2) {  		sqlCall = "(" + args [0].CommandText + " like " + args [1].CommandText + ")";  	}  	else if (call.Method.Name == "Contains" && args.Length == 2) {  		sqlCall = "(" + args [1].CommandText + " in " + args [0].CommandText + ")";  	}  	else if (call.Method.Name == "Contains" && args.Length == 1) {  		if (call.Object != null && call.Object.Type == typeof(string)) {  			sqlCall = "(" + obj.CommandText + " like ('%' || " + args [0].CommandText + " || '%'))";  		}  		else {  			sqlCall = "(" + args [0].CommandText + " in " + obj.CommandText + ")";  		}  	}  	else if (call.Method.Name == "StartsWith" && args.Length == 1) {  		sqlCall = "(" + obj.CommandText + " like (" + args [0].CommandText + " || '%'))";  	}  	else if (call.Method.Name == "EndsWith" && args.Length == 1) {  		sqlCall = "(" + obj.CommandText + " like ('%' || " + args [0].CommandText + "))";  	}  	else if (call.Method.Name == "Equals" && args.Length == 1) {  		sqlCall = "(" + obj.CommandText + " = (" + args [0].CommandText + "))";  	}  	else {  		sqlCall = call.Method.Name.ToLower () + "(" + string.Join ("'"' args.Select (a => a.CommandText).ToArray ()) + ")";  	}  	return new CompileResult {  		CommandText = sqlCall  	};  }  else if (expr.NodeType == ExpressionType.Constant) {  	var c = (ConstantExpression)expr;  	queryArgs.Add (c.Value);  	return new CompileResult {  		CommandText = "?"'  		Value = c.Value  	};  }  else if (expr.NodeType == ExpressionType.Convert) {  	var u = (UnaryExpression)expr;  	var ty = u.Type;  	var valr = CompileExpr (u.Operand' queryArgs);  	return new CompileResult {  		CommandText = valr.CommandText'  		Value = valr.Value != null ? ConvertTo (valr.Value' ty) : null  	};  }  else if (expr.NodeType == ExpressionType.MemberAccess) {  	var mem = (MemberExpression)expr;  	if (mem.Expression != null && mem.Expression.NodeType == ExpressionType.Parameter) {  		//  		// This is a column of our table' output just the column name  		// Need to translate it if that column name is mapped  		//  		var columnName = Table.FindColumnWithPropertyName (mem.Member.Name).Name;  		return new CompileResult {  			CommandText = "\"" + columnName + "\""  		};  	}  	else {  		object obj = null;  		if (mem.Expression != null) {  			var r = CompileExpr (mem.Expression' queryArgs);  			if (r.Value == null) {  				throw new NotSupportedException ("Member access failed to compile expression");  			}  			if (r.CommandText == "?") {  				queryArgs.RemoveAt (queryArgs.Count - 1);  			}  			obj = r.Value;  		}  		//  		// Get the member value  		//  		object val = null;  		#if !NETFX_CORE  							if (mem.Member.MemberType == MemberTypes.Property) { #else  		if (mem.Member is PropertyInfo) {  			#endif  			var m = (PropertyInfo)mem.Member;  			val = m.GetValue (obj' null);  			#if !NETFX_CORE  								} else if (mem.Member.MemberType == MemberTypes.Field) { #else  		}  		else if (mem.Member is FieldInfo) {  			#endif  			#if SILVERLIGHT  									val = Expression.Lambda (expr).Compile ().DynamicInvoke (); #else  			var m = (FieldInfo)mem.Member;  			val = m.GetValue (obj);  			#endif  		}  		else {  			#if !NETFX_CORE  									throw new NotSupportedException ("MemberExpr: " + mem.Member.MemberType.ToString ()); #else  			throw new NotSupportedException ("MemberExpr: " + mem.Member.DeclaringType.ToString ());  			#endif  		}  		//  		// Work special magic for enumerables  		//  		if (val != null && val is System.Collections.IEnumerable && !(val is string)) {  			var sb = new System.Text.StringBuilder ();  			sb.Append ("(");  			var head = "";  			foreach (var a in (System.Collections.IEnumerable)val) {  				queryArgs.Add (a);  				sb.Append (head);  				sb.Append ("?");  				head = "'";  			}  			sb.Append (")");  			return new CompileResult {  				CommandText = sb.ToString ()'  				Value = val  			};  		}  		else {  			queryArgs.Add (val);  			return new CompileResult {  				CommandText = "?"'  				Value = val  			};  		}  	}  }  
Magic Number,SQLite,TableQuery,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,CompileExpr,The following statement contains a magic number: if (expr is BinaryExpression) {  	var bin = (BinaryExpression)expr;  	var leftr = CompileExpr (bin.Left' queryArgs);  	var rightr = CompileExpr (bin.Right' queryArgs);  	//If either side is a parameter and is null' then handle the other side specially (for "is null"/"is not null")  	string text;  	if (leftr.CommandText == "?" && leftr.Value == null)  		text = CompileNullBinaryExpression (bin' rightr);  	else if (rightr.CommandText == "?" && rightr.Value == null)  		text = CompileNullBinaryExpression (bin' leftr);  	else  		text = "(" + leftr.CommandText + " " + GetSqlName (bin) + " " + rightr.CommandText + ")";  	return new CompileResult {  		CommandText = text  	};  }  else if (expr.NodeType == ExpressionType.Call) {  	var call = (MethodCallExpression)expr;  	var args = new CompileResult[call.Arguments.Count];  	var obj = call.Object != null ? CompileExpr (call.Object' queryArgs) : null;  	for (var i = 0; i < args.Length; i++) {  		args [i] = CompileExpr (call.Arguments [i]' queryArgs);  	}  	var sqlCall = "";  	if (call.Method.Name == "Like" && args.Length == 2) {  		sqlCall = "(" + args [0].CommandText + " like " + args [1].CommandText + ")";  	}  	else if (call.Method.Name == "Contains" && args.Length == 2) {  		sqlCall = "(" + args [1].CommandText + " in " + args [0].CommandText + ")";  	}  	else if (call.Method.Name == "Contains" && args.Length == 1) {  		if (call.Object != null && call.Object.Type == typeof(string)) {  			sqlCall = "(" + obj.CommandText + " like ('%' || " + args [0].CommandText + " || '%'))";  		}  		else {  			sqlCall = "(" + args [0].CommandText + " in " + obj.CommandText + ")";  		}  	}  	else if (call.Method.Name == "StartsWith" && args.Length == 1) {  		sqlCall = "(" + obj.CommandText + " like (" + args [0].CommandText + " || '%'))";  	}  	else if (call.Method.Name == "EndsWith" && args.Length == 1) {  		sqlCall = "(" + obj.CommandText + " like ('%' || " + args [0].CommandText + "))";  	}  	else if (call.Method.Name == "Equals" && args.Length == 1) {  		sqlCall = "(" + obj.CommandText + " = (" + args [0].CommandText + "))";  	}  	else {  		sqlCall = call.Method.Name.ToLower () + "(" + string.Join ("'"' args.Select (a => a.CommandText).ToArray ()) + ")";  	}  	return new CompileResult {  		CommandText = sqlCall  	};  }  else if (expr.NodeType == ExpressionType.Constant) {  	var c = (ConstantExpression)expr;  	queryArgs.Add (c.Value);  	return new CompileResult {  		CommandText = "?"'  		Value = c.Value  	};  }  else if (expr.NodeType == ExpressionType.Convert) {  	var u = (UnaryExpression)expr;  	var ty = u.Type;  	var valr = CompileExpr (u.Operand' queryArgs);  	return new CompileResult {  		CommandText = valr.CommandText'  		Value = valr.Value != null ? ConvertTo (valr.Value' ty) : null  	};  }  else if (expr.NodeType == ExpressionType.MemberAccess) {  	var mem = (MemberExpression)expr;  	if (mem.Expression != null && mem.Expression.NodeType == ExpressionType.Parameter) {  		//  		// This is a column of our table' output just the column name  		// Need to translate it if that column name is mapped  		//  		var columnName = Table.FindColumnWithPropertyName (mem.Member.Name).Name;  		return new CompileResult {  			CommandText = "\"" + columnName + "\""  		};  	}  	else {  		object obj = null;  		if (mem.Expression != null) {  			var r = CompileExpr (mem.Expression' queryArgs);  			if (r.Value == null) {  				throw new NotSupportedException ("Member access failed to compile expression");  			}  			if (r.CommandText == "?") {  				queryArgs.RemoveAt (queryArgs.Count - 1);  			}  			obj = r.Value;  		}  		//  		// Get the member value  		//  		object val = null;  		#if !NETFX_CORE  							if (mem.Member.MemberType == MemberTypes.Property) { #else  		if (mem.Member is PropertyInfo) {  			#endif  			var m = (PropertyInfo)mem.Member;  			val = m.GetValue (obj' null);  			#if !NETFX_CORE  								} else if (mem.Member.MemberType == MemberTypes.Field) { #else  		}  		else if (mem.Member is FieldInfo) {  			#endif  			#if SILVERLIGHT  									val = Expression.Lambda (expr).Compile ().DynamicInvoke (); #else  			var m = (FieldInfo)mem.Member;  			val = m.GetValue (obj);  			#endif  		}  		else {  			#if !NETFX_CORE  									throw new NotSupportedException ("MemberExpr: " + mem.Member.MemberType.ToString ()); #else  			throw new NotSupportedException ("MemberExpr: " + mem.Member.DeclaringType.ToString ());  			#endif  		}  		//  		// Work special magic for enumerables  		//  		if (val != null && val is System.Collections.IEnumerable && !(val is string)) {  			var sb = new System.Text.StringBuilder ();  			sb.Append ("(");  			var head = "";  			foreach (var a in (System.Collections.IEnumerable)val) {  				queryArgs.Add (a);  				sb.Append (head);  				sb.Append ("?");  				head = "'";  			}  			sb.Append (")");  			return new CompileResult {  				CommandText = sb.ToString ()'  				Value = val  			};  		}  		else {  			queryArgs.Add (val);  			return new CompileResult {  				CommandText = "?"'  				Value = val  			};  		}  	}  }  
Magic Number,SQLite,TableQuery,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,CompileExpr,The following statement contains a magic number: if (expr.NodeType == ExpressionType.Call) {  	var call = (MethodCallExpression)expr;  	var args = new CompileResult[call.Arguments.Count];  	var obj = call.Object != null ? CompileExpr (call.Object' queryArgs) : null;  	for (var i = 0; i < args.Length; i++) {  		args [i] = CompileExpr (call.Arguments [i]' queryArgs);  	}  	var sqlCall = "";  	if (call.Method.Name == "Like" && args.Length == 2) {  		sqlCall = "(" + args [0].CommandText + " like " + args [1].CommandText + ")";  	}  	else if (call.Method.Name == "Contains" && args.Length == 2) {  		sqlCall = "(" + args [1].CommandText + " in " + args [0].CommandText + ")";  	}  	else if (call.Method.Name == "Contains" && args.Length == 1) {  		if (call.Object != null && call.Object.Type == typeof(string)) {  			sqlCall = "(" + obj.CommandText + " like ('%' || " + args [0].CommandText + " || '%'))";  		}  		else {  			sqlCall = "(" + args [0].CommandText + " in " + obj.CommandText + ")";  		}  	}  	else if (call.Method.Name == "StartsWith" && args.Length == 1) {  		sqlCall = "(" + obj.CommandText + " like (" + args [0].CommandText + " || '%'))";  	}  	else if (call.Method.Name == "EndsWith" && args.Length == 1) {  		sqlCall = "(" + obj.CommandText + " like ('%' || " + args [0].CommandText + "))";  	}  	else if (call.Method.Name == "Equals" && args.Length == 1) {  		sqlCall = "(" + obj.CommandText + " = (" + args [0].CommandText + "))";  	}  	else {  		sqlCall = call.Method.Name.ToLower () + "(" + string.Join ("'"' args.Select (a => a.CommandText).ToArray ()) + ")";  	}  	return new CompileResult {  		CommandText = sqlCall  	};  }  else if (expr.NodeType == ExpressionType.Constant) {  	var c = (ConstantExpression)expr;  	queryArgs.Add (c.Value);  	return new CompileResult {  		CommandText = "?"'  		Value = c.Value  	};  }  else if (expr.NodeType == ExpressionType.Convert) {  	var u = (UnaryExpression)expr;  	var ty = u.Type;  	var valr = CompileExpr (u.Operand' queryArgs);  	return new CompileResult {  		CommandText = valr.CommandText'  		Value = valr.Value != null ? ConvertTo (valr.Value' ty) : null  	};  }  else if (expr.NodeType == ExpressionType.MemberAccess) {  	var mem = (MemberExpression)expr;  	if (mem.Expression != null && mem.Expression.NodeType == ExpressionType.Parameter) {  		//  		// This is a column of our table' output just the column name  		// Need to translate it if that column name is mapped  		//  		var columnName = Table.FindColumnWithPropertyName (mem.Member.Name).Name;  		return new CompileResult {  			CommandText = "\"" + columnName + "\""  		};  	}  	else {  		object obj = null;  		if (mem.Expression != null) {  			var r = CompileExpr (mem.Expression' queryArgs);  			if (r.Value == null) {  				throw new NotSupportedException ("Member access failed to compile expression");  			}  			if (r.CommandText == "?") {  				queryArgs.RemoveAt (queryArgs.Count - 1);  			}  			obj = r.Value;  		}  		//  		// Get the member value  		//  		object val = null;  		#if !NETFX_CORE  							if (mem.Member.MemberType == MemberTypes.Property) { #else  		if (mem.Member is PropertyInfo) {  			#endif  			var m = (PropertyInfo)mem.Member;  			val = m.GetValue (obj' null);  			#if !NETFX_CORE  								} else if (mem.Member.MemberType == MemberTypes.Field) { #else  		}  		else if (mem.Member is FieldInfo) {  			#endif  			#if SILVERLIGHT  									val = Expression.Lambda (expr).Compile ().DynamicInvoke (); #else  			var m = (FieldInfo)mem.Member;  			val = m.GetValue (obj);  			#endif  		}  		else {  			#if !NETFX_CORE  									throw new NotSupportedException ("MemberExpr: " + mem.Member.MemberType.ToString ()); #else  			throw new NotSupportedException ("MemberExpr: " + mem.Member.DeclaringType.ToString ());  			#endif  		}  		//  		// Work special magic for enumerables  		//  		if (val != null && val is System.Collections.IEnumerable && !(val is string)) {  			var sb = new System.Text.StringBuilder ();  			sb.Append ("(");  			var head = "";  			foreach (var a in (System.Collections.IEnumerable)val) {  				queryArgs.Add (a);  				sb.Append (head);  				sb.Append ("?");  				head = "'";  			}  			sb.Append (")");  			return new CompileResult {  				CommandText = sb.ToString ()'  				Value = val  			};  		}  		else {  			queryArgs.Add (val);  			return new CompileResult {  				CommandText = "?"'  				Value = val  			};  		}  	}  }  
Magic Number,SQLite,TableQuery,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,CompileExpr,The following statement contains a magic number: if (expr.NodeType == ExpressionType.Call) {  	var call = (MethodCallExpression)expr;  	var args = new CompileResult[call.Arguments.Count];  	var obj = call.Object != null ? CompileExpr (call.Object' queryArgs) : null;  	for (var i = 0; i < args.Length; i++) {  		args [i] = CompileExpr (call.Arguments [i]' queryArgs);  	}  	var sqlCall = "";  	if (call.Method.Name == "Like" && args.Length == 2) {  		sqlCall = "(" + args [0].CommandText + " like " + args [1].CommandText + ")";  	}  	else if (call.Method.Name == "Contains" && args.Length == 2) {  		sqlCall = "(" + args [1].CommandText + " in " + args [0].CommandText + ")";  	}  	else if (call.Method.Name == "Contains" && args.Length == 1) {  		if (call.Object != null && call.Object.Type == typeof(string)) {  			sqlCall = "(" + obj.CommandText + " like ('%' || " + args [0].CommandText + " || '%'))";  		}  		else {  			sqlCall = "(" + args [0].CommandText + " in " + obj.CommandText + ")";  		}  	}  	else if (call.Method.Name == "StartsWith" && args.Length == 1) {  		sqlCall = "(" + obj.CommandText + " like (" + args [0].CommandText + " || '%'))";  	}  	else if (call.Method.Name == "EndsWith" && args.Length == 1) {  		sqlCall = "(" + obj.CommandText + " like ('%' || " + args [0].CommandText + "))";  	}  	else if (call.Method.Name == "Equals" && args.Length == 1) {  		sqlCall = "(" + obj.CommandText + " = (" + args [0].CommandText + "))";  	}  	else {  		sqlCall = call.Method.Name.ToLower () + "(" + string.Join ("'"' args.Select (a => a.CommandText).ToArray ()) + ")";  	}  	return new CompileResult {  		CommandText = sqlCall  	};  }  else if (expr.NodeType == ExpressionType.Constant) {  	var c = (ConstantExpression)expr;  	queryArgs.Add (c.Value);  	return new CompileResult {  		CommandText = "?"'  		Value = c.Value  	};  }  else if (expr.NodeType == ExpressionType.Convert) {  	var u = (UnaryExpression)expr;  	var ty = u.Type;  	var valr = CompileExpr (u.Operand' queryArgs);  	return new CompileResult {  		CommandText = valr.CommandText'  		Value = valr.Value != null ? ConvertTo (valr.Value' ty) : null  	};  }  else if (expr.NodeType == ExpressionType.MemberAccess) {  	var mem = (MemberExpression)expr;  	if (mem.Expression != null && mem.Expression.NodeType == ExpressionType.Parameter) {  		//  		// This is a column of our table' output just the column name  		// Need to translate it if that column name is mapped  		//  		var columnName = Table.FindColumnWithPropertyName (mem.Member.Name).Name;  		return new CompileResult {  			CommandText = "\"" + columnName + "\""  		};  	}  	else {  		object obj = null;  		if (mem.Expression != null) {  			var r = CompileExpr (mem.Expression' queryArgs);  			if (r.Value == null) {  				throw new NotSupportedException ("Member access failed to compile expression");  			}  			if (r.CommandText == "?") {  				queryArgs.RemoveAt (queryArgs.Count - 1);  			}  			obj = r.Value;  		}  		//  		// Get the member value  		//  		object val = null;  		#if !NETFX_CORE  							if (mem.Member.MemberType == MemberTypes.Property) { #else  		if (mem.Member is PropertyInfo) {  			#endif  			var m = (PropertyInfo)mem.Member;  			val = m.GetValue (obj' null);  			#if !NETFX_CORE  								} else if (mem.Member.MemberType == MemberTypes.Field) { #else  		}  		else if (mem.Member is FieldInfo) {  			#endif  			#if SILVERLIGHT  									val = Expression.Lambda (expr).Compile ().DynamicInvoke (); #else  			var m = (FieldInfo)mem.Member;  			val = m.GetValue (obj);  			#endif  		}  		else {  			#if !NETFX_CORE  									throw new NotSupportedException ("MemberExpr: " + mem.Member.MemberType.ToString ()); #else  			throw new NotSupportedException ("MemberExpr: " + mem.Member.DeclaringType.ToString ());  			#endif  		}  		//  		// Work special magic for enumerables  		//  		if (val != null && val is System.Collections.IEnumerable && !(val is string)) {  			var sb = new System.Text.StringBuilder ();  			sb.Append ("(");  			var head = "";  			foreach (var a in (System.Collections.IEnumerable)val) {  				queryArgs.Add (a);  				sb.Append (head);  				sb.Append ("?");  				head = "'";  			}  			sb.Append (")");  			return new CompileResult {  				CommandText = sb.ToString ()'  				Value = val  			};  		}  		else {  			queryArgs.Add (val);  			return new CompileResult {  				CommandText = "?"'  				Value = val  			};  		}  	}  }  
Magic Number,SQLite,TableQuery,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,CompileExpr,The following statement contains a magic number: if (call.Method.Name == "Like" && args.Length == 2) {  	sqlCall = "(" + args [0].CommandText + " like " + args [1].CommandText + ")";  }  else if (call.Method.Name == "Contains" && args.Length == 2) {  	sqlCall = "(" + args [1].CommandText + " in " + args [0].CommandText + ")";  }  else if (call.Method.Name == "Contains" && args.Length == 1) {  	if (call.Object != null && call.Object.Type == typeof(string)) {  		sqlCall = "(" + obj.CommandText + " like ('%' || " + args [0].CommandText + " || '%'))";  	}  	else {  		sqlCall = "(" + args [0].CommandText + " in " + obj.CommandText + ")";  	}  }  else if (call.Method.Name == "StartsWith" && args.Length == 1) {  	sqlCall = "(" + obj.CommandText + " like (" + args [0].CommandText + " || '%'))";  }  else if (call.Method.Name == "EndsWith" && args.Length == 1) {  	sqlCall = "(" + obj.CommandText + " like ('%' || " + args [0].CommandText + "))";  }  else if (call.Method.Name == "Equals" && args.Length == 1) {  	sqlCall = "(" + obj.CommandText + " = (" + args [0].CommandText + "))";  }  else {  	sqlCall = call.Method.Name.ToLower () + "(" + string.Join ("'"' args.Select (a => a.CommandText).ToArray ()) + ")";  }  
Magic Number,SQLite,TableQuery,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,CompileExpr,The following statement contains a magic number: if (call.Method.Name == "Like" && args.Length == 2) {  	sqlCall = "(" + args [0].CommandText + " like " + args [1].CommandText + ")";  }  else if (call.Method.Name == "Contains" && args.Length == 2) {  	sqlCall = "(" + args [1].CommandText + " in " + args [0].CommandText + ")";  }  else if (call.Method.Name == "Contains" && args.Length == 1) {  	if (call.Object != null && call.Object.Type == typeof(string)) {  		sqlCall = "(" + obj.CommandText + " like ('%' || " + args [0].CommandText + " || '%'))";  	}  	else {  		sqlCall = "(" + args [0].CommandText + " in " + obj.CommandText + ")";  	}  }  else if (call.Method.Name == "StartsWith" && args.Length == 1) {  	sqlCall = "(" + obj.CommandText + " like (" + args [0].CommandText + " || '%'))";  }  else if (call.Method.Name == "EndsWith" && args.Length == 1) {  	sqlCall = "(" + obj.CommandText + " like ('%' || " + args [0].CommandText + "))";  }  else if (call.Method.Name == "Equals" && args.Length == 1) {  	sqlCall = "(" + obj.CommandText + " = (" + args [0].CommandText + "))";  }  else {  	sqlCall = call.Method.Name.ToLower () + "(" + string.Join ("'"' args.Select (a => a.CommandText).ToArray ()) + ")";  }  
Magic Number,SQLite,TableQuery,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,CompileExpr,The following statement contains a magic number: if (call.Method.Name == "Contains" && args.Length == 2) {  	sqlCall = "(" + args [1].CommandText + " in " + args [0].CommandText + ")";  }  else if (call.Method.Name == "Contains" && args.Length == 1) {  	if (call.Object != null && call.Object.Type == typeof(string)) {  		sqlCall = "(" + obj.CommandText + " like ('%' || " + args [0].CommandText + " || '%'))";  	}  	else {  		sqlCall = "(" + args [0].CommandText + " in " + obj.CommandText + ")";  	}  }  else if (call.Method.Name == "StartsWith" && args.Length == 1) {  	sqlCall = "(" + obj.CommandText + " like (" + args [0].CommandText + " || '%'))";  }  else if (call.Method.Name == "EndsWith" && args.Length == 1) {  	sqlCall = "(" + obj.CommandText + " like ('%' || " + args [0].CommandText + "))";  }  else if (call.Method.Name == "Equals" && args.Length == 1) {  	sqlCall = "(" + obj.CommandText + " = (" + args [0].CommandText + "))";  }  else {  	sqlCall = call.Method.Name.ToLower () + "(" + string.Join ("'"' args.Select (a => a.CommandText).ToArray ()) + ")";  }  
Missing Default,UBTalker.Data,SampleDataGroup,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following switch statement is missing a default case: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	}  	else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	}  	else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Missing Default,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,GeneralSettings,The following switch statement is missing a default case: switch (MainPage.SpeakingLanguage) {  case "en-us":  	LanguageSelection.SelectedIndex = 0;  	break;  case "es":  	LanguageSelection.SelectedIndex = 1;  	break;  case "gr":  	LanguageSelection.SelectedIndex = 2;  	break;  case "fr":  	LanguageSelection.SelectedIndex = 3;  	break;  }  
Missing Default,UBTalker.SettingsViews,GeneralSettings,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SettingsViews\GeneralSettings.xaml.cs,LanguageSelection_SelectionChanged,The following switch statement is missing a default case: switch (LanguageSelection.SelectedIndex) {  case 0:  	MainPage.SpeakingLanguage = "en-us";  	break;  case 1:  	MainPage.SpeakingLanguage = "es";  	break;  case 2:  	MainPage.SpeakingLanguage = "gr";  	break;  case 3:  	MainPage.SpeakingLanguage = "fr";  	break;  }  
Missing Default,SQLite,SQLiteConnection,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,BeginTransaction,The following switch statement is missing a default case: switch (sqlExp.Result) {  case SQLite3.Result.IOError:  case SQLite3.Result.Full:  case SQLite3.Result.Busy:  case SQLite3.Result.NoMem:  case SQLite3.Result.Interrupt:  	RollbackTo (null' true);  	break;  }  
Missing Default,SQLite,SQLiteConnection,D:\SecondaryReposToAnalyze\cartman005_UBTalker\UBTalker\SQLite.cs,SaveTransactionPoint,The following switch statement is missing a default case: switch (sqlExp.Result) {  case SQLite3.Result.IOError:  case SQLite3.Result.Full:  case SQLite3.Result.Busy:  case SQLite3.Result.NoMem:  case SQLite3.Result.Interrupt:  	RollbackTo (null' true);  	break;  }  
