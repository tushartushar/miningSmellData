Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,ArtemisWest.CallMe,ObservableExtensions,C:\repos\LeeCampbell_ArtemistWest-CallMe\src\ArtemisWest.CallMe.Core\ObservableExtensions.cs,Log,The method has 6 parameters.
Long Parameter List,ArtemisWest.CallMe,ObservableExtensions,C:\repos\LeeCampbell_ArtemistWest-CallMe\src\ArtemisWest.CallMe.Core\ObservableExtensions.cs,LazyConcat,The method has 6 parameters.
Long Parameter List,ArtemisWest.CallMe,ObservableExtensions,C:\repos\LeeCampbell_ArtemistWest-CallMe\src\ArtemisWest.CallMe.Core\ObservableExtensions.cs,ToObservable,The method has 8 parameters.
Long Statement,ArtemisWest.CallMe,ObservableExtensions,C:\repos\LeeCampbell_ArtemistWest-CallMe\src\ArtemisWest.CallMe.Core\ObservableExtensions.cs,Log,The length of the statement  "		var subscription = source.Do (i => logger.Trace ("[0]{0}.OnNext({1})"' name' i)' ex => logger.Trace ("[X]{0}.OnError({1})"' name' ex)' () => logger.Trace ("[|]{0}.OnComplete()"' name)).Subscribe (o); " is 199.
Long Statement,ArtemisWest.CallMe,ObservableExtensions,C:\repos\LeeCampbell_ArtemistWest-CallMe\src\ArtemisWest.CallMe.Core\ObservableExtensions.cs,ToObservable,The length of the statement  "		Action<StreamReaderState' Action<StreamReaderState>> iterator = (state' self) => currentStateSubscription.Disposable = state.ReadNext ().Subscribe (bytesRead =>  { " is 163.
