Implementation smell,Namespace,Class,File,Method,Description
Long Method,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,AddDocument,The method has 141 lines of code.
Complex Method,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,Initialize,Cyclomatic complexity of the method is 10
Complex Method,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,GetDataToIndex,Cyclomatic complexity of the method is 10
Complex Method,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,ForceProcessQueueItems,Cyclomatic complexity of the method is 9
Long Parameter List,Examine,IndexCriteria,C:\repos\Shazwazza_Examine\src\Examine\IndexCriteria.cs,IndexCriteria,The method has 5 parameters. Parameters: standardFields' userFields' includeNodeTypes' excludeNodeTypes' parentNodeId
Long Parameter List,Examine,IndexingFieldDataEventArgs,C:\repos\Shazwazza_Examine\src\Examine\IndexingFieldDataEventArgs.cs,IndexingFieldDataEventArgs,The method has 5 parameters. Parameters: node' fieldName' fieldValue' isStandardField' nodeId
Long Parameter List,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,SetDateTimeField,The method has 6 parameters. Parameters: fieldName' valueToParse' resolution' lucenePolicy' field' sortedField
Long Parameter List,Examine.LuceneEngine.Providers,SimpleDataIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\SimpleDataIndexer.cs,SimpleDataIndexer,The method has 6 parameters. Parameters: indexerData' workingFolder' analyzer' dataService' indexTypes' async
Long Parameter List,Examine.LuceneEngine.Providers,SimpleDataIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\SimpleDataIndexer.cs,SimpleDataIndexer,The method has 6 parameters. Parameters: indexerData' luceneDirectory' analyzer' dataService' indexTypes' async
Long Parameter List,Examine.LuceneEngine.SearchCriteria,LuceneQuery,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\SearchCriteria\LuceneQuery.cs,Range,The method has 5 parameters. Parameters: fieldName' start' end' includeLower' includeUpper
Long Parameter List,Examine.LuceneEngine.SearchCriteria,LuceneQuery,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\SearchCriteria\LuceneQuery.cs,Range,The method has 6 parameters. Parameters: fieldName' start' end' includeLower' includeUpper' resolution
Long Parameter List,Examine.LuceneEngine.SearchCriteria,LuceneQuery,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\SearchCriteria\LuceneQuery.cs,Range,The method has 5 parameters. Parameters: fieldName' start' end' includeLower' includeUpper
Long Parameter List,Examine.LuceneEngine.SearchCriteria,LuceneQuery,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\SearchCriteria\LuceneQuery.cs,Range,The method has 5 parameters. Parameters: fieldName' start' end' includeLower' includeUpper
Long Parameter List,Examine.LuceneEngine.SearchCriteria,LuceneQuery,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\SearchCriteria\LuceneQuery.cs,Range,The method has 5 parameters. Parameters: fieldName' start' end' includeLower' includeUpper
Long Parameter List,Examine.LuceneEngine.SearchCriteria,LuceneQuery,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\SearchCriteria\LuceneQuery.cs,Range,The method has 5 parameters. Parameters: fieldName' start' end' includeLower' includeUpper
Long Parameter List,Examine.LuceneEngine.SearchCriteria,LuceneQuery,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\SearchCriteria\LuceneQuery.cs,Range,The method has 5 parameters. Parameters: fieldName' start' end' includeLower' includeUpper
Long Parameter List,Examine.LuceneEngine.SearchCriteria,LuceneSearchCriteria,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\SearchCriteria\LuceneSearchCriteria.cs,LuceneSearchCriteria,The method has 5 parameters. Parameters: type' analyzer' fields' allowLeadingWildcards' occurance
Long Parameter List,Examine.LuceneEngine.SearchCriteria,LuceneSearchCriteria,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\SearchCriteria\LuceneSearchCriteria.cs,Range,The method has 5 parameters. Parameters: fieldName' start' end' includeLower' includeUpper
Long Parameter List,Examine.LuceneEngine.SearchCriteria,LuceneSearchCriteria,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\SearchCriteria\LuceneSearchCriteria.cs,Range,The method has 6 parameters. Parameters: fieldName' start' end' includeLower' includeUpper' resolution
Long Parameter List,Examine.LuceneEngine.SearchCriteria,LuceneSearchCriteria,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\SearchCriteria\LuceneSearchCriteria.cs,Range,The method has 5 parameters. Parameters: fieldName' start' end' includeLower' includeUpper
Long Parameter List,Examine.LuceneEngine.SearchCriteria,LuceneSearchCriteria,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\SearchCriteria\LuceneSearchCriteria.cs,RangeInternal,The method has 6 parameters. Parameters: fieldName' start' end' includeLower' includeUpper' occurance
Long Parameter List,Examine.LuceneEngine.SearchCriteria,LuceneSearchCriteria,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\SearchCriteria\LuceneSearchCriteria.cs,Range,The method has 5 parameters. Parameters: fieldName' lower' upper' includeLower' includeUpper
Long Parameter List,Examine.LuceneEngine.SearchCriteria,LuceneSearchCriteria,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\SearchCriteria\LuceneSearchCriteria.cs,RangeInternal,The method has 6 parameters. Parameters: fieldName' lower' upper' includeLower' includeUpper' occurance
Long Parameter List,Examine.LuceneEngine.SearchCriteria,LuceneSearchCriteria,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\SearchCriteria\LuceneSearchCriteria.cs,Range,The method has 5 parameters. Parameters: fieldName' lower' upper' includeLower' includeUpper
Long Parameter List,Examine.LuceneEngine.SearchCriteria,LuceneSearchCriteria,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\SearchCriteria\LuceneSearchCriteria.cs,RangeInternal,The method has 6 parameters. Parameters: fieldName' lower' upper' includeLower' includeUpper' occurance
Long Parameter List,Examine.LuceneEngine.SearchCriteria,LuceneSearchCriteria,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\SearchCriteria\LuceneSearchCriteria.cs,Range,The method has 5 parameters. Parameters: fieldName' lower' upper' includeLower' includeUpper
Long Parameter List,Examine.LuceneEngine.SearchCriteria,LuceneSearchCriteria,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\SearchCriteria\LuceneSearchCriteria.cs,RangeInternal,The method has 6 parameters. Parameters: fieldName' lower' upper' includeLower' includeUpper' occurance
Long Parameter List,Examine.LuceneEngine.SearchCriteria,LuceneSearchCriteria,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\SearchCriteria\LuceneSearchCriteria.cs,Range,The method has 5 parameters. Parameters: fieldName' start' end' includeLower' includeUpper
Long Parameter List,Examine.LuceneEngine.SearchCriteria,LuceneSearchCriteria,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\SearchCriteria\LuceneSearchCriteria.cs,RangeInternal,The method has 6 parameters. Parameters: fieldName' start' end' includeLower' includeUpper' occurance
Long Parameter List,Examine.SearchCriteria,IQuery,C:\repos\Shazwazza_Examine\src\Examine\SearchCriteria\IQuery.cs,Range,The method has 5 parameters. Parameters: fieldName' lower' upper' includeLower' includeUpper
Long Parameter List,Examine.SearchCriteria,IQuery,C:\repos\Shazwazza_Examine\src\Examine\SearchCriteria\IQuery.cs,Range,The method has 6 parameters. Parameters: fieldName' lower' upper' includeLower' includeUpper' resolution
Long Parameter List,Examine.SearchCriteria,IQuery,C:\repos\Shazwazza_Examine\src\Examine\SearchCriteria\IQuery.cs,Range,The method has 5 parameters. Parameters: fieldName' lower' upper' includeLower' includeUpper
Long Parameter List,Examine.SearchCriteria,IQuery,C:\repos\Shazwazza_Examine\src\Examine\SearchCriteria\IQuery.cs,Range,The method has 5 parameters. Parameters: fieldName' lower' upper' includeLower' includeUpper
Long Parameter List,Examine.SearchCriteria,IQuery,C:\repos\Shazwazza_Examine\src\Examine\SearchCriteria\IQuery.cs,Range,The method has 5 parameters. Parameters: fieldName' lower' upper' includeLower' includeUpper
Long Parameter List,Examine.SearchCriteria,IQuery,C:\repos\Shazwazza_Examine\src\Examine\SearchCriteria\IQuery.cs,Range,The method has 5 parameters. Parameters: fieldName' lower' upper' includeLower' includeUpper
Long Parameter List,Examine.SearchCriteria,IQuery,C:\repos\Shazwazza_Examine\src\Examine\SearchCriteria\IQuery.cs,Range,The method has 5 parameters. Parameters: fieldName' lower' upper' includeLower' includeUpper
Long Identifier,Examine.LuceneEngine.Providers,BaseLuceneSearcher,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\BaseLuceneSearcher.cs,,The length of the parameter _errorCheckingScoringBooleanQueryRewriteInstance is 48.
Long Statement,Examine,ExamineManager,C:\repos\Shazwazza_Examine\src\Examine\ExamineManager.cs,EnsureProviders,The length of the statement  "                        ProvidersHelper.InstantiateProviders(ExamineSettings.Instance.IndexProviders.Providers' _indexProviderCollection' typeof(BaseIndexProvider)); " is 141.
Long Statement,Examine,ExamineManager,C:\repos\Shazwazza_Examine\src\Examine\ExamineManager.cs,EnsureProviders,The length of the statement  "                        ProvidersHelper.InstantiateProviders(ExamineSettings.Instance.SearchProviders.Providers' _searchProviderCollection' typeof(BaseSearchProvider)); " is 144.
Long Statement,Examine,ExamineManager,C:\repos\Shazwazza_Examine\src\Examine\ExamineManager.cs,Stop,The length of the statement  "                    //This is sort of a hack at the moment. We are disposing the searchers at the last possible point in time because there might " is 125.
Long Statement,Examine,ExamineManager,C:\repos\Shazwazza_Examine\src\Examine\ExamineManager.cs,Stop,The length of the statement  "                    // I've tried using DecRef and IncRef to keep track of searchers using readers' however there is no guarantee that DecRef can " is 125.
Long Statement,Examine,ExamineManager,C:\repos\Shazwazza_Examine\src\Examine\ExamineManager.cs,Stop,The length of the statement  "                    // be called when a search is finished and since search results are lazy' we don't know when they end unless people dispose them " is 128.
Long Statement,Examine,ExamineManager,C:\repos\Shazwazza_Examine\src\Examine\ExamineManager.cs,Stop,The length of the statement  "                    // or always use a foreach loop which can't really be forced. The only alternative to using DecRef and IncRef would be to make the results " is 138.
Long Statement,Examine.LuceneEngine.Directories,SyncDirectory,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Directories\SyncDirectory.cs,DeleteFile,The length of the statement  "                //This will occur because this file is locked' when this is the case' we don't really want to delete it from the master either because " is 134.
Long Statement,Examine.LuceneEngine.Directories,SyncDirectory,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Directories\SyncDirectory.cs,DeleteFile,The length of the statement  "                // if we do that then this file will never get removed from the cache folder either! This is based on the Deletion Policy which the " is 131.
Long Statement,Examine.LuceneEngine.Directories,SyncDirectory,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Directories\SyncDirectory.cs,DeleteFile,The length of the statement  "                // IndexFileDeleter uses. We could implement our own one of those to deal with this scenario too but it seems the easiest way it to just  " is 136.
Long Statement,Examine.LuceneEngine.Directories,SyncDirectory,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Directories\SyncDirectory.cs,OpenInput,The length of the statement  "            //that they also experienced the file not found issue. I noticed that their implementation only ever reads the segments.gen " is 123.
Long Statement,Examine.LuceneEngine.Directories,SyncDirectory,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Directories\SyncDirectory.cs,OpenInput,The length of the statement  "            //The Lucene docs reveal a bit more info - since the segments.gen file is not 'write once' we'd have to deal with that accordingly: " is 131.
Long Statement,Examine.LuceneEngine.Directories,SyncDirectory,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Directories\SyncDirectory.cs,OpenInput,The length of the statement  "            //"As of 2.1' there is also a file segments.gen. This file contains the current generation (the _N in segments_N) of the index.  " is 127.
Long Statement,Examine.LuceneEngine.Directories,SyncDirectory,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Directories\SyncDirectory.cs,OpenInput,The length of the statement  "            //This is used only as a fallback in case the current generation cannot be accurately determined by directory listing alone  " is 123.
Long Statement,Examine.LuceneEngine.Directories,SyncDirectory,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Directories\SyncDirectory.cs,OpenInput,The length of the statement  "            //"As of version 2.1 (lock-less commits)' file names are never re-used (there is one exception' "segments.gen"' see below).  " is 123.
Long Statement,Examine.LuceneEngine.Directories,SyncDirectory,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Directories\SyncDirectory.cs,OpenInput,The length of the statement  "            //That is' when any file is saved to the Directory it is given a never before used filename. This is achieved using a simple  " is 124.
Long Statement,Examine.LuceneEngine.Directories,SyncIndexInput,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Directories\SyncIndexInput.cs,SyncLocally,The length of the statement  "                //TODO: It has been seen that OpenInput on the master can throw an exception due to a lucene file not found - which is very odd " is 127.
Long Statement,Examine.LuceneEngine.Directories,SyncIndexInput,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Directories\SyncIndexInput.cs,SyncLocally,The length of the statement  "                // we need to check if the master is being written frist before the sync dir. And if the file does not exist in the master'  " is 123.
Long Statement,Examine.LuceneEngine.Directories,SyncIndexInput,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Directories\SyncIndexInput.cs,SyncLocally,The length of the statement  "                //Hrmmm what to do?  There's actually nothing that can be done :/ if we return false here then the instance of this item would be null " is 134.
Long Statement,Examine.LuceneEngine.Directories,SyncIndexInput,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Directories\SyncIndexInput.cs,SyncLocally,The length of the statement  "                //which will then cause exceptions further on and take down the app pool anyways. I've looked through the Lucene source and there  " is 129.
Long Statement,Examine.LuceneEngine.Directories,SyncIndexInput,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Directories\SyncIndexInput.cs,CompareExistingFileAttributes,The length of the statement  "            //The file already exists and the file lengths are the same so compare the modified dates of the files from the master vs cache " is 127.
Long Statement,Examine.LuceneEngine.Directories,TempEnvDirectoryFactory,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Directories\TempEnvDirectoryFactory.cs,GetLocalStorageDirectory,The length of the statement  "                //include the appdomain hash is just a safety check' for example if a website is moved from worker A to worker B and then back " is 126.
Long Statement,Examine.LuceneEngine,LuceneIndexCopy,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\LocalTempStorageIndexer.cs,Copy,The length of the statement  "                    //    LogHelper.Warn<LocalTempStorageIndexer>("Cannot sync index files from main storage' the index is currently locked"); " is 122.
Long Statement,Examine.LuceneEngine,DirectoryTracker,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\DirectoryTracker.cs,GetDirectory,The length of the statement  "                    throw new NullReferenceException("No directory was added with path " + dir.FullName + "' maybe an indexer hasn't been initialized?"); " is 133.
Long Statement,Examine.LuceneEngine,ExamineXmlExtensions,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\ExamineXmlExtensions.cs,SelectExamineDataValue,The length of the statement  "                nodeData = xml.Elements("data").SingleOrDefault(x => string.Equals(((string) x.Attribute("alias"))' alias' StringComparison.InvariantCultureIgnoreCase)); " is 153.
Long Statement,Examine.LuceneEngine,ExamineXmlExtensions,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\ExamineXmlExtensions.cs,SelectExamineDataValue,The length of the statement  "                nodeData = xml.Elements().FirstOrDefault(x => string.Equals(x.Name.ToString()' alias' StringComparison.InvariantCultureIgnoreCase)); " is 132.
Long Statement,Examine.LuceneEngine,WriterTracker,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\WriterTracker.cs,GetWriter,The length of the statement  "                    throw new NullReferenceException("No writer was added with directory key " + dir.GetLockID() + "' maybe an indexer hasn't been initialized?"); " is 142.
Long Statement,Examine.LuceneEngine.Providers,BaseLuceneSearcher,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\BaseLuceneSearcher.cs,Search,The length of the statement  "                throw new ArgumentException("Provided ISearchCriteria dos not match the allowed ISearchCriteria. Ensure you only use an ISearchCriteria created from the current SearcherProvider"); " is 180.
Long Statement,Examine.LuceneEngine.Providers,ErrorCheckingScoringBooleanQueryRewrite,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\ErrorCheckingScoringBooleanQueryRewrite.cs,Rewrite,The length of the statement  "                //TODO: We could add a cache for known terms that will cause this so that we don't spend too much CPU rewriting and recatching the exception each time " is 150.
Long Statement,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,Initialize,The length of the statement  "                if (factoryType == null) throw new NullReferenceException("No directory type found for value: " + config["directoryFactory"]); " is 126.
Long Statement,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,Initialize,The length of the statement  "                        LuceneIndexFolder = new DirectoryInfo(Path.Combine(IndexSets.Instance.Sets[IndexSetName].IndexDirectory.FullName' "Index")); " is 124.
Long Statement,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,Initialize,The length of the statement  "                    throw new ArgumentNullException("indexSet on LuceneExamineIndexer provider has not been set in configuration and/or the IndexerData property has not been explicitly set"); " is 171.
Long Statement,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,Initialize,The length of the statement  "                    LuceneIndexFolder = new DirectoryInfo(Path.Combine(IndexSets.Instance.Sets[IndexSetName].IndexDirectory.FullName' "Index")); " is 124.
Long Statement,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,OnIndexingError,The length of the statement  "            Trace.TraceError("Indexing Error Occurred: " + (e.InnerException == null ?  e.Message : e.Message + " -- " + e.InnerException)); " is 128.
Long Statement,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,EnsureIndex,The length of the statement  "                    // we cannot acquire the lock' this is because the main writer is being created' or the index is being created currently " is 120.
Long Statement,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,EnsureIndex,The length of the statement  "                    OnIndexingError(new IndexingErrorEventArgs("Could not acquire lock in EnsureIndex so cannot create new index"' -1' null)); " is 122.
Long Statement,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,RebuildIndex,The length of the statement  "                OnIndexingError(new IndexingErrorEventArgs("Cannot rebuild the index' indexing cancellation has been requested"' -1' null)); " is 124.
Long Statement,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,OptimizeIndex,The length of the statement  "                OnIndexingError(new IndexingErrorEventArgs("Cannot optimize index' index cancellation has been requested"' -1' null)' true); " is 124.
Long Statement,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,AddNodesToIndex,The length of the statement  "                        nodes.Select(node => new IndexOperation(new IndexItem(node' type' (string)node.Attribute("id"))' IndexOperationType.Add))); " is 123.
Long Statement,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,AddDocument,The length of the statement  "                            luceneField = new NumericField(field.Key' Field.Store.YES' !Equals(lucenePolicy' Field.Index.NO)).SetIntValue((int)parsedVal); " is 126.
Long Statement,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,AddDocument,The length of the statement  "                            luceneSortedField = new NumericField(SortedFieldNamePrefix + field.Key' Field.Store.NO' true).SetIntValue((int)parsedVal); " is 122.
Long Statement,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,AddDocument,The length of the statement  "                            luceneField = new NumericField(field.Key' Field.Store.YES' !Equals(lucenePolicy' Field.Index.NO)).SetFloatValue((float)parsedVal); " is 130.
Long Statement,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,AddDocument,The length of the statement  "                            luceneSortedField = new NumericField(SortedFieldNamePrefix + field.Key' Field.Store.NO' true).SetFloatValue((float)parsedVal); " is 126.
Long Statement,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,AddDocument,The length of the statement  "                            luceneField = new NumericField(field.Key' Field.Store.YES' !Equals(lucenePolicy' Field.Index.NO)).SetDoubleValue((double)parsedVal); " is 132.
Long Statement,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,AddDocument,The length of the statement  "                            luceneSortedField = new NumericField(SortedFieldNamePrefix + field.Key' Field.Store.NO' true).SetDoubleValue((double)parsedVal); " is 128.
Long Statement,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,AddDocument,The length of the statement  "                            luceneField = new NumericField(field.Key' Field.Store.YES' !Equals(lucenePolicy' Field.Index.NO)).SetLongValue((long)parsedVal); " is 128.
Long Statement,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,AddDocument,The length of the statement  "                            luceneSortedField = new NumericField(SortedFieldNamePrefix + field.Key' Field.Store.NO' true).SetLongValue((long)parsedVal); " is 124.
Long Statement,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,AddDocument,The length of the statement  "                                SetDateTimeField(field.Key' field.Value' DateTools.Resolution.MILLISECOND' lucenePolicy' ref luceneField' ref luceneSortedField); " is 129.
Long Statement,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,AddDocument,The length of the statement  "                                SetDateTimeField(field.Key' field.Value' DateTools.Resolution.YEAR' lucenePolicy' ref luceneField' ref luceneSortedField); " is 122.
Long Statement,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,AddDocument,The length of the statement  "                                SetDateTimeField(field.Key' field.Value' DateTools.Resolution.MONTH' lucenePolicy' ref luceneField' ref luceneSortedField); " is 123.
Long Statement,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,AddDocument,The length of the statement  "                                SetDateTimeField(field.Key' field.Value' DateTools.Resolution.DAY' lucenePolicy' ref luceneField' ref luceneSortedField); " is 121.
Long Statement,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,AddDocument,The length of the statement  "                                SetDateTimeField(field.Key' field.Value' DateTools.Resolution.HOUR' lucenePolicy' ref luceneField' ref luceneSortedField); " is 122.
Long Statement,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,AddDocument,The length of the statement  "                                SetDateTimeField(field.Key' field.Value' DateTools.Resolution.MINUTE' lucenePolicy' ref luceneField' ref luceneSortedField); " is 124.
Long Statement,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,AddDocument,The length of the statement  "                        OnIndexingError(new IndexingErrorEventArgs("Could not parse value: " + field.Value + "into the type: " + indexField.Type' nodeId' null)); " is 137.
Long Statement,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,SafelyProcessQueueItems,The length of the statement  "                    //don't run the worker if it's currently running since it will just pick up the rest of the queue during its normal operation                     " is 125.
Long Statement,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,ProcessQueueItem,The length of the statement  "                        OnIgnoringNode(new IndexingNodeDataEventArgs(item.Item.DataToIndex' int.Parse(item.Item.Id)' null' item.Item.IndexType)); " is 121.
Long Statement,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,CreateIndexWriter,The length of the statement  "                    _logOutput = new FileStream(Path.Combine(LuceneIndexFolder.FullName' DateTime.UtcNow.ToString("yyyy-MM-dd") + ".log")' FileMode.Append); " is 136.
Long Statement,Examine.LuceneEngine.Providers,DisposableIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,DisposeResources,The length of the statement  "                //NOTE: we are not taking into acccount the WaitForIndexQueueOnShutdown property here because we really want to make sure " is 121.
Long Statement,Examine.LuceneEngine.Providers,LuceneSearcher,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneSearcher.cs,Initialize,The length of the statement  "                LuceneIndexFolder = new DirectoryInfo(Path.Combine(IndexSets.Instance.Sets[IndexSetName].IndexDirectory.FullName' "Index")); " is 124.
Long Statement,Examine.LuceneEngine.Providers,ReaderReopener,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneSearcher.cs,MaybeReopen,The length of the statement  "                                // since another thread might be using it. I'm 'hoping' that the GC will just take care of the left over reader's that might " is 124.
Long Statement,Examine.LuceneEngine.SearchCriteria,LuceneBooleanOperation,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\SearchCriteria\LuceneBooleanOperation.cs,Compile,The length of the statement  "                    LuceneIndexer.IndexTypeFieldName' new ExamineValue(Examineness.Explicit' this._search.SearchIndexType)' BooleanClause.Occur.MUST' " is 129.
Long Statement,Examine.LuceneEngine.SearchCriteria,LuceneBooleanOperation,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\SearchCriteria\LuceneBooleanOperation.cs,Compile,The length of the statement  "                    //Don't use the QueryParser to create this query' this is an explit query and Depending on the Query Parser used this could muck things up: " is 139.
Long Statement,Examine.LuceneEngine.SearchCriteria,LuceneSearchCriteria,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\SearchCriteria\LuceneSearchCriteria.cs,Range,The length of the statement  "            return this.RangeInternal(fieldName' DateTools.DateToString(start' luceneResolution)' DateTools.DateToString(end' luceneResolution)' includeLower' includeUpper' _occurance); " is 173.
Empty Catch Block,Examine.LuceneEngine,LuceneIndexCopy,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\LocalTempStorageIndexer.cs,Copy,The method has an empty catch block.
Empty Catch Block,Examine.LuceneEngine,OpenReaderTracker,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\OpenReaderTracker.cs,CloseStaleReaders,The method has an empty catch block.
Empty Catch Block,Examine.LuceneEngine,OpenReaderTracker,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\OpenReaderTracker.cs,CloseAllReaders,The method has an empty catch block.
Empty Catch Block,Examine.LuceneEngine,OpenReaderTracker,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\OpenReaderTracker.cs,CloseAllReaders,The method has an empty catch block.
Empty Catch Block,Examine.LuceneEngine,SearchResults,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\SearchResults.cs,DoSearch,The method has an empty catch block.
Empty Catch Block,Examine.LuceneEngine.Providers,BaseLuceneSearcher,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\BaseLuceneSearcher.cs,SetScoringBooleanQueryRewriteMethod,The method has an empty catch block.
Empty Catch Block,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,CreateIndexWriter,The method has an empty catch block.
Empty Catch Block,Examine.LuceneEngine.Providers,DisposableSearcher,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneSearcher.cs,DisposeResources,The method has an empty catch block.
Magic Number,Examine,StringExtensions,C:\repos\Shazwazza_Examine\src\Examine\StringExtensions.cs,RemoveStopWords,The following statement contains a magic number: while(carrat < searchText.Length)              {                  var quoteIndex = searchText.IndexOf("\""' carrat);                  if (quoteIndex >= 0 && carrat == quoteIndex)                  {                      //move to next quote                      carrat = searchText.IndexOf("\""' quoteIndex + 1) + 1;                        if (carrat > 0)                      {                          //add phrase to builder                          var phraseWithoutQuotes = searchText.Substring(quoteIndex + 1' carrat - quoteIndex - 2);                          builder.Append("\"" + phraseWithoutQuotes.Trim() + "\" ");                      }                      else                      {                          //there are not more quotes                          carrat = quoteIndex + 1;                      }                  }                  else                  {                      //move to next quote                      var nextCarrat = searchText.IndexOf("\""' carrat);                      if (nextCarrat < 0)                      {                          nextCarrat = searchText.Length;                      }                      var terms = searchText.Substring(carrat' nextCarrat - carrat).Trim();                      if (!string.IsNullOrWhiteSpace(terms))                      {                          removeWords(terms' builder);                          }                      carrat = nextCarrat;                  }              }
Magic Number,Examine.LuceneEngine.Directories,SyncIndexInput,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Directories\SyncIndexInput.cs,CompareExistingFileAttributes,The following statement contains a magic number: DateTime start = new DateTime(1970' 1' 1' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Examine.LuceneEngine.Directories,SyncIndexInput,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Directories\SyncIndexInput.cs,CompareExistingFileAttributes,The following statement contains a magic number: if (cachedLastModifiedUTC != masterLastModifiedUTC)              {                  var timeSpan = masterLastModifiedUTC.Subtract(cachedLastModifiedUTC);                    //NOTE: This heavily depends on TouchFile in SyncIndexOutput which sets both the                   //master and slave files to be 'Now'' in theory this operation shouldn't                  //make the file times any bigger than 1 second                    //NOTE: TouchFile isn't actually used by Lucene' BUT it is used by us in the SyncIndexOutput class                    if (timeSpan.TotalSeconds > 2)                      return true;    #if FULLDEBUG                  Trace.WriteLine("SyncIndexInput file timespan offset: " + timeSpan.TotalSeconds);  #endif                  // file not needed              }
Magic Number,Examine.LuceneEngine.Directories,TempEnvDirectoryFactory,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Directories\TempEnvDirectoryFactory.cs,GetIndexPathName,The following statement contains a magic number: if (parts.Length > 0 && string.Equals(parts[parts.Length - 1]' "Index"' StringComparison.OrdinalIgnoreCase))              {                  //in theory this would be the Index name                  return parts[parts.Length - 2];              }
Magic Number,Examine.LuceneEngine,LuceneExtensions,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\LuceneExtensions.cs,CopyTo,The following statement contains a magic number: var buffer = new byte[32768];
Magic Number,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,LuceneIndexer,The following statement contains a magic number: OptimizationCommitThreshold = 100;
Magic Number,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,LuceneIndexer,The following statement contains a magic number: OptimizationCommitThreshold = 100;
Magic Number,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,LuceneIndexer,The following statement contains a magic number: OptimizationCommitThreshold = 100;
Magic Number,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,LuceneIndexer,The following statement contains a magic number: OptimizationCommitThreshold = 100;
Magic Number,Examine.LuceneEngine.Providers,LuceneIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,Initialize,The following statement contains a magic number: if (config["autoOptimizeCommitThreshold"] == null)              {                  OptimizationCommitThreshold = 100;              }              else              {                  int autoCommitThreshold;                  if (int.TryParse(config["autoOptimizeCommitThreshold"]' out autoCommitThreshold))                  {                      OptimizationCommitThreshold = autoCommitThreshold;                  }                  else                  {                      throw new FormatException("Could not parse autoCommitThreshold value into an integer");                  }              }
Magic Number,Examine.LuceneEngine.Providers,DisposableIndexer,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneIndexer.cs,DisposeResources,The following statement contains a magic number: if (_indexer.WaitForIndexQueueOnShutdown)                  {                      //if there are active adds' lets way/retry (5 seconds)                      RetryUntilSuccessOrTimeout(() => _indexer._activeAddsOrDeletes == 0' TimeSpan.FromSeconds(5)' TimeSpan.FromSeconds(1));                  }
Missing Default,Examine.LuceneEngine.Directories,StreamInput,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Directories\StreamInput.cs,Seek,The following switch statement is missing a default case: switch (origin)              {                  case SeekOrigin.Begin:                      Input.Seek(offset);                      break;                  case SeekOrigin.Current:                      Input.Seek(Input.GetFilePointer() + offset);                      break;                  case SeekOrigin.End:                      throw new System.NotImplementedException();              }
Missing Default,Examine.LuceneEngine.Directories,StreamOutput,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Directories\StreamOutput.cs,Seek,The following switch statement is missing a default case: switch (origin)              {                  case SeekOrigin.Begin:                      Output.Seek(offset);                      break;                  case SeekOrigin.Current:                      Output.Seek(Output.GetFilePointer() + offset);                      break;                  case SeekOrigin.End:                      throw new NotImplementedException();              }
Missing Default,Examine.LuceneEngine.Providers,ReaderReopener,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\Providers\LuceneSearcher.cs,MaybeReopen,The following switch statement is missing a default case: switch (_luceneSearcher._reader.GetReaderStatus())                  {                      case ReaderStatus.Current:                          break;                      case ReaderStatus.Closed:                          lock (_locker)                          {                              //get a reader - could be NRT or based on directly depending on how this was constructed                              _luceneSearcher._reader = _luceneSearcher._nrtWriter == null                                  ? _luceneSearcher.OpenNewReader()                                  : _luceneSearcher._nrtWriter.GetReader();                                _luceneSearcher._searcher = new IndexSearcher(_luceneSearcher._reader);                                //track it!                              OpenReaderTracker.Current.AddOpenReader(_luceneSearcher._reader);                          }                          break;                      case ReaderStatus.NotCurrent:                            lock (_locker)                          {                              IndexReader newReader;                                //Here we'll check if we are not running in NRT mode' this will be the case                              // if the indexer hasn't created a writer. But if it has' we want to become NRT so                               // we'll check if we can.                              if (_luceneSearcher._nrtWriter == null && _luceneSearcher.TryEstablishNrtReader())                              {                                  //the new reader will now be an NRT reader                                  newReader = _luceneSearcher._nrtWriter.GetReader();                              }                              else                              {                                  //yes' this is actually the way the Lucene wants you to work...                                  //normally' i would have thought just calling Reopen() on the underlying reader would suffice... but it doesn't.                                  //here's references:                                   // http://stackoverflow.com/questions/1323779/lucene-indexreader-reopen-doesnt-seem-to-work-correctly                                  // http://gist.github.com/173978                                   //Also note that when a new reader is returned from Reopen() the old reader is not actually closed -                                   // but more importantly the old reader might still be in use from another thread! So we can't just                                   // close it here because that would cause a YSOD: Lucene.Net.Store.AlreadyClosedException: this IndexReader is closed                                  // since another thread might be using it. I'm 'hoping' that the GC will just take care of the left over reader's that might                                  // be currently being used in a search' otherwise there's really no way to now when it's safe to close the reader.                                     newReader = _luceneSearcher._reader.Reopen();                              }                                if (newReader != _luceneSearcher._reader)                              {                                  //if it's changed' then re-assign' note: the above' before we used to close the old one here                                  // but that will cause problems since the old reader might be in use on another thread.                                  _luceneSearcher._reader = newReader;                                  _luceneSearcher._searcher = new IndexSearcher(_luceneSearcher._reader);                                    //track it!                                  OpenReaderTracker.Current.AddOpenReader(_luceneSearcher._reader);                                    //get rid of old ones (anything a minute or older)                                  OpenReaderTracker.Current.CloseStaleReaders(_luceneSearcher.GetLuceneDirectory()' TimeSpan.FromMinutes(1));                              }                          }                            break;                  }
Missing Default,Examine.LuceneEngine.SearchCriteria,LuceneSearchCriteria,C:\repos\Shazwazza_Examine\src\Examine\LuceneEngine\SearchCriteria\LuceneSearchCriteria.cs,OrderByInternal,The following switch statement is missing a default case: switch (match.Groups["type"].Value.ToUpper())                      {                          case "SCORE":                              defaultSort = SortField.SCORE;                              break;                          case "DOC":                              defaultSort = SortField.DOC;                              break;                          case "AUTO":                              defaultSort = SortField.AUTO;                              break;                          case "STRING":                              defaultSort = SortField.STRING;                              break;                          case "INT":                              defaultSort = SortField.INT;                              break;                          case "FLOAT":                              defaultSort = SortField.FLOAT;                              break;                          case "LONG":                              defaultSort = SortField.LONG;                              break;                          case "DOUBLE":                              defaultSort = SortField.DOUBLE;                              break;                          case "SHORT":                              defaultSort = SortField.SHORT;                              break;                          case "CUSTOM":                              defaultSort = SortField.CUSTOM;                              break;                          case "BYTE":                              defaultSort = SortField.BYTE;                              break;                          case "STRING_VAL":                              defaultSort = SortField.STRING_VAL;                              break;                      }
