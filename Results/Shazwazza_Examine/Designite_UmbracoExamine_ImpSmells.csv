Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,UmbracoExamine,BaseUmbracoIndexer,C:\repos\Shazwazza_Examine\src\UmbracoExamine\BaseUmbracoIndexer.cs,BaseUmbracoIndexer,The method has 5 parameters. Parameters: indexerData' indexPath' dataService' analyzer' async
Long Parameter List,UmbracoExamine,BaseUmbracoIndexer,C:\repos\Shazwazza_Examine\src\UmbracoExamine\BaseUmbracoIndexer.cs,BaseUmbracoIndexer,The method has 5 parameters. Parameters: indexerData' luceneDirectory' dataService' analyzer' async
Long Parameter List,UmbracoExamine,MemberLuceneExamineIndexer,C:\repos\Shazwazza_Examine\src\UmbracoExamine\LegacyObjects.cs,MemberLuceneExamineIndexer,The method has 5 parameters. Parameters: indexerData' indexPath' dataService' analyzer' async
Long Parameter List,UmbracoExamine,LuceneExamineIndexer,C:\repos\Shazwazza_Examine\src\UmbracoExamine\LegacyObjects.cs,LuceneExamineIndexer,The method has 5 parameters. Parameters: indexerData' indexPath' dataService' analyzer' async
Long Parameter List,UmbracoExamine,LuceneSearchCriteria,C:\repos\Shazwazza_Examine\src\UmbracoExamine\LegacyObjects.cs,LuceneSearchCriteria,The method has 5 parameters. Parameters: type' analyzer' fields' allowLeadingWildcards' occurance
Long Parameter List,UmbracoExamine,UmbracoMemberIndexer,C:\repos\Shazwazza_Examine\src\UmbracoExamine\UmbracoMemberIndexer.cs,UmbracoMemberIndexer,The method has 5 parameters. Parameters: indexerData' indexPath' dataService' analyzer' async
Long Parameter List,UmbracoExamine,UmbracoContentIndexer,C:\repos\Shazwazza_Examine\src\UmbracoExamine\UmbracoContentIndexer.cs,UmbracoContentIndexer,The method has 5 parameters. Parameters: indexerData' indexPath' dataService' analyzer' async
Long Parameter List,UmbracoExamine,UmbracoContentIndexer,C:\repos\Shazwazza_Examine\src\UmbracoExamine\UmbracoContentIndexer.cs,UmbracoContentIndexer,The method has 5 parameters. Parameters: indexerData' luceneDirectory' dataService' analyzer' async
Long Parameter List,UmbracoExamine.Config,MemberLuceneExamineIndexer,C:\repos\Shazwazza_Examine\src\UmbracoExamine\LegacyObjects.cs,MemberLuceneExamineIndexer,The method has 5 parameters. Parameters: indexerData' indexPath' dataService' analyzer' async
Long Parameter List,UmbracoExamine.Config,LuceneExamineIndexer,C:\repos\Shazwazza_Examine\src\UmbracoExamine\LegacyObjects.cs,LuceneExamineIndexer,The method has 5 parameters. Parameters: indexerData' indexPath' dataService' analyzer' async
Long Parameter List,UmbracoExamine.Config,LuceneSearchCriteria,C:\repos\Shazwazza_Examine\src\UmbracoExamine\LegacyObjects.cs,LuceneSearchCriteria,The method has 5 parameters. Parameters: type' analyzer' fields' allowLeadingWildcards' occurance
Long Parameter List,UmbracoExamine.SearchCriteria,MemberLuceneExamineIndexer,C:\repos\Shazwazza_Examine\src\UmbracoExamine\LegacyObjects.cs,MemberLuceneExamineIndexer,The method has 5 parameters. Parameters: indexerData' indexPath' dataService' analyzer' async
Long Parameter List,UmbracoExamine.SearchCriteria,LuceneExamineIndexer,C:\repos\Shazwazza_Examine\src\UmbracoExamine\LegacyObjects.cs,LuceneExamineIndexer,The method has 5 parameters. Parameters: indexerData' indexPath' dataService' analyzer' async
Long Parameter List,UmbracoExamine.SearchCriteria,LuceneSearchCriteria,C:\repos\Shazwazza_Examine\src\UmbracoExamine\LegacyObjects.cs,LuceneSearchCriteria,The method has 5 parameters. Parameters: type' analyzer' fields' allowLeadingWildcards' occurance
Long Statement,UmbracoExamine,BaseUmbracoIndexer,C:\repos\Shazwazza_Examine\src\UmbracoExamine\BaseUmbracoIndexer.cs,PerformIndexAll,The length of the statement  "            var xPath = "//*[(number(@id) > 0 and (@isDoc or @nodeTypeAlias)){0}]"; //we'll add more filters to this below if needed " is 120.
Long Statement,UmbracoExamine,BaseUmbracoIndexer,C:\repos\Shazwazza_Examine\src\UmbracoExamine\BaseUmbracoIndexer.cs,PerformIndexAll,The length of the statement  "                sb.Append("contains(@path' ''" + IndexerData.ParentNodeId.Value + "'')"); //if the path contains comma - id - comma then the nodes must be a child " is 146.
Long Statement,UmbracoExamine,UmbracoContentIndexer,C:\repos\Shazwazza_Examine\src\UmbracoExamine\UmbracoContentIndexer.cs,OnIndexingError,The length of the statement  "            DataService.LogService.AddErrorLog(e.NodeId' string.Format("{0}'{1}' IndexSet: {2}"' e.Message' e.InnerException != null ? e.InnerException.Message : ""' this.IndexSetName)); " is 174.
Long Statement,UmbracoExamine,UmbracoContentIndexer,C:\repos\Shazwazza_Examine\src\UmbracoExamine\UmbracoContentIndexer.cs,OnIndexDeleted,The length of the statement  "            DataService.LogService.AddVerboseLog(-1' string.Format("Index deleted for term: {0} with value {1}"' e.DeletedTerm.Key' e.DeletedTerm.Value)); " is 142.
Long Statement,UmbracoExamine,UmbracoContentIndexer,C:\repos\Shazwazza_Examine\src\UmbracoExamine\UmbracoContentIndexer.cs,DeleteFromIndex,The length of the statement  "            DataService.LogService.AddVerboseLog(int.Parse(nodeId)' string.Format("DeleteFromIndex with query: {0} (found {1} results)"' rawQuery' results.Count())); " is 153.
Long Statement,UmbracoExamine,UmbracoContentIndexer,C:\repos\Shazwazza_Examine\src\UmbracoExamine\UmbracoContentIndexer.cs,AddSingleNodeToIndex,The length of the statement  "            DataService.LogService.AddVerboseLog((int)node.Attribute("id")' string.Format("AddSingleNodeToIndex with type: {0}"' type)); " is 124.
Long Statement,UmbracoExamine,UmbracoContentIndexer,C:\repos\Shazwazza_Examine\src\UmbracoExamine\UmbracoContentIndexer.cs,OnGatheringNodeData,The length of the statement  "            var nodeTypeAlias = e.Node.Attribute("nodeTypeAlias") == null ? e.Node.Name.LocalName : e.Node.Attribute("nodeTypeAlias").Value; " is 128.
Long Statement,UmbracoExamine,UmbracoContentIndexer,C:\repos\Shazwazza_Examine\src\UmbracoExamine\UmbracoContentIndexer.cs,OnDuplicateFieldWarning,The length of the statement  "            this.DataService.LogService.AddInfoLog(nodeId' "Field \"" + fieldName + "\" is listed multiple times in the index set \"" + indexSetName + "\". Please ensure all names are unique"); " is 181.
Long Statement,UmbracoExamine,UmbracoContentIndexer,C:\repos\Shazwazza_Examine\src\UmbracoExamine\UmbracoContentIndexer.cs,ValidateDocument,The length of the statement  "            // return nothing if we're not supporting protected content and it is protected' and we're not supporting unpublished content " is 125.
Empty Catch Block,UmbracoExamine,UmbracoEventManager,C:\repos\Shazwazza_Examine\src\UmbracoExamine\UmbracoEventManager.cs,Document_AfterSave,The method has an empty catch block.
Magic Number,UmbracoExamine,BaseUmbracoIndexer,C:\repos\Shazwazza_Examine\src\UmbracoExamine\BaseUmbracoIndexer.cs,PerformIndexAll,The following statement contains a magic number: if (IndexerData.IncludeNodeTypes.Any())              {                  sb.Append("(");                  foreach (var field in IndexerData.IncludeNodeTypes)                  {                      //this can be used across both schemas                      const string nodeTypeAlias = "(@nodeTypeAlias='{0}' or (count(@nodeTypeAlias)=0 and name()='{0}'))";                        sb.Append(string.Format(nodeTypeAlias' field));                      sb.Append(" or ");                  }                  sb.Remove(sb.Length - 4' 4); //remove last " or "                  sb.Append(")");              }
Magic Number,UmbracoExamine,BaseUmbracoIndexer,C:\repos\Shazwazza_Examine\src\UmbracoExamine\BaseUmbracoIndexer.cs,PerformIndexAll,The following statement contains a magic number: if (IndexerData.IncludeNodeTypes.Any())              {                  sb.Append("(");                  foreach (var field in IndexerData.IncludeNodeTypes)                  {                      //this can be used across both schemas                      const string nodeTypeAlias = "(@nodeTypeAlias='{0}' or (count(@nodeTypeAlias)=0 and name()='{0}'))";                        sb.Append(string.Format(nodeTypeAlias' field));                      sb.Append(" or ");                  }                  sb.Remove(sb.Length - 4' 4); //remove last " or "                  sb.Append(")");              }
