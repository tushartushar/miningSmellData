Implementation smell,Namespace,Class,File,Method,Description
Complex Method,EngageNet.Api,ApiResponseParser,D:\research\architectureSmells\repos1\TroyGoode_EngageNet\src\EngageNet\Api\ApiResponseParser.cs,Parse,Cyclomatic complexity of the method is 17
Long Identifier,EngageNet,IEngageNet,D:\research\architectureSmells\repos1\TroyGoode_EngageNet\src\EngageNet\IEngageNet.cs,GetContacts,The length of the parameter authenticationDetailsIdentifier is 31.
Long Identifier,EngageNet,IEngageNet,D:\research\architectureSmells\repos1\TroyGoode_EngageNet\src\EngageNet\IEngageNet.cs,UpdateStatus,The length of the parameter authenticationDetailsIdentifier is 31.
Long Identifier,EngageNet,IEngageNet,D:\research\architectureSmells\repos1\TroyGoode_EngageNet\src\EngageNet\IEngageNet.cs,MapLocalKey,The length of the parameter authenticationDetailsIdentifier is 31.
Long Identifier,EngageNet,IEngageNet,D:\research\architectureSmells\repos1\TroyGoode_EngageNet\src\EngageNet\IEngageNet.cs,UnmapLocalKey,The length of the parameter authenticationDetailsIdentifier is 31.
Long Identifier,EngageNet,IEngageNet,D:\research\architectureSmells\repos1\TroyGoode_EngageNet\src\EngageNet\IEngageNet.cs,GetUserData,The length of the parameter authenticationDetailsIdentifier is 31.
Long Identifier,EngageNet,EngageNet,D:\research\architectureSmells\repos1\TroyGoode_EngageNet\src\EngageNet\EngageNet.cs,GetContacts,The length of the parameter authenticationDetailsIdentifier is 31.
Long Identifier,EngageNet,EngageNet,D:\research\architectureSmells\repos1\TroyGoode_EngageNet\src\EngageNet\EngageNet.cs,UpdateStatus,The length of the parameter authenticationDetailsIdentifier is 31.
Long Identifier,EngageNet,EngageNet,D:\research\architectureSmells\repos1\TroyGoode_EngageNet\src\EngageNet\EngageNet.cs,MapLocalKey,The length of the parameter authenticationDetailsIdentifier is 31.
Long Identifier,EngageNet,EngageNet,D:\research\architectureSmells\repos1\TroyGoode_EngageNet\src\EngageNet\EngageNet.cs,UnmapLocalKey,The length of the parameter authenticationDetailsIdentifier is 31.
Long Identifier,EngageNet,EngageNet,D:\research\architectureSmells\repos1\TroyGoode_EngageNet\src\EngageNet\EngageNet.cs,GetUserData,The length of the parameter authenticationDetailsIdentifier is 31.
Long Identifier,EngageNet,EngageNet,D:\research\architectureSmells\repos1\TroyGoode_EngageNet\src\EngageNet\EngageNet.cs,AddActivity,The length of the parameter authenticationDetailsIdentifier is 31.
Magic Number,EngageNet.Api,ApiResponseParser,D:\research\architectureSmells\repos1\TroyGoode_EngageNet\src\EngageNet\Api\ApiResponseParser.cs,Parse,The following statement contains a magic number: switch (errCode)  			{  				case -1:  					throw new ServiceTemporarilyUnavailableException(errCode' errMsg);  				case 0:  					throw new MissingParameterException(errCode' errMsg);  				case 1:  					throw new InvalidParameterException(errCode' errMsg);  				case 2:  					throw new DataNotFoundException(errCode' errMsg);  				case 3:  					if (errMsg.ToLowerInvariant().StartsWith("token url mismatch"))  						throw new TokenUrlMismatchException(errCode' errMsg);  					throw new AuthenticationErrorException(errCode' errMsg);  				case 4:  					throw new FacebookErrorException(errCode' errMsg);  				case 5:  					throw new MappingExistsException(errCode' errMsg);  				case 6:  					throw new PreviouslyOperationalProviderException(errCode' errMsg);  				case 7:  					throw new AccountUpgradeNeededException(errCode' errMsg);  				case 8:  					throw new CredentialsMissingException(errCode' errMsg);  				case 9:  					throw new CredentialsRevokedException(errCode' errMsg);  				case 10:  					throw new ApplicationConfigurationException(errCode' errMsg);  				case 11:  					throw new UnsupportedProviderFeatureException(errCode' errMsg);  				default:  					throw new UnknownResponseException(errCode' errMsg);  			}
Magic Number,EngageNet.Api,ApiResponseParser,D:\research\architectureSmells\repos1\TroyGoode_EngageNet\src\EngageNet\Api\ApiResponseParser.cs,Parse,The following statement contains a magic number: switch (errCode)  			{  				case -1:  					throw new ServiceTemporarilyUnavailableException(errCode' errMsg);  				case 0:  					throw new MissingParameterException(errCode' errMsg);  				case 1:  					throw new InvalidParameterException(errCode' errMsg);  				case 2:  					throw new DataNotFoundException(errCode' errMsg);  				case 3:  					if (errMsg.ToLowerInvariant().StartsWith("token url mismatch"))  						throw new TokenUrlMismatchException(errCode' errMsg);  					throw new AuthenticationErrorException(errCode' errMsg);  				case 4:  					throw new FacebookErrorException(errCode' errMsg);  				case 5:  					throw new MappingExistsException(errCode' errMsg);  				case 6:  					throw new PreviouslyOperationalProviderException(errCode' errMsg);  				case 7:  					throw new AccountUpgradeNeededException(errCode' errMsg);  				case 8:  					throw new CredentialsMissingException(errCode' errMsg);  				case 9:  					throw new CredentialsRevokedException(errCode' errMsg);  				case 10:  					throw new ApplicationConfigurationException(errCode' errMsg);  				case 11:  					throw new UnsupportedProviderFeatureException(errCode' errMsg);  				default:  					throw new UnknownResponseException(errCode' errMsg);  			}
Magic Number,EngageNet.Api,ApiResponseParser,D:\research\architectureSmells\repos1\TroyGoode_EngageNet\src\EngageNet\Api\ApiResponseParser.cs,Parse,The following statement contains a magic number: switch (errCode)  			{  				case -1:  					throw new ServiceTemporarilyUnavailableException(errCode' errMsg);  				case 0:  					throw new MissingParameterException(errCode' errMsg);  				case 1:  					throw new InvalidParameterException(errCode' errMsg);  				case 2:  					throw new DataNotFoundException(errCode' errMsg);  				case 3:  					if (errMsg.ToLowerInvariant().StartsWith("token url mismatch"))  						throw new TokenUrlMismatchException(errCode' errMsg);  					throw new AuthenticationErrorException(errCode' errMsg);  				case 4:  					throw new FacebookErrorException(errCode' errMsg);  				case 5:  					throw new MappingExistsException(errCode' errMsg);  				case 6:  					throw new PreviouslyOperationalProviderException(errCode' errMsg);  				case 7:  					throw new AccountUpgradeNeededException(errCode' errMsg);  				case 8:  					throw new CredentialsMissingException(errCode' errMsg);  				case 9:  					throw new CredentialsRevokedException(errCode' errMsg);  				case 10:  					throw new ApplicationConfigurationException(errCode' errMsg);  				case 11:  					throw new UnsupportedProviderFeatureException(errCode' errMsg);  				default:  					throw new UnknownResponseException(errCode' errMsg);  			}
Magic Number,EngageNet.Api,ApiResponseParser,D:\research\architectureSmells\repos1\TroyGoode_EngageNet\src\EngageNet\Api\ApiResponseParser.cs,Parse,The following statement contains a magic number: switch (errCode)  			{  				case -1:  					throw new ServiceTemporarilyUnavailableException(errCode' errMsg);  				case 0:  					throw new MissingParameterException(errCode' errMsg);  				case 1:  					throw new InvalidParameterException(errCode' errMsg);  				case 2:  					throw new DataNotFoundException(errCode' errMsg);  				case 3:  					if (errMsg.ToLowerInvariant().StartsWith("token url mismatch"))  						throw new TokenUrlMismatchException(errCode' errMsg);  					throw new AuthenticationErrorException(errCode' errMsg);  				case 4:  					throw new FacebookErrorException(errCode' errMsg);  				case 5:  					throw new MappingExistsException(errCode' errMsg);  				case 6:  					throw new PreviouslyOperationalProviderException(errCode' errMsg);  				case 7:  					throw new AccountUpgradeNeededException(errCode' errMsg);  				case 8:  					throw new CredentialsMissingException(errCode' errMsg);  				case 9:  					throw new CredentialsRevokedException(errCode' errMsg);  				case 10:  					throw new ApplicationConfigurationException(errCode' errMsg);  				case 11:  					throw new UnsupportedProviderFeatureException(errCode' errMsg);  				default:  					throw new UnknownResponseException(errCode' errMsg);  			}
Magic Number,EngageNet.Api,ApiResponseParser,D:\research\architectureSmells\repos1\TroyGoode_EngageNet\src\EngageNet\Api\ApiResponseParser.cs,Parse,The following statement contains a magic number: switch (errCode)  			{  				case -1:  					throw new ServiceTemporarilyUnavailableException(errCode' errMsg);  				case 0:  					throw new MissingParameterException(errCode' errMsg);  				case 1:  					throw new InvalidParameterException(errCode' errMsg);  				case 2:  					throw new DataNotFoundException(errCode' errMsg);  				case 3:  					if (errMsg.ToLowerInvariant().StartsWith("token url mismatch"))  						throw new TokenUrlMismatchException(errCode' errMsg);  					throw new AuthenticationErrorException(errCode' errMsg);  				case 4:  					throw new FacebookErrorException(errCode' errMsg);  				case 5:  					throw new MappingExistsException(errCode' errMsg);  				case 6:  					throw new PreviouslyOperationalProviderException(errCode' errMsg);  				case 7:  					throw new AccountUpgradeNeededException(errCode' errMsg);  				case 8:  					throw new CredentialsMissingException(errCode' errMsg);  				case 9:  					throw new CredentialsRevokedException(errCode' errMsg);  				case 10:  					throw new ApplicationConfigurationException(errCode' errMsg);  				case 11:  					throw new UnsupportedProviderFeatureException(errCode' errMsg);  				default:  					throw new UnknownResponseException(errCode' errMsg);  			}
Magic Number,EngageNet.Api,ApiResponseParser,D:\research\architectureSmells\repos1\TroyGoode_EngageNet\src\EngageNet\Api\ApiResponseParser.cs,Parse,The following statement contains a magic number: switch (errCode)  			{  				case -1:  					throw new ServiceTemporarilyUnavailableException(errCode' errMsg);  				case 0:  					throw new MissingParameterException(errCode' errMsg);  				case 1:  					throw new InvalidParameterException(errCode' errMsg);  				case 2:  					throw new DataNotFoundException(errCode' errMsg);  				case 3:  					if (errMsg.ToLowerInvariant().StartsWith("token url mismatch"))  						throw new TokenUrlMismatchException(errCode' errMsg);  					throw new AuthenticationErrorException(errCode' errMsg);  				case 4:  					throw new FacebookErrorException(errCode' errMsg);  				case 5:  					throw new MappingExistsException(errCode' errMsg);  				case 6:  					throw new PreviouslyOperationalProviderException(errCode' errMsg);  				case 7:  					throw new AccountUpgradeNeededException(errCode' errMsg);  				case 8:  					throw new CredentialsMissingException(errCode' errMsg);  				case 9:  					throw new CredentialsRevokedException(errCode' errMsg);  				case 10:  					throw new ApplicationConfigurationException(errCode' errMsg);  				case 11:  					throw new UnsupportedProviderFeatureException(errCode' errMsg);  				default:  					throw new UnknownResponseException(errCode' errMsg);  			}
Magic Number,EngageNet.Api,ApiResponseParser,D:\research\architectureSmells\repos1\TroyGoode_EngageNet\src\EngageNet\Api\ApiResponseParser.cs,Parse,The following statement contains a magic number: switch (errCode)  			{  				case -1:  					throw new ServiceTemporarilyUnavailableException(errCode' errMsg);  				case 0:  					throw new MissingParameterException(errCode' errMsg);  				case 1:  					throw new InvalidParameterException(errCode' errMsg);  				case 2:  					throw new DataNotFoundException(errCode' errMsg);  				case 3:  					if (errMsg.ToLowerInvariant().StartsWith("token url mismatch"))  						throw new TokenUrlMismatchException(errCode' errMsg);  					throw new AuthenticationErrorException(errCode' errMsg);  				case 4:  					throw new FacebookErrorException(errCode' errMsg);  				case 5:  					throw new MappingExistsException(errCode' errMsg);  				case 6:  					throw new PreviouslyOperationalProviderException(errCode' errMsg);  				case 7:  					throw new AccountUpgradeNeededException(errCode' errMsg);  				case 8:  					throw new CredentialsMissingException(errCode' errMsg);  				case 9:  					throw new CredentialsRevokedException(errCode' errMsg);  				case 10:  					throw new ApplicationConfigurationException(errCode' errMsg);  				case 11:  					throw new UnsupportedProviderFeatureException(errCode' errMsg);  				default:  					throw new UnknownResponseException(errCode' errMsg);  			}
Magic Number,EngageNet.Api,ApiResponseParser,D:\research\architectureSmells\repos1\TroyGoode_EngageNet\src\EngageNet\Api\ApiResponseParser.cs,Parse,The following statement contains a magic number: switch (errCode)  			{  				case -1:  					throw new ServiceTemporarilyUnavailableException(errCode' errMsg);  				case 0:  					throw new MissingParameterException(errCode' errMsg);  				case 1:  					throw new InvalidParameterException(errCode' errMsg);  				case 2:  					throw new DataNotFoundException(errCode' errMsg);  				case 3:  					if (errMsg.ToLowerInvariant().StartsWith("token url mismatch"))  						throw new TokenUrlMismatchException(errCode' errMsg);  					throw new AuthenticationErrorException(errCode' errMsg);  				case 4:  					throw new FacebookErrorException(errCode' errMsg);  				case 5:  					throw new MappingExistsException(errCode' errMsg);  				case 6:  					throw new PreviouslyOperationalProviderException(errCode' errMsg);  				case 7:  					throw new AccountUpgradeNeededException(errCode' errMsg);  				case 8:  					throw new CredentialsMissingException(errCode' errMsg);  				case 9:  					throw new CredentialsRevokedException(errCode' errMsg);  				case 10:  					throw new ApplicationConfigurationException(errCode' errMsg);  				case 11:  					throw new UnsupportedProviderFeatureException(errCode' errMsg);  				default:  					throw new UnknownResponseException(errCode' errMsg);  			}
Magic Number,EngageNet.Api,ApiResponseParser,D:\research\architectureSmells\repos1\TroyGoode_EngageNet\src\EngageNet\Api\ApiResponseParser.cs,Parse,The following statement contains a magic number: switch (errCode)  			{  				case -1:  					throw new ServiceTemporarilyUnavailableException(errCode' errMsg);  				case 0:  					throw new MissingParameterException(errCode' errMsg);  				case 1:  					throw new InvalidParameterException(errCode' errMsg);  				case 2:  					throw new DataNotFoundException(errCode' errMsg);  				case 3:  					if (errMsg.ToLowerInvariant().StartsWith("token url mismatch"))  						throw new TokenUrlMismatchException(errCode' errMsg);  					throw new AuthenticationErrorException(errCode' errMsg);  				case 4:  					throw new FacebookErrorException(errCode' errMsg);  				case 5:  					throw new MappingExistsException(errCode' errMsg);  				case 6:  					throw new PreviouslyOperationalProviderException(errCode' errMsg);  				case 7:  					throw new AccountUpgradeNeededException(errCode' errMsg);  				case 8:  					throw new CredentialsMissingException(errCode' errMsg);  				case 9:  					throw new CredentialsRevokedException(errCode' errMsg);  				case 10:  					throw new ApplicationConfigurationException(errCode' errMsg);  				case 11:  					throw new UnsupportedProviderFeatureException(errCode' errMsg);  				default:  					throw new UnknownResponseException(errCode' errMsg);  			}
Magic Number,EngageNet.Api,ApiResponseParser,D:\research\architectureSmells\repos1\TroyGoode_EngageNet\src\EngageNet\Api\ApiResponseParser.cs,Parse,The following statement contains a magic number: switch (errCode)  			{  				case -1:  					throw new ServiceTemporarilyUnavailableException(errCode' errMsg);  				case 0:  					throw new MissingParameterException(errCode' errMsg);  				case 1:  					throw new InvalidParameterException(errCode' errMsg);  				case 2:  					throw new DataNotFoundException(errCode' errMsg);  				case 3:  					if (errMsg.ToLowerInvariant().StartsWith("token url mismatch"))  						throw new TokenUrlMismatchException(errCode' errMsg);  					throw new AuthenticationErrorException(errCode' errMsg);  				case 4:  					throw new FacebookErrorException(errCode' errMsg);  				case 5:  					throw new MappingExistsException(errCode' errMsg);  				case 6:  					throw new PreviouslyOperationalProviderException(errCode' errMsg);  				case 7:  					throw new AccountUpgradeNeededException(errCode' errMsg);  				case 8:  					throw new CredentialsMissingException(errCode' errMsg);  				case 9:  					throw new CredentialsRevokedException(errCode' errMsg);  				case 10:  					throw new ApplicationConfigurationException(errCode' errMsg);  				case 11:  					throw new UnsupportedProviderFeatureException(errCode' errMsg);  				default:  					throw new UnknownResponseException(errCode' errMsg);  			}
