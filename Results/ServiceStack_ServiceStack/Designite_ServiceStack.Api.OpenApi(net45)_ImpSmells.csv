Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ServiceStack.Api.OpenApi,OpenApiService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Api.OpenApi\OpenApiService.cs,GetOperations,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack.Api.OpenApi,OpenApiService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Api.OpenApi\OpenApiService.cs,GetOpenApiProperty,Cyclomatic complexity of the method is 11
Complex Method,ServiceStack.Api.OpenApi,OpenApiService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Api.OpenApi\OpenApiService.cs,ParseDefinitions,Cyclomatic complexity of the method is 15
Complex Method,ServiceStack.Api.OpenApi,OpenApiService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Api.OpenApi\OpenApiService.cs,ParseOperations,Cyclomatic complexity of the method is 14
Complex Method,ServiceStack.Api.OpenApi,OpenApiService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Api.OpenApi\OpenApiService.cs,ParseParameters,Cyclomatic complexity of the method is 13
Long Parameter List,ServiceStack.Api.OpenApi,OpenApiService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Api.OpenApi\OpenApiService.cs,GetParameter,The method has 8 parameters. Parameters: schemas' schemaType' route' verb' paramName' paramIn' allowableValueAttrs' isApiMember
Long Parameter List,ServiceStack.Api.OpenApi,OpenApiService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Api.OpenApi\OpenApiService.cs,GetListParameter,The method has 7 parameters. Parameters: schemas' listType' route' verb' paramName' paramIn' allowableValueAttrs
Long Identifier,ServiceStack.Api.OpenApi,OpenApiService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Api.OpenApi\OpenApiService.cs,,The length of the parameter ClrTypesToSwaggerScalarFormats is 30.
Long Statement,ServiceStack.Api.OpenApi,OpenApiService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Api.OpenApi\OpenApiService.cs,Get,The length of the statement  "                { "Object"' new OpenApiSchema { Description = "Object"' Type = OpenApiType.Object' Properties = new OrderedDictionary<string' OpenApiProperty>() } }' " is 149.
Long Statement,ServiceStack.Api.OpenApi,OpenApiService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Api.OpenApi\OpenApiService.cs,Get,The length of the statement  "                Definitions = definitions.Where(x => !SchemaIdToClrType.ContainsKey(x.Key) || !IsInlineSchema(SchemaIdToClrType[x.Key])).ToDictionary(x => x.Key' x => x.Value)' " is 160.
Long Statement,ServiceStack.Api.OpenApi,OpenApiService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Api.OpenApi\OpenApiService.cs,GetOpenApiProperty,The length of the statement  "                    schemaProp.Items = new Dictionary<string' object> { { "$ref"' "#/definitions/" + GetSchemaDefinitionRef(listItemType) } }; " is 122.
Long Statement,ServiceStack.Api.OpenApi.Support,OrderedDictionary<TKey;TValue>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Api.OpenApi\Support\OrderedDictionary.cs,RemoveAt,The length of the statement  "                throw new ArgumentOutOfRangeException("index"' "'index' must be non-negative and less than the size of the collection"); " is 120.
Complex Conditional,ServiceStack.Api.OpenApi,OpenApiService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Api.OpenApi\OpenApiService.cs,IsDictionaryType,The conditional expression  "genericType == typeof(Dictionary<'>)                  || genericType == typeof(IDictionary<'>)                  || genericType == typeof(IReadOnlyDictionary<'>)                  || genericType == typeof(SortedDictionary<'>)"  is complex.
Complex Conditional,ServiceStack.Api.OpenApi,OpenApiService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Api.OpenApi\OpenApiService.cs,ParseParameters,The conditional expression  "(member.Verb == null || string.Compare(member.Verb' verb' StringComparison.OrdinalIgnoreCase) == 0)                              && (member.Route == null || (route ?? "").StartsWith(member.Route))                              && !string.Equals(member.ParameterType' "model")                              && methodOperationParameters.All(x => x.Name != (member.Name ?? key))"  is complex.
Magic Number,ServiceStack.Api.OpenApi,OpenApiService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Api.OpenApi\OpenApiService.cs,GetOperationName,The following statement contains a magic number: int num = 2;
Missing Default,ServiceStack.Api.OpenApi,OpenApiService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Api.OpenApi\OpenApiService.cs,ParseOperations,The following switch statement is missing a default case: switch (verb)                      {                          case HttpMethods.Get: curPath.Get = operation; break;                          case HttpMethods.Post: curPath.Post = operation; break;                          case HttpMethods.Put: curPath.Put = operation; break;                          case HttpMethods.Delete: curPath.Delete = operation; break;                          case HttpMethods.Patch: curPath.Patch = operation; break;                          case HttpMethods.Head: curPath.Head = operation; break;                          case HttpMethods.Options: curPath.Options = operation; break;                      }
