Implementation smell,Namespace,Class,File,Method,Description
Long Method,ServiceStack.Extensions.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Configure,The method has 133 lines of code.
Long Statement,ServiceStack.Extensions.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Configure,The length of the statement  "            //    new OrmLiteConnectionFactory("Server=localhost;Port=5432;User Id=test;Password=test;Database=test;Pooling=true;MinPoolSize=0;MaxPoolSize=200"' " is 148.
Long Statement,ServiceStack.Extensions.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Configure,The length of the statement  "                db.Insert(new TypeWithEnum { Id = 1' Name = "Value1"' SomeEnum = SomeEnum.Value1' NSomeEnum = SomeEnum.Value1' SomeEnumAsInt = SomeEnumAsInt.Value1' NSomeEnumAsInt = SomeEnumAsInt.Value1 }); " is 190.
Long Statement,ServiceStack.Extensions.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Configure,The length of the statement  "                db.Insert(new TypeWithEnum { Id = 2' Name = "Value2"' SomeEnum = SomeEnum.Value2' NSomeEnum = SomeEnum.Value2' SomeEnumAsInt = SomeEnumAsInt.Value2' NSomeEnumAsInt = SomeEnumAsInt.Value2 }); " is 190.
Long Statement,ServiceStack.Extensions.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Configure,The length of the statement  "                db.Insert(new TypeWithEnum { Id = 3' Name = "Value3"' SomeEnum = SomeEnum.Value3' NSomeEnum = SomeEnum.Value3' SomeEnumAsInt = SomeEnumAsInt.Value3' NSomeEnumAsInt = SomeEnumAsInt.Value3 }); " is 190.
Long Statement,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_Explicit_conventions,The length of the statement  "            response = await client.GetAsync(new QueryRockstarsConventions { DateOfBirthGreaterThan = new DateTime(1960' 01' 01) }); " is 120.
Long Statement,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_Include_Aggregates_in_AutoQuery,The length of the statement  "            response = await client.GetAsync(new QueryRockstars { Include = "Count(*)' Min(Age)' Max(Age)' Sum(Id)' Avg(Age)"' OrderBy = "Id" }); " is 133.
Long Statement,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_Include_Aggregates_in_AutoQuery,The length of the statement  "            response = await client.GetAsync(new QueryRockstars { Age = 27' Include = "Count(*)' Min(Age)' Max(Age)' Sum(Id)' Avg(Age)"' OrderBy = "Id" }); " is 143.
Long Statement,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Does_ignore_unknown_aggregate_commands,The length of the statement  "            response = await client.GetAsync(new QueryRockstars { Include = "FOO(1)' Min(Age)' Bar('a') alias' Count(*)' Baz(1''foo')" }); " is 126.
Long Statement,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_Include_Aggregates_in_AutoQuery_with_Aliases,The length of the statement  "            response = await client.GetAsync(new QueryRockstars { Include = "Count(*) count' Min(Age) min' Max(Age) max' Sum(Id) sum" }); " is 125.
Long Statement,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_ChangeDb_with_Named_Connection,The length of the statement  "            var aqResponse = await client.GetAsync(new QueryChangeDb { NamedConnection = AutoQueryAppHost.SqlServerNamedConnection }); " is 122.
Long Statement,ServiceStack.Extensions.Tests,GrpcTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,Can_call_Multiply_Grpc_Service_GrpcChannel,The length of the statement  "            var response = await http.CreateCallInvoker().Execute<Multiply' MultiplyResponse>(new Multiply { X = 12' Y = 4 }' "GrpcServices"' " is 129.
Virtual Method Call from Constructor,ServiceStack.Extensions.Tests,GrpcAuthTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAuthTests.cs,GrpcAuthTests,The constructor "GrpcAuthTests" calls a virtual method "Start".
Virtual Method Call from Constructor,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,GrpcAutoQueryTests,The constructor "GrpcAutoQueryTests" calls a virtual method "Start".
Virtual Method Call from Constructor,ServiceStack.Extensions.Tests,GrpcServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcServerEventsTests.cs,GrpcServerEventsTests,The constructor "GrpcServerEventsTests" calls a virtual method "Start".
Virtual Method Call from Constructor,ServiceStack.Extensions.Tests,GrpcTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,GrpcTests,The constructor "GrpcTests" calls a virtual method "Start".
Virtual Method Call from Constructor,ServiceStack.Extensions.Tests,GrpcTodoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTodoTests.cs,GrpcTodoTests,The constructor "GrpcTodoTests" calls a virtual method "Start".
Magic Number,ServiceStack.Extensions.Tests,AppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAuthTests.cs,ConfigureKestrel,The following statement contains a magic number: options.ListenLocalhost(20000' listenOptions =>                  {                      listenOptions.Protocols = HttpProtocols.Http2;                  });
Magic Number,ServiceStack.Extensions.Tests,AppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAuthTests.cs,ConfigureKestrel,The following statement contains a magic number: options.ListenLocalhost(20000' listenOptions => {                      listenOptions.Protocols = HttpProtocols.Http2;                  });
Magic Number,ServiceStack.Extensions.Tests,AppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAuthTests.cs,ConfigureKestrel,The following statement contains a magic number: options.ListenLocalhost(20000' listenOptions =>                  {                      listenOptions.Protocols = HttpProtocols.Http2;                  });
Magic Number,ServiceStack.Extensions.Tests,AppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAuthTests.cs,ConfigureKestrel,The following statement contains a magic number: options.ListenLocalhost(2000' listenOptions =>                  {                      listenOptions.Protocols = HttpProtocols.Http2;                  });
Magic Number,ServiceStack.Extensions.Tests,AutoQueryService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Get,The following statement contains a magic number: q.Take(2);
Magic Number,ServiceStack.Extensions.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,ConfigureKestrel,The following statement contains a magic number: options.ListenLocalhost(20000' listenOptions =>              {                  listenOptions.Protocols = HttpProtocols.Http2;              });
Magic Number,ServiceStack.Extensions.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new NamedRockstar {                      Id = 1'                      FirstName = "Microsoft"'                      LastName = "SQL Server"'                      Age = 27'                      DateOfBirth = new DateTime(1989'1'1)'                      LivingStatus = LivingStatus.Alive'                  });
Magic Number,ServiceStack.Extensions.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new NamedRockstar {                      Id = 1'                      FirstName = "Microsoft"'                      LastName = "SQL Server"'                      Age = 27'                      DateOfBirth = new DateTime(1989'1'1)'                      LivingStatus = LivingStatus.Alive'                  });
Magic Number,ServiceStack.Extensions.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new Rockstar {                      Id = 1'                      FirstName = "Sqlite"'                      LastName = "File DB"'                      Age = 16'                      DateOfBirth = new DateTime(2000' 8' 1)'                      LivingStatus = LivingStatus.Alive'                  });
Magic Number,ServiceStack.Extensions.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new Rockstar {                      Id = 1'                      FirstName = "Sqlite"'                      LastName = "File DB"'                      Age = 16'                      DateOfBirth = new DateTime(2000' 8' 1)'                      LivingStatus = LivingStatus.Alive'                  });
Magic Number,ServiceStack.Extensions.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new Rockstar {                      Id = 1'                      FirstName = "Sqlite"'                      LastName = "File DB"'                      Age = 16'                      DateOfBirth = new DateTime(2000' 8' 1)'                      LivingStatus = LivingStatus.Alive'                  });
Magic Number,ServiceStack.Extensions.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new AllFields                  {                      Id = 1'                      NullableId = 2'                      Byte = 3'                      DateTime = new DateTime(2001' 01' 01)'                      NullableDateTime = new DateTime(2002' 02' 02)'                      Decimal = 4'                      Double = 5.5'                      Float = 6.6f'                      Guid = new Guid("3EE6865A-4149-4940-B7A2-F952E0FEFC5E")'                      NullableGuid = new Guid("7A2FDDD8-4BB0-4735-8230-A6AC79088489")'                      Long = 7'                      Short = 8'                      String = "string"'                      TimeSpan = TimeSpan.FromHours(1)'                      NullableTimeSpan = TimeSpan.FromDays(1)'                      UInt = 9'                      ULong = 10'                      UShort = 11'                      Enum = HttpStatusCode.MethodNotAllowed'                      NullableEnum = HttpStatusCode.MethodNotAllowed'                  });
Magic Number,ServiceStack.Extensions.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new AllFields                  {                      Id = 1'                      NullableId = 2'                      Byte = 3'                      DateTime = new DateTime(2001' 01' 01)'                      NullableDateTime = new DateTime(2002' 02' 02)'                      Decimal = 4'                      Double = 5.5'                      Float = 6.6f'                      Guid = new Guid("3EE6865A-4149-4940-B7A2-F952E0FEFC5E")'                      NullableGuid = new Guid("7A2FDDD8-4BB0-4735-8230-A6AC79088489")'                      Long = 7'                      Short = 8'                      String = "string"'                      TimeSpan = TimeSpan.FromHours(1)'                      NullableTimeSpan = TimeSpan.FromDays(1)'                      UInt = 9'                      ULong = 10'                      UShort = 11'                      Enum = HttpStatusCode.MethodNotAllowed'                      NullableEnum = HttpStatusCode.MethodNotAllowed'                  });
Magic Number,ServiceStack.Extensions.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new AllFields                  {                      Id = 1'                      NullableId = 2'                      Byte = 3'                      DateTime = new DateTime(2001' 01' 01)'                      NullableDateTime = new DateTime(2002' 02' 02)'                      Decimal = 4'                      Double = 5.5'                      Float = 6.6f'                      Guid = new Guid("3EE6865A-4149-4940-B7A2-F952E0FEFC5E")'                      NullableGuid = new Guid("7A2FDDD8-4BB0-4735-8230-A6AC79088489")'                      Long = 7'                      Short = 8'                      String = "string"'                      TimeSpan = TimeSpan.FromHours(1)'                      NullableTimeSpan = TimeSpan.FromDays(1)'                      UInt = 9'                      ULong = 10'                      UShort = 11'                      Enum = HttpStatusCode.MethodNotAllowed'                      NullableEnum = HttpStatusCode.MethodNotAllowed'                  });
Magic Number,ServiceStack.Extensions.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new AllFields                  {                      Id = 1'                      NullableId = 2'                      Byte = 3'                      DateTime = new DateTime(2001' 01' 01)'                      NullableDateTime = new DateTime(2002' 02' 02)'                      Decimal = 4'                      Double = 5.5'                      Float = 6.6f'                      Guid = new Guid("3EE6865A-4149-4940-B7A2-F952E0FEFC5E")'                      NullableGuid = new Guid("7A2FDDD8-4BB0-4735-8230-A6AC79088489")'                      Long = 7'                      Short = 8'                      String = "string"'                      TimeSpan = TimeSpan.FromHours(1)'                      NullableTimeSpan = TimeSpan.FromDays(1)'                      UInt = 9'                      ULong = 10'                      UShort = 11'                      Enum = HttpStatusCode.MethodNotAllowed'                      NullableEnum = HttpStatusCode.MethodNotAllowed'                  });
Magic Number,ServiceStack.Extensions.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new AllFields                  {                      Id = 1'                      NullableId = 2'                      Byte = 3'                      DateTime = new DateTime(2001' 01' 01)'                      NullableDateTime = new DateTime(2002' 02' 02)'                      Decimal = 4'                      Double = 5.5'                      Float = 6.6f'                      Guid = new Guid("3EE6865A-4149-4940-B7A2-F952E0FEFC5E")'                      NullableGuid = new Guid("7A2FDDD8-4BB0-4735-8230-A6AC79088489")'                      Long = 7'                      Short = 8'                      String = "string"'                      TimeSpan = TimeSpan.FromHours(1)'                      NullableTimeSpan = TimeSpan.FromDays(1)'                      UInt = 9'                      ULong = 10'                      UShort = 11'                      Enum = HttpStatusCode.MethodNotAllowed'                      NullableEnum = HttpStatusCode.MethodNotAllowed'                  });
Magic Number,ServiceStack.Extensions.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new AllFields                  {                      Id = 1'                      NullableId = 2'                      Byte = 3'                      DateTime = new DateTime(2001' 01' 01)'                      NullableDateTime = new DateTime(2002' 02' 02)'                      Decimal = 4'                      Double = 5.5'                      Float = 6.6f'                      Guid = new Guid("3EE6865A-4149-4940-B7A2-F952E0FEFC5E")'                      NullableGuid = new Guid("7A2FDDD8-4BB0-4735-8230-A6AC79088489")'                      Long = 7'                      Short = 8'                      String = "string"'                      TimeSpan = TimeSpan.FromHours(1)'                      NullableTimeSpan = TimeSpan.FromDays(1)'                      UInt = 9'                      ULong = 10'                      UShort = 11'                      Enum = HttpStatusCode.MethodNotAllowed'                      NullableEnum = HttpStatusCode.MethodNotAllowed'                  });
Magic Number,ServiceStack.Extensions.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new AllFields                  {                      Id = 1'                      NullableId = 2'                      Byte = 3'                      DateTime = new DateTime(2001' 01' 01)'                      NullableDateTime = new DateTime(2002' 02' 02)'                      Decimal = 4'                      Double = 5.5'                      Float = 6.6f'                      Guid = new Guid("3EE6865A-4149-4940-B7A2-F952E0FEFC5E")'                      NullableGuid = new Guid("7A2FDDD8-4BB0-4735-8230-A6AC79088489")'                      Long = 7'                      Short = 8'                      String = "string"'                      TimeSpan = TimeSpan.FromHours(1)'                      NullableTimeSpan = TimeSpan.FromDays(1)'                      UInt = 9'                      ULong = 10'                      UShort = 11'                      Enum = HttpStatusCode.MethodNotAllowed'                      NullableEnum = HttpStatusCode.MethodNotAllowed'                  });
Magic Number,ServiceStack.Extensions.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new AllFields                  {                      Id = 1'                      NullableId = 2'                      Byte = 3'                      DateTime = new DateTime(2001' 01' 01)'                      NullableDateTime = new DateTime(2002' 02' 02)'                      Decimal = 4'                      Double = 5.5'                      Float = 6.6f'                      Guid = new Guid("3EE6865A-4149-4940-B7A2-F952E0FEFC5E")'                      NullableGuid = new Guid("7A2FDDD8-4BB0-4735-8230-A6AC79088489")'                      Long = 7'                      Short = 8'                      String = "string"'                      TimeSpan = TimeSpan.FromHours(1)'                      NullableTimeSpan = TimeSpan.FromDays(1)'                      UInt = 9'                      ULong = 10'                      UShort = 11'                      Enum = HttpStatusCode.MethodNotAllowed'                      NullableEnum = HttpStatusCode.MethodNotAllowed'                  });
Magic Number,ServiceStack.Extensions.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new AllFields                  {                      Id = 1'                      NullableId = 2'                      Byte = 3'                      DateTime = new DateTime(2001' 01' 01)'                      NullableDateTime = new DateTime(2002' 02' 02)'                      Decimal = 4'                      Double = 5.5'                      Float = 6.6f'                      Guid = new Guid("3EE6865A-4149-4940-B7A2-F952E0FEFC5E")'                      NullableGuid = new Guid("7A2FDDD8-4BB0-4735-8230-A6AC79088489")'                      Long = 7'                      Short = 8'                      String = "string"'                      TimeSpan = TimeSpan.FromHours(1)'                      NullableTimeSpan = TimeSpan.FromDays(1)'                      UInt = 9'                      ULong = 10'                      UShort = 11'                      Enum = HttpStatusCode.MethodNotAllowed'                      NullableEnum = HttpStatusCode.MethodNotAllowed'                  });
Magic Number,ServiceStack.Extensions.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new AllFields                  {                      Id = 1'                      NullableId = 2'                      Byte = 3'                      DateTime = new DateTime(2001' 01' 01)'                      NullableDateTime = new DateTime(2002' 02' 02)'                      Decimal = 4'                      Double = 5.5'                      Float = 6.6f'                      Guid = new Guid("3EE6865A-4149-4940-B7A2-F952E0FEFC5E")'                      NullableGuid = new Guid("7A2FDDD8-4BB0-4735-8230-A6AC79088489")'                      Long = 7'                      Short = 8'                      String = "string"'                      TimeSpan = TimeSpan.FromHours(1)'                      NullableTimeSpan = TimeSpan.FromDays(1)'                      UInt = 9'                      ULong = 10'                      UShort = 11'                      Enum = HttpStatusCode.MethodNotAllowed'                      NullableEnum = HttpStatusCode.MethodNotAllowed'                  });
Magic Number,ServiceStack.Extensions.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new AllFields                  {                      Id = 1'                      NullableId = 2'                      Byte = 3'                      DateTime = new DateTime(2001' 01' 01)'                      NullableDateTime = new DateTime(2002' 02' 02)'                      Decimal = 4'                      Double = 5.5'                      Float = 6.6f'                      Guid = new Guid("3EE6865A-4149-4940-B7A2-F952E0FEFC5E")'                      NullableGuid = new Guid("7A2FDDD8-4BB0-4735-8230-A6AC79088489")'                      Long = 7'                      Short = 8'                      String = "string"'                      TimeSpan = TimeSpan.FromHours(1)'                      NullableTimeSpan = TimeSpan.FromDays(1)'                      UInt = 9'                      ULong = 10'                      UShort = 11'                      Enum = HttpStatusCode.MethodNotAllowed'                      NullableEnum = HttpStatusCode.MethodNotAllowed'                  });
Magic Number,ServiceStack.Extensions.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new AllFields                  {                      Id = 1'                      NullableId = 2'                      Byte = 3'                      DateTime = new DateTime(2001' 01' 01)'                      NullableDateTime = new DateTime(2002' 02' 02)'                      Decimal = 4'                      Double = 5.5'                      Float = 6.6f'                      Guid = new Guid("3EE6865A-4149-4940-B7A2-F952E0FEFC5E")'                      NullableGuid = new Guid("7A2FDDD8-4BB0-4735-8230-A6AC79088489")'                      Long = 7'                      Short = 8'                      String = "string"'                      TimeSpan = TimeSpan.FromHours(1)'                      NullableTimeSpan = TimeSpan.FromDays(1)'                      UInt = 9'                      ULong = 10'                      UShort = 11'                      Enum = HttpStatusCode.MethodNotAllowed'                      NullableEnum = HttpStatusCode.MethodNotAllowed'                  });
Magic Number,ServiceStack.Extensions.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new AllFields                  {                      Id = 1'                      NullableId = 2'                      Byte = 3'                      DateTime = new DateTime(2001' 01' 01)'                      NullableDateTime = new DateTime(2002' 02' 02)'                      Decimal = 4'                      Double = 5.5'                      Float = 6.6f'                      Guid = new Guid("3EE6865A-4149-4940-B7A2-F952E0FEFC5E")'                      NullableGuid = new Guid("7A2FDDD8-4BB0-4735-8230-A6AC79088489")'                      Long = 7'                      Short = 8'                      String = "string"'                      TimeSpan = TimeSpan.FromHours(1)'                      NullableTimeSpan = TimeSpan.FromDays(1)'                      UInt = 9'                      ULong = 10'                      UShort = 11'                      Enum = HttpStatusCode.MethodNotAllowed'                      NullableEnum = HttpStatusCode.MethodNotAllowed'                  });
Magic Number,ServiceStack.Extensions.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new AllFields                  {                      Id = 1'                      NullableId = 2'                      Byte = 3'                      DateTime = new DateTime(2001' 01' 01)'                      NullableDateTime = new DateTime(2002' 02' 02)'                      Decimal = 4'                      Double = 5.5'                      Float = 6.6f'                      Guid = new Guid("3EE6865A-4149-4940-B7A2-F952E0FEFC5E")'                      NullableGuid = new Guid("7A2FDDD8-4BB0-4735-8230-A6AC79088489")'                      Long = 7'                      Short = 8'                      String = "string"'                      TimeSpan = TimeSpan.FromHours(1)'                      NullableTimeSpan = TimeSpan.FromDays(1)'                      UInt = 9'                      ULong = 10'                      UShort = 11'                      Enum = HttpStatusCode.MethodNotAllowed'                      NullableEnum = HttpStatusCode.MethodNotAllowed'                  });
Magic Number,ServiceStack.Extensions.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new TypeWithEnum { Id = 2' Name = "Value2"' SomeEnum = SomeEnum.Value2' NSomeEnum = SomeEnum.Value2' SomeEnumAsInt = SomeEnumAsInt.Value2' NSomeEnumAsInt = SomeEnumAsInt.Value2 });
Magic Number,ServiceStack.Extensions.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new TypeWithEnum { Id = 3' Name = "Value3"' SomeEnum = SomeEnum.Value3' NSomeEnum = SomeEnum.Value3' SomeEnumAsInt = SomeEnumAsInt.Value3' NSomeEnumAsInt = SomeEnumAsInt.Value3 });
Magic Number,ServiceStack.Extensions.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Configure,The following statement contains a magic number: var autoQuery = new AutoQueryFeature                  {                      MaxLimit = 100'                      EnableRawSqlFilters = true'                      ResponseFilters = {                          ctx => {                              var executedCmds = new List<Command>();                              var supportedFns = new Dictionary<string' Func<int' int' int>>(StringComparer.OrdinalIgnoreCase)                              {                                  {"ADD"'      (a'b) => a + b }'                                  {"MULTIPLY"' (a'b) => a * b }'                                  {"DIVIDE"'   (a'b) => a / b }'                                  {"SUBTRACT"' (a'b) => a - b }'                              };                              foreach (var cmd in ctx.Commands)                              {                                  if (!supportedFns.TryGetValue(cmd.Name' out var fn)) continue;                                  var label = !cmd.Suffix.IsNullOrWhiteSpace() ? cmd.Suffix.Trim().ToString() : cmd.ToString();                                  ctx.Response.Meta[label] = fn(cmd.Args[0].ParseInt32()' cmd.Args[1].ParseInt32()).ToString();                                  executedCmds.Add(cmd);                              }                              ctx.Commands.RemoveAll(executedCmds.Contains);                          }                              }                  }                  .RegisterQueryFilter<QueryRockstarsFilter' Rockstar>((q' dto' req) =>                      q.And(x => x.LastName.EndsWith("son"))                  )                  .RegisterQueryFilter<QueryCustomRockstarsFilter' Rockstar>((q' dto' req) =>                      q.And(x => x.LastName.EndsWith("son"))                  )                  .RegisterQueryFilter<IFilterRockstars' Rockstar>((q' dto' req) =>                      q.And(x => x.LastName.EndsWith("son"))                  );
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_overridden_basic_query_with_case_insensitive_orderBy,The following statement contains a magic number: var response = await client.GetAsync(new QueryCaseInsensitiveOrderBy { Age = 27' OrderBy = "FirstName" });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_overridden_basic_query_with_case_insensitive_orderBy,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_explicit_equality_condition_on_overridden_CustomRockstar,The following statement contains a magic number: var response = await client.GetAsync(new QueryOverridedCustomRockstars { Age = 27' Include = "Total" });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_explicit_equality_condition_on_overridden_CustomRockstar,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(3));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_basic_query_with_limits,The following statement contains a magic number: var response = await client.GetAsync(new QueryRockstars { Skip = 2' Include = "Total" });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_basic_query_with_limits,The following statement contains a magic number: Assert.That(response.Offset' Is.EqualTo(2));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_basic_query_with_limits,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(TotalRockstars - 2));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_basic_query_with_limits,The following statement contains a magic number: response = await client.GetAsync(new QueryRockstars { Take = 2' Include = "Total" });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_basic_query_with_limits,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_basic_query_with_limits,The following statement contains a magic number: response = await client.GetAsync(new QueryRockstars { Skip = 2' Take = 2' Include = "Total" });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_basic_query_with_limits,The following statement contains a magic number: response = await client.GetAsync(new QueryRockstars { Skip = 2' Take = 2' Include = "Total" });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_basic_query_with_limits,The following statement contains a magic number: Assert.That(response.Offset' Is.EqualTo(2));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_basic_query_with_limits,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_explicit_equality_condition,The following statement contains a magic number: var response = await client.GetAsync(new QueryRockstars { Age = 27' Include = "Total" });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_explicit_equality_condition,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(3));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_explicit_equality_condition,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_explicit_equality_condition_on_CustomRockstar,The following statement contains a magic number: var response = await client.GetAsync(new QueryCustomRockstars { Age = 27' Include = "Total" });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_explicit_equality_condition_on_CustomRockstar,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(3));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_explicit_equality_condition_on_CustomRockstar,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_explicit_equality_condition_on_CustomRockstarSchema,The following statement contains a magic number: var response = await client.GetAsync(new QueryCustomRockstarsSchema { Age = 27' Include = "Total" });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_explicit_equality_condition_on_CustomRockstarSchema,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(3));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_explicit_equality_condition_on_CustomRockstarSchema,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_explicit_equality_condition_on_CustomRockstarSchema,The following statement contains a magic number: Assert.That(response.Results[0].Age' Is.EqualTo(27));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_query_with_JOIN_on_RockstarAlbums,The following statement contains a magic number: response = await client.GetAsync(new QueryJoinedRockstarAlbums { Age = 27' Include = "Total" });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_query_with_JOIN_on_RockstarAlbums,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(6));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_query_with_JOIN_on_RockstarAlbums,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(6));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_query_with_JOIN_on_RockstarAlbums_and_CustomSelectRockstar,The following statement contains a magic number: Assert.That(ages.Contains(27 * 2));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_query_with_JOIN_on_RockstarAlbums_and_CustomSelectRockstar,The following statement contains a magic number: Assert.That(ages.Contains(27 * 2));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_query_with_JOIN_on_RockstarAlbums_and_CustomSelectRockstar,The following statement contains a magic number: Assert.That(ages.Contains(27 * 2));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_query_with_JOIN_on_RockstarAlbums_and_CustomSelectRockstar,The following statement contains a magic number: Assert.That(ages.Contains(27 * 2));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_query_with_LEFTJOIN_on_RockstarAlbums,The following statement contains a magic number: var response = await client.GetAsync(new QueryRockstarAlbumsLeftJoin { IdNotEqualTo = 3' Include = "Total" });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_query_with_custom_LEFTJOIN_on_RockstarAlbums,The following statement contains a magic number: var response = await client.GetAsync(new QueryRockstarAlbumsCustomLeftJoin { IdNotEqualTo = 3' Include = "Total" });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_custom_QueryFields,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_custom_QueryFields,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_custom_QueryFields,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_custom_QueryFields,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_custom_QueryFields,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_custom_QueryFields,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_custom_QueryFields,The following statement contains a magic number: response = await client.GetAsync(new QueryFieldRockstars { Age = 42 });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_custom_QueryFields,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(4));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_combination_of_QueryFields,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Does_use_custom_model_to_select_columns,The following statement contains a magic number: Assert.That(response.Results[0].RockstarId' Is.EqualTo(3));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Does_allow_adding_attributes_dynamically,The following statement contains a magic number: var response = await client.GetAsync(new QueryFieldRockstarsDynamic { Age = 42 });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Does_allow_adding_attributes_dynamically,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(4));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Does_execute_typed_QueryFilters,The following statement contains a magic number: var response = await client.GetAsync(new QueryRockstarsFilter { Age = 27 });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Does_execute_typed_QueryFilters,The following statement contains a magic number: var custom = await client.GetAsync(new QueryCustomRockstarsFilter { Age = 27 });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Does_execute_typed_QueryFilters,The following statement contains a magic number: response = await client.GetAsync(new QueryRockstarsIFilter { Age = 27 });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_OR_QueryFilters,The following statement contains a magic number: var response = await client.GetAsync(new QueryOrRockstars { Age = 42' FirstName = "Jim" });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_OR_QueryFilters,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Does_retain_implicit_convention_when_not_overriding_template_or_ValueFormat,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Does_retain_implicit_convention_when_not_overriding_template_or_ValueFormat,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_OR_QueryFilters_Fields,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: var response = await client.GetAsync(new QueryRockstarsConventions { Ids = new[] {1' 2' 3} });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: var response = await client.GetAsync(new QueryRockstarsConventions { Ids = new[] {1' 2' 3} });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: response = await client.GetAsync(new QueryRockstarsConventions { AgeOlderThan = 42 });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: response = await client.GetAsync(new QueryRockstarsConventions { AgeGreaterThanOrEqualTo = 42 });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(4));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: response = await client.GetAsync(new QueryRockstarsConventions { AgeGreaterThan = 42 });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: response = await client.GetAsync(new QueryRockstarsConventions { GreaterThanAge = 42 });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: response = await client.GetAsync(new QueryRockstarsConventions { DateOfBirthGreaterThan = new DateTime(1960' 01' 01) });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: response = await client.GetAsync(new QueryRockstarsConventions { DateDiedLessThan = new DateTime(1980' 01' 01) });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_In_OR_Queries,The following statement contains a magic number: response = await client.GetAsync(new QueryGetRockstars { Ids = new[] { 1' 2' 3 } });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_In_OR_Queries,The following statement contains a magic number: response = await client.GetAsync(new QueryGetRockstars { Ids = new[] { 1' 2' 3 } });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_In_OR_Queries,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_In_OR_Queries,The following statement contains a magic number: response = await client.GetAsync(new QueryGetRockstars { Ages = new[] { 42' 44 }.ToList() });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_In_OR_Queries,The following statement contains a magic number: response = await client.GetAsync(new QueryGetRockstars { Ages = new[] { 42' 44 }.ToList() });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_In_OR_Queries,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_In_OR_Queries,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_In_OR_Queries,The following statement contains a magic number: response = await client.GetAsync(new QueryGetRockstars { IdsBetween = new[] { 1' 3 } });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_execute_In_OR_Queries,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_query_Movie_Ratings,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(5));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_query_Movie_Ratings,The following statement contains a magic number: response = await client.GetAsync(new QueryMovies {                  Ids = new[] { 1' 2 }'                  ImdbIds = new[] { "tt0071562"' "tt0060196" }'                  Ratings = new[] { "G"' "PG-13" }              });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_query_Movie_Ratings,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(9));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Does_implicitly_OrderBy_PrimaryKey_when_limits_is_specified,The following statement contains a magic number: var movies = await client.GetAsync(new SearchMovies { Take = 100 });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Does_implicitly_OrderBy_PrimaryKey_when_limits_is_specified,The following statement contains a magic number: var rockstars = await client.GetAsync(new SearchMovies { Take = 100 });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_OrderBy_queries,The following statement contains a magic number: var movies = await client.GetAsync(new SearchMovies { Take = 100' OrderBy = "ImdbId" });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_OrderBy_queries,The following statement contains a magic number: movies = await client.GetAsync(new SearchMovies { Take = 100' OrderBy = "Rating'ImdbId" });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_OrderBy_queries,The following statement contains a magic number: movies = await client.GetAsync(new SearchMovies { Take = 100' OrderByDesc = "ImdbId" });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_OrderBy_queries,The following statement contains a magic number: movies = await client.GetAsync(new SearchMovies { Take = 100' OrderByDesc = "Rating'ImdbId" });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_OrderBy_queries,The following statement contains a magic number: movies = await client.GetAsync(new SearchMovies { Take = 100' OrderBy = "Rating'-ImdbId" });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_OrderBy_queries,The following statement contains a magic number: movies = await client.GetAsync(new SearchMovies { Take = 100' OrderByDesc = "Rating'-ImdbId" });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_Query_Rockstars_with_References,The following statement contains a magic number: var response = await client.GetAsync(new QueryRockstarsWithReferences {                  Age = 27              });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_Query_Rockstars_with_References,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_Query_Rockstars_with_References,The following statement contains a magic number: Assert.That(kurt.Albums.Count' Is.EqualTo(5));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_Query_Rockstars_with_References,The following statement contains a magic number: response = await client.GetAsync(new QueryRockstarsWithReferences              {                  Age = 27'                  Fields = "Id'FirstName'Age"              });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_Query_Rockstars_with_References,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_Query_Rockstars_with_References,The following statement contains a magic number: response = await client.GetAsync(new QueryRockstarsWithReferences              {                  Age = 27'                  Fields = "Id'FirstName'Age'Albums"              });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_Query_RockstarReference_without_References,The following statement contains a magic number: var response = await client.GetAsync(new QueryCustomRockstarsReferences              {                  Age = 27              });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_Query_RockstarReference_without_References,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Does_populate_Total,The following statement contains a magic number: response = await client.GetAsync(new QueryRockstars { Age = 27' Include = "Count(*)' Min(Age)' Max(Age)' Sum(Id)" });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Does_populate_Total,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(Rockstars.Count(x => x.Age == 27)));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_Include_Aggregates_in_AutoQuery,The following statement contains a magic number: response = await client.GetAsync(new QueryRockstars { Age = 27' Include = "Count(*)' Min(Age)' Max(Age)' Sum(Id)' Avg(Age)"' OrderBy = "Id" });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_Include_Aggregates_in_AutoQuery,The following statement contains a magic number: var rockstars27 = Rockstars.Where(x => x.Age == 27).ToList();
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Does_return_MaxLimit_results,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(100));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Does_return_MaxLimit_results,The following statement contains a magic number: response = await client.GetAsync(new QueryPagingTest { Skip = 200' Include = "Total" });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Does_return_MaxLimit_results,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(PagingTests.Skip(200).Count()));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Does_return_MaxLimit_results,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(100));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: response = await client.GetAsync(new QueryRockstarAlbums { RockstarId = 3' Include = "Total" });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(5));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(5));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: response = await client.GetAsync(new QueryRockstarAlbums { RockstarId = 3' Id = 3' Include = "Total" });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: response = await client.GetAsync(new QueryRockstarAlbums { RockstarId = 3' Id = 3' Include = "Total" });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: response = await client.GetAsync(new QueryRockstarAlbums              {                  RockstarId = 3'                  IdBetween = new[] { 2' 3 }'                  Include = "Total"              });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: response = await client.GetAsync(new QueryRockstarAlbums              {                  RockstarId = 3'                  IdBetween = new[] { 2' 3 }'                  Include = "Total"              });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: response = await client.GetAsync(new QueryRockstarAlbums              {                  RockstarId = 3'                  IdBetween = new[] { 2' 3 }'                  Include = "Total"              });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(2));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: response = await client.GetAsync(new QueryRockstarAlbums              {                  RockstarId = 3'                  IdBetween = new[] { 2' 3 }'                  Name = "Nevermind"'                  Include = "Total"              });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: response = await client.GetAsync(new QueryRockstarAlbums              {                  RockstarId = 3'                  IdBetween = new[] { 2' 3 }'                  Name = "Nevermind"'                  Include = "Total"              });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: response = await client.GetAsync(new QueryRockstarAlbums              {                  RockstarId = 3'                  IdBetween = new[] { 2' 3 }'                  Name = "Nevermind"'                  Include = "Total"              });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: Assert.That(response.Results[0].Id' Is.EqualTo(3));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: response = await client.GetAsync(new QueryRockstarAlbums { RockstarId = 3' Genre = "Grunge"' Include = "Total" });
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(4));
Magic Number,ServiceStack.Extensions.Tests,GrpcAutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcAutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(4));
Magic Number,ServiceStack.Extensions.Tests,GrpcServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcServerEventsTests.cs,Can_subscribe_to_ServerEvents,The following statement contains a magic number: ++i == 2
Magic Number,ServiceStack.Extensions.Tests,GrpcServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcServerEventsTests.cs,Can_subscribe_to_ServerEvents,The following statement contains a magic number: Assert.That(i' Is.EqualTo(2));
Magic Number,ServiceStack.Extensions.Tests,GrpcServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcServerEventsTests.cs,Does_receive_all_messages,The following statement contains a magic number: Task.Factory.StartNew(async () => {                  await Task.Delay(500);                  await client2.PostAsync(new PostChatToChannel {                      Channel = "send"'                      From = nameof(client2)'                      Message = "Hello from client2"'                      Selector = "cmd.chat"'                  });              });
Magic Number,ServiceStack.Extensions.Tests,GrpcServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcServerEventsTests.cs,Does_receive_all_messages,The following statement contains a magic number: Assert.That(responses[2].Selector' Is.EqualTo("cmd.chat"));
Magic Number,ServiceStack.Extensions.Tests,GrpcServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcServerEventsTests.cs,Does_receive_all_messages,The following statement contains a magic number: var obj = (Dictionary<string' object>) JSON.parse(responses[2].Json);
Magic Number,ServiceStack.Extensions.Tests,TriggerValidatorsValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,TriggerValidatorsValidator,The following statement contains a magic number: RuleFor(x => x.ExclusiveBetween).ExclusiveBetween(10' 20);
Magic Number,ServiceStack.Extensions.Tests,TriggerValidatorsValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,TriggerValidatorsValidator,The following statement contains a magic number: RuleFor(x => x.ExclusiveBetween).ExclusiveBetween(10' 20);
Magic Number,ServiceStack.Extensions.Tests,TriggerValidatorsValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,TriggerValidatorsValidator,The following statement contains a magic number: RuleFor(x => x.GreaterThanOrEqual).GreaterThanOrEqualTo(10);
Magic Number,ServiceStack.Extensions.Tests,TriggerValidatorsValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,TriggerValidatorsValidator,The following statement contains a magic number: RuleFor(x => x.GreaterThan).GreaterThan(10);
Magic Number,ServiceStack.Extensions.Tests,TriggerValidatorsValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,TriggerValidatorsValidator,The following statement contains a magic number: RuleFor(x => x.InclusiveBetween).InclusiveBetween(10' 20);
Magic Number,ServiceStack.Extensions.Tests,TriggerValidatorsValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,TriggerValidatorsValidator,The following statement contains a magic number: RuleFor(x => x.InclusiveBetween).InclusiveBetween(10' 20);
Magic Number,ServiceStack.Extensions.Tests,TriggerValidatorsValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,TriggerValidatorsValidator,The following statement contains a magic number: RuleFor(x => x.Length).Length(10);
Magic Number,ServiceStack.Extensions.Tests,TriggerValidatorsValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,TriggerValidatorsValidator,The following statement contains a magic number: RuleFor(x => x.LessThanOrEqual).LessThanOrEqualTo(10);
Magic Number,ServiceStack.Extensions.Tests,TriggerValidatorsValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,TriggerValidatorsValidator,The following statement contains a magic number: RuleFor(x => x.LessThan).LessThan(10);
Magic Number,ServiceStack.Extensions.Tests,GrpcTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,Can_call_MultiplyRequest_Grpc_Service_ICalculator,The following statement contains a magic number: var result = await calculator.MultiplyAsync(new MultiplyRequest { X = 12' Y = 4 });
Magic Number,ServiceStack.Extensions.Tests,GrpcTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,Can_call_MultiplyRequest_Grpc_Service_ICalculator,The following statement contains a magic number: var result = await calculator.MultiplyAsync(new MultiplyRequest { X = 12' Y = 4 });
Magic Number,ServiceStack.Extensions.Tests,GrpcTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,Can_call_MultiplyRequest_Grpc_Service_ICalculator,The following statement contains a magic number: Assert.That(result.Result' Is.EqualTo(48));
Magic Number,ServiceStack.Extensions.Tests,GrpcTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,Can_call_Multiply_Grpc_Service_GrpcChannel,The following statement contains a magic number: var response = await http.CreateCallInvoker().Execute<Multiply' MultiplyResponse>(new Multiply { X = 12' Y = 4 }' "GrpcServices"'                  GrpcUtils.GetServiceName(HttpMethods.Post' nameof(Multiply)));
Magic Number,ServiceStack.Extensions.Tests,GrpcTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,Can_call_Multiply_Grpc_Service_GrpcChannel,The following statement contains a magic number: var response = await http.CreateCallInvoker().Execute<Multiply' MultiplyResponse>(new Multiply { X = 12' Y = 4 }' "GrpcServices"'                  GrpcUtils.GetServiceName(HttpMethods.Post' nameof(Multiply)));
Magic Number,ServiceStack.Extensions.Tests,GrpcTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,Can_call_Multiply_Grpc_Service_GrpcChannel,The following statement contains a magic number: Assert.That(response.Result' Is.EqualTo(48));
Magic Number,ServiceStack.Extensions.Tests,GrpcTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,Can_call_Multiply_Grpc_Service_GrpcServiceClient,The following statement contains a magic number: var response = await client.PostAsync(new Multiply { X = 12' Y = 4 });
Magic Number,ServiceStack.Extensions.Tests,GrpcTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,Can_call_Multiply_Grpc_Service_GrpcServiceClient,The following statement contains a magic number: var response = await client.PostAsync(new Multiply { X = 12' Y = 4 });
Magic Number,ServiceStack.Extensions.Tests,GrpcTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,Can_call_Multiply_Grpc_Service_GrpcServiceClient,The following statement contains a magic number: Assert.That(response.Result' Is.EqualTo(48));
Magic Number,ServiceStack.Extensions.Tests,GrpcTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,Can_call_Multiply_Grpc_Service_GrpcServiceClient_sync,The following statement contains a magic number: var response = client.Post(new Multiply { X = 12' Y = 4 });
Magic Number,ServiceStack.Extensions.Tests,GrpcTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,Can_call_Multiply_Grpc_Service_GrpcServiceClient_sync,The following statement contains a magic number: var response = client.Post(new Multiply { X = 12' Y = 4 });
Magic Number,ServiceStack.Extensions.Tests,GrpcTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,Can_call_Multiply_Grpc_Service_GrpcServiceClient_sync,The following statement contains a magic number: Assert.That(response.Result' Is.EqualTo(48));
Magic Number,ServiceStack.Extensions.Tests,GrpcTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,Can_call_Incr_ReturnVoid_GrpcServiceClient,The following statement contains a magic number: await client.PublishAsync(new Incr { Amount = 2 });
Magic Number,ServiceStack.Extensions.Tests,GrpcTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,Can_call_Incr_ReturnVoid_GrpcServiceClient,The following statement contains a magic number: Assert.That(Incr.Counter' Is.EqualTo(3));
Magic Number,ServiceStack.Extensions.Tests,GrpcTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,Can_call_Incr_Batch_ReturnVoid,The following statement contains a magic number: var requests = new[] {                  new Incr {Amount = 1}'                  new Incr {Amount = 2}'                  new Incr {Amount = 3}'              };
Magic Number,ServiceStack.Extensions.Tests,GrpcTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,Can_call_Incr_Batch_ReturnVoid,The following statement contains a magic number: var requests = new[] {                  new Incr {Amount = 1}'                  new Incr {Amount = 2}'                  new Incr {Amount = 3}'              };
Magic Number,ServiceStack.Extensions.Tests,GrpcTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,Can_call_Incr_Batch_ReturnVoid,The following statement contains a magic number: Assert.That(Incr.Counter' Is.EqualTo(1 + 2 + 3));
Magic Number,ServiceStack.Extensions.Tests,GrpcTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,Can_call_Incr_Batch_ReturnVoid,The following statement contains a magic number: Assert.That(Incr.Counter' Is.EqualTo(1 + 2 + 3));
Magic Number,ServiceStack.Extensions.Tests,GrpcTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,Can_call_Incr_Batch_ReturnVoid_sync,The following statement contains a magic number: var requests = new[] {                  new Incr {Amount = 1}'                  new Incr {Amount = 2}'                  new Incr {Amount = 3}'              };
Magic Number,ServiceStack.Extensions.Tests,GrpcTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,Can_call_Incr_Batch_ReturnVoid_sync,The following statement contains a magic number: var requests = new[] {                  new Incr {Amount = 1}'                  new Incr {Amount = 2}'                  new Incr {Amount = 3}'              };
Magic Number,ServiceStack.Extensions.Tests,GrpcTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,Can_call_Incr_Batch_ReturnVoid_sync,The following statement contains a magic number: Assert.That(Incr.Counter' Is.EqualTo(1 + 2 + 3));
Magic Number,ServiceStack.Extensions.Tests,GrpcTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,Can_call_Incr_Batch_ReturnVoid_sync,The following statement contains a magic number: Assert.That(Incr.Counter' Is.EqualTo(1 + 2 + 3));
Magic Number,ServiceStack.Extensions.Tests,GrpcTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,Triggering_all_validators_returns_right_ErrorCode,The following statement contains a magic number: var request = new TriggerValidators              {                  CreditCard = "NotCreditCard"'                  Email = "NotEmail"'                  Empty = "NotEmpty"'                  Equal = "NotEqual"'                  ExclusiveBetween = 1'                  GreaterThan = 1'                  GreaterThanOrEqual = 1'                  InclusiveBetween = 1'                  Length = "Length"'                  LessThan = 20'                  LessThanOrEqual = 20'                  NotEmpty = ""'                  NotEqual = "NotEqual"'                  Null = "NotNull"'                  RegularExpression = "FOO"'                  ScalePrecision = 123.456m              };
Magic Number,ServiceStack.Extensions.Tests,GrpcTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,Triggering_all_validators_returns_right_ErrorCode,The following statement contains a magic number: var request = new TriggerValidators              {                  CreditCard = "NotCreditCard"'                  Email = "NotEmail"'                  Empty = "NotEmpty"'                  Equal = "NotEqual"'                  ExclusiveBetween = 1'                  GreaterThan = 1'                  GreaterThanOrEqual = 1'                  InclusiveBetween = 1'                  Length = "Length"'                  LessThan = 20'                  LessThanOrEqual = 20'                  NotEmpty = ""'                  NotEqual = "NotEqual"'                  Null = "NotNull"'                  RegularExpression = "FOO"'                  ScalePrecision = 123.456m              };
Magic Number,ServiceStack.Extensions.Tests,GrpcTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,Triggering_all_validators_returns_right_ErrorCode,The following statement contains a magic number: var request = new TriggerValidators              {                  CreditCard = "NotCreditCard"'                  Email = "NotEmail"'                  Empty = "NotEmpty"'                  Equal = "NotEqual"'                  ExclusiveBetween = 1'                  GreaterThan = 1'                  GreaterThanOrEqual = 1'                  InclusiveBetween = 1'                  Length = "Length"'                  LessThan = 20'                  LessThanOrEqual = 20'                  NotEmpty = ""'                  NotEqual = "NotEqual"'                  Null = "NotNull"'                  RegularExpression = "FOO"'                  ScalePrecision = 123.456m              };
Magic Number,ServiceStack.Extensions.Tests,GrpcTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,AssertFiles,The following statement contains a magic number: Assert.That(responses.Count' Is.EqualTo(3));
Magic Number,ServiceStack.Extensions.Tests,GrpcTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,AssertFiles,The following statement contains a magic number: Assert.That(responses[2].Name' Is.EqualTo("hot-fileloader.js"));
Magic Number,ServiceStack.Extensions.Tests,GrpcTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,Can_download_multiple_files,The following statement contains a magic number: Assert.That(responses[2].ResponseStatus.ErrorCode' Is.EqualTo(nameof(HttpStatusCode.NotFound)));
Magic Number,ServiceStack.Extensions.Tests,GrpcTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTests.cs,Can_stream_multiple_files,The following statement contains a magic number: Assert.That(files[2].ResponseStatus.ErrorCode' Is.EqualTo(nameof(HttpStatusCode.NotFound)));
Magic Number,ServiceStack.Extensions.Tests,GrpcTodoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTodoTests.cs,Can_CreateTodo,The following statement contains a magic number: await client.SendAllAsync(new [] {                  new CreateTodo { Title = "B"' Order = 2 }'                   new CreateTodo { Title = "C"' Order = 3 }'               });
Magic Number,ServiceStack.Extensions.Tests,GrpcTodoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\GrpcTodoTests.cs,Can_CreateTodo,The following statement contains a magic number: await client.SendAllAsync(new [] {                  new CreateTodo { Title = "B"' Order = 2 }'                   new CreateTodo { Title = "C"' Order = 3 }'               });
Magic Number,ServiceStack.Extensions.Tests,ProtobufTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\ProtobufTests.cs,Can_Serialize_QueryRockstars_TypeModel,The following statement contains a magic number: model[typeof(QueryBase)].AddSubType(101' typeof(QueryDb<Rockstar>));
Magic Number,ServiceStack.Extensions.Tests,ProtobufTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\ProtobufTests.cs,Can_Serialize_QueryRockstars_TypeModel,The following statement contains a magic number: model[typeof(QueryDb<Rockstar>)].AddSubType(101' typeof(QueryRockstars));
Magic Number,ServiceStack.Extensions.Tests,ProtobufTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\ProtobufTests.cs,Can_Serialize_QueryResponse_NamedRockstar,The following statement contains a magic number: var dto = new QueryResponse<NamedRockstar> {                  Total = 1'                  Results = new List<NamedRockstar> {                      new NamedRockstar {                          Id = 1'                          FirstName = "Microsoft"'                          LastName = "SQL Server"'                          Age = 27'                          DateOfBirth = new DateTime(1989'1'1)'                          LivingStatus = LivingStatus.Alive'                      }                  }              };
Magic Number,ServiceStack.Extensions.Tests,ProtobufTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.Extensions.Tests\ProtobufTests.cs,Can_Serialize_QueryResponse_NamedRockstar,The following statement contains a magic number: var dto = new QueryResponse<NamedRockstar> {                  Total = 1'                  Results = new List<NamedRockstar> {                      new NamedRockstar {                          Id = 1'                          FirstName = "Microsoft"'                          LastName = "SQL Server"'                          Age = 27'                          DateOfBirth = new DateTime(1989'1'1)'                          LivingStatus = LivingStatus.Alive'                      }                  }              };
