Implementation smell,Namespace,Class,File,Method,Description
Long Method,ServiceStack.Api.Swagger,SwaggerApiService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Api.Swagger\SwaggerApiService.cs,ParseModel,The method has 114 lines of code.
Complex Method,ServiceStack.Api.Swagger,SwaggerApiService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Api.Swagger\SwaggerApiService.cs,ParseModel,Cyclomatic complexity of the method is 19
Complex Method,ServiceStack.Api.Swagger,SwaggerApiService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Api.Swagger\SwaggerApiService.cs,ParseParameters,Cyclomatic complexity of the method is 11
Long Statement,ServiceStack.Api.Swagger.Support,OrderedDictionary<TKey;TValue>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Api.Swagger\Support\OrderedDictionary.cs,RemoveAt,The length of the statement  "                throw new ArgumentOutOfRangeException("index"' "'index' must be non-negative and less than the size of the collection"); " is 120.
Long Statement,ServiceStack.Api.Swagger,SwaggerFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Api.Swagger\SwaggerFeature.cs,Register,The length of the statement  "                            .Replace("<a id=\"logo\" href=\"http://swagger.io\">swagger</a>"' $"<a id=\"logo\" href=\"{logoHref}\">{HostContext.ServiceName}</a>"); " is 135.
Long Statement,ServiceStack.Api.Swagger,SwaggerResourcesService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Api.Swagger\SwaggerResourcesService.cs,CreateRestPaths,The length of the statement  "                paths.AddRange(map[key].Where(x => x.RequestType == operationType).Select(t => resourcePathCleanerRegex.Match(t.Path).Value)); " is 126.
Complex Conditional,ServiceStack.Api.Swagger,SwaggerApiService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Api.Swagger\SwaggerApiService.cs,ParseParameters,The conditional expression  "(member.Verb == null || string.Compare(member.Verb' verb' StringComparison.OrdinalIgnoreCase) == 0)                              && (member.Route == null || (route ?? "").StartsWith(member.Route))                              && !string.Equals(member.ParameterType' "model")                              && methodOperationParameters.All(x => x.Name != (member.Name ?? key))"  is complex.
