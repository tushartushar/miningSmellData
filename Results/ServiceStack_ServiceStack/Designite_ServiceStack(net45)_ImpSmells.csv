Implementation smell,Namespace,Class,File,Method,Description
Long Method,ServiceStack,EncryptedMessagesFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\EncryptedMessagesFeature.cs,Register,The method has 102 lines of code.
Long Method,ServiceStack,ServiceStackHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Formats\SoapFormat.cs,OnAfterInit,The method has 100 lines of code.
Long Method,ServiceStack,HostConfig,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HostConfig.cs,NewInstance,The method has 150 lines of code.
Long Method,ServiceStack,HttpResponseExtensionsInternal,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpResponseExtensionsInternal.cs,WriteToResponse,The method has 188 lines of code.
Long Method,ServiceStack,LispReplTcpServer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\LispReplTcpServer.cs,HandleConnection,The method has 123 lines of code.
Long Method,ServiceStack,PostmanService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\PostmanFeature.cs,GetRequests,The method has 116 lines of code.
Long Method,ServiceStack,ServerEventsHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,ProcessRequestAsync,The method has 112 lines of code.
Long Method,ServiceStack,SharpPagesFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\SharpPagesFeature.cs,GetRoutingPage,The method has 106 lines of code.
Long Method,ServiceStack.Auth,AuthenticateService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\AuthenticateService.cs,Post,The method has 126 lines of code.
Long Method,ServiceStack.Auth,AuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\AuthProvider.cs,OnAuthenticated,The method has 105 lines of code.
Long Method,ServiceStack.Auth,UserAuthExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\UserAuth.cs,PopulateFromMap,The method has 179 lines of code.
Long Method,ServiceStack.Host.Handlers,StaticFileHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\Handlers\StaticFileHandler.cs,ProcessRequestAsync,The method has 166 lines of code.
Long Method,ServiceStack.Html,HtmlCompressor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.html.cs,preserveBlocks,The method has 251 lines of code.
Long Method,ServiceStack.Html,HtmlCompressor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.html.cs,returnBlocks,The method has 196 lines of code.
Long Method,ServiceStack.Html,JSMinifier,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.js.cs,jsmin,The method has 107 lines of code.
Long Method,ServiceStack.Html,JSMinifier,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.js.cs,action,The method has 103 lines of code.
Long Method,MarkdownDeep,Block,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\Block.cs,Render,The method has 176 lines of code.
Long Method,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,ScanLines,The method has 263 lines of code.
Long Method,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,EvaluateLine,The method has 272 lines of code.
Long Method,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,ScanHtml,The method has 170 lines of code.
Long Method,MarkdownDeep,LinkDefinition,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\LinkDefinition.cs,ParseLinkTarget,The method has 122 lines of code.
Long Method,MarkdownDeep,Markdown,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\MardownDeep.cs,Transform,The method has 114 lines of code.
Long Method,MarkdownDeep,SpanFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\SpanFormatter.cs,Tokenize,The method has 184 lines of code.
Long Method,MarkdownDeep,SpanFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\SpanFormatter.cs,ProcessLinkOrImageOrFootnote,The method has 122 lines of code.
Long Method,ServiceStack.Messaging,MessageHandler<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Messaging\MessageHandler.cs,ProcessMessage,The method has 137 lines of code.
Long Method,ServiceStack.NativeTypes.CSharp,CSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\CSharp\CSharpGenerator.cs,GetCode,The method has 142 lines of code.
Long Method,ServiceStack.NativeTypes.CSharp,CSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\CSharp\CSharpGenerator.cs,AppendType,The method has 112 lines of code.
Long Method,ServiceStack.NativeTypes.Dart,DartGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Dart\DartGenerator.cs,GetCode,The method has 151 lines of code.
Long Method,ServiceStack.NativeTypes.Dart,DartGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Dart\DartGenerator.cs,AppendType,The method has 311 lines of code.
Long Method,ServiceStack.NativeTypes.FSharp,FSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\FSharp\FSharpGenerator.cs,GetCode,The method has 127 lines of code.
Long Method,ServiceStack.NativeTypes.Java,JavaGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Java\JavaGenerator.cs,GetCode,The method has 146 lines of code.
Long Method,ServiceStack.NativeTypes.Java,JavaGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Java\JavaGenerator.cs,AppendType,The method has 108 lines of code.
Long Method,ServiceStack.NativeTypes.Kotlin,KotlinGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Kotlin\KotlinGenerator.cs,GetCode,The method has 139 lines of code.
Long Method,ServiceStack.NativeTypes.Kotlin,KotlinGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Kotlin\KotlinGenerator.cs,AppendType,The method has 100 lines of code.
Long Method,ServiceStack.NativeTypes,MetadataTypesGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\NativeTypesMetadata.cs,GetMetadataTypes,The method has 162 lines of code.
Long Method,ServiceStack.NativeTypes,MetadataTypesGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\NativeTypesMetadata.cs,ToType,The method has 118 lines of code.
Long Method,ServiceStack.NativeTypes.Swift,SwiftGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Swift\SwiftGenerator.cs,GetCode,The method has 128 lines of code.
Long Method,ServiceStack.NativeTypes.Swift,SwiftGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Swift\SwiftGenerator.cs,AppendType,The method has 128 lines of code.
Long Method,ServiceStack.NativeTypes.TypeScript,TypeScriptGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\TypeScript\TypeScriptGenerator.cs,GetCode,The method has 137 lines of code.
Long Method,ServiceStack.NativeTypes.TypeScript,TypeScriptGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\TypeScript\TypeScriptGenerator.cs,AppendType,The method has 167 lines of code.
Long Method,ServiceStack.NativeTypes.VbNet,VbNetGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\VbNet\VbNetGenerator.cs,GetCode,The method has 141 lines of code.
Long Method,ServiceStack.NativeTypes.VbNet,VbNetGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\VbNet\VbNetGenerator.cs,AppendType,The method has 112 lines of code.
Complex Method,ServiceStack,AuthFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\AuthFeature.cs,Register,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack,CompareTypeUtils,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\AutoQueryDataConditions.cs,CompareTo,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack,AutoQueryData,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\AutoQueryDataFeature.cs,ResponseFilter,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack,QueryDataSource<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\AutoQueryDataFeature.cs,SelectAggregate,Cyclomatic complexity of the method is 14
Complex Method,ServiceStack,TypedQueryData<QueryModel;From>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\AutoQueryDataFeature.cs,AppendTypedQueries,Cyclomatic complexity of the method is 10
Complex Method,ServiceStack,TypedQueryData<QueryModel;From>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\AutoQueryDataFeature.cs,GetQueryMatch,Cyclomatic complexity of the method is 10
Complex Method,ServiceStack,AutoQueryMetadataService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\AutoQueryMetadataFeature.cs,Any,Cyclomatic complexity of the method is 10
Complex Method,ServiceStack,BootstrapScripts,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\BootstrapScripts.cs,ToNavOptions,Cyclomatic complexity of the method is 14
Complex Method,ServiceStack,CacheClientExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\CacheClientExtensions.cs,ResolveFromCache,Cyclomatic complexity of the method is 12
Complex Method,ServiceStack,CacheResponseAttribute,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\CacheResponseAttribute.cs,ExecuteAsync,Cyclomatic complexity of the method is 16
Complex Method,ServiceStack,CacheResponseExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\CacheResponseAttribute.cs,HandleValidCache,Cyclomatic complexity of the method is 11
Complex Method,ServiceStack,CompressResponseAttribute,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\CompressResponseAttribute.cs,ExecuteAsync,Cyclomatic complexity of the method is 15
Complex Method,ServiceStack,CorsFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\CorsFeature.cs,Register,Cyclomatic complexity of the method is 10
Complex Method,ServiceStack,ServiceStackHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Formats\SoapFormat.cs,Init,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack,ServiceStackHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Formats\SoapFormat.cs,OnAfterInit,Cyclomatic complexity of the method is 28
Complex Method,ServiceStack,ServiceStackHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Formats\SoapFormat.cs,ApplyRequestFiltersSingleAsync,Cyclomatic complexity of the method is 14
Complex Method,ServiceStack,ServiceStackHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Formats\SoapFormat.cs,ApplyResponseFiltersSingleAsync,Cyclomatic complexity of the method is 17
Complex Method,ServiceStack,ServiceStackHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Formats\SoapFormat.cs,GetDbConnection,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack,HotReloadFilesService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HotReloadFeature.cs,Any,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack,HttpCacheFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpCacheFeature.cs,HandleCacheResponses,Cyclomatic complexity of the method is 15
Complex Method,ServiceStack,HttpCacheFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpCacheFeature.cs,CacheAndWriteResponse,Cyclomatic complexity of the method is 20
Complex Method,ServiceStack,HttpCacheFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpCacheFeature.cs,BuildCacheControlHeader,Cyclomatic complexity of the method is 12
Complex Method,ServiceStack,HttpHandlerFactory,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpHandlerFactory.cs,Init,Cyclomatic complexity of the method is 12
Complex Method,ServiceStack,HttpHandlerFactory,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpHandlerFactory.cs,GetHandler,Cyclomatic complexity of the method is 10
Complex Method,ServiceStack,HttpHandlerFactory,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpHandlerFactory.cs,GetHandler,Cyclomatic complexity of the method is 9
Complex Method,ServiceStack,HttpHandlerFactory,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpHandlerFactory.cs,ShouldAllow,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack,HttpHandlerFactory,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpHandlerFactory.cs,GetHandlerForPathInfo,Cyclomatic complexity of the method is 12
Complex Method,ServiceStack,HttpRequestExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpRequestExtensions.cs,ToStatusCode,Cyclomatic complexity of the method is 13
Complex Method,ServiceStack,HttpRequestExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpRequestExtensions.cs,ResolvePathInfoFromMappedPath,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack,HttpRequestExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpRequestExtensions.cs,GetQueryStringContentType,Cyclomatic complexity of the method is 16
Complex Method,ServiceStack,HttpRequestExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpRequestExtensions.cs,GetResponseContentType,Cyclomatic complexity of the method is 18
Complex Method,ServiceStack,HttpRequestExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpRequestExtensions.cs,GetRequestValue,Cyclomatic complexity of the method is 18
Complex Method,ServiceStack,HttpResponseExtensionsInternal,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpResponseExtensionsInternal.cs,WriteToOutputStreamAsync,Cyclomatic complexity of the method is 12
Complex Method,ServiceStack,HttpResponseExtensionsInternal,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpResponseExtensionsInternal.cs,WriteToResponse,Cyclomatic complexity of the method is 37
Complex Method,ServiceStack,HttpResult,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpResult.cs,WriteToAsync,Cyclomatic complexity of the method is 12
Complex Method,ServiceStack,InProcessServiceGateway,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\InProcessServiceGateway.cs,SetVerb,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack,InProcessServiceGateway,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\InProcessServiceGateway.cs,ExecSync,Cyclomatic complexity of the method is 12
Complex Method,ServiceStack,InProcessServiceGateway,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\InProcessServiceGateway.cs,ExecAsync,Cyclomatic complexity of the method is 9
Complex Method,ServiceStack,LispReplTcpServer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\LispReplTcpServer.cs,BeforePluginsLoaded,Cyclomatic complexity of the method is 11
Complex Method,ServiceStack,LispReplTcpServer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\LispReplTcpServer.cs,HandleConnection,Cyclomatic complexity of the method is 15
Complex Method,ServiceStack,MetadataFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\MetadataFeature.cs,GetHandlerForPathParts,Cyclomatic complexity of the method is 14
Complex Method,ServiceStack,PostmanService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\PostmanFeature.cs,GetRequests,Cyclomatic complexity of the method is 11
Complex Method,ServiceStack,PredefinedRoutesFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\PredefinedRoutesFeature.cs,GetHandlerForPathParts,Cyclomatic complexity of the method is 16
Complex Method,ServiceStack,ServerEventsHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,ProcessRequestAsync,Cyclomatic complexity of the method is 9
Complex Method,ServiceStack,MemoryServerEvents,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,DoAsyncTasks,Cyclomatic complexity of the method is 13
Complex Method,ServiceStack,MemoryServerEvents,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,Notify,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack,MemoryServerEvents,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,NotifyAsync,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack,MemoryServerEvents,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,SubscribeToChannels,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack,MemoryServerEvents,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,UnsubscribeFromChannels,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack,MemoryServerEvents,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,RegisterAsync,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack,ServiceExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServiceExtensions.cs,GetSession,Cyclomatic complexity of the method is 11
Complex Method,ServiceStack,ServiceStackScripts,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServiceStackScripts.cs,sendToAutoQuery,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack,ServiceStackScriptUtils,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServiceStackScripts.cs,GetUserAttributes,Cyclomatic complexity of the method is 16
Complex Method,ServiceStack,SharpPagesFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\SharpPagesFeature.cs,Register,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack,SharpPagesFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\SharpPagesFeature.cs,RequestHandler,Cyclomatic complexity of the method is 10
Complex Method,ServiceStack,SharpPagesFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\SharpPagesFeature.cs,GetRoutingPage,Cyclomatic complexity of the method is 16
Complex Method,ServiceStack,SharpPagesFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\SharpPagesFeature.cs,ProcessRequestAsync,Cyclomatic complexity of the method is 13
Complex Method,ServiceStack,HotReloadPageService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\SharpPagesFeature.cs,Any,Cyclomatic complexity of the method is 10
Complex Method,ServiceStack,SharpPageHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\SharpPagesFeature.cs,ProcessRequestAsync,Cyclomatic complexity of the method is 13
Complex Method,ServiceStack,SitemapIndexHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\SitemapFeature.cs,ProcessRequestAsync,Cyclomatic complexity of the method is 9
Complex Method,ServiceStack,SitemapUrlSetHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\SitemapFeature.cs,ProcessRequestAsync,Cyclomatic complexity of the method is 11
Complex Method,ServiceStack,Svg,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\SvgFeature.cs,Load,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack.Admin,RequestLogsService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Admin\RequestLogsService.cs,Any,Cyclomatic complexity of the method is 17
Complex Method,ServiceStack.Auth,AuthenticateService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\AuthenticateService.cs,Post,Cyclomatic complexity of the method is 20
Complex Method,ServiceStack.Auth,AuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\AuthProvider.cs,OnAuthenticated,Cyclomatic complexity of the method is 17
Complex Method,ServiceStack.Auth,AuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\AuthProvider.cs,CreateOrMergeAuthSession,Cyclomatic complexity of the method is 10
Complex Method,ServiceStack.Auth,AuthExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\AuthProvider.cs,VerifyPassword,Cyclomatic complexity of the method is 14
Complex Method,ServiceStack.Auth,CredentialsAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\CredentialsAuthProvider.cs,OnAuthenticated,Cyclomatic complexity of the method is 10
Complex Method,ServiceStack.Auth,DigestAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\DigestAuthProvider.cs,OnAuthenticated,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack.Auth,AuthRepositoryUtils,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\InMemoryAuthRepository.cs,SortAndPage,Cyclomatic complexity of the method is 15
Complex Method,ServiceStack.Auth,JwtAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProvider.cs,CreateJwtPayload,Cyclomatic complexity of the method is 10
Complex Method,ServiceStack.Auth,GetAccessTokenService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProvider.cs,Any,Cyclomatic complexity of the method is 12
Complex Method,ServiceStack.Auth,JwtAuthProviderReader,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProviderReader.cs,Init,Cyclomatic complexity of the method is 13
Complex Method,ServiceStack.Auth,JwtAuthProviderReader,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProviderReader.cs,Authenticate,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack.Auth,JwtAuthProviderReader,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProviderReader.cs,PreAuthenticate,Cyclomatic complexity of the method is 13
Complex Method,ServiceStack.Auth,JwtAuthProviderReader,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProviderReader.cs,GetInvalidJwtPayloadError,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack.Auth,JwtAuthProviderReader,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProviderReader.cs,VerifyPayload,Cyclomatic complexity of the method is 9
Complex Method,ServiceStack.Auth,OAuth2Provider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\OAuth2Provider.cs,Authenticate,Cyclomatic complexity of the method is 12
Complex Method,ServiceStack.Auth,PasswordHasher,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,VerifyPassword,Cyclomatic complexity of the method is 9
Complex Method,ServiceStack.Auth,RedisAuthRepository<TUserAuth;TUserAuthDetails>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\RedisAuthRepository.cs,GetUserAuth,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack.Auth,RegisterService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\RegisterService.cs,Post,Cyclomatic complexity of the method is 16
Complex Method,ServiceStack.Auth,TwitterAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\TwitterAuthProvider.cs,Authenticate,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack.Auth,TwitterAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\TwitterAuthProvider.cs,LoadUserAuthInfo,Cyclomatic complexity of the method is 11
Complex Method,ServiceStack.Auth,UserAuthExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\UserAuth.cs,PopulateMissing,Cyclomatic complexity of the method is 14
Complex Method,ServiceStack.Auth,UserAuthExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\UserAuth.cs,PopulateMissingExtended,Cyclomatic complexity of the method is 26
Complex Method,ServiceStack.Auth,UserAuthExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\UserAuth.cs,PopulateFromMap,Cyclomatic complexity of the method is 53
Complex Method,ServiceStack.Auth,UserAuthRepositoryExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\UserAuthRepositoryExtensions.cs,AssignRoles,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack.Configuration,ConfigUtils,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Configuration\ConfigUtils.cs,GetAppSettingsMap,Cyclomatic complexity of the method is 10
Complex Method,Funq,Container,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ContainerNetCoreExtensions.cs,GetEntry,Cyclomatic complexity of the method is 11
Complex Method,ServiceStack.FluentValidation.Internal,CollectionPropertyRule<TProperty>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\CollectionPropertyRule.cs,InvokePropertyValidator,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack.FluentValidation.Internal,PropertyRule,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\PropertyRule.cs,Validate,Cyclomatic complexity of the method is 14
Complex Method,ServiceStack.FluentValidation.Internal,PropertyRule,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\PropertyRule.cs,ValidateAsync,Cyclomatic complexity of the method is 13
Complex Method,ServiceStack.FluentValidation.Internal,RulesetValidatorSelector,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\RulesetValidatorSelector.cs,CanExecute,Cyclomatic complexity of the method is 10
Complex Method,ServiceStack.FluentValidation.Validators,EnumValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Validators\EnumValidator.cs,IsFlagsEnumDefined,Cyclomatic complexity of the method is 9
Complex Method,ServiceStack.Formats,HtmlFormat,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Formats\HtmlFormat.cs,SerializeToStreamAsync,Cyclomatic complexity of the method is 10
Complex Method,ServiceStack.Host,ContentTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\ContentTypes.cs,SerializeUnknownContentType,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack.Host,HttpRequestAuthentication,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\HttpRequestAuthentication.cs,GetDigestAuth,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack.Host,InMemoryRollingRequestLogger,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\InMemoryRollingRequestLogger.cs,CreateEntry,Cyclomatic complexity of the method is 12
Complex Method,ServiceStack.Host,RestPath,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\RestPath.cs,RestPath,Cyclomatic complexity of the method is 11
Complex Method,ServiceStack.Host,RestPath,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\RestPath.cs,IsMatch,Cyclomatic complexity of the method is 12
Complex Method,ServiceStack.Host,RestPath,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\RestPath.cs,CreateRequest,Cyclomatic complexity of the method is 14
Complex Method,ServiceStack.Host,ServiceController,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\ServiceController.cs,RegisterService,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack.Host,ServiceController,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\ServiceController.cs,GetRestPathForRequest,Cyclomatic complexity of the method is 17
Complex Method,ServiceStack.Host,ServiceController,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\ServiceController.cs,GatewayExecuteAsync,Cyclomatic complexity of the method is 9
Complex Method,ServiceStack.Host,ServiceExec<TService>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\ServiceExec.cs,Reset,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack.Host,ServiceMetadata,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\ServiceMetadata.cs,AddReferencedTypes,Cyclomatic complexity of the method is 10
Complex Method,ServiceStack.Host,ServiceMetadata,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\ServiceMetadata.cs,AddReferencedTypes,Cyclomatic complexity of the method is 14
Complex Method,ServiceStack.Host,ServiceRunner<TRequest>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\ServiceRunner.cs,ExecuteAsync,Cyclomatic complexity of the method is 17
Complex Method,ServiceStack.Host.Handlers,SoapHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\Handlers\SoapHandler.cs,ExecuteMessage,Cyclomatic complexity of the method is 14
Complex Method,ServiceStack.Host.HttpListener,ListenerRequest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\HttpListener\ListenerRequest.cs,LoadWwwForm,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack.Host.HttpListener,ReadSubStream,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\HttpListener\ListenerRequest.Mono.cs,Read,Cyclomatic complexity of the method is 9
Complex Method,ServiceStack.Host.HttpListener,HttpMultipart,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\HttpListener\ListenerRequest.Mono.cs,MoveToNextBoundary,Cyclomatic complexity of the method is 16
Complex Method,ServiceStack.Html,HtmlCompressor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.html.cs,preserveBlocks,Cyclomatic complexity of the method is 34
Complex Method,ServiceStack.Html,HtmlCompressor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.html.cs,returnBlocks,Cyclomatic complexity of the method is 29
Complex Method,ServiceStack.Html,HtmlCompressor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.html.cs,processEventBlocks,Cyclomatic complexity of the method is 9
Complex Method,ServiceStack.Html,HtmlCompressor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.html.cs,processScriptBlocks,Cyclomatic complexity of the method is 9
Complex Method,ServiceStack.Html,HtmlCompressor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.html.cs,processStyleBlocks,Cyclomatic complexity of the method is 9
Complex Method,ServiceStack.Html,JSMinifier,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.js.cs,jsmin,Cyclomatic complexity of the method is 13
Complex Method,ServiceStack.Html,JSMinifier,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.js.cs,action,Cyclomatic complexity of the method is 21
Complex Method,ServiceStack.Html,JSMinifier,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.js.cs,next,Cyclomatic complexity of the method is 8
Complex Method,MarkdownDeep,Block,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\Block.cs,Render,Cyclomatic complexity of the method is 33
Complex Method,MarkdownDeep,Block,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\Block.cs,RenderPlain,Cyclomatic complexity of the method is 13
Complex Method,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,ScanLines,Cyclomatic complexity of the method is 37
Complex Method,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,CollapseLines,Cyclomatic complexity of the method is 11
Complex Method,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,EvaluateLine,Cyclomatic complexity of the method is 46
Complex Method,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,ProcessMarkdownEnabledHtml,Cyclomatic complexity of the method is 13
Complex Method,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,ScanHtml,Cyclomatic complexity of the method is 27
Complex Method,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,BuildList,Cyclomatic complexity of the method is 14
Complex Method,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,ProcessFencedCodeBlock,Cyclomatic complexity of the method is 9
Complex Method,MarkdownDeep,HtmlTag,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\HtmlTag.cs,IsSafe,Cyclomatic complexity of the method is 9
Complex Method,MarkdownDeep,HtmlTag,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\HtmlTag.cs,ParseHelper,Cyclomatic complexity of the method is 16
Complex Method,MarkdownDeep,LinkDefinition,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\LinkDefinition.cs,ParseLinkTarget,Cyclomatic complexity of the method is 22
Complex Method,MarkdownDeep,Markdown,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\MardownDeep.cs,Transform,Cyclomatic complexity of the method is 13
Complex Method,MarkdownDeep,Markdown,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\MardownDeep.cs,OnQualifyUrl,Cyclomatic complexity of the method is 9
Complex Method,MarkdownDeep,Markdown,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\MardownDeep.cs,HtmlEncodeAndConvertTabsToSpaces,Cyclomatic complexity of the method is 9
Complex Method,MarkdownDeep,SpanFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\SpanFormatter.cs,MakeID,Cyclomatic complexity of the method is 9
Complex Method,MarkdownDeep,SpanFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\SpanFormatter.cs,Render,Cyclomatic complexity of the method is 15
Complex Method,MarkdownDeep,SpanFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\SpanFormatter.cs,RenderPlain,Cyclomatic complexity of the method is 10
Complex Method,MarkdownDeep,SpanFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\SpanFormatter.cs,Tokenize,Cyclomatic complexity of the method is 25
Complex Method,MarkdownDeep,SpanFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\SpanFormatter.cs,CreateEmphasisMark,Cyclomatic complexity of the method is 10
Complex Method,MarkdownDeep,SpanFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\SpanFormatter.cs,ResolveEmphasisMarks,Cyclomatic complexity of the method is 10
Complex Method,MarkdownDeep,SpanFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\SpanFormatter.cs,ResolveEmphasisMarks_classic,Cyclomatic complexity of the method is 17
Complex Method,MarkdownDeep,SpanFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\SpanFormatter.cs,ProcessAutoLink,Cyclomatic complexity of the method is 9
Complex Method,MarkdownDeep,SpanFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\SpanFormatter.cs,ProcessLinkOrImageOrFootnote,Cyclomatic complexity of the method is 22
Complex Method,MarkdownDeep,TableSpec,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\TableSpec.cs,Parse,Cyclomatic complexity of the method is 14
Complex Method,MarkdownDeep,Utils,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\Utils.cs,SkipHtmlEntity,Cyclomatic complexity of the method is 13
Complex Method,MarkdownDeep,Utils,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\Utils.cs,SmartHtmlEncodeAmpsAndAngles,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack.Messaging,BackgroundMqService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Messaging\BackgroundMqService.cs,Get,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack.Messaging,BackgroundMqCollection<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Messaging\BackgroundMqService.cs,Add,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack.Messaging,MessageHandler<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Messaging\MessageHandler.cs,ProcessMessage,Cyclomatic complexity of the method is 18
Complex Method,ServiceStack.Metadata,BaseMetadataHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Metadata\BaseMetadataHandler.cs,ProcessOperationsAsync,Cyclomatic complexity of the method is 16
Complex Method,ServiceStack.Metadata,BaseMetadataHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Metadata\BaseMetadataHandler.cs,AppendType,Cyclomatic complexity of the method is 9
Complex Method,ServiceStack.Metadata,IndexOperationsControl,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Metadata\IndexOperationsControl.cs,CreateIcons,Cyclomatic complexity of the method is 14
Complex Method,ServiceStack.Metadata,ListTemplate,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Metadata\ListTemplate.cs,ToString,Cyclomatic complexity of the method is 12
Complex Method,ServiceStack.Metadata,OperationControl,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Metadata\OperationControl.cs,GetHttpRequestTemplate,Cyclomatic complexity of the method is 10
Complex Method,ServiceStack.Metadata,TableTemplate,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Metadata\TableTemplate.cs,ToString,Cyclomatic complexity of the method is 12
Complex Method,ServiceStack.NativeTypes.CSharp,CSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\CSharp\CSharpGenerator.cs,GetCode,Cyclomatic complexity of the method is 15
Complex Method,ServiceStack.NativeTypes.CSharp,CSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\CSharp\CSharpGenerator.cs,AppendType,Cyclomatic complexity of the method is 19
Complex Method,ServiceStack.NativeTypes.CSharp,CSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\CSharp\CSharpGenerator.cs,AddConstructor,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack.NativeTypes.CSharp,CSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\CSharp\CSharpGenerator.cs,AddProperties,Cyclomatic complexity of the method is 9
Complex Method,ServiceStack.NativeTypes.CSharp,CSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\CSharp\CSharpGenerator.cs,AppendAttributes,Cyclomatic complexity of the method is 10
Complex Method,ServiceStack.NativeTypes.CSharp,CSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\CSharp\CSharpGenerator.cs,AppendDataMember,Cyclomatic complexity of the method is 11
Complex Method,ServiceStack.NativeTypes.Dart,DartGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Dart\DartGenerator.cs,GetCode,Cyclomatic complexity of the method is 15
Complex Method,ServiceStack.NativeTypes.Dart,DartGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Dart\DartGenerator.cs,AppendType,Cyclomatic complexity of the method is 46
Complex Method,ServiceStack.NativeTypes.Dart,DartGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Dart\DartGenerator.cs,RegisterType,Cyclomatic complexity of the method is 11
Complex Method,ServiceStack.NativeTypes.Dart,DartGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Dart\DartGenerator.cs,AppendAttributes,Cyclomatic complexity of the method is 10
Complex Method,ServiceStack.NativeTypes.Dart,DartGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Dart\DartGenerator.cs,Type,Cyclomatic complexity of the method is 10
Complex Method,ServiceStack.NativeTypes.Dart,DartGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Dart\DartGenerator.cs,AppendDataMember,Cyclomatic complexity of the method is 11
Complex Method,ServiceStack.NativeTypes.Dart,DartGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Dart\DartGenerator.cs,ConvertFromCSharp,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack.NativeTypes.FSharp,FSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\FSharp\FSharpGenerator.cs,GetCode,Cyclomatic complexity of the method is 12
Complex Method,ServiceStack.NativeTypes.FSharp,FSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\FSharp\FSharpGenerator.cs,AppendType,Cyclomatic complexity of the method is 13
Complex Method,ServiceStack.NativeTypes.FSharp,FSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\FSharp\FSharpGenerator.cs,AddProperties,Cyclomatic complexity of the method is 10
Complex Method,ServiceStack.NativeTypes.FSharp,FSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\FSharp\FSharpGenerator.cs,AppendAttributes,Cyclomatic complexity of the method is 10
Complex Method,ServiceStack.NativeTypes.FSharp,FSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\FSharp\FSharpGenerator.cs,AppendDataMember,Cyclomatic complexity of the method is 11
Complex Method,ServiceStack.NativeTypes.Java,JavaGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Java\JavaGenerator.cs,GetCode,Cyclomatic complexity of the method is 15
Complex Method,ServiceStack.NativeTypes.Java,JavaGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Java\JavaGenerator.cs,AppendType,Cyclomatic complexity of the method is 14
Complex Method,ServiceStack.NativeTypes.Java,JavaGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Java\JavaGenerator.cs,AddProperties,Cyclomatic complexity of the method is 11
Complex Method,ServiceStack.NativeTypes.Java,JavaGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Java\JavaGenerator.cs,AppendAttributes,Cyclomatic complexity of the method is 11
Complex Method,ServiceStack.NativeTypes.Java,JavaGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Java\JavaGenerator.cs,Type,Cyclomatic complexity of the method is 9
Complex Method,ServiceStack.NativeTypes.Java,JavaGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Java\JavaGenerator.cs,AppendDataMember,Cyclomatic complexity of the method is 12
Complex Method,ServiceStack.NativeTypes.Kotlin,KotlinGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Kotlin\KotlinGenerator.cs,GetCode,Cyclomatic complexity of the method is 15
Complex Method,ServiceStack.NativeTypes.Kotlin,KotlinGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Kotlin\KotlinGenerator.cs,AppendType,Cyclomatic complexity of the method is 12
Complex Method,ServiceStack.NativeTypes.Kotlin,KotlinGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Kotlin\KotlinGenerator.cs,AppendAttributes,Cyclomatic complexity of the method is 11
Complex Method,ServiceStack.NativeTypes.Kotlin,KotlinGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Kotlin\KotlinGenerator.cs,Type,Cyclomatic complexity of the method is 9
Complex Method,ServiceStack.NativeTypes.Kotlin,KotlinGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Kotlin\KotlinGenerator.cs,AppendDataMember,Cyclomatic complexity of the method is 12
Complex Method,ServiceStack.NativeTypes,MetadataTypesGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\NativeTypesMetadata.cs,GetMetadataTypes,Cyclomatic complexity of the method is 31
Complex Method,ServiceStack.NativeTypes,MetadataTypesGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\NativeTypesMetadata.cs,ToType,Cyclomatic complexity of the method is 18
Complex Method,ServiceStack.NativeTypes,MetadataExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\NativeTypesMetadata.cs,OrderTypesByDeps,Cyclomatic complexity of the method is 12
Complex Method,ServiceStack.NativeTypes.Swift,SwiftGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Swift\SwiftGenerator.cs,GetCode,Cyclomatic complexity of the method is 12
Complex Method,ServiceStack.NativeTypes.Swift,SwiftGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Swift\SwiftGenerator.cs,AppendType,Cyclomatic complexity of the method is 19
Complex Method,ServiceStack.NativeTypes.Swift,SwiftGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Swift\SwiftGenerator.cs,AddTypeExtension,Cyclomatic complexity of the method is 9
Complex Method,ServiceStack.NativeTypes.Swift,SwiftGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Swift\SwiftGenerator.cs,AddProperties,Cyclomatic complexity of the method is 15
Complex Method,ServiceStack.NativeTypes.Swift,SwiftGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Swift\SwiftGenerator.cs,AppendAttributes,Cyclomatic complexity of the method is 10
Complex Method,ServiceStack.NativeTypes.Swift,SwiftGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Swift\SwiftGenerator.cs,Type,Cyclomatic complexity of the method is 9
Complex Method,ServiceStack.NativeTypes.Swift,SwiftGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Swift\SwiftGenerator.cs,AppendDataMember,Cyclomatic complexity of the method is 11
Complex Method,ServiceStack.NativeTypes.TypeScript,TypeScriptGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\TypeScript\TypeScriptGenerator.cs,GetCode,Cyclomatic complexity of the method is 14
Complex Method,ServiceStack.NativeTypes.TypeScript,TypeScriptGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\TypeScript\TypeScriptGenerator.cs,AppendType,Cyclomatic complexity of the method is 26
Complex Method,ServiceStack.NativeTypes.TypeScript,TypeScriptGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\TypeScript\TypeScriptGenerator.cs,AddProperties,Cyclomatic complexity of the method is 10
Complex Method,ServiceStack.NativeTypes.TypeScript,TypeScriptGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\TypeScript\TypeScriptGenerator.cs,AppendAttributes,Cyclomatic complexity of the method is 10
Complex Method,ServiceStack.NativeTypes.TypeScript,TypeScriptGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\TypeScript\TypeScriptGenerator.cs,DeclarationType,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack.NativeTypes.TypeScript,TypeScriptGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\TypeScript\TypeScriptGenerator.cs,Type,Cyclomatic complexity of the method is 10
Complex Method,ServiceStack.NativeTypes.TypeScript,TypeScriptGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\TypeScript\TypeScriptGenerator.cs,AppendDataMember,Cyclomatic complexity of the method is 11
Complex Method,ServiceStack.NativeTypes.TypeScript,TypeScriptGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\TypeScript\TypeScriptGenerator.cs,ConvertFromCSharp,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack.NativeTypes.VbNet,VbNetGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\VbNet\VbNetGenerator.cs,GetCode,Cyclomatic complexity of the method is 14
Complex Method,ServiceStack.NativeTypes.VbNet,VbNetGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\VbNet\VbNetGenerator.cs,AppendType,Cyclomatic complexity of the method is 19
Complex Method,ServiceStack.NativeTypes.VbNet,VbNetGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\VbNet\VbNetGenerator.cs,AddConstuctor,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack.NativeTypes.VbNet,VbNetGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\VbNet\VbNetGenerator.cs,AddProperties,Cyclomatic complexity of the method is 9
Complex Method,ServiceStack.NativeTypes.VbNet,VbNetGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\VbNet\VbNetGenerator.cs,AppendAttributes,Cyclomatic complexity of the method is 10
Complex Method,ServiceStack.NativeTypes.VbNet,VbNetGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\VbNet\VbNetGenerator.cs,AppendDataMember,Cyclomatic complexity of the method is 11
Complex Method,ServiceStack.Platforms,PlatformNet,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Platforms\PlatformNet.Config.cs,SetPathsFromConfiguration,Cyclomatic complexity of the method is 9
Complex Method,ServiceStack.Validation,ValidationFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Validation\ValidationFeature.cs,Register,Cyclomatic complexity of the method is 9
Complex Method,ServiceStack.Validation,ValidationFilters,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Validation\ValidationFilters.cs,RequestFilterAsync,Cyclomatic complexity of the method is 8
Long Parameter List,ServiceStack,TypedQueryData<QueryModel;From>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\AutoQueryDataFeature.cs,AppendTypedQueries,The method has 6 parameters. Parameters: q' dto' dynamicParams' defaultTerm' options' aliases
Long Parameter List,ServiceStack,TypedQueryData<QueryModel;From>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\AutoQueryDataFeature.cs,AddCondition,The method has 5 parameters. Parameters: q' defaultTerm' property' value' condition
Long Parameter List,ServiceStack,TypedQueryData<QueryModel;From>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\AutoQueryDataFeature.cs,AppendUntypedQueries,The method has 5 parameters. Parameters: q' dynamicParams' defaultTerm' options' aliases
Long Parameter List,ServiceStack,AutoQueryDataExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\AutoQueryDataFeature.cs,MemorySource,The method has 5 parameters. Parameters: ctx' sourceFn' cache' expiresIn' cacheKey
Long Parameter List,ServiceStack,AutoQueryDataServiceSource,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\AutoQueryDataServiceSource.cs,ServiceSource,The method has 5 parameters. Parameters: ctx' requestDto' cache' expiresIn' cacheKey
Long Parameter List,ServiceStack,CacheClientExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\CacheClientExtensions.cs,HasValidCache,The method has 5 parameters. Parameters: cacheClient' req' cacheKey' checkLastModified' lastModified
Long Parameter List,ServiceStack,CacheClientExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\CacheClientExtensions.cs,Cache,The method has 5 parameters. Parameters: cacheClient' cacheKey' responseDto' request' expireCacheIn
Long Parameter List,ServiceStack,ContainerTypeExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ContainerTypeExtensions.cs,RegisterAutoWiredType,The method has 5 parameters. Parameters: container' name' serviceType' inFunqAsType' scope
Long Parameter List,ServiceStack,CorsFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\CorsFeature.cs,CorsFeature,The method has 6 parameters. Parameters: allowedOrigins' allowedMethods' allowedHeaders' allowCredentials' exposeHeaders' maxAge
Long Parameter List,ServiceStack,CorsFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\CorsFeature.cs,CorsFeature,The method has 6 parameters. Parameters: allowOriginWhitelist' allowedMethods' allowedHeaders' allowCredentials' exposeHeaders' maxAge
Long Parameter List,ServiceStack,EncryptedMessagesFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\EncryptedMessagesFeature.cs,WriteEncryptedError,The method has 6 parameters. Parameters: req' cryptKey' authKey' iv' ex' description
Long Parameter List,ServiceStack,HttpError,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpError.cs,HttpError,The method has 5 parameters. Parameters: responseDto' statusCode' errorCode' errorMessage' innerException
Long Parameter List,ServiceStack,HttpExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpExtensions.cs,EndHttpHandlerRequest,The method has 5 parameters. Parameters: context' skipHeaders' skipClose' closeOutputStream' afterHeaders
Long Parameter List,ServiceStack,HttpResponseExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpResponseExtensions.cs,SetCookie,The method has 5 parameters. Parameters: response' cookieName' cookieValue' expiresIn' path
Long Parameter List,ServiceStack,HttpResponseExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpResponseExtensions.cs,SetCookie,The method has 5 parameters. Parameters: response' cookieName' cookieValue' expiresAt' path
Long Parameter List,ServiceStack,HttpResponseExtensionsInternal,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpResponseExtensionsInternal.cs,WriteToOutputStreamAsync,The method has 5 parameters. Parameters: response' result' bodyPrefix' bodySuffix' token
Long Parameter List,ServiceStack,HttpResponseExtensionsInternal,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpResponseExtensionsInternal.cs,WriteToResponse,The method has 6 parameters. Parameters: httpRes' httpReq' result' bodyPrefix' bodySuffix' token
Long Parameter List,ServiceStack,HttpResponseExtensionsInternal,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpResponseExtensionsInternal.cs,WriteToResponse,The method has 5 parameters. Parameters: httpRes' result' serializer' serializationContext' token
Long Parameter List,ServiceStack,HttpResponseExtensionsInternal,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpResponseExtensionsInternal.cs,WriteToResponse,The method has 7 parameters. Parameters: response' result' defaultAction' request' bodyPrefix' bodySuffix' token
Long Parameter List,ServiceStack,HttpResponseExtensionsInternal,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpResponseExtensionsInternal.cs,WriteError,The method has 5 parameters. Parameters: httpRes' ex' statusCode' errorMessage' contentType
Long Parameter List,ServiceStack,HttpResponseExtensionsInternal,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpResponseExtensionsInternal.cs,WriteErrorToResponse,The method has 7 parameters. Parameters: httpRes' httpReq' contentType' operationName' errorMessage' ex' statusCode
Long Parameter List,ServiceStack,HttpResponseExtensionsInternal,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpResponseExtensionsInternal.cs,HandleCustomErrorHandler,The method has 6 parameters. Parameters: httpRes' httpReq' contentType' statusCode' errorDto' ex
Long Parameter List,ServiceStack,HttpResult,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpResult.cs,SetCookie,The method has 6 parameters. Parameters: name' value' expiresAt' path' secure' httpOnly
Long Parameter List,ServiceStack,HttpResult,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpResult.cs,NotModified,The method has 5 parameters. Parameters: description' cacheControl' maxAge' eTag' lastModified
Long Parameter List,ServiceStack,HttpResultUtils,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpResultUtils.cs,WritePartialToAsync,The method has 5 parameters. Parameters: fromStream' toStream' start' end' token
Long Parameter List,ServiceStack,ImageExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ImageExtensions.cs,CropToPng,The method has 5 parameters. Parameters: img' newWidth' newHeight' startX' startY
Long Parameter List,ServiceStack,RequestExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\RequestExtensions.cs,ToOptimizedResultUsingCache,The method has 5 parameters. Parameters: requestContext' cacheClient' cacheKey' expireCacheIn' factoryFn
Long Parameter List,ServiceStack,MemoryServerEvents,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,NotifySubscriptionAsync,The method has 5 parameters. Parameters: subscriptionId' selector' message' channel' token
Long Parameter List,ServiceStack,MemoryServerEvents,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,NotifyUserIdAsync,The method has 5 parameters. Parameters: userId' selector' message' channel' token
Long Parameter List,ServiceStack,MemoryServerEvents,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,NotifyUserNameAsync,The method has 5 parameters. Parameters: userName' selector' message' channel' token
Long Parameter List,ServiceStack,MemoryServerEvents,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,NotifySessionAsync,The method has 5 parameters. Parameters: sessionId' selector' message' channel' token
Long Parameter List,ServiceStack,MemoryServerEvents,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,Notify,The method has 5 parameters. Parameters: map' key' selector' message' channel
Long Parameter List,ServiceStack,MemoryServerEvents,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,Notify,The method has 5 parameters. Parameters: map' key' selector' message' channel
Long Parameter List,ServiceStack,MemoryServerEvents,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,NotifyAsync,The method has 6 parameters. Parameters: map' key' selector' message' channel' token
Long Parameter List,ServiceStack,MemoryServerEvents,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,NotifyAsync,The method has 6 parameters. Parameters: map' key' selector' message' channel' token
Long Parameter List,ServiceStack,IServerEvents,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,NotifySubscriptionAsync,The method has 5 parameters. Parameters: subscriptionId' selector' message' channel' token
Long Parameter List,ServiceStack,IServerEvents,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,NotifyUserIdAsync,The method has 5 parameters. Parameters: userId' selector' message' channel' token
Long Parameter List,ServiceStack,IServerEvents,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,NotifyUserNameAsync,The method has 5 parameters. Parameters: userName' selector' message' channel' token
Long Parameter List,ServiceStack,IServerEvents,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,NotifySessionAsync,The method has 5 parameters. Parameters: sessionId' selector' message' channel' token
Long Parameter List,ServiceStack,ServerEventExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,NotifySubscriptionAsync,The method has 5 parameters. Parameters: server' subscriptionId' message' channel' token
Long Parameter List,ServiceStack,ServerEventExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,NotifyUserIdAsync,The method has 5 parameters. Parameters: server' userId' message' channel' token
Long Parameter List,ServiceStack,ServerEventExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,NotifyUserNameAsync,The method has 5 parameters. Parameters: server' userName' message' channel' token
Long Parameter List,ServiceStack,ServerEventExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,NotifySessionAsync,The method has 5 parameters. Parameters: server' sspid' message' channel' token
Long Parameter List,ServiceStack,ServiceStackProviderExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServiceStackProvider.cs,HasAccess,The method has 5 parameters. Parameters: hasProvider' roleAttrs' anyRoleAttrs' permAttrs' anyPermAttrs
Long Parameter List,ServiceStack,SharpPagesFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\SharpPagesFeature.cs,RenderPartial,The method has 5 parameters. Parameters: pageName' model' renderHtml' writer' htmlHelper
Long Parameter List,ServiceStack,SvgFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\SvgFeature.cs,WriteSvgCssFile,The method has 5 parameters. Parameters: vfs' name' dataUris' adjacentCssRules' appendToCssFiles
Long Parameter List,ServiceStack,WebSudoFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\WebSudoFeature.cs,OnAuthenticated,The method has 5 parameters. Parameters: httpReq' session' authService' tokens' authInfo
Long Parameter List,ServiceStack.Auth,IAuthEvents,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\AuthEvents.cs,OnAuthenticated,The method has 5 parameters. Parameters: httpReq' session' authService' tokens' authInfo
Long Parameter List,ServiceStack.Auth,AuthEvents,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\AuthEvents.cs,OnAuthenticated,The method has 5 parameters. Parameters: httpReq' session' authService' tokens' authInfo
Long Parameter List,ServiceStack.Auth,MultiAuthEvents,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\AuthEvents.cs,OnAuthenticated,The method has 5 parameters. Parameters: httpReq' session' authService' tokens' authInfo
Long Parameter List,ServiceStack.Auth,AuthExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\AuthProvider.cs,VerifyDigestAuth,The method has 5 parameters. Parameters: userAuth' digestHeaders' privateKey' nonceTimeOut' sequence
Long Parameter List,ServiceStack.Auth,CredentialsAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\CredentialsAuthProvider.cs,Authenticate,The method has 5 parameters. Parameters: authService' session' userName' password' referrerUrl
Long Parameter List,ServiceStack.Auth,CredentialsAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\CredentialsAuthProvider.cs,AuthenticatePrivateRequest,The method has 5 parameters. Parameters: authService' session' userName' password' referrerUrl
Long Parameter List,ServiceStack.Auth,DigestAuthFunctions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\DigestAuthFunctions.cs,ValidateResponse,The method has 5 parameters. Parameters: digestInfo' PrivateKey' NonceTimeOut' DigestHA1' sequence
Long Parameter List,ServiceStack.Auth,IAuthHttpGateway,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\IAuthHttpGateway.cs,VerifyTwitterAccessToken,The method has 6 parameters. Parameters: consumerKey' consumerSecret' accessToken' accessTokenSecret' userId' email
Long Parameter List,ServiceStack.Auth,IAuthHttpGateway,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\IAuthHttpGateway.cs,DownloadTwitterUserInfo,The method has 5 parameters. Parameters: consumerKey' consumerSecret' accessToken' accessTokenSecret' twitterUserId
Long Parameter List,ServiceStack.Auth,AuthHttpGateway,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\IAuthHttpGateway.cs,DownloadTwitterUserInfo,The method has 5 parameters. Parameters: consumerKey' consumerSecret' accessToken' accessTokenSecret' twitterUserId
Long Parameter List,ServiceStack.Auth,AuthHttpGateway,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\IAuthHttpGateway.cs,VerifyTwitterAccessToken,The method has 6 parameters. Parameters: consumerKey' consumerSecret' accessToken' accessTokenSecret' userId' email
Long Parameter List,ServiceStack.Auth,AuthHttpGateway,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\IAuthHttpGateway.cs,GetJsonFromOAuthUrl,The method has 6 parameters. Parameters: consumerKey' consumerSecret' accessToken' accessTokenSecret' url' data
Long Parameter List,ServiceStack.Auth,IAuthRepository,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\IAuthRepository.cs,TryAuthenticate,The method has 5 parameters. Parameters: digestHeaders' privateKey' nonceTimeOut' sequence' userAuth
Long Parameter List,ServiceStack.Auth,JwtAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProvider.cs,CreateJwtPayload,The method has 6 parameters. Parameters: session' issuer' expireIn' audiences' roles' permissions
Long Parameter List,ServiceStack.Auth,JwtAuthProviderReader,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProviderReader.cs,VerifyJwePayload,The method has 5 parameters. Parameters: req' parts' iv' cipherText' cryptKey
Long Parameter List,ServiceStack.Auth,OAuth2Provider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\OAuth2Provider.cs,OAuth2Provider,The method has 5 parameters. Parameters: appSettings' authRealm' oAuthProvider' consumerKeyName' consumerSecretName
Long Parameter List,ServiceStack.Auth,OAuthAuthorizer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\OAuthAuthorizer.cs,AuthorizeRequest,The method has 6 parameters. Parameters: provider' oauthToken' oauthTokenSecret' method' uri' data
Long Parameter List,ServiceStack.Auth,OAuthAuthorizer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\OAuthAuthorizer.cs,AuthorizeRequest,The method has 7 parameters. Parameters: consumerKey' consumerSecret' oauthToken' oauthTokenSecret' method' uri' data
Long Parameter List,ServiceStack.Auth,OAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\OAuthProvider.cs,OAuthProvider,The method has 5 parameters. Parameters: appSettings' authRealm' oAuthProvider' consumerKeyName' consumerSecretName
Long Parameter List,ServiceStack.Auth,PasswordHasher,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,HashPasswordV3,The method has 6 parameters. Parameters: password' rng' prf' iterCount' saltSize' numBytesRequested
Long Parameter List,ServiceStack.Auth,KeyDerivation,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,Pbkdf2,The method has 5 parameters. Parameters: password' salt' prf' iterationCount' numBytesRequested
Long Parameter List,ServiceStack.Auth,IPbkdf2Provider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,DeriveKey,The method has 5 parameters. Parameters: password' salt' prf' iterationCount' numBytesRequested
Long Parameter List,ServiceStack.Auth,ManagedPbkdf2Provider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,DeriveKey,The method has 5 parameters. Parameters: password' salt' prf' iterationCount' numBytesRequested
Long Parameter List,ServiceStack.Auth,RedisAuthRepository<TUserAuth;TUserAuthDetails>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\RedisAuthRepository.cs,TryAuthenticate,The method has 5 parameters. Parameters: digestHeaders' privateKey' nonceTimeOut' sequence' userAuth
Long Parameter List,ServiceStack.Auth,RedisAuthRepository<TUserAuth;TUserAuthDetails>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\RedisAuthRepository.cs,QueryUserAuths,The method has 5 parameters. Parameters: results' query' orderBy' skip' take
Long Parameter List,ServiceStack.Auth,UserAuthRepositoryExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\UserAuthRepositoryExtensions.cs,SearchUserAuths,The method has 5 parameters. Parameters: authRepo' query' orderBy' skip' take
Long Parameter List,Funq,Container,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ContainerNetCoreExtensions.cs,ResolveImpl,The method has 5 parameters. Parameters: name' throwIfMissing' arg1' arg2' arg3
Long Parameter List,Funq,Container,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ContainerNetCoreExtensions.cs,ResolveImpl,The method has 6 parameters. Parameters: name' throwIfMissing' arg1' arg2' arg3' arg4
Long Parameter List,Funq,Container,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ContainerNetCoreExtensions.cs,ResolveImpl,The method has 7 parameters. Parameters: name' throwIfMissing' arg1' arg2' arg3' arg4' arg5
Long Parameter List,Funq,Container,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ContainerNetCoreExtensions.cs,ResolveImpl,The method has 8 parameters. Parameters: name' throwIfMissing' arg1' arg2' arg3' arg4' arg5' arg6
Long Parameter List,Funq,Container,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ContainerNetCoreExtensions.cs,Resolve,The method has 5 parameters. Parameters: arg1' arg2' arg3' arg4' arg5
Long Parameter List,Funq,Container,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ContainerNetCoreExtensions.cs,Resolve,The method has 6 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6
Long Parameter List,Funq,Container,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ContainerNetCoreExtensions.cs,ResolveNamed,The method has 5 parameters. Parameters: name' arg1' arg2' arg3' arg4
Long Parameter List,Funq,Container,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ContainerNetCoreExtensions.cs,ResolveNamed,The method has 6 parameters. Parameters: name' arg1' arg2' arg3' arg4' arg5
Long Parameter List,Funq,Container,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ContainerNetCoreExtensions.cs,ResolveNamed,The method has 7 parameters. Parameters: name' arg1' arg2' arg3' arg4' arg5' arg6
Long Parameter List,Funq,Container,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ContainerNetCoreExtensions.cs,TryResolve,The method has 5 parameters. Parameters: arg1' arg2' arg3' arg4' arg5
Long Parameter List,Funq,Container,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ContainerNetCoreExtensions.cs,TryResolve,The method has 6 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6
Long Parameter List,Funq,Container,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ContainerNetCoreExtensions.cs,TryResolveNamed,The method has 5 parameters. Parameters: name' arg1' arg2' arg3' arg4
Long Parameter List,Funq,Container,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ContainerNetCoreExtensions.cs,TryResolveNamed,The method has 6 parameters. Parameters: name' arg1' arg2' arg3' arg4' arg5
Long Parameter List,Funq,Container,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ContainerNetCoreExtensions.cs,TryResolveNamed,The method has 7 parameters. Parameters: name' arg1' arg2' arg3' arg4' arg5' arg6
Long Parameter List,ServiceStack.FluentValidation,DefaultValidatorExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\DefaultValidatorExtensions.cs,ValidateAsync,The method has 5 parameters. Parameters: validator' instance' cancellationToken' selector' ruleSet
Long Parameter List,ServiceStack.FluentValidation.Internal,CollectionPropertyRule<TProperty>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\CollectionPropertyRule.cs,CollectionPropertyRule,The method has 6 parameters. Parameters: member' propertyFunc' expression' cascadeModeThunk' typeToValidate' containerType
Long Parameter List,ServiceStack.FluentValidation.Internal,IncludeRule,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\IncludeRule.cs,IncludeRule,The method has 5 parameters. Parameters: func' cascadeModeThunk' typeToValidate' containerType' validatorType
Long Parameter List,ServiceStack.FluentValidation.Internal,PropertyRule,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\PropertyRule.cs,PropertyRule,The method has 6 parameters. Parameters: member' propertyFunc' expression' cascadeModeThunk' typeToValidate' containerType
Long Parameter List,ServiceStack.Host,InMemoryRollingRequestLogger,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\InMemoryRollingRequestLogger.cs,CreateEntry,The method has 5 parameters. Parameters: request' requestDto' response' requestDuration' requestType
Long Parameter List,ServiceStack.Host,RestPath,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\RestPath.cs,RestPath,The method has 6 parameters. Parameters: requestType' path' verbs' summary' notes' matchRule
Long Parameter List,ServiceStack.Host,ServiceRoutes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\ServiceRoutes.cs,Add,The method has 5 parameters. Parameters: requestType' restPath' verbs' summary' notes
Long Parameter List,ServiceStack.Host,ServiceRoutes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\ServiceRoutes.cs,Add,The method has 6 parameters. Parameters: requestType' restPath' verbs' summary' notes' matches
Long Parameter List,ServiceStack.Host.HttpListener,HttpPostedFile,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\HttpListener\ListenerRequest.Mono.cs,HttpPostedFile,The method has 5 parameters. Parameters: name' content_type' base_stream' offset' length
Long Parameter List,ServiceStack.Html,IViewEngine,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\IViewEngine.cs,RenderPartial,The method has 5 parameters. Parameters: pageName' model' renderHtml' writer' htmlHelper
Long Parameter List,ServiceStack.Html,HtmlCompressor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.html.cs,preserveBlocks,The method has 10 parameters. Parameters: html' preBlocks' taBlocks' scriptBlocks' styleBlocks' eventBlocks' condCommentBlocks' skipBlocks' lineBreakBlocks' userBlocks
Long Parameter List,ServiceStack.Html,HtmlCompressor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.html.cs,returnBlocks,The method has 10 parameters. Parameters: html' preBlocks' taBlocks' scriptBlocks' styleBlocks' eventBlocks' condCommentBlocks' skipBlocks' lineBreakBlocks' userBlocks
Long Parameter List,ServiceStack.Html,HtmlCompressor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.html.cs,processPreservedBlocks,The method has 9 parameters. Parameters: preBlocks' taBlocks' scriptBlocks' styleBlocks' eventBlocks' condCommentBlocks' skipBlocks' lineBreakBlocks' userBlocks
Long Parameter List,ServiceStack.Metadata,BaseMetadataHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Metadata\BaseMetadataHandler.cs,RenderOperationAsync,The method has 7 parameters. Parameters: output' httpReq' operationName' requestMessage' responseMessage' metadataHtml' operation
Long Parameter List,ServiceStack.Metadata,MetadataConfig,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Metadata\MetadataConfig.cs,MetadataConfig,The method has 5 parameters. Parameters: format' name' syncReplyUri' asyncOneWayUri' defaultMetadataUri
Long Parameter List,ServiceStack.Metadata,Soap11MetadataHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Metadata\Soap11MetadataHandler.cs,RenderOperationAsync,The method has 7 parameters. Parameters: output' httpReq' operationName' requestMessage' responseMessage' metadataHtml' operation
Long Parameter List,ServiceStack.Metadata,Soap12MetadataHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Metadata\Soap12MetadataHandler.cs,RenderOperationAsync,The method has 7 parameters. Parameters: output' httpReq' operationName' requestMessage' responseMessage' metadataHtml' operation
Long Parameter List,ServiceStack.Metadata,SoapMetadataConfig,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Metadata\SoapMetadataConfig.cs,SoapMetadataConfig,The method has 6 parameters. Parameters: format' name' syncReplyUri' asyncOneWayUri' defaultMetadataUri' wsdlMetadataUri
Long Parameter List,ServiceStack.Metadata,WsdlMetadataHandlerBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Metadata\WsdlMetadataHandlerBase.cs,GetWsdlTemplate,The method has 5 parameters. Parameters: operations' baseUri' optimizeForFlash' rawUrl' serviceName
Long Parameter List,ServiceStack.NativeTypes.CSharp,CSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\CSharp\CSharpGenerator.cs,AppendType,The method has 5 parameters. Parameters: sb' type' lastNS' allTypes' options
Long Parameter List,ServiceStack.NativeTypes.Java,JavaGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Java\JavaGenerator.cs,AddProperties,The method has 5 parameters. Parameters: sb' type' includeResponseStatus' addPropertyAccessors' settersReturnType
Long Parameter List,ServiceStack.NativeTypes.Java,JavaGeneratorExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Java\JavaGenerator.cs,AppendPropertyAccessor,The method has 5 parameters. Parameters: sb' type' fieldName' accessorName' settersReturnThis
Long Parameter List,ServiceStack.NativeTypes.Kotlin,KotlinGeneratorExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Kotlin\KotlinGenerator.cs,AppendPropertyAccessor,The method has 5 parameters. Parameters: sb' type' fieldName' accessorName' settersReturnThis
Long Parameter List,ServiceStack.NativeTypes.Swift,SwiftGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Swift\SwiftGenerator.cs,AppendType,The method has 5 parameters. Parameters: sb' sbExt' type' lastNS' options
Long Parameter List,ServiceStack.NativeTypes.VbNet,VbNetGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\VbNet\VbNetGenerator.cs,AppendType,The method has 5 parameters. Parameters: sb' type' lastNS' allTypes' options
Long Parameter List,ServiceStack.MiniProfiler,IProfiler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Profiler.cs,RenderIncludes,The method has 6 parameters. Parameters: position' showTrivial' showTimeWithChildren' maxTracesToShow' xhtml' showControls
Long Parameter List,ServiceStack.MiniProfiler,NullProfiler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Profiler.cs,RenderIncludes,The method has 6 parameters. Parameters: position' showTrivial' showTimeWithChildren' maxTracesToShow' xhtml' showControls
Long Parameter List,ServiceStack.MiniProfiler,Profiler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Profiler.cs,RenderIncludes,The method has 6 parameters. Parameters: position' showTrivial' showTimeWithChildren' maxTracesToShow' xhtml' showControls
Long Parameter List,ServiceStack.Testing,MockHttpRequest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Testing\MockHttpRequest.cs,MockHttpRequest,The method has 7 parameters. Parameters: operationName' httpMethod' contentType' pathInfo' queryString' inputStream' formData
Long Identifier,ServiceStack,ServiceStackHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Formats\SoapFormat.cs,,The length of the parameter GlobalRequestFiltersAsyncArray is 30.
Long Identifier,ServiceStack,ServiceStackHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Formats\SoapFormat.cs,,The length of the parameter GlobalResponseFiltersAsyncArray is 31.
Long Identifier,ServiceStack,ServiceStackHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Formats\SoapFormat.cs,,The length of the parameter GlobalMessageRequestFiltersArray is 32.
Long Identifier,ServiceStack,ServiceStackHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Formats\SoapFormat.cs,,The length of the parameter GlobalMessageRequestFiltersAsyncArray is 37.
Long Identifier,ServiceStack,ServiceStackHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Formats\SoapFormat.cs,,The length of the parameter GlobalMessageResponseFiltersArray is 33.
Long Identifier,ServiceStack,ServiceStackHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Formats\SoapFormat.cs,,The length of the parameter GlobalMessageResponseFiltersAsyncArray is 38.
Long Identifier,ServiceStack,ServiceStackHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Formats\SoapFormat.cs,,The length of the parameter GatewayRequestFiltersAsyncArray is 31.
Long Identifier,ServiceStack,ServiceStackHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Formats\SoapFormat.cs,,The length of the parameter GatewayResponseFiltersAsyncArray is 32.
Long Identifier,ServiceStack,HttpExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpExtensions.cs,ToAbsoluteUri,The length of the parameter formatFallbackToPredefinedRoute is 31.
Long Identifier,ServiceStack,HttpExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpExtensions.cs,ToAbsoluteUri,The length of the parameter formatFallbackToPredefinedRoute is 31.
Long Identifier,ServiceStack,HttpExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpExtensions.cs,ToAbsoluteUri,The length of the parameter formatFallbackToPredefinedRoute is 31.
Long Identifier,ServiceStack,ErrorMessages,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\LocalizedStrings.cs,,The length of the parameter ApiKeyRequiresSecureConnection is 30.
Long Identifier,ServiceStack,ErrorMessages,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\LocalizedStrings.cs,,The length of the parameter HostDoesNotSupportSingletonRequest is 34.
Long Identifier,ServiceStack.Host,ContentTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\ContentTypes.cs,,The length of the parameter ContentTypeStringDeserializers is 30.
Long Statement,ServiceStack,AuthenticateAttribute,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\AuthenticateAttribute.cs,ExecuteAsync,The length of the statement  "                await res.WriteError(req' requestDto' $"No registered Auth Providers found matching {this.Provider ?? "any"} provider"); " is 120.
Long Statement,ServiceStack,AuthenticateAttribute,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\AuthenticateAttribute.cs,DoHtmlRedirectAccessDeniedIfConfigured,The length of the statement  "            var htmlRedirect = this.HtmlRedirect ?? AuthenticateService.HtmlRedirectAccessDenied ?? AuthenticateService.HtmlRedirect; " is 121.
Long Statement,ServiceStack,AuthenticateAttribute,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\AuthenticateAttribute.cs,Equals,The length of the statement  "            return base.Equals(other) && string.Equals(Provider' other.Provider) && string.Equals(HtmlRedirect' other.HtmlRedirect); " is 120.
Long Statement,ServiceStack,AuthFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\AuthFeature.cs,Register,The length of the statement  "                    throw new StrictModeException($"User Session {sessionInstance.GetType().Name} cannot have circular dependencies"' "sessionFactory"' " is 131.
Long Statement,ServiceStack,TypedQueryData<QueryModel;From>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\AutoQueryDataFeature.cs,GetQueryMatch,The length of the statement  "                ? q.FirstMatchingField(name) ?? (name.EndsWith(Pluralized) ? q.FirstMatchingField(name.Substring(0' name.Length - 1)) : null) " is 125.
Long Statement,ServiceStack,TypedQueryData<QueryModel;From>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\AutoQueryDataFeature.cs,GetQueryMatch,The length of the statement  "                    match = q.FirstMatchingField(field) ?? (field.EndsWith(Pluralized) ? q.FirstMatchingField(field.Substring(0' field.Length - 1)) : null); " is 136.
Long Statement,ServiceStack,TypedQueryData<QueryModel;From>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\AutoQueryDataFeature.cs,GetQueryMatch,The length of the statement  "                    match = q.FirstMatchingField(field) ?? (field.EndsWith(Pluralized) ? q.FirstMatchingField(field.Substring(0' field.Length - 1)) : null); " is 136.
Long Statement,ServiceStack,AutoQueryDataExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\AutoQueryDataFeature.cs,ToField,The length of the statement  "                    throw new NotSupportedException($"No Condition registered with name '{attr.Condition}' on [QueryDataField({attr.Field ?? pi.Name})]"); " is 134.
Long Statement,ServiceStack,AutoQueryDataServiceSource,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\AutoQueryDataServiceSource.cs,ServiceSource,The length of the statement  "                    $"IEnumerable<{typeof(T).Name}> could not be derived from Response {response.GetType().Name} from Request {requestDto.GetType().Name}"); " is 136.
Long Statement,ServiceStack,CacheResponseExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\CacheResponseAttribute.cs,HandleValidCache,The length of the statement  "            var cache = cacheInfo.LocalCache ? HostContext.AppHost.GetMemoryCacheClient(req) : HostContext.AppHost.GetCacheClient(req); " is 123.
Long Statement,ServiceStack,CompressResponseAttribute,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\CompressResponseAttribute.cs,ExecuteAsync,The length of the statement  "            if (src == null || src is IPartialWriter || src is IPartialWriterAsync || src is IStreamWriter || src is IStreamWriterAsync) " is 124.
Long Statement,ServiceStack,DefaultViewAttribute,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\DefaultViewAttribute.cs,Execute,The length of the statement  "                if (!req.Items.TryGetValue(Keywords.Template' out var currentTemplate) || string.IsNullOrEmpty(currentTemplate as string)) " is 122.
Long Statement,ServiceStack,DtoUtils,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\DtoUtils.cs,ToResponseStatus,The length of the statement  "            return ResponseStatusUtils.CreateResponseStatus(validationException.ErrorCode' validationException.Message' validationException.Violations); " is 140.
Long Statement,ServiceStack,DtoUtils,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\DtoUtils.cs,ToResponseStatus,The length of the statement  "                : ResponseStatusUtils.CreateResponseStatus(validationResult.ErrorCode' validationResult.ErrorMessage' validationResult.Errors); " is 127.
Long Statement,ServiceStack,EncryptedMessagesFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\EncryptedMessagesFeature.cs,Register,The length of the statement  "                        await WriteUnencryptedError(req' HttpError.NotFound(ErrorKeyNotFound.Fmt(encRequest.KeyId' PublicKeyPath))' "KeyNotFoundException"); " is 132.
Long Statement,ServiceStack,ServiceStackHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Formats\SoapFormat.cs,GetVirtualFileSources,The length of the statement  "            var pathProviders = new List<IVirtualPathProvider>(InsertVirtualFileSources ?? TypeConstants<IVirtualPathProvider>.EmptyList) {                  " is 127.
Long Statement,ServiceStack,HostConfig,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HostConfig.cs,NewInstance,The length of the statement  "                IsMobileRegex = new Regex("Mobile|iP(hone|od|ad)|Android|BlackBerry|IEMobile|Kindle|(hpw|web)OS|Fennec|Minimo|Opera M(obi|ini)|Blazer|Dolfin|Dolphin|Skyfire|Zune"' RegexOptions.Compiled)' " is 187.
Long Statement,ServiceStack,HttpCacheFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpCacheFeature.cs,CacheAndWriteResponse,The length of the statement  "            if (dto == null || dto is IPartialWriter || dto is IPartialWriterAsync || dto is IStreamWriter || dto is IStreamWriterAsync) " is 124.
Long Statement,ServiceStack,HttpCacheFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpCacheFeature.cs,CacheAndWriteResponse,The length of the statement  "            var cache = cacheInfo.LocalCache ? HostContext.AppHost.GetMemoryCacheClient(req) : HostContext.AppHost.GetCacheClient(req); " is 123.
Long Statement,ServiceStack,HttpCacheExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpCacheFeature.cs,NotModifiedSince,The length of the statement  "                    if (DateTime.TryParse(ifModifiedSince' new DateTimeFormatInfo()' DateTimeStyles.RoundtripKind' out var modifiedSinceDate)) " is 122.
Long Statement,ServiceStack,HttpHandlerFactory,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpHandlerFactory.cs,Init,The length of the statement  "                //Apache+mod_mono treats path="servicestack*" as path="*" so takes over root path' so we need to serve matching resources " is 121.
Long Statement,ServiceStack,HttpHandlerFactory,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpHandlerFactory.cs,GetHandler,The length of the statement  "                    return new RestHandler { RestPath = matchesFallback' RequestName = matchesFallback.RequestType.GetOperationName()' ResponseContentType = contentType }; " is 151.
Long Statement,ServiceStack,HttpHandlerFactory,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpHandlerFactory.cs,GetHandler,The length of the statement  "                    return new RestHandler { RestPath = matchesFallback' RequestName = matchesFallback.RequestType.GetOperationName()' ResponseContentType = contentType }; " is 151.
Long Statement,ServiceStack,HttpHandlerFactory,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpHandlerFactory.cs,GetHandlerForPathInfo,The length of the statement  "                return new RestHandler { RestPath = restPath' RequestName = restPath.RequestType.GetOperationName()' ResponseContentType = contentType }; " is 137.
Long Statement,ServiceStack,HttpHandlerFactory,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpHandlerFactory.cs,GetHandlerForPathInfo,The length of the statement  "                isDirectory = StaticFileHandler.MonoDirectoryExists(filePath' filePath.Substring(0' filePath.Length - pathInfo.Length)); " is 120.
Long Statement,ServiceStack,HttpHandlerFactory,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpHandlerFactory.cs,GetHandlerForPathInfo,The length of the statement  "                    return new RestHandler { RestPath = restPath' RequestName = restPath.RequestType.GetOperationName()' ResponseContentType = contentType }; " is 137.
Long Statement,ServiceStack,HttpRequestExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpRequestExtensions.cs,ToStatusCode,The length of the statement  "            if (ex is ArgumentException || ex is SerializationException || ex is FormatException) return (int)HttpStatusCode.BadRequest; " is 124.
Long Statement,ServiceStack,HttpRequestExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpRequestExtensions.cs,ResolvePathInfoFromMappedPath,The length of the statement  "                        if (!string.Equals(fullPathParts[fullPathIndex - fullPathIndexOffset + mappedPathRootIndex]' mappedPathRootParts[mappedPathRootIndex]' StringComparison.OrdinalIgnoreCase)) " is 171.
Long Statement,ServiceStack,HttpResponseExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpResponseExtensions.cs,AllowSyncIO,The length of the statement  "                var feature = ((ServiceStack.Host.NetCore.NetCoreResponse)res).HttpContext.Features.Get<Microsoft.AspNetCore.Http.Features.IHttpBodyControlFeature>(); " is 150.
Long Statement,ServiceStack,HttpResponseExtensionsInternal,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpResponseExtensionsInternal.cs,WriteToOutputStream,The length of the statement  "            if (HostContext.Config.AllowPartialResponses && result is IPartialWriter partialResult && partialResult.IsPartialRequest) " is 121.
Long Statement,ServiceStack,HttpResponseExtensionsInternal,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpResponseExtensionsInternal.cs,WriteToOutputStreamAsync,The length of the statement  "            if (HostContext.Config.AllowPartialResponses && result is IPartialWriterAsync partialResult && partialResult.IsPartialRequest) " is 126.
Long Statement,ServiceStack,HttpResponseExtensionsInternal,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpResponseExtensionsInternal.cs,WriteToResponse,The length of the statement  "                            if (await response.HandleCustomErrorHandler(request' defaultContentType' httpError.Status' response.Dto' httpError as Exception)) " is 129.
Long Statement,ServiceStack,HttpResponseExtensionsInternal,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpResponseExtensionsInternal.cs,WriteToResponse,The length of the statement  "                                $"As result '{(result != null ? result.GetType().GetOperationName() : "")}' is not a supported responseType' a defaultAction must be supplied"); " is 144.
Long Statement,ServiceStack,HttpResponseExtensionsInternal,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpResponseExtensionsInternal.cs,HandleResponseWriteException,The length of the statement  "            var errorMessage = $"Error occured while Processing Request: [{originalEx.GetType().GetOperationName()}] {originalEx.Message}"; " is 127.
Long Statement,ServiceStack,HttpResult,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpResult.cs,WritePartialToAsync,The length of the statement  "                throw new InvalidOperationException("Neither file' stream nor text were set when attempting to write to the Response Stream."); " is 127.
Long Statement,ServiceStack,HttpResultUtils,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpResultUtils.cs,WritePartialTo,The length of the statement  "                    if (httpException.Message == "An error occurred while communicating with the remote host. The error code is 0x80070057.") " is 121.
Long Statement,ServiceStack,HttpResultUtils,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpResultUtils.cs,WritePartialToAsync,The length of the statement  "                    if (httpException.Message == "An error occurred while communicating with the remote host. The error code is 0x80070057.") " is 121.
Long Statement,ServiceStack,RequestExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\RequestExtensions.cs,GetParamInRequestHeader,The length of the statement  "                ?? (!HostContext.Config.SkipFormDataInCreatingRequest && request.ContentType.MatchesContentType(MimeTypes.FormUrlEncoded) " is 121.
Long Statement,ServiceStack,MemoryServerEvents,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,DoAsyncTasks,The length of the statement  "            if (pendingAsyncTasks.IsEmpty && pendingSubscriptionUpdates.IsEmpty && pendingUnSubscriptions.IsEmpty && expiredSubs.IsEmpty) " is 125.
Long Statement,ServiceStack,MemoryServerEvents,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,FlushNopToChannelsAsync,The length of the statement  "            //ref: https://forums.servicestack.net/t/serversentevents-with-notifychannelofsubscriptions-set-to-false-leaks-requests/2552/2 " is 126.
Long Statement,ServiceStack,ServiceExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServiceExtensions.cs,AuthenticationRequired,The length of the statement  "                    { HttpHeaders.WwwAuthenticate' $"{AuthenticateService.DefaultOAuthProvider} realm=\"{AuthenticateService.DefaultOAuthRealm}\"" } " is 128.
Long Statement,ServiceStack,ServiceRoutesExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServiceRoutesExtensions.cs,PropertyName,The length of the statement  "            return (lambdaExpression.Body is UnaryExpression unary ? (MemberExpression)unary.Operand : (MemberExpression)lambdaExpression.Body).Member.Name; " is 144.
Long Statement,ServiceStack,SharpPagesFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\SharpPagesFeature.cs,InitViewPages,The length of the statement  "                    throw new NotSupportedException($"Multiple views found named '{file.Name}' in '{file.VirtualPath}' and '{existingFile.VirtualPath}'"); " is 134.
Long Statement,ServiceStack,SharpApiService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\SharpPagesFeature.cs,Any,The length of the statement  "                throw HttpError.NotFound($"The Sharp API did not specify a response. Use the 'return' filter to set a return value for the page."); " is 131.
Long Statement,ServiceStack,ScriptAdminService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\SharpPagesFeature.cs,Any,The length of the statement  "                    results.Add(nameof(ProtectedScripts.invalidateAllCaches) + ": " + feature.ProtectedMethods.invalidateAllCaches(scope).ToJsv()); " is 127.
Long Statement,ServiceStack,SharpPageHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\SharpPagesFeature.cs,ProcessRequestAsync,The length of the statement  "            var args = httpReq.GetScriptRequestParams(importRequestParams:(context as SharpPagesFeature)?.ImportRequestParams ?? false); " is 124.
Long Statement,ServiceStack,Svg,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\SvgFeature.cs,Encode,The length of the statement  "            //['%'''#'''<'''>'''?'''['''\\''']'''^'''`'''{'''|'''}'].map(x => `.Replace("${x}"'"` + encodeURIComponent(x) + `")`).join('') " is 126.
Long Statement,ServiceStack,ValidationResultExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ValidationResultExtensions.cs,ToErrorResult,The length of the statement  "                validationResult.Errors.Add(new ValidationErrorField(error.ErrorCode' error.PropertyName' error.ErrorMessage' error.AttemptedValue) " is 131.
Long Statement,ServiceStack,WebSudoFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\WebSudoFeature.cs,OnRequestStart,The length of the statement  "            if (dto is Authenticate authenticateDto && !AuthenticateService.LogoutAction.EqualsIgnoreCase(authenticateDto.provider)) " is 120.
Long Statement,ServiceStack.Auth,AuthenticateService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\AuthenticateService.cs,Get,The length of the statement  "                throw new NotSupportedException("GET Authenticate requests are disabled' to enable set AuthFeature.AllowGetAuthenticateRequests = req => true"); " is 144.
Long Statement,ServiceStack.Auth,AuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\AuthProvider.cs,ValidateAccount,The length of the statement  "                return authService.Redirect(FailedRedirectUrlFilter(this' GetReferrerUrl(authService' session).SetParam("f"' "UserNameAlreadyExists"))); " is 136.
Long Statement,ServiceStack.Auth,AuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\AuthProvider.cs,ValidateAccount,The length of the statement  "                return authService.Redirect(FailedRedirectUrlFilter(this' GetReferrerUrl(authService' session).SetParam("f"' "EmailAlreadyExists"))); " is 133.
Long Statement,ServiceStack.Auth,AuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\AuthProvider.cs,ValidateAccount,The length of the statement  "                return authService.Redirect(FailedRedirectUrlFilter(this' GetReferrerUrl(authService' session).SetParam("f"' "AccountLocked"))); " is 128.
Long Statement,ServiceStack.Auth,AuthExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\AuthProvider.cs,VerifyDigestAuth,The length of the statement  "            return new DigestAuthFunctions().ValidateResponse(digestHeaders' privateKey' nonceTimeOut' userAuth.DigestHa1Hash' sequence); " is 125.
Long Statement,ServiceStack.Auth,DigestAuthFunctions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\DigestAuthFunctions.cs,CreateAuthResponse,The length of the statement  "            string response = $"{Ha1}:{digestHeaders["nonce"]}:{digestHeaders["nc"]}:{digestHeaders["cnonce"]}:{digestHeaders["qop"].ToLower()}:{Ha2}"; " is 139.
Long Statement,ServiceStack.Auth,DigestAuthFunctions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\DigestAuthFunctions.cs,CreateHa2,The length of the statement  "            return ConvertToHexString(MD5.Create().ComputeHash(Encoding.UTF8.GetBytes($"{digestHeaders["method"]}:{digestHeaders["uri"]}"))); " is 129.
Long Statement,ServiceStack.Auth,DigestAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\DigestAuthProvider.cs,OnFailedAuthentication,The length of the statement  "                $"{Provider} realm=\"{AuthRealm}\"' nonce=\"{digestHelper.GetNonce(httpReq.UserHostAddress' PrivateKey)}\"' qop=\"auth\""); " is 123.
Long Statement,ServiceStack.Auth,FacebookAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\FacebookAuthProvider.cs,Authenticate,The length of the statement  "                var preAuthUrl = $"{PreAuthUrl}?client_id={AppId}&redirect_uri={this.CallbackUrl.UrlEncode()}&scope={string.Join("'"' Permissions)}&{Keywords.State}={session.Id}"; " is 163.
Long Statement,ServiceStack.Auth,FacebookAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\FacebookAuthProvider.cs,Authenticate,The length of the statement  "                var accessTokenUrl = $"{AccessTokenUrl}?client_id={AppId}&redirect_uri={this.CallbackUrl.UrlEncode()}&client_secret={AppSecret}&code={code}"; " is 141.
Long Statement,ServiceStack.Auth,GithubAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\GithubAuthProvider.cs,Authenticate,The length of the statement  "                string preAuthUrl = $"{PreAuthUrl}?client_id={ClientId}&redirect_uri={CallbackUrl.UrlEncode()}&scope={scopes}&{Keywords.State}={session.Id}"; " is 141.
Long Statement,ServiceStack.Auth,GithubAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\GithubAuthProvider.cs,Authenticate,The length of the statement  "                string accessTokenUrl = $"{AccessTokenUrl}?client_id={ClientId}&redirect_uri={CallbackUrl.UrlEncode()}&client_secret={ClientSecret}&code={code}"; " is 145.
Long Statement,ServiceStack.Auth,AuthHttpGateway,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\IAuthHttpGateway.cs,VerifyTwitterAccessToken,The length of the statement  "                var json = GetJsonFromOAuthUrl(consumerKey' consumerSecret' accessToken' accessTokenSecret' TwitterVerifyCredentialsUrl); " is 121.
Long Statement,ServiceStack.Auth,JwtAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProvider.cs,Execute,The length of the statement  "            if (shouldReturnTokens && SetBearerTokenOnAuthenticateResponse && authContext.AuthResponse.BearerToken == null && session.IsAuthenticated) " is 138.
Long Statement,ServiceStack.Auth,GetAccessTokenService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProvider.cs,Any,The length of the statement  "                throw new NotSupportedException("JWT RefreshTokens requires a registered IUserAuthRepository or an AuthProvider implementing IUserSessionSource"); " is 146.
Long Statement,ServiceStack.Auth,JwtAuthProviderReader,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProviderReader.cs,Init,The length of the statement  "                IncludeJwtInConvertSessionToTokenResponse = appSettings.Get("jwt.IncludeJwtInConvertSessionToTokenResponse"' IncludeJwtInConvertSessionToTokenResponse); " is 152.
Long Statement,ServiceStack.Auth,JwtAuthProviderReader,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProviderReader.cs,GetVerifiedJwtPayload,The length of the statement  "                //Potential Security Risk for relying on user-specified algorithm: https://auth0.com/blog/2015/03/31/critical-vulnerabilities-in-json-web-token-libraries/ " is 154.
Long Statement,ServiceStack.Auth,JwtAuthProviderReader,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProviderReader.cs,Register,The length of the statement  "                throw new ArgumentNullException(nameof(AuthKey)' "An AuthKey is Required to use JWT' e.g: new JwtAuthProvider { AuthKey = AesUtils.CreateKey() }"); " is 147.
Long Statement,ServiceStack.Auth,MicrosoftGraphAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\MicrosoftGraphAuthProvider.cs,GetAccessTokenJson,The length of the statement  "            var accessTokenParams = $"code={code}&client_id={ConsumerKey}&client_secret={ConsumerSecret}&redirect_uri={this.CallbackUrl.UrlEncode()}&grant_type=authorization_code"; " is 168.
Long Statement,ServiceStack.Auth,OAuth2Provider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\OAuth2Provider.cs,GetAccessTokenJson,The length of the statement  "            var accessTokenUrl = $"{AccessTokenUrl}?code={code}&client_id={ConsumerKey}&client_secret={ConsumerSecret}&redirect_uri={this.CallbackUrl.UrlEncode()}&grant_type=authorization_code"; " is 182.
Long Statement,ServiceStack.Auth,OAuthAuthorizer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\OAuthAuthorizer.cs,MakeSigningKey,The length of the statement  "            return OAuthUtils.PercentEncode(consumerSecret) + "&" + (oauthTokenSecret != null ? OAuthUtils.PercentEncode(oauthTokenSecret) : ""); " is 133.
Long Statement,ServiceStack.Auth,OAuthAuthorizer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\OAuthAuthorizer.cs,AcquireAccessToken,The length of the statement  "                content = $"x_auth_mode=client_auth&x_auth_password={OAuthUtils.PercentEncode(xAuthPassword)}&x_auth_username={OAuthUtils.PercentEncode(xAuthUsername)}"; " is 153.
Long Statement,ServiceStack.Auth,OAuthAuthorizer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\OAuthAuthorizer.cs,AuthorizeRequest,The length of the statement  "            return AuthorizeRequest(provider.ConsumerKey' provider.ConsumerSecret' oauthToken' oauthTokenSecret' method' uri' data); " is 120.
Long Statement,ServiceStack.Auth,OAuthUtils,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\OAuthAuthorizer.cs,PercentEncode,The length of the statement  "                if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9') || c == '-' || c == '_' || c == '.' || c == '~') " is 127.
Long Statement,ServiceStack.Auth,OdnoklassnikiAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\OdnoklassnikiAuthProvider.cs,Authenticate,The length of the statement  "                string preAuthUrl = $"{PreAuthUrl}?client_id={ApplicationId}&redirect_uri={CallbackUrl.UrlEncode()}&response_type=code&layout=m"; " is 129.
Long Statement,ServiceStack.Auth,OdnoklassnikiAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\OdnoklassnikiAuthProvider.cs,Authenticate,The length of the statement  "                string payload = $"client_id={ApplicationId}&client_secret={SecretKey}&code={code}&redirect_uri={CallbackUrl.UrlEncode()}&grant_type=authorization_code"; " is 153.
Long Statement,ServiceStack.Auth,RedisAuthRepository<TUserAuth;TUserAuthDetails>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\RedisAuthRepository.cs,GetUserAuthDetails,The length of the statement  "                return redis.As<TUserAuthDetails>().GetByIds(authProviderIds).OrderBy(x => x.ModifiedDate).Cast<IUserAuthDetails>().ToList(); " is 125.
Long Statement,ServiceStack.Auth,RegisterService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\RegisterService.cs,UpdateUserAuth,The length of the statement  "            if (!HostContext.AppHost.GlobalRequestFiltersAsyncArray.Contains(ValidationFilters.RequestFilterAsync)) //Already gets run " is 122.
Long Statement,ServiceStack.Auth,UserAuthRepositoryExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\UserAuthRepositoryExtensions.cs,AssignRoles,The length of the statement  "                    foreach (var missingPermission in permissions.Where(x => userAuth.Permissions == null || !userAuth.Permissions.Contains(x))) " is 124.
Long Statement,ServiceStack.Auth,VkAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\VkAuthProvider.cs,GetUserInfo,The length of the statement  "                var sig = WebRequestUtils.CalculateMD5Hash($"/method/users.get?fields=screen_name'bdate'city'country'timezone&access_token={AccessToken}{AccessTokenSecret}"); " is 158.
Long Statement,ServiceStack.Auth,VkAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\VkAuthProvider.cs,GetUserInfo,The length of the statement  "                var json = $"https://api.vk.com/method/users.get?fields=screen_name'bdate'city'country'timezone&access_token={AccessToken}&sig={sig}".GetJsonFromUrl(); " is 151.
Long Statement,ServiceStack.Auth,VkAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\VkAuthProvider.cs,Authenticate,The length of the statement  "                string preAuthUrl = $"{PreAuthUrl}?client_id={ApplicationId}&scope={Scope}&redirect_uri={CallbackUrl.UrlEncode()}&response_type=code&v={ApiVersion}"; " is 149.
Long Statement,ServiceStack.Auth,VkAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\VkAuthProvider.cs,Authenticate,The length of the statement  "                string accessTokeUrl = $"{AccessTokenUrl}?client_id={ApplicationId}&client_secret={SecureKey}&code={code}&redirect_uri={CallbackUrl.UrlEncode()}"; " is 146.
Long Statement,ServiceStack.Auth,VkAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\VkAuthProvider.cs,LoadUserAuthInfo,The length of the statement  "                    string json = "https://api.vk.com/method/users.get?user_ids={0}&fields=screen_name'bdate'city'country'timezone&oauth_token={0}" " is 127.
Long Statement,ServiceStack.Auth,YandexAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\YandexAuthProvider.cs,Authenticate,The length of the statement  "                string preAuthUrl = $"{PreAuthUrl}?response_type=code&client_id={ApplicationId}&redirect_uri={CallbackUrl.UrlEncode()}&display=popup&state={Guid.NewGuid().ToString("N")}"; " is 171.
Long Statement,ServiceStack.Auth,YandexAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\YandexAuthProvider.cs,Authenticate,The length of the statement  "                string payload = $"grant_type=authorization_code&code={code}&client_id={ApplicationId}&client_secret={ApplicationPassword}"; " is 124.
Long Statement,Funq,Container,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ContainerNetCoreExtensions.cs,RequiredResolve,The length of the statement  "                throw new ArgumentNullException($"Required Type of '{type.Name}' in '{ownerType.Name}' constructor was not registered in '{GetType().Name}'"); " is 142.
Long Statement,Funq,Container,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ContainerNetCoreExtensions.cs,CreateFactory,The length of the statement  "                        Expression.TypeAs(Expression.Call(containerParam' GetType().GetMethodInfo(nameof(TryResolve)' TryResolveArgs)' Expression.Constant(x.PropertyType))' x.PropertyType) " is 164.
Long Statement,Funq,Container,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ContainerNetCoreExtensions.cs,CreateFactory,The length of the statement  "                    Expression.TypeAs(Expression.Call(containerParam' GetType().GetMethodInfo(nameof(RequiredResolve))' Expression.Constant(x.ParameterType)' Expression.Constant(type))' x.ParameterType) " is 182.
Long Statement,Funq,Container,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ContainerNetCoreExtensions.cs,CreateResolveException,The length of the statement  "            var errMsg = "Error trying to resolve Service '{0}' or one of its autowired dependencies (see inner exception for details).".Fmt(typeof(TService).FullName); " is 156.
Long Statement,Funq,Container,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ContainerNetCoreExtensions.cs,ResolveImpl,The length of the statement  "            var entry = GetEntry<TService' Func<Container' TArg1' TArg2' TArg3' TArg4' TArg5' TArg6' TService>>(name' throwIfMissing); " is 122.
Long Statement,Funq,Container,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ContainerNetCoreExtensions.cs,LazyResolve,The length of the statement  "			return (arg1' arg2' arg3' arg4' arg5) => ResolveNamed<TService' TArg1' TArg2' TArg3' TArg4' TArg5>(name' arg1' arg2' arg3' arg4' arg5); " is 135.
Long Statement,Funq,Container,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ContainerNetCoreExtensions.cs,LazyResolve,The length of the statement  "			return (arg1' arg2' arg3' arg4' arg5' arg6) => ResolveNamed<TService' TArg1' TArg2' TArg3' TArg4' TArg5' TArg6>(name' arg1' arg2' arg3' arg4' arg5' arg6); " is 154.
Long Statement,Funq,Container,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ContainerNetCoreExtensions.cs,TryResolveNamed,The length of the statement  "			return ResolveImpl<TService' TArg1' TArg2' TArg3' TArg4' TArg5' TArg6>(name' false' arg1' arg2' arg3' arg4' arg5' arg6); " is 120.
Long Statement,ServiceStack.FluentValidation,AbstractValidator<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\AbstractValidator.cs,Validate,The length of the statement  "				throw new InvalidOperationException($"Cannot validate instances of type '{instance.GetType().Name}'. This validator can only validate instances of type '{typeof(T).Name}'."); " is 174.
Long Statement,ServiceStack.FluentValidation,AbstractValidator<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\AbstractValidator.cs,ValidateAsync,The length of the statement  "				throw new InvalidOperationException($"Cannot validate instances of type '{instance.GetType().Name}'. This validator can only validate instances of type '{typeof(T).Name}'."); " is 174.
Long Statement,ServiceStack.FluentValidation,AbstractValidator<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\AbstractValidator.cs,Validate,The length of the statement  "			return Validate(new ValidationContext<T>(instance' new PropertyChain()' ValidatorOptions.ValidatorSelectors.DefaultValidatorSelectorFactory()) { " is 144.
Long Statement,ServiceStack.FluentValidation,AbstractValidator<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\AbstractValidator.cs,ValidateAsync,The length of the statement  "			return ValidateAsync(new ValidationContext<T>(instance' new PropertyChain()' ValidatorOptions.ValidatorSelectors.DefaultValidatorSelectorFactory()) { " is 149.
Long Statement,ServiceStack.FluentValidation,AssemblyScanner,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\AssemblyScanner.cs,Execute,The length of the statement  "				let genericInterfaces = interfaces.Where(i => i.GetTypeInfo().IsGenericType && i.GetGenericTypeDefinition() == openGenericType) " is 127.
Long Statement,ServiceStack.FluentValidation,AssemblyScanner,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\AssemblyScanner.cs,Execute,The length of the statement  "						let genericInterfaces = interfaces.Where(i => i.GetTypeInfo().IsGenericType && i.GetGenericTypeDefinition() == openGenericType) " is 127.
Long Statement,ServiceStack.FluentValidation,CollectionValidatorExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\CollectionValidatorExtensions.cs,SetCollectionValidator,The length of the statement  "			var innerRuleBuilder = (RuleBuilder<IEnumerable<TCollectionElement>' TCollectionElement>)innerValidator.RuleForEach(x => x); " is 124.
Long Statement,ServiceStack.FluentValidation,CollectionValidatorExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\CollectionValidatorExtensions.cs,SetCollectionValidator,The length of the statement  "			var innerRuleBuilder = ((RuleBuilder<IEnumerable<TCollectionElement>' TCollectionElement>)innerValidator.RuleForEach(x => x)); " is 126.
Long Statement,ServiceStack.FluentValidation,DefaultValidatorExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\DefaultValidatorExtensions.cs,EmailAddress,The length of the statement  "			// TODO: Merge the 2 email overloads together. This overload was added separately to retain backwards compatibility for the compiler. " is 133.
Long Statement,ServiceStack.FluentValidation,DefaultValidatorExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\DefaultValidatorExtensions.cs,EmailAddress,The length of the statement  "			var validator = mode == EmailValidationMode.AspNetCoreCompatible ? new AspNetCoreCompatibleEmailValidator() : (PropertyValidator)new EmailValidator(); " is 150.
Long Statement,ServiceStack.FluentValidation,DefaultValidatorExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\DefaultValidatorExtensions.cs,Must,The length of the statement  "			return ruleBuilder.SetValidator(new PredicateValidator((instance' property' propertyValidatorContext) => predicate((T) instance' (TProperty) property' propertyValidatorContext))); " is 179.
Long Statement,ServiceStack.FluentValidation,DefaultValidatorExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\DefaultValidatorExtensions.cs,MustAsync,The length of the statement  "			return ruleBuilder.SetValidator(new AsyncPredicateValidator((instance' property' propertyValidatorContext' cancel) => predicate((T) instance' (TProperty) property' propertyValidatorContext' cancel))); " is 200.
Long Statement,ServiceStack.FluentValidation,DefaultValidatorExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\DefaultValidatorExtensions.cs,GreaterThanOrEqualTo,The length of the statement  "			return ruleBuilder.SetValidator(new GreaterThanOrEqualValidator(func.CoerceToNonGeneric()' valueToCompare.GetMember())); " is 120.
Long Statement,ServiceStack.FluentValidation,DefaultValidatorExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\DefaultValidatorExtensions.cs,GreaterThanOrEqualTo,The length of the statement  "			return ruleBuilder.SetValidator(new GreaterThanOrEqualValidator(func.CoerceToNonGeneric()' valueToCompare.GetMember())); " is 120.
Long Statement,ServiceStack.FluentValidation,DefaultValidatorExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\DefaultValidatorExtensions.cs,GreaterThanOrEqualTo,The length of the statement  "			return ruleBuilder.SetValidator(new GreaterThanOrEqualValidator(func.CoerceToNonGeneric()' valueToCompare.GetMember())); " is 120.
Long Statement,ServiceStack.FluentValidation,DefaultValidatorExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\DefaultValidatorExtensions.cs,GreaterThanOrEqualTo,The length of the statement  "			return ruleBuilder.SetValidator(new GreaterThanOrEqualValidator(func.CoerceToNonGeneric()' valueToCompare.GetMember())); " is 120.
Long Statement,ServiceStack.FluentValidation,DefaultValidatorExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\DefaultValidatorExtensions.cs,Validate,The length of the statement  "			var selector = ValidatorOptions.ValidatorSelectors.MemberNameValidatorSelectorFactory(MemberNameValidatorSelector.MemberNamesFromExpressions(propertyExpressions)); " is 163.
Long Statement,ServiceStack.FluentValidation,DefaultValidatorExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\DefaultValidatorExtensions.cs,Validate,The length of the statement  "			var context = new ValidationContext<T>(instance' new PropertyChain()' ValidatorOptions.ValidatorSelectors.MemberNameValidatorSelectorFactory(properties)); " is 154.
Long Statement,ServiceStack.FluentValidation,DefaultValidatorExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\DefaultValidatorExtensions.cs,ValidateAsync,The length of the statement  "			var selector = ValidatorOptions.ValidatorSelectors.MemberNameValidatorSelectorFactory(MemberNameValidatorSelector.MemberNamesFromExpressions(propertyExpressions)); " is 163.
Long Statement,ServiceStack.FluentValidation,DefaultValidatorExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\DefaultValidatorExtensions.cs,ValidateAsync,The length of the statement  "			var context = new ValidationContext<T>(instance' new PropertyChain()' ValidatorOptions.ValidatorSelectors.MemberNameValidatorSelectorFactory(properties)); " is 154.
Long Statement,ServiceStack.FluentValidation,DefaultValidatorExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\DefaultValidatorExtensions.cs,ScalePrecision,The length of the statement  "			return ruleBuilder.SetValidator(new ScalePrecisionValidator(scale' precision) { IgnoreTrailingZeros = ignoreTrailingZeros }); " is 125.
Long Statement,ServiceStack.FluentValidation,DefaultValidatorOptions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\DefaultValidatorOptions.cs,WithMessage,The length of the statement  "				config.CurrentValidator.Options.ErrorMessageSource = new LazyStringSource(ctx => messageProvider((T)ctx.InstanceToValidate)); " is 125.
Long Statement,ServiceStack.FluentValidation,DefaultValidatorOptions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\DefaultValidatorOptions.cs,Where,The length of the statement  "			// This overload supports RuleFor().SetCollectionValidator() (which returns IRuleBuilderOptions<T' IEnumerable<TElement>>) " is 122.
Long Statement,ServiceStack.FluentValidation,DefaultValidatorOptions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\DefaultValidatorOptions.cs,DependentRules,The length of the statement  "					throw new NotSupportedException("DependentRules can only be called as part of classes that inherit from AbstractValidator"); " is 124.
Long Statement,ServiceStack.FluentValidation,DefaultValidatorOptions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\DefaultValidatorOptions.cs,DependentRules,The length of the statement  "				throw new NotSupportedException("DependentRules can only be called as part of classes that inherit from AbstractValidator"); " is 124.
Long Statement,ServiceStack.FluentValidation,DefaultValidatorOptions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\DefaultValidatorOptions.cs,OverridePropertyName,The length of the statement  "			if (propertyName == null) throw new ArgumentNullException(nameof(propertyName)' "A property name must be specified when calling OverridePropertyName."); " is 152.
Long Statement,ServiceStack.FluentValidation,DefaultValidatorOptions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\DefaultValidatorOptions.cs,OverridePropertyName,The length of the statement  "			if (member == null) throw new NotSupportedException("Must supply a MemberExpression when calling OverridePropertyName"); " is 120.
Long Statement,ServiceStack.FluentValidation,DefaultValidatorOptions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\DefaultValidatorOptions.cs,OnFailure,The length of the statement  "			return rule.Configure(config => config.ReplaceValidator(config.CurrentValidator' new OnFailureValidator<T>(config.CurrentValidator' (instance' ctx' message) => onFailure(instance)))); " is 183.
Long Statement,ServiceStack.FluentValidation,DefaultValidatorOptions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\DefaultValidatorOptions.cs,OnFailure,The length of the statement  "			return rule.Configure(config => config.ReplaceValidator(config.CurrentValidator' new OnFailureValidator<T>(config.CurrentValidator' (instance' ctx' message) => onFailure(instance' ctx)))); " is 188.
Long Statement,ServiceStack.FluentValidation,DefaultValidatorOptions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\DefaultValidatorOptions.cs,OnFailure,The length of the statement  "			return rule.Configure(config => config.ReplaceValidator(config.CurrentValidator' new OnFailureValidator<T>(config.CurrentValidator' onFailure))); " is 145.
Long Statement,ServiceStack.FluentValidation,DefaultValidatorOptions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\DefaultValidatorOptions.cs,OverrideIndexer,The length of the statement  "			// This overload supports RuleFor().SetCollectionValidator() (which returns IRuleBuilderOptions<T' IEnumerable<TElement>>) " is 122.
Long Statement,ServiceStack.FluentValidation,DefaultValidatorOptions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\DefaultValidatorOptions.cs,OverrideIndexer,The length of the statement  "				cfg.IndexBuilder = (x' collection' element' index) => callback((T)x' (IEnumerable<TCollectionElement>)collection' (TCollectionElement)element' index); " is 150.
Long Statement,ServiceStack.FluentValidation,ValidationContext,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\ValidationContext.cs,Clone,The length of the statement  "			return new ValidationContext(instanceToValidate ?? this.InstanceToValidate' chain ?? this.PropertyChain' selector ?? this.Selector) { " is 133.
Long Statement,ServiceStack.FluentValidation,ValidationException,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\ValidationException.cs,ToResponseStatus,The length of the statement  "	        var responseStatus = ResponseStatusUtils.CreateResponseStatus(typeof(ValidationException).GetOperationName()' Message' errors); " is 127.
Long Statement,ServiceStack.FluentValidation,ValidatorDescriptor<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\ValidatorDescriptor.cs,GetName,The length of the statement  "				throw new ArgumentException(string.Format("Cannot retrieve name as expression '{0}' as it does not specify a property."' propertyExpression)); " is 142.
Long Statement,ServiceStack.FluentValidation.Internal,Key,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\AccessorCache.cs,GetHashCode,The length of the statement  "					return ((_memberInfo != null ? _memberInfo.GetHashCode() : 0)*397) ^ (_expressionDebugView != null ? _expressionDebugView.GetHashCode() : 0); " is 141.
Long Statement,ServiceStack.FluentValidation.Internal,CollectionPropertyRule<TProperty>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\CollectionPropertyRule.cs,Create,The length of the statement  "			return new CollectionPropertyRule<TProperty>(member' compiled.CoerceToNonGeneric()' expression' cascadeModeThunk' typeof(TProperty)' typeof(T)); " is 144.
Long Statement,ServiceStack.FluentValidation.Internal,CollectionPropertyRule<TProperty>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\CollectionPropertyRule.cs,InvokePropertyValidatorAsync,The length of the statement  "			if (validator.Options.Condition != null && !validator.Options.Condition(propertyContext)) return Enumerable.Empty<ValidationFailure>(); " is 135.
Long Statement,ServiceStack.FluentValidation.Internal,CollectionPropertyRule<TProperty>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\CollectionPropertyRule.cs,InvokePropertyValidatorAsync,The length of the statement  "			if (validator.Options.AsyncCondition != null && !await validator.Options.AsyncCondition(propertyContext' cancellation)) return Enumerable.Empty<ValidationFailure>(); " is 165.
Long Statement,ServiceStack.FluentValidation.Internal,CollectionPropertyRule<TProperty>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\CollectionPropertyRule.cs,InferPropertyName,The length of the statement  "				throw new InvalidOperationException("Could not infer property name for expression: " + expression + ". Please explicitly specify a property name by calling OverridePropertyName as part of the rule chain. Eg: RuleForEach(x => x).NotNull().OverridePropertyName(\"MyProperty\")"); " is 277.
Long Statement,ServiceStack.FluentValidation.Internal,CollectionPropertyRule<TProperty>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\CollectionPropertyRule.cs,InvokePropertyValidator,The length of the statement  "			if (validator.Options.Condition != null && !validator.Options.Condition(propertyContext)) return Enumerable.Empty<ValidationFailure>(); " is 135.
Long Statement,ServiceStack.FluentValidation.Internal,ConditionBuilder<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\ConditionBuilder.cs,When,The length of the statement  "			// Must apply the predicate after the rule has been fully created to ensure any rules-specific conditions have already been applied. " is 132.
Long Statement,ServiceStack.FluentValidation.Internal,ConditionBuilder<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\ConditionBuilder.cs,When,The length of the statement  "					throw new NotSupportedException("Cannot call the root-level When/Unless methods on rules that don't inherit from PropertyRule"); " is 128.
Long Statement,ServiceStack.FluentValidation.Internal,AsyncConditionBuilder<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\ConditionBuilder.cs,WhenAsync,The length of the statement  "					throw new NotSupportedException("Cannot call the root-level When/Unless methods on rules that don't inherit from PropertyRule"); " is 128.
Long Statement,ServiceStack.FluentValidation.Internal,ConditionOtherwiseBuilder,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\ConditionBuilder.cs,Otherwise,The length of the statement  "					throw new NotSupportedException("Cannot call the root-level When/Unless methods on rules that don't inherit from PropertyRule"); " is 128.
Long Statement,ServiceStack.FluentValidation.Internal,AsyncConditionOtherwiseBuilder,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\ConditionBuilder.cs,Otherwise,The length of the statement  "					throw new NotSupportedException("Cannot call the root-level When/Unless methods on rules that don't inherit from PropertyRule"); " is 128.
Long Statement,ServiceStack.FluentValidation.Internal,IncludeRule,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\IncludeRule.cs,Create,The length of the statement  "			return new IncludeRule(ctx => func((T)ctx.InstanceToValidate)' cascadeModeThunk' typeof(T)' typeof(T)' typeof(TValidator)); " is 123.
Long Statement,ServiceStack.FluentValidation.Internal,MessageFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\MessageFormatter.cs,GetPlaceholder,The length of the statement  "			// Performance: String concat causes much overhead when not needed. Concatenating constants results in constants being compiled. " is 128.
Long Statement,ServiceStack.FluentValidation.Internal,PropertyRule,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\PropertyRule.cs,Create,The length of the statement  "			return new PropertyRule(member' compiled.CoerceToNonGeneric()' expression' cascadeModeThunk' typeof(TProperty)' typeof(T)); " is 123.
Long Statement,ServiceStack.FluentValidation.Internal,PropertyRule,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\PropertyRule.cs,Validate,The length of the statement  "			// Construct the full name of the property' taking into account overriden property names and the chain (if we're in a nested validator) " is 135.
Long Statement,ServiceStack.FluentValidation.Internal,PropertyRule,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\PropertyRule.cs,ValidateAsync,The length of the statement  "			// Construct the full name of the property' taking into account overriden property names and the chain (if we're in a nested validator) " is 135.
Long Statement,ServiceStack.FluentValidation.Internal,PropertyRule,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\PropertyRule.cs,InvokePropertyValidatorAsync,The length of the statement  "			if (validator.Options.Condition != null && !validator.Options.Condition(propertyContext)) return Enumerable.Empty<ValidationFailure>(); " is 135.
Long Statement,ServiceStack.FluentValidation.Internal,PropertyRule,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\PropertyRule.cs,InvokePropertyValidatorAsync,The length of the statement  "			if (validator.Options.AsyncCondition != null && !await validator.Options.AsyncCondition(propertyContext' cancellation)) return Enumerable.Empty<ValidationFailure>(); " is 165.
Long Statement,ServiceStack.FluentValidation.Internal,PropertyRule,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\PropertyRule.cs,InvokePropertyValidator,The length of the statement  "			if (validator.Options.Condition != null && !validator.Options.Condition(propertyContext)) return Enumerable.Empty<ValidationFailure>(); " is 135.
Long Statement,ServiceStack.FluentValidation.Internal,RuleBuilder<T;TProperty>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\RuleBuilder.cs,SetValidator,The length of the statement  "			SetValidator(new ChildValidatorAdaptor(context => validatorProvider((T) context.InstanceToValidate)' typeof (TValidator)) { " is 123.
Long Statement,ServiceStack.FluentValidation.Resources,LazyStringSource,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\LazyStringSource.cs,GetString,The length of the statement  "				throw new FluentValidationMessageFormatException("Could not build error message- the message makes use of properties from the containing object' but the containing object was null."' ex); " is 187.
Long Statement,ServiceStack.FluentValidation.Resources,LocalizedStringSource,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\LocalaizedStringSource.cs,CreateFromExpression,The length of the statement  "                throw new InvalidOperationException("Only MemberExpressions an be passed to BuildResourceAccessor' eg () => Messages.MyResource"); " is 130.
Long Statement,ServiceStack.FluentValidation.TestHelper,TestPropertyChain<TValue;TValue1>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\TestHelper\TestPropertyChain.cs,Property,The length of the statement  "			return new TestPropertyChain<TValue2' TValue1>(_validationResultTester' _properties.Concat(new[] { memberAccessor.GetMember() })); " is 130.
Long Statement,ServiceStack.FluentValidation.TestHelper,ValidationResultTester<T;TValue>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\TestHelper\ValidationResultTester.cs,ShouldHaveValidationError,The length of the statement  "			var failures = _testValidationResult.Result.Errors.Where(x => NormalizePropertyName(x.PropertyName) == propertyName || string.IsNullOrEmpty(propertyName)).ToArray(); " is 165.
Long Statement,ServiceStack.FluentValidation.TestHelper,ValidationResultTester<T;TValue>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\TestHelper\ValidationResultTester.cs,ShouldNotHaveValidationError,The length of the statement  "			var failures = _testValidationResult.Result.Errors.Where(x => NormalizePropertyName(x.PropertyName) == propertyName || string.IsNullOrEmpty(propertyName)).ToList(); " is 164.
Long Statement,ServiceStack.FluentValidation.TestHelper,ValidationTestExtension,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\TestHelper\ValidatorTestExtensions.cs,ShouldHaveChildValidator,The length of the statement  "				throw new NotSupportedException("ShouldHaveChildValidator can only be used for simple property expressions. It cannot be used for model-level rules or rules that contain anything other than a property reference."); " is 214.
Long Statement,ServiceStack.FluentValidation.TestHelper,ValidationTestExtension,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\TestHelper\ValidatorTestExtensions.cs,ShouldHaveChildValidator,The length of the statement  "			matchingValidators = matchingValidators.Concat(GetDependentRules(expressionMemberName' expression' descriptor)).ToArray(); " is 122.
Long Statement,ServiceStack.FluentValidation.TestHelper,ValidationTestExtension,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\TestHelper\ValidatorTestExtensions.cs,ShouldHaveChildValidator,The length of the statement  "				var childValidatorNames = childValidatorTypes.Any() ? string.Join("' "' childValidatorTypes.Select(x => x.Name)) : "none"; " is 122.
Long Statement,ServiceStack.FluentValidation.TestHelper,ValidationTestExtension,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\TestHelper\ValidatorTestExtensions.cs,ShouldHaveChildValidator,The length of the statement  "				throw new ValidationTestException(string.Format("Expected property '{0}' to have a child validator of type '{1}.'. Instead found '{2}'"' expressionMemberName' childValidatorType.Name' childValidatorNames)); " is 206.
Long Statement,ServiceStack.FluentValidation.TestHelper,ValidationTestExtension,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\TestHelper\ValidatorTestExtensions.cs,WithSeverity,The length of the statement  "			return failures.When(failure => failure.Severity == expectedSeverity' string.Format("Expected a severity of '{0}'. Actual severity was '{{Severity}}'"' expectedSeverity)); " is 171.
Long Statement,ServiceStack.FluentValidation.TestHelper,ValidationTestExtension,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\TestHelper\ValidatorTestExtensions.cs,WithCustomState,The length of the statement  "			return failures.When(failure => failure.CustomState == expectedCustomState' string.Format("Expected custom state of '{0}'. Actual state was '{{State}}'"' expectedCustomState)); " is 176.
Long Statement,ServiceStack.FluentValidation.TestHelper,ValidationTestExtension,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\TestHelper\ValidatorTestExtensions.cs,WithErrorMessage,The length of the statement  "			return failures.When(failure => failure.ErrorMessage == expectedErrorMessage' string.Format("Expected an error message of '{0}'. Actual message was '{{Message}}'"' expectedErrorMessage)); " is 187.
Long Statement,ServiceStack.FluentValidation.TestHelper,ValidationTestExtension,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\TestHelper\ValidatorTestExtensions.cs,WithErrorCode,The length of the statement  "			return failures.When(failure => failure.ErrorCode == expectedErrorCode' string.Format("Expected an error code of '{0}'. Actual error code was '{{Code}}'"' expectedErrorCode)); " is 175.
Long Statement,ServiceStack.FluentValidation.TestHelper,ValidationTestExtension,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\TestHelper\ValidatorTestExtensions.cs,WithoutSeverity,The length of the statement  "			return failures.WhenAll(failure => failure.Severity != unexpectedSeverity' string.Format("Found an unexpected severity of '{0}'"' unexpectedSeverity)); " is 151.
Long Statement,ServiceStack.FluentValidation.TestHelper,ValidationTestExtension,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\TestHelper\ValidatorTestExtensions.cs,WithoutCustomState,The length of the statement  "			return failures.WhenAll(failure => failure.CustomState != unexpectedCustomState' string.Format("Found an unexpected custom state of '{0}'"' unexpectedCustomState)); " is 164.
Long Statement,ServiceStack.FluentValidation.TestHelper,ValidationTestExtension,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\TestHelper\ValidatorTestExtensions.cs,WithoutErrorMessage,The length of the statement  "			return failures.WhenAll(failure => failure.ErrorMessage != unexpectedErrorMessage' string.Format("Found an unexpected error message of '{0}'"' unexpectedErrorMessage)); " is 168.
Long Statement,ServiceStack.FluentValidation.TestHelper,ValidationTestExtension,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\TestHelper\ValidatorTestExtensions.cs,WithoutErrorCode,The length of the statement  "			return failures.WhenAll(failure => failure.ErrorCode != unexpectedErrorCode' string.Format("Found an unexpected error code of '{0}'"' unexpectedErrorCode)); " is 156.
Long Statement,ServiceStack.Host,RestPath,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\RestPath.cs,CreateRequest,The length of the statement  "                    throw new ArgumentException($"Path Mismatch: Request Path '{pathInfo}' has invalid number of components compared to: '{this.Path}'"); " is 133.
Long Statement,ServiceStack.Host,RouteNamingConvention,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\RouteNamingConvention.cs,WithRequestDtoName,The length of the statement  "            routes.Add(requestType' restPath: $"/{requestType.GetOperationName()}"' verbs: allowedVerbs' priority: AutoGenPriority); " is 120.
Long Statement,ServiceStack.Host,ServiceController,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\ServiceController.cs,RegisterRestPath,The length of the statement  "                throw new ArgumentException($"Route '{restPath.Path}' on '{restPath.RequestType.GetOperationName()}' must start with a '/'"); " is 125.
Long Statement,ServiceStack.Host,ServiceController,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\ServiceController.cs,RegisterRestPath,The length of the statement  "                throw new ArgumentException($"Route '{restPath.Path}' on '{restPath.RequestType.GetOperationName()}' contains invalid chars. " + " is 128.
Long Statement,ServiceStack.Host,ServiceController,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\ServiceController.cs,AddToRequestExecMap,The length of the statement  "                    $"Could not register Request '{requestType.FullName}' with service '{serviceType.FullName}' as it has already been assigned to another service.\n" + " is 148.
Long Statement,ServiceStack.Host,ServiceMetadata,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\ServiceMetadata.cs,Add,The length of the statement  "                RequiresAnyPermission = authAttrs.OfType<RequiresAnyPermissionAttribute>().SelectMany(x => x.RequiredPermissions).ToList()' " is 123.
Long Statement,ServiceStack.Host,ServiceMetadata,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\ServiceMetadata.cs,IsAuthorized,The length of the statement  "                if (!operation.RequiredPermissions.IsEmpty() && !operation.RequiredPermissions.All(x => session.HasPermission(x' authRepo))) " is 124.
Long Statement,ServiceStack.Host,ServiceMetadata,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\ServiceMetadata.cs,IsAuthorized,The length of the statement  "                if (!operation.RequiresAnyPermission.IsEmpty() && !operation.RequiresAnyPermission.Any(x => session.HasPermission(x' authRepo))) " is 128.
Long Statement,ServiceStack.Host,ServiceRoutes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\ServiceRoutes.cs,HasExistingRoute,The length of the statement  "                var existingRouteMsg = "Existing Route for '{0}' at '{1}' already exists".Fmt(requestType.GetOperationName()' restPath); " is 120.
Long Statement,ServiceStack.Host,ServiceRunner<TRequest>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\ServiceRunner.cs,ExecuteAsync,The length of the statement  "                            $"You can embed its '{response.GetType().Name}' return value in a Response DTO or return as raw data in a string or byte[]"' " is 124.
Long Statement,ServiceStack.Host.Handlers,HttpAsyncTaskHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\Handlers\HttpAsyncTaskHandler.cs,ProcessRequest,The length of the statement  "            Log.Error($"HttpAsyncTaskHandler.ProcessRequest() that should never have been called' was just called from: {Environment.StackTrace}"); " is 135.
Long Statement,ServiceStack.Host.Handlers,RequestInfoHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\Handlers\RequestInfoHandler.cs,GetRequestInfo,The length of the statement  "                VirtualPathProviderFiles = appHost.VirtualFileSources.GetAllMatchingFiles("*").Take(virtualPathCount).Map(x => x.RealPath)' " is 123.
Long Statement,ServiceStack.Host.Handlers,ServiceStackHandlerBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\Handlers\ServiceStackHandlerBase.cs,CreateContentTypeRequestAsync,The length of the statement  "                        Log.DebugFormat($"CreateContentTypeRequest/hasContentBody:{hasContentBody}:{httpReq.Verb}:{contentType}:{httpReq.ContentLength}:{httpReq.GetContentEncoding()}"); " is 161.
Long Statement,ServiceStack.Host.Handlers,SoapHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\Handlers\SoapHandler.cs,ExecuteMessage,The length of the statement  "                    throw new SerializationException($"Error trying to deserialize requestType: {requestType}' xml body: {requestXml}"' ex); " is 120.
Long Statement,ServiceStack.Host.HttpListener,HttpListenerBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\HttpListener\HttpListenerBase.cs,ProcessRequestContext,The length of the statement  "                task = HostContext.Async.ContinueWith(task' x => HandleError(x.Exception' context)' TaskContinuationOptions.OnlyOnFaulted | TaskContinuationOptions.AttachedToParent); " is 166.
Long Statement,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,ScanLines,The length of the statement  "								if (prevline.blockType == BlockType.Blank || m_parentType==BlockType.ol_li || m_parentType==BlockType.ul_li || m_parentType==BlockType.dd) " is 138.
Long Statement,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,BuildList,The length of the statement  "					(lines[i - 1].blockType == BlockType.p || lines[i - 1].blockType == BlockType.ul_li || lines[i - 1].blockType==BlockType.ol_li)) " is 128.
Long Statement,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,BuildList,The length of the statement  "				while (end_of_li < lines.Count - 1 && lines[end_of_li + 1].blockType != BlockType.ul_li && lines[end_of_li + 1].blockType != BlockType.ol_li) " is 141.
Long Statement,ServiceStack.Messaging,BackgroundMqService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Messaging\BackgroundMqService.cs,Get,The length of the statement  "                    if (imsg is Message msg && msg.Meta != null && msg.Meta.TryGetValue(MessageQueueKey' out var msgQ) && msgQ == queueName) " is 120.
Long Statement,ServiceStack.Metadata,BaseMetadataHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Metadata\BaseMetadataHandler.cs,ProcessOperationsAsync,The length of the statement  "                        "<caption><b>Requires Authentication</b><i class='auth' style='display:inline-block;margin:0 0 -4px 5px;'></i></caption>"); " is 123.
Long Statement,ServiceStack.Metadata,BaseMetadataHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Metadata\BaseMetadataHandler.cs,ProcessOperationsAsync,The length of the statement  "                sb.AppendFormat(@"<p>To override the Content-type in your clients' use the HTTP <b>Accept</b> Header' append {1} <b>?format={0}</b></p>"' ContentFormat' overrideExtCopy); " is 170.
Long Statement,ServiceStack.Metadata,CustomMetadataHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Metadata\CustomMetadataHandler.cs,CreateMessage,The length of the statement  "                return $"{{Unable to show example output for type '{dtoType.GetOperationName()}' using the custom '{this.ContentFormat}' filter}}{ex.Message}"; " is 143.
Long Statement,ServiceStack.Metadata,Soap11MetadataHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Metadata\Soap11MetadataHandler.cs,CreateMessage,The length of the statement  "<soap:Envelope xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""> " is 175.
Long Statement,ServiceStack.Metadata,Soap12MetadataHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Metadata\Soap12MetadataHandler.cs,CreateMessage,The length of the statement  "<soap12:Envelope xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:soap12=""http://www.w3.org/2003/05/soap-envelope""> " is 177.
Long Statement,ServiceStack.Metadata,WsdlMetadataHandlerBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Metadata\WsdlMetadataHandlerBase.cs,Execute,The length of the statement  "                var wsdlTemplate = GetWsdlTemplate(operations' baseUri' optimizeForFlash' httpReq.GetBaseUrl()' HostContext.Config.SoapServiceName); " is 132.
Long Statement,ServiceStack.Metadata,WsdlTemplateBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Metadata\WsdlTemplateBase.cs,ToString,The length of the statement  "            var replyEndpointUri = string.Format(this.ReplyEndpointUriTemplate' ServiceName' this.ReplyEndpointUri' replyServiceName); " is 122.
Long Statement,ServiceStack.Metadata,WsdlTemplateBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Metadata\WsdlTemplateBase.cs,ToString,The length of the statement  "                oneWayEndpointUri = string.Format(this.OneWayEndpointUriTemplate' ServiceName' this.OneWayEndpointUri' oneWayServiceName); " is 122.
Long Statement,ServiceStack.NativeTypes.CSharp,CSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\CSharp\CSharpGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}MakeDataContractsExtensible: {1}".Fmt(defaultValue("MakeDataContractsExtensible")' Config.MakeDataContractsExtensible)); " is 138.
Long Statement,ServiceStack.NativeTypes.CSharp,CSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\CSharp\CSharpGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}AddDescriptionAsComments: {1}".Fmt(defaultValue("AddDescriptionAsComments")' Config.AddDescriptionAsComments)); " is 129.
Long Statement,ServiceStack.NativeTypes.CSharp,CSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\CSharp\CSharpGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}AddDataContractAttributes: {1}".Fmt(defaultValue("AddDataContractAttributes")' Config.AddDataContractAttributes)); " is 132.
Long Statement,ServiceStack.NativeTypes.CSharp,CSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\CSharp\CSharpGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}AddIndexesToDataMembers: {1}".Fmt(defaultValue("AddIndexesToDataMembers")' Config.AddIndexesToDataMembers)); " is 126.
Long Statement,ServiceStack.NativeTypes.CSharp,CSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\CSharp\CSharpGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}AddGeneratedCodeAttributes: {1}".Fmt(defaultValue("AddGeneratedCodeAttributes")' Config.AddGeneratedCodeAttributes)); " is 135.
Long Statement,ServiceStack.NativeTypes.CSharp,CSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\CSharp\CSharpGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}InitializeCollections: {1}".Fmt(defaultValue("InitializeCollections")' Config.InitializeCollections)); " is 120.
Long Statement,ServiceStack.NativeTypes.CSharp,CSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\CSharp\CSharpGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}IncludeTypes: {1}".Fmt(defaultValue("IncludeTypes")' Config.IncludeTypes.Safe().ToArray().Join("'"))); " is 120.
Long Statement,ServiceStack.NativeTypes.CSharp,CSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\CSharp\CSharpGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}ExcludeTypes: {1}".Fmt(defaultValue("ExcludeTypes")' Config.ExcludeTypes.Safe().ToArray().Join("'"))); " is 120.
Long Statement,ServiceStack.NativeTypes.CSharp,CSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\CSharp\CSharpGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}AddNamespaces: {1}".Fmt(defaultValue("AddNamespaces")' Config.AddNamespaces.Safe().ToArray().Join("'"))); " is 123.
Long Statement,ServiceStack.NativeTypes.CSharp,CSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\CSharp\CSharpGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}AddDefaultXmlNamespace: {1}".Fmt(defaultValue("AddDefaultXmlNamespace")' Config.AddDefaultXmlNamespace)); " is 123.
Long Statement,ServiceStack.NativeTypes.CSharp,CSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\CSharp\CSharpGenerator.cs,AddConstructor,The length of the statement  "                sb.AppendLine($"{prop.Name.SafeToken()} = new {Type(prop.GetTypeName(Config' allTypes)' prop.GenericArgs'includeNested:true)}{{}};"); " is 133.
Long Statement,ServiceStack.NativeTypes.Dart,DartGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Dart\DartGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}AddDescriptionAsComments: {1}".Fmt(defaultValue("AddDescriptionAsComments")' Config.AddDescriptionAsComments)); " is 129.
Long Statement,ServiceStack.NativeTypes.Dart,DartGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Dart\DartGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}IncludeTypes: {1}".Fmt(defaultValue("IncludeTypes")' Config.IncludeTypes.Safe().ToArray().Join("'"))); " is 120.
Long Statement,ServiceStack.NativeTypes.Dart,DartGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Dart\DartGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}ExcludeTypes: {1}".Fmt(defaultValue("ExcludeTypes")' Config.ExcludeTypes.Safe().ToArray().Join("'"))); " is 120.
Long Statement,ServiceStack.NativeTypes.Dart,DartGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Dart\DartGenerator.cs,GetCode,The length of the statement  "            sbTypeInfos.AppendLine().AppendLine("TypeContext _ctx = new TypeContext(library: '" + dtosName.SafeVarRef() + "'' types: <String' TypeInfo> {"); " is 144.
Long Statement,ServiceStack.NativeTypes.FSharp,FSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\FSharp\FSharpGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}MakeDataContractsExtensible: {1}".Fmt(defaultValue("MakeDataContractsExtensible")' Config.MakeDataContractsExtensible)); " is 138.
Long Statement,ServiceStack.NativeTypes.FSharp,FSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\FSharp\FSharpGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}AddDescriptionAsComments: {1}".Fmt(defaultValue("AddDescriptionAsComments")' Config.AddDescriptionAsComments)); " is 129.
Long Statement,ServiceStack.NativeTypes.FSharp,FSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\FSharp\FSharpGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}AddDataContractAttributes: {1}".Fmt(defaultValue("AddDataContractAttributes")' Config.AddDataContractAttributes)); " is 132.
Long Statement,ServiceStack.NativeTypes.FSharp,FSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\FSharp\FSharpGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}AddIndexesToDataMembers: {1}".Fmt(defaultValue("AddIndexesToDataMembers")' Config.AddIndexesToDataMembers)); " is 126.
Long Statement,ServiceStack.NativeTypes.FSharp,FSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\FSharp\FSharpGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}AddGeneratedCodeAttributes: {1}".Fmt(defaultValue("AddGeneratedCodeAttributes")' Config.AddGeneratedCodeAttributes)); " is 135.
Long Statement,ServiceStack.NativeTypes.FSharp,FSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\FSharp\FSharpGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}IncludeTypes: {1}".Fmt(defaultValue("IncludeTypes")' Config.IncludeTypes.Safe().ToArray().Join("'"))); " is 120.
Long Statement,ServiceStack.NativeTypes.FSharp,FSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\FSharp\FSharpGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}ExcludeTypes: {1}".Fmt(defaultValue("ExcludeTypes")' Config.ExcludeTypes.Safe().ToArray().Join("'"))); " is 120.
Long Statement,ServiceStack.NativeTypes.FSharp,FSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\FSharp\FSharpGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}InitializeCollections: {1}".Fmt(defaultValue("InitializeCollections")' Config.InitializeCollections)); " is 120.
Long Statement,ServiceStack.NativeTypes.FSharp,FSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\FSharp\FSharpGenerator.cs,GetCode,The length of the statement  "            //sb.AppendLine("{0}AddDefaultXmlNamespace: {1}".Fmt(defaultValue("AddDefaultXmlNamespace")' Config.AddDefaultXmlNamespace)); " is 125.
Long Statement,ServiceStack.NativeTypes.FSharp,FSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\FSharp\FSharpGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}AddNamespaces: {1}".Fmt(defaultValue("AddNamespaces")' Config.AddNamespaces.Safe().ToArray().Join("'"))); " is 123.
Long Statement,ServiceStack.NativeTypes.Java,JavaGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Java\JavaGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}AddDescriptionAsComments: {1}".Fmt(DefaultValue("AddDescriptionAsComments")' Config.AddDescriptionAsComments)); " is 129.
Long Statement,ServiceStack.NativeTypes.Java,JavaGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Java\JavaGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}IncludeTypes: {1}".Fmt(DefaultValue("IncludeTypes")' Config.IncludeTypes.Safe().ToArray().Join("'"))); " is 120.
Long Statement,ServiceStack.NativeTypes.Java,JavaGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Java\JavaGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}ExcludeTypes: {1}".Fmt(DefaultValue("ExcludeTypes")' Config.ExcludeTypes.Safe().ToArray().Join("'"))); " is 120.
Long Statement,ServiceStack.NativeTypes.Java,JavaGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Java\JavaGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}TreatTypesAsStrings: {1}".Fmt(DefaultValue("TreatTypesAsStrings")' Config.TreatTypesAsStrings.Safe().ToArray().Join("'"))); " is 141.
Long Statement,ServiceStack.NativeTypes.Java,JavaGeneratorExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Java\JavaGenerator.cs,AppendPropertyAccessor,The length of the statement  "                sb.AppendLine("public {3} set{1}({0} value) {{ this.{2} = value; return this; }}".Fmt(type' accessorName' fieldName' settersReturnThis)); " is 137.
Long Statement,ServiceStack.NativeTypes.Kotlin,KotlinGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Kotlin\KotlinGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}AddDescriptionAsComments: {1}".Fmt(DefaultValue("AddDescriptionAsComments")' Config.AddDescriptionAsComments)); " is 129.
Long Statement,ServiceStack.NativeTypes.Kotlin,KotlinGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Kotlin\KotlinGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}IncludeTypes: {1}".Fmt(DefaultValue("IncludeTypes")' Config.IncludeTypes.Safe().ToArray().Join("'"))); " is 120.
Long Statement,ServiceStack.NativeTypes.Kotlin,KotlinGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Kotlin\KotlinGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}ExcludeTypes: {1}".Fmt(DefaultValue("ExcludeTypes")' Config.ExcludeTypes.Safe().ToArray().Join("'"))); " is 120.
Long Statement,ServiceStack.NativeTypes.Kotlin,KotlinGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Kotlin\KotlinGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}InitializeCollections: {1}".Fmt(DefaultValue("InitializeCollections")' Config.InitializeCollections)); " is 120.
Long Statement,ServiceStack.NativeTypes.Kotlin,KotlinGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Kotlin\KotlinGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}TreatTypesAsStrings: {1}".Fmt(DefaultValue("TreatTypesAsStrings")' Config.TreatTypesAsStrings.Safe().ToArray().Join("'"))); " is 141.
Long Statement,ServiceStack.NativeTypes,MetadataTypesGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\NativeTypesMetadata.cs,GetMetadataTypes,The length of the statement  "                if ((!(t.IsSystemType() && !t.IsTuple()) && (t.IsClass || t.IsEnum || t.IsInterface) && !t.IsGenericParameter) || exportTypes.ContainsMatch(t)) " is 143.
Long Statement,ServiceStack.NativeTypes,MetadataExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\NativeTypesMetadata.cs,GetTypeName,The length of the statement  "            //Whether or not to emit the Struct Type Name' info: https://github.com/ServiceStack/Issues/issues/503#issuecomment-262133343 " is 125.
Long Statement,ServiceStack.NativeTypes.Swift,SwiftGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Swift\SwiftGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}IncludeTypes: {1}".Fmt(DefaultValue("IncludeTypes")' Config.IncludeTypes.Safe().ToArray().Join("'"))); " is 120.
Long Statement,ServiceStack.NativeTypes.Swift,SwiftGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Swift\SwiftGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}ExcludeTypes: {1}".Fmt(DefaultValue("ExcludeTypes")' Config.ExcludeTypes.Safe().ToArray().Join("'"))); " is 120.
Long Statement,ServiceStack.NativeTypes.Swift,SwiftGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Swift\SwiftGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}ExcludeGenericBaseTypes: {1}".Fmt(DefaultValue("ExcludeGenericBaseTypes")' Config.ExcludeGenericBaseTypes)); " is 126.
Long Statement,ServiceStack.NativeTypes.Swift,SwiftGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Swift\SwiftGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}AddDescriptionAsComments: {1}".Fmt(DefaultValue("AddDescriptionAsComments")' Config.AddDescriptionAsComments)); " is 129.
Long Statement,ServiceStack.NativeTypes.Swift,SwiftGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Swift\SwiftGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}InitializeCollections: {1}".Fmt(DefaultValue("InitializeCollections")' Config.InitializeCollections)); " is 120.
Long Statement,ServiceStack.NativeTypes.Swift,SwiftGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Swift\SwiftGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}TreatTypesAsStrings: {1}".Fmt(DefaultValue("TreatTypesAsStrings")' Config.TreatTypesAsStrings.Safe().ToArray().Join("'"))); " is 141.
Long Statement,ServiceStack.NativeTypes.Swift,SwiftGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Swift\SwiftGenerator.cs,AppendType,The length of the statement  "                sb.AppendLine("//Excluded {0} : {1}<{2}>".Fmt(type.Name' type.Inherits.Name.LeftPart('`')' string.Join("'"' type.Inherits.GenericArgs))); " is 137.
Long Statement,ServiceStack.NativeTypes.TypeScript,TypeScriptGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\TypeScript\TypeScriptGenerator.cs,GetCode,The length of the statement  "                sb.AppendLine("{0}MakePropertiesOptional: {1}".Fmt(defaultValue("MakePropertiesOptional")' Config.MakePropertiesOptional)); " is 123.
Long Statement,ServiceStack.NativeTypes.TypeScript,TypeScriptGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\TypeScript\TypeScriptGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}AddDescriptionAsComments: {1}".Fmt(defaultValue("AddDescriptionAsComments")' Config.AddDescriptionAsComments)); " is 129.
Long Statement,ServiceStack.NativeTypes.TypeScript,TypeScriptGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\TypeScript\TypeScriptGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}IncludeTypes: {1}".Fmt(defaultValue("IncludeTypes")' Config.IncludeTypes.Safe().ToArray().Join("'"))); " is 120.
Long Statement,ServiceStack.NativeTypes.TypeScript,TypeScriptGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\TypeScript\TypeScriptGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}ExcludeTypes: {1}".Fmt(defaultValue("ExcludeTypes")' Config.ExcludeTypes.Safe().ToArray().Join("'"))); " is 120.
Long Statement,ServiceStack.NativeTypes.VbNet,VbNetGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\VbNet\VbNetGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}MakeDataContractsExtensible: {1}".Fmt(DefaultValue("MakeDataContractsExtensible")' Config.MakeDataContractsExtensible)); " is 138.
Long Statement,ServiceStack.NativeTypes.VbNet,VbNetGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\VbNet\VbNetGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}AddDescriptionAsComments: {1}".Fmt(DefaultValue("AddDescriptionAsComments")' Config.AddDescriptionAsComments)); " is 129.
Long Statement,ServiceStack.NativeTypes.VbNet,VbNetGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\VbNet\VbNetGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}AddDataContractAttributes: {1}".Fmt(DefaultValue("AddDataContractAttributes")' Config.AddDataContractAttributes)); " is 132.
Long Statement,ServiceStack.NativeTypes.VbNet,VbNetGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\VbNet\VbNetGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}AddIndexesToDataMembers: {1}".Fmt(DefaultValue("AddIndexesToDataMembers")' Config.AddIndexesToDataMembers)); " is 126.
Long Statement,ServiceStack.NativeTypes.VbNet,VbNetGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\VbNet\VbNetGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}AddGeneratedCodeAttributes: {1}".Fmt(DefaultValue("AddGeneratedCodeAttributes")' Config.AddGeneratedCodeAttributes)); " is 135.
Long Statement,ServiceStack.NativeTypes.VbNet,VbNetGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\VbNet\VbNetGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}InitializeCollections: {1}".Fmt(DefaultValue("InitializeCollections")' Config.InitializeCollections)); " is 120.
Long Statement,ServiceStack.NativeTypes.VbNet,VbNetGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\VbNet\VbNetGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}IncludeTypes: {1}".Fmt(DefaultValue("IncludeTypes")' Config.IncludeTypes.Safe().ToArray().Join("' "))); " is 121.
Long Statement,ServiceStack.NativeTypes.VbNet,VbNetGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\VbNet\VbNetGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}ExcludeTypes: {1}".Fmt(DefaultValue("ExcludeTypes")' Config.ExcludeTypes.Safe().ToArray().Join("' "))); " is 121.
Long Statement,ServiceStack.NativeTypes.VbNet,VbNetGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\VbNet\VbNetGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}AddNamespaces: {1}".Fmt(DefaultValue("AddNamespaces")' Config.AddNamespaces.Safe().ToArray().Join("'"))); " is 123.
Long Statement,ServiceStack.NativeTypes.VbNet,VbNetGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\VbNet\VbNetGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}AddDefaultXmlNamespace: {1}".Fmt(DefaultValue("AddDefaultXmlNamespace")' Config.AddDefaultXmlNamespace)); " is 123.
Long Statement,ServiceStack.NativeTypes.VbNet,VbNetGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\VbNet\VbNetGenerator.cs,AddProperties,The length of the statement  "                sb.AppendLine("Public {0}Property ExtensionData As ExtensionDataObject Implements IExtensibleDataObject.ExtensionData".Fmt(@virtual)); " is 134.
Long Statement,ServiceStack.Platforms,PlatformNet,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Platforms\PlatformNet.Config.cs,InferHttpHandlerPath,The length of the statement  "                        + "Check with https://docs.servicestack.net/create-your-first-webservice to ensure you have configured ServiceStack properly.\n" " is 128.
Long Statement,ServiceStack.Validation,ValidationExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Validation\ValidationFeature.cs,HasAsyncValidators,The length of the statement  "                    if (rule.Validators.Any(x => x is AsyncPredicateValidator || x is AsyncValidatorBase ||  x.ShouldValidateAsync(context))) " is 121.
Complex Conditional,ServiceStack,QueryDataSource<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\AutoQueryDataFeature.cs,SelectAggregate,The conditional expression  "name != "COUNT" && name != "MIN" && name != "MAX" && name != "AVG" && name != "SUM"                  && name != "FIRST" && name != "LAST""  is complex.
Complex Conditional,ServiceStack,TypedQueryData<QueryModel;From>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\AutoQueryDataFeature.cs,AppendLimits,The conditional expression  "(dto.Skip != null || dto.Take != null)                  && (options != null && options.OrderByPrimaryKeyOnLimitQuery)"  is complex.
Complex Conditional,ServiceStack,CompressResponseAttribute,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\CompressResponseAttribute.cs,ExecuteAsync,The conditional expression  "src == null || src is IPartialWriter || src is IPartialWriterAsync || src is IStreamWriter || src is IStreamWriterAsync"  is complex.
Complex Conditional,ServiceStack,HttpCacheFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpCacheFeature.cs,HandleCacheResponses,The conditional expression  "(req.Verb != HttpMethods.Get && req.Verb != HttpMethods.Head) ||                  (httpResult.StatusCode != HttpStatusCode.OK && httpResult.StatusCode != HttpStatusCode.NotModified)"  is complex.
Complex Conditional,ServiceStack,HttpCacheFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpCacheFeature.cs,CacheAndWriteResponse,The conditional expression  "dto == null || dto is IPartialWriter || dto is IPartialWriterAsync || dto is IStreamWriter || dto is IStreamWriterAsync"  is complex.
Complex Conditional,ServiceStack,HttpHandlerFactory,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpHandlerFactory.cs,Init,The conditional expression  "!isIntegratedPipeline && isAspNetHost && !hostedAtRootPath && !Env.IsMono"  is complex.
Complex Conditional,ServiceStack,HttpHandlerFactory,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpHandlerFactory.cs,GetHandler,The conditional expression  "matchesFallback == null || matchesFallback.Priority > 0 ||                       (matchesFallback.MatchRule == null && !(matchesFallback.Priority < 0))"  is complex.
Complex Conditional,ServiceStack,HttpHandlerFactory,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpHandlerFactory.cs,GetHandler,The conditional expression  "matchesFallback == null || matchesFallback.Priority > 0 ||                       (matchesFallback.MatchRule == null && !(matchesFallback.Priority < 0))"  is complex.
Complex Conditional,ServiceStack,HttpResponseExtensionsInternal,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpResponseExtensionsInternal.cs,WriteErrorToResponse,The conditional expression  "(httpRes.ContentType == null || httpRes.ContentType == MimeTypes.Html)                       && contentType != null && contentType != httpRes.ContentType"  is complex.
Complex Conditional,ServiceStack,MemoryServerEvents,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,DoAsyncTasks,The conditional expression  "pendingAsyncTasks.IsEmpty && pendingSubscriptionUpdates.IsEmpty && pendingUnSubscriptions.IsEmpty && expiredSubs.IsEmpty"  is complex.
Complex Conditional,ServiceStack,SharpApiService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\SharpPagesFeature.cs,Any,The conditional expression  "feature.ApiDefaultContentType != null &&                  !hasPathContentType &&                  !hasPageContentType &&                  base.Request.QueryString[ScriptConstants.Format] == null && base.Request.ResponseContentType == MimeTypes.Html"  is complex.
Complex Conditional,ServiceStack,WebSudoRequiredAttribute,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\WebSudoRequiredAttribute.cs,ExecuteAsync,The conditional expression  "session != null && session.HasRole("Admin"' authRepo)                      || (this.HasWebSudo(req' session as IWebSudoAuthSession)                      || this.DoHtmlRedirectAccessDeniedIfConfigured(req' res))"  is complex.
Complex Conditional,ServiceStack.Auth,JwtAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProvider.cs,Execute,The conditional expression  "shouldReturnTokens && SetBearerTokenOnAuthenticateResponse && authContext.AuthResponse.BearerToken == null && session.IsAuthenticated"  is complex.
Complex Conditional,ServiceStack.Auth,OAuthUtils,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\OAuthAuthorizer.cs,PercentEncode,The conditional expression  "(c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9') || c == '-' || c == '_' || c == '.' || c == '~'"  is complex.
Complex Conditional,Funq,Container,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ContainerNetCoreExtensions.cs,GetEntry,The conditional expression  "CheckAdapterFirst                      && Adapter != null                      && typeof(TService) != typeof(IRequest)                      && !Equals(default(TService)' (resolved = Adapter.TryResolve<TService>()))"  is complex.
Complex Conditional,ServiceStack.FluentValidation.Internal,Comparer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\Comparer.cs,Compare,The conditional expression  "value is decimal || valueToCompare is decimal ||  				    value is double || valueToCompare is double ||  				    value is float || valueToCompare is float"  is complex.
Complex Conditional,ServiceStack.FluentValidation.Internal,Extensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\Extensions.cs,SplitPascalCase,The conditional expression  "(i > 1 && !char.IsUpper(input[i - 1]))  							|| (i + 1 < input.Length && !char.IsUpper(input[i + 1]))"  is complex.
Complex Conditional,ServiceStack.Host,ServiceController,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\ServiceController.cs,IsServiceAction,The conditional expression  "!HttpMethods.AllVerbs.Contains(actionName) &&                  actionName != ActionContext.AnyAction &&                  !HttpMethods.AllVerbs.Any(verb =>                      ContentTypes.KnownFormats.Any(format => actionName.EqualsIgnoreCase(verb + format))) &&                  !ContentTypes.KnownFormats.Any(format => actionName.EqualsIgnoreCase(ActionContext.AnyAction + format))"  is complex.
Complex Conditional,ServiceStack.Host,ServiceExec<TService>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\ServiceExec.cs,Execute,The conditional expression  "execMap.TryGetValue(ActionContext.Key(actionName + format' requestName)' out var action) ||                  execMap.TryGetValue(ActionContext.AnyFormatKey(format' requestName)' out action) ||                  execMap.TryGetValue(ActionContext.Key(actionName' requestName)' out action) ||                  execMap.TryGetValue(ActionContext.AnyKey(requestName)' out action)"  is complex.
Complex Conditional,ServiceStack.Host.Handlers,ServiceStackHandlerBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\Handlers\ServiceStackHandlerBase.cs,DeserializeHttpRequestAsync,The conditional expression  "!hasRequestBody                  && (httpMethod == HttpMethods.Get || httpMethod == HttpMethods.Delete ||                       httpMethod == HttpMethods.Options || httpMethod == HttpMethods.Head)"  is complex.
Complex Conditional,ServiceStack.Host.HttpListener,ListenerRequest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\HttpListener\ListenerRequest.cs,IsInvalidString,The conditional expression  "next == '!' || next < ' '                          || (next >= 'a' && next <= 'z')                          || (next >= 'A' && next <= 'Z')"  is complex.
Complex Conditional,ServiceStack.Html,JSMinifier,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.js.cs,action,The conditional expression  "(theY == '\n' || theY == ' ') &&              (theA == '+' || theA == '-' || theA == '*' || theA == '/') &&              (theB == '+' || theB == '-' || theB == '*' || theB == '/')"  is complex.
Complex Conditional,ServiceStack.Html,JSMinifier,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.js.cs,action,The conditional expression  "theB == '/' && (              theA == '(' || theA == ''' || theA == '=' || theA == ':' ||              theA == '[' || theA == '!' || theA == '&' || theA == '|' ||              theA == '?' || theA == '+' || theA == '-' || theA == '~' ||              theA == '*' || theA == '/' || theA == '{' || theA == '\n'          )"  is complex.
Complex Conditional,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,ScanLines,The conditional expression  "prevline.blockType == BlockType.Blank || m_parentType==BlockType.ol_li || m_parentType==BlockType.ul_li || m_parentType==BlockType.dd"  is complex.
Complex Conditional,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,EvaluateLine,The conditional expression  "(ch == '*' || ch == '+' || ch == '-') && IsLineSpace(CharAtOffset(1))"  is complex.
Complex Conditional,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,ScanHtml,The conditional expression  "!bHeadBlock && !tag.closing && m_markdown.ExtraMode && !bHasUnsafeContent"  is complex.
Complex Conditional,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,BuildList,The conditional expression  "(lines[i].blockType == BlockType.p) &&  					(lines[i - 1].blockType == BlockType.p || lines[i - 1].blockType == BlockType.ul_li || lines[i - 1].blockType==BlockType.ol_li)"  is complex.
Complex Conditional,MarkdownDeep,HtmlTag,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\HtmlTag.cs,ParseHelper,The conditional expression  "!p.eof && !char.IsWhiteSpace(p.current) && p.current != '>' && p.current != '/'"  is complex.
Complex Conditional,MarkdownDeep,LinkDefinition,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\LinkDefinition.cs,ParseLinkTarget,The conditional expression  "(id == null && p.current != ')') ||  							(id != null && !p.eol)"  is complex.
Complex Conditional,MarkdownDeep,Markdown,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\MardownDeep.cs,OnPrepareLink,The conditional expression  "(NewWindowForExternalLinks && Utils.IsUrlFullyQualified(url)) ||  				 (NewWindowForLocalLinks && !Utils.IsUrlFullyQualified(url))"  is complex.
Complex Conditional,MarkdownDeep,SpanFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\SpanFormatter.cs,MakeID,The conditional expression  "char.IsLetterOrDigit(ch) || ch=='_' || ch=='-' || ch=='.'"  is complex.
Complex Conditional,MarkdownDeep,StringScanner,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\StringScanner.cs,SkipFootnoteID,The conditional expression  "char.IsLetterOrDigit(ch) || ch == '-' || ch == '_' || ch == ':' || ch == '.' || ch == ' '"  is complex.
Complex Conditional,MarkdownDeep,Utils,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\Utils.cs,ParseIdentifier,The conditional expression  "pos < str.Length && (char.IsDigit(str[pos]) || char.IsLetter(str[pos]) || str[pos] == '_')"  is complex.
Complex Conditional,MarkdownDeep,Utils,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\Utils.cs,SkipHtmlEntity,The conditional expression  "!(char.IsDigit(ch) || (ch >= 'a' && ch <= 'f') || (ch >= 'A' && ch <= 'F'))"  is complex.
Complex Conditional,MarkdownDeep,Utils,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\Utils.cs,IsValidHtmlID,The conditional expression  "Char.IsLetterOrDigit(ch) || ch == '_' || ch == '-' || ch == ':' || ch == '.'"  is complex.
Complex Conditional,ServiceStack.Messaging,BackgroundMqService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Messaging\BackgroundMqService.cs,Get,The conditional expression  "imsg is Message msg && msg.Meta != null && msg.Meta.TryGetValue(MessageQueueKey' out var msgQ) && msgQ == queueName"  is complex.
Complex Conditional,ServiceStack.NativeTypes.CSharp,CSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\CSharp\CSharpGenerator.cs,AppendAttributes,The conditional expression  "(attr.Args == null || attr.Args.Count == 0)                      && (attr.ConstructorArgs == null || attr.ConstructorArgs.Count == 0)"  is complex.
Complex Conditional,ServiceStack.NativeTypes.CSharp,CSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\CSharp\CSharpGenerator.cs,AppendDataMember,The conditional expression  "dmMeta.Name != null                  || dmMeta.Order != null                  || dmMeta.IsRequired != null                  || dmMeta.EmitDefaultValue != null                  || Config.AddIndexesToDataMembers"  is complex.
Complex Conditional,ServiceStack.NativeTypes.Dart,DartGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Dart\DartGenerator.cs,AppendAttributes,The conditional expression  "(attr.Args == null || attr.Args.Count == 0)                      && (attr.ConstructorArgs == null || attr.ConstructorArgs.Count == 0)"  is complex.
Complex Conditional,ServiceStack.NativeTypes.Dart,DartGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Dart\DartGenerator.cs,AppendDataMember,The conditional expression  "dmMeta.Name != null                  || dmMeta.Order != null                  || dmMeta.IsRequired != null                  || dmMeta.EmitDefaultValue != null                  || Config.AddIndexesToDataMembers"  is complex.
Complex Conditional,ServiceStack.NativeTypes.FSharp,FSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\FSharp\FSharpGenerator.cs,AppendAttributes,The conditional expression  "(attr.Args == null || attr.Args.Count == 0)                      && (attr.ConstructorArgs == null || attr.ConstructorArgs.Count == 0)"  is complex.
Complex Conditional,ServiceStack.NativeTypes.FSharp,FSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\FSharp\FSharpGenerator.cs,AppendDataMember,The conditional expression  "dmMeta.Name != null                  || dmMeta.Order != null                  || dmMeta.IsRequired != null                  || dmMeta.EmitDefaultValue != null                  || Config.AddIndexesToDataMembers"  is complex.
Complex Conditional,ServiceStack.NativeTypes.Java,JavaGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Java\JavaGenerator.cs,AppendAttributes,The conditional expression  "(attr.Args == null || attr.Args.Count == 0)                      && (attr.ConstructorArgs == null || attr.ConstructorArgs.Count == 0)"  is complex.
Complex Conditional,ServiceStack.NativeTypes.Java,JavaGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Java\JavaGenerator.cs,AppendDataMember,The conditional expression  "dmMeta.Name != null                  || dmMeta.Order != null                  || dmMeta.IsRequired != null                  || dmMeta.EmitDefaultValue != null                  || Config.AddIndexesToDataMembers"  is complex.
Complex Conditional,ServiceStack.NativeTypes.Kotlin,KotlinGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Kotlin\KotlinGenerator.cs,AppendAttributes,The conditional expression  "(attr.Args == null || attr.Args.Count == 0)                      && (attr.ConstructorArgs == null || attr.ConstructorArgs.Count == 0)"  is complex.
Complex Conditional,ServiceStack.NativeTypes.Kotlin,KotlinGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Kotlin\KotlinGenerator.cs,AppendDataMember,The conditional expression  "dmMeta.Name != null                  || dmMeta.Order != null                  || dmMeta.IsRequired != null                  || dmMeta.EmitDefaultValue != null                  || Config.AddIndexesToDataMembers"  is complex.
Complex Conditional,ServiceStack.NativeTypes,MetadataTypesGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\NativeTypesMetadata.cs,GetMetadataTypes,The conditional expression  "(!(t.IsSystemType() && !t.IsTuple()) && (t.IsClass || t.IsEnum || t.IsInterface) && !t.IsGenericParameter) || exportTypes.ContainsMatch(t)"  is complex.
Complex Conditional,ServiceStack.NativeTypes,MetadataTypesGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\NativeTypesMetadata.cs,ToType,The conditional expression  "type.BaseType != null &&                   type.BaseType != typeof(object) &&                   type.BaseType != typeof(ValueType) &&                  !type.IsEnum &&                   !type.HasInterface(typeof(IService))"  is complex.
Complex Conditional,ServiceStack.NativeTypes.Swift,SwiftGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Swift\SwiftGenerator.cs,AppendAttributes,The conditional expression  "(attr.Args == null || attr.Args.Count == 0)                      && (attr.ConstructorArgs == null || attr.ConstructorArgs.Count == 0)"  is complex.
Complex Conditional,ServiceStack.NativeTypes.Swift,SwiftGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Swift\SwiftGenerator.cs,AppendDataMember,The conditional expression  "dmMeta.Name != null                  || dmMeta.Order != null                  || dmMeta.IsRequired != null                  || dmMeta.EmitDefaultValue != null                  || Config.AddIndexesToDataMembers"  is complex.
Complex Conditional,ServiceStack.NativeTypes.TypeScript,TypeScriptGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\TypeScript\TypeScriptGenerator.cs,AppendAttributes,The conditional expression  "(attr.Args == null || attr.Args.Count == 0)                      && (attr.ConstructorArgs == null || attr.ConstructorArgs.Count == 0)"  is complex.
Complex Conditional,ServiceStack.NativeTypes.TypeScript,TypeScriptGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\TypeScript\TypeScriptGenerator.cs,AppendDataMember,The conditional expression  "dmMeta.Name != null                  || dmMeta.Order != null                  || dmMeta.IsRequired != null                  || dmMeta.EmitDefaultValue != null                  || Config.AddIndexesToDataMembers"  is complex.
Complex Conditional,ServiceStack.NativeTypes.VbNet,VbNetGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\VbNet\VbNetGenerator.cs,AppendAttributes,The conditional expression  "(attr.Args == null || attr.Args.Count == 0)                      && (attr.ConstructorArgs == null || attr.ConstructorArgs.Count == 0)"  is complex.
Complex Conditional,ServiceStack.NativeTypes.VbNet,VbNetGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\VbNet\VbNetGenerator.cs,AppendDataMember,The conditional expression  "dmMeta.Name != null                  || dmMeta.Order != null                  || dmMeta.IsRequired != null                  || dmMeta.EmitDefaultValue != null                  || Config.AddIndexesToDataMembers"  is complex.
Complex Conditional,ServiceStack.Support.WebHost,GzipOptimizationTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Support\WebHost\GzipOptimizationTest.cs,HasSupport,The conditional expression  "value[0] == 'g' && value[1] == 'z' && value[2] == 'i' && value[3] == 'p'"  is complex.
Complex Conditional,ServiceStack.Support.WebHost,GzipOptimizationTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Support\WebHost\GzipOptimizationTest.cs,HasSupport,The conditional expression  "(value[i] == 'g' || value[i] == 'G') &&                              (value[i + 1] == 'z' || value[i + 1] == 'Z') &&                              (value[i + 2] == 'i' || value[i + 2] == 'I') &&                              (value[i + 3] == 'p' || value[i + 3] == 'P')"  is complex.
Virtual Method Call from Constructor,ServiceStack.Auth,ApiKeyAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\ApiKeyAuthProvider.cs,ApiKeyAuthProvider,The constructor "ApiKeyAuthProvider" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.Auth,ApiKeyAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\ApiKeyAuthProvider.cs,ApiKeyAuthProvider,The constructor "ApiKeyAuthProvider" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.Auth,JwtAuthProviderReader,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProviderReader.cs,JwtAuthProviderReader,The constructor "JwtAuthProviderReader" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.Auth,JwtAuthProviderReader,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProviderReader.cs,JwtAuthProviderReader,The constructor "JwtAuthProviderReader" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.Auth,RegistrationValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\RegisterService.cs,RegistrationValidator,The constructor "RegistrationValidator" calls a virtual method "GetAuthRepository".
Virtual Method Call from Constructor,ServiceStack.Auth,RegistrationValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\RegisterService.cs,RegistrationValidator,The constructor "RegistrationValidator" calls a virtual method "GetAuthRepository".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,AlbanianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\AlbanianLanguage.cs,AlbanianLanguage,The constructor "AlbanianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,AlbanianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\AlbanianLanguage.cs,AlbanianLanguage,The constructor "AlbanianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,AlbanianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\AlbanianLanguage.cs,AlbanianLanguage,The constructor "AlbanianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,AlbanianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\AlbanianLanguage.cs,AlbanianLanguage,The constructor "AlbanianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,AlbanianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\AlbanianLanguage.cs,AlbanianLanguage,The constructor "AlbanianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,ArabicLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\ArabicLanguage.cs,ArabicLanguage,The constructor "ArabicLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,ArabicLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\ArabicLanguage.cs,ArabicLanguage,The constructor "ArabicLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,ArabicLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\ArabicLanguage.cs,ArabicLanguage,The constructor "ArabicLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,ArabicLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\ArabicLanguage.cs,ArabicLanguage,The constructor "ArabicLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,ArabicLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\ArabicLanguage.cs,ArabicLanguage,The constructor "ArabicLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,ChineseSimplifiedLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\ChineseSimplifiedLanguage.cs,ChineseSimplifiedLanguage,The constructor "ChineseSimplifiedLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,ChineseSimplifiedLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\ChineseSimplifiedLanguage.cs,ChineseSimplifiedLanguage,The constructor "ChineseSimplifiedLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,ChineseSimplifiedLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\ChineseSimplifiedLanguage.cs,ChineseSimplifiedLanguage,The constructor "ChineseSimplifiedLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,ChineseSimplifiedLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\ChineseSimplifiedLanguage.cs,ChineseSimplifiedLanguage,The constructor "ChineseSimplifiedLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,ChineseSimplifiedLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\ChineseSimplifiedLanguage.cs,ChineseSimplifiedLanguage,The constructor "ChineseSimplifiedLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,ChineseTraditionalLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\ChineseTraditionalLanguage.cs,ChineseTraditionalLanguage,The constructor "ChineseTraditionalLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,ChineseTraditionalLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\ChineseTraditionalLanguage.cs,ChineseTraditionalLanguage,The constructor "ChineseTraditionalLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,ChineseTraditionalLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\ChineseTraditionalLanguage.cs,ChineseTraditionalLanguage,The constructor "ChineseTraditionalLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,ChineseTraditionalLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\ChineseTraditionalLanguage.cs,ChineseTraditionalLanguage,The constructor "ChineseTraditionalLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,ChineseTraditionalLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\ChineseTraditionalLanguage.cs,ChineseTraditionalLanguage,The constructor "ChineseTraditionalLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,CroatianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\CroatianLanguage.cs,CroatianLanguage,The constructor "CroatianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,CroatianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\CroatianLanguage.cs,CroatianLanguage,The constructor "CroatianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,CroatianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\CroatianLanguage.cs,CroatianLanguage,The constructor "CroatianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,CroatianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\CroatianLanguage.cs,CroatianLanguage,The constructor "CroatianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,CroatianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\CroatianLanguage.cs,CroatianLanguage,The constructor "CroatianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,CzechLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\CzechLanguage.cs,CzechLanguage,The constructor "CzechLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,CzechLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\CzechLanguage.cs,CzechLanguage,The constructor "CzechLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,CzechLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\CzechLanguage.cs,CzechLanguage,The constructor "CzechLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,CzechLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\CzechLanguage.cs,CzechLanguage,The constructor "CzechLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,CzechLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\CzechLanguage.cs,CzechLanguage,The constructor "CzechLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,DanishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\DanishLanguage.cs,DanishLanguage,The constructor "DanishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,DanishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\DanishLanguage.cs,DanishLanguage,The constructor "DanishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,DanishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\DanishLanguage.cs,DanishLanguage,The constructor "DanishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,DanishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\DanishLanguage.cs,DanishLanguage,The constructor "DanishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,DanishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\DanishLanguage.cs,DanishLanguage,The constructor "DanishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,DutchLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\DutchLanguage.cs,DutchLanguage,The constructor "DutchLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,DutchLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\DutchLanguage.cs,DutchLanguage,The constructor "DutchLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,DutchLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\DutchLanguage.cs,DutchLanguage,The constructor "DutchLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,DutchLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\DutchLanguage.cs,DutchLanguage,The constructor "DutchLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,DutchLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\DutchLanguage.cs,DutchLanguage,The constructor "DutchLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,EnglishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\EnglishLanguage.cs,EnglishLanguage,The constructor "EnglishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,EnglishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\EnglishLanguage.cs,EnglishLanguage,The constructor "EnglishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,EnglishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\EnglishLanguage.cs,EnglishLanguage,The constructor "EnglishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,EnglishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\EnglishLanguage.cs,EnglishLanguage,The constructor "EnglishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,EnglishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\EnglishLanguage.cs,EnglishLanguage,The constructor "EnglishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,FinnishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\FinnishLanguage.cs,FinnishLanguage,The constructor "FinnishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,FinnishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\FinnishLanguage.cs,FinnishLanguage,The constructor "FinnishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,FinnishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\FinnishLanguage.cs,FinnishLanguage,The constructor "FinnishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,FinnishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\FinnishLanguage.cs,FinnishLanguage,The constructor "FinnishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,FinnishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\FinnishLanguage.cs,FinnishLanguage,The constructor "FinnishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,FrenchLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\FrenchLanguage.cs,FrenchLanguage,The constructor "FrenchLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,FrenchLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\FrenchLanguage.cs,FrenchLanguage,The constructor "FrenchLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,FrenchLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\FrenchLanguage.cs,FrenchLanguage,The constructor "FrenchLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,FrenchLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\FrenchLanguage.cs,FrenchLanguage,The constructor "FrenchLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,FrenchLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\FrenchLanguage.cs,FrenchLanguage,The constructor "FrenchLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,GeorgianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\GeorgianLanguage.cs,GeorgianLanguage,The constructor "GeorgianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,GeorgianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\GeorgianLanguage.cs,GeorgianLanguage,The constructor "GeorgianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,GeorgianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\GeorgianLanguage.cs,GeorgianLanguage,The constructor "GeorgianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,GeorgianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\GeorgianLanguage.cs,GeorgianLanguage,The constructor "GeorgianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,GeorgianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\GeorgianLanguage.cs,GeorgianLanguage,The constructor "GeorgianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,GermanLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\GermanLanguage.cs,GermanLanguage,The constructor "GermanLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,GermanLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\GermanLanguage.cs,GermanLanguage,The constructor "GermanLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,GermanLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\GermanLanguage.cs,GermanLanguage,The constructor "GermanLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,GermanLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\GermanLanguage.cs,GermanLanguage,The constructor "GermanLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,GermanLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\GermanLanguage.cs,GermanLanguage,The constructor "GermanLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,GreekLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\GreekLanguage.cs,GreekLanguage,The constructor "GreekLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,GreekLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\GreekLanguage.cs,GreekLanguage,The constructor "GreekLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,GreekLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\GreekLanguage.cs,GreekLanguage,The constructor "GreekLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,GreekLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\GreekLanguage.cs,GreekLanguage,The constructor "GreekLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,GreekLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\GreekLanguage.cs,GreekLanguage,The constructor "GreekLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,HebrewLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\HebrewLanguage.cs,HebrewLanguage,The constructor "HebrewLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,HebrewLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\HebrewLanguage.cs,HebrewLanguage,The constructor "HebrewLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,HebrewLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\HebrewLanguage.cs,HebrewLanguage,The constructor "HebrewLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,HebrewLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\HebrewLanguage.cs,HebrewLanguage,The constructor "HebrewLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,HebrewLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\HebrewLanguage.cs,HebrewLanguage,The constructor "HebrewLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,HindiLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\HindiLanguage.cs,HindiLanguage,The constructor "HindiLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,HindiLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\HindiLanguage.cs,HindiLanguage,The constructor "HindiLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,HindiLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\HindiLanguage.cs,HindiLanguage,The constructor "HindiLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,HindiLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\HindiLanguage.cs,HindiLanguage,The constructor "HindiLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,HindiLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\HindiLanguage.cs,HindiLanguage,The constructor "HindiLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,HungarianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\HungarianLanguage.cs,HungarianLanguage,The constructor "HungarianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,HungarianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\HungarianLanguage.cs,HungarianLanguage,The constructor "HungarianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,HungarianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\HungarianLanguage.cs,HungarianLanguage,The constructor "HungarianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,HungarianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\HungarianLanguage.cs,HungarianLanguage,The constructor "HungarianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,HungarianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\HungarianLanguage.cs,HungarianLanguage,The constructor "HungarianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,IndonesianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\IndonesianLanguage.cs,IndonesianLanguage,The constructor "IndonesianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,IndonesianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\IndonesianLanguage.cs,IndonesianLanguage,The constructor "IndonesianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,IndonesianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\IndonesianLanguage.cs,IndonesianLanguage,The constructor "IndonesianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,IndonesianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\IndonesianLanguage.cs,IndonesianLanguage,The constructor "IndonesianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,IndonesianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\IndonesianLanguage.cs,IndonesianLanguage,The constructor "IndonesianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,ItalianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\ItalianLanguage.cs,ItalianLanguage,The constructor "ItalianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,ItalianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\ItalianLanguage.cs,ItalianLanguage,The constructor "ItalianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,ItalianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\ItalianLanguage.cs,ItalianLanguage,The constructor "ItalianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,ItalianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\ItalianLanguage.cs,ItalianLanguage,The constructor "ItalianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,ItalianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\ItalianLanguage.cs,ItalianLanguage,The constructor "ItalianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,JapaneseLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\JapaneseLanguage.cs,JapaneseLanguage,The constructor "JapaneseLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,JapaneseLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\JapaneseLanguage.cs,JapaneseLanguage,The constructor "JapaneseLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,JapaneseLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\JapaneseLanguage.cs,JapaneseLanguage,The constructor "JapaneseLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,JapaneseLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\JapaneseLanguage.cs,JapaneseLanguage,The constructor "JapaneseLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,JapaneseLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\JapaneseLanguage.cs,JapaneseLanguage,The constructor "JapaneseLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,KoreanLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\KoreanLanguage.cs,KoreanLanguage,The constructor "KoreanLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,KoreanLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\KoreanLanguage.cs,KoreanLanguage,The constructor "KoreanLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,KoreanLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\KoreanLanguage.cs,KoreanLanguage,The constructor "KoreanLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,KoreanLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\KoreanLanguage.cs,KoreanLanguage,The constructor "KoreanLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,KoreanLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\KoreanLanguage.cs,KoreanLanguage,The constructor "KoreanLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,MacedonianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\MacedonianLanguage.cs,MacedonianLanguage,The constructor "MacedonianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,MacedonianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\MacedonianLanguage.cs,MacedonianLanguage,The constructor "MacedonianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,MacedonianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\MacedonianLanguage.cs,MacedonianLanguage,The constructor "MacedonianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,MacedonianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\MacedonianLanguage.cs,MacedonianLanguage,The constructor "MacedonianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,MacedonianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\MacedonianLanguage.cs,MacedonianLanguage,The constructor "MacedonianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,NorwegianBokmalLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\NorwegianBokmalLanguage.cs,NorwegianBokmalLanguage,The constructor "NorwegianBokmalLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,NorwegianBokmalLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\NorwegianBokmalLanguage.cs,NorwegianBokmalLanguage,The constructor "NorwegianBokmalLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,NorwegianBokmalLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\NorwegianBokmalLanguage.cs,NorwegianBokmalLanguage,The constructor "NorwegianBokmalLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,NorwegianBokmalLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\NorwegianBokmalLanguage.cs,NorwegianBokmalLanguage,The constructor "NorwegianBokmalLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,NorwegianBokmalLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\NorwegianBokmalLanguage.cs,NorwegianBokmalLanguage,The constructor "NorwegianBokmalLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,PersianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\PersianLanguage.cs,PersianLanguage,The constructor "PersianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,PersianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\PersianLanguage.cs,PersianLanguage,The constructor "PersianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,PersianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\PersianLanguage.cs,PersianLanguage,The constructor "PersianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,PersianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\PersianLanguage.cs,PersianLanguage,The constructor "PersianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,PersianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\PersianLanguage.cs,PersianLanguage,The constructor "PersianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,PolishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\PolishLanguage.cs,PolishLanguage,The constructor "PolishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,PolishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\PolishLanguage.cs,PolishLanguage,The constructor "PolishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,PolishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\PolishLanguage.cs,PolishLanguage,The constructor "PolishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,PolishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\PolishLanguage.cs,PolishLanguage,The constructor "PolishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,PolishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\PolishLanguage.cs,PolishLanguage,The constructor "PolishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,PortugueseBrazilLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\PortugueseBrazilLanguage.cs,PortugueseBrazilLanguage,The constructor "PortugueseBrazilLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,PortugueseBrazilLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\PortugueseBrazilLanguage.cs,PortugueseBrazilLanguage,The constructor "PortugueseBrazilLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,PortugueseBrazilLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\PortugueseBrazilLanguage.cs,PortugueseBrazilLanguage,The constructor "PortugueseBrazilLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,PortugueseBrazilLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\PortugueseBrazilLanguage.cs,PortugueseBrazilLanguage,The constructor "PortugueseBrazilLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,PortugueseBrazilLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\PortugueseBrazilLanguage.cs,PortugueseBrazilLanguage,The constructor "PortugueseBrazilLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,PortugueseLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\PortugueseLanguage.cs,PortugueseLanguage,The constructor "PortugueseLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,PortugueseLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\PortugueseLanguage.cs,PortugueseLanguage,The constructor "PortugueseLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,PortugueseLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\PortugueseLanguage.cs,PortugueseLanguage,The constructor "PortugueseLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,PortugueseLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\PortugueseLanguage.cs,PortugueseLanguage,The constructor "PortugueseLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,PortugueseLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\PortugueseLanguage.cs,PortugueseLanguage,The constructor "PortugueseLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,RomanianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\RomanianLanguage.cs,RomanianLanguage,The constructor "RomanianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,RomanianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\RomanianLanguage.cs,RomanianLanguage,The constructor "RomanianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,RomanianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\RomanianLanguage.cs,RomanianLanguage,The constructor "RomanianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,RomanianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\RomanianLanguage.cs,RomanianLanguage,The constructor "RomanianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,RomanianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\RomanianLanguage.cs,RomanianLanguage,The constructor "RomanianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,RussianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\RussianLanguage.cs,RussianLanguage,The constructor "RussianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,RussianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\RussianLanguage.cs,RussianLanguage,The constructor "RussianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,RussianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\RussianLanguage.cs,RussianLanguage,The constructor "RussianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,RussianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\RussianLanguage.cs,RussianLanguage,The constructor "RussianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,RussianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\RussianLanguage.cs,RussianLanguage,The constructor "RussianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,SlovakLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\SlovakLanguage.cs,SlovakLanguage,The constructor "SlovakLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,SlovakLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\SlovakLanguage.cs,SlovakLanguage,The constructor "SlovakLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,SlovakLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\SlovakLanguage.cs,SlovakLanguage,The constructor "SlovakLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,SlovakLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\SlovakLanguage.cs,SlovakLanguage,The constructor "SlovakLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,SlovakLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\SlovakLanguage.cs,SlovakLanguage,The constructor "SlovakLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,SpanishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\SpanishLanguage.cs,SpanishLanguage,The constructor "SpanishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,SpanishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\SpanishLanguage.cs,SpanishLanguage,The constructor "SpanishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,SpanishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\SpanishLanguage.cs,SpanishLanguage,The constructor "SpanishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,SpanishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\SpanishLanguage.cs,SpanishLanguage,The constructor "SpanishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,SpanishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\SpanishLanguage.cs,SpanishLanguage,The constructor "SpanishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,SwedishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\SwedishLanguage.cs,SwedishLanguage,The constructor "SwedishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,SwedishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\SwedishLanguage.cs,SwedishLanguage,The constructor "SwedishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,SwedishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\SwedishLanguage.cs,SwedishLanguage,The constructor "SwedishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,SwedishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\SwedishLanguage.cs,SwedishLanguage,The constructor "SwedishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,SwedishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\SwedishLanguage.cs,SwedishLanguage,The constructor "SwedishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,TurkishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\TurkishLanguage.cs,TurkishLanguage,The constructor "TurkishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,TurkishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\TurkishLanguage.cs,TurkishLanguage,The constructor "TurkishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,TurkishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\TurkishLanguage.cs,TurkishLanguage,The constructor "TurkishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,TurkishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\TurkishLanguage.cs,TurkishLanguage,The constructor "TurkishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,TurkishLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\TurkishLanguage.cs,TurkishLanguage,The constructor "TurkishLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,UkrainianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\UkrainianLanguage.cs,UkrainianLanguage,The constructor "UkrainianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,UkrainianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\UkrainianLanguage.cs,UkrainianLanguage,The constructor "UkrainianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,UkrainianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\UkrainianLanguage.cs,UkrainianLanguage,The constructor "UkrainianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,UkrainianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\UkrainianLanguage.cs,UkrainianLanguage,The constructor "UkrainianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,UkrainianLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\UkrainianLanguage.cs,UkrainianLanguage,The constructor "UkrainianLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,WelshLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\WelshLanguage.cs,WelshLanguage,The constructor "WelshLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,WelshLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\WelshLanguage.cs,WelshLanguage,The constructor "WelshLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,WelshLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\WelshLanguage.cs,WelshLanguage,The constructor "WelshLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,WelshLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\WelshLanguage.cs,WelshLanguage,The constructor "WelshLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,WelshLanguage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\Languages\WelshLanguage.cs,WelshLanguage,The constructor "WelshLanguage" calls a virtual method "Translate".
Virtual Method Call from Constructor,ServiceStack.FluentValidation.Resources,LocalizedStringSource,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Resources\LocalaizedStringSource.cs,LocalizedStringSource,The constructor "LocalizedStringSource" calls a virtual method "BuildResourceAccessor".
Virtual Method Call from Constructor,ServiceStack.Host.AspNet,AspNetRequest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\AspNet\AspNetRequest.cs,AspNetRequest,The constructor "AspNetRequest" calls a virtual method "ResolvePathInfo".
Virtual Method Call from Constructor,ServiceStack.Host.AspNet,AspNetResponse,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\AspNet\AspNetResponse.cs,AspNetResponse,The constructor "AspNetResponse" calls a virtual method "GetCookies".
Virtual Method Call from Constructor,ServiceStack.Host.HttpListener,ListenerRequest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\HttpListener\ListenerRequest.cs,ListenerRequest,The constructor "ListenerRequest" calls a virtual method "ResolvePathInfo".
Virtual Method Call from Constructor,ServiceStack.Host.HttpListener,ListenerResponse,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\HttpListener\ListenerResponse.cs,ListenerResponse,The constructor "ListenerResponse" calls a virtual method "GetCookies".
Virtual Method Call from Constructor,ServiceStack.Testing,MockHttpResponse,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Testing\MockHttpResponse.cs,MockHttpResponse,The constructor "MockHttpResponse" calls a virtual method "GetCookies".
Empty Catch Block,ServiceStack,DtoUtils,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\DtoUtils.cs,GetRequestErrorBody,The method has an empty catch block.
Empty Catch Block,ServiceStack,ServiceStackHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Formats\SoapFormat.cs,WriteSoapMessage,The method has an empty catch block.
Empty Catch Block,ServiceStack,ServiceStackHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Formats\SoapFormat.cs,GetAssemblyLastModified,The method has an empty catch block.
Empty Catch Block,ServiceStack,HostContext,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HostContext.cs,CompleteRequest,The method has an empty catch block.
Empty Catch Block,ServiceStack,HttpResult,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpResult.cs,DisposeStream,The method has an empty catch block.
Empty Catch Block,ServiceStack,BufferedExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\RequestExtensions.cs,FlushBufferIfAny,The method has an empty catch block.
Empty Catch Block,ServiceStack,BufferedExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\RequestExtensions.cs,FlushBufferIfAnyAsync,The method has an empty catch block.
Empty Catch Block,ServiceStack,ServerEventsHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,ProcessRequestAsync,The method has an empty catch block.
Empty Catch Block,ServiceStack,ServerEventsHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,ProcessRequestAsync,The method has an empty catch block.
Empty Catch Block,ServiceStack,SharpPagesFeatureExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\SharpPagesFeature.cs,createUri,The method has an empty catch block.
Empty Catch Block,ServiceStack.Auth,AuthMetadataProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\AuthMetadataProvider.cs,GetRedirectUrlIfAny,The method has an empty catch block.
Empty Catch Block,ServiceStack.FluentValidation.Validators,EmailValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Validators\EmailValidator.cs,CreateRegEx,The method has an empty catch block.
Empty Catch Block,ServiceStack.FluentValidation.Validators,RegularExpressionValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Validators\RegularExpressionValidator.cs,CreateRegex,The method has an empty catch block.
Empty Catch Block,ServiceStack.Host,HttpRequestAuthentication,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\HttpRequestAuthentication.cs,GetDigestAuth,The method has an empty catch block.
Empty Catch Block,ServiceStack.Host.AspNet,AspNetResponse,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\AspNet\AspNetResponse.cs,End,The method has an empty catch block.
Empty Catch Block,ServiceStack.Host.AspNet,AspNetResponse,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\AspNet\AspNetResponse.cs,SetContentLength,The method has an empty catch block.
Empty Catch Block,ServiceStack.Host.HttpListener,HttpListenerBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\HttpListener\HttpListenerBase.cs,RemoveUrlReservationFromAcl,The method has an empty catch block.
Empty Catch Block,ServiceStack.Host.HttpListener,HttpMultipart,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\HttpListener\ListenerRequest.Mono.cs,ReadBoundary,The method has an empty catch block.
Empty Catch Block,ServiceStack.Messaging,MessageHandler<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Messaging\MessageHandler.cs,ProcessQueue,The method has an empty catch block.
Empty Catch Block,ServiceStack.NativeTypes,MetadataTypesGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\NativeTypesMetadata.cs,ToMetadataAttribute,The method has an empty catch block.
Empty Catch Block,ServiceStack.Platforms,PlatformNet,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Platforms\PlatformNet.Config.cs,InferHttpHandlerPath,The method has an empty catch block.
Empty Catch Block,ServiceStack.Validation,ValidationFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Validation\ValidationFeature.cs,GetRequestErrorBody,The method has an empty catch block.
Magic Number,ServiceStack,AuthenticateAttribute,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\AuthenticateAttribute.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Provider?.GetHashCode() ?? 0);
Magic Number,ServiceStack,AuthenticateAttribute,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\AuthenticateAttribute.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (HtmlRedirect?.GetHashCode() ?? 0);
Magic Number,ServiceStack,InBetweenCondition,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\AutoQueryDataConditions.cs,Match,The following statement contains a magic number: bList.Count != 2
Magic Number,ServiceStack,HostConfig,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HostConfig.cs,NewInstance,The following statement contains a magic number: var config = new HostConfig              {                  WsdlServiceNamespace = DefaultWsdlNamespace'                  ApiVersion = "1.0"'                  EmbeddedResourceSources = new List<Assembly>()'                  EmbeddedResourceBaseTypes = new[] { HostContext.AppHost.GetType()' typeof(Service) }.ToList()'                  EmbeddedResourceTreatAsFiles = new HashSet<string>()'                  EnableAccessRestrictions = true'                  EnableAutoHtmlResponses = true'                  WebHostPhysicalPath = "~".MapServerPath()'                  HandlerFactoryPath = ServiceStackPath'                  MetadataRedirectPath = null'                  DefaultContentType = null'                  PreferredContentTypes = new List<string> {                      MimeTypes.Html' MimeTypes.Json' MimeTypes.Xml' MimeTypes.Jsv                  }'                  AllowJsonpRequests = true'                  AllowRouteContentTypeExtensions = true'                  BufferSyncSerializers = Env.IsNetCore3'                  AllowNonHttpOnlyCookies = false'                  DebugMode = false'                  StrictMode = Env.StrictMode'                  DefaultDocuments = new List<string> {                      "default.htm"'                      "default.html"'                      "default.cshtml"'                      "default.md"'                      "index.htm"'                      "index.html"'                      "default.aspx"'                      "default.ashx"'                  }'                  GlobalResponseHeaders = new Dictionary<string' string> {                      { HttpHeaders.Vary' "Accept" }'                      { HttpHeaders.XPoweredBy' Env.ServerUserAgent }'                  }'                  IsMobileRegex = new Regex("Mobile|iP(hone|od|ad)|Android|BlackBerry|IEMobile|Kindle|(hpw|web)OS|Fennec|Minimo|Opera M(obi|ini)|Blazer|Dolfin|Dolphin|Skyfire|Zune"' RegexOptions.Compiled)'                  RequestRules = new Dictionary<string' Func<IHttpRequest' bool>> {                      {"AcceptsHtml"' req => req.Accept?.IndexOf(MimeTypes.Html' StringComparison.Ordinal) >= 0 }'                      {"AcceptsJson"' req => req.Accept?.IndexOf(MimeTypes.Json' StringComparison.Ordinal) >= 0 }'                      {"AcceptsXml"' req => req.Accept?.IndexOf(MimeTypes.Xml' StringComparison.Ordinal) >= 0 }'                      {"AcceptsJsv"' req => req.Accept?.IndexOf(MimeTypes.Jsv' StringComparison.Ordinal) >= 0 }'                      {"AcceptsCsv"' req => req.Accept?.IndexOf(MimeTypes.Csv' StringComparison.Ordinal) >= 0 }'                      {"IsAuthenticated"' req => req.IsAuthenticated() }'                      {"IsMobile"' req => Instance.IsMobileRegex.IsMatch(req.UserAgent) }'                      {"{int}/**"' req => int.TryParse(req.PathInfo.Substring(1).LeftPart('/')' out _) }'                      {"path/{int}/**"' req => {                          var afterFirst = req.PathInfo.Substring(1).RightPart('/');                          return !string.IsNullOrEmpty(afterFirst) && int.TryParse(afterFirst.LeftPart('/')' out _);                      }}'                      {"**/{int}"' req => int.TryParse(req.PathInfo.LastRightPart('/')' out _) }'                      {"**/{int}/path"' req => {                          var beforeLast = req.PathInfo.LastLeftPart('/');                          return !string.IsNullOrEmpty(beforeLast) && int.TryParse(beforeLast.LastRightPart('/')' out _);                      }}'                  }'                  IgnoreFormatsInMetadata = new HashSet<string>(StringComparer.OrdinalIgnoreCase)                  {                  }'                  AllowFileExtensions = new HashSet<string>(StringComparer.OrdinalIgnoreCase)                  {                      "js"' "ts"' "tsx"' "jsx"' "css"' "htm"' "html"' "shtm"' "txt"' "xml"' "rss"' "csv"' "pdf"'                      "jpg"' "jpeg"' "gif"' "png"' "bmp"' "ico"' "tif"' "tiff"' "svg"'                      "avi"' "divx"' "m3u"' "mov"' "mp3"' "mpeg"' "mpg"' "qt"' "vob"' "wav"' "wma"' "wmv"'                      "flv"' "swf"' "xap"' "xaml"' "ogg"' "ogv"' "mp4"' "webm"' "eot"' "ttf"' "woff"' "woff2"' "map"'                      "xls"' "xla"' "xlsx"' "xltx"' "doc"' "dot"' "docx"' "dotx"' "ppt"' "pps"' "ppa"' "pptx"' "potx"'                       "wasm"                  }'                  CompressFilesWithExtensions = new HashSet<string>()'                  AllowFilePaths = new List<string>                  {                      "jspm_packages/**/*.json"' //JSPM                      ".well-known/**/*"'        //LetsEncrypt                  }'                  ForbiddenPaths = new List<string>()'                  DebugAspNetHostEnvironment = Env.IsMono ? "FastCGI" : "IIS7"'                  DebugHttpListenerHostEnvironment = Env.IsMono ? "XSP" : "WebServer20"'                  EnableFeatures = Feature.All'                  WriteErrorsToResponse = true'                  ReturnsInnerException = true'                  DisposeDependenciesAfterUse = true'                  LogUnobservedTaskExceptions = true'                  HtmlReplaceTokens = new Dictionary<string' string>()'                  AddMaxAgeForStaticMimeTypes = new Dictionary<string' TimeSpan> {                      { "image/gif"' TimeSpan.FromHours(1) }'                      { "image/png"' TimeSpan.FromHours(1) }'                      { "image/jpeg"' TimeSpan.FromHours(1) }'                  }'                  AppendUtf8CharsetOnContentTypes = new HashSet<string> { MimeTypes.Json' }'                  RouteNamingConventions = new List<RouteNamingConventionDelegate> {                      RouteNamingConvention.WithRequestDtoName'                      RouteNamingConvention.WithMatchingAttributes'                      RouteNamingConvention.WithMatchingPropertyNames                  }'                  MapExceptionToStatusCode = new Dictionary<Type' int>()'                  UseSaltedHash = false'                  FallbackPasswordHashers = new List<IPasswordHasher>()'                  UseSameSiteCookies = false'                  UseSecureCookies = true'   // good default to have' but needed if UseSameSiteCookies=true                   AllowSessionIdsInHttpParams = false'                  AllowSessionCookies = true'                  RestrictAllCookiesToDomain = null'                  DefaultJsonpCacheExpiration = new TimeSpan(0' 20' 0)'                  MetadataVisibility = RequestAttributes.Any'                  Return204NoContentForEmptyResponse = true'                  AllowJsConfig = true'                  AllowPartialResponses = true'                  AllowAclUrlReservation = true'                  AddRedirectParamsToQueryString = false'                  RedirectToDefaultDocuments = false'                  RedirectDirectoriesToTrailingSlashes = true'                  StripApplicationVirtualPath = false'                  ScanSkipPaths = new List<string> {                      "obj/"'                      "bin/"'                      "node_modules/"'                      "jspm_packages/"'                      "bower_components/"'                      "wwwroot_build/"'  #if !NETSTANDARD2_0                       "wwwroot/"' //Need to allow VirtualFiles access from ContentRoot Folder  #endif                  }'                  RedirectPaths = new Dictionary<string' string>                  {                      { "/metadata/"' "/metadata" }'                  }'                  IgnoreWarningsOnPropertyNames = new List<string> {                      Keywords.Format' Keywords.Callback' Keywords.Debug' Keywords.AuthSecret' Keywords.JsConfig'                      Keywords.IgnorePlaceHolder' Keywords.Version' Keywords.VersionAbbr' Keywords.Version.ToPascalCase()'                      Keywords.ApiKeyParam' Keywords.Code' Keywords.Redirect' Keywords.Continue' "s"' "f"                  }'                  XmlWriterSettings = new XmlWriterSettings                  {                      Encoding = new UTF8Encoding(encoderShouldEmitUTF8Identifier: false)'                  }'                  FallbackRestPath = null'                  UseHttpsLinks = false'                  UseJsObject = true'                  EnableOptimizations = true'    #if !NETSTANDARD2_0                  UseCamelCase = false'  #else                  UseCamelCase = true'  #endif              };
Magic Number,ServiceStack,HttpCacheFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpCacheFeature.cs,HttpCacheFeature,The following statement contains a magic number: DefaultMaxAge = TimeSpan.FromMinutes(10);
Magic Number,ServiceStack,HttpCacheFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpCacheFeature.cs,HttpCacheFeature,The following statement contains a magic number: DefaultExpiresIn = TimeSpan.FromMinutes(10);
Magic Number,ServiceStack,HttpCacheFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpCacheFeature.cs,HandleCacheResponses,The following statement contains a magic number: response is Exception || res.StatusCode >= 300
Magic Number,ServiceStack,HttpCacheExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpCacheFeature.cs,EndNotModified,The following statement contains a magic number: res.StatusCode = 304;
Magic Number,ServiceStack,HttpCacheExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpCacheFeature.cs,StripWeakRef,The following statement contains a magic number: return eTag != null && eTag.StartsWith("W/")                  ? eTag.Substring(2)                   : eTag;
Magic Number,ServiceStack,HttpRequestExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpRequestExtensions.cs,ToWebServiceException,The following statement contains a magic number: var to = new WebServiceException(status.ErrorCode' validationError)              {                  StatusCode = 400'                  StatusDescription = status.ErrorCode'                  ResponseDto = errorResponse'                              };
Magic Number,ServiceStack,HttpRequestExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpRequestExtensions.cs,GetQueryStringContentType,The following statement contains a magic number: const int formatMaxLength = 4;
Magic Number,ServiceStack,HttpRequestExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpRequestExtensions.cs,GetQueryStringContentType,The following statement contains a magic number: const int formatMinLength = 3;
Magic Number,ServiceStack,HttpRequestExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpRequestExtensions.cs,GetQueryStringContentType,The following statement contains a magic number: end - start == 3
Magic Number,ServiceStack,HttpRequestExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpRequestExtensions.cs,GetAbsoluteUrl,The following statement contains a magic number: url = httpReq.GetBaseUrl().CombineWith(url.Substring(2));
Magic Number,ServiceStack,HttpRequestExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpRequestExtensions.cs,GetAbsoluteUrl,The following statement contains a magic number: url?.SafeSubstring(0' 2) == "~/"
Magic Number,ServiceStack,HttpResult,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpResult.cs,SetPermanentCookie,The following statement contains a magic number: SetCookie(name' value' DateTime.UtcNow.AddYears(20)' null);
Magic Number,ServiceStack,HttpResult,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpResult.cs,SetPermanentCookie,The following statement contains a magic number: SetCookie(name' value' DateTime.UtcNow.AddYears(20)' path);
Magic Number,ServiceStack,HttpResultUtils,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpResultUtils.cs,ExtractHttpRanges,The following statement contains a magic number: rangeEnd = rangeParts.Length == 2 && !string.IsNullOrEmpty(rangeParts[1])                             ? int.Parse(rangeParts[1]) //the client requested a chunk                             : contentLength - 1;
Magic Number,ServiceStack,ImageExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ImageExtensions.cs,ResizeToPng,The following statement contains a magic number: var startX = (Math.Max(newImage.Width' newWidth) - Math.Min(newImage.Width' newWidth)) / 2;
Magic Number,ServiceStack,ImageExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ImageExtensions.cs,ResizeToPng,The following statement contains a magic number: var startY = (Math.Max(newImage.Height' newHeight) - Math.Min(newImage.Height' newHeight)) / 2;
Magic Number,ServiceStack,ImageExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ImageExtensions.cs,CropToPng,The following statement contains a magic number: bmp.SetResolution(72' 72);
Magic Number,ServiceStack,ImageExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ImageExtensions.cs,CropToPng,The following statement contains a magic number: bmp.SetResolution(72' 72);
Magic Number,ServiceStack,LispReplTcpServer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\LispReplTcpServer.cs,KillBgThreadIfExists,The following statement contains a magic number: !bgThread.Join(TimeSpan.FromSeconds(3))
Magic Number,ServiceStack,LispReplTcpServer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\LispReplTcpServer.cs,KillBgThreadIfExists,The following statement contains a magic number: !bgThread.Join(500)
Magic Number,ServiceStack,PostmanService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\PostmanFeature.cs,GetRequests,The following statement contains a magic number: ret.Add(new PostmanRequest                          {                              collectionId = parentId'                              id = SessionExtensions.CreateRandomSessionId()'                              method = verb'                              url = Request.GetBaseUrl().CombineWith(restRoute.Path.ToPostmanPathVariables())'                              name = GetName(feature' request' op.RequestType' restRoute.Path)'                              description = op.RequestType.GetDescription()'                              pathVariables = !HttpUtils.HasRequestBody(verb)                                  ? restRoute.Variables.Concat(routeData.Select(x => x.key))                                      .ApplyPropertyTypes(propertyTypes)                                  : null'                              data = HttpUtils.HasRequestBody(verb)                                  ? routeData                                  : null'                              dataMode = "params"'                              headers = headers'                              version = 2'                              time = DateTime.UtcNow.ToUnixTimeMs()'                          });
Magic Number,ServiceStack,PostmanService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\PostmanFeature.cs,GetRequests,The following statement contains a magic number: ret.AddRange(allVerbs.Select(verb =>                      new PostmanRequest                      {                          collectionId = parentId'                          id = SessionExtensions.CreateRandomSessionId()'                          method = verb'                          url = Request.GetBaseUrl().CombineWith(virtualPath)'                          pathVariables = !HttpUtils.HasRequestBody(verb)                              ? requestParams.Select(x => x.key)                                  .ApplyPropertyTypes(propertyTypes)                              : null'                          name = GetName(feature' request' op.RequestType' virtualPath)'                          description = op.RequestType.GetDescription()'                          data = HttpUtils.HasRequestBody(verb)                              ? requestParams                              : null'                          dataMode = "params"'                          headers = headers'                          version = 2'                          time = DateTime.UtcNow.ToUnixTimeMs()'                      }));
Magic Number,ServiceStack,PredefinedRoutesFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\PredefinedRoutesFeature.cs,GetHandlerForPathParts,The following statement contains a magic number: var requestName = pathParts.Length > 2 ? pathParts[2] : null;
Magic Number,ServiceStack,PredefinedRoutesFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\PredefinedRoutesFeature.cs,GetHandlerForPathParts,The following statement contains a magic number: var requestName = pathParts.Length > 2 ? pathParts[2] : null;
Magic Number,ServiceStack,RedisErrorLoggerFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\RedisErrorLoggerFeature.cs,LogErrorInRedis,The following statement contains a magic number: const int rollingErrorCount = 1000;
Magic Number,ServiceStack,RequiredClaimAttribute,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\RequiredClaimAttribute.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Type != null ? Type.GetHashCode() : 0);
Magic Number,ServiceStack,RequiredClaimAttribute,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\RequiredClaimAttribute.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Value != null ? Value.GetHashCode() : 0);
Magic Number,ServiceStack,RequiredPermissionAttribute,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\RequiredPermissionAttribute.cs,GetHashCode,The following statement contains a magic number: return (base.GetHashCode() * 397) ^ (RequiredPermissions?.GetHashCode() ?? 0);
Magic Number,ServiceStack,RequiredRoleAttribute,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\RequiredRoleAttribute.cs,GetHashCode,The following statement contains a magic number: return (base.GetHashCode() * 397) ^ (RequiredRoles?.GetHashCode() ?? 0);
Magic Number,ServiceStack,RpcGateway,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\RpcGateway.cs,CreateResponse,The following statement contains a magic number: res.StatusCode >= 300
Magic Number,ServiceStack,RpcGateway,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\RpcGateway.cs,CreateErrorResponse,The following statement contains a magic number: res.StatusCode < 300
Magic Number,ServiceStack,ServerEventsFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,ServerEventsFeature,The following statement contains a magic number: IdleTimeout = TimeSpan.FromSeconds(30);
Magic Number,ServiceStack,ServerEventsFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,ServerEventsFeature,The following statement contains a magic number: HeartbeatInterval = TimeSpan.FromSeconds(10);
Magic Number,ServiceStack,ServerEventsFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,ServerEventsFeature,The following statement contains a magic number: HouseKeepingInterval = TimeSpan.FromSeconds(5);
Magic Number,ServiceStack,ServerEventsHeartbeatHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,ProcessRequestAsync,The following statement contains a magic number: res.StatusCode = 404;
Magic Number,ServiceStack,EventSubscription,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServerEventsFeature.cs,HandleWriteExceptionAsync,The following statement contains a magic number: Log.Warn("Could not publish notification to: " + frame.SafeSubstring(0' 50)' ex);
Magic Number,ServiceStack,SvgScriptBlock,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\ServiceStackScripts.cs,WriteAsync,The following statement contains a magic number: Svg.AddImage(capturedSvg' name' args.Length == 2 ? args[1].Trim() : null);
Magic Number,ServiceStack,SessionExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\SessionExtensions.cs,CreateRandomSessionId,The following statement contains a magic number: SessionBytesCache = new byte[15];
Magic Number,ServiceStack,SharpPagesFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\SharpPagesFeature.cs,RequestHandler,The following statement contains a magic number: catchAllPathsNotFound.Count > 10000
Magic Number,ServiceStack,SuppressFormsAuthenticationRedirectModule,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\SuppressFormsAuthenticationRedirectModule.cs,OnEndRequest,The following statement contains a magic number: context.Response.StatusCode = 401;
Magic Number,ServiceStack,SuppressFormsAuthenticationRedirectModule,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\SuppressFormsAuthenticationRedirectModule.cs,OnEndRequest,The following statement contains a magic number: context.Response.StatusCode == 402 && context.Request.Url.PathAndQuery.StartsWith(PathToSuppress)
Magic Number,ServiceStack,SuppressFormsAuthenticationRedirectModule,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\SuppressFormsAuthenticationRedirectModule.cs,OnPostReleaseRequestState,The following statement contains a magic number: context.Response.StatusCode = 402;
Magic Number,ServiceStack,SuppressFormsAuthenticationRedirectModule,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\SuppressFormsAuthenticationRedirectModule.cs,OnPostReleaseRequestState,The following statement contains a magic number: context.Response.StatusCode == 401 && context.Request.Url.PathAndQuery.StartsWith(PathToSuppress)
Magic Number,ServiceStack,SvgFormatHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\SvgFeature.cs,ProcessRequestAsync,The following statement contains a magic number: httpRes.StatusCode = 404;
Magic Number,ServiceStack,WebSudoFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\WebSudoFeature.cs,WebSudoFeature,The following statement contains a magic number: this.WebSudoDuration = TimeSpan.FromMinutes(20);
Magic Number,ServiceStack,WebSudoRequiredAttribute,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\WebSudoRequiredAttribute.cs,WebSudoRequiredAttribute,The following statement contains a magic number: this.Priority = -79;
Magic Number,ServiceStack,WebSudoRequiredAttribute,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\WebSudoRequiredAttribute.cs,ExecuteAsync,The following statement contains a magic number: res.StatusCode = 402;
Magic Number,ServiceStack.Auth,AuthMetadataProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\AuthMetadataProvider.cs,AddProfileUrl,The following statement contains a magic number: items[ProfileUrlKey] = tokens.Email.ToGravatarUrl(size: 64);
Magic Number,ServiceStack.Auth,AuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\AuthProvider.cs,ConvertToClientError,The following statement contains a magic number: parts.Length == 2
Magic Number,ServiceStack.Auth,JwtAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProvider.cs,CreateEncryptedJweToken,The following statement contains a magic number: var jweHeader = new JsonObject              {                  { "alg"' "RSA-OAEP" }'                  { "enc"' "A128CBC-HS256" }'                  { "kid"' Convert.ToBase64String(publicKey.Modulus).Substring(0'3) }'              };
Magic Number,ServiceStack.Auth,JwtAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProvider.cs,CreateEncryptedJweToken,The following statement contains a magic number: var authKey = new byte[128 / 8];
Magic Number,ServiceStack.Auth,JwtAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProvider.cs,CreateEncryptedJweToken,The following statement contains a magic number: var authKey = new byte[128 / 8];
Magic Number,ServiceStack.Auth,JwtAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProvider.cs,CreateEncryptedJweToken,The following statement contains a magic number: var cryptKey = new byte[128 / 8];
Magic Number,ServiceStack.Auth,JwtAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProvider.cs,CreateEncryptedJweToken,The following statement contains a magic number: var cryptKey = new byte[128 / 8];
Magic Number,ServiceStack.Auth,JwtAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProvider.cs,CreateEncryptedJweToken,The following statement contains a magic number: aes.KeySize = 128;
Magic Number,ServiceStack.Auth,JwtAuthProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProvider.cs,CreateEncryptedJweToken,The following statement contains a magic number: aes.BlockSize = 128;
Magic Number,ServiceStack.Auth,JwtAuthProviderReader,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProviderReader.cs,Init,The following statement contains a magic number: ExpireTokensIn = TimeSpan.FromDays(14);
Magic Number,ServiceStack.Auth,JwtAuthProviderReader,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProviderReader.cs,Init,The following statement contains a magic number: ExpireRefreshTokensIn = TimeSpan.FromDays(365);
Magic Number,ServiceStack.Auth,JwtAuthProviderReader,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProviderReader.cs,GetKeyId,The following statement contains a magic number: return Convert.ToBase64String(authKey).Substring(0' 3);
Magic Number,ServiceStack.Auth,JwtAuthProviderReader,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProviderReader.cs,GetKeyId,The following statement contains a magic number: return Convert.ToBase64String(publicKey.Value.Modulus).Substring(0' 3);
Magic Number,ServiceStack.Auth,JwtAuthProviderReader,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProviderReader.cs,Authenticate,The following statement contains a magic number: parts.Length == 3
Magic Number,ServiceStack.Auth,JwtAuthProviderReader,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProviderReader.cs,Authenticate,The following statement contains a magic number: parts.Length == 5
Magic Number,ServiceStack.Auth,JwtAuthProviderReader,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProviderReader.cs,PreAuthenticate,The following statement contains a magic number: parts.Length == 3
Magic Number,ServiceStack.Auth,JwtAuthProviderReader,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProviderReader.cs,GetVerifiedJwtPayload,The following statement contains a magic number: var signatureBytes = parts[2].FromBase64UrlSafe();
Magic Number,ServiceStack.Auth,JwtAuthProviderReader,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProviderReader.cs,GetVerifiedJwtPayload,The following statement contains a magic number: parts.Length == 3
Magic Number,ServiceStack.Auth,JwtAuthProviderReader,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProviderReader.cs,GetVerifiedJwtPayload,The following statement contains a magic number: parts.Length == 5
Magic Number,ServiceStack.Auth,JwtAuthProviderReader,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProviderReader.cs,GetVerifiedJwePayload,The following statement contains a magic number: aes.KeySize = 128;
Magic Number,ServiceStack.Auth,JwtAuthProviderReader,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProviderReader.cs,GetVerifiedJwePayload,The following statement contains a magic number: aes.BlockSize = 128;
Magic Number,ServiceStack.Auth,JwtAuthProviderReader,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProviderReader.cs,VerifyJwePayload,The following statement contains a magic number: var ivBase64Url = parts[2];
Magic Number,ServiceStack.Auth,JwtAuthProviderReader,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProviderReader.cs,VerifyJwePayload,The following statement contains a magic number: var cipherTextBase64Url = parts[3];
Magic Number,ServiceStack.Auth,JwtAuthProviderReader,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProviderReader.cs,VerifyJwePayload,The following statement contains a magic number: var tagBase64Url = parts[4];
Magic Number,ServiceStack.Auth,JwtAuthProviderReader,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProviderReader.cs,VerifyJwePayload,The following statement contains a magic number: var authKey = new byte[128 / 8];
Magic Number,ServiceStack.Auth,JwtAuthProviderReader,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProviderReader.cs,VerifyJwePayload,The following statement contains a magic number: var authKey = new byte[128 / 8];
Magic Number,ServiceStack.Auth,JwtAuthProviderReader,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProviderReader.cs,VerifyJwePayload,The following statement contains a magic number: cryptKey = new byte[128 / 8];
Magic Number,ServiceStack.Auth,JwtAuthProviderReader,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\JwtAuthProviderReader.cs,VerifyJwePayload,The following statement contains a magic number: cryptKey = new byte[128 / 8];
Magic Number,ServiceStack.Auth,OAuthAuthorizer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\OAuthAuthorizer.cs,MakeNonce,The following statement contains a magic number: var ret = new char[16];
Magic Number,ServiceStack.Auth,OAuthAuthorizer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\OAuthAuthorizer.cs,MakeNonce,The following statement contains a magic number: int n = random.Next(35);
Magic Number,ServiceStack.Auth,OAuthAuthorizer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\OAuthAuthorizer.cs,MakeNonce,The following statement contains a magic number: n < 10
Magic Number,ServiceStack.Auth,PasswordHasher,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,HashPasswordV3,The following statement contains a magic number: return HashPasswordV3(password' rng'                  prf: KeyDerivationPrf.HMACSHA256'                  iterCount: IterationCount'                  saltSize: 128 / 8'                  numBytesRequested: 256 / 8);
Magic Number,ServiceStack.Auth,PasswordHasher,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,HashPasswordV3,The following statement contains a magic number: return HashPasswordV3(password' rng'                  prf: KeyDerivationPrf.HMACSHA256'                  iterCount: IterationCount'                  saltSize: 128 / 8'                  numBytesRequested: 256 / 8);
Magic Number,ServiceStack.Auth,PasswordHasher,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,HashPasswordV3,The following statement contains a magic number: return HashPasswordV3(password' rng'                  prf: KeyDerivationPrf.HMACSHA256'                  iterCount: IterationCount'                  saltSize: 128 / 8'                  numBytesRequested: 256 / 8);
Magic Number,ServiceStack.Auth,PasswordHasher,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,HashPasswordV3,The following statement contains a magic number: return HashPasswordV3(password' rng'                  prf: KeyDerivationPrf.HMACSHA256'                  iterCount: IterationCount'                  saltSize: 128 / 8'                  numBytesRequested: 256 / 8);
Magic Number,ServiceStack.Auth,PasswordHasher,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,HashPasswordV3,The following statement contains a magic number: var outputBytes = new byte[13 + salt.Length + subkey.Length];
Magic Number,ServiceStack.Auth,PasswordHasher,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,HashPasswordV3,The following statement contains a magic number: WriteNetworkByteOrder(outputBytes' 5' (uint)iterCount);
Magic Number,ServiceStack.Auth,PasswordHasher,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,HashPasswordV3,The following statement contains a magic number: WriteNetworkByteOrder(outputBytes' 9' (uint)saltSize);
Magic Number,ServiceStack.Auth,PasswordHasher,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,HashPasswordV3,The following statement contains a magic number: Buffer.BlockCopy(salt' 0' outputBytes' 13' salt.Length);
Magic Number,ServiceStack.Auth,PasswordHasher,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,HashPasswordV3,The following statement contains a magic number: Buffer.BlockCopy(subkey' 0' outputBytes' 13 + saltSize' subkey.Length);
Magic Number,ServiceStack.Auth,PasswordHasher,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,ReadNetworkByteOrder,The following statement contains a magic number: return ((uint)(buffer[offset + 0]) << 24)                     | ((uint)(buffer[offset + 1]) << 16)                     | ((uint)(buffer[offset + 2]) << 8)                     | ((uint)(buffer[offset + 3]));
Magic Number,ServiceStack.Auth,PasswordHasher,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,ReadNetworkByteOrder,The following statement contains a magic number: return ((uint)(buffer[offset + 0]) << 24)                     | ((uint)(buffer[offset + 1]) << 16)                     | ((uint)(buffer[offset + 2]) << 8)                     | ((uint)(buffer[offset + 3]));
Magic Number,ServiceStack.Auth,PasswordHasher,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,ReadNetworkByteOrder,The following statement contains a magic number: return ((uint)(buffer[offset + 0]) << 24)                     | ((uint)(buffer[offset + 1]) << 16)                     | ((uint)(buffer[offset + 2]) << 8)                     | ((uint)(buffer[offset + 3]));
Magic Number,ServiceStack.Auth,PasswordHasher,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,ReadNetworkByteOrder,The following statement contains a magic number: return ((uint)(buffer[offset + 0]) << 24)                     | ((uint)(buffer[offset + 1]) << 16)                     | ((uint)(buffer[offset + 2]) << 8)                     | ((uint)(buffer[offset + 3]));
Magic Number,ServiceStack.Auth,PasswordHasher,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,ReadNetworkByteOrder,The following statement contains a magic number: return ((uint)(buffer[offset + 0]) << 24)                     | ((uint)(buffer[offset + 1]) << 16)                     | ((uint)(buffer[offset + 2]) << 8)                     | ((uint)(buffer[offset + 3]));
Magic Number,ServiceStack.Auth,PasswordHasher,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,VerifyHashedPasswordV3,The following statement contains a magic number: iterCount = (int)ReadNetworkByteOrder(hashedPassword' 5);
Magic Number,ServiceStack.Auth,PasswordHasher,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,VerifyHashedPasswordV3,The following statement contains a magic number: int saltLength = (int)ReadNetworkByteOrder(hashedPassword' 9);
Magic Number,ServiceStack.Auth,PasswordHasher,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,VerifyHashedPasswordV3,The following statement contains a magic number: saltLength < 128 / 8
Magic Number,ServiceStack.Auth,PasswordHasher,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,VerifyHashedPasswordV3,The following statement contains a magic number: saltLength < 128 / 8
Magic Number,ServiceStack.Auth,PasswordHasher,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,VerifyHashedPasswordV3,The following statement contains a magic number: Buffer.BlockCopy(hashedPassword' 13' salt' 0' salt.Length);
Magic Number,ServiceStack.Auth,PasswordHasher,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,VerifyHashedPasswordV3,The following statement contains a magic number: int subkeyLength = hashedPassword.Length - 13 - salt.Length;
Magic Number,ServiceStack.Auth,PasswordHasher,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,VerifyHashedPasswordV3,The following statement contains a magic number: subkeyLength < 128 / 8
Magic Number,ServiceStack.Auth,PasswordHasher,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,VerifyHashedPasswordV3,The following statement contains a magic number: subkeyLength < 128 / 8
Magic Number,ServiceStack.Auth,PasswordHasher,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,VerifyHashedPasswordV3,The following statement contains a magic number: Buffer.BlockCopy(hashedPassword' 13 + salt.Length' expectedSubkey' 0' expectedSubkey.Length);
Magic Number,ServiceStack.Auth,PasswordHasher,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,WriteNetworkByteOrder,The following statement contains a magic number: buffer[offset + 0] = (byte)(value >> 24);
Magic Number,ServiceStack.Auth,PasswordHasher,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,WriteNetworkByteOrder,The following statement contains a magic number: buffer[offset + 1] = (byte)(value >> 16);
Magic Number,ServiceStack.Auth,PasswordHasher,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,WriteNetworkByteOrder,The following statement contains a magic number: buffer[offset + 2] = (byte)(value >> 8);
Magic Number,ServiceStack.Auth,PasswordHasher,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,WriteNetworkByteOrder,The following statement contains a magic number: buffer[offset + 2] = (byte)(value >> 8);
Magic Number,ServiceStack.Auth,PasswordHasher,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,WriteNetworkByteOrder,The following statement contains a magic number: buffer[offset + 3] = (byte)(value >> 0);
Magic Number,ServiceStack.Auth,ManagedPbkdf2Provider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,DeriveKey,The following statement contains a magic number: saltWithBlockIndex[saltWithBlockIndex.Length - 4] = (byte)(blockIndex >> 24);
Magic Number,ServiceStack.Auth,ManagedPbkdf2Provider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,DeriveKey,The following statement contains a magic number: saltWithBlockIndex[saltWithBlockIndex.Length - 4] = (byte)(blockIndex >> 24);
Magic Number,ServiceStack.Auth,ManagedPbkdf2Provider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,DeriveKey,The following statement contains a magic number: saltWithBlockIndex[saltWithBlockIndex.Length - 3] = (byte)(blockIndex >> 16);
Magic Number,ServiceStack.Auth,ManagedPbkdf2Provider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,DeriveKey,The following statement contains a magic number: saltWithBlockIndex[saltWithBlockIndex.Length - 3] = (byte)(blockIndex >> 16);
Magic Number,ServiceStack.Auth,ManagedPbkdf2Provider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,DeriveKey,The following statement contains a magic number: saltWithBlockIndex[saltWithBlockIndex.Length - 2] = (byte)(blockIndex >> 8);
Magic Number,ServiceStack.Auth,ManagedPbkdf2Provider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\PasswordHasher.cs,DeriveKey,The following statement contains a magic number: saltWithBlockIndex[saltWithBlockIndex.Length - 2] = (byte)(blockIndex >> 8);
Magic Number,ServiceStack.FluentValidation.Internal,Key,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\AccessorCache.cs,GetHashCode,The following statement contains a magic number: return ((_memberInfo != null ? _memberInfo.GetHashCode() : 0)*397) ^ (_expressionDebugView != null ? _expressionDebugView.GetHashCode() : 0);
Magic Number,ServiceStack.FluentValidation.Internal,Extensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\Extensions.cs,SplitPascalCase,The following statement contains a magic number: var retVal = new StringBuilder(input.Length + 5);
Magic Number,ServiceStack.FluentValidation.Internal,MessageFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\MessageFormatter.cs,ReplacePlaceholdersWithValues,The following statement contains a magic number: return _keyRegex.Replace(template' m =>	{  				var key = m.Groups[1].Value;    				if (!values.ContainsKey(key))  					return m.Value; // No placeholder / value    				var format = m.Groups[2].Success // Format specified?  					? $"{{0:{m.Groups[2].Value}}}"  					: null;    				return format == null  					? values[key]?.ToString()  					: string.Format(format' values[key]);  			});
Magic Number,ServiceStack.FluentValidation.Internal,MessageFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Internal\MessageFormatter.cs,ReplacePlaceholdersWithValues,The following statement contains a magic number: return _keyRegex.Replace(template' m =>	{  				var key = m.Groups[1].Value;    				if (!values.ContainsKey(key))  					return m.Value; // No placeholder / value    				var format = m.Groups[2].Success // Format specified?  					? $"{{0:{m.Groups[2].Value}}}"  					: null;    				return format == null  					? values[key]?.ToString()  					: string.Format(format' values[key]);  			});
Magic Number,ServiceStack.FluentValidation.Validators,CreditCardValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Validators\CreditCardValidator.cs,IsValid,The following statement contains a magic number: int digitValue = (digit - '0') * (evenDigit ? 2 : 1);
Magic Number,ServiceStack.FluentValidation.Validators,CreditCardValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Validators\CreditCardValidator.cs,IsValid,The following statement contains a magic number: checksum += digitValue % 10;
Magic Number,ServiceStack.FluentValidation.Validators,CreditCardValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Validators\CreditCardValidator.cs,IsValid,The following statement contains a magic number: digitValue /= 10;
Magic Number,ServiceStack.FluentValidation.Validators,CreditCardValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Validators\CreditCardValidator.cs,IsValid,The following statement contains a magic number: return (checksum % 10) == 0;
Magic Number,ServiceStack.FluentValidation.Validators,EmailValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Validators\EmailValidator.cs,CreateRegEx,The following statement contains a magic number: return new Regex(_expression' RegexOptions.IgnoreCase' TimeSpan.FromSeconds(2.0));
Magic Number,ServiceStack.FluentValidation.Validators,RegularExpressionValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Validators\RegularExpressionValidator.cs,CreateRegex,The following statement contains a magic number: return new Regex(expression' options' TimeSpan.FromSeconds(2.0));
Magic Number,ServiceStack.FluentValidation.Validators,ScalePrecisionValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Validators\ScalePrecisionValidator.cs,GetMantissa,The following statement contains a magic number: return (bits[2] * 4294967296m * 4294967296m) + (bits[1] * 4294967296m) + bits[0];
Magic Number,ServiceStack.FluentValidation.Validators,ScalePrecisionValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Validators\ScalePrecisionValidator.cs,GetMantissa,The following statement contains a magic number: return (bits[2] * 4294967296m * 4294967296m) + (bits[1] * 4294967296m) + bits[0];
Magic Number,ServiceStack.FluentValidation.Validators,ScalePrecisionValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Validators\ScalePrecisionValidator.cs,GetMantissa,The following statement contains a magic number: return (bits[2] * 4294967296m * 4294967296m) + (bits[1] * 4294967296m) + bits[0];
Magic Number,ServiceStack.FluentValidation.Validators,ScalePrecisionValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Validators\ScalePrecisionValidator.cs,GetMantissa,The following statement contains a magic number: return (bits[2] * 4294967296m * 4294967296m) + (bits[1] * 4294967296m) + bits[0];
Magic Number,ServiceStack.FluentValidation.Validators,ScalePrecisionValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Validators\ScalePrecisionValidator.cs,GetUnsignedScale,The following statement contains a magic number: uint scale = (bits[3] >> 16) & 31;
Magic Number,ServiceStack.FluentValidation.Validators,ScalePrecisionValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Validators\ScalePrecisionValidator.cs,GetUnsignedScale,The following statement contains a magic number: uint scale = (bits[3] >> 16) & 31;
Magic Number,ServiceStack.FluentValidation.Validators,ScalePrecisionValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Validators\ScalePrecisionValidator.cs,GetUnsignedScale,The following statement contains a magic number: uint scale = (bits[3] >> 16) & 31;
Magic Number,ServiceStack.FluentValidation.Validators,ScalePrecisionValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Validators\ScalePrecisionValidator.cs,NumTrailingZeros,The following statement contains a magic number: tmp % 10m == 0 && trailingZeros < scale
Magic Number,ServiceStack.Formats,HtmlFormat,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Formats\HtmlFormat.cs,SerializeToStreamAsync,The following statement contains a magic number: res.StatusCode >= 400
Magic Number,ServiceStack.Host,Cookies,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\Cookies.cs,AddPermanentCookie,The following statement contains a magic number: var cookie = new Cookie(cookieName' cookieValue' RootPath)              {                  Expires = DateTime.UtcNow.AddYears(20)              };
Magic Number,ServiceStack.Host,HttpRequestAuthentication,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\HttpRequestAuthentication.cs,GetDigestAuth,The following statement contains a magic number: parts.Length < 2
Magic Number,ServiceStack.Host,HttpRequestAuthentication,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\HttpRequestAuthentication.cs,GetDigestAuth,The following statement contains a magic number: var param = item.Trim().Split(new[] { '=' }'2);
Magic Number,ServiceStack.Host,RestPath,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\RestPath.cs,RestPath,The following statement contains a magic number: var variableName = component.Substring(1' component.Length - 2);
Magic Number,ServiceStack.Host,RestPath,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\RestPath.cs,MatchScore,The following statement contains a magic number: score += Math.Max((100 - wildcardMatchCount)' 1) * 1000;
Magic Number,ServiceStack.Host,RestPath,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\RestPath.cs,MatchScore,The following statement contains a magic number: score += Math.Max((100 - wildcardMatchCount)' 1) * 1000;
Magic Number,ServiceStack.Host,RestPath,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\RestPath.cs,MatchScore,The following statement contains a magic number: score += Math.Max((10 - VariableArgsCount)' 1) * 100;
Magic Number,ServiceStack.Host,RestPath,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\RestPath.cs,MatchScore,The following statement contains a magic number: score += Math.Max((10 - VariableArgsCount)' 1) * 100;
Magic Number,ServiceStack.Host,RestPath,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\RestPath.cs,MatchScore,The following statement contains a magic number: score += exactVerb ? 10 : 1;
Magic Number,ServiceStack.Host,RestPath,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\RestPath.cs,AfterInit,The following statement contains a magic number: regexParts.Length == 2
Magic Number,ServiceStack.Host,RestPath,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\RestPath.cs,ExplodeComponents,The following statement contains a magic number: subComponents.Length < 2
Magic Number,ServiceStack.Host,ServiceMetadata,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\ServiceMetadata.cs,CreateRequestFromUrl,The following statement contains a magic number: parts.Length == 2
Magic Number,ServiceStack.Host.Handlers,ForbiddenHttpHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\Handlers\ForbiddenHttpHandler.cs,ProcessRequestAsync,The following statement contains a magic number: response.StatusCode = 403;
Magic Number,ServiceStack.Host.Handlers,NotFoundHttpHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\Handlers\NotFoundHttpHandler.cs,ProcessRequestAsync,The following statement contains a magic number: response.StatusCode = 404;
Magic Number,ServiceStack.Host.Handlers,SoapHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\Handlers\SoapHandler.cs,SetErrorStatusIfAny,The following statement contains a magic number: res.StatusCode = 200;
Magic Number,ServiceStack.Host.Handlers,SoapHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\Handlers\SoapHandler.cs,SetErrorStatusIfAny,The following statement contains a magic number: statusCode >= 400
Magic Number,ServiceStack.Host.Handlers,StaticFileHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\Handlers\StaticFileHandler.cs,ProcessRequestAsync,The following statement contains a magic number: await response.EndHttpHandlerRequestAsync(afterHeaders: async r =>              {                  var node = this.VirtualNode ?? request.GetVirtualNode();                  var file = node as IVirtualFile;                  var appHost = HostContext.AppHost;                  if (file == null)                  {                      if (node is IVirtualDirectory dir)                      {                          file = dir.GetDefaultDocument(appHost.Config.DefaultDocuments);                          if (file != null && HostContext.Config.RedirectToDefaultDocuments)                          {                              r.Redirect(request.GetPathUrl() + '/' + file.Name);                              return;                          }                      }                        if (file == null)                      {                          var fileName = request.PathInfo;                          var originalFileName = fileName;                            if (Env.IsMono)                          {                              //Create a case-insensitive file index of all host files                              if (allFiles == null)                                  allFiles = CreateFileIndex(appHost.RootDirectory.RealPath);                              if (allDirs == null)                                  allDirs = CreateDirIndex(appHost.RootDirectory.RealPath);                                if (allFiles.TryGetValue(fileName.ToLower()' out fileName))                              {                                  file = appHost.VirtualFileSources.GetFile(fileName);                              }                          }                            if (file == null)                          {                              var msg = ErrorMessages.FileNotExistsFmt.Fmt(request.PathInfo.SafeInput());                              log.Warn($"{msg} in path: {originalFileName}");                              response.StatusCode = 404;                              response.StatusDescription = msg;                              return;                          }                      }                  }                    file.Refresh(); //refresh FileInfo' DateModified' Length                    if (r.ContentType != null && appHost.Config.AddMaxAgeForStaticMimeTypes.TryGetValue(r.ContentType' out var maxAge))                  {                      r.AddHeader(HttpHeaders.CacheControl' "max-age=" + maxAge.TotalSeconds);                  }                    if (request.HasNotModifiedSince(file.LastModified))                  {                      r.ContentType = MimeTypes.GetMimeType(file.Name);                      r.StatusCode = (int)HttpStatusCode.NotModified;                      r.StatusDescription = HttpStatusCode.NotModified.ToString();                        ResponseFilter?.Invoke(request' r' file);                      return;                  }                    try                  {                      var encoding = request.GetCompressionType();                      var shouldCompress = encoding != null && appHost.ShouldCompressFile(file);                      r.AddHeaderLastModified(file.LastModified);                      r.ContentType = MimeTypes.GetMimeType(file.Name);                        if (ResponseFilter != null)                      {                          ResponseFilter(request' r' file);                            if (r.IsClosed)                              return;                      }                        if (!HostContext.DebugMode && file.VirtualPath.EqualsIgnoreCase(DefaultFilePath))                      {                          if (file.LastModified > DefaultFileModified)                              SetDefaultFile(DefaultFilePath' file.ReadAllBytes()' file.LastModified); //reload                            if (!shouldCompress)                          {                              await r.OutputStream.WriteAsync(DefaultFileContents);                              await r.OutputStream.FlushAsync();                          }                          else                          {                              byte[] zipBytes = null;                              if (encoding == CompressionTypes.GZip)                              {                                  zipBytes = DefaultFileContentsGzip ??                                             (DefaultFileContentsGzip = DefaultFileContents.CompressBytes(encoding));                              }                              else if (encoding == CompressionTypes.Deflate)                              {                                  zipBytes = DefaultFileContentsDeflate ??                                             (DefaultFileContentsDeflate = DefaultFileContents.CompressBytes(encoding));                              }                              else                              {                                  zipBytes = DefaultFileContents.CompressBytes(encoding);                              }                              r.AddHeader(HttpHeaders.ContentEncoding' encoding);                              r.SetContentLength(zipBytes.Length);                              await r.OutputStream.WriteAsync(zipBytes);                              await r.OutputStream.FlushAsync();                          }                            r.Close();                          return;                      }                        if (appHost.Config.AllowPartialResponses)                          r.AddHeader(HttpHeaders.AcceptRanges' "bytes");                      long contentLength = file.Length;                      long rangeStart' rangeEnd;                      var rangeHeader = request.Headers[HttpHeaders.Range];                      if (appHost.Config.AllowPartialResponses && rangeHeader != null)                      {                          rangeHeader.ExtractHttpRanges(contentLength' out rangeStart' out rangeEnd);                            if (rangeEnd > contentLength - 1)                              rangeEnd = contentLength - 1;                            r.AddHttpRangeResponseHeaders(rangeStart: rangeStart' rangeEnd: rangeEnd' contentLength: contentLength);                      }                      else                      {                          rangeStart = 0;                          rangeEnd = contentLength - 1;                      }                      var outputStream = r.OutputStream;                      using (var fs = file.OpenRead())                      {                          if (rangeStart != 0 || rangeEnd != file.Length - 1)                          {                              await fs.WritePartialToAsync(outputStream' rangeStart' rangeEnd);                          }                          else                          {                              if (!shouldCompress)                              {                                  r.SetContentLength(contentLength);                                  await fs.CopyToAsync(outputStream' BufferSize);                                  await outputStream.FlushAsync();                              }                              else                              {                                  r.AddHeader(HttpHeaders.ContentEncoding' encoding);                                  outputStream = outputStream.CompressStream(encoding);                                  await fs.CopyToAsync(outputStream);                                  await outputStream.FlushAsync();                                  outputStream.Close();                              }                          }                      }                  }  #if !NETSTANDARD2_0                  catch (System.Net.HttpListenerException ex)                  {                      if (ex.ErrorCode == 1229)                          return;                      //Error: 1229 is "An operation was attempted on a nonexistent network connection"                      //This exception occurs when http stream is terminated by web browser because user                      //seek video forward and new http request will be sent by browser                      //with attribute in header "Range: bytes=newSeekPosition-"                      throw;                  }  #endif                  catch (Exception ex)                  {                      log.ErrorFormat($"Static file {request.PathInfo} forbidden: {ex.Message}");                      throw new HttpException(403' "Forbidden.");                  }              });
Magic Number,ServiceStack.Host.Handlers,StaticFileHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\Handlers\StaticFileHandler.cs,ProcessRequestAsync,The following statement contains a magic number: await response.EndHttpHandlerRequestAsync(afterHeaders: async r =>              {                  var node = this.VirtualNode ?? request.GetVirtualNode();                  var file = node as IVirtualFile;                  var appHost = HostContext.AppHost;                  if (file == null)                  {                      if (node is IVirtualDirectory dir)                      {                          file = dir.GetDefaultDocument(appHost.Config.DefaultDocuments);                          if (file != null && HostContext.Config.RedirectToDefaultDocuments)                          {                              r.Redirect(request.GetPathUrl() + '/' + file.Name);                              return;                          }                      }                        if (file == null)                      {                          var fileName = request.PathInfo;                          var originalFileName = fileName;                            if (Env.IsMono)                          {                              //Create a case-insensitive file index of all host files                              if (allFiles == null)                                  allFiles = CreateFileIndex(appHost.RootDirectory.RealPath);                              if (allDirs == null)                                  allDirs = CreateDirIndex(appHost.RootDirectory.RealPath);                                if (allFiles.TryGetValue(fileName.ToLower()' out fileName))                              {                                  file = appHost.VirtualFileSources.GetFile(fileName);                              }                          }                            if (file == null)                          {                              var msg = ErrorMessages.FileNotExistsFmt.Fmt(request.PathInfo.SafeInput());                              log.Warn($"{msg} in path: {originalFileName}");                              response.StatusCode = 404;                              response.StatusDescription = msg;                              return;                          }                      }                  }                    file.Refresh(); //refresh FileInfo' DateModified' Length                    if (r.ContentType != null && appHost.Config.AddMaxAgeForStaticMimeTypes.TryGetValue(r.ContentType' out var maxAge))                  {                      r.AddHeader(HttpHeaders.CacheControl' "max-age=" + maxAge.TotalSeconds);                  }                    if (request.HasNotModifiedSince(file.LastModified))                  {                      r.ContentType = MimeTypes.GetMimeType(file.Name);                      r.StatusCode = (int)HttpStatusCode.NotModified;                      r.StatusDescription = HttpStatusCode.NotModified.ToString();                        ResponseFilter?.Invoke(request' r' file);                      return;                  }                    try                  {                      var encoding = request.GetCompressionType();                      var shouldCompress = encoding != null && appHost.ShouldCompressFile(file);                      r.AddHeaderLastModified(file.LastModified);                      r.ContentType = MimeTypes.GetMimeType(file.Name);                        if (ResponseFilter != null)                      {                          ResponseFilter(request' r' file);                            if (r.IsClosed)                              return;                      }                        if (!HostContext.DebugMode && file.VirtualPath.EqualsIgnoreCase(DefaultFilePath))                      {                          if (file.LastModified > DefaultFileModified)                              SetDefaultFile(DefaultFilePath' file.ReadAllBytes()' file.LastModified); //reload                            if (!shouldCompress)                          {                              await r.OutputStream.WriteAsync(DefaultFileContents);                              await r.OutputStream.FlushAsync();                          }                          else                          {                              byte[] zipBytes = null;                              if (encoding == CompressionTypes.GZip)                              {                                  zipBytes = DefaultFileContentsGzip ??                                             (DefaultFileContentsGzip = DefaultFileContents.CompressBytes(encoding));                              }                              else if (encoding == CompressionTypes.Deflate)                              {                                  zipBytes = DefaultFileContentsDeflate ??                                             (DefaultFileContentsDeflate = DefaultFileContents.CompressBytes(encoding));                              }                              else                              {                                  zipBytes = DefaultFileContents.CompressBytes(encoding);                              }                              r.AddHeader(HttpHeaders.ContentEncoding' encoding);                              r.SetContentLength(zipBytes.Length);                              await r.OutputStream.WriteAsync(zipBytes);                              await r.OutputStream.FlushAsync();                          }                            r.Close();                          return;                      }                        if (appHost.Config.AllowPartialResponses)                          r.AddHeader(HttpHeaders.AcceptRanges' "bytes");                      long contentLength = file.Length;                      long rangeStart' rangeEnd;                      var rangeHeader = request.Headers[HttpHeaders.Range];                      if (appHost.Config.AllowPartialResponses && rangeHeader != null)                      {                          rangeHeader.ExtractHttpRanges(contentLength' out rangeStart' out rangeEnd);                            if (rangeEnd > contentLength - 1)                              rangeEnd = contentLength - 1;                            r.AddHttpRangeResponseHeaders(rangeStart: rangeStart' rangeEnd: rangeEnd' contentLength: contentLength);                      }                      else                      {                          rangeStart = 0;                          rangeEnd = contentLength - 1;                      }                      var outputStream = r.OutputStream;                      using (var fs = file.OpenRead())                      {                          if (rangeStart != 0 || rangeEnd != file.Length - 1)                          {                              await fs.WritePartialToAsync(outputStream' rangeStart' rangeEnd);                          }                          else                          {                              if (!shouldCompress)                              {                                  r.SetContentLength(contentLength);                                  await fs.CopyToAsync(outputStream' BufferSize);                                  await outputStream.FlushAsync();                              }                              else                              {                                  r.AddHeader(HttpHeaders.ContentEncoding' encoding);                                  outputStream = outputStream.CompressStream(encoding);                                  await fs.CopyToAsync(outputStream);                                  await outputStream.FlushAsync();                                  outputStream.Close();                              }                          }                      }                  }  #if !NETSTANDARD2_0                  catch (System.Net.HttpListenerException ex)                  {                      if (ex.ErrorCode == 1229)                          return;                      //Error: 1229 is "An operation was attempted on a nonexistent network connection"                      //This exception occurs when http stream is terminated by web browser because user                      //seek video forward and new http request will be sent by browser                      //with attribute in header "Range: bytes=newSeekPosition-"                      throw;                  }  #endif                  catch (Exception ex)                  {                      log.ErrorFormat($"Static file {request.PathInfo} forbidden: {ex.Message}");                      throw new HttpException(403' "Forbidden.");                  }              });
Magic Number,ServiceStack.Host.Handlers,StaticFileHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\Handlers\StaticFileHandler.cs,ProcessRequestAsync,The following statement contains a magic number: await response.EndHttpHandlerRequestAsync(afterHeaders: async r =>              {                  var node = this.VirtualNode ?? request.GetVirtualNode();                  var file = node as IVirtualFile;                  var appHost = HostContext.AppHost;                  if (file == null)                  {                      if (node is IVirtualDirectory dir)                      {                          file = dir.GetDefaultDocument(appHost.Config.DefaultDocuments);                          if (file != null && HostContext.Config.RedirectToDefaultDocuments)                          {                              r.Redirect(request.GetPathUrl() + '/' + file.Name);                              return;                          }                      }                        if (file == null)                      {                          var fileName = request.PathInfo;                          var originalFileName = fileName;                            if (Env.IsMono)                          {                              //Create a case-insensitive file index of all host files                              if (allFiles == null)                                  allFiles = CreateFileIndex(appHost.RootDirectory.RealPath);                              if (allDirs == null)                                  allDirs = CreateDirIndex(appHost.RootDirectory.RealPath);                                if (allFiles.TryGetValue(fileName.ToLower()' out fileName))                              {                                  file = appHost.VirtualFileSources.GetFile(fileName);                              }                          }                            if (file == null)                          {                              var msg = ErrorMessages.FileNotExistsFmt.Fmt(request.PathInfo.SafeInput());                              log.Warn($"{msg} in path: {originalFileName}");                              response.StatusCode = 404;                              response.StatusDescription = msg;                              return;                          }                      }                  }                    file.Refresh(); //refresh FileInfo' DateModified' Length                    if (r.ContentType != null && appHost.Config.AddMaxAgeForStaticMimeTypes.TryGetValue(r.ContentType' out var maxAge))                  {                      r.AddHeader(HttpHeaders.CacheControl' "max-age=" + maxAge.TotalSeconds);                  }                    if (request.HasNotModifiedSince(file.LastModified))                  {                      r.ContentType = MimeTypes.GetMimeType(file.Name);                      r.StatusCode = (int)HttpStatusCode.NotModified;                      r.StatusDescription = HttpStatusCode.NotModified.ToString();                        ResponseFilter?.Invoke(request' r' file);                      return;                  }                    try                  {                      var encoding = request.GetCompressionType();                      var shouldCompress = encoding != null && appHost.ShouldCompressFile(file);                      r.AddHeaderLastModified(file.LastModified);                      r.ContentType = MimeTypes.GetMimeType(file.Name);                        if (ResponseFilter != null)                      {                          ResponseFilter(request' r' file);                            if (r.IsClosed)                              return;                      }                        if (!HostContext.DebugMode && file.VirtualPath.EqualsIgnoreCase(DefaultFilePath))                      {                          if (file.LastModified > DefaultFileModified)                              SetDefaultFile(DefaultFilePath' file.ReadAllBytes()' file.LastModified); //reload                            if (!shouldCompress)                          {                              await r.OutputStream.WriteAsync(DefaultFileContents);                              await r.OutputStream.FlushAsync();                          }                          else                          {                              byte[] zipBytes = null;                              if (encoding == CompressionTypes.GZip)                              {                                  zipBytes = DefaultFileContentsGzip ??                                             (DefaultFileContentsGzip = DefaultFileContents.CompressBytes(encoding));                              }                              else if (encoding == CompressionTypes.Deflate)                              {                                  zipBytes = DefaultFileContentsDeflate ??                                             (DefaultFileContentsDeflate = DefaultFileContents.CompressBytes(encoding));                              }                              else                              {                                  zipBytes = DefaultFileContents.CompressBytes(encoding);                              }                              r.AddHeader(HttpHeaders.ContentEncoding' encoding);                              r.SetContentLength(zipBytes.Length);                              await r.OutputStream.WriteAsync(zipBytes);                              await r.OutputStream.FlushAsync();                          }                            r.Close();                          return;                      }                        if (appHost.Config.AllowPartialResponses)                          r.AddHeader(HttpHeaders.AcceptRanges' "bytes");                      long contentLength = file.Length;                      long rangeStart' rangeEnd;                      var rangeHeader = request.Headers[HttpHeaders.Range];                      if (appHost.Config.AllowPartialResponses && rangeHeader != null)                      {                          rangeHeader.ExtractHttpRanges(contentLength' out rangeStart' out rangeEnd);                            if (rangeEnd > contentLength - 1)                              rangeEnd = contentLength - 1;                            r.AddHttpRangeResponseHeaders(rangeStart: rangeStart' rangeEnd: rangeEnd' contentLength: contentLength);                      }                      else                      {                          rangeStart = 0;                          rangeEnd = contentLength - 1;                      }                      var outputStream = r.OutputStream;                      using (var fs = file.OpenRead())                      {                          if (rangeStart != 0 || rangeEnd != file.Length - 1)                          {                              await fs.WritePartialToAsync(outputStream' rangeStart' rangeEnd);                          }                          else                          {                              if (!shouldCompress)                              {                                  r.SetContentLength(contentLength);                                  await fs.CopyToAsync(outputStream' BufferSize);                                  await outputStream.FlushAsync();                              }                              else                              {                                  r.AddHeader(HttpHeaders.ContentEncoding' encoding);                                  outputStream = outputStream.CompressStream(encoding);                                  await fs.CopyToAsync(outputStream);                                  await outputStream.FlushAsync();                                  outputStream.Close();                              }                          }                      }                  }  #if !NETSTANDARD2_0                  catch (System.Net.HttpListenerException ex)                  {                      if (ex.ErrorCode == 1229)                          return;                      //Error: 1229 is "An operation was attempted on a nonexistent network connection"                      //This exception occurs when http stream is terminated by web browser because user                      //seek video forward and new http request will be sent by browser                      //with attribute in header "Range: bytes=newSeekPosition-"                      throw;                  }  #endif                  catch (Exception ex)                  {                      log.ErrorFormat($"Static file {request.PathInfo} forbidden: {ex.Message}");                      throw new HttpException(403' "Forbidden.");                  }              });
Magic Number,ServiceStack.Host.HttpListener,HttpListenerBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\HttpListener\HttpListenerBase.cs,AddUrlReservationToAcl,The following statement contains a magic number: Environment.OSVersion.Version.Major < 6
Magic Number,ServiceStack.Host.HttpListener,HttpListenerBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\HttpListener\HttpListenerBase.cs,RemoveUrlReservationFromAcl,The following statement contains a magic number: Environment.OSVersion.Version.Major < 6
Magic Number,ServiceStack.Host.HttpListener,ListenerRequest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\HttpListener\ListenerRequest.cs,LoadMultiPart,The following statement contains a magic number: var ms = MemoryStreamFactory.GetStream(32 * 1024);
Magic Number,ServiceStack.Host.HttpListener,ListenerRequest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\HttpListener\ListenerRequest.cs,LoadMultiPart,The following statement contains a magic number: var ms = MemoryStreamFactory.GetStream(32 * 1024);
Magic Number,ServiceStack.Host.HttpListener,ListenerRequest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\HttpListener\ListenerRequest.cs,ThrowValidationException,The following statement contains a magic number: v = v.Substring(0' 16) + "...\"";
Magic Number,ServiceStack.Host.HttpListener,ListenerRequest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\HttpListener\ListenerRequest.cs,ThrowValidationException,The following statement contains a magic number: v.Length > 20
Magic Number,ServiceStack.Host.HttpListener,ListenerRequest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\HttpListener\ListenerRequest.cs,IsInvalidString,The following statement contains a magic number: len < 2
Magic Number,ServiceStack.Host.HttpListener,HttpPostedFile,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\HttpListener\ListenerRequest.Mono.cs,SaveAs,The following statement contains a magic number: byte[] buffer = new byte[16 * 1024];
Magic Number,ServiceStack.Host.HttpListener,HttpPostedFile,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\HttpListener\ListenerRequest.Mono.cs,SaveAs,The following statement contains a magic number: byte[] buffer = new byte[16 * 1024];
Magic Number,ServiceStack.Host.HttpListener,HttpPostedFile,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\HttpListener\ListenerRequest.Mono.cs,SaveAs,The following statement contains a magic number: (n = stream.Read(buffer' 0' 16 * 1024)) != 0
Magic Number,ServiceStack.Host.HttpListener,HttpPostedFile,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\HttpListener\ListenerRequest.Mono.cs,SaveAs,The following statement contains a magic number: (n = stream.Read(buffer' 0' 16 * 1024)) != 0
Magic Number,ServiceStack.Host.HttpListener,HttpMultipart,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Host\HttpListener\ListenerRequest.Mono.cs,HttpMultipart,The following statement contains a magic number: buffer = new byte[boundary_bytes.Length + 2];
Magic Number,ServiceStack.Html,HtmlCompressor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.html.cs,preserveBlocks,The following statement contains a magic number: condCommentBlocks.Add(                              match.Groups[1].Value + condCommentCompressor.Compress(match.Groups[2].Value) + match.Groups[3].Value);
Magic Number,ServiceStack.Html,HtmlCompressor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.html.cs,preserveBlocks,The following statement contains a magic number: condCommentBlocks.Add(                              match.Groups[1].Value + condCommentCompressor.Compress(match.Groups[2].Value) + match.Groups[3].Value);
Magic Number,ServiceStack.Html,HtmlCompressor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.html.cs,preserveBlocks,The following statement contains a magic number: match.Groups[2].Value.Trim().Length > 0
Magic Number,ServiceStack.Html,HtmlCompressor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.html.cs,preserveBlocks,The following statement contains a magic number: eventBlocks.Add(match.Groups[2].Value);
Magic Number,ServiceStack.Html,HtmlCompressor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.html.cs,preserveBlocks,The following statement contains a magic number: match.Groups[2].Value.Trim().Length > 0
Magic Number,ServiceStack.Html,HtmlCompressor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.html.cs,preserveBlocks,The following statement contains a magic number: eventBlocks.Add(match.Groups[2].Value);
Magic Number,ServiceStack.Html,HtmlCompressor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.html.cs,preserveBlocks,The following statement contains a magic number: match.Groups[2].Value.Trim().Length > 0
Magic Number,ServiceStack.Html,HtmlCompressor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.html.cs,preserveBlocks,The following statement contains a magic number: preBlocks.Add(match.Groups[2].Value);
Magic Number,ServiceStack.Html,HtmlCompressor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.html.cs,preserveBlocks,The following statement contains a magic number: match.Groups[2].Value.Trim().Length > 0
Magic Number,ServiceStack.Html,HtmlCompressor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.html.cs,preserveBlocks,The following statement contains a magic number: type = typeMatcher.Groups[2].Value.ToLowerInvariant();
Magic Number,ServiceStack.Html,HtmlCompressor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.html.cs,preserveBlocks,The following statement contains a magic number: scriptBlocks.Add(match.Groups[2].Value);
Magic Number,ServiceStack.Html,HtmlCompressor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.html.cs,preserveBlocks,The following statement contains a magic number: match.Groups[2].Value.Trim().Length > 0
Magic Number,ServiceStack.Html,HtmlCompressor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.html.cs,preserveBlocks,The following statement contains a magic number: styleBlocks.Add(match.Groups[2].Value);
Magic Number,ServiceStack.Html,HtmlCompressor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.html.cs,preserveBlocks,The following statement contains a magic number: match.Groups[2].Value.Trim().Length > 0
Magic Number,ServiceStack.Html,HtmlCompressor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.html.cs,preserveBlocks,The following statement contains a magic number: taBlocks.Add(match.Groups[2].Value);
Magic Number,ServiceStack.Html,HtmlCompressor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.html.cs,preserveBlocks,The following statement contains a magic number: match.Groups[2].Value.Trim().Length > 0
Magic Number,ServiceStack.Html,HtmlCompressor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.html.cs,removeQuotesInsideTags,The following statement contains a magic number: match.Groups[3].Value.Trim().Length == 0
Magic Number,ServiceStack.Html,HtmlCompressor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.html.cs,removeSpacesInsideTags,The following statement contains a magic number: match.Groups[2].Value.StartsWith("/") && tagLastUnquotedValuePattern.IsMatch(match.Groups[1].Value)
Magic Number,ServiceStack.Html,JSMinifier,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.js.cs,jsmin,The following statement contains a magic number: action(3);
Magic Number,ServiceStack.Html,JSMinifier,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.js.cs,jsmin,The following statement contains a magic number: switch (theA)          {            case ' ':              {                if (isAlphanum(theB))                {                  action(1);                }                else                {                  action(2);                }                break;              }            case '\n':              {                switch (theB)                {                  case '{':                  case '[':                  case '(':                  case '+':                  case '-':                    {                      action(1);                      break;                    }                  case ' ':                    {                      action(3);                      break;                    }                  default:                    {                      if (isAlphanum(theB))                      {                        action(1);                      }                      else                      {                        action(2);                      }                      break;                    }                }                break;              }            default:              {                switch (theB)                {                  case ' ':                    {                      if (isAlphanum(theA))                      {                        action(1);                        break;                      }                      action(3);                      break;                    }                  case '\n':                    {                      switch (theA)                      {                        case '}':                        case ']':                        case ')':                        case '+':                        case '-':                        case '"':                        case '\'':                          {                            action(1);                            break;                          }                        default:                          {                            if (isAlphanum(theA))                            {                              action(1);                            }                            else                            {                              action(3);                            }                            break;                          }                      }                      break;                    }                  default:                    {                      action(1);                      break;                    }                }                break;              }          }
Magic Number,ServiceStack.Html,JSMinifier,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.js.cs,jsmin,The following statement contains a magic number: switch (theA)          {            case ' ':              {                if (isAlphanum(theB))                {                  action(1);                }                else                {                  action(2);                }                break;              }            case '\n':              {                switch (theB)                {                  case '{':                  case '[':                  case '(':                  case '+':                  case '-':                    {                      action(1);                      break;                    }                  case ' ':                    {                      action(3);                      break;                    }                  default:                    {                      if (isAlphanum(theB))                      {                        action(1);                      }                      else                      {                        action(2);                      }                      break;                    }                }                break;              }            default:              {                switch (theB)                {                  case ' ':                    {                      if (isAlphanum(theA))                      {                        action(1);                        break;                      }                      action(3);                      break;                    }                  case '\n':                    {                      switch (theA)                      {                        case '}':                        case ']':                        case ')':                        case '+':                        case '-':                        case '"':                        case '\'':                          {                            action(1);                            break;                          }                        default:                          {                            if (isAlphanum(theA))                            {                              action(1);                            }                            else                            {                              action(3);                            }                            break;                          }                      }                      break;                    }                  default:                    {                      action(1);                      break;                    }                }                break;              }          }
Magic Number,ServiceStack.Html,JSMinifier,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.js.cs,jsmin,The following statement contains a magic number: switch (theA)          {            case ' ':              {                if (isAlphanum(theB))                {                  action(1);                }                else                {                  action(2);                }                break;              }            case '\n':              {                switch (theB)                {                  case '{':                  case '[':                  case '(':                  case '+':                  case '-':                    {                      action(1);                      break;                    }                  case ' ':                    {                      action(3);                      break;                    }                  default:                    {                      if (isAlphanum(theB))                      {                        action(1);                      }                      else                      {                        action(2);                      }                      break;                    }                }                break;              }            default:              {                switch (theB)                {                  case ' ':                    {                      if (isAlphanum(theA))                      {                        action(1);                        break;                      }                      action(3);                      break;                    }                  case '\n':                    {                      switch (theA)                      {                        case '}':                        case ']':                        case ')':                        case '+':                        case '-':                        case '"':                        case '\'':                          {                            action(1);                            break;                          }                        default:                          {                            if (isAlphanum(theA))                            {                              action(1);                            }                            else                            {                              action(3);                            }                            break;                          }                      }                      break;                    }                  default:                    {                      action(1);                      break;                    }                }                break;              }          }
Magic Number,ServiceStack.Html,JSMinifier,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.js.cs,jsmin,The following statement contains a magic number: switch (theA)          {            case ' ':              {                if (isAlphanum(theB))                {                  action(1);                }                else                {                  action(2);                }                break;              }            case '\n':              {                switch (theB)                {                  case '{':                  case '[':                  case '(':                  case '+':                  case '-':                    {                      action(1);                      break;                    }                  case ' ':                    {                      action(3);                      break;                    }                  default:                    {                      if (isAlphanum(theB))                      {                        action(1);                      }                      else                      {                        action(2);                      }                      break;                    }                }                break;              }            default:              {                switch (theB)                {                  case ' ':                    {                      if (isAlphanum(theA))                      {                        action(1);                        break;                      }                      action(3);                      break;                    }                  case '\n':                    {                      switch (theA)                      {                        case '}':                        case ']':                        case ')':                        case '+':                        case '-':                        case '"':                        case '\'':                          {                            action(1);                            break;                          }                        default:                          {                            if (isAlphanum(theA))                            {                              action(1);                            }                            else                            {                              action(3);                            }                            break;                          }                      }                      break;                    }                  default:                    {                      action(1);                      break;                    }                }                break;              }          }
Magic Number,ServiceStack.Html,JSMinifier,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.js.cs,jsmin,The following statement contains a magic number: switch (theA)          {            case ' ':              {                if (isAlphanum(theB))                {                  action(1);                }                else                {                  action(2);                }                break;              }            case '\n':              {                switch (theB)                {                  case '{':                  case '[':                  case '(':                  case '+':                  case '-':                    {                      action(1);                      break;                    }                  case ' ':                    {                      action(3);                      break;                    }                  default:                    {                      if (isAlphanum(theB))                      {                        action(1);                      }                      else                      {                        action(2);                      }                      break;                    }                }                break;              }            default:              {                switch (theB)                {                  case ' ':                    {                      if (isAlphanum(theA))                      {                        action(1);                        break;                      }                      action(3);                      break;                    }                  case '\n':                    {                      switch (theA)                      {                        case '}':                        case ']':                        case ')':                        case '+':                        case '-':                        case '"':                        case '\'':                          {                            action(1);                            break;                          }                        default:                          {                            if (isAlphanum(theA))                            {                              action(1);                            }                            else                            {                              action(3);                            }                            break;                          }                      }                      break;                    }                  default:                    {                      action(1);                      break;                    }                }                break;              }          }
Magic Number,ServiceStack.Html,JSMinifier,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.js.cs,action,The following statement contains a magic number: d <= 2
Magic Number,ServiceStack.Html,JSMinifier,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.js.cs,action,The following statement contains a magic number: d <= 3
Magic Number,ServiceStack.Html,JSMinifier,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.js.cs,isAlphanum,The following statement contains a magic number: return ((c >= 'a' && c <= 'z') || (c >= '0' && c <= '9') ||                (c >= 'A' && c <= 'Z') || c == '_' || c == '$' || c == '\\' ||                c > 126);
Magic Number,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,EvaluateLine,The following statement contains a magic number: level = 6;
Magic Number,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,EvaluateLine,The following statement contains a magic number: level > 6
Magic Number,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,EvaluateLine,The following statement contains a magic number: b.contentStart = line_start + 4;
Magic Number,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,EvaluateLine,The following statement contains a magic number: leadingSpaces >= 4
Magic Number,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,EvaluateLine,The following statement contains a magic number: tabPos >= 0 && tabPos - line_start<4
Magic Number,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,EvaluateLine,The following statement contains a magic number: SkipForward(2);
Magic Number,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,EvaluateLine,The following statement contains a magic number: eol && count >= 3
Magic Number,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,EvaluateLine,The following statement contains a magic number: SkipForward(2);
Magic Number,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,EvaluateLine,The following statement contains a magic number: SkipForward(2);
Magic Number,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,EvaluateLine,The following statement contains a magic number: SkipForward(2);
Magic Number,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,ProcessFencedCodeBlock,The following statement contains a magic number: strFence.Length < 3
Magic Number,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,ProcessFencedCodeBlock,The following statement contains a magic number: endCode -= 2;
Magic Number,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,ProcessFencedCodeBlock,The following statement contains a magic number: input[endCode - 1] == '\r' && input[endCode - 2] == '\n'
Magic Number,MarkdownDeep,HtmlTag,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\HtmlTag.cs,ParseHelper,The following statement contains a magic number: p.SkipForward(3);
Magic Number,MarkdownDeep,Markdown,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\MardownDeep.cs,HtmlEncodeAndConvertTabsToSpaces,The following statement contains a magic number: switch (ch)  				{  					case '\t':  						dest.Append(' ');  						pos++;  						while ((pos % 4) != 0)  						{  							dest.Append(' ');  							pos++;  						}  						pos--;		// Compensate for the pos++ below  						break;    					case '\r':  					case '\n':  						dest.Append('\n');  						pos = 0;  						p.SkipEol();  						continue;    					case '&':  						dest.Append("&amp;");  						break;    					case '<':  						dest.Append("&lt;");  						break;    					case '>':  						dest.Append("&gt;");  						break;    					case '\"':  						dest.Append("&quot;");  						break;    					default:  						dest.Append(ch);  						break;  				}
Magic Number,MarkdownDeep,SpanFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\SpanFormatter.cs,Tokenize,The following statement contains a magic number: switch (current)  				{  					case '*':  					case '_':    						// Create emphasis mark  						token = CreateEmphasisMark();    						if (token != null)  						{  							// Store marks in a separate list the we'll resolve later  							switch (token.type)  							{  								case TokenType.internal_mark:  								case TokenType.opening_mark:  								case TokenType.closing_mark:  									if (emphasis_marks == null)  									{  										emphasis_marks = new List<Token>();  									}  									emphasis_marks.Add(token);  									break;  							}  						}  						break;    					case '`':  						token = ProcessCodeSpan();  						break;    					case '[':  					case '!':  					{  						// Process link reference  						int linkpos = position;  						token = ProcessLinkOrImageOrFootnote();    						// Rewind if invalid syntax  						// (the '[' or '!' will be treated as a regular character and processed below)  						if (token == null)  							position = linkpos;  						break;  					}    					case '<':  					{  						// Is it a valid html tag?  						int save = position;  						HtmlTag tag = HtmlTag.Parse(this);  						if (tag != null)  						{  							if (!m_Markdown.SafeMode || tag.IsSafe())  							{  								// Yes' create a token for it  								token = CreateToken(TokenType.HtmlTag' save' position - save);  							}  							else  							{  								// No' rewrite and encode it  								position = save;  							}  						}  						else  						{  							// No' rewind and check if it's a valid autolink eg: <google.com>  							position = save;  							token = ProcessAutoLink();    							if (token == null)  								position = save;  						}  						break;  					}    					case '&':  					{  						// Is it a valid html entity  						int save=position;  						string unused=null;  						if (SkipHtmlEntity(ref unused))  						{  							// Yes' create a token for it  							token = CreateToken(TokenType.Html' save' position - save);  						}    						break;  					}    					case ' ':  					{  						// Check for double space at end of a line  						if (CharAtOffset(1)==' ' && IsLineEnd(CharAtOffset(2)))  						{  							// Yes' skip it  							SkipForward(2);    							// Don't put br's at the end of a paragraph  							if (!eof)  							{  								SkipEol();  								token = CreateToken(TokenType.br' end_text_token' 0);  							}  						}  						break;  					}    					case '\\':  					{  						// Special handling for escaping <autolinks>  						/*  						if (CharAtOffset(1) == '<')  						{  							// Is it an autolink?  							int savepos = position;  							SkipForward(1);  							bool AutoLink = ProcessAutoLink() != null;  							position = savepos;    							if (AutoLink)  							{  								token = CreateToken(TokenType.Text' position + 1' 1);  								SkipForward(2);  							}  						}  						else  						 */  						{  							// Check followed by an escapable character  							if (Utils.IsEscapableChar(CharAtOffset(1)' ExtraMode))  							{  								token = CreateToken(TokenType.Text' position + 1' 1);  								SkipForward(2);  							}  						}  						break;  					}  				}
Magic Number,MarkdownDeep,SpanFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\SpanFormatter.cs,Tokenize,The following statement contains a magic number: switch (current)  				{  					case '*':  					case '_':    						// Create emphasis mark  						token = CreateEmphasisMark();    						if (token != null)  						{  							// Store marks in a separate list the we'll resolve later  							switch (token.type)  							{  								case TokenType.internal_mark:  								case TokenType.opening_mark:  								case TokenType.closing_mark:  									if (emphasis_marks == null)  									{  										emphasis_marks = new List<Token>();  									}  									emphasis_marks.Add(token);  									break;  							}  						}  						break;    					case '`':  						token = ProcessCodeSpan();  						break;    					case '[':  					case '!':  					{  						// Process link reference  						int linkpos = position;  						token = ProcessLinkOrImageOrFootnote();    						// Rewind if invalid syntax  						// (the '[' or '!' will be treated as a regular character and processed below)  						if (token == null)  							position = linkpos;  						break;  					}    					case '<':  					{  						// Is it a valid html tag?  						int save = position;  						HtmlTag tag = HtmlTag.Parse(this);  						if (tag != null)  						{  							if (!m_Markdown.SafeMode || tag.IsSafe())  							{  								// Yes' create a token for it  								token = CreateToken(TokenType.HtmlTag' save' position - save);  							}  							else  							{  								// No' rewrite and encode it  								position = save;  							}  						}  						else  						{  							// No' rewind and check if it's a valid autolink eg: <google.com>  							position = save;  							token = ProcessAutoLink();    							if (token == null)  								position = save;  						}  						break;  					}    					case '&':  					{  						// Is it a valid html entity  						int save=position;  						string unused=null;  						if (SkipHtmlEntity(ref unused))  						{  							// Yes' create a token for it  							token = CreateToken(TokenType.Html' save' position - save);  						}    						break;  					}    					case ' ':  					{  						// Check for double space at end of a line  						if (CharAtOffset(1)==' ' && IsLineEnd(CharAtOffset(2)))  						{  							// Yes' skip it  							SkipForward(2);    							// Don't put br's at the end of a paragraph  							if (!eof)  							{  								SkipEol();  								token = CreateToken(TokenType.br' end_text_token' 0);  							}  						}  						break;  					}    					case '\\':  					{  						// Special handling for escaping <autolinks>  						/*  						if (CharAtOffset(1) == '<')  						{  							// Is it an autolink?  							int savepos = position;  							SkipForward(1);  							bool AutoLink = ProcessAutoLink() != null;  							position = savepos;    							if (AutoLink)  							{  								token = CreateToken(TokenType.Text' position + 1' 1);  								SkipForward(2);  							}  						}  						else  						 */  						{  							// Check followed by an escapable character  							if (Utils.IsEscapableChar(CharAtOffset(1)' ExtraMode))  							{  								token = CreateToken(TokenType.Text' position + 1' 1);  								SkipForward(2);  							}  						}  						break;  					}  				}
Magic Number,MarkdownDeep,SpanFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\SpanFormatter.cs,Tokenize,The following statement contains a magic number: switch (current)  				{  					case '*':  					case '_':    						// Create emphasis mark  						token = CreateEmphasisMark();    						if (token != null)  						{  							// Store marks in a separate list the we'll resolve later  							switch (token.type)  							{  								case TokenType.internal_mark:  								case TokenType.opening_mark:  								case TokenType.closing_mark:  									if (emphasis_marks == null)  									{  										emphasis_marks = new List<Token>();  									}  									emphasis_marks.Add(token);  									break;  							}  						}  						break;    					case '`':  						token = ProcessCodeSpan();  						break;    					case '[':  					case '!':  					{  						// Process link reference  						int linkpos = position;  						token = ProcessLinkOrImageOrFootnote();    						// Rewind if invalid syntax  						// (the '[' or '!' will be treated as a regular character and processed below)  						if (token == null)  							position = linkpos;  						break;  					}    					case '<':  					{  						// Is it a valid html tag?  						int save = position;  						HtmlTag tag = HtmlTag.Parse(this);  						if (tag != null)  						{  							if (!m_Markdown.SafeMode || tag.IsSafe())  							{  								// Yes' create a token for it  								token = CreateToken(TokenType.HtmlTag' save' position - save);  							}  							else  							{  								// No' rewrite and encode it  								position = save;  							}  						}  						else  						{  							// No' rewind and check if it's a valid autolink eg: <google.com>  							position = save;  							token = ProcessAutoLink();    							if (token == null)  								position = save;  						}  						break;  					}    					case '&':  					{  						// Is it a valid html entity  						int save=position;  						string unused=null;  						if (SkipHtmlEntity(ref unused))  						{  							// Yes' create a token for it  							token = CreateToken(TokenType.Html' save' position - save);  						}    						break;  					}    					case ' ':  					{  						// Check for double space at end of a line  						if (CharAtOffset(1)==' ' && IsLineEnd(CharAtOffset(2)))  						{  							// Yes' skip it  							SkipForward(2);    							// Don't put br's at the end of a paragraph  							if (!eof)  							{  								SkipEol();  								token = CreateToken(TokenType.br' end_text_token' 0);  							}  						}  						break;  					}    					case '\\':  					{  						// Special handling for escaping <autolinks>  						/*  						if (CharAtOffset(1) == '<')  						{  							// Is it an autolink?  							int savepos = position;  							SkipForward(1);  							bool AutoLink = ProcessAutoLink() != null;  							position = savepos;    							if (AutoLink)  							{  								token = CreateToken(TokenType.Text' position + 1' 1);  								SkipForward(2);  							}  						}  						else  						 */  						{  							// Check followed by an escapable character  							if (Utils.IsEscapableChar(CharAtOffset(1)' ExtraMode))  							{  								token = CreateToken(TokenType.Text' position + 1' 1);  								SkipForward(2);  							}  						}  						break;  					}  				}
Magic Number,MarkdownDeep,SpanFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\SpanFormatter.cs,ResolveEmphasisMarks,The following statement contains a magic number: style = (style % 2)==1 ? 1 : 2;
Magic Number,MarkdownDeep,SpanFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\SpanFormatter.cs,ResolveEmphasisMarks,The following statement contains a magic number: style = (style % 2)==1 ? 1 : 2;
Magic Number,MarkdownDeep,SpanFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\SpanFormatter.cs,ResolveEmphasisMarks,The following statement contains a magic number: style >= 3
Magic Number,MarkdownDeep,SpanFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\SpanFormatter.cs,ResolveEmphasisMarks_classic,The following statement contains a magic number: opening_mark.length < 2
Magic Number,MarkdownDeep,SpanFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\SpanFormatter.cs,ResolveEmphasisMarks_classic,The following statement contains a magic number: closing_mark.length < 2
Magic Number,MarkdownDeep,SpanFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\SpanFormatter.cs,ResolveEmphasisMarks_classic,The following statement contains a magic number: SplitMarkToken(tokens' marks' opening_mark' 2);
Magic Number,MarkdownDeep,SpanFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\SpanFormatter.cs,ResolveEmphasisMarks_classic,The following statement contains a magic number: opening_mark.length > 2
Magic Number,MarkdownDeep,SpanFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\SpanFormatter.cs,ResolveEmphasisMarks_classic,The following statement contains a magic number: closing_mark=SplitMarkToken(tokens' marks' closing_mark' closing_mark.length-2);
Magic Number,MarkdownDeep,SpanFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\SpanFormatter.cs,ResolveEmphasisMarks_classic,The following statement contains a magic number: closing_mark.length > 2
Magic Number,MarkdownDeep,SpanFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\SpanFormatter.cs,ProcessAutoLink,The following statement contains a magic number: link_text = url.Substring(7);
Magic Number,MarkdownDeep,Utils,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\Utils.cs,HtmlRandomize,The following statement contains a magic number: int x = r.Next() % 100;
Magic Number,MarkdownDeep,Utils,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\Utils.cs,HtmlRandomize,The following statement contains a magic number: x > 90 && ch != '@'
Magic Number,MarkdownDeep,Utils,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\Utils.cs,SkipEscapableChar,The following statement contains a magic number: p.SkipForward(2);
Magic Number,MarkdownDeep,Utils,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\Utils.cs,StripHtmlID,The following statement contains a magic number: int startId = pos + 2;
Magic Number,ServiceStack.Messaging,BackgroundMqCollection<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Messaging\BackgroundMqService.cs,GetDescription,The following statement contains a magic number: var keyWithPadding = $"{entry.Key}:".PadRight(Math.Max(longestKey + 1' 31)' ' ');
Magic Number,ServiceStack.Metadata,XsdTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Metadata\XsdTypes.cs,XsdTypes,The following statement contains a magic number: Xsds = new Dictionary<int' string>               {                  {1' "Service Types"}'                  {0' "Wcf Data Types"}'                  {2' "Wcf Collection Types"}'              };
Magic Number,ServiceStack.NativeTypes.Dart,DartGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Dart\DartGenerator.cs,TypeValue,The following statement contains a magic number: var typeNameOnly = value.Substring(7' value.Length - 8).LastRightPart('.');
Magic Number,ServiceStack.NativeTypes.Dart,DartGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Dart\DartGenerator.cs,TypeValue,The following statement contains a magic number: var typeNameOnly = value.Substring(7' value.Length - 8).LastRightPart('.');
Magic Number,ServiceStack.NativeTypes.FSharp,FSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\FSharp\FSharpGenerator.cs,TypeValue,The following statement contains a magic number: var typeNameOnly = value.Substring(7' value.Length - 8).LastRightPart('.');
Magic Number,ServiceStack.NativeTypes.FSharp,FSharpGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\FSharp\FSharpGenerator.cs,TypeValue,The following statement contains a magic number: var typeNameOnly = value.Substring(7' value.Length - 8).LastRightPart('.');
Magic Number,ServiceStack.NativeTypes.Java,JavaGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Java\JavaGenerator.cs,TypeValue,The following statement contains a magic number: var typeNameOnly = value.Substring(7' value.Length - 8).LastRightPart('.');
Magic Number,ServiceStack.NativeTypes.Java,JavaGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Java\JavaGenerator.cs,TypeValue,The following statement contains a magic number: var typeNameOnly = value.Substring(7' value.Length - 8).LastRightPart('.');
Magic Number,ServiceStack.NativeTypes.Kotlin,KotlinGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Kotlin\KotlinGenerator.cs,TypeValue,The following statement contains a magic number: var typeNameOnly = value.Substring(7' value.Length - 8).LastRightPart('.');
Magic Number,ServiceStack.NativeTypes.Kotlin,KotlinGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Kotlin\KotlinGenerator.cs,TypeValue,The following statement contains a magic number: var typeNameOnly = value.Substring(7' value.Length - 8).LastRightPart('.');
Magic Number,ServiceStack.NativeTypes,MetadataExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\NativeTypesMetadata.cs,GetIncludeList,The following statement contains a magic number: var namespacedTypes = config.IncludeTypes                  .Where(s => s.Length > 2 && s.EndsWith(NamespaceWildCard))                  .Map(s => s.Substring(0' s.Length - 2));
Magic Number,ServiceStack.NativeTypes,MetadataExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\NativeTypesMetadata.cs,GetIncludeList,The following statement contains a magic number: var namespacedTypes = config.IncludeTypes                  .Where(s => s.Length > 2 && s.EndsWith(NamespaceWildCard))                  .Map(s => s.Substring(0' s.Length - 2));
Magic Number,ServiceStack.NativeTypes,MetadataExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\NativeTypesMetadata.cs,GetIncludeList,The following statement contains a magic number: var typesToExpand = explicitTypes                  .Where(s => s.Length > 2 && s.EndsWith(NameWithReferencesWildCard))                  .Map(s => s.Substring(0' s.Length - 2));
Magic Number,ServiceStack.NativeTypes,MetadataExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\NativeTypesMetadata.cs,GetIncludeList,The following statement contains a magic number: var typesToExpand = explicitTypes                  .Where(s => s.Length > 2 && s.EndsWith(NameWithReferencesWildCard))                  .Map(s => s.Substring(0' s.Length - 2));
Magic Number,ServiceStack.NativeTypes.Swift,SwiftGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Swift\SwiftGenerator.cs,TypeValue,The following statement contains a magic number: var typeNameOnly = value.Substring(7' value.Length - 8).LastRightPart('.');
Magic Number,ServiceStack.NativeTypes.Swift,SwiftGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\Swift\SwiftGenerator.cs,TypeValue,The following statement contains a magic number: var typeNameOnly = value.Substring(7' value.Length - 8).LastRightPart('.');
Magic Number,ServiceStack.NativeTypes.TypeScript,TypeScriptGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\TypeScript\TypeScriptGenerator.cs,TypeValue,The following statement contains a magic number: var typeNameOnly = value.Substring(7' value.Length - 8).LastRightPart('.');
Magic Number,ServiceStack.NativeTypes.TypeScript,TypeScriptGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\TypeScript\TypeScriptGenerator.cs,TypeValue,The following statement contains a magic number: var typeNameOnly = value.Substring(7' value.Length - 8).LastRightPart('.');
Magic Number,ServiceStack.NativeTypes.VbNet,VbNetGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\VbNet\VbNetGenerator.cs,TypeValue,The following statement contains a magic number: var typeNameOnly = value.Substring(7' value.Length - 8).LastRightPart('.');
Magic Number,ServiceStack.NativeTypes.VbNet,VbNetGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\NativeTypes\VbNet\VbNetGenerator.cs,TypeValue,The following statement contains a magic number: var typeNameOnly = value.Substring(7' value.Length - 8).LastRightPart('.');
Magic Number,ServiceStack.Support.WebHost,GzipOptimizationTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Support\WebHost\GzipOptimizationTest.cs,HasSupport,The following statement contains a magic number: value[0] == 'g' && value[1] == 'z' && value[2] == 'i' && value[3] == 'p'
Magic Number,ServiceStack.Support.WebHost,GzipOptimizationTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Support\WebHost\GzipOptimizationTest.cs,HasSupport,The following statement contains a magic number: value[0] == 'g' && value[1] == 'z' && value[2] == 'i' && value[3] == 'p'
Magic Number,ServiceStack.Support.WebHost,GzipOptimizationTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Support\WebHost\GzipOptimizationTest.cs,HasSupport,The following statement contains a magic number: (value[i] == 'g' || value[i] == 'G') &&                              (value[i + 1] == 'z' || value[i + 1] == 'Z') &&                              (value[i + 2] == 'i' || value[i + 2] == 'I') &&                              (value[i + 3] == 'p' || value[i + 3] == 'P')
Magic Number,ServiceStack.Support.WebHost,GzipOptimizationTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Support\WebHost\GzipOptimizationTest.cs,HasSupport,The following statement contains a magic number: (value[i] == 'g' || value[i] == 'G') &&                              (value[i + 1] == 'z' || value[i + 1] == 'Z') &&                              (value[i + 2] == 'i' || value[i + 2] == 'I') &&                              (value[i + 3] == 'p' || value[i + 3] == 'P')
Magic Number,ServiceStack.Support.WebHost,GzipOptimizationTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Support\WebHost\GzipOptimizationTest.cs,HasSupport,The following statement contains a magic number: (value[i] == 'g' || value[i] == 'G') &&                              (value[i + 1] == 'z' || value[i + 1] == 'Z') &&                              (value[i + 2] == 'i' || value[i + 2] == 'I') &&                              (value[i + 3] == 'p' || value[i + 3] == 'P')
Magic Number,ServiceStack.Support.WebHost,GzipOptimizationTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Support\WebHost\GzipOptimizationTest.cs,HasSupport,The following statement contains a magic number: (value[i] == 'g' || value[i] == 'G') &&                              (value[i + 1] == 'z' || value[i + 1] == 'Z') &&                              (value[i + 2] == 'i' || value[i + 2] == 'I') &&                              (value[i + 3] == 'p' || value[i + 3] == 'P')
Magic Number,ServiceStack.Support.WebHost,GzipOptimizationTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Support\WebHost\GzipOptimizationTest.cs,HasSupport,The following statement contains a magic number: i < value.Length - 3
Magic Number,ServiceStack.Support.WebHost,GzipOptimizationTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Support\WebHost\GzipOptimizationTest.cs,HasSupport,The following statement contains a magic number: value?.Length >= 4
Duplicate Code,ServiceStack.Html,HtmlCompressor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.html.cs,preserveBlocks,The method contains a code clone-set at the following line numbers (starting from the method definition): ((99' 122)' (126' 149))
Missing Default,ServiceStack,QueryDataSource<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\AutoQueryDataFeature.cs,SelectAggregate,The following switch statement is missing a default case: switch (name)              {                  case "COUNT":                      if (modifier == "DISTINCT")                      {                          var results = new HashSet<object>();                          foreach (var item in source)                          {                              results.Add(firstGetter(item));                          }                          return results.Count;                      }                        return CompareTypeUtils.Aggregate(source'                          (acc' next) => CompareTypeUtils.Add(acc' firstGetter(next))' 0);                    case "MIN":                      return CompareTypeUtils.Aggregate(source'                          (acc' next) => CompareTypeUtils.Min(acc' firstGetter(next)));                    case "MAX":                      return CompareTypeUtils.Aggregate(source'                          (acc' next) => CompareTypeUtils.Max(acc' firstGetter(next)));                    case "SUM":                      return CompareTypeUtils.Sum(source.Map(x => firstGetter(x)));                    case "AVG":                      object sum = CompareTypeUtils.Sum(source.Map(x => firstGetter(x)));                      var sumDouble = (double)Convert.ChangeType(sum' typeof(double));                      return sumDouble / source.Length;                    case "FIRST":                      return source.Length > 0 ? firstGetter(source[0]) : null;                    case "LAST":                      return source.Length > 0 ? firstGetter(source[source.Length - 1]) : null;              }
Missing Default,ServiceStack,HttpRequestExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\HttpRequestExtensions.cs,IsInLocalSubnet,The following switch statement is missing a default case: switch (ipAddress.AddressFamily)              {                  case AddressFamily.InterNetwork:                      foreach (var localIpv4AddressAndMask in ServiceStackHandlerBase.NetworkInterfaceIpv4Addresses)                      {                          if (ipAddressBytes.IsInSameIpv4Subnet(localIpv4AddressAndMask.Key' localIpv4AddressAndMask.Value))                          {                              return true;                          }                      }                      break;                    case AddressFamily.InterNetworkV6:                      foreach (var localIpv6Address in ServiceStackHandlerBase.NetworkInterfaceIpv6Addresses)                      {                          if (ipAddressBytes.IsInSameIpv6Subnet(localIpv6Address))                          {                              return true;                          }                      }                      break;              }
Missing Default,ServiceStack.Auth,UserAuthExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Auth\UserAuth.cs,PopulateFromMap,The following switch statement is missing a default case: switch (entry.Key)                  {                      case "jid":                      case "Id":                          session.Id = entry.Value;                          break;                      case "IsAuthenticated":                          session.IsAuthenticated = entry.Value.FromJsv<bool>();                          break;                      case "FromToken":                          session.FromToken = entry.Value.FromJsv<bool>();                          break;                      case "sub":                          session.UserAuthId = entry.Value.LastRightPart('|'); //in-case of multi-components' last should contain userId                          break;                      case "UserAuthId":                          session.UserAuthId = entry.Value;                          break;                      case "email":                      case "Email":                          session.Email = entry.Value;                          break;                      case "UserName":                      case "preferred_username":                          session.UserName = entry.Value;                          break;                      case "name":                      case "DisplayName":                          session.DisplayName = entry.Value;                          break;                      case "picture":                      case "ProfileUrl":                          session.ProfileUrl = entry.Value;                          break;                      case "roles":                      case "Roles":                          session.Roles = entry.Value.FromJson<List<string>>();                          break;                      case "perms":                      case "Permissions":                          session.Permissions = entry.Value.FromJson<List<string>>();                          break;                      case "iat":                      case "CreatedAt":                          session.CreatedAt = long.Parse(entry.Value).FromUnixTime();                          break;                      case "ReferrerUrl":                          session.ReferrerUrl = entry.Value;                          break;                      case "UserAuthName":                          session.UserAuthName = entry.Value;                          break;                      case "TwitterUserId":                          authSession.TwitterUserId = entry.Value;                          break;                      case "TwitterScreenName":                          authSession.TwitterScreenName = entry.Value;                          break;                      case "FacebookUserId":                          authSession.FacebookUserId = entry.Value;                          break;                      case "FacebookUserName":                          authSession.FacebookUserName = entry.Value;                          break;                      case "given_name":                      case "GivenName":                      case "FirstName":                          session.FirstName = entry.Value;                          break;                      case "family_name":                      case "Surname":                      case "LastName":                          session.LastName = entry.Value;                          break;                      case "Company":                          authSession.Company = entry.Value;                          break;                      case "PrimaryEmail":                          authSession.PrimaryEmail = entry.Value;                          break;                      case "PhoneNumber":                          authSession.PhoneNumber = entry.Value;                          break;                      case "BirthDate":                          authSession.BirthDate = long.Parse(entry.Value).FromUnixTime();                          break;                      case "Address":                          authSession.Address = entry.Value;                          break;                      case "Address2":                          authSession.Address2 = entry.Value;                          break;                      case "City":                          authSession.City = entry.Value;                          break;                      case "State":                          authSession.State = entry.Value;                          break;                      case "Country":                          authSession.Country = entry.Value;                          break;                      case "Culture":                          authSession.Culture = entry.Value;                          break;                      case "FullName":                          authSession.FullName = entry.Value;                          break;                      case "Gender":                          authSession.Gender = entry.Value;                          break;                      case "Language":                          authSession.Language = entry.Value;                          break;                      case "MailAddress":                          authSession.MailAddress = entry.Value;                          break;                      case "Nickname":                          authSession.Nickname = entry.Value;                          break;                      case "PostalCode":                          authSession.PostalCode = entry.Value;                          break;                      case "TimeZone":                          authSession.TimeZone = entry.Value;                          break;                      case "RequestTokenSecret":                          authSession.RequestTokenSecret = entry.Value;                          break;                      case "LastModified":                          session.LastModified = long.Parse(entry.Value).FromUnixTime();                          break;                      case "Sequence":                          session.Sequence = entry.Value;                          break;                      case "Tag":                          authSession.Tag = long.Parse(entry.Value);                          break;                      case "Dns":                          authSession.Dns = entry.Value;                          break;                      case "Rsa":                          authSession.Rsa = entry.Value;                          break;                      case "Sid":                          authSession.Sid = entry.Value;                          break;                      case "Hash":                          authSession.Hash = entry.Value;                          break;                      case "HomePhone":                          authSession.HomePhone = entry.Value;                          break;                      case "MobilePhone":                          authSession.MobilePhone = entry.Value;                          break;                      case "Webpage":                          authSession.Webpage = entry.Value;                          break;                      case "EmailConfirmed":                          authSession.EmailConfirmed = entry.Value.FromJsv<bool>();                          break;                      case "PhoneNumberConfirmed":                          authSession.PhoneNumberConfirmed = entry.Value.FromJsv<bool>();                          break;                      case "TwoFactorEnabled":                          authSession.TwoFactorEnabled = entry.Value.FromJsv<bool>();                          break;                      case "SecurityStamp":                          authSession.SecurityStamp = entry.Value;                          break;                  }
Missing Default,ServiceStack.FluentValidation.Validators,EmptyValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Validators\EmptyValidator.cs,IsValid,The following switch statement is missing a default case: switch (context.PropertyValue) {  				case null:   				case string s when string.IsNullOrWhiteSpace(s):  				case ICollection c when c.Count == 0:  				case Array a when a.Length == 0:  				case IEnumerable e when !e.Cast<object>().Any():  					return true;  			}
Missing Default,ServiceStack.FluentValidation.Validators,NotEmptyValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\FluentValidation\Validators\NotEmptyValidator.cs,IsValid,The following switch statement is missing a default case: switch (context.PropertyValue) {  				case null:   				case string s when string.IsNullOrWhiteSpace(s):  				case ICollection c when c.Count == 0:  				case Array a when a.Length == 0:  				case IEnumerable e when !e.Cast<object>().Any():  					return false;  			}
Missing Default,ServiceStack.Html,JSMinifier,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.js.cs,action,The following switch statement is missing a default case: switch (peek())                {                  case '/':                  case '*':                    throw new Exception("Unterminated Regular Expression literal.");                }
Missing Default,ServiceStack.Html,JSMinifier,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.js.cs,next,The following switch statement is missing a default case: switch (peek())          {            case '/':              {                for (;;)                {                  c = get();                  if (c <= '\n')                  {                    break;                  }                }                break;              }            case '*':              {                get();                while (c != ' ')                {                  switch (get())                  {                    case '*':                      {                        if (peek() == '/')                        {                          get();                          c = ' ';                        }                        break;                      }                    case EOF:                      {                        throw new Exception("Error: JSMIN Unterminated comment.\n");                      }                  }                }                break;              }            }
Missing Default,ServiceStack.Html,JSMinifier,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\Minifiers.js.cs,next,The following switch statement is missing a default case: switch (get())                  {                    case '*':                      {                        if (peek() == '/')                        {                          get();                          c = ' ';                        }                        break;                      }                    case EOF:                      {                        throw new Exception("Error: JSMIN Unterminated comment.\n");                      }                  }
Missing Default,MarkdownDeep,Block,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\Block.cs,RenderPlain,The following switch statement is missing a default case: switch (blockType)  			{  				case BlockType.Blank:  					return;    				case BlockType.p:  				case BlockType.span:  					m.SpanFormatter.FormatPlain(b' buf' contentStart' contentLen);  					b.Append(" ");  					break;    				case BlockType.h1:  				case BlockType.h2:  				case BlockType.h3:  				case BlockType.h4:  				case BlockType.h5:  				case BlockType.h6:  					m.SpanFormatter.FormatPlain(b' buf' contentStart' contentLen);  					b.Append(" - ");  					break;      				case BlockType.ol_li:  				case BlockType.ul_li:  					b.Append("* ");  					m.SpanFormatter.FormatPlain(b' buf' contentStart' contentLen);  					b.Append(" ");  					break;    				case BlockType.dd:  					if (children != null)  					{  						b.Append("\n");  						RenderChildrenPlain(m' b);  					}  					else  						m.SpanFormatter.FormatPlain(b' buf' contentStart' contentLen);  					break;    				case BlockType.dt:  					{  						if (children == null)  						{  							foreach (var l in Content.Split('\n'))  							{  								var str = l.Trim();  								m.SpanFormatter.FormatPlain(b' str' 0' str.Length);  							}  						}  						else  						{  							RenderChildrenPlain(m' b);  						}  						break;  					}    				case BlockType.dl:  					RenderChildrenPlain(m' b);  					return;    				case BlockType.codeblock:  					foreach (var line in children)  					{  						b.Append(line.buf' line.contentStart' line.contentLen);  						b.Append(" ");  					}  					return;    				case BlockType.quote:  				case BlockType.li:  				case BlockType.ol:  				case BlockType.ul:  				case BlockType.HtmlTag:  					RenderChildrenPlain(m' b);  					return;  			}
Missing Default,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,ScanLines,The following switch statement is missing a default case: switch (currentBlockType)  						{  							case BlockType.Blank:  								lines.Add(b);  								break;    							case BlockType.p:  							case BlockType.quote:  								var prevline = lines.Last();  								if (prevline.blockType == BlockType.Blank || m_parentType==BlockType.ol_li || m_parentType==BlockType.ul_li || m_parentType==BlockType.dd)  								{  									// List starting after blank line after paragraph or quote  									CollapseLines(blocks' lines);  									lines.Add(b);  								}  								else  								{  									// List's can't start in middle of a paragraph  									b.RevertToPlain();  									lines.Add(b);  								}  								break;    							case BlockType.ol_li:  							case BlockType.ul_li:  								if (b.blockType!=BlockType.ol_li && b.blockType!=BlockType.ul_li)  								{  									CollapseLines(blocks' lines);  								}  								lines.Add(b);  								break;    							case BlockType.dd:  							case BlockType.footnote:  								if (b.blockType != currentBlockType)  								{  									CollapseLines(blocks' lines);  								}  								lines.Add(b);  								break;    							case BlockType.indent:  								// List after code block  								CollapseLines(blocks' lines);  								lines.Add(b);  								break;  						}
Missing Default,MarkdownDeep,BlockProcessor,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\BlockProcessor.cs,ProcessMarkdownEnabledHtml,The following switch statement is missing a default case: switch (mode)  							{  								case MarkdownInHtmlMode.Span:  								{  									Block span = this.CreateBlock();  									span.buf = input;  									span.blockType = BlockType.span;  									span.contentStart = inner_pos;  									span.contentLen = tagpos - inner_pos;    									b.children = new List<Block>();  									b.children.Add(span);  									break;  								}    								case MarkdownInHtmlMode.Block:  								case MarkdownInHtmlMode.Deep:  								{  									// Scan the internal content  									var bp = new BlockProcessor(m_markdown' mode == MarkdownInHtmlMode.Deep);  									b.children = bp.ScanLines(input' inner_pos' tagpos - inner_pos);  									break;  								}    								case MarkdownInHtmlMode.Off:  								{  									if (bHasUnsafeContent)  									{  										b.blockType = BlockType.unsafe_html;  										b.contentEnd = position;  									}  									else  									{  										Block span = this.CreateBlock();  										span.buf = input;  										span.blockType = BlockType.html;  										span.contentStart = inner_pos;  										span.contentLen = tagpos - inner_pos;    										b.children = new List<Block>();  										b.children.Add(span);  									}  									break;  								}  							}
Missing Default,MarkdownDeep,SpanFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\SpanFormatter.cs,MakeID,The following switch statement is missing a default case: switch (t.type)  				{  					case TokenType.Text:  						sb.Append(str' t.startOffset' t.length);  						break;    					case TokenType.link:  						LinkInfo li = (LinkInfo)t.data;  						sb.Append(li.link_text);  						break;  				}
Missing Default,MarkdownDeep,SpanFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\SpanFormatter.cs,Render,The following switch statement is missing a default case: switch (t.type)  				{  					case TokenType.Text:  						// Append encoded text  						m_Markdown.HtmlEncode(sb' str' t.startOffset' t.length);  						break;    					case TokenType.HtmlTag:  						// Append html as is  						Utils.SmartHtmlEncodeAmps(sb' str' t.startOffset' t.length);  						break;    					case TokenType.Html:  					case TokenType.opening_mark:  					case TokenType.closing_mark:  					case TokenType.internal_mark:  						// Append html as is  						sb.Append(str' t.startOffset' t.length);  						break;    					case TokenType.br:  						sb.Append("<br />\n");  						break;    					case TokenType.open_em:  						sb.Append("<em>");  						break;    					case TokenType.close_em:  						sb.Append("</em>");  						break;    					case TokenType.open_strong:  						sb.Append("<strong>");  						break;    					case TokenType.close_strong:  						sb.Append("</strong>");  						break;    					case TokenType.code_span:  						sb.Append("<code>");  						m_Markdown.HtmlEncode(sb' str' t.startOffset' t.length);  						sb.Append("</code>");  						break;    					case TokenType.link:  					{  						LinkInfo li = (LinkInfo)t.data;  						var sf = new SpanFormatter(m_Markdown);  						sf.DisableLinks = true;    						li.def.RenderLink(m_Markdown' sb' sf.Format(li.link_text));  						break;  					}    					case TokenType.img:  					{  						LinkInfo li = (LinkInfo)t.data;  						li.def.RenderImg(m_Markdown' sb' li.link_text);  						break;  					}    					case TokenType.footnote:  					{  						FootnoteReference r=(FootnoteReference)t.data;  						sb.Append("<sup id=\"fnref:");  						sb.Append(r.id);  						sb.Append("\"><a href=\"#fn:");  						sb.Append(r.id);  						sb.Append("\" rel=\"footnote\">");  						sb.Append(r.index + 1);  						sb.Append("</a></sup>");  						break;  					}    					case TokenType.abbreviation:  					{  						Abbreviation a = (Abbreviation)t.data;  						sb.Append("<abbr");  						if (!String.IsNullOrEmpty(a.Title))  						{  							sb.Append(" title=\"");  							m_Markdown.HtmlEncode(sb' a.Title' 0' a.Title.Length);  							sb.Append("\"");  						}  						sb.Append(">");  						m_Markdown.HtmlEncode(sb' a.Abbr' 0' a.Abbr.Length);  						sb.Append("</abbr>");  						break;  					}  				}
Missing Default,MarkdownDeep,SpanFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\SpanFormatter.cs,RenderPlain,The following switch statement is missing a default case: switch (t.type)  				{  					case TokenType.Text:  						sb.Append(str' t.startOffset' t.length);  						break;    					case TokenType.HtmlTag:  						break;    					case TokenType.Html:  					case TokenType.opening_mark:  					case TokenType.closing_mark:  					case TokenType.internal_mark:  						break;    					case TokenType.br:  						break;    					case TokenType.open_em:  					case TokenType.close_em:  					case TokenType.open_strong:  					case TokenType.close_strong:  						break;    					case TokenType.code_span:  						sb.Append(str' t.startOffset' t.length);  						break;    					case TokenType.link:  						{  							LinkInfo li = (LinkInfo)t.data;  							sb.Append(li.link_text);  							break;  						}    					case TokenType.img:  						{  							LinkInfo li = (LinkInfo)t.data;  							sb.Append(li.link_text);  							break;  						}    					case TokenType.footnote:  					case TokenType.abbreviation:  						break;  				}
Missing Default,MarkdownDeep,SpanFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\SpanFormatter.cs,Tokenize,The following switch statement is missing a default case: switch (current)  				{  					case '*':  					case '_':    						// Create emphasis mark  						token = CreateEmphasisMark();    						if (token != null)  						{  							// Store marks in a separate list the we'll resolve later  							switch (token.type)  							{  								case TokenType.internal_mark:  								case TokenType.opening_mark:  								case TokenType.closing_mark:  									if (emphasis_marks == null)  									{  										emphasis_marks = new List<Token>();  									}  									emphasis_marks.Add(token);  									break;  							}  						}  						break;    					case '`':  						token = ProcessCodeSpan();  						break;    					case '[':  					case '!':  					{  						// Process link reference  						int linkpos = position;  						token = ProcessLinkOrImageOrFootnote();    						// Rewind if invalid syntax  						// (the '[' or '!' will be treated as a regular character and processed below)  						if (token == null)  							position = linkpos;  						break;  					}    					case '<':  					{  						// Is it a valid html tag?  						int save = position;  						HtmlTag tag = HtmlTag.Parse(this);  						if (tag != null)  						{  							if (!m_Markdown.SafeMode || tag.IsSafe())  							{  								// Yes' create a token for it  								token = CreateToken(TokenType.HtmlTag' save' position - save);  							}  							else  							{  								// No' rewrite and encode it  								position = save;  							}  						}  						else  						{  							// No' rewind and check if it's a valid autolink eg: <google.com>  							position = save;  							token = ProcessAutoLink();    							if (token == null)  								position = save;  						}  						break;  					}    					case '&':  					{  						// Is it a valid html entity  						int save=position;  						string unused=null;  						if (SkipHtmlEntity(ref unused))  						{  							// Yes' create a token for it  							token = CreateToken(TokenType.Html' save' position - save);  						}    						break;  					}    					case ' ':  					{  						// Check for double space at end of a line  						if (CharAtOffset(1)==' ' && IsLineEnd(CharAtOffset(2)))  						{  							// Yes' skip it  							SkipForward(2);    							// Don't put br's at the end of a paragraph  							if (!eof)  							{  								SkipEol();  								token = CreateToken(TokenType.br' end_text_token' 0);  							}  						}  						break;  					}    					case '\\':  					{  						// Special handling for escaping <autolinks>  						/*  						if (CharAtOffset(1) == '<')  						{  							// Is it an autolink?  							int savepos = position;  							SkipForward(1);  							bool AutoLink = ProcessAutoLink() != null;  							position = savepos;    							if (AutoLink)  							{  								token = CreateToken(TokenType.Text' position + 1' 1);  								SkipForward(2);  							}  						}  						else  						 */  						{  							// Check followed by an escapable character  							if (Utils.IsEscapableChar(CharAtOffset(1)' ExtraMode))  							{  								token = CreateToken(TokenType.Text' position + 1' 1);  								SkipForward(2);  							}  						}  						break;  					}  				}
Missing Default,MarkdownDeep,SpanFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\SpanFormatter.cs,Tokenize,The following switch statement is missing a default case: switch (token.type)  							{  								case TokenType.internal_mark:  								case TokenType.opening_mark:  								case TokenType.closing_mark:  									if (emphasis_marks == null)  									{  										emphasis_marks = new List<Token>();  									}  									emphasis_marks.Add(token);  									break;  							}
Missing Default,MarkdownDeep,TableSpec,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\TableSpec.cs,RenderRow,The following switch statement is missing a default case: switch (Columns[i])  					{  						case ColumnAlignment.Left:  							b.Append(" align=\"left\"");  							break;  						case ColumnAlignment.Right:  							b.Append(" align=\"right\"");  							break;  						case ColumnAlignment.Center:  							b.Append(" align=\"center\"");  							break;  					}
Missing Default,MarkdownDeep,Utils,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack\Html\MarkdownDeep\Utils.cs,IsEscapableChar,The following switch statement is missing a default case: switch (ch)  			{  				case '\\':  				case '`':  				case '*':  				case '_':  				case '{':  				case '}':  				case '[':  				case ']':  				case '(':  				case ')':  				case '>':		// Not in markdown documentation' but is in markdown.pl  				case '#':  				case '+':  				case '-':  				case '.':  				case '!':  					return true;    				case ':':  				case '|':  				case '=':		// Added for escaping Setext H1  				case '<':  					return ExtraMode;  			}
