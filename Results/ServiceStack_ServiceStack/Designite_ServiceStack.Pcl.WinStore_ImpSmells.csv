Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ServiceStack,AotConfig,C:\repos\ServiceStack_ServiceStack\src\ServiceStack.Pcl.WinStore\PclExport.WinStore.cs,RegisterSerializers,Cyclomatic complexity of the method is 9
Complex Method,ServiceStack,AotConfig,C:\repos\ServiceStack_ServiceStack\src\ServiceStack.Pcl.WinStore\PclExport.WinStore.cs,Register,Cyclomatic complexity of the method is 13
Long Statement,ServiceStack,DeserializeDynamic<TSerializer>,C:\repos\ServiceStack_ServiceStack\src\ServiceStack.Pcl.WinStore\Pcl.Dynamic.cs,ParseDynamic,The length of the statement  "                    container[mapKey] = DeserializeType<TSerializer>.ParsePrimitive(elementValue) ?? Serializer.UnescapeString(elementValue); " is 121.
Long Statement,ServiceStack,DeserializeDynamic<TSerializer>,C:\repos\ServiceStack_ServiceStack\src\ServiceStack.Pcl.WinStore\Pcl.Dynamic.cs,VerifyAndGetStartIndex,The length of the statement  "                Tracer.Instance.WriteDebug("WARN: Map definitions should start with a '{0}'' expecting serialized type '{1}'' got string starting with: {2}"' " is 141.
Long Statement,ServiceStack,DeserializeDynamic<TSerializer>,C:\repos\ServiceStack_ServiceStack\src\ServiceStack.Pcl.WinStore\Pcl.Dynamic.cs,VerifyAndGetStartIndex,The length of the statement  "                    JsWriter.MapStartChar' createMapType != null ? createMapType.Name : "Dictionary<'>"' value.Substring(0' value.Length < 50 ? value.Length : 50)); " is 144.
Long Statement,ServiceStack,DynamicJson,C:\repos\ServiceStack_ServiceStack\src\ServiceStack.Pcl.WinStore\Pcl.Dynamic.cs,Deserialize,The length of the statement  "            var hash = deserialized.ToDictionary<KeyValuePair<string' string>' string' object>(entry => entry.Key' entry => entry.Value); " is 125.
Long Statement,ServiceStack,AotConfig,C:\repos\ServiceStack_ServiceStack\src\ServiceStack.Pcl.WinStore\PclExport.WinStore.cs,RegisterElement,The length of the statement  "                // Include List deserialisations from the Register<> method above.  This solves issue where List<Guid> properties on responses deserialise to null. " is 147.
Long Statement,ServiceStack,AotConfig,C:\repos\ServiceStack_ServiceStack\src\ServiceStack.Pcl.WinStore\PclExport.WinStore.cs,RegisterElement,The length of the statement  "                // No idea why this is happening because there is no visible exception raised.  Suspect IOS is swallowing an AOT exception somewhere. " is 133.
Long Statement,ServiceStack,AotConfig,C:\repos\ServiceStack_ServiceStack\src\ServiceStack.Pcl.WinStore\PclExport.WinStore.cs,RegisterElement,The length of the statement  "                // Cannot use the line below for some unknown reason - when trying to compile to run on device' mtouch bombs during native code compile. " is 136.
Long Statement,ServiceStack,AotConfig,C:\repos\ServiceStack_ServiceStack\src\ServiceStack.Pcl.WinStore\PclExport.WinStore.cs,RegisterElement,The length of the statement  "                // Something about this line or its inner workings is offensive to mtouch. Luckily this was not needed for my List<Guide> issue. " is 128.
Long Statement,ServiceStack,AotConfig,C:\repos\ServiceStack_ServiceStack\src\ServiceStack.Pcl.WinStore\PclExport.WinStore.cs,RegisterElement,The length of the statement  "                TranslateListWithConvertibleElements<TElement' TElement>.LateBoundTranslateToGenericICollection(null' typeof(List<TElement>)); " is 126.
Empty Catch Block,ServiceStack,AppDomain,C:\repos\ServiceStack_ServiceStack\src\ServiceStack.Pcl.WinStore\PclExport.WinStore.cs,GetAssemblyListAsync,The method has an empty catch block.
Magic Number,ServiceStack,DeserializeDynamic<TSerializer>,C:\repos\ServiceStack_ServiceStack\src\ServiceStack.Pcl.WinStore\Pcl.Dynamic.cs,VerifyAndGetStartIndex,The following statement contains a magic number: if (!Serializer.EatMapStartChar(value' ref index))              {                  //Don't throw ex because some KeyValueDataContractDeserializer don't have '{}'                  Tracer.Instance.WriteDebug("WARN: Map definitions should start with a '{0}'' expecting serialized type '{1}'' got string starting with: {2}"'                      JsWriter.MapStartChar' createMapType != null ? createMapType.Name : "Dictionary<'>"' value.Substring(0' value.Length < 50 ? value.Length : 50));              }
Magic Number,ServiceStack,DeserializeDynamic<TSerializer>,C:\repos\ServiceStack_ServiceStack\src\ServiceStack.Pcl.WinStore\Pcl.Dynamic.cs,VerifyAndGetStartIndex,The following statement contains a magic number: if (!Serializer.EatMapStartChar(value' ref index))              {                  //Don't throw ex because some KeyValueDataContractDeserializer don't have '{}'                  Tracer.Instance.WriteDebug("WARN: Map definitions should start with a '{0}'' expecting serialized type '{1}'' got string starting with: {2}"'                      JsWriter.MapStartChar' createMapType != null ? createMapType.Name : "Dictionary<'>"' value.Substring(0' value.Length < 50 ? value.Length : 50));              }
