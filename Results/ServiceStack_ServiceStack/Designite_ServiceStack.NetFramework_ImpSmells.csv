Implementation smell,Namespace,Class,File,Method,Description
Long Method,Amib.Threading,SmartThreadPool,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\SmartThreadPool.cs,ProcessQueuedItems,The method has 146 lines of code.
Complex Method,ServiceStack.MiniProfiler.SqlFormatters,SqlServerFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\SqlFormatters\SqlServerFormatter.cs,FormatSql,Cyclomatic complexity of the method is 8
Complex Method,Amib.Threading.Internal,WorkItem,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\WorkItem.cs,WaitAll,Cyclomatic complexity of the method is 8
Complex Method,Amib.Threading.Internal,WorkItem,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\WorkItem.cs,Cancel,Cyclomatic complexity of the method is 9
Complex Method,Amib.Threading.Internal,WorkItem,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\WorkItem.cs,GetResult,Cyclomatic complexity of the method is 8
Complex Method,Amib.Threading.Internal,WorkItemsGroup,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\WorkItemsGroup.cs,EnqueueToSTPNextWorkItem,Cyclomatic complexity of the method is 11
Complex Method,Amib.Threading,SmartThreadPool,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\SmartThreadPool.cs,ProcessQueuedItems,Cyclomatic complexity of the method is 9
Complex Method,Amib.Threading,SmartThreadPool,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\SmartThreadPool.cs,Shutdown,Cyclomatic complexity of the method is 9
Long Parameter List,ServiceStack.MiniProfiler,MiniProfilerAdapter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\MiniProfiler.cs,RenderIncludes,The method has 6 parameters. Parameters: position' showTrivial' showTimeWithChildren' maxTracesToShow' xhtml' showControls
Long Parameter List,ServiceStack.MiniProfiler,MiniProfiler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\MiniProfiler.cs,RenderIncludes,The method has 6 parameters. Parameters: position' showTrivial' showTimeWithChildren' maxTracesToShow' xhtml' showControls
Long Parameter List,ServiceStack.MiniProfiler.UI,MiniProfilerHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\UI\MiniProfilerHandler.cs,RenderIncludes,The method has 8 parameters. Parameters: profiler' position' showTrivial' showTimeWithChildren' maxTracesToShow' xhtml' showControls' path
Long Parameter List,Amib.Threading.Internal,WorkItemFactory,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\WorkItemFactory.cs,CreateWorkItem,The method has 5 parameters. Parameters: workItemsGroup' wigStartInfo' callback' state' workItemPriority
Long Parameter List,Amib.Threading.Internal,WorkItemFactory,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\WorkItemFactory.cs,CreateWorkItem,The method has 5 parameters. Parameters: workItemsGroup' wigStartInfo' workItemInfo' callback' state
Long Parameter List,Amib.Threading.Internal,WorkItemFactory,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\WorkItemFactory.cs,CreateWorkItem,The method has 5 parameters. Parameters: workItemsGroup' wigStartInfo' callback' state' postExecuteWorkItemCallback
Long Parameter List,Amib.Threading.Internal,WorkItemFactory,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\WorkItemFactory.cs,CreateWorkItem,The method has 6 parameters. Parameters: workItemsGroup' wigStartInfo' callback' state' postExecuteWorkItemCallback' workItemPriority
Long Parameter List,Amib.Threading.Internal,WorkItemFactory,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\WorkItemFactory.cs,CreateWorkItem,The method has 6 parameters. Parameters: workItemsGroup' wigStartInfo' callback' state' postExecuteWorkItemCallback' callToPostExecute
Long Parameter List,Amib.Threading.Internal,WorkItemFactory,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\WorkItemFactory.cs,CreateWorkItem,The method has 7 parameters. Parameters: workItemsGroup' wigStartInfo' callback' state' postExecuteWorkItemCallback' callToPostExecute' workItemPriority
Long Parameter List,Amib.Threading.Internal,WorkItemsGroupBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\WorkItemsGroupBase.cs,QueueWorkItem,The method has 5 parameters. Parameters: callback' state' postExecuteWorkItemCallback' callToPostExecute' workItemPriority
Long Parameter List,Amib.Threading.Internal,WorkItemsGroupBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\WorkItemsGroupBase.cs,QueueWorkItem,The method has 5 parameters. Parameters: action' arg1' arg2' arg3' priority
Long Parameter List,Amib.Threading.Internal,WorkItemsGroupBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\WorkItemsGroupBase.cs,QueueWorkItem,The method has 6 parameters. Parameters: action' arg1' arg2' arg3' arg4' priority
Long Parameter List,Amib.Threading.Internal,WorkItemsGroupBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\WorkItemsGroupBase.cs,QueueWorkItem,The method has 5 parameters. Parameters: func' arg1' arg2' arg3' priority
Long Parameter List,Amib.Threading.Internal,WorkItemsGroupBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\WorkItemsGroupBase.cs,QueueWorkItem,The method has 6 parameters. Parameters: func' arg1' arg2' arg3' arg4' priority
Long Parameter List,Amib.Threading,IWorkItemsGroup,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\Interfaces.cs,QueueWorkItem,The method has 5 parameters. Parameters: callback' state' postExecuteWorkItemCallback' callToPostExecute' workItemPriority
Long Parameter List,Amib.Threading,IWorkItemsGroup,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\Interfaces.cs,QueueWorkItem,The method has 5 parameters. Parameters: action' arg1' arg2' arg3' priority
Long Parameter List,Amib.Threading,IWorkItemsGroup,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\Interfaces.cs,QueueWorkItem,The method has 6 parameters. Parameters: action' arg1' arg2' arg3' arg4' priority
Long Parameter List,Amib.Threading,IWorkItemsGroup,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\Interfaces.cs,QueueWorkItem,The method has 5 parameters. Parameters: func' arg1' arg2' arg3' priority
Long Parameter List,Amib.Threading,IWorkItemsGroup,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\Interfaces.cs,QueueWorkItem,The method has 6 parameters. Parameters: func' arg1' arg2' arg3' arg4' priority
Long Identifier,Amib.Threading.Internal,CallerThreadContext,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\CallerThreadContext.cs,,The length of the parameter getLogicalCallContextMethodInfo is 31.
Long Identifier,Amib.Threading.Internal,CallerThreadContext,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\CallerThreadContext.cs,,The length of the parameter setLogicalCallContextMethodInfo is 31.
Long Identifier,Amib.Threading.Internal,STPInstancePerformanceCounters,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\STPPerformanceCounter.cs,,The length of the parameter _stpInstanceNullPerformanceCounter is 34.
Long Identifier,Amib.Threading,SmartThreadPool,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\SmartThreadPool.cs,ProcessQueuedItems,The length of the parameter bInUseWorkerThreadsWasIncremented is 33.
Long Identifier,Amib.Threading,SmartThreadPool,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\SmartThreadPool.cs,,The length of the parameter DefaultPostExecuteWorkItemCallback is 34.
Long Identifier,Amib.Threading,SmartThreadPool,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\SmartThreadPool.cs,,The length of the parameter DefaultPerformanceCounterInstanceName is 37.
Long Identifier,Amib.Threading,STPStartInfo,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\STPStartInfo.cs,,The length of the parameter _performanceCounterInstanceName is 31.
Long Identifier,Amib.Threading,STPStartInfo,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\STPStartInfo.cs,,The length of the parameter _enableLocalPerformanceCounters is 31.
Long Statement,ServiceStack.MiniProfiler,MiniProfilerAdapter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\MiniProfiler.cs,RenderIncludes,The length of the statement  "            var result = Current?.RenderIncludes(position' showTrivial' showTimeWithChildren' maxTracesToShow' xhtml' showControls); " is 120.
Long Statement,ServiceStack.MiniProfiler,MiniProfiler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\MiniProfiler.cs,RenderIncludes,The length of the statement  "            return MiniProfilerHandler.RenderIncludes(Current' position' showTrivial' showTimeWithChildren' maxTracesToShow' xhtml' showControls); " is 134.
Long Statement,ServiceStack.MiniProfiler,MiniProfilerExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\MiniProfiler.cs,Render,The length of the statement  "                text.AppendFormat("{2} {0} = {1:###'##0.##}ms"' name' timing.DurationMilliseconds' new string('>'' timing.Depth)).AppendLine(); " is 127.
Long Statement,ServiceStack.MiniProfiler,MiniProfilerExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\MiniProfiler.cs,GetMiniProfiler,The length of the statement  "            throw new NotSupportedException($"Expected MiniProfiler but was '{profiler.GetType().Name}'. Ensure MiniProfilerFeature plugin is registered."); " is 144.
Long Statement,ServiceStack.MiniProfiler,SqlTimingParameter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\SqlTimingParameter.cs,Equals,The length of the statement  "            return other != null && ParentSqlTimingId.Equals(other.ParentSqlTimingId) && string.Equals(Name' other.Name) && string.Equals(Value' other.Value); " is 146.
Long Statement,ServiceStack.MiniProfiler.Data,ProfiledDbCommand,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\Data\ProfiledDbCommand.cs,GetBindByName,The length of the statement  "                var method = new DynamicMethod(commandType.GetOperationName() + "_BindByName"' null' new Type[] { typeof(IDbCommand)' typeof(bool) }); " is 134.
Long Statement,ServiceStack.MiniProfiler.UI,MiniProfilerHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\UI\MiniProfilerHandler.cs,RenderIncludes,The length of the statement  "    if (!window.jquip) document.write(unescape(""%3Cscript src='{path}ssr-jquip.all.js?v={version}' type='text/javascript'%3E%3C/script%3E"")); " is 139.
Long Statement,ServiceStack.MiniProfiler.UI,MiniProfilerHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\UI\MiniProfilerHandler.cs,RenderIncludes,The length of the statement  "				// so go ahead and add it to the end - it's usually the only id' but if there was a redirect somewhere' it'll be there' too " is 123.
Long Statement,ServiceStack.MiniProfiler.UI,MiniProfilerHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\UI\MiniProfilerHandler.cs,RenderIncludes,The length of the statement  "                path = (path ?? VirtualPathUtility.ToAbsolute(MiniProfiler.Settings.RouteBasePath).EnsureTrailingSlash()) + HostContext.Config.HandlerFactoryPath; " is 146.
Long Statement,ServiceStack.MiniProfiler.UI,MiniProfilerHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\UI\MiniProfilerHandler.cs,Results,The length of the statement  "				return isPopup ? NotFound(httpRes) : NotFound(httpRes' "text/plain"' "No MiniProfiler results found with Id=" + id.ToString()); " is 127.
Long Statement,ServiceStack.MiniProfiler.UI,MiniProfilerHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\UI\MiniProfilerHandler.cs,ResultsFullPage,The length of the statement  "				.AppendLine("<script type='text/javascript' src='https://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js'></script>") " is 126.
Long Statement,ServiceStack.MiniProfiler.UI,MiniProfilerHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\UI\MiniProfilerHandler.cs,GetResource,The length of the statement  "				using (var stream = typeof(MiniProfilerHandler).Assembly.GetManifestResourceStream("ServiceStack.MiniProfiler.UI." + filename)) " is 127.
Long Statement,Amib.Threading.Internal,CallerThreadContext,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\CallerThreadContext.cs,Capture,The length of the statement  "				callerThreadContext._callContext = (LogicalCallContext)getLogicalCallContextMethodInfo.Invoke(Thread.CurrentThread' null); " is 122.
Long Statement,Amib.Threading.Internal,WorkItemsGroupBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\WorkItemsGroupBase.cs,QueueWorkItem,The length of the statement  "            WorkItem workItem = WorkItemFactory.CreateWorkItem(this' WIGStartInfo' callback' state' postExecuteWorkItemCallback' workItemPriority); " is 135.
Long Statement,Amib.Threading.Internal,WorkItemsGroupBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\WorkItemsGroupBase.cs,QueueWorkItem,The length of the statement  "            WorkItem workItem = WorkItemFactory.CreateWorkItem(this' WIGStartInfo' callback' state' postExecuteWorkItemCallback' callToPostExecute); " is 136.
Long Statement,Amib.Threading.Internal,WorkItemsGroupBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\WorkItemsGroupBase.cs,QueueWorkItem,The length of the statement  "            WorkItem workItem = WorkItemFactory.CreateWorkItem(this' WIGStartInfo' callback' state' postExecuteWorkItemCallback' callToPostExecute' workItemPriority); " is 154.
Long Statement,Amib.Threading,SmartThreadPool,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\SmartThreadPool.cs,Initialize,The length of the statement  "                throw new NotSupportedException("Performance counters are not implemented for Compact Framework/Silverlight/Mono' instead use StpStartInfo.EnableLocalPerformanceCounters"); " is 172.
Long Statement,Amib.Threading,SmartThreadPool,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\SmartThreadPool.cs,ValidateWorkItemsGroupWaitForIdle,The length of the statement  "				throw new NotSupportedException("WaitForIdle cannot be called from a thread on its SmartThreadPool' it causes a deadlock"); " is 123.
Long Statement,Amib.Threading,SmartThreadPool,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\SmartThreadPool.cs,ValidateWorkItemsGroupWaitForIdleImpl,The length of the statement  "				throw new NotSupportedException("WaitForIdle cannot be called from a thread on its SmartThreadPool' it causes a deadlock"); " is 123.
Long Statement,Amib.Threading,SmartThreadPool,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\SmartThreadPool.cs,Choice,The length of the statement  "                workItemsGroup.QueueWorkItem(() => { act(); Interlocked.CompareExchange(ref choiceIndex._index' value' -1); anActionCompleted.Set(); }); " is 136.
Complex Conditional,ServiceStack.MiniProfiler.Data,ProfiledDbCommand,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\Data\ProfiledDbCommand.cs,GetBindByName,The conditional expression  "prop != null && prop.CanWrite && prop.PropertyType == typeof(bool)                  && ((indexers = prop.GetIndexParameters()) == null || indexers.Length == 0)                  && (setter = prop.GetSetMethod()) != null"  is complex.
Empty Catch Block,ServiceStack.MiniProfiler,WebRequestProfilerProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\WebRequestProfilerProvider.cs,Stop,The method has an empty catch block.
Empty Catch Block,ServiceStack.MiniProfiler.SqlFormatters,SqlServerFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\SqlFormatters\SqlServerFormatter.cs,FormatSql,The method has an empty catch block.
Empty Catch Block,ServiceStack.MiniProfiler.UI,MiniProfilerHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\UI\MiniProfilerHandler.cs,Results,The method has an empty catch block.
Empty Catch Block,Amib.Threading.Internal,WorkItem,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\WorkItem.cs,FireWorkItemCompleted,The method has an empty catch block.
Empty Catch Block,Amib.Threading.Internal,WorkItem,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\WorkItem.cs,FireWorkItemStarted,The method has an empty catch block.
Empty Catch Block,Amib.Threading.Internal,WorkItemsGroup,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\WorkItemsGroup.cs,FireOnIdleImpl,The method has an empty catch block.
Magic Number,ServiceStack.MiniProfiler,MiniProfiler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\MiniProfiler.cs,GetRoundedMilliseconds,The following statement contains a magic number: long z = 10000 * stopwatchElapsedTicks;
Magic Number,ServiceStack.MiniProfiler,MiniProfiler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\MiniProfiler.cs,GetRoundedMilliseconds,The following statement contains a magic number: return msTimesTen / 10;
Magic Number,ServiceStack.MiniProfiler,SqlTiming,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\SqlTiming.cs,ToString,The following statement contains a magic number: return CommandString.Truncate(30) + " (" + DurationMilliseconds + " ms)";
Magic Number,ServiceStack.MiniProfiler,WebRequestProfilerProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\WebRequestProfilerProvider.cs,EnsureName,The following statement contains a magic number: profiler.Name = profiler.Name.Remove(70);
Magic Number,ServiceStack.MiniProfiler,WebRequestProfilerProvider,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\WebRequestProfilerProvider.cs,EnsureName,The following statement contains a magic number: profiler.Name.Length > 70
Magic Number,ServiceStack.MiniProfiler.Helpers,HaackFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\Helpers\HaackFormatter.cs,IndexOfExpressionStart,The following statement contains a magic number: return IndexOfExpressionStart(format' index + 2);
Magic Number,ServiceStack.MiniProfiler.Helpers,HaackFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\Helpers\HaackFormatter.cs,IndexOfExpressionEnd,The following statement contains a magic number: braceCount % 2 == 1
Magic Number,ServiceStack.MiniProfiler.Helpers,FormatExpression,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\Helpers\HaackFormatter.cs,FormatExpression,The following statement contains a magic number: string expressionWithoutBraces = expression.Substring(1                      ' expression.Length - 2);
Magic Number,ServiceStack.MiniProfiler.SqlFormatters,SqlServerFormatter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\SqlFormatters\SqlServerFormatter.cs,GetWithLenFormatter,The following statement contains a magic number: return p => {                  if (p.Size < 1) { return capture; } else { return capture + "(" + (p.Size > 8000 ? "max" : p.Size.ToString()) + ")"; }              };
Magic Number,ServiceStack.MiniProfiler.Storage,SqlServerStorage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\Storage\SqlServerStorage.cs,Save,The following statement contains a magic number: var insertCount = conn.Execute(sql' new                  {                      Id = profiler.Id'                      Name = profiler.Name.Truncate(200)'                      Started = profiler.Started'                      MachineName = profiler.MachineName.Truncate(100)'                      User = profiler.User.Truncate(100)'                      Level = profiler.Level'                      RootTimingId = profiler.Root.Id'                      DurationMilliseconds = profiler.DurationMilliseconds'                      DurationMillisecondsInSql = profiler.DurationMillisecondsInSql'                      HasSqlTimings = profiler.HasSqlTimings'                      HasDuplicateSqlTimings = profiler.HasDuplicateSqlTimings'                      HasTrivialTimings = profiler.HasTrivialTimings'                      HasAllTrivialTimings = profiler.HasAllTrivialTimings'                      TrivialDurationThresholdMilliseconds = profiler.TrivialDurationThresholdMilliseconds'                      HasUserViewed = profiler.HasUserViewed'                      Json = profiler.Root.ToJson()                  });
Magic Number,ServiceStack.MiniProfiler.Storage,SqlServerStorage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\Storage\SqlServerStorage.cs,Save,The following statement contains a magic number: var insertCount = conn.Execute(sql' new                  {                      Id = profiler.Id'                      Name = profiler.Name.Truncate(200)'                      Started = profiler.Started'                      MachineName = profiler.MachineName.Truncate(100)'                      User = profiler.User.Truncate(100)'                      Level = profiler.Level'                      RootTimingId = profiler.Root.Id'                      DurationMilliseconds = profiler.DurationMilliseconds'                      DurationMillisecondsInSql = profiler.DurationMillisecondsInSql'                      HasSqlTimings = profiler.HasSqlTimings'                      HasDuplicateSqlTimings = profiler.HasDuplicateSqlTimings'                      HasTrivialTimings = profiler.HasTrivialTimings'                      HasAllTrivialTimings = profiler.HasAllTrivialTimings'                      TrivialDurationThresholdMilliseconds = profiler.TrivialDurationThresholdMilliseconds'                      HasUserViewed = profiler.HasUserViewed'                      Json = profiler.Root.ToJson()                  });
Magic Number,ServiceStack.MiniProfiler.Storage,SqlServerStorage,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\Storage\SqlServerStorage.cs,Save,The following statement contains a magic number: var insertCount = conn.Execute(sql' new                  {                      Id = profiler.Id'                      Name = profiler.Name.Truncate(200)'                      Started = profiler.Started'                      MachineName = profiler.MachineName.Truncate(100)'                      User = profiler.User.Truncate(100)'                      Level = profiler.Level'                      RootTimingId = profiler.Root.Id'                      DurationMilliseconds = profiler.DurationMilliseconds'                      DurationMillisecondsInSql = profiler.DurationMillisecondsInSql'                      HasSqlTimings = profiler.HasSqlTimings'                      HasDuplicateSqlTimings = profiler.HasDuplicateSqlTimings'                      HasTrivialTimings = profiler.HasTrivialTimings'                      HasAllTrivialTimings = profiler.HasAllTrivialTimings'                      TrivialDurationThresholdMilliseconds = profiler.TrivialDurationThresholdMilliseconds'                      HasUserViewed = profiler.HasUserViewed'                      Json = profiler.Root.ToJson()                  });
Magic Number,ServiceStack.MiniProfiler.UI,MiniProfilerHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\UI\MiniProfilerHandler.cs,Results,The following statement contains a magic number: httpRes.StatusCode = 401;
Magic Number,ServiceStack.MiniProfiler.UI,MiniProfilerHandler,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\MiniProfiler\UI\MiniProfilerHandler.cs,NotFound,The following statement contains a magic number: httpRes.StatusCode = 404;
Magic Number,ServiceStack.SmartThreadPool,AppSelfHostBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\AppSelfHostBase.cs,AppSelfHostBase,The following statement contains a magic number: threadPoolManager = new Amib.Threading.SmartThreadPool(IdleTimeout'                  maxWorkerThreads: Math.Max(16' Environment.ProcessorCount * 2));
Magic Number,ServiceStack.SmartThreadPool,AppSelfHostBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\AppSelfHostBase.cs,AppSelfHostBase,The following statement contains a magic number: threadPoolManager = new Amib.Threading.SmartThreadPool(IdleTimeout'                  maxWorkerThreads: Math.Max(16' Environment.ProcessorCount * 2));
Magic Number,ServiceStack.SmartThreadPool,AppSelfHostBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\AppSelfHostBase.cs,AppSelfHostBase,The following statement contains a magic number: threadPoolManager = new Amib.Threading.SmartThreadPool(IdleTimeout'                  maxWorkerThreads: Math.Max(16' Environment.ProcessorCount * 2));
Magic Number,ServiceStack.SmartThreadPool,AppSelfHostBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\AppSelfHostBase.cs,AppSelfHostBase,The following statement contains a magic number: threadPoolManager = new Amib.Threading.SmartThreadPool(IdleTimeout'                  maxWorkerThreads: Math.Max(16' Environment.ProcessorCount * 2));
Magic Number,Amib.Threading.Internal,WorkItem,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\WorkItem.cs,ExecuteWorkItem,The following statement contains a magic number: Thread.Sleep(60 * 1000);
Magic Number,Amib.Threading.Internal,WorkItem,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\WorkItem.cs,ExecuteWorkItem,The following statement contains a magic number: Thread.Sleep(60 * 1000);
Magic Number,Amib.Threading.Internal,WorkItem,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\WorkItem.cs,WaitAll,The following statement contains a magic number: (null == cancelWaitHandle) && (waitHandles.Length <= 64)
Missing Default,Amib.Threading.Internal,WorkItem,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.NetFramework\SmartThreadPool\WorkItem.cs,Cancel,The following switch statement is missing a default case: switch (GetWorkItemState())                  {                      case WorkItemState.Canceled:                          //Debug.WriteLine("Work item already canceled");                          if (abortExecution)                          {                              Thread executionThread = Interlocked.CompareExchange(ref _executingThread' null' _executingThread);                              if (null != executionThread)                              {                                  executionThread.Abort(); // "Cancel"                                  // No need to signalComplete' because we already cancelled this work item                                  // so it already signaled its completion.                                  //signalComplete = true;                              }                          }                           success = true;                          break;                      case WorkItemState.Completed:                          //Debug.WriteLine("Work item cannot be canceled");                          break;                      case WorkItemState.InProgress:                          if (abortExecution)                          {                              Thread executionThread = Interlocked.CompareExchange(ref _executingThread' null' _executingThread);                              if (null != executionThread)                              {                                  executionThread.Abort(); // "Cancel"                                  success = true;                                  signalComplete = true;                              }                          }                          else                          {                              success = true;                              signalComplete = true;                          }                          break;                      case WorkItemState.InQueue:                          // Signal to the wait for completion that the work                          // item has been completed (canceled). There is no                          // reason to wait for it to get out of the queue                          signalComplete = true;                          //Debug.WriteLine("Work item canceled");                          success = true;                          break;                  }
