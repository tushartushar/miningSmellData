Implementation smell,Namespace,Class,File,Method,Description
Long Method,ServiceStack.WebHost.Endpoints.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Configure,The method has 132 lines of code.
Long Method,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,AppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\PageBasedRoutingTests.cs,Configure,The method has 137 lines of code.
Long Method,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptCodeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptCodeTests.cs,Can_Evaluate_code,The method has 103 lines of code.
Long Method,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptCodeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptCodeTests.cs,Can_execute_existing_Script_Blocks_in_Code_Statements_in_Template_Syntax,The method has 142 lines of code.
Long Method,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq43,The method has 100 lines of code.
Long Method,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_eval_lisp_in_lisp,The method has 164 lines of code.
Long Method,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_next_token,The method has 169 lines of code.
Complex Method,ServiceStack.WebHost.Endpoints.Tests,RequestPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RequestPipelineTests.cs,AllFieldsTrue,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack.WebHost.Endpoints.Tests,ServerEventsService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Any,Cyclomatic complexity of the method is 10
Long Parameter List,ServiceStack.WebHost.Endpoints.Tests,AuthAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthTests.cs,CreateUser,The method has 6 parameters. Parameters: id' username' email' password' roles' permissions
Long Parameter List,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,Product,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryData.cs,Product,The method has 5 parameters. Parameters: productId' productName' category' unitPrice' unitsInStock
Long Parameter List,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ContentResolver,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptAssembliesTests.cs,Query,The method has 5 parameters. Parameters: uri' projection' selection' selectionArgs' sortOrder
Long Parameter List,ServiceStack.WebHost.Endpoints.Tests.Support,DirectServiceClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Support\DirectServiceClient.cs,PostFileWithRequest,The method has 5 parameters. Parameters: relativeOrAbsoluteUrl' fileToUpload' fileName' request' fieldName
Long Identifier,ServiceStack.WebHost.Endpoints.Tests,TestJavaScriptReceiver,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,,The length of the parameter BackgroundImageRequestReceived is 30.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,Soap12IntegrationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AlwaysThrowsService.cs,Does_return_Custom_SoapFault,The length of the statement  "                        requestBody: @"<s:Envelope xmlns:s=""http://www.w3.org/2003/05/soap-envelope"" xmlns:a=""http://www.w3.org/2005/08/addressing""> " is 128.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,Soap12IntegrationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AlwaysThrowsService.cs,Does_return_Custom_SoapFault,The length of the statement  "                    @"<?xml version=""1.0"" encoding=""utf-8""?><s:Envelope xmlns:s=""http://www.w3.org/2003/05/soap-envelope""><s:Body><s:Fault><s:Code><s:Value>s:Receiver</s:Value></s:Code><s:Reason><s:Text xml:lang=""en-US"">Test SOAP Fault</s:Text></s:Reason></s:Fault></s:Body></s:Envelope>")); " is 279.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,AsyncRestClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncRestClientTests.cs,Can_call_PostAsync_to_add_new_Movie_using_RestClientAsync,The length of the statement  "                TagLine = "A fisherman' a smuggler' and a syndicate of businessmen match wits over the possession of a priceless diamond."' " is 123.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,AsyncRestClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncRestClientTests.cs,Can_call_DeleteAsync_to_delete_Movie_using_RestClientAsync,The length of the statement  "                TagLine = "A fisherman' a smuggler' and a syndicate of businessmen match wits over the possession of a priceless diamond."' " is 123.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,GetFactorialAsyncService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncTaskTests.cs,Any,The length of the statement  "            throw new HttpError(HttpStatusCode.Forbidden' HttpStatusCode.Forbidden.ToString()' request.Message ?? "Request is forbidden"); " is 126.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,AttributeFiltersTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AttributeFiltersTest.cs,Proper_exception_is_serialized_to_client,The length of the statement  "                Assert.IsTrue(e.ResponseBody.Contains("ThrowingFilterAttribute")' "No stack trace in the response (it's probably empty)"); " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,AttributeFiltersTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AttributeFiltersTest.cs,Request_and_Response_Filters_are_executed_using_RestClient,The length of the statement  "            var response = client.Post<AttributeFilteredResponse>("attributefiltered"' new AttributeFiltered() { RequestFilterExecuted = false }); " is 134.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,AttributeFiltersTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AttributeFiltersTest.cs,Multi_Contextual_Request_and_Response_Filters_are_executed_using_RestClient,The length of the statement  "            var response = client.Put<AttributeFilteredResponse>("attributefiltered"' new AttributeFiltered() { RequestFilterExecuted = false }); " is 133.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,AttributeFiltersAsyncTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AttributeFiltersTestAsync.cs,Proper_exception_is_serialized_to_client,The length of the statement  "                Assert.IsTrue(e.ResponseBody.Contains("ThrowingFilterAttribute")' "No stack trace in the response (it's probably empty)"); " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,AttributeFiltersAsyncTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AttributeFiltersTestAsync.cs,Request_and_Response_Filters_are_executed_using_RestClient,The length of the statement  "            var response = client.Post<AttributeFilteredAsyncResponse>("attributefiltered-async"' new AttributeFilteredAsync { RequestFilterExecuted = false }); " is 148.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,AttributeFiltersAsyncTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AttributeFiltersTestAsync.cs,Multi_Contextual_Request_and_Response_Filters_are_executed_using_RestClient,The length of the statement  "            var response = client.Put<AttributeFilteredAsyncResponse>("attributefiltered-async"' new AttributeFilteredAsync { RequestFilterExecuted = false }); " is 147.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryQueryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryQueryTests.cs,Can_QueryUserAuth_in_Script,The length of the statement  "            Assert.That(context.EvaluateScript("{{ authRepo.getUserAuths({ orderBy:'Id' }) | map => it.Id | join }}")' Is.EqualTo("1'2'3")); " is 128.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryQueryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryQueryTests.cs,Can_QueryUserAuth_in_Script,The length of the statement  "            Assert.That(context.EvaluateScript("{{ authRepo.getUserAuths({ skip:1' orderBy:'Id' }) | map => it.Id | join }}")' Is.EqualTo("2'3")); " is 134.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryQueryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryQueryTests.cs,Can_QueryUserAuth_in_Script,The length of the statement  "            Assert.That(context.EvaluateScript("{{ authRepo.getUserAuths({ take:2' orderBy:'Id' }) | map => it.Id | join }}")' Is.EqualTo("1'2")); " is 134.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryQueryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryQueryTests.cs,Can_QueryUserAuth_in_Script,The length of the statement  "            Assert.That(context.EvaluateScript("{{ authRepo.getUserAuths({ skip:1' take:2' orderBy:'Id' }) | map => it.Id | join }}")' Is.EqualTo("2'3")); " is 142.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryQueryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryQueryTests.cs,Can_QueryUserAuth_in_Script,The length of the statement  "            Assert.That(context.EvaluateScript("{{ authRepo.searchUserAuths({ query:'gmail.com''orderBy:'Id'}) | map => it.Id | join }}")' Is.EqualTo("1'2'3")); " is 148.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryQueryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryQueryTests.cs,Can_QueryUserAuth_in_Script,The length of the statement  "            Assert.That(context.EvaluateScript("{{ authRepo.searchUserAuths({ query:'gmail.com''skip:1'take:1'orderBy:'Id'}) | map => it.Id | join }}")' Is.EqualTo("2")); " is 158.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryQueryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryQueryTests.cs,Can_QueryUserAuth_in_Script,The length of the statement  "                Assert.That(context.EvaluateScript("{{ authRepo.searchUserAuths({ query:'gmail.com'' orderBy:'LastName DESC' }) | map => it.Id | join }}")' Is.EqualTo("1'3'2")); " is 161.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryQueryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryQueryTests.cs,Can_QueryUserAuth_in_Script,The length of the statement  "                Assert.That(context.EvaluateScript("{{ authRepo.searchUserAuths({ query:'Test'' orderBy:'Email' }) | map => it.Id | join }}")' Is.EqualTo("2'1")); " is 146.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryQueryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryQueryTests.cs,Can_QueryUserAuth_in_Script,The length of the statement  "                Assert.That(context.EvaluateScript("{{ authRepo.searchUserAuths({ query:'Test'' orderBy:'Id' }) | map => it.Id | join }}")' Is.EqualTo("1'2")); " is 143.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryTests.cs,Can_AddUserAuthDetails,The length of the statement  "                AccessTokenSecret = "AAADDDCCCoR848BAMkQIZCRIKnVWZAvcKWqo7Ibvec8ebV9vJrfZAz8qVupdu5EbjFzmMmbwUFDbcNDea9H6rOn5SVn8es7KYZD"' " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,AuthAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthTests.cs,Configure,The length of the statement  "            CreateUser(1' AuthTests.UserName' null' AuthTests.Password' new List<string> { "TheRole" }' new List<string> { "ThePermission" }); " is 130.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,AuthTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthTests.cs,PostFile_with_no_Credentials_throws_UnAuthorized,The length of the statement  "                client.PostFile<FileUploadResponse>(ListeningOn + "/securedfileupload"' uploadFile' MimeTypes.GetMimeType(uploadFile.Name)); " is 124.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,AuthTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthTests.cs,PostFile_does_work_with_BasicAuth,The length of the statement  "            var response = client.PostFile<FileUploadResponse>(ListeningOn + "/securedfileupload"' uploadFile' MimeTypes.GetMimeType(uploadFile.Name)); " is 139.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_Include_Aggregates_in_AutoQuery,The length of the statement  "            response = client.Get(new QueryDataRockstars { Include = "Count(*)' Min(Age)' Max(Age)' Sum(Id)' Avg(Age)' First(Id)' Last(Id)"' OrderBy = "Id" }); " is 147.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_Include_Aggregates_in_AutoQuery,The length of the statement  "            response = client.Get(new QueryDataRockstars { Age = 27' Include = "Count(*)' Min(Age)' Max(Age)' Sum(Id)' Avg(Age)' First(Id)' Last(Id)"' OrderBy = "Id" }); " is 157.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_query_on_ForeignKey_and_RockstarAlbumGenreIndex,The length of the statement  "            response = client.Get(new QueryDataRockstarAlbumGenreIndex { Genre = "Grunge"' Id = 3' Include = "Total" }); //Hash + Range " is 123.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_query_on_ForeignKey_and_RockstarAlbumGenreIndex_Mapped,The length of the statement  "            response = client.Get(new QueryDataRockstarAlbumGenreIndexMapped { Genre = "Grunge"' Id = 3' Include = "Total" }); //Hash + Range " is 129.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Configure,The length of the statement  "            //    new OrmLiteConnectionFactory("Server=localhost;Port=5432;User Id=test;Password=test;Database=test;Pooling=true;MinPoolSize=0;MaxPoolSize=200"' " is 148.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Configure,The length of the statement  "                db.Insert(new TypeWithEnum { Id = 1' Name = "Value1"' SomeEnum = SomeEnum.Value1' NSomeEnum = SomeEnum.Value1' SomeEnumAsInt = SomeEnumAsInt.Value1' NSomeEnumAsInt = SomeEnumAsInt.Value1 }); " is 190.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Configure,The length of the statement  "                db.Insert(new TypeWithEnum { Id = 2' Name = "Value2"' SomeEnum = SomeEnum.Value2' NSomeEnum = SomeEnum.Value2' SomeEnumAsInt = SomeEnumAsInt.Value2' NSomeEnumAsInt = SomeEnumAsInt.Value2 }); " is 190.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Configure,The length of the statement  "                db.Insert(new TypeWithEnum { Id = 3' Name = "Value3"' SomeEnum = SomeEnum.Value3' NSomeEnum = SomeEnum.Value3' SomeEnumAsInt = SomeEnumAsInt.Value3' NSomeEnumAsInt = SomeEnumAsInt.Value3 }); " is 190.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_Include_Aggregates_in_AutoQuery,The length of the statement  "            response = client.Get(new QueryRockstars { Include = "Count(*)' Min(Age)' Max(Age)' Sum(Id)' Avg(Age)"' OrderBy = "Id" }); " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_Include_Aggregates_in_AutoQuery,The length of the statement  "            response = client.Get(new QueryRockstars { Age = 27' Include = "Count(*)' Min(Age)' Max(Age)' Sum(Id)' Avg(Age)"' OrderBy = "Id" }); " is 132.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,BufferedRequestLoggerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\BufferedRequestTests.cs,Can_see_RequestBody_in_RequestLogger_when_EnableRequestBodyTracking_Soap12,The length of the statement  "            const string soap12start = @"<s:Envelope xmlns:s=""http://www.w3.org/2003/05/soap-envelope"" xmlns:a=""http://www.w3.org/2005/08/addressing""><s:Header><a:Action s:mustUnderstand=""1"">MyRequest</a:Action><a:MessageID>urn:uuid:"; " is 229.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,BufferedRequestLoggerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\BufferedRequestTests.cs,Can_see_RequestBody_in_RequestLogger_when_EnableRequestBodyTracking_Soap11,The length of the statement  "            const string soap11 = @"<s:Envelope xmlns:s=""http://schemas.xmlsoap.org/soap/envelope/""><s:Body><MyRequest xmlns=""http://schemas.servicestack.net/types"" xmlns:i=""http://www.w3.org/2001/XMLSchema-instance""><Data>RequestData</Data></MyRequest></s:Body></s:Envelope>"; " is 271.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,CacheServerFeatureTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CacheServerFeatureTests.cs,Does_set_LastModified_and_Default_MaxAge,The length of the statement  "                Assert.That(res.Headers[HttpHeaders.LastModified]' Is.EqualTo(request.LastModified.Value.ToUniversalTime().ToString("r"))); " is 123.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,CompressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CompressionTests.cs,Test_response_with_CompressedResult,The length of the statement  "                const string expectedXml = "<TestCompress xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://schemas.ddnglobal.com/types/\"><Id>1</Id><Name>name</Name></TestCompress>"; " is 186.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,CompressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CompressionTests.cs,Test_response_with_CompressedResult,The length of the statement  "                const string expectedXmlNetCore = "<TestCompress xmlns=\"http://schemas.ddnglobal.com/types/\" xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\"><Id>1</Id><Name>name</Name></TestCompress>"; " is 193.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,CompressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CompressionTests.cs,Test_response_with_CompressedResult,The length of the statement  "                //Array.Copy(simpleDtoZip' CompressedResult.Adler32ChecksumLength' bytesToWriteToResponseStream' 0' bytesToWriteToResponseStream.Length); " is 137.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,ConcurrencyTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ConcurrencyTest.cs,Does_handle_concurrent_requests,The length of the statement  "            log.Info($"Took {sw.Elapsed.TotalSeconds} to execute {ConcurrentRequests} Concurrent Requests waiting a total of {totalSecondsWaited} seconds."); " is 145.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,CsvContentTypeFilterTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CsvContentTypeFilterTests.cs,Can_download_CSV_movies_using_csv_reply_endpoint,The length of the statement  "            Assert.That(res.Headers[HttpHeaders.ContentDisposition].Replace("; "' ";")' Is.EqualTo("attachment;filename=Movies.csv")); " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,CsvContentTypeFilterTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CsvContentTypeFilterTests.cs,Can_download_CSV_movies_using_csv_Accept_and_RestPath,The length of the statement  "            Assert.That(res.Headers[HttpHeaders.ContentDisposition].Replace("; "' ";")' Is.EqualTo("attachment;filename=Movies.csv")); " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,CsvContentTypeFilterTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CsvContentTypeFilterTests.cs,Can_download_CSV_Hello_using_csv_reply_endpoint,The length of the statement  "            Assert.That(res.Headers[HttpHeaders.ContentDisposition].Replace("; "' ";")' Is.EqualTo("attachment;filename=Hello.csv")); " is 121.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,CsvContentTypeFilterTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CsvContentTypeFilterTests.cs,Can_download_CSV_Hello_using_csv_Accept_and_RestPath,The length of the statement  "            Assert.That(res.Headers[HttpHeaders.ContentDisposition].Replace("; "' ";")' Is.EqualTo("attachment;filename=Hello.csv")); " is 121.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,CsvContentTypeFilterTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CsvContentTypeFilterTests.cs,Can_download_CSV_movies_using_csv_reply_Path,The length of the statement  "            Assert.That(res.Headers[HttpHeaders.ContentDisposition].Replace("; "' ";")' Is.EqualTo("attachment;filename=Movies.csv")); " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,CustomValidationErrorTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CustomValidationErrorTests.cs,Can_access_Request_in_Validator,The length of the statement  "                Assert.That(body' Is.EquivalentTo("{\"code\":\"Predicate\"'\"error\":\"The specified condition was not met for 'Name'.\"}")); " is 125.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,CustomValidationErrorTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CustomValidationErrorTests.cs,Can_access_Request_in_item_collection_Validator,The length of the statement  "                Assert.That(body' Is.EqualTo("{\"code\":\"Predicate\"'\"error\":\"The specified condition was not met for 'Name'.\"}")); " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EncodingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EncodingTests.cs,Can_Get_Greeting_When_Querystring_Contains_Non_ASCII_Chars,The length of the statement  "            Assert.That(PerformRequest(firstName' lastName).Greeting' Is.EqualTo(string.Format("Hello {0} {1}"' firstName' lastName))); " is 123.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EncodingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EncodingTests.cs,Can_Get_Greeting_When_Only_Url_Contains_Non_ASCII_Chars,The length of the statement  "            Assert.That(PerformRequest(firstName' lastName).Greeting' Is.EqualTo(string.Format("Hello {0} {1}"' firstName' lastName))); " is 123.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EncodingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EncodingTests.cs,Can_Get_Greeting_When_Querystring_Contains_Only_ASCII_Chars,The length of the statement  "            Assert.That(PerformRequest(firstName' lastName).Greeting' Is.EqualTo(string.Format("Hello {0} {1}"' firstName' lastName))); " is 123.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,ShouldDenyAccessForOtherNetworkAccessScenarios,The length of the statement  "            var scenarios = new List<RequestAttributes> { RequestAttributes.Localhost' RequestAttributes.LocalSubnet' RequestAttributes.External }; " is 135.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,InternalRestriction_allows_calls_from_Localhost_or_LocalSubnet,The length of the statement  "            ShouldDenyAccessForOtherNetworkAccessScenarios<InternalRestriction>(RequestAttributes.Localhost' RequestAttributes.LocalSubnet); " is 128.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,HttpPostXmlAndSecureLocalSubnetRestriction_does_not_allow_partial_success,The length of the statement  "            ShouldDenyAccessForOtherNetworkAccessScenarios<HttpPostXmlAndSecureLocalSubnetRestriction>(RequestAttributes.LocalSubnet); " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,HttpPostXmlAndSecureLocalSubnetRestriction_does_not_allow_partial_success,The length of the statement  "            ShouldDenyAccessForOtherHttpRequestTypesScenarios<HttpPostXmlAndSecureLocalSubnetRestriction>(RequestAttributes.HttpPost); " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,HttpPostXmlAndSecureLocalSubnetRestriction_does_not_allow_partial_success,The length of the statement  "            ShouldDenyAccessWhen<HttpPostXmlAndSecureLocalSubnetRestriction>(RequestAttributes.HttpPost | RequestAttributes.Json | RequestAttributes.Secure | RequestAttributes.LocalSubnet); " is 177.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,HttpPostXmlAndSecureLocalSubnetRestriction_does_not_allow_partial_success,The length of the statement  "            ShouldDenyAccessWhen<HttpPostXmlAndSecureLocalSubnetRestriction>(RequestAttributes.HttpPost | RequestAttributes.Xml | RequestAttributes.Secure | RequestAttributes.Localhost); " is 174.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,HttpPostXmlAndSecureLocalSubnetRestriction_does_not_allow_partial_success,The length of the statement  "            ShouldDenyAccessWhen<HttpPostXmlAndSecureLocalSubnetRestriction>(RequestAttributes.LocalSubnet | RequestAttributes.Secure | RequestAttributes.HttpHead); " is 152.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,HttpPostXmlAndSecureLocalSubnetRestriction_does_not_allow_partial_success,The length of the statement  "            ShouldDenyAccessWhen<HttpPostXmlAndSecureLocalSubnetRestriction>(RequestAttributes.HttpPost | RequestAttributes.Xml | RequestAttributes.InSecure); " is 146.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,HttpPostXmlAndSecureLocalSubnetRestriction_does_not_allow_partial_success,The length of the statement  "            ShouldDenyAccessWhen<HttpPostXmlAndSecureLocalSubnetRestriction>(RequestAttributes.HttpPost | RequestAttributes.Json | RequestAttributes.Secure | RequestAttributes.LocalSubnet); " is 177.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,HttpPostXmlAndSecureLocalSubnetRestriction_does_not_allow_partial_success,The length of the statement  "            ShouldDenyAccessWhen<HttpPostXmlAndSecureLocalSubnetRestriction>(RequestAttributes.HttpPost | RequestAttributes.Xml | RequestAttributes.Secure | RequestAttributes.Localhost); " is 174.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,HttpPostXmlAndSecureLocalSubnetRestriction_does_not_allow_partial_success,The length of the statement  "            ShouldAllowAccessWhen<HttpPostXmlAndSecureLocalSubnetRestriction>(RequestAttributes.HttpPost | RequestAttributes.Xml | RequestAttributes.Secure | RequestAttributes.LocalSubnet); " is 177.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,HttpPostXmlOrSecureLocalSubnetRestriction_does_allow_partial_success,The length of the statement  "            ShouldDenyAccessForOtherNetworkAccessScenarios<HttpPostXmlAndSecureLocalSubnetRestriction>(RequestAttributes.LocalSubnet); " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,HttpPostXmlOrSecureLocalSubnetRestriction_does_allow_partial_success,The length of the statement  "            ShouldDenyAccessWhen<HttpPostXmlOrSecureLocalSubnetRestriction>(RequestAttributes.Localhost | RequestAttributes.HttpPut); " is 121.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,HttpPostXmlOrSecureLocalSubnetRestriction_does_allow_partial_success,The length of the statement  "            ShouldAllowAccessWhen<HttpPostXmlOrSecureLocalSubnetRestriction>(RequestAttributes.HttpPost | RequestAttributes.Secure | RequestAttributes.LocalSubnet); " is 152.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,HttpPostXmlOrSecureLocalSubnetRestriction_does_allow_partial_success,The length of the statement  "            ShouldDenyAccessWhen<HttpPostXmlOrSecureLocalSubnetRestriction>(RequestAttributes.HttpPost | RequestAttributes.Json | RequestAttributes.Secure | RequestAttributes.Localhost); " is 174.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,HttpPostXmlOrSecureLocalSubnetRestriction_does_allow_partial_success,The length of the statement  "            ShouldAllowAccessWhen<HttpPostXmlOrSecureLocalSubnetRestriction>(RequestAttributes.Secure | RequestAttributes.LocalSubnet); " is 123.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,HttpPostXmlOrSecureLocalSubnetRestriction_does_allow_partial_success,The length of the statement  "            ShouldAllowAccessWhen<HttpPostXmlOrSecureLocalSubnetRestriction>(RequestAttributes.HttpPost | RequestAttributes.Json | RequestAttributes.Secure | RequestAttributes.LocalSubnet); " is 177.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,HttpPostXmlOrSecureLocalSubnetRestriction_does_allow_partial_success,The length of the statement  "            ShouldAllowAccessWhen<HttpPostXmlOrSecureLocalSubnetRestriction>(RequestAttributes.HttpPost | RequestAttributes.Xml | RequestAttributes.Secure | RequestAttributes.Localhost); " is 174.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,HttpPostXmlOrSecureLocalSubnetRestriction_does_allow_partial_success,The length of the statement  "            ShouldAllowAccessWhen<HttpPostXmlOrSecureLocalSubnetRestriction>(RequestAttributes.HttpPost | RequestAttributes.Xml | RequestAttributes.Secure | RequestAttributes.LocalSubnet); " is 176.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,Can_access_from_insecure_dev_environment,The length of the statement  "            ShouldAllowAccessWhen<InSecureDevEnvironmentRestriction>(RequestAttributes.Localhost | RequestAttributes.InSecure | RequestAttributes.HttpPost); " is 144.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,Can_access_from_insecure_dev_environment,The length of the statement  "            ShouldAllowAccessWhen<InSecureDevEnvironmentRestriction>(RequestAttributes.LocalSubnet | RequestAttributes.InSecure | RequestAttributes.HttpPost); " is 146.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,Can_access_from_insecure_dev_environment,The length of the statement  "            ShouldAllowAccessWhen<InSecureDevEnvironmentRestriction>(RequestAttributes.LocalSubnet | RequestAttributes.InSecure | RequestAttributes.HttpPost | RequestAttributes.Reply); " is 172.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,Can_access_from_insecure_dev_environment,The length of the statement  "            ShouldAllowAccessWhen<InSecureDevEnvironmentRestriction>(RequestAttributes.LocalSubnet | RequestAttributes.InSecure | RequestAttributes.HttpPost | RequestAttributes.OneWay); " is 173.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,Can_access_from_secure_dev_environment,The length of the statement  "            ShouldAllowAccessWhen<SecureDevEnvironmentRestriction>(RequestAttributes.Localhost | RequestAttributes.Secure | RequestAttributes.HttpPost); " is 140.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,Can_access_from_secure_dev_environment,The length of the statement  "            ShouldAllowAccessWhen<SecureDevEnvironmentRestriction>(RequestAttributes.LocalSubnet | RequestAttributes.Secure | RequestAttributes.HttpPost); " is 142.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,Can_access_from_secure_dev_environment,The length of the statement  "            ShouldAllowAccessWhen<SecureDevEnvironmentRestriction>(RequestAttributes.LocalSubnet | RequestAttributes.Secure | RequestAttributes.HttpPost | RequestAttributes.Reply); " is 168.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,Can_access_from_secure_dev_environment,The length of the statement  "            ShouldAllowAccessWhen<SecureDevEnvironmentRestriction>(RequestAttributes.LocalSubnet | RequestAttributes.Secure | RequestAttributes.HttpPost | RequestAttributes.OneWay); " is 169.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,Can_access_from_insecure_live_environment,The length of the statement  "            ShouldAllowAccessWhen<InSecureLiveEnvironmentRestriction>(RequestAttributes.External | RequestAttributes.InSecure | RequestAttributes.HttpPost); " is 144.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,Can_access_from_insecure_live_environment,The length of the statement  "            ShouldAllowAccessWhen<InSecureLiveEnvironmentRestriction>(RequestAttributes.External | RequestAttributes.InSecure | RequestAttributes.HttpPost | RequestAttributes.Reply); " is 170.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,Can_access_from_insecure_live_environment,The length of the statement  "            ShouldAllowAccessWhen<InSecureLiveEnvironmentRestriction>(RequestAttributes.External | RequestAttributes.InSecure | RequestAttributes.HttpPost | RequestAttributes.OneWay); " is 171.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,Can_access_from_secure_live_environment,The length of the statement  "            ShouldAllowAccessWhen<SecureLiveEnvironmentRestriction>(RequestAttributes.External | RequestAttributes.Secure | RequestAttributes.HttpPost); " is 140.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,Can_access_from_secure_live_environment,The length of the statement  "            ShouldAllowAccessWhen<SecureLiveEnvironmentRestriction>(RequestAttributes.External | RequestAttributes.Secure | RequestAttributes.HttpPost | RequestAttributes.Reply); " is 166.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,Can_access_from_secure_live_environment,The length of the statement  "            ShouldAllowAccessWhen<SecureLiveEnvironmentRestriction>(RequestAttributes.External | RequestAttributes.Secure | RequestAttributes.HttpPost | RequestAttributes.OneWay); " is 167.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,Can_access_MessageQueueRestriction_from_MQ,The length of the statement  "            ShouldAllowAccessWhen<MessageQueueRestriction>(RequestAttributes.Localhost | RequestAttributes.MessageQueue | RequestAttributes.HttpPost); " is 138.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,Can_not_access_MessageQueueRestriction_from_HTTP,The length of the statement  "            ShouldDenyAccessWhen<MessageQueueRestriction>(RequestAttributes.Localhost | RequestAttributes.Http | RequestAttributes.HttpPost); " is 129.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,EndpointRestrictionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\EndpointRestrictionTests.cs,Enum_masks_are_correct,The length of the statement  "            const RequestAttributes network = RequestAttributes.Localhost | RequestAttributes.LocalSubnet | RequestAttributes.External; " is 123.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,JSTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\JSTests.cs,Can_eval_js,The length of the statement  "            Assert.That(JS.eval("itemsOf(3' padRight(reverse(arg)' 8' '_'))"' scope)' Is.EqualTo(new List<object> { "eulav___"' "eulav___"' "eulav___" })); " is 143.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,JSTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\JSTests.cs,Can_eval_js,The length of the statement  "            Assert.That(JS.eval("{a: itemsOf(3' padRight(reverse(arg)' 8' '_')) }"' scope)' Is.EqualTo(new Dictionary<string' object> " is 121.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,JSTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\JSTests.cs,Can_eval_js,The length of the statement  "            Assert.That(JS.eval("3.itemsOf(arg.reverse().padRight(8' '_'))"' scope)' Is.EqualTo(new List<object> { "eulav___"' "eulav___"' "eulav___" })); " is 142.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,RemoteEndDropsConnectionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RemoteEndDropsConnectionTests.cs,TestClientDropsConnection,The length of the statement  "				StringAssert.Contains("Error in HttpListenerResponseWrapper"' errorLogs[0].Value' "Checking if the error is from HttpListenerResponseWrapper"); " is 143.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,ReplyAllRequestAttribute,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ReplyAllTests.cs,AssertSingleDto,The length of the statement  "            if (!(dto is BatchThrows || dto is BatchThrowsAsync || dto is NoRepeat || dto is HelloAll || dto is HelloAllAsync || dto is HelloAllVoid || dto is HelloAllVoidAsync || dto is HelloGet || dto is HelloAllCustom || dto is HelloAllTransaction || dto is Request)) " is 258.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,ReplyAllResponseAttribute,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ReplyAllTests.cs,AssertSingleDto,The length of the statement  "            if (!(dto == null || dto is Task || dto is BatchThrowsResponse || dto is NoRepeatResponse || dto is HelloAllResponse || dto is HelloAllCustomResponse " is 149.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,RequestFiltersTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RequestFiltersTests.cs,Get_401_When_accessing_Secure_using_fake_sessionid_cookie,The length of the statement  "            req.CookieContainer.Add(new Uri("http://localhost")' new Cookie("ss-session"' AllowedUser + "/" + Guid.NewGuid().ToString("N")' "/"' "localhost")); " is 147.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,RequestFiltersAppHostHttpListener,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RequestFiltersTests.cs,Configure,The length of the statement  "                        if (sessionIdParts.Length < 2 || sessionIdParts[0] != AllowedUser || sessionIdParts[1] != currentSessionGuid.ToString("N")) " is 123.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,RouteMatchTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RouteMatchTests.cs,Does_match_builtin_IsMobile_Rule_with_iPhone6UA,The length of the statement  "            const string iPhone6UA = "Mozilla/5.0 (iPhone; CPU iPhone OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML' like Gecko) Version/6.0 Mobile/10A5376e Safari/8536.25"; " is 163.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,RouteMatchTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RouteMatchTests.cs,Does_not_match_builtin_IsMobile_Rule_with_SafariUA,The length of the statement  "            const string SafariUA = "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/601.7.7 (KHTML' like Gecko) Version/9.1.2 Safari/601.7.7"; " is 143.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,RouteTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RouteTests.cs,Can_download_original_route_with_xml_extension,The length of the statement  "            Assert.That(response' Is.EqualTo("<?xml version=\"1.0\" encoding=\"utf-8\"?><CustomRoute xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://schemas.servicestack.net/types\"><Data>foo</Data></CustomRoute>")); " is 225.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,ServerEventsService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Any,The length of the statement  "                        await ServerEvents.NotifyUserIdAsync(request.ToUserId' request.Selector ?? Selector.Id<CustomType>()' request.CustomType); " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,ServerEventsService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Any,The length of the statement  "                        await ServerEvents.NotifyUserIdAsync(request.ToUserId' request.Selector ?? Selector.Id<SetterType>()' request.SetterType); " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,ServerEventsService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Any,The length of the statement  "                        await ServerEvents.NotifyChannelAsync(request.Channel' request.Selector ?? Selector.Id<CustomType>()' request.CustomType); " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,ServerEventsService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Any,The length of the statement  "                        await ServerEvents.NotifyChannelAsync(request.Channel' request.Selector ?? Selector.Id<SetterType>()' request.SetterType); " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,ServiceGatewayTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceGatewayTests.cs,Does_SGSendSyncGetSyncObjectInternal,The length of the statement  "            Assert.That(response.Value' Is.EqualTo("GET CLIENT> GET SGSendSyncGetSyncObjectInternal> GET SGSyncGetSyncObjectInternal")); " is 124.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,ServiceGatewayTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceGatewayTests.cs,Does_SGSendSyncGetAsyncObjectExternal,The length of the statement  "            Assert.That(response.Value' Is.EqualTo("GET CLIENT> GET SGSendSyncGetAsyncObjectExternal> GET SGSyncGetAsyncObjectExternal")); " is 126.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,ServiceGatewayUsageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceGatewayUsageTests.cs,IServiceGatewayAsyncApiUsage,The length of the statement  "            List<UsageReturn> returnAllToken = await client.SendAllAsync<UsageReturn>(new[] { new UsageReturn() }' CancellationToken.None); " is 127.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,SyncRestClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SyncRestClientTests.cs,Can_POST_to_add_new_Movie_using_RestClient,The length of the statement  "                TagLine = "A fisherman' a smuggler' and a syndicate of businessmen match wits over the possession of a priceless diamond."' " is 123.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,SyncRestClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SyncRestClientTests.cs,Can_Deserialize_Xml_MovieResponse,The length of the statement  "                var xml = "<MovieResponse xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://schemas.servicestack.net/types\"><Movie><Director>Edward Zwick</Director><Genres xmlns:d3p1=\"http://schemas.microsoft.com/2003/10/Serialization/Arrays\"><d3p1:string>Adventure</d3p1:string><d3p1:string>Drama</d3p1:string><d3p1:string>Thriller</d3p1:string></Genres><Id>6</Id><ImdbId>tt0450259</ImdbId><Rating>8</Rating><ReleaseDate>2007-01-26T00:00:00+00:00</ReleaseDate><TagLine>A fisherman' a smuggler' and a syndicate of businessmen match wits over the possession of a priceless diamond.</TagLine><Title>Blood Diamond</Title></Movie></MovieResponse>"; " is 650.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,SyncRestClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SyncRestClientTests.cs,Can_DELETE_Movie_using_RestClient,The length of the statement  "                TagLine = "A fisherman' a smuggler' and a syndicate of businessmen match wits over the possession of a priceless diamond."' " is 123.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,VirtualPathProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\VirtualPathProviderTests.cs,Does_resolve_nested_files_and_folders,The length of the statement  "            Assert.That(pathProvider.GetDirectory("a").GetFile("b/c/testfile-abc1.txt").ReadAllText()' Is.EqualTo("testfile-abc1")); " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,VirtualPathProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\VirtualPathProviderTests.cs,Does_resolve_nested_files_and_folders,The length of the statement  "            Assert.That(pathProvider.GetDirectory("a/b").GetFile("c/testfile-abc1.txt").ReadAllText()' Is.EqualTo("testfile-abc1")); " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,VirtualPathProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\VirtualPathProviderTests.cs,Does_resolve_nested_files_and_folders,The length of the statement  "            Assert.That(pathProvider.GetDirectory("a").GetDirectory("b").GetDirectory("c").GetFile("testfile-abc1.txt").ReadAllText()' Is.EqualTo("testfile-abc1")); " is 152.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,VirtualPathProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\VirtualPathProviderTests.cs,Can_GetAllMatchingFiles_in_nested_directories,The length of the statement  "            Assert.That(pathProvider.GetDirectory("a/b/c/d/e/f/g").GetAllMatchingFiles("testfile-abcdefg1.txt").Count()' Is.EqualTo(1)); " is 124.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,VirtualPathProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\VirtualPathProviderTests.cs,Can_GetAllMatchingFiles_in_nested_directories,The length of the statement  "            Assert.That(pathProvider.GetDirectory("a/b/c/d/e/f").GetAllMatchingFiles("testfile-abcdefg1.txt").Count()' Is.EqualTo(1)); " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,VirtualPathProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\VirtualPathProviderTests.cs,Can_GetAllMatchingFiles_in_nested_directories,The length of the statement  "            Assert.That(pathProvider.GetDirectory("a/b/c/d/e").GetAllMatchingFiles("testfile-abcdefg1.txt").Count()' Is.EqualTo(1)); " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,WsdlMetadataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\WsdlMetadataTests.cs,Wsdl_state_is_correct,The length of the statement  "                var wsdlTemplate = wsdlGenerator.GetWsdlTemplate(xsdMetadata' "http://w3c.org/types"' false' "http://w3c.org/types"' "Service Name"); " is 133.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,WsdlMetadataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\WsdlMetadataTests.cs,Wsdl_state_is_correct,The length of the statement  "                Assert.That(wsdlTemplate.ReplyOperationNames' Is.EquivalentTo(xsdMetadata.GetReplyOperationNames(Format.Soap12' soapTypes))); " is 125.
Long Statement,ServiceStack.WebHost.Endpoints.Tests,WsdlMetadataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\WsdlMetadataTests.cs,Wsdl_state_is_correct,The length of the statement  "                Assert.That(wsdlTemplate.OneWayOperationNames' Is.EquivalentTo(xsdMetadata.GetOneWayOperationNames(Format.Soap12' soapTypes))); " is 127.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.IntegrationTests,RestMovie,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IntegrationTests\RestMovie.cs,Equals,The length of the statement  "			return Equals(other.Id' Id) && Equals(other.Title' Title) && other.Rating == Rating && Equals(other.Director' Director) && other.ReleaseDate.Equals(ReleaseDate) && Equals(other.TagLine' TagLine) && Genres.EquivalentTo(other.Genres); " is 232.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,TemplateDbFiltersAsync,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BAK_CompatTemplateTests.cs,OpenDbConnectionAsync,The length of the statement  "            if (scope.PageResult != null && scope.PageResult.Args.TryGetValue("__dbinfo"' out var oDbInfo) && oDbInfo is ConnectionInfo dbInfo) // Keywords.DbInfo " is 150.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BAK_CompatTemplateTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BAK_CompatTemplateTests.cs,BAK_Filters_evaluates_async_results,The length of the statement  "            context.Container.AddSingleton<IDbConnectionFactory>(() => new OrmLiteConnectionFactory(":memory:"' SqliteOrmLiteDialectProvider.Instance)); " is 140.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BAK_CompatTemplateTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BAK_CompatTemplateTests.cs,BAK_Filters_evaluates_async_results,The length of the statement  "            context.VirtualFiles.WriteFile("dbCount.html"' "{{ dbScalar(`SELECT COUNT(*) FROM Post`) | assignTo: count }}{{ count }}"); " is 123.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BAK_CompatTemplateTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BAK_CompatTemplateTests.cs,BAK_Can_include_plugins_into_new_eval_context,The length of the statement  "            Assert.That(context.EvaluateTemplate("{{ evalContent | evalTemplate({use:{plugins:'MarkdownTemplatePlugin'}}) | raw }}")'  " is 121.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BAK_CompatTemplateTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BAK_CompatTemplateTests.cs,BAK_Transformers,The length of the statement  "            Assert.That(html.NormalizeNewLines()' Is.EqualTo("<p>The Header</p>\n<h2>The Title</h2>\n<p>The Content</p>\n".NormalizeNewLines())); " is 133.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_basic_binary_expressions,The length of the statement  "            Assert.That(expr' Is.EqualTo(new JsBinaryExpression(new JsLiteral(1)' JsBitwiseRightShift.Operator' new JsLiteral(2)))); " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,CallExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\CallExpressionTests.cs,Does_evaluate_nested_call_expressions,The length of the statement  "            Assert.That(context.EvaluateScript("{{ { a: add(it % 3'1) * 2' b: 2 * 3 + incr(4 + decr(5)) } | values | sum | currency }}")'  " is 125.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,CustomScriptMethodsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\CustomScriptMethodsTests.cs,Can_access_flag_enums,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ hasFlag(options3' 'Option1') }}'{{ hasFlag(options3' 1) }}'{{ hasFlag(options3' options1) }}")' " is 135.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,CustomScriptMethodsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\CustomScriptMethodsTests.cs,Can_access_flag_enums,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ hasFlag(options3' 'Option4') }}'{{ hasFlag(options3' 4) }}'{{ hasFlag(options3' options4) }}")' " is 135.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,CustomScriptMethodsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\CustomScriptMethodsTests.cs,Can_access_flag_enums,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ isEnum(options1' 'Option1') }}'{{ isEnum(options1' 1) }}'{{ isEnum(options1' options1) }}")' " is 132.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,CustomScriptMethodsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\CustomScriptMethodsTests.cs,Can_access_flag_enums,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ isEnum(options3' 'Option1') }}'{{ isEnum(options3' 1) }}'{{ isEnum(options3' options1) }}")' " is 132.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_escape_strings,The length of the statement  "            Assert.That(context.EvaluateScript("var s = '{{ json  | escapeSingleQuotes | raw }}'")' Is.EqualTo("var s = '{\"key\":\"single\\'back`tick\"}'")); " is 146.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_escape_strings,The length of the statement  "            Assert.That(context.EvaluateScript("var s = `{{ json  | escapeBackticks    | raw }}`")' Is.EqualTo("var s = `{\"key\":\"single'back\\`tick\"}`")); " is 146.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_escape_strings,The length of the statement  "            Assert.That(context.EvaluateScript("var s = ′{{ prime | escapePrimeQuotes  | raw }}′")' Is.EqualTo("var s = ′{\"key\":\"single'prime\\′quote\"}′")); " is 148.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_escape_strings,The length of the statement  "            Assert.That(context.EvaluateScript("var s = '{{ json  | jsString }}'")' Is.EqualTo("var s = '{\"key\":\"single\\'back`tick\"}'")); " is 130.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_escape_strings,The length of the statement  "            Assert.That(context.EvaluateScript("var s = {{ json   | jsQuotedString }}")' Is.EqualTo("var s = '{\"key\":\"single\\'back`tick\"}'")); " is 135.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_escape_strings,The length of the statement  "            Assert.That(context.EvaluateScript("var s = '{{ hasNewLines | jsString }}'")' Is.EqualTo(@"var s = 'has\nnew\r\nlines'")); " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_escape_strings,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ [{x:1'y:2}'{x:3'y:4}] | json | assignTo:json }}var s = '{{ json | jsString }}';")'  " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_numbers,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'two > 1'    | if(gt(two'1)) | raw }}")).Result' Is.EqualTo("two > 1")); " is 123.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_numbers,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'two > two'  | if(greaterThan(two'two)) }}")).Result' Is.EqualTo("")); " is 121.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_numbers,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'two >= two' | if(greaterThanEqual(two'two)) | raw }}")).Result' Is.EqualTo("two >= two")); " is 142.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_numbers,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ '2 >= 2' | if(greaterThanEqual(2'2)) | raw }}")).Result' Is.EqualTo("2 >= 2")); " is 130.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_numbers,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ '3 >= 2' | if(greaterThanEqual(3'2)) | raw }}")).Result' Is.EqualTo("3 >= 2")); " is 130.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_numbers,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ '3 > 2'  | if(greaterThan(3'2)) | raw }}")).Result' Is.EqualTo("3 > 2")); " is 124.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_numbers,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ '1 <= 2' | if(lessThanEqual(1'2)) | raw }}")).Result' Is.EqualTo("1 <= 2")); " is 127.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_numbers,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ '2 <= 2' | if(lessThanEqual(2'2)) | raw }}")).Result' Is.EqualTo("2 <= 2")); " is 127.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_numbers,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ '1 < 2'  | if(lessThan(1'2)) | raw }}")).Result' Is.EqualTo("1 < 2")); " is 121.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_strings,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'foo >  \"foo\"' | if(gt(foo'\"foo\")) }}")).Result' Is.EqualTo("")); " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_strings,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'foo >= \"foo\"' | if(gte(foo'\"foo\")) | raw }}")).Result' Is.EqualTo("foo >= \"foo\"")); " is 141.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_strings,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'foo <= \"foo\"' | if(lte(foo'\"foo\")) | raw }}")).Result' Is.EqualTo("foo <= \"foo\"")); " is 141.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_strings,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'foo <  \"foo\"' | if(lt(foo'\"foo\")) }}")).Result' Is.EqualTo("")); " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_strings,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'bar >  \"foo\"' | if(gt(bar'\"foo\")) }}")).Result' Is.EqualTo("")); " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_strings,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'bar >= \"foo\"' | if(gte(bar'\"foo\")) | raw }}")).Result' Is.EqualTo("")); " is 127.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_strings,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'bar <= \"foo\"' | if(lte(bar'\"foo\")) | raw }}")).Result' Is.EqualTo("bar <= \"foo\"")); " is 141.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_strings,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'bar <  \"foo\"' | if(lt(bar'\"foo\")) | raw }}")).Result' Is.EqualTo("bar <  \"foo\"")); " is 140.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_DateTime,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'now >  year2000' | if(gt(now'year2000)) | raw }}")).Result' Is.EqualTo("now >  year2000")); " is 143.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_DateTime,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'now >= year2000' | if(gte(now'year2000)) | raw }}")).Result' Is.EqualTo("now >= year2000")); " is 144.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_DateTime,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'now <= year2000' | if(lte(now'year2000)) }}")).Result' Is.EqualTo("")); " is 123.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_DateTime,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'now <  year2000' | if(lt(now'year2000)) }}")).Result' Is.EqualTo("")); " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_DateTime,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'now >  year2100' | if(gt(now'year2100)) }}")).Result' Is.EqualTo("")); " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_DateTime,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'now >= year2100' | if(gte(now'year2100)) }}")).Result' Is.EqualTo("")); " is 123.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_DateTime,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'now <= year2100' | if(lte(now'year2100)) | raw }}")).Result' Is.EqualTo("now <= year2100")); " is 144.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_DateTime,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'now <  year2100' | if(lt(now'year2100)) | raw }}")).Result' Is.EqualTo("now <  year2100")); " is 143.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_DateTime,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ '\"2001-01-01\" >  year2100' | if(gt(\"2001-01-01\"'year2100)) }}")).Result' Is.EqualTo("")); " is 144.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_DateTime,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ '\"2001-01-01\" >= year2100' | if(gte(\"2001-01-01\"'year2100)) }}")).Result' Is.EqualTo("")); " is 145.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_DateTime,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ '\"2001-01-01\" <= year2100' | if(lte(\"2001-01-01\"'year2100)) | raw }}")).Result' Is.EqualTo("\"2001-01-01\" <= year2100")); " is 177.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_DateTime,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ '\"2001-01-01\" <  year2100' | if(lt(\"2001-01-01\"'year2100)) | raw }}")).Result' Is.EqualTo("\"2001-01-01\" <  year2100")); " is 176.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_logical_boolean_operators,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'OR(true'true)' | if(OR(true'true)) | raw }}")).Result' Is.EqualTo("OR(true'true)")); " is 136.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_logical_boolean_operators,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'OR(true'false)' | if(OR(true'false)) | raw }}")).Result' Is.EqualTo("OR(true'false)")); " is 139.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_logical_boolean_operators,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'OR(false'false)' | if(OR(false'false)) | raw }}")).Result' Is.EqualTo("")); " is 127.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_logical_boolean_operators,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'AND(true'true)' | if(AND(true'true)) | raw }}")).Result' Is.EqualTo("AND(true'true)")); " is 139.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_logical_boolean_operators,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'AND(true'false)' | if(AND(true'false)) | raw }}")).Result' Is.EqualTo("")); " is 127.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_logical_boolean_operators,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'AND(false'false)' | if(AND(false'false)) | raw }}")).Result' Is.EqualTo("")); " is 129.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_logical_boolean_operators,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'OR(contextTrue'contextTrue)' | if(OR(contextTrue'contextTrue)) | raw }}")).Result' Is.EqualTo("OR(contextTrue'contextTrue)")); " is 178.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_logical_boolean_operators,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'OR(contextTrue'contextFalse)' | if(OR(contextTrue'contextFalse)) | raw }}")).Result' Is.EqualTo("OR(contextTrue'contextFalse)")); " is 181.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_logical_boolean_operators,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'OR(contextFalse'contextFalse)' | if(OR(contextFalse'contextFalse)) | raw }}")).Result' Is.EqualTo("")); " is 155.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_logical_boolean_operators,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'OR(gt(now'year2000)'eq(\"foo\"'bar))' | if(OR(gt(now'year2000)'eq(\"foo\"'bar))) | raw }}")).Result'  " is 152.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_logical_boolean_operators,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage(@"{{ 'OR(AND(gt(now'year2000)'eq(""foo""'bar))'AND(gt(now'year2000)'eq(""foo""'foo)))' |  " is 135.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_filter_string_filters,The length of the statement  "            context.VirtualFiles.WriteFile("page-substring.html"' "{{ 'This is a short sentence' | substring(8) }}... {{ 'These three words' | substring(6'5) }}"); " is 151.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_filter_string_filters,The length of the statement  "            context.VirtualFiles.WriteFile("page-pad.html"' "<h1>{{ '7' | padLeft(3) }}</h1><h2>{{ 'tired' | padRight(10) }}</h2>"); " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_filter_string_filters,The length of the statement  "            context.VirtualFiles.WriteFile("page-padchar.html"' "<h1>{{ '7' | padLeft(3''0') }}</h1><h2>{{ 'tired' | padRight(10''z') }}</h2>"); " is 132.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_filter_with_no_args,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ now | dateFormat('yyyy-MM-dd') }}")).Result' Is.EqualTo(DateTime.Now.ToString("yyyy-MM-dd"))); " is 145.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_filter_with_no_args,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ utcNow | dateFormat('yyyy-MM-dd') }}")).Result' Is.EqualTo(DateTime.UtcNow.ToString("yyyy-MM-dd"))); " is 151.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_build_urls_using_filters,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ baseUrl | addQueryString({ id: 1' foo: 'bar' }) | addHashParams({ hash: 'value' }) | raw }}")).Result'  " is 153.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_assign_result_to_variable,The length of the statement  "            Assert.That(result.NormalizeNewLines()' Is.EqualTo("<div><ul>\n<li>foo</li>\n<li>bar</li>\n<li>qux</li>\n</ul>\n</div>")); " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_assign_result_to_variable,The length of the statement  "            Assert.That(result.NormalizeNewLines()' Is.EqualTo("<div><ul>\n<li>foo</li>\n<li>bar</li>\n<li>qux</li>\n</ul>\n</div>")); " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_fmt,The length of the statement  "            Assert.That(context.EvaluateScript("{{ 'in {0} middle of the {1} I go {2} in my {3}' | fmt(['the'' 'night'' 'walking'' 'sleep']) }}")'  " is 134.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_appendFmt,The length of the statement  "            Assert.That(context.EvaluateScript("{{ 'in ' | appendFmt('{0} middle of the {1} I go {2}'' 'the'' 'night'' 'walking') }}")'  " is 123.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_appendFmt,The length of the statement  "            Assert.That(context.EvaluateScript("{{ 'in ' | appendFmt('{0} middle of the {1} I go {2} in my {3}'' ['the'' 'night'' 'walking'' 'sleep']) }}")'  " is 144.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_length_filters,The length of the statement  "            Assert.That(context.EvaluateScript("{{ items | hasMinCount(0) | iif(1'0) }}:{{ items | hasMinCount(3) | iif(1'0) }}:{{ items | hasMinCount(4) | iif(1'0) }}")' Is.EqualTo("1:1:0")); " is 180.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_length_filters,The length of the statement  "            Assert.That(context.EvaluateScript("{{ items | hasMaxCount(0) | iif(1'0) }}:{{ items | hasMaxCount(3) | iif(1'0) }}:{{ items | hasMaxCount(4) | iif(1'0) }}")' Is.EqualTo("0:1:1")); " is 180.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_length_filters,The length of the statement  "            Assert.That(context.EvaluateScript("{{ null | hasMinCount(0) | iif(1'0) }}:{{ 1 | hasMinCount(1) | iif(1'0) }}:{{ 'a' | hasMinCount(0) | iif(1'0) }}")' Is.EqualTo("0:0:1")); " is 173.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_length_filters,The length of the statement  "            Assert.That(context.EvaluateScript("{{ [1'2] | hasMinCount(0) | iif(1'0) }}:{{ 1 | hasMinCount(1) | iif(1'0) }}:{{ 'a' | hasMinCount(0) | iif(1'0) }}")' Is.EqualTo("1:0:1")); " is 174.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_length_filters,The length of the statement  "            Assert.That(context.EvaluateScript("{{ noArg | hasMinCount(0) | iif(1'0) }}:{{ items | hasMinCount(1) | ifUse(length(items)) }}")' Is.EqualTo("0:3")); " is 150.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_test_isTest_filters,The length of the statement  "            Assert.That(context.EvaluateScript("{{ 'a' | isString | iif(1'0) }}:{{ 1 | isString | iif(1'0) }}")' Is.EqualTo("1:0")); " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_test_isTest_filters,The length of the statement  "            Assert.That(context.EvaluateScript("{{ 'a' | isLong | iif(1'0) }}:{{ 1 | toLong | isLong | iif(1'0) }}")' Is.EqualTo("0:1")); " is 125.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_test_isTest_filters,The length of the statement  "            Assert.That(context.EvaluateScript("{{ 'a' | isDouble | iif(1'0) }}:{{ 1.1 | isDouble | iif(1'0) }}")' Is.EqualTo("0:1")); " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_test_isTest_filters,The length of the statement  "            Assert.That(context.EvaluateScript("{{ 'a' | isFloat | iif(1'0) }}:{{ 1.1 | toFloat | isFloat | iif(1'0) }}")' Is.EqualTo("0:1")); " is 130.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_test_isTest_filters,The length of the statement  "            Assert.That(context.EvaluateScript("{{ 'a' | isDecimal | iif(1'0) }}:{{ 1.1 | toDecimal | isDecimal | iif(1'0) }}")' Is.EqualTo("0:1")); " is 136.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_test_isTest_filters,The length of the statement  "            Assert.That(context.EvaluateScript("{{ 'a' | isBool | iif(1'0) }}:{{ false | isBool | iif(1'0) }}")' Is.EqualTo("0:1")); " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_test_isTest_filters,The length of the statement  "            Assert.That(context.EvaluateScript("{{ 'a' | isChar | iif(1'0) }}:{{ 'a' | toChar | isChar | iif(1'0) }}")' Is.EqualTo("0:1")); " is 127.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_test_isTest_filters,The length of the statement  "            Assert.That(context.EvaluateScript("{{ 'a' | isChars | iif(1'0) }}:{{ 'a' | toChars | isChars | iif(1'0) }}:{{ ['a'''b'] | toChars | isChars | iif(1'0) }}")' Is.EqualTo("0:1:1")); " is 179.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_test_isTest_filters,The length of the statement  "            Assert.That(context.EvaluateScript("{{ 'a' | isByte | iif(1'0) }}:{{ 1 | toByte | isByte | iif(1'0) }}")' Is.EqualTo("0:1")); " is 125.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_test_isTest_filters,The length of the statement  "            Assert.That(context.EvaluateScript("{{ bytes | isBytes | iif(1'0) }}:{{ 'a' | isBytes | iif(1'0) }}:{{ 'a' | toUtf8Bytes | isBytes | iif(1'0) }}")' Is.EqualTo("1:0:1")); " is 169.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_test_isTest_filters,The length of the statement  "            Assert.That(context.EvaluateScript("{{ 'a' | isList | iif(1'0) }}:{{ {a:1} | isList | iif(1'0) }}:{{ ['a'] | isList | iif(1'0) }}")' Is.EqualTo("0:0:1")); " is 154.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_test_isTest_filters,The length of the statement  "            Assert.That(context.EvaluateScript("{{ 'a' | isEnumerable | iif(1'0) }}:{{ 1 | isEnumerable | iif(1'0) }}:{{ ['a'] | isEnumerable | iif(1'0) }}:{{ {a:1} | isEnumerable | iif(1'0) }}")' Is.EqualTo("1:0:1:1")); " is 208.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_test_isTest_filters,The length of the statement  "            Assert.That(context.EvaluateScript("{{ 'a' | isDictionary | iif(1'0) }}:{{ {a:1} | isDictionary | iif(1'0) }}:{{ ['a'] | isDictionary | iif(1'0) }}")' Is.EqualTo("0:1:0")); " is 172.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_test_isTest_filters,The length of the statement  "            Assert.That(context.EvaluateScript("{{ {a:'a'} | isStringDictionary | iif(1'0) }}:{{ {a:1} | isStringDictionary | iif(1'0) }}:{{ stringDictionary | isStringDictionary | iif(1'0) }}")' Is.EqualTo("0:0:1")); " is 205.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_test_isTest_filters,The length of the statement  "            Assert.That(context.EvaluateScript("{{ {a:'a'} | isObjectDictionary | iif(1'0) }}:{{ {a:1} | isObjectDictionary | iif(1'0) }}:{{ stringDictionary | isObjectDictionary | iif(1'0) }}")' Is.EqualTo("1:1:0")); " is 205.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_test_isTest_filters,The length of the statement  "            Assert.That(context.EvaluateScript("{{ 'a' | isNumber | iif(1'0) }}:{{ 1 | isNumber | iif(1'0) }}:{{ 1.1 | isNumber | iif(1'0) }}")' Is.EqualTo("0:1:1")); " is 154.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_test_isTest_filters,The length of the statement  "            Assert.That(context.EvaluateScript("{{ 'a' | isRealNumber | iif(1'0) }}:{{ 1 | isRealNumber | iif(1'0) }}:{{ 1.1 | isRealNumber | iif(1'0) }}")' Is.EqualTo("0:0:1")); " is 166.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_test_isTest_filters,The length of the statement  "            Assert.That(context.EvaluateScript("{{ objectList | isArray | iif(1'0) }}:{{ objectArray | isArray | iif(1'0) }}:{{ [1''a'] | isArray | iif(1'0) }}")' Is.EqualTo("0:1:0")); " is 172.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_test_isTest_filters,The length of the statement  "            Assert.That(context.EvaluateScript("{{ anonObject | isAnonObject | iif(1'0) }}:{{ context | isAnonObject | iif(1'0) }}:{{ {a:1} | isAnonObject | iif(1'0) }}")' Is.EqualTo("1:0:0")); " is 181.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_test_isTest_filters,The length of the statement  "            Assert.That(context.EvaluateScript("{{ context | isClass | iif(1'0) }}:{{ 1 | isClass | iif(1'0) }}")' Is.EqualTo("1:0")); " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_test_isTest_filters,The length of the statement  "            Assert.That(context.EvaluateScript("{{ context | isValueType | iif(1'0) }}:{{ 1 | isValueType | iif(1'0) }}")' Is.EqualTo("0:1")); " is 130.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_test_isTest_filters,The length of the statement  "            Assert.That(context.EvaluateScript("{{ {a:1} | isKeyValuePair | iif(1'0) }}:{{ keyValuePair | isKeyValuePair | iif(1'0) }}:{{ {a:1} | toList | get(0) | isKeyValuePair | iif(1'0) }}")' Is.EqualTo("0:1:1")); " is 205.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_test_isTest_filters,The length of the statement  "            Assert.That(context.EvaluateScript("{{ 'a' | isType('string') | iif(1'0) }}:{{ string | isType('String') | iif(1'0) }}:{{ 1 | isString | iif(1'0) }}")' Is.EqualTo("1:1:0")); " is 173.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_stop_filter_execution_with_end,The length of the statement  "            Assert.That(context.EvaluateScript("{{ arg   | endIfNull     | useFmt('{0} + {1} = {2}''1'2'3) }}")' Is.EqualTo("1 + 2 = 3")); " is 126.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_stop_filter_execution_with_end,The length of the statement  "            Assert.That(context.EvaluateScript("{{ arg   | endIfNotNull  | use('bar') | assignTo: arg }}{{ arg }}")' Is.EqualTo("foo")); " is 124.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_stop_filter_execution_with_end,The length of the statement  "            Assert.That(context.EvaluateScript("{{ noArg | endIfExists   | use('bar') | assignTo: noArg }}{{ noArg }}")' Is.EqualTo("bar")); " is 128.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_stop_filter_execution_with_end,The length of the statement  "            Assert.That(context.EvaluateScript("{{ items | endIfNotEmpty | use([4'5'6]) | assignTo: items }}{{ items | join }}")' Is.EqualTo("1'2'3")); " is 139.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_stop_filter_execution_with_end,The length of the statement  "            Assert.That(context.EvaluateScript("{{ nums  | endIfNotEmpty | use([4'5'6]) | assignTo: nums  }}{{ nums  | join }}")' Is.EqualTo("4'5'6")); " is 139.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_chain_end_filters_together,The length of the statement  "            Assert.That(context.EvaluateScript("{{ endIf(isEmpty(items)) | endIf(!isEmpty(none)) | select: 1 }}")' Is.EqualTo("1")); " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_continue_filter_execution_with_only,The length of the statement  "            Assert.That(context.EvaluateScript("{{ arg   | onlyIfNotNull  | useFmt('{0} + {1} = {2}''1'2'3) }}")' Is.EqualTo("1 + 2 = 3")); " is 127.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_continue_filter_execution_with_only,The length of the statement  "            Assert.That(context.EvaluateScript("{{ arg   | onlyIfNull     | use('bar') | assignTo: arg }}{{ arg }}")' Is.EqualTo("foo")); " is 125.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_continue_filter_execution_with_only,The length of the statement  "            Assert.That(context.EvaluateScript("{{ noArg | onlyIfNull     | use('bar') | assignTo: noArg }}{{ noArg }}")' Is.EqualTo("bar")); " is 129.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_continue_filter_execution_with_only,The length of the statement  "            Assert.That(context.EvaluateScript("{{ items | onlyIfEmpty    | use([4'5'6]) | assignTo: items }}{{ items | join }}")' Is.EqualTo("1'2'3")); " is 140.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_continue_filter_execution_with_only,The length of the statement  "            Assert.That(context.EvaluateScript("{{ nums  | onlyIfEmpty    | use([4'5'6]) | assignTo: nums  }}{{ nums  | join }}")' Is.EqualTo("4'5'6")); " is 140.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_chain_only_filters_together,The length of the statement  "            Assert.That(context.EvaluateScript("{{ onlyIf(!isEmpty(items)) | onlyIf(isEmpty(none)) | show: 1 }}")' Is.EqualTo("1")); " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_chain_only_filters_together,The length of the statement  "            Assert.That(context.EvaluateScript("{{ noArg | onlyIfNull      | onlyIfNotNull(none)   | show: 1 }}")' Is.EqualTo("1")); " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_chain_only_filters_together,The length of the statement  "            Assert.That(context.EvaluateScript("{{ arg   | onlyIfNotEmpty  | onlyIfNotEmpty(items) | join }}")' Is.EqualTo("1'2'3")); " is 121.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_resolveAsset_to_resolve_external_paths,The length of the statement  "            Assert.That(context.EvaluateScript("{{ 'img/logo.png'  | resolveAsset }}")' Is.EqualTo("http://example.com/assets/img/logo.png")); " is 130.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_resolveAsset_to_resolve_external_paths,The length of the statement  "            Assert.That(context.EvaluateScript("{{ '/img/logo.png' | resolveAsset }}")' Is.EqualTo("http://example.com/assets/img/logo.png")); " is 130.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_textDump,The length of the statement  "            Assert.That(context.EvaluateScript("{{ o | textDump }}"' new ObjectDictionary { ["o"] = new A(1) }).NormalizeNewLines()'  " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_textDump,The length of the statement  "            Assert.That(context.EvaluateScript("{{ o | textDump }}"' new ObjectDictionary { ["o"] = new B(1' "x") }).NormalizeNewLines()'  " is 125.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_textDump,The length of the statement  "            Assert.That(context.EvaluateScript("{{ o | textDump }}"' new ObjectDictionary { ["o"] = new[]{ kvpA1' kvpBx } }).NormalizeNewLines()'  " is 133.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_textDump,The length of the statement  "            Assert.That(context.EvaluateScript("{{ o | textDump({ caption: 'C' }) }}"' new ObjectDictionary { ["o"] = new A(1) }).NormalizeNewLines()'  " is 138.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_textDump,The length of the statement  "            Assert.That(context.EvaluateScript("{{ o | textDump({ caption: 'C' }) }}"' new ObjectDictionary { ["o"] = kvpA1 }).NormalizeNewLines()'  " is 135.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_textDump,The length of the statement  "            Assert.That(context.EvaluateScript("{{ [{a:1}'{a:2}] | textDump({ caption: 'C'' rowNumbers:false }) }}").NormalizeNewLines()'  " is 125.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_textDump,The length of the statement  "            Assert.That(context.EvaluateScript("{{ o | textDump({ caption: 'C'' rowNumbers:false }) }}"' new ObjectDictionary { ["o"] = new[]{ new A(1)' new A(2) } }).NormalizeNewLines()'  " is 175.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_textDump,The length of the statement  "            Assert.That(context.EvaluateScript("{{ o | textDump({ caption: 'C'' rowNumbers:false }) }}"' new ObjectDictionary { ["o"] = new[]{ kvpA1' kvpA2 } }).NormalizeNewLines()'  " is 169.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_textDump,The length of the statement  "            Assert.That(context.EvaluateScript("{{ [{a:1'b:'x'}'{a:2'b:'y'}] | textDump({ caption: 'C'' rowNumbers:false }) }}").NormalizeNewLines()'  " is 137.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_textDump,The length of the statement  "            Assert.That(context.EvaluateScript("{{ o | textDump({ caption: 'C'' rowNumbers:false }) }}"' new ObjectDictionary { ["o"] = new[]{ new B(1' "x")' new B(2' "y") } }).NormalizeNewLines()'  " is 185.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_textDump,The length of the statement  "            Assert.That(context.EvaluateScript("{{ o | textDump({ caption: 'C'' rowNumbers:false }) }}"' new ObjectDictionary { ["o"] = new[]{ new[]{ kvpA1' kvpBx }' new[]{ kvpA2' kvpBy }  } }).NormalizeNewLines()'  " is 202.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_textDump,The length of the statement  "            Assert.That(context.EvaluateScript("{{ o | textDump({ caption: 'C' }) }}"' new ObjectDictionary { ["o"] = new[]{ new A(1)' new A(2) } }).NormalizeNewLines()'  " is 157.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_textDump,The length of the statement  "            Assert.That(context.EvaluateScript("{{ o | textDump({ caption: 'C' }) }}"' new ObjectDictionary { ["o"] = new[]{ kvpA1' kvpA2 } }).NormalizeNewLines()'  " is 151.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_textDump,The length of the statement  "            Assert.That(context.EvaluateScript("{{ o | textDump({ caption: 'C' }) }}"' new ObjectDictionary { ["o"] = new[]{ new B(1' "x")' new B(2' "y") } }).NormalizeNewLines()'  " is 167.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_textDump,The length of the statement  "            Assert.That(context.EvaluateScript("{{ o | textDump({ caption: 'C' }) }}"' new ObjectDictionary { ["o"] = new[]{ new[]{ kvpA1' kvpBx }' new[]{ kvpA2' kvpBy } } }).NormalizeNewLines()'  " is 183.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_htmlDump,The length of the statement  "            Assert.That(context.EvaluateScript("{{ o | htmlDump }}"' new ObjectDictionary { ["o"] = new A(1) }).NormalizeNewLines()'  " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_htmlDump,The length of the statement  "                Is.EqualTo("<table class=\"table\"><tbody><tr><th>a</th><td>1</td></tr><tr><th>b</th><td>x</td></tr></tbody></table>".NormalizeNewLines())); " is 140.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_htmlDump,The length of the statement  "            Assert.That(context.EvaluateScript("{{ {a:1'b:'x'} | htmlDump }}"' new ObjectDictionary { ["o"] = new B(1' "x") }).NormalizeNewLines()'  " is 135.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_htmlDump,The length of the statement  "                Is.EqualTo("<table class=\"table\"><tbody><tr><th>a</th><td>1</td></tr><tr><th>b</th><td>x</td></tr></tbody></table>".NormalizeNewLines())); " is 140.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_htmlDump,The length of the statement  "            Assert.That(context.EvaluateScript("{{ {a:1'b:'x'} | htmlDump }}"' new ObjectDictionary { ["o"] = new[]{ kvpA1' kvpBx } }).NormalizeNewLines()'  " is 143.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_htmlDump,The length of the statement  "                Is.EqualTo("<table class=\"table\"><tbody><tr><th>a</th><td>1</td></tr><tr><th>b</th><td>x</td></tr></tbody></table>".NormalizeNewLines())); " is 140.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_htmlDump,The length of the statement  "                Is.EqualTo("<table class=\"table\"><caption>C</caption><tbody><tr><th>a</th><td>1</td></tr></tbody></table>".NormalizeNewLines())); " is 131.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_htmlDump,The length of the statement  "            Assert.That(context.EvaluateScript("{{ o | htmlDump({ caption: 'C' }) }}"' new ObjectDictionary { ["o"] = new A(1) }).NormalizeNewLines()'  " is 138.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_htmlDump,The length of the statement  "                Is.EqualTo("<table class=\"table\"><caption>C</caption><tbody><tr><th>a</th><td>1</td></tr></tbody></table>".NormalizeNewLines())); " is 131.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_htmlDump,The length of the statement  "            Assert.That(context.EvaluateScript("{{ o | htmlDump({ caption: 'C' }) }}"' new ObjectDictionary { ["o"] = kvpA1 }).NormalizeNewLines()'  " is 135.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_htmlDump,The length of the statement  "                Is.EqualTo("<table class=\"table\"><caption>C</caption><tbody><tr><th>a</th><td>1</td></tr></tbody></table>".NormalizeNewLines())); " is 131.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_htmlDump,The length of the statement  "                Is.EqualTo("<table class=\"table\"><caption>C</caption><thead><tr><th>a</th></tr></thead><tbody><tr><td>1</td></tr><tr><td>2</td></tr></tbody></table>".NormalizeNewLines())); " is 174.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_htmlDump,The length of the statement  "            Assert.That(context.EvaluateScript("{{ o | htmlDump({ caption: 'C' }) }}"' new ObjectDictionary { ["o"] = new[]{ new A(1)' new A(2) } }).NormalizeNewLines()'  " is 157.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_htmlDump,The length of the statement  "                Is.EqualTo("<table class=\"table\"><caption>C</caption><thead><tr><th>a</th></tr></thead><tbody><tr><td>1</td></tr><tr><td>2</td></tr></tbody></table>".NormalizeNewLines())); " is 174.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_htmlDump,The length of the statement  "            Assert.That(context.EvaluateScript("{{ o | htmlDump({ caption: 'C' }) }}"' new ObjectDictionary { ["o"] = new[]{ kvpA1' kvpA2 } }).NormalizeNewLines()'  " is 151.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_htmlDump,The length of the statement  "                Is.EqualTo("<table class=\"table\"><caption>C</caption><thead><tr><th>a</th></tr></thead><tbody><tr><td>1</td></tr><tr><td>2</td></tr></tbody></table>".NormalizeNewLines())); " is 174.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_htmlDump,The length of the statement  "                Is.EqualTo("<table class=\"table\"><caption>C</caption><thead><tr><th>a</th><th>b</th></tr></thead><tbody><tr><td>1</td><td>x</td></tr><tr><td>2</td><td>y</td></tr></tbody></table>".NormalizeNewLines())); " is 204.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_htmlDump,The length of the statement  "            Assert.That(context.EvaluateScript("{{ o | htmlDump({ caption: 'C' }) }}"' new ObjectDictionary { ["o"] = new[]{ new B(1' "x")' new B(2' "y") } }).NormalizeNewLines()'  " is 167.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_htmlDump,The length of the statement  "                Is.EqualTo("<table class=\"table\"><caption>C</caption><thead><tr><th>a</th><th>b</th></tr></thead><tbody><tr><td>1</td><td>x</td></tr><tr><td>2</td><td>y</td></tr></tbody></table>".NormalizeNewLines())); " is 204.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_htmlDump,The length of the statement  "            Assert.That(context.EvaluateScript("{{ o | htmlDump({ caption: 'C' }) }}"' new ObjectDictionary { ["o"] = new[]{ new[]{ kvpA1' kvpBx }' new[]{ kvpA2' kvpBy } } }).NormalizeNewLines()'  " is 183.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_htmlDump,The length of the statement  "                Is.EqualTo("<table class=\"table\"><caption>C</caption><thead><tr><th>a</th><th>b</th></tr></thead><tbody><tr><td>1</td><td>x</td></tr><tr><td>2</td><td>y</td></tr></tbody></table>".NormalizeNewLines())); " is 204.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_htmlDump,The length of the statement  "                Is.EqualTo("<table class=\"table\"><caption>C</caption><tbody><tr><td>1</td></tr><tr><td>2</td></tr></tbody></table>".NormalizeNewLines())); " is 140.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_htmlDump,The length of the statement  "                Is.EqualTo("<table class=\"table\"><caption>C</caption><tbody><tr><td>a</td></tr><tr><td>b</td></tr></tbody></table>".NormalizeNewLines())); " is 140.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_htmlDump,The length of the statement  "                Is.EqualTo("<table class=\"table\"><tbody><tr><td>1</td></tr><tr><td>2</td></tr></tbody></table>".NormalizeNewLines())); " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_htmlDump,The length of the statement  "                Is.EqualTo("<table class=\"table\"><tbody><tr><td>a</td></tr><tr><td>b</td></tr></tbody></table>".NormalizeNewLines())); " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_htmlDump,The length of the statement  "            Assert.That(context.EvaluateScript("{{ [] | htmlDump({ caption: 'C'' captionIfEmpty: 'E'' className:'table-bordered' }) }}").NormalizeNewLines()'  " is 145.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_array_methods,The length of the statement  "            Assert.That(context.EvaluateScript("{{ [] | to => result}}{{fruits.forEach((item'index) => result.push(`${item} ${index}`))}}{{result | join}}")'  " is 145.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_other_array_methods,The length of the statement  "            Assert.That(context.EvaluateScript("{{['spray'' 'limit'' 'elite'' 'exuberant'' 'destruction'' 'present'].filter(word => word.Length > 6) | join}}")' " is 148.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_other_array_methods,The length of the statement  "            Assert.That(context.EvaluateScript("{{['ant'' 'bison'' 'camel'' 'duck'' 'bison'].indexOf('bison')}}")' Is.EqualTo("1")); " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_other_array_methods,The length of the statement  "            Assert.That(context.EvaluateScript("{{['ant'' 'bison'' 'camel'' 'duck'' 'bison'].indexOf('bison''2)}}")' Is.EqualTo("4")); " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_other_array_methods,The length of the statement  "            Assert.That(context.EvaluateScript("{{['ant'' 'bison'' 'camel'' 'duck'' 'bison'].indexOf('giraffe')}}")' Is.EqualTo("-1")); " is 123.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_other_array_methods,The length of the statement  "            Assert.That(context.EvaluateScript("{{['broccoli'' 'cauliflower'' 'cabbage'' 'kale'' 'tomato'].pop()}}")' Is.EqualTo("tomato")); " is 128.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_other_array_methods,The length of the statement  "            Assert.That(context.EvaluateScript("{{[1' 2' 3' 4].reduce((accumulator' currentValue) => accumulator + currentValue)}}")' Is.EqualTo("10")); " is 140.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_other_array_methods,The length of the statement  "            Assert.That(context.EvaluateScript("{{[1' 2' 3' 4].reduce((accumulator' currentValue) => accumulator + currentValue' 5)}}")' Is.EqualTo("15")); " is 143.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_other_array_methods,The length of the statement  "            Assert.That(context.EvaluateScript("{{['ant'' 'bison'' 'camel'' 'duck'' 'elephant'] | to => animals}}{{animals.slice(2) | join}}")' Is.EqualTo("camel'duck'elephant")); " is 167.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_other_array_methods,The length of the statement  "            Assert.That(context.EvaluateScript("{{['ant'' 'bison'' 'camel'' 'duck'' 'elephant'] | to => animals}}{{animals.slice(2'4) | join}}")' Is.EqualTo("camel'duck")); " is 160.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_other_array_methods,The length of the statement  "            Assert.That(context.EvaluateScript("{{['ant'' 'bison'' 'camel'' 'duck'' 'elephant'] | to => animals}}{{animals.slice(1'5) | join}}")' Is.EqualTo("bison'camel'duck'elephant")); " is 175.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_other_array_methods,The length of the statement  "            Assert.That(context.EvaluateScript("{{['March'' 'Jan'' 'Feb'' 'Dec'].sort() | join}}")' Is.EqualTo("Dec'Feb'Jan'March")); " is 121.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_other_array_methods,The length of the statement  "            Assert.That(context.EvaluateScript("{{[1' 2' 3] | to => array}}{{array.unshift([4'5])}} : {{array | join}}")' Is.EqualTo("5 : 4'5'1'2'3")); " is 139.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DslTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DslTests.cs,Can_use_injected_binary_serializer_with_EvaluateScript,The length of the statement  "            var result = (ReadOnlyMemory<byte>)context.Evaluate("{{ serialize(target) | return }}"' new Dictionary<string' object> { " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Can_use_conditional_filters_with_filter_errors,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ 'in filter' | throw }}{{ ifError | select: <h1>FAIL! { it.Message }</h1> }}"' out _)' " is 125.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Can_use_conditional_filters_with_filter_errors,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ 'in filter' | throw }}{{ lastError | select: <h1>FAIL! { it.Message }</h1> }}"' out _)' " is 127.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Can_use_conditional_filters_with_filter_errors,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ 'in filter' | throw }}{{ lastErrorMessage | format('<h1>FAIL! {0}</h1>') | raw }}"' out _)' " is 131.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Can_use_conditional_filters_with_filter_errors,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ 'in filter' | throw }}<h1>{{ lastError | ifExists | map: it.Message }}</h1>"' out _)' " is 125.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Can_throw_on_conditions,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ 'in filter' | throwIf(true) }}{{ ifError | select: <h1>FAIL! { it.Message }</h1> }}"' out _)' " is 133.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Can_throw_on_conditions,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ 'in filter' | throwIf(true) }}{{ error | ifExists | select: <h1>FAIL! { it.Message }</h1> }}"' out _)' " is 142.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Can_throw_on_conditions,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ true | ifThrow('in filter') }}{{ ifError | select: <h1>FAIL! { it.Message }</h1> }}"' out _)' " is 133.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Can_throw_on_conditions,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ true | ifThrow('in filter') }}{{ error | ifExists | select: <h1>FAIL! { it.Message }</h1> }}"' out _)' " is 142.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Can_throw_on_conditions,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ 'in filter' | throwIf(false) }}{{ ifError | select: <h1>FAIL! { it.Message }</h1> }}"' out _)' " is 134.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Can_throw_on_conditions,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ 'in filter' | throwIf(false) }}{{ error | ifExists | select: <h1>FAIL! { it.Message }</h1> }}"' out _)' " is 143.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Can_throw_on_conditions,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ false | ifThrow('in filter') }}{{ ifError | select: <h1>FAIL! { it.Message }</h1> }}"' out _)' " is 134.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Can_throw_on_conditions,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ false | ifThrow('in filter') }}{{ error | ifExists | select: <h1>FAIL! { it.Message }</h1> }}"' out _)' " is 143.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Can_throw_on_conditions_with_assignError,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ 'in filter' | throwIf(true' { assignError: 'ex' }) }}{{ ex | ifExists | select: <h1>FAIL! { it.Message }</h1> }}"' out _)' " is 162.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Can_throw_on_conditions_with_assignError,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ true | ifThrow('in filter'' { assignError: 'ex' }) }}{{ ex | ifExists | select: <h1>FAIL! { it.Message }</h1> }}"' out _)' " is 162.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Can_throw_on_conditions_with_assignError,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ 'in filter' | throwIf(false' { assignError: 'ex' }) }}{{ ex | ifExists | select: <h1>FAIL! { it.Message }</h1> }}"' out _)' " is 163.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Can_throw_on_conditions_with_assignError,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ false | ifThrow('in filter'' { assignError: 'ex' }) }}{{ ex | ifExists | select: <h1>FAIL! { it.Message }</h1> }}"' out _)' " is 163.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Can_throw_on_conditions_and_suppresses_with_catchError,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ 'in filter' | throwIf(true' { catchError: 'ex' }) }}{{ ex | ifExists | select: <h1>FAIL! { it.Message }</h1> }}")' " is 154.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Can_throw_on_conditions_and_suppresses_with_catchError,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ true | ifThrow('in filter'' { catchError: 'ex' }) }}{{ ex | ifExists | select: <h1>FAIL! { it.Message }</h1> }}")' " is 154.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Can_throw_on_conditions_and_suppresses_with_catchError,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ 'in filter' | throwIf(false' { catchError: 'ex' }) }}{{ ex | ifExists | select: <h1>FAIL! { it.Message }</h1> }}")' " is 155.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Can_throw_on_conditions_and_suppresses_with_catchError,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ false | ifThrow('in filter'' { catchError: 'ex' }) }}{{ ex | ifExists | select: <h1>FAIL! { it.Message }</h1> }}")' " is 155.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Can_throw_different_exception_types,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ true | ifThrowArgumentNullException('p') }}{{ ifError | select: <h1>{ it | typeName }! { it.Message }</h1> }}"' out _).NormalizeNewLines()' " is 179.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Can_throw_different_exception_types,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ true | ifThrowArgumentNullException('p'' { assignError: 'ex' }) }}{{ ex | ifExists | select: <h1>{ it | typeName }! { it.Message }</h1> }}"' out _).NormalizeNewLines()' " is 208.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Can_throw_different_exception_types,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ true | ifThrowArgumentException('bad arg'' 'p') }}{{ ifError | select: <h1>{ it | typeName }! { it.Message }</h1> }}"' out _).NormalizeNewLines()' " is 186.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Can_throw_different_exception_types,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ true | ifThrowArgumentException('bad arg'' 'p'' { assignError: 'ex' }) }}{{ ex | ifExists | select: <h1>{ it | typeName }! { it.Message }</h1> }}"' out _).NormalizeNewLines()' " is 215.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Calling_ensureAllArgsNotNull_throws_if_any_args_are_null,The length of the statement  "            context.VirtualFiles.WriteFile("page-arg.html"' @"{{ { arg }     | ensureAllArgsNotNull | select: { it.arg } }}{{ htmlError }}"); " is 129.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Calling_ensureAllArgsNotNull_throws_if_any_args_are_null,The length of the statement  "            context.VirtualFiles.WriteFile("page-empty.html"' @"{{ { empty } | ensureAllArgsNotNull | select: { it.empty } }}{{ htmlError }}"); " is 131.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Calling_ensureAllArgsNotNull_throws_if_any_args_are_null,The length of the statement  "            context.VirtualFiles.WriteFile("page-noarg.html"' @"{{ { noArg } | ensureAllArgsNotNull | select: { it.arg } }}{{ htmlError }}"); " is 129.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Calling_ensureAllArgsNotNull_throws_if_any_args_are_null,The length of the statement  "            context.VirtualFiles.WriteFile("page-msg.html"' @"{{ { noArg }   | ensureAllArgsNotNull({ message: '{0} required' }) | select: { it.arg } }}{{ htmlError }}"); " is 158.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Calling_ensureAllArgsNotEmpty_throws_if_any_args_are_empty,The length of the statement  "            context.VirtualFiles.WriteFile("page-arg.html"' @"{{ { arg }     | ensureAllArgsNotEmpty | select: { it.arg } }}{{ htmlError }}"); " is 130.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Calling_ensureAllArgsNotEmpty_throws_if_any_args_are_empty,The length of the statement  "            context.VirtualFiles.WriteFile("page-empty.html"' @"{{ { empty } | ensureAllArgsNotEmpty | select: { it.empty } }}{{ htmlError }}"); " is 132.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Calling_ensureAllArgsNotEmpty_throws_if_any_args_are_empty,The length of the statement  "            context.VirtualFiles.WriteFile("page-noarg.html"' @"{{ { noArg } | ensureAllArgsNotEmpty | select: { it.arg } }}{{ htmlError }}"); " is 130.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Calling_ensureAllArgsNotEmpty_throws_if_any_args_are_empty,The length of the statement  "            context.VirtualFiles.WriteFile("page-msg.html"' @"{{ { noArg }   | ensureAllArgsNotEmpty({ message: '{0} required' }) | select: { it.arg } }}{{ htmlError }}"); " is 159.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Calling_ensureAnyArgsNotNull_throws_if_all_args_are_null,The length of the statement  "            context.VirtualFiles.WriteFile("page-arg.html"' @"{{ { arg }          | ensureAnyArgsNotNull | select: { it.arg } }}{{ htmlError }}"); " is 134.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Calling_ensureAnyArgsNotNull_throws_if_all_args_are_null,The length of the statement  "            context.VirtualFiles.WriteFile("page-empty.html"' @"{{ { arg' noArg } | ensureAnyArgsNotNull | select: { it.arg } }}{{ htmlError }}"); " is 134.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Calling_ensureAnyArgsNotNull_throws_if_all_args_are_null,The length of the statement  "            context.VirtualFiles.WriteFile("page-noarg.html"' @"{{ { noArg }      | ensureAnyArgsNotNull | select: { it.arg } }}{{ htmlError }}"); " is 134.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Calling_ensureAnyArgsNotNull_throws_if_all_args_are_null,The length of the statement  "            context.VirtualFiles.WriteFile("page-msg.html"' @"{{ { noArg' empty } | ensureAnyArgsNotNull({ message: '{0} required' }) | select: { it.empty } }}{{ htmlError }}"); " is 165.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Calling_ensureAnyArgsNotEmpty_throws_if_all_args_are_empty,The length of the statement  "            context.VirtualFiles.WriteFile("page-arg.html"' @"{{ { arg }          | ensureAnyArgsNotEmpty | select: { it.arg } }}{{ htmlError }}"); " is 135.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Calling_ensureAnyArgsNotEmpty_throws_if_all_args_are_empty,The length of the statement  "            context.VirtualFiles.WriteFile("page-empty.html"' @"{{ { arg' noArg } | ensureAnyArgsNotEmpty | select: { it.arg } }}{{ htmlError }}"); " is 135.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Calling_ensureAnyArgsNotEmpty_throws_if_all_args_are_empty,The length of the statement  "            context.VirtualFiles.WriteFile("page-noarg.html"' @"{{ { noArg }      | ensureAnyArgsNotEmpty | select: { it.arg } }}{{ htmlError }}"); " is 135.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ErrorHandlingTests.cs,Calling_ensureAnyArgsNotEmpty_throws_if_all_args_are_empty,The length of the statement  "            context.VirtualFiles.WriteFile("page-msg.html"' @"{{ { noArg' empty } | ensureAnyArgsNotEmpty({ message: '{0} required' }) | select: { it.empty } }}{{ htmlError }}"); " is 166.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsArrowFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsArrowFunctionTests.cs,Does_evaluate_shorthand_Arrow_Expressions,The length of the statement  "            Assert.That(context.EvaluateScript("{{ [1'2'3] | map => it * it | assignTo => values }}{{ values | sum }}")'  Is.EqualTo("14")); " is 128.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsArrowFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsArrowFunctionTests.cs,Does_evaluate_shorthand_Arrow_Expressions,The length of the statement  "            Assert.That(context.EvaluateScript("{{ ['A'''B'''C'] | map => lower(it) | map => `${it}` | join('') }}")'  Is.EqualTo("abc")); " is 126.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsArrowFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsArrowFunctionTests.cs,Does_evaluate_shorthand_Arrow_Expressions,The length of the statement  "            Assert.That(context.EvaluateScript("{{ ['A'''B'''C'] | map => lower(it) | map => `${it}` | concat }}")'  Is.EqualTo("abc")); " is 124.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsArrowFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsArrowFunctionTests.cs,Does_evaluate_toDictionary_Arrow_Expressions,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ [{name:'Alice''score:50}'{name:'Bob''score:40}'{name:'Cathy''score:45}] | assignTo=>scoreRecords }} " is 139.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsArrowFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsArrowFunctionTests.cs,Does_evaluate_groupBy_Arrow_Expressions,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ ['from   '' ' salt'' ' earn '' '  last   '' ' near '' ' form  '] | assignTo: anagrams }} " is 128.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsMemberCallExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsMemberCallExpressionTests.cs,Can_call_methods_with_multiple_args,The length of the statement  "            Assert.That(context.EvaluateScript("{{ 'fmt {0} {1} {2}'.fmt('a''2.add(2)'a.Int.add(two).add(two)) }}")' Is.EqualTo("fmt a 4 6")); " is 130.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsMemberCallExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsMemberCallExpressionTests.cs,Can_call_methods_with_spread_args,The length of the statement  "            Assert.That(context.EvaluateScript("{{ 'fmt {0} {1} {2}'.fmt(...['a''2.add(2)'a.Int.add(two).add(two)]) }}")' Is.EqualTo("fmt a 4 6")); " is 135.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsMemberCallExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsMemberCallExpressionTests.cs,Can_call_methods_with_arrow_expression_args,The length of the statement  "            Assert.That(context.EvaluateScript("{{ 'ABC'.repeat(3).count().divide(3).times().map(x => x + 2) | join }}")' Is.EqualTo("2'3'4")); " is 131.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsMemberCallExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsMemberCallExpressionTests.cs,Can_call_methods_with_arrow_expression_args,The length of the statement  "            Assert.That(context.EvaluateScript("{{ 3.times().map(x => x[x.isEven() ? 'decr' : 'incr']()) | join }}")' Is.EqualTo("-1'2'1")); " is 128.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsonTests.cs,Can_parse_escaped_json,The length of the statement  "            var json = "{\"content\": \"warn(\\n          false'\\n          \\\"props in \\\\\\\"\\\" + (route.path) + \\\"\\\\\\\" is a \\\" + (typeof config) + \\\"' \\\" +\\n          \\\"expecting an object' function or boolean.\\\"\\n        );\"}"; " is 243.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,AppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\PageBasedRoutingTests.cs,Configure,The length of the statement  "{{ 'category'orderBy'take' | importRequestParams }}{{ { category' orderBy' take } | withoutNullValues | sendToAutoQuery('QueryProducts')  " is 136.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,AppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\PageBasedRoutingTests.cs,Configure,The length of the statement  "{{ 'id'firstName'lastName'age' | importRequestParams }}{{ { id' firstName' lastName' age } | ensureAllArgsNotNull | publishToGateway('AddRockstarTemplate') }} " is 158.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ProtectedScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ProtectedScriptsTests.cs,Can_use_includeUrl,The length of the statement  "                "{{ baseUrl | addPath('includeUrl-model') | addQueryString({ id:1' name:'foo'}) | includeUrl({ accept: 'application/json' }) }}")).Result; " is 138.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ProtectedScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ProtectedScriptsTests.cs,Can_use_includeUrl,The length of the statement  "                "{{ baseUrl | addPath('includeUrl-model') | addQueryString({ id:1' name:'foo'}) | includeUrl({ dataType: 'json' }) }}")).Result; " is 128.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ProtectedScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ProtectedScriptsTests.cs,Can_use_includeUrl,The length of the statement  "                "{{ baseUrl | addPath('includeUrl-model') | includeUrl({ method:'POST'' data: { id: 1' name: 'foo' }' accept: 'application/jsv' }) }}")).Result; " is 144.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ProtectedScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ProtectedScriptsTests.cs,Can_use_includeUrl,The length of the statement  "                "{{ baseUrl | addPath('includeUrl-model') | includeUrl({ method:'POST'' data: { id: 1' name: 'foo' }' accept: 'application/json'' contentType: 'application/json' }) }}")).Result; " is 178.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ProtectedScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ProtectedScriptsTests.cs,Can_use_includeUrl,The length of the statement  "                "{{ baseUrl | addPath('includeUrl-model') | includeUrl({ method:'POST'' data: { id: 1' name: 'foo' }' dataType: 'json' }) }}")).Result; " is 135.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ProtectedScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ProtectedScriptsTests.cs,Can_use_includeUrl,The length of the statement  "                "{{ baseUrl | addPath('includeUrl-model') | includeUrl({ method:'POST'' data: { id: 1' name: 'foo' }' dataType: 'jsv' }) }}")).Result; " is 134.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ProtectedScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ProtectedScriptsTests.cs,Can_use_includeUrl,The length of the statement  "                "{{ baseUrl | addPath('includeUrl-models') | includeUrl({ method:'POST'' data: [{ id: 1' name: 'foo' }' { id: 2' name: 'bar' }]' contentType:'application/json'' accept: 'application/jsv' }) }}")).Result; " is 203.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ProtectedScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ProtectedScriptsTests.cs,Can_use_includeUrl,The length of the statement  "                "{{ baseUrl | addPath('includeUrl-models') | includeUrl({ method:'POST'' data: [{ id: 1' name: 'foo' }' { id: 2' name: 'bar' }]' contentType:'application/jsv'' accept: 'text/csv' }) }}")).Result.NormalizeNewLines(); " is 215.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ProtectedScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ProtectedScriptsTests.cs,Can_use_includeUrl,The length of the statement  "                "{{ baseUrl | addPath('includeUrl-models') | includeUrl({ method:'POST'' data: [{ id: 1' name: 'foo' }' { id: 2' name: 'bar' }]' dataType:'csv' }) }}")).Result.NormalizeNewLines(); " is 180.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ProtectedScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ProtectedScriptsTests.cs,Can_cache_contents_with_includeUrlWithCache_and_includeFileWithCache,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'page.txt' | includeFileWithCache }}")).Result' Is.EqualTo("Original Content")); " is 131.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ProtectedScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ProtectedScriptsTests.cs,Can_cache_contents_with_includeUrlWithCache_and_includeFileWithCache,The length of the statement  "            var urlWithCache1Sec = context.OneTimePage("{{ baseUrl | addPath('includeUrl-time') | includeUrlWithCache({ expireInSecs: 1 }) }}"); " is 132.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryLinqPipelineOperatorTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqPipelineOperatorTests.cs,Linq11,The length of the statement  "{{ products |> select: { it.ProductName |> raw } is in the category { it.Category } and costs { it.UnitPrice |> currency } per unit.\n }} " is 137.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryLinqPipelineOperatorTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqPipelineOperatorTests.cs,Linq69,The length of the statement  "[{ProductId:3'ProductName:Aniseed Syrup'Category:Condiments'UnitPrice:10'UnitsInStock:13}'{ProductId:4'ProductName:Chef Anton's Cajun Seasoning'Category:Condiments'UnitPrice:22'UnitsInStock:53} " is 193.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryLinqPipelineOperatorTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqPipelineOperatorTests.cs,Linq72,The length of the statement  "[{ProductId:1'ProductName:Chai'Category:Beverages'UnitPrice:18'UnitsInStock:39}'{ProductId:2'ProductName:Chang'Category:Beverages'UnitPrice:19'UnitsInStock:17} " is 159.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryFilterTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqTests.cs,Linq11,The length of the statement  "{{ products | select: { it.ProductName | raw } is in the category { it.Category } and costs { it.UnitPrice | currency } per unit.\n }} " is 134.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryFilterTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqTests.cs,Linq69,The length of the statement  "[{ProductId:3'ProductName:Aniseed Syrup'Category:Condiments'UnitPrice:10'UnitsInStock:13}'{ProductId:4'ProductName:Chef Anton's Cajun Seasoning'Category:Condiments'UnitPrice:22'UnitsInStock:53} " is 193.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryFilterTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqTests.cs,Linq72,The length of the statement  "[{ProductId:1'ProductName:Chai'Category:Beverages'UnitPrice:18'UnitsInStock:39}'{ProductId:2'ProductName:Chang'Category:Beverages'UnitPrice:19'UnitsInStock:17} " is 159.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptAssembliesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptAssembliesTests.cs,typeof_returns_correct_types,The length of the statement  "            Assert.That(context.Evaluate<Type>("{{ typeof('Dictionary<string'int>') | return}}")' Is.EqualTo(typeof(Dictionary<string'int>))); " is 130.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptAssembliesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptAssembliesTests.cs,typeof_returns_correct_types,The length of the statement  "            Assert.That(context.Evaluate<Type>("{{ typeof('Dictionary<String'Int32>') | return}}")' Is.EqualTo(typeof(Dictionary<string'int>))); " is 132.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptAssembliesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptAssembliesTests.cs,typeof_returns_correct_types,The length of the statement  "            Assert.That(context.Evaluate<Type>("{{ typeof('Dictionary<String'ServiceStack.WebHost.Endpoints.Tests.ScriptTests.Ints>') | return}}")' Is.EqualTo(typeof(Dictionary<string'Ints>))); " is 181.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptAssembliesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptAssembliesTests.cs,typeof_returns_correct_types,The length of the statement  "            Assert.That(context.Evaluate<Type>("{{ typeof('StaticLog+Inner1+Inner2') | return}}")' Is.EqualTo(typeof(StaticLog.Inner1.Inner2))); " is 132.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptAssembliesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptAssembliesTests.cs,typeof_returns_correct_types,The length of the statement  "            Assert.That(context.Evaluate<Type>("{{ typeof('StaticLog.Inner1.Inner2') | return}}")' Is.EqualTo(typeof(StaticLog.Inner1.Inner2))); " is 132.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptAssembliesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptAssembliesTests.cs,typeof_returns_correct_types,The length of the statement  "            Assert.That(context.Evaluate<Type>("{{ typeof('Dictionary<String' System.Int32>[]') | return}}")' Is.EqualTo(typeof(Dictionary<String' System.Int32>[]))); " is 154.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptAssembliesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptAssembliesTests.cs,Can_call_ambiguous_methods,The length of the statement  "            result = context.Evaluate("{{ Constructor('Adder(string)')(1) | to => o }}{{ Function('Adder.Add(string)') | to => adder }}{{ o.adder(1) | return }}"); " is 151.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptAssembliesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptAssembliesTests.cs,Can_call_ambiguous_methods,The length of the statement  "            result = context.Evaluate("{{ Constructor('Adder(double)')(1) | to => o }}{{ Function('Adder.Add(double)') | to => adder }}{{ o.adder(1) | return }}"); " is 151.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptAssembliesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptAssembliesTests.cs,Can_create_Type_from_registered_Script_Assembly_from_Constructor_ObjectActivator,The length of the statement  "                @"{{ Constructor('Tuple<string'int>(System.String'System.Int32)') | to => tuple }}{{ tuple('A''1) | to => pair }}{{ `${pair.Item1}=${pair.Item2}` | return }}"); " is 160.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptAssembliesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptAssembliesTests.cs,Can_create_Type_from_registered_Script_Assembly_from_Constructor_ObjectActivator,The length of the statement  "                @"{{ Constructor('System.Collections.Generic.KeyValuePair<string'int>(System.String'System.Int32)')('A''1) | to => kvp }}{{ `${kvp.Key}=${kvp.Value}` | return }}"); " is 164.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptAssembliesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptAssembliesTests.cs,Can_create_Type_from_registered_Script_Assembly_from_Constructor_ObjectActivator,The length of the statement  "                @"{{ Constructor('System.Collections.Generic.KeyValuePair<char'double>(char'double)')('A''1) | to => kvp }}{{ `${kvp.Key}=${kvp.Value}` | return }}"); " is 150.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockHtmlTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockHtmlTests.cs,Does_evaluate_ul_html_block,The length of the statement  "            Assert.That(context.EvaluateScript("{{#ul {each:letters' class:'nav'' id:'menu'} }}<li>{{it}}</li>{{/ul}}").RemoveNewLines()'  " is 125.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_parse_template_with_if_and_else_if_statement,The length of the statement  "            var fragments = ScriptTemplateUtils.ParseTemplate("BEFORE {{#if a < b}}YES{{else if c < d}}NO{{else}}MAYBE{{/if}} AFTER"); " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_Raw_block_body_as_string,The length of the statement  "            Assert.That(context.EvaluateScript("BEFORE {{#raw md}}# Heading{{/raw}} AFTER {{ md | markdown }}").NormalizeNewLines()' " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_Raw_block_body_and_appendTo_string,The length of the statement  "            Assert.That(context.EvaluateScript("BEFORE {{#raw appendTo md}}# Heading{{/raw}}{{#raw appendTo md}} Appended{{/raw}} AFTER {{ md | markdown }}").NormalizeNewLines()' " is 166.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_containing_with_and_else_block,The length of the statement  "            Assert.That(context.EvaluateScript("Person {{#with person}}{{Name}} is {{Age}} years old{{else}}does not exist{{/with}}")'  " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_containing_with_and_else_block,The length of the statement  "            Assert.That(context.EvaluateScript("Person {{#with null}}{{Name}} is {{Age}} years old{{else}}does not exist{{/with}}")'  " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_containing_with_and_else_block,The length of the statement  "            Assert.That(context.EvaluateScript("Person {{#with person}}{{Name}} is {{Age}} years old{{else if personMap != null}}map does exist{{else}}does not exist{{/with}}")'  " is 165.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_simple_each_blocks,The length of the statement  "            Assert.That(context.EvaluateScript("{{#each numbers}}{{#if isNumber(it)}}number {{it}} {{else}}letter {{it}} {{/if}}{{/each}}")'  " is 128.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_simple_each_blocks,The length of the statement  "            Assert.That(context.EvaluateScript("{{#each letters}}{{#if isNumber(it)}}number {{it}} {{else}}letter {{it}} {{/if}}{{/each}}")'  " is 128.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_blocks,The length of the statement  "            Assert.That(context.EvaluateScript("{{#each numbers}}{{#if isNumber(it)}}number {{it}} {{else}}letter {{it}} {{/if}}{{/each}}")'  " is 128.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_blocks,The length of the statement  "            Assert.That(context.EvaluateScript("{{#each letters}}{{#if isNumber(it)}}number {{it}} {{else}}letter {{it}} {{/if}}{{/each}}")'  " is 128.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_else_blocks,The length of the statement  "            Assert.That(context.EvaluateScript("{{#each numbers}}{{it}} {{else if !isEmpty(letters)}}has letters{{else}}no numbers{{/each}}")'  " is 130.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_else_blocks,The length of the statement  "            Assert.That(context.EvaluateScript("{{#each numbers}}{{it}} {{else if !isEmpty([])}}has letters{{else}}no numbers{{/each}}")'  " is 125.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_where_blocks,The length of the statement  "            Assert.That(context.EvaluateScript("{{#each people where Name = 'name2' and Age = 2 }}#{{index}} {{Name}}' {{Age}}{{/each}}")'  " is 126.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_where_blocks,The length of the statement  "            Assert.That(context.EvaluateScript("{{#each p in people where p.Name == 'name2' }}#{{index}} {{p.Name}}' {{p.Age}}{{/each}}")'  " is 126.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_blocks_containing_LINQ_expressions,The length of the statement  "                    ["people"] = new[]{ new Person("name3"' 3)'new Person("name2"' 4)'new Person("name1"' 5)'new Person("name5"' 1)'new Person("name4"' 2) }' " is 137.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_blocks_containing_LINQ_expressions,The length of the statement  "            Assert.That(context.EvaluateScript("{{#each numbers where isOdd(it) orderby it descending}}#{{index}} {{it}}' {{/each}}")'  " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_blocks_containing_LINQ_expressions,The length of the statement  "            Assert.That(context.EvaluateScript("{{#each numbers where it % 2 == 1 orderby it skip 1}}#{{index}} {{it}}' {{/each}}")'  " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_blocks_containing_LINQ_expressions,The length of the statement  "            Assert.That(context.EvaluateScript("{{#each numbers where it % 2 == 1 orderby it take 2}}#{{index}} {{it}}' {{/each}}")'  " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_blocks_containing_LINQ_expressions,The length of the statement  "            Assert.That(context.EvaluateScript("{{#each numbers where it % 2 == 1 orderby it skip 1 take 1}}#{{index}} {{it}}' {{/each}}")'  " is 127.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_blocks_containing_LINQ_expressions,The length of the statement  "            Assert.That(context.EvaluateScript("{{#each letters where it > 'A' orderby it skip 1 take 2}}#{{index}} {{it}}' {{/each}}")'  " is 124.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_blocks_containing_LINQ_expressions,The length of the statement  "            Assert.That(context.EvaluateScript("{{#each letters where index > 0 orderby it skip 1 take 2}}#{{index}} {{it}}' {{/each}}")'  " is 125.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_blocks_containing_LINQ_expressions,The length of the statement  "            Assert.That(context.EvaluateScript("{{#each people where Name > 'name2' orderby Age take 2}}#{{index}} {{Name}}' {{Age}} {{/each}}")'  " is 133.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_blocks_containing_LINQ_expressions,The length of the statement  "            Assert.That(context.EvaluateScript("{{#each p in people where p.Name > 'name2' orderby p.Age take 2}}#{{index}} {{p.Name}}' {{p.Age}} {{/each}}")'  " is 146.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_blocks_containing_LINQ_expressions,The length of the statement  "            Assert.That(context.EvaluateScript("{{#each p in people where p.Name > 'name2' orderby p.Age descending skip 1 take 2}}#{{index}} {{p.Name}}' {{p.Age}} {{/each}}")'  " is 164.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_in_blocks,The length of the statement  "            Assert.That(context.EvaluateScript("{{#each num in numbers}}{{#if isNumber(num)}}number {{num}} {{else}}letter {{num}} {{/if}}{{/each}}")'  " is 138.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_in_blocks,The length of the statement  "            Assert.That(context.EvaluateScript("{{#each c in letters}}{{#if isNumber(c)}}number {{c}} {{else}}letter {{c}} {{/if}}{{/each}}")'  " is 130.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Can_capture_output_with_capture_block,The length of the statement  "            Assert.That(context.EvaluateScript("{{#capture output}}{{#each nums}} {{it}}{{/each}}{{/capture}}BEFORE{{output}} AFTER")'  " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Can_capture_output_with_capture_block,The length of the statement  "            Assert.That(context.EvaluateScript("{{#capture output {nums:[4'5'6] }}{{#each nums}} {{it}}{{/each}}{{/capture}}BEFORE{{output}} AFTER")'  " is 137.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Can_capture_and_appendTo_output_with_capture_block,The length of the statement  "            Assert.That(context.EvaluateScript("{{#capture appendTo output}} INIT{{/capture}}{{#capture appendTo output}}{{#each nums}} {{it}}{{/each}}{{/capture}}BEFORE{{output}} AFTER")'  " is 176.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Can_capture_and_appendTo_output_with_capture_block,The length of the statement  "            Assert.That(context.EvaluateScript("{{#capture appendTo output}} INIT{{/capture}}{{#capture appendTo output {nums:[4'5'6] }}{{#each nums}} {{it}}{{/each}}{{/capture}}BEFORE{{output}} AFTER")'  " is 191.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_partial_in_existing_Context,The length of the statement  "            Assert.That(context.EvaluateScript("{{#partial p {expenses:100} }} {{income ?? 2000}} - {{expenses}} {{/partial}}{{ 'p' | partial}}")'  " is 134.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_eval_block_in_existing_Context_with_use_context,The length of the statement  "            Assert.That(context.EvaluateScript("{{#eval {use:{context:true}'expenses:100} }} {{incomeExpr}} - {{expenses}} {{/eval}}")'  " is 123.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_eval_block_in_existing_Context_with_use_context,The length of the statement  "            Assert.That(context.EvaluateScript("{{ ` ${incomeExpr} - ${expenseExpr} ` | evalTemplate({use:{context:true}'expenses:100}) }}")'  " is 129.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Can_eval_dynamic_content,The length of the statement  "            var result = context.EvaluateScript(@"{{#each templates}}{{index}} =>{{#eval {expenses: 100 * index} }} {{it}} {{/eval}}| {{/each}}"); " is 134.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Can_eval_dynamic_content,The length of the statement  "            result = context.EvaluateScript(@"{{#each templates}}{{index}} =>{{ ` ${it} ` | evalTemplate({expenses: 100 * index}) }}| {{/each}}"); " is 134.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Can_use_minifyjs_script_block,The length of the statement  "            output = context.EvaluateScript("{{#minifyjs appendTo scripts}}var a = 1; var b = 2;{{/minifyjs}} | {{#minifyjs appendTo scripts}}function fn ( a ) { }{{/minifyjs}} | {{scripts}}"); " is 181.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Can_use_minifycss_script_block,The length of the statement  "            output = context.EvaluateScript("{{#minifycss appendTo css}} a { width: 1px; } {{/minifycss}} | {{#minifycss appendTo css}} b { height: 1px; } {{/minifycss}} | {{css}}"); " is 170.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Can_use_minifyhtml_script_block,The length of the statement  "            output = context.EvaluateScript("{{#minifyhtml appendTo html}} <h1 >  Title  </h1> {{/minifyhtml}} | {{#minifyhtml appendTo html}} <p >  Content  </p> {{/minifyhtml}} | {{html | raw}}"); " is 186.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Can_use_minifyjs_script_block_with_cache,The length of the statement  "            output = context.EvaluateScript("{{#minifyjs appendTo scripts}}" + js + "{{/minifyjs}} | {{#minifyjs appendTo scripts}}" + js2 + "{{/minifyjs}} | {{scripts}}"); " is 160.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Can_use_minifyjs_script_block_with_cache,The length of the statement  "            output = context.EvaluateScript("{{#minifyjs appendTo scripts}}" + js + "{{/minifyjs}} | {{#minifyjs appendTo scripts}}" + js2 + "{{/minifyjs}} | {{scripts}}"); " is 160.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptCodeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptCodeTests.cs,Can_parse_code_statements_with_blocks,The length of the statement  "            Assert.That(ParseCode("#if true \n \n #if a > b \n \n 1 \n \n else \n \n 2 \n \n /if \n \n else \n \n '3' \n \n /if \n \n ")' Is.EqualTo(expr)); " is 144.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptCodeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptCodeTests.cs,Can_Evaluate_code,The length of the statement  "    return (a > 2 ? (a.isOdd() ? `${a} > 2 and odd`  : `${a} > 2 and even`) : (a.isOdd() ? `${a} <= 2 and odd` : `${a} <= 2 and even`))  " is 131.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptCodeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptCodeTests.cs,Can_execute_existing_Script_Blocks_in_Code_Statements_in_Code_Syntax,The length of the statement  "            Assert.That(context.RenderCode(code.Trim()).RemoveNewLines()' Is.EqualTo(@"# Title{{ - List Item }}".RemoveNewLines())); " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptCodeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptCodeTests.cs,Can_execute_existing_Script_Blocks_in_Code_Statements_in_Code_Syntax_only_LF,The length of the statement  "            Assert.That(context.RenderCode(code.Trim()).RemoveNewLines()' Is.EqualTo(@"# Title{{ - List Item }}".RemoveNewLines())); " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptHtmlFilterTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptHtmlFilterTests.cs,Can_render_simple_table,The length of the statement  "            Assert.That(context.EvaluateScript(@"{{ rockstars | htmlDump({ className: ""table table-striped""' caption: ""Rockstars"" }) }}")'  " is 130.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptHtmlFilterTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptHtmlFilterTests.cs,Can_render_simple_table,The length of the statement  "                Is.EqualTo(@"<table class=""table table-striped""><caption>Rockstars</caption><thead><tr><th>First Name</th><th>Age</th></tr></thead><tbody><tr><td>Kurt</td><td>27</td></tr><tr><td>Jimi</td><td>27</td></tr></tbody></table>")); " is 226.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptHtmlFilterTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptHtmlFilterTests.cs,Can_render_complex_object_graph_with_htmldump,The length of the statement  "            context.EvaluateScript("{{ customers | first | property('Orders') | get(0) | property('OrderDate') | htmlDump(htmlOptions) }}").Print(); " is 136.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptHtmlFilterTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptHtmlFilterTests.cs,Can_execute_custom_html_tags_with_primary_content_usage,The length of the statement  "            Assert.That(context.EvaluateScript("{{ 'http://example.org' | htmlLink }}")' Is.EqualTo("<a href=\"http://example.org\">http://example.org</a>")); " is 146.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptHtmlFilterTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptHtmlFilterTests.cs,Can_execute_custom_html_tags_with_primary_content_usage,The length of the statement  "            Assert.That(context.EvaluateScript("{{ 'http://example.org' | htmlLink({ text:'link' }) }}")' Is.EqualTo("<a href=\"http://example.org\">link</a>")); " is 149.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptHtmlFilterTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptHtmlFilterTests.cs,Can_execute_custom_html_tags_with_primary_content_usage,The length of the statement  "            Assert.That(context.EvaluateScript("{{ 'logo.png' | htmlImage({ alt:'alt text' }) }}")' Is.EqualTo("<img alt=\"alt text\" src=\"logo.png\">")); " is 143.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptHtmlFilterTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptHtmlFilterTests.cs,Can_execute_htmlTag_filters,The length of the statement  "            Assert.That(context.EvaluateScript("{{ '<h1>title</h1>' | htmlA({ href:'#' }) }}")' Is.EqualTo("<a href=\"#\"><h1>title</h1></a>")); " is 132.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptHtmlFilterTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptHtmlFilterTests.cs,Can_execute_htmlTag_filters,The length of the statement  "            Assert.That(context.EvaluateScript("{{ { src:'logo.png'' alt:'alt text' } | htmlImg }}")' Is.EqualTo("<img alt=\"alt text\" src=\"logo.png\">")); " is 145.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptHtmlFilterTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptHtmlFilterTests.cs,htmlTag_filters_does_convert_reserved_js_keywords,The length of the statement  "            Assert.That(context.EvaluateScript("{{ '<h1>title</h1>' | htmlA({ href:'#'' className:'cls' }) }}")' Is.EqualTo("<a class=\"cls\" href=\"#\"><h1>title</h1></a>")); " is 163.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptHtmlFilterTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptHtmlFilterTests.cs,htmlTag_filters_does_convert_reserved_js_keywords,The length of the statement  "            Assert.That(context.EvaluateScript("{{ { src:'logo.png'' alt:'alt text'' className:'cls' } | htmlImg }}")' Is.EqualTo("<img alt=\"alt text\" class=\"cls\" src=\"logo.png\">")); " is 176.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptHtmlFilterTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptHtmlFilterTests.cs,htmlTag_filters_does_convert_reserved_js_keywords,The length of the statement  "            Assert.That(context.EvaluateScript("{{ 'text' | htmlLabel({ htmlFor:'id' }) }}")' Is.EqualTo("<label for=\"id\">text</label>")); " is 128.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptHtmlFilterTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptHtmlFilterTests.cs,Can_send_text_content_to_html_tags_primarily_used_with_text,The length of the statement  "            Assert.That(context.EvaluateScript("{{ 'text' | htmlOption({ value:'val' }) }}")' Is.EqualTo("<option value=\"val\">text</option>")); " is 133.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptHtmlFilterTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptHtmlFilterTests.cs,Can_send_text_content_to_html_tags_primarily_used_with_text,The length of the statement  "            Assert.That(context.EvaluateScript("{{ ['A'''B'''C'] | map('htmlOption(it)') | join('') | htmlSelect({ name:'sel' }) }}")'  " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptHtmlFilterTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptHtmlFilterTests.cs,Can_generate_html_with_bindings,The length of the statement  "            Assert.That(context.EvaluateScript("{{ ['A'''B'''C'] | map('htmlOption(it' { value: it })') | join('') | htmlSelect({ name:'sel' }) }}")'  " is 137.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptHtmlFilterTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptHtmlFilterTests.cs,Can_generate_html_with_bindings,The length of the statement  "                Is.EqualTo("<select name=\"sel\"><option value=\"A\">A</option><option value=\"B\">B</option><option value=\"C\">C</option></select>")); " is 136.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptHtmlFilterTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptHtmlFilterTests.cs,Can_generate_html_with_bindings,The length of the statement  "            Assert.That(context.EvaluateScript("{{ ['A'''B'''C'] | map('htmlOption(it' { value: it })') | join('') | htmlSelect({ name:'sel' }) }}")'  " is 137.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptHtmlFilterTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptHtmlFilterTests.cs,Can_generate_html_with_bindings,The length of the statement  "                Is.EqualTo("<select name=\"sel\"><option value=\"A\">A</option><option value=\"B\">B</option><option value=\"C\">C</option></select>")); " is 136.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_filter,The length of the statement  "            Assert.That(eval(@"(filter #(<= % 3) [-5 -4 -1 -3 -9 -8 -6 -7 -2 -0])")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 })); " is 134.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_filter,The length of the statement  "            Assert.That(eval(@"(filter #(<= % 3) (to-cons (map #(- %) [5 4 1 3 9 8 6 7 2 0])))")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 })); " is 147.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_where,The length of the statement  "            Assert.That(eval(@"(where #(<= % 3) [-5 -4 -1 -3 -9 -8 -6 -7 -2 -0])")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 })); " is 133.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_where,The length of the statement  "            Assert.That(eval(@"(where #(<= % 3) (to-cons (map #(- %) [5 4 1 3 9 8 6 7 2 0])))")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 })); " is 146.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_flatten,The length of the statement  "            Assert.That(reval(@"(flatten ['A' 'B' ['C' 'D'] 'E' ['F' ['G' ['H' 'I']]]])")' Is.EqualTo(new[]{ "A"' "B"' "C"' "D"' "E"' "F"' "G"' "H"' "I" })); " is 145.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_flatten,The length of the statement  "            Assert.That(reval(@"(flatten (to-list ['A' 'B' ['C' 'D'] 'E' ['F' ['G' ['H' 'I']]]]))")' Is.EqualTo(new[]{ "A"' "B"' "C"' "D"' "E"' "F"' "G"' "H"' "I"  })); " is 156.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,Can_load_parse_rss_and_evaluate_rss_feed,The length of the statement  "            var result = context.EvaluateLisp(@"(load ""index:parse-rss"")(return (parse-rss (/urlContents ""https://news.ycombinator.com/rss"")))"); " is 137.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LoadLispTests,The length of the statement  "                @"(load ""https://gist.githubusercontent.com/gistlyn/2f14d629ba1852ee55865607f1fa2c3e/raw/95cbc5d071d9db3a96866c1a583056dd87ab5f69/lib1.l"")(return (lib-calc 4 5))"); " is 166.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,Can_load_src,The length of the statement  "            result = eval(@"(load-src ""https://gist.githubusercontent.com/gistlyn/2f14d629ba1852ee55865607f1fa2c3e/raw/95cbc5d071d9db3a96866c1a583056dd87ab5f69/lib1.l"")"); " is 161.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq42,The length of the statement  "{category:Beverages'products:[{ProductId:1'ProductName:Chai'Category:Beverages'UnitPrice:18'UnitsInStock:39}'{ProductId:2'ProductName:Chang'Category:Beverages'UnitPrice:19'UnitsInStock:17}'{ProductId:24'ProductName:Guaraná Fantástica'Category:Beverages'UnitPrice:4.5'UnitsInStock:20}'{ProductId:34'ProductName:Sasquatch Ale'Category:Beverages'UnitPrice:14'UnitsInStock:111}'{ProductId:35'ProductName:Steeleye Stout'Category:Beverages'UnitPrice:18'UnitsInStock:20}'{ProductId:38'ProductName:Côte de Blaye'Category:Beverages'UnitPrice:263.5'UnitsInStock:17}'{ProductId:39'ProductName:Chartreuse verte'Category:Beverages'UnitPrice:18'UnitsInStock:69}'{ProductId:43'ProductName:Ipoh Coffee'Category:Beverages'UnitPrice:46'UnitsInStock:17}'{ProductId:67'ProductName:Laughing Lumberjack Lager'Category:Beverages'UnitPrice:14'UnitsInStock:52}'{ProductId:70'ProductName:Outback Lager'Category:Beverages'UnitPrice:15'UnitsInStock:15}'{ProductId:75'ProductName:Rhönbräu Klosterbier'Category:Beverages'UnitPrice:7.75'UnitsInStock:125}'{ProductId:76'ProductName:Lakkalikööri'Category:Beverages'UnitPrice:18'UnitsInStock:57}]} " is 1113.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq42,The length of the statement  "{category:Beverages'products:[{UnitsInStock:39'ProductName:Chai'UnitPrice:18'Category:Beverages'ProductId:1}'{UnitsInStock:17'ProductName:Chang'UnitPrice:19'Category:Beverages'ProductId:2}'{UnitsInStock:20'ProductName:Guaraná Fantástica'UnitPrice:4.5'Category:Beverages'ProductId:24}'{UnitsInStock:111'ProductName:Sasquatch Ale'UnitPrice:14'Category:Beverages'ProductId:34}'{UnitsInStock:20'ProductName:Steeleye Stout'UnitPrice:18'Category:Beverages'ProductId:35}'{UnitsInStock:17'ProductName:Côte de Blaye'UnitPrice:263.5'Category:Beverages'ProductId:38}'{UnitsInStock:69'ProductName:Chartreuse verte'UnitPrice:18'Category:Beverages'ProductId:39}'{UnitsInStock:17'ProductName:Ipoh Coffee'UnitPrice:46'Category:Beverages'ProductId:43}'{UnitsInStock:52'ProductName:Laughing Lumberjack Lager'UnitPrice:14'Category:Beverages'ProductId:67}'{UnitsInStock:15'ProductName:Outback Lager'UnitPrice:15'Category:Beverages'ProductId:70}'{UnitsInStock:125'ProductName:Rhönbräu Klosterbier'UnitPrice:7.75'Category:Beverages'ProductId:75}'{UnitsInStock:57'ProductName:Lakkalikööri'UnitPrice:18'Category:Beverages'ProductId:76}]} " is 1113.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq84,The length of the statement  "{category:Beverages'cheapest-products:[{ProductId:24'ProductName:Guaraná Fantástica'Category:Beverages'UnitPrice:4.5'UnitsInStock:20}]} " is 135.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq84,The length of the statement  "{category:Condiments'cheapest-products:[{ProductId:3'ProductName:Aniseed Syrup'Category:Condiments'UnitPrice:10'UnitsInStock:13}]} " is 130.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq84,The length of the statement  "{category:Produce'cheapest-products:[{ProductId:74'ProductName:Longlife Tofu'Category:Produce'UnitPrice:10'UnitsInStock:4}]} " is 124.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq84,The length of the statement  "{category:Meat/Poultry'cheapest-products:[{ProductId:54'ProductName:Tourtière'Category:Meat/Poultry'UnitPrice:7.45'UnitsInStock:21}]} " is 133.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq84,The length of the statement  "{category:Dairy Products'cheapest-products:[{ProductId:33'ProductName:Geitost'Category:Dairy Products'UnitPrice:2.5'UnitsInStock:112}]} " is 135.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq84,The length of the statement  "{category:Confections'cheapest-products:[{ProductId:19'ProductName:Teatime Chocolate Biscuits'Category:Confections'UnitPrice:9.2'UnitsInStock:25}]} " is 147.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq84,The length of the statement  "{category:Grains/Cereals'cheapest-products:[{ProductId:52'ProductName:Filo Mix'Category:Grains/Cereals'UnitPrice:7'UnitsInStock:38}]} " is 133.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq84,The length of the statement  "{category:Beverages'cheapest-products:[{UnitsInStock:20'ProductName:Guaraná Fantástica'UnitPrice:4.5'Category:Beverages'ProductId:24}]} " is 135.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq84,The length of the statement  "{category:Condiments'cheapest-products:[{UnitsInStock:13'ProductName:Aniseed Syrup'UnitPrice:10'Category:Condiments'ProductId:3}]} " is 130.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq84,The length of the statement  "{category:Produce'cheapest-products:[{UnitsInStock:4'ProductName:Longlife Tofu'UnitPrice:10'Category:Produce'ProductId:74}]} " is 124.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq84,The length of the statement  "{category:Meat/Poultry'cheapest-products:[{UnitsInStock:21'ProductName:Tourtière'UnitPrice:7.45'Category:Meat/Poultry'ProductId:54}]} " is 133.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq84,The length of the statement  "{category:Dairy Products'cheapest-products:[{UnitsInStock:112'ProductName:Geitost'UnitPrice:2.5'Category:Dairy Products'ProductId:33}]} " is 135.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq84,The length of the statement  "{category:Confections'cheapest-products:[{UnitsInStock:25'ProductName:Teatime Chocolate Biscuits'UnitPrice:9.2'Category:Confections'ProductId:19}]} " is 147.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq84,The length of the statement  "{category:Grains/Cereals'cheapest-products:[{UnitsInStock:38'ProductName:Filo Mix'UnitPrice:7'Category:Grains/Cereals'ProductId:52}]} " is 133.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq84,The length of the statement  "{category:Beverages'cheapest-products:[{Category:Beverages'UnitPrice:4.5'ProductId:24'ProductName:Guaraná Fantástica'UnitsInStock:20}]} " is 135.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq84,The length of the statement  "{category:Condiments'cheapest-products:[{Category:Condiments'UnitPrice:10'ProductId:3'ProductName:Aniseed Syrup'UnitsInStock:13}]} " is 130.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq84,The length of the statement  "{category:Produce'cheapest-products:[{Category:Produce'UnitPrice:10'ProductId:74'ProductName:Longlife Tofu'UnitsInStock:4}]} " is 124.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq84,The length of the statement  "{category:Meat/Poultry'cheapest-products:[{Category:Meat/Poultry'UnitPrice:7.45'ProductId:54'ProductName:Tourtière'UnitsInStock:21}]} " is 133.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq84,The length of the statement  "{category:Dairy Products'cheapest-products:[{Category:Dairy Products'UnitPrice:2.5'ProductId:33'ProductName:Geitost'UnitsInStock:112}]} " is 135.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq84,The length of the statement  "{category:Confections'cheapest-products:[{Category:Confections'UnitPrice:9.2'ProductId:19'ProductName:Teatime Chocolate Biscuits'UnitsInStock:25}]} " is 147.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq84,The length of the statement  "{category:Grains/Cereals'cheapest-products:[{Category:Grains/Cereals'UnitPrice:7'ProductId:52'ProductName:Filo Mix'UnitsInStock:38}]} " is 133.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq88,The length of the statement  "{category:Beverages'most-expensive-products:[{Category:Beverages'UnitPrice:263.5'ProductId:38'ProductName:Côte de Blaye'UnitsInStock:17}]} " is 138.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq88,The length of the statement  "{category:Condiments'most-expensive-products:[{Category:Condiments'UnitPrice:43.9'ProductId:63'ProductName:Vegie-spread'UnitsInStock:24}]} " is 138.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq88,The length of the statement  "{category:Produce'most-expensive-products:[{Category:Produce'UnitPrice:53'ProductId:51'ProductName:Manjimup Dried Apples'UnitsInStock:20}]} " is 139.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq88,The length of the statement  "{category:Meat/Poultry'most-expensive-products:[{Category:Meat/Poultry'UnitPrice:123.79'ProductId:29'ProductName:Thüringer Rostbratwurst'UnitsInStock:0}]} " is 154.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq88,The length of the statement  "{category:Seafood'most-expensive-products:[{Category:Seafood'UnitPrice:62.5'ProductId:18'ProductName:Carnarvon Tigers'UnitsInStock:42}]} " is 136.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq88,The length of the statement  "{category:Dairy Products'most-expensive-products:[{Category:Dairy Products'UnitPrice:55'ProductId:59'ProductName:Raclette Courdavault'UnitsInStock:79}]} " is 152.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq88,The length of the statement  "{category:Confections'most-expensive-products:[{Category:Confections'UnitPrice:81'ProductId:20'ProductName:Sir Rodney's Marmalade'UnitsInStock:40}]} " is 148.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq88,The length of the statement  "{category:Grains/Cereals'most-expensive-products:[{Category:Grains/Cereals'UnitPrice:38'ProductId:56'ProductName:Gnocchi di nonna Alice'UnitsInStock:21}]} " is 154.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq88,The length of the statement  "{category:Beverages'most-expensive-products:[{UnitsInStock:17'ProductName:Côte de Blaye'UnitPrice:263.5'Category:Beverages'ProductId:38}]} " is 138.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq88,The length of the statement  "{category:Condiments'most-expensive-products:[{UnitsInStock:24'ProductName:Vegie-spread'UnitPrice:43.9'Category:Condiments'ProductId:63}]} " is 138.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq88,The length of the statement  "{category:Produce'most-expensive-products:[{UnitsInStock:20'ProductName:Manjimup Dried Apples'UnitPrice:53'Category:Produce'ProductId:51}]} " is 139.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq88,The length of the statement  "{category:Meat/Poultry'most-expensive-products:[{UnitsInStock:0'ProductName:Thüringer Rostbratwurst'UnitPrice:123.79'Category:Meat/Poultry'ProductId:29}]} " is 154.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq88,The length of the statement  "{category:Seafood'most-expensive-products:[{UnitsInStock:42'ProductName:Carnarvon Tigers'UnitPrice:62.5'Category:Seafood'ProductId:18}]} " is 136.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq88,The length of the statement  "{category:Dairy Products'most-expensive-products:[{UnitsInStock:79'ProductName:Raclette Courdavault'UnitPrice:55'Category:Dairy Products'ProductId:59}]} " is 152.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq88,The length of the statement  "{category:Confections'most-expensive-products:[{UnitsInStock:40'ProductName:Sir Rodney's Marmalade'UnitPrice:81'Category:Confections'ProductId:20}]} " is 148.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq88,The length of the statement  "{category:Grains/Cereals'most-expensive-products:[{UnitsInStock:21'ProductName:Gnocchi di nonna Alice'UnitPrice:38'Category:Grains/Cereals'ProductId:56}]} " is 154.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq88,The length of the statement  "{category:Beverages'most-expensive-products:[{ProductId:38'ProductName:Côte de Blaye'Category:Beverages'UnitPrice:263.5'UnitsInStock:17}]} " is 138.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq88,The length of the statement  "{category:Condiments'most-expensive-products:[{ProductId:63'ProductName:Vegie-spread'Category:Condiments'UnitPrice:43.9'UnitsInStock:24}]} " is 138.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq88,The length of the statement  "{category:Produce'most-expensive-products:[{ProductId:51'ProductName:Manjimup Dried Apples'Category:Produce'UnitPrice:53'UnitsInStock:20}]} " is 139.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq88,The length of the statement  "{category:Meat/Poultry'most-expensive-products:[{ProductId:29'ProductName:Thüringer Rostbratwurst'Category:Meat/Poultry'UnitPrice:123.79'UnitsInStock:0}]} " is 154.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq88,The length of the statement  "{category:Seafood'most-expensive-products:[{ProductId:18'ProductName:Carnarvon Tigers'Category:Seafood'UnitPrice:62.5'UnitsInStock:42}]} " is 136.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq88,The length of the statement  "{category:Dairy Products'most-expensive-products:[{ProductId:59'ProductName:Raclette Courdavault'Category:Dairy Products'UnitPrice:55'UnitsInStock:79}]} " is 152.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq88,The length of the statement  "{category:Confections'most-expensive-products:[{ProductId:20'ProductName:Sir Rodney's Marmalade'Category:Confections'UnitPrice:81'UnitsInStock:40}]} " is 148.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,linq88,The length of the statement  "{category:Grains/Cereals'most-expensive-products:[{ProductId:56'ProductName:Gnocchi di nonna Alice'Category:Grains/Cereals'UnitPrice:38'UnitsInStock:21}]} " is 154.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,test,The length of the statement  "//            print(@"(setq numbers '(5 4 1 3 9 8 6 7 2 0)) (take-while (fn (c) (>= (1st c) (2nd c))) (mapcar-index cons numbers))"); " is 133.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispLinqTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispLinqTests.cs,test,The length of the statement  "//            print("(setq numbers-a '(1 2 3)) (setq numbers-b '(3 4 5)) (zip (fn (a b) { :a a :b b }) numbers-a numbers-b)"); " is 126.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_min_max_int_long_double_values,The length of the statement  "            Assert.That((long)lispCtx.Eval(Lisp.Parse($"(min {int.MaxValue + 1L} {int.MaxValue + 2L})"))' Is.EqualTo(int.MaxValue + 1L)); " is 125.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_min_max_int_long_double_values,The length of the statement  "            Assert.That((long)lispCtx.Eval(Lisp.Parse($"(max {int.MaxValue + 1L} {int.MaxValue + 2L})"))' Is.EqualTo(int.MaxValue + 2L)); " is 125.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_call_delegates_LISP,The length of the statement  "            Assert.That(render(@"((/F ""String.Join(string'object[])"") ""'"" (to-array (map 1+ '(1 2 3))))")' Is.EqualTo("2'3'4")); " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_create_Function_for_generic_type_static_Methods_LISP,The length of the statement  "            Assert.That(eval(@"(GenericStaticLog<string>/Clear) (setq log (/F ""GenericStaticLog<string>.Log(string)"")) (log msg) (return (GenericStaticLog<string>/AllLogs))")'  " is 165.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_create_Function_for_generic_type_static_Methods_LISP,The length of the statement  "            Assert.That(eval(@"(GenericStaticLog<string>/Clear) (setq log (/F ""GenericStaticLog<string>.Log<int>(string)"")) (log msg) (return (GenericStaticLog<string>/AllLogs))")'  " is 170.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_call_inner_class_properties_LISP,The length of the statement  "            Assert.That(context.EvaluateLisp<string>("(return (StaticLog.Inner1.Inner2/Prop2))")' Is.EqualTo("StaticLog.Inner1.Inner2.Prop2")); " is 131.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_call_inner_class_properties_LISP,The length of the statement  "            Assert.That(context.EvaluateLisp<string>("(return (StaticLog.Inner1.Inner2/Field2))")' Is.EqualTo("StaticLog.Inner1.Inner2.Field2")); " is 133.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_call_inner_class_properties_LISP,The length of the statement  "            Assert.That(context.EvaluateLisp<string>("(return (StaticLog.Inner1.Inner2/Const2))")' Is.EqualTo("StaticLog.Inner1.Inner2.Const2")); " is 133.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_call_inner_class_properties_LISP,The length of the statement  "            Assert.That(context.EvaluateLisp<string>("(return (.InstanceProp1 o1))")' Is.EqualTo("StaticLog.Inner1.InstanceProp1")); " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_call_inner_class_properties_LISP,The length of the statement  "            Assert.That(context.EvaluateLisp<string>("(return (.InstanceField1 o1))")' Is.EqualTo("StaticLog.Inner1.InstanceField1")); " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptMethodsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptMethodsTests.cs,Filters_evaluates_async_results,The length of the statement  "            context.Container.AddSingleton<IDbConnectionFactory>(() => new OrmLiteConnectionFactory(":memory:"' SqliteOrmLiteDialectProvider.Instance)); " is 140.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptMethodsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptMethodsTests.cs,Filters_evaluates_async_results,The length of the statement  "            context.VirtualFiles.WriteFile("dbCount.html"' "{{ dbScalar(`SELECT COUNT(*) FROM Post`) | assignTo: count }}{{ count }}"); " is 123.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptUseCaseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptUseCaseTests.cs,Can_convert_dbScript_Results_to_Customer_Poco,The length of the statement  "            var result = context.Evaluate<Product>("{{ `select * from product where productId=@id` | dbSingle({ id }) | return }}"); " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptUseCaseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptUseCaseTests.cs,Can_convert_dbScript_Results_to_Customer_Poco,The length of the statement  "            var results = context.Evaluate<Product[]>("{{ `select * from product where productId IN (@ids) order by productId` | dbSelect({ ids }) | return }}"'  " is 148.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptUseCaseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptUseCaseTests.cs,Can_use_GetTableNames_with_textDump,The length of the statement  "            Assert.That(output.NormalizeNewLines()' Is.EqualTo("| Tables      ||\n|----------|---|\n| Product  | 3 |\n| Customer | 1 |")); " is 126.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ServiceStackScriptTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ServiceStackScriptTests.cs,Can_call_AutoQuery_Data_services_with_limit,The length of the statement  "            var html = BaseUrl.CombineWith("autoquery-data-products?orderBy=ProductName&take=3").GetStringFromUrl(responseFilter: AssertHtmlContentType); " is 141.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ServiceStackScriptTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ServiceStackScriptTests.cs,Can_call_AutoQuery_Data_services_with_category,The length of the statement  "            var html = BaseUrl.CombineWith("autoquery-data-products?category=Beverages").GetStringFromUrl(responseFilter: AssertHtmlContentType); " is 133.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ServiceStackScriptTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ServiceStackScriptTests.cs,Can_call_AutoQuery_Db_services_with_limit,The length of the statement  "            var html = BaseUrl.CombineWith("autoquery-rockstars?orderBy=FirstName&take=3").GetStringFromUrl(responseFilter: AssertHtmlContentType); " is 135.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ServiceStackScriptTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ServiceStackScriptTests.cs,Can_call_AutoQuery_Db_services_by_age,The length of the statement  "            var html = BaseUrl.CombineWith("autoquery-rockstars?age=27&orderBy=LastName").GetStringFromUrl(responseFilter: AssertHtmlContentType); " is 134.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ServiceStackScriptTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ServiceStackScriptTests.cs,Can_call_customer_with_csv_extension_to_force_ContentType,The length of the statement  "            var json = BaseUrl.CombineWith("api"' "customers").AddQueryParam("limit"' 1).GetStringFromUrl(responseFilter: AssertJsonContentType); " is 133.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ServiceStackScriptTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ServiceStackScriptTests.cs,Can_call_customer_with_csv_extension_to_force_ContentType,The length of the statement  "            var html = BaseUrl.CombineWith("api"' "customers.html").AddQueryParam("limit"' 1).GetStringFromUrl(responseFilter: AssertHtmlContentType); " is 138.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ServiceStackScriptTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ServiceStackScriptTests.cs,Can_call_single_customer_with_json_extension_to_force_ContentType,The length of the statement  "            var json = BaseUrl.CombineWith("api"' "customers"' "ALFKI.json").GetStringFromUrl(responseFilter: AssertJsonContentType); " is 121.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageContextScriptMethodsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageContextScriptMethodsTests.cs,Can_repeat_templates_with_bindings_using_selectEach,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("<ul> {{ '<li> {{ it.Object.Prop }} </li>' | selectEach(items) }} </ul>")).Result' " is 129.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageContextScriptMethodsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageContextScriptMethodsTests.cs,Can_repeat_templates_with_bindings_and_custom_scope_using_selectEach,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("<ul> {{ '<li> {{ item.Object.Prop }} </li>' | selectEach(items' { it: 'item' } ) }} </ul>")).Result' " is 148.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageContextScriptMethodsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageContextScriptMethodsTests.cs,Can_repeat_templates_with_bindings_and_custom_scope_using_selectEach,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("<ul> {{ items | select: <li> { it.Object.Prop } </li> }} </ul>")).Result' " is 121.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageContextScriptMethodsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageContextScriptMethodsTests.cs,Can_use_forEach_with_markdown,The length of the statement  "                Assert.That(new PageResult(context.OneTimePage("{{ ' - {{it}}\n' | selectEach(items) | markdown }}")).Result.RemoveAllWhitespace()'  " is 131.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Does_embed_partials,The length of the statement  "            context.VirtualFiles.WriteFile("page.html"' "<h2>{{ contentTitle }}</h2><section>{{ 'page-content' | partial }}</section>"); " is 124.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Does_evaluate_variable_binding_expressions_in_template,The length of the statement  "model.Dictionary['map-key'].Object.AltNested.Field | lower = '{{ model.Dictionary['map-key'].Object.AltNested.Field | lower }}' " is 127.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Can_render_onetime_page_and_layout,The length of the statement  "                LayoutPage = context.OneTimePage("<html><title>{{ model.List[0].Object.Prop | lower }}</title><body>{{ page }}</body></html>"' "html")' " is 135.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Can_render_onetime_page_with_real_layout,The length of the statement  "            context.VirtualFiles.WriteFile("_layout.html"' "<html><title>{{ model.List[0].Object.Prop | lower }}</title><body>{{ page }}</body></html>"); " is 141.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Binding_expressions_with_null_references_evaluate_to_null,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ model.Object.Prop }}")) { Model = new ModelBinding() }.Result' Is.Empty); " is 124.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Binding_expressions_with_null_references_evaluate_to_null,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ model.Object.Object.Prop }}")) { Model = new ModelBinding() }.Result' Is.Empty); " is 131.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Binding_expressions_with_null_references_evaluate_to_null,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ model[0].Prop }}")) { Model = new ModelBinding() }.Result' Is.Empty); " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Binding_expressions_with_null_references_evaluate_to_null,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ model.List[0].Prop }}")) { Model = new ModelBinding() }.Result' Is.Empty); " is 125.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Binding_expressions_with_null_references_evaluate_to_null,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ model.Dictionary['key'].Prop }}")) { Model = new ModelBinding() }.Result' Is.Empty); " is 135.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Can_use_else_and_otherwise_filter_to_show_alternative_content,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'Not Authenticated' | unless(auth) | otherwise('Is Authenticated') }}")) " is 123.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Can_use_else_and_otherwise_filter_to_show_alternative_content,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'Not Authenticated' | unless(auth) | otherwise('Is Authenticated') }}")) " is 123.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Can_use_else_and_otherwise_filter_to_show_alternative_content,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'Not Authenticated' | ifNot(auth) | otherwise('Is Authenticated') }}")) " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Filters_with_HandleUnknownValueAttribute_handles_unkownn_values,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ undefined | otherwise('undefined serverArg') }}")).Result' Is.EqualTo("undefined serverArg")); " is 145.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Handles_truthy_and_falsy_conditions,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ undefined | falsy('undefined value') }}")).Result' Is.EqualTo("undefined value")); " is 133.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Handles_truthy_and_falsy_conditions,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ null      | falsy('null value') }}")).Result' Is.EqualTo("null value")); " is 123.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Handles_truthy_and_falsy_conditions,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ ''        | falsy('empty string') }}")).Result' Is.EqualTo("empty string")); " is 127.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Handles_truthy_and_falsy_conditions,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ false     | falsy('false value') }}")).Result' Is.EqualTo("false value")); " is 125.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Handles_truthy_and_falsy_conditions,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ true      | truthy('true value') }}")).Result' Is.EqualTo("true value")); " is 124.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Handles_truthy_and_falsy_conditions,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ ' '       | truthy('whitespace') }}")).Result' Is.EqualTo("whitespace")); " is 124.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Handles_truthy_and_falsy_conditions,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 1         | truthy('one value') }}")).Result' Is.EqualTo("one value")); " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Handles_ifTruthy_and_ifFalsy_conditions,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'undefined value' | ifFalsy(undefined) }}")).Result' Is.EqualTo("undefined value")); " is 135.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Handles_ifTruthy_and_ifFalsy_conditions,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'null value'      | ifFalsy(null) }}")).Result' Is.EqualTo("null value")); " is 125.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Handles_ifTruthy_and_ifFalsy_conditions,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'empty string'    | ifFalsy('') }}")).Result' Is.EqualTo("empty string")); " is 125.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Handles_ifTruthy_and_ifFalsy_conditions,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'false value'     | ifFalsy(false) }}")).Result' Is.EqualTo("false value")); " is 127.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Handles_ifTruthy_and_ifFalsy_conditions,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'undefined value' | ifTruthy(undefined) }}")).Result' Is.EqualTo("")); " is 121.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Handles_ifTruthy_and_ifFalsy_conditions,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'true value'      | ifTruthy(true) }}")).Result' Is.EqualTo("true value")); " is 126.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Handles_ifTruthy_and_ifFalsy_conditions,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'whitespace'      | ifTruthy(' ') }}")).Result' Is.EqualTo("whitespace")); " is 125.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Handles_ifTruthy_and_ifFalsy_conditions,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'one value'       | ifTruthy(1) }}")).Result' Is.EqualTo("one value")); " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Handles_strict_if_and_else_conditions,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'undefined value' | ifNot(undefined) }}")).Result' Is.EqualTo("undefined value")); " is 133.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Handles_strict_if_and_else_conditions,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'null value'      | ifNot(null) }}")).Result' Is.EqualTo("null value")); " is 123.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Handles_strict_if_and_else_conditions,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'empty string'    | ifNot('') }}")).Result' Is.EqualTo("empty string")); " is 123.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Handles_strict_if_and_else_conditions,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'false value'     | ifNot(false) }}")).Result' Is.EqualTo("false value")); " is 125.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Handles_strict_if_and_else_conditions,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'whitespace'      | ifNot(' ') }}")).Result' Is.EqualTo("whitespace")); " is 122.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Handles_strict_if_and_else_conditions,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ 'true value'      | if(true) }}")).Result' Is.EqualTo("true value")); " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Null_exceptions_render_empty_string,The length of the statement  "            Assert.That(new PageResult(context.OneTimePage("{{ contextModel.Object.Prop | otherwise('there is nothing') }}")).Result' Is.EqualTo("there is nothing")); " is 154.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Does_find_last_modified_file_in_page,The length of the statement  "            context.VirtualFiles.WriteFile("_layout.html"' "layout {{ page }} {{ 'layout-partial' | partial }}  {{ 'layout-file.txt' | includeFile }} "); " is 141.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Does_find_last_modified_file_in_page,The length of the statement  "            context.VirtualFiles.WriteFile("page.html"' "page: partial {{ 'root-partial' | partial }}' file {{ 'file.txt' | includeFile }}' selectParital: {{ true | selectPartial: select-partial }}"); " is 188.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Does_find_last_modified_file_in_page,The length of the statement  "            context.VirtualFiles.WriteFile("root-partial.html"' "root-partial: partial {{ 'inner-partial' | partial }}' partial-file {{ 'partial-file.txt' | includeFile }}"); " is 162.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Does_find_last_modified_file_in_page,The length of the statement  "            ((InMemoryVirtualFile)context.VirtualFiles.GetFile("inner-partial.html")).FileLastModified = new DateTime(2001' 01' 05); " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Does_find_last_modified_file_in_page,The length of the statement  "            ((InMemoryVirtualFile)context.VirtualFiles.GetFile("select-partial.html")).FileLastModified = new DateTime(2001' 01' 07); " is 121.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Does_find_last_modified_file_in_page,The length of the statement  "            ((InMemoryVirtualFile)context.VirtualFiles.GetFile("layout-partial.html")).FileLastModified = new DateTime(2001' 01' 08); " is 121.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Can_ignore_page_template_and_layout_with_Page_args,The length of the statement  "            context.VirtualFiles.WriteFile("ignore-template.html"' "<!--\nignore: template\n-->\n<pre>{{ 12.34 | currency }}</pre>"); " is 121.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Can_ignore_page_template_and_layout_with_Page_args,The length of the statement  "            Assert.That(new PageResult(context.GetPage("ignore-page")).Result' Is.EqualTo("<html><body><pre>{{ 12.34 | currency }}</pre></body></html>")); " is 142.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Can_ignore_page_template_and_layout_with_Page_args,The length of the statement  "            Assert.That(new PageResult(context.GetPage("ignore-template")).Result' Is.EqualTo("<pre>{{ 12.34 | currency }}</pre>")); " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_multiple_filters_and_multiple_args,The length of the statement  "            var fragments = ScriptTemplateUtils.ParseTemplate("<h1>{{ title | filter1 | filter2(1) | filter3(1'2.2''a''\"b\"'true) }}</h1>"); " is 129.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_multiple_filters_and_multiple_args,The length of the statement  "            Assert.That(varFragment2.OriginalText.ToString()' Is.EqualTo("{{ title | filter1 | filter2(1) | filter3(1'2.2''a''\"b\"'true) }}")); " is 132.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_next_token,The length of the statement  "            Assert.That(token' Is.EqualTo(new JsArrayExpression(new JsIdentifier("a")'new JsIdentifier("b")'new JsIdentifier("c")))); " is 121.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_next_token,The length of the statement  "            Assert.That(token' Is.EqualTo(new JsArrayExpression(new JsLiteral("a")'new JsLiteral("b")'new JsTemplateLiteral("c")))); " is 120.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_use_cleaner_whitespace_sensitive_syntax_for_string_arguments,The length of the statement  "                Assert.That(varFragment.FilterExpressions[0].Arguments.Length' Is.EqualTo(varFragment1.FilterExpressions[0].Arguments.Length)); " is 127.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_use_cleaner_whitespace_sensitive_syntax_for_string_arguments,The length of the statement  "                Assert.That(varFragment.FilterExpressions[1].Arguments.Length' Is.EqualTo(varFragment1.FilterExpressions[1].Arguments.Length)); " is 127.
Long Statement,ServiceStack.WebHost.Endpoints.Tests.Support.Operations,RequestOfComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Support\Operations\RequestOfComplexTypes.cs,Create,The length of the statement  "				StringMap = new Dictionary<string' string> { { "String" + i' "String" + "String" + i + 1 }' { "String" + i + 2' "String" + i + 3 } }' " is 133.
Complex Conditional,ServiceStack.WebHost.Endpoints.Tests,ReplyAllRequestAttribute,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ReplyAllTests.cs,AssertSingleDto,The conditional expression  "!(dto is BatchThrows || dto is BatchThrowsAsync || dto is NoRepeat || dto is HelloAll || dto is HelloAllAsync || dto is HelloAllVoid || dto is HelloAllVoidAsync || dto is HelloGet || dto is HelloAllCustom || dto is HelloAllTransaction || dto is Request)"  is complex.
Complex Conditional,ServiceStack.WebHost.Endpoints.Tests,ReplyAllResponseAttribute,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ReplyAllTests.cs,AssertSingleDto,The conditional expression  "!(dto == null || dto is Task || dto is BatchThrowsResponse || dto is NoRepeatResponse || dto is HelloAllResponse || dto is HelloAllCustomResponse                 || dto is HelloAllTransactionResponse || dto is IHttpResult)"  is complex.
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,AsyncFiltersTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncFiltersTests.cs,AsyncFiltersTests,The constructor "AsyncFiltersTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,AuthSaveUserNameAsLowerCaseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthCaseInsensitiveUserNameTests.cs,AuthSaveUserNameAsLowerCaseTests,The constructor "AuthSaveUserNameAsLowerCaseTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,AuthCaseInsensitiveUserNameTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthCaseInsensitiveUserNameTests.cs,AuthCaseInsensitiveUserNameTests,The constructor "AuthCaseInsensitiveUserNameTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,AuthCaseSensitiveUserNameTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthCaseInsensitiveUserNameTests.cs,AuthCaseSensitiveUserNameTests,The constructor "AuthCaseSensitiveUserNameTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,AutoQueryDataTests,The constructor "AutoQueryDataTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,AutoQueryDataTests,The constructor "AutoQueryDataTests" calls a virtual method "CreateAppHost".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,AutoQueryUnitTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,AutoQueryUnitTests,The constructor "AutoQueryUnitTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,AutoQueryTests,The constructor "AutoQueryTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,BuiltinRouteTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\BuiltinRouteTests.cs,BuiltinRouteTests,The constructor "BuiltinRouteTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,CachedServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CachedServiceClientTests.cs,CachedServiceClientTests,The constructor "CachedServiceClientTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,CacheResponseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CacheResponseTests.cs,CacheResponseTests,The constructor "CacheResponseTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,CacheServerFeatureTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CacheServerFeatureTests.cs,CacheServerFeatureTests,The constructor "CacheServerFeatureTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,CompressResponseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CompressResponseTests.cs,CompressResponseTests,The constructor "CompressResponseTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,ConcurrencyTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ConcurrencyTest.cs,ConcurrencyTest,The constructor "ConcurrencyTest" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,ContentTypeDisabledTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ContentTypeDisabledTests.cs,ContentTypeDisabledTests,The constructor "ContentTypeDisabledTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,ContentTypeRouteTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ContentTypeRouteTests.cs,ContentTypeRouteTests,The constructor "ContentTypeRouteTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,CsvServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CsvServiceClientTests.cs,CsvServiceClientTests,The constructor "CsvServiceClientTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,CustomHttpMethodTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CustomHttpMethodTests.cs,CustomHttpMethodTests,The constructor "CustomHttpMethodTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,CustomOrmLiteAuthRepositoryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CustomOrmLiteAuthRepositoryTests.cs,CustomOrmLiteAuthRepositoryTests,The constructor "CustomOrmLiteAuthRepositoryTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,ExceptionHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ExceptionHandlingTests.cs,ExceptionHandlingTests,The constructor "ExceptionHandlingTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,ExceptionHandlingTestsAsync,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ExceptionHandlingTestsAsync.cs,ExceptionHandlingTestsAsync,The constructor "ExceptionHandlingTestsAsync" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,HttpHandlerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\HttpHandlerTests.cs,HttpHandlerTests,The constructor "HttpHandlerTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,HttpResultContentTypeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\HttpResultContentTypeTests.cs,HttpResultContentTypeTests,The constructor "HttpResultContentTypeTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,InProcessServiceGatewayRequestResponseFiltersTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\InProcessServiceGatewayRequestResponseFiltersTests.cs,InProcessServiceGatewayRequestResponseFiltersTests,The constructor "InProcessServiceGatewayRequestResponseFiltersTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,InvalidRequests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\InvalidRequests.cs,InvalidRequests,The constructor "InvalidRequests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,ManualValidationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ManualValidationTests.cs,ManualValidationTests,The constructor "ManualValidationTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,PasswordHasherTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\PasswordHasherTests.cs,PasswordHasherTestsBase,The constructor "PasswordHasherTestsBase" calls a virtual method "CreateAppHost".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,PasswordHasherTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\PasswordHasherTests.cs,PasswordHasherTestsBase,The constructor "PasswordHasherTestsBase" calls a virtual method "GetAuthRepository".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,PasswordHasherTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\PasswordHasherTests.cs,PasswordHasherTestsBase,The constructor "PasswordHasherTestsBase" calls a virtual method "GetAuthRepository".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,RawRequestTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RawRequestTests.cs,RawRequestTests,The constructor "RawRequestTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,RedirectPathTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RedirectPathTests.cs,RedirectPathTests,The constructor "RedirectPathTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,RequestInfoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RequestInfoTests.cs,RequestInfoTests,The constructor "RequestInfoTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,RequestLogsFeatureTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RequestLogsFeatureTests.cs,RequestLogsFeatureTests,The constructor "RequestLogsFeatureTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,RouteMatchTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RouteMatchTests.cs,RouteMatchTests,The constructor "RouteMatchTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,ServerEventsErrorHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,ServerEventsErrorHandlingTests,The constructor "ServerEventsErrorHandlingTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,ServerEventsTests,The constructor "ServerEventsTests" calls a virtual method "CreateAppHost".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,ServerEventConnectionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,ServerEventConnectionTests,The constructor "ServerEventConnectionTests" calls a virtual method "CreateAppHost".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,AuthMemoryServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,AuthMemoryServerEventsTests,The constructor "AuthMemoryServerEventsTests" calls a virtual method "CreateAppHost".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,ServiceClientSendBodyTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceClientSendBodyTests.cs,ServiceClientSendBodyTests,The constructor "ServiceClientSendBodyTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,ServiceGatewayTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceGatewayTests.cs,ServiceGatewayTests,The constructor "ServiceGatewayTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,ServiceGatewayTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceGatewayTests.cs,ServiceGatewayTests,The constructor "ServiceGatewayTests" calls a virtual method "CreateAppHost".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,ServiceGatewayAsyncTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceGatewayTestsAsync.cs,ServiceGatewayAsyncTests,The constructor "ServiceGatewayAsyncTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,ServiceGatewayAsyncTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceGatewayTestsAsync.cs,ServiceGatewayAsyncTests,The constructor "ServiceGatewayAsyncTests" calls a virtual method "CreateAppHost".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,SpanFormatTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SpanFormatTests.cs,SpanFormatTests,The constructor "SpanFormatTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,StrictModeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\StrictModeTests.cs,StrictModeTests,The constructor "StrictModeTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,ValidationCustomTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ValidationCustomTests.cs,ValidationCustomTests,The constructor "ValidationCustomTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,ValidationExceptionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ValidationExceptionTests.cs,ValidationExceptionTests,The constructor "ValidationExceptionTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,VirtualFileSystemMappingTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\VirtualFileSystemMappingTests.cs,VirtualFileSystemMappingTestsBase,The constructor "VirtualFileSystemMappingTestsBase" calls a virtual method "CreateAppHost".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,VirtualFileSystemMappingTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\VirtualFileSystemMappingTests.cs,VirtualFileSystemMappingTestsBase,The constructor "VirtualFileSystemMappingTestsBase" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,ZipServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ZipServiceClientTests.cs,ZipServiceClientTests,The constructor "ZipServiceClientTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests,ZipRequestLoggerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ZipTests.cs,ZipRequestLoggerTests,The constructor "ZipRequestLoggerTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests.IntegrationTests,IntegrationTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IntegrationTests\IntegrationTestBase.cs,IntegrationTestBase,The constructor "IntegrationTestBase" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests.Issues,AutoQueryJoinReferenceId,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Issues\AutoQueryIssues.cs,AutoQueryJoinReferenceId,The constructor "AutoQueryJoinReferenceId" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests.Issues,ClientMemoryLeak,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Issues\ClientMemoryLeak.cs,ClientMemoryLeak,The constructor "ClientMemoryLeak" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests.Issues,LoadWwwFormIssue,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Issues\LoadWwwFormIssue.cs,LoadWwwFormIssue,The constructor "LoadWwwFormIssue" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests.Issues,LocalizationIssues,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Issues\LocalizationIssues.cs,LocalizationIssues,The constructor "LocalizationIssues" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests.Issues,RequestScopeIssue,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Issues\RequestScopeIssue.cs,RequestScopeIssue,The constructor "RequestScopeIssue" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests.Issues,ResponseFilterHeadersIssue,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Issues\ResponseFilterHeadersIssue.cs,ResponseFilterHeadersIssue,The constructor "ResponseFilterHeadersIssue" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests.Issues,SerializationIssues,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Issues\SerializationIssues.cs,SerializationIssues,The constructor "SerializationIssues" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests.Issues,ServiceExceptionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Issues\ServiceExceptionTests.cs,ServiceExceptionTests,The constructor "ServiceExceptionTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests.Issues,XmlContentTypeIssue,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Issues\XmlContentTypeIssue.cs,XmlContentTypeIssue,The constructor "XmlContentTypeIssue" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,PageBasedRoutingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\PageBasedRoutingTests.cs,PageBasedRoutingTests,The constructor "PageBasedRoutingTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ProtectedScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ProtectedScriptsTests.cs,ProtectedScriptsTests,The constructor "ProtectedScriptsTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ServiceStackScriptTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ServiceStackScriptTests.cs,ServiceStackScriptTests,The constructor "ServiceStackScriptTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpApiTests.cs,SharpApiTests,The constructor "SharpApiTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPagesIntegrationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPagesIntegrationTests.cs,SharpPagesIntegrationTests,The constructor "SharpPagesIntegrationTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,SharpPageTests,The constructor "SharpPageTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpViewsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpViewsTests.cs,SharpViewsTests,The constructor "SharpViewsTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests.UseCases,BasicEncryptedMessagesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\UseCases\BasicEncryptedMessagesTests.cs,BasicEncryptedMessagesTests,The constructor "BasicEncryptedMessagesTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests.UseCases,EncryptedMessagesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\UseCases\EncryptedMessagesTests.cs,EncryptedMessagesTests,The constructor "EncryptedMessagesTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests.UseCases,JwtAuthProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\UseCases\JwtAuthProviderTests.cs,JwtAuthProviderTests,The constructor "JwtAuthProviderTests" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests.UseCases,JwtAuthProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\UseCases\JwtAuthProviderTests.cs,JwtAuthProviderTests,The constructor "JwtAuthProviderTests" calls a virtual method "CreateJwtAuthProvider".
Virtual Method Call from Constructor,ServiceStack.WebHost.Endpoints.Tests.UseCases,JwtAuthProviderIntegrationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\UseCases\JwtAuthProviderTests.cs,JwtAuthProviderIntegrationTests,The constructor "JwtAuthProviderIntegrationTests" calls a virtual method "Init".
Empty Catch Block,ServiceStack.WebHost.Endpoints.Tests,AuthCaseSensitiveUserNameTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthCaseInsensitiveUserNameTests.cs,Can_disable_non_index_fallback,The method has an empty catch block.
Empty Catch Block,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryQueryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryQueryTests.cs,TestFixtureSetUp,The method has an empty catch block.
Empty Catch Block,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryTests.cs,TestFixtureSetUp,The method has an empty catch block.
Empty Catch Block,ServiceStack.WebHost.Endpoints.Tests,AuthTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthTests.cs,Html_clients_receive_redirect_to_login_page_when_accessing_unauthenticated,The method has an empty catch block.
Empty Catch Block,ServiceStack.WebHost.Endpoints.Tests,AuthTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthTests.cs,Html_clients_receive_secured_url_attempt_in_login_page_redirect_query_string,The method has an empty catch block.
Empty Catch Block,ServiceStack.WebHost.Endpoints.Tests,AuthTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthTests.cs,Html_clients_receive_secured_url_including_query_string_within_login_page_redirect_query_string,The method has an empty catch block.
Empty Catch Block,ServiceStack.WebHost.Endpoints.Tests,AuthTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthTests.cs,Html_clients_receive_session_ReferrerUrl_on_successful_authentication,The method has an empty catch block.
Empty Catch Block,ServiceStack.WebHost.Endpoints.Tests,AuthTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthTests.cs,Failed_re_authentication_does_not_logout_user,The method has an empty catch block.
Empty Catch Block,ServiceStack.WebHost.Endpoints.Tests,CachedServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CachedServiceClientTests.cs,CachedServiceClient_does_not_return_NoCache_after_FailedResponse,The method has an empty catch block.
Empty Catch Block,ServiceStack.WebHost.Endpoints.Tests,IocServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IocServiceTests.cs,Does_create_correct_instances_per_scope_with_exception,The method has an empty catch block.
Empty Catch Block,ServiceStack.WebHost.Endpoints.Tests,IocServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IocServiceTests.cs,Does_create_correct_instances_per_scope_with_exception,The method has an empty catch block.
Empty Catch Block,ServiceStack.WebHost.Endpoints.Tests,IocServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IocServiceTests.cs,Does_create_correct_instances_per_scope_with_exception_Async,The method has an empty catch block.
Empty Catch Block,ServiceStack.WebHost.Endpoints.Tests,IocServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IocServiceTests.cs,Does_create_correct_instances_per_scope_with_exception_Async,The method has an empty catch block.
Empty Catch Block,ServiceStack.WebHost.Endpoints.Tests,RoutingPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RoutingPageTests.cs,SetUp,The method has an empty catch block.
Empty Catch Block,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,EvaluateScriptTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\EvaluateScriptTests.cs,Evaluate_script_without_return_throws_NotSupportedException,The method has an empty catch block.
Empty Catch Block,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsonTests.cs,Does_throw_on_invalid_number,The method has an empty catch block.
Empty Catch Block,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_import_into_global_symbols,The method has an empty catch block.
Empty Catch Block,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_import_into_global_symbols,The method has an empty catch block.
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AppHostHttpListenerLongRunningBaseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AppHostHttpListenerLongRunningBaseTests.cs,Can_call_GetFactorial_WebService,The following statement contains a magic number: var request = new GetFactorial { ForNumber = 3 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AppHostHttpListenerLongRunningBaseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AppHostHttpListenerLongRunningBaseTests.cs,Calling_missing_web_service_does_not_break_HttpListener,The following statement contains a magic number: Assert.That(errorCount' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AppHostHttpListenerLongRunningBaseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AppHostHttpListenerLongRunningBaseTests.cs,DebugHost,The following statement contains a magic number: Thread.Sleep(180 * 1000);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AppHostHttpListenerLongRunningBaseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AppHostHttpListenerLongRunningBaseTests.cs,DebugHost,The following statement contains a magic number: Thread.Sleep(180 * 1000);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AppHostHttpListenerLongRunningBaseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AppHostHttpListenerLongRunningBaseTests.cs,PerformanceTest,The following statement contains a magic number: const int clientCount = 500;
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AppHostListenerBaseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AppHostListenerBaseTests.cs,Can_call_GetFactorial_WebService,The following statement contains a magic number: var request = new GetFactorial { ForNumber = 3 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AppHostListenerBaseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AppHostListenerBaseTests.cs,Calling_missing_web_service_does_not_break_HttpListener,The following statement contains a magic number: Assert.That(errorCount' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AppHostListenerBaseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AppHostListenerBaseTests.cs,DebugHost,The following statement contains a magic number: Thread.Sleep(180 * 1000);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AppHostListenerBaseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AppHostListenerBaseTests.cs,DebugHost,The following statement contains a magic number: Thread.Sleep(180 * 1000);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AppHostListenerBaseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AppHostListenerBaseTests.cs,PerformanceTest,The following statement contains a magic number: const int clientCount = 500;
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AppHostListenerBaseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AppHostListenerBaseTests.cs,PerformanceTest,The following statement contains a magic number: ThreadPool.SetMinThreads(500' 50);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AppHostListenerBaseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AppHostListenerBaseTests.cs,PerformanceTest,The following statement contains a magic number: ThreadPool.SetMinThreads(500' 50);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AppHostListenerBaseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AppHostListenerBaseTests.cs,PerformanceTest,The following statement contains a magic number: ThreadPool.SetMaxThreads(1000' 50);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AppHostListenerBaseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AppHostListenerBaseTests.cs,PerformanceTest,The following statement contains a magic number: ThreadPool.SetMaxThreads(1000' 50);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AppHostListenerBaseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AppHostListenerBaseTests.cs,Rapid_Start_Stop_should_not_cause_exceptions,The following statement contains a magic number: i < 100
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AppHostListenerEchoRequestTests.cs,Configure,The following statement contains a magic number: GlobalRequestFiltersAsync.Add(CreateAsyncFilter(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AppHostListenerEchoRequestTests.cs,CreateAsyncFilter,The following statement contains a magic number: return (req' res' dto) =>                  {                      if (dto is TestAsyncFilter asyncDto)                      {                          CancelledAt++;                            asyncDto.Results.Add("GlobalRequestFiltersAsync#" + pos);                          if (asyncDto.ReturnAt == pos)                          {                              res.ContentType = MimeTypes.Json;                              return res.WriteAsync(asyncDto.ToJson())                                  .ContinueWith(t => res.EndRequest(skipHeaders: true));                          }                            if (asyncDto.ErrorAt == pos)                              throw new ArgumentException("ErrorAt#" + pos);                            if (asyncDto.DirectErrorAt == pos)                          {                              res.ContentType = MimeTypes.Json;                              return res.WriteError(new ArgumentException("DirectErrorAt#" + pos));                          }                            if (asyncDto.CancelAt == pos)                          {                              var tcs = new TaskCompletionSource<object>();                              tcs.SetCanceled();                              return tcs.Task;                          }                            return Task.Delay(10);                      }                        return TypeConstants.EmptyTask;                  };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AppSelfHostTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AppSelfHostTests.cs,AppSelfHostTests,The following statement contains a magic number: var port = HostContext.FindFreeTcpPort(startingFrom: 5000);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AppSelfHostTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AppSelfHostTests.cs,AppSelfHostTests,The following statement contains a magic number: port < 5000
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AppSelfHostTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AppSelfHostTests.cs,Can_call_SelfHost_Services,The following statement contains a magic number: client.Get(new Sleep { ForMs = 100 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AppSelfHostTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AppSelfHostTests.cs,Can_call_SelfHost_Services,The following statement contains a magic number: client.Get(new SpinWait { Iterations = 1000 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AppSelfHostTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AppSelfHostTests.cs,Can_call_SelfHost_Services_async,The following statement contains a magic number: var sleep = await client.GetAsync(new Sleep { ForMs = 100 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AppSelfHostTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AppSelfHostTests.cs,Can_call_SelfHost_Services_async,The following statement contains a magic number: var spin = await client.GetAsync(new SpinWait { Iterations = 1000 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,MyTestAsyncValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncFiltersTests.cs,MyTestAsyncValidator,The following statement contains a magic number: RuleSet(ApplyTo.Post' () =>              {                  RuleFor(x => x.Name).MustAsync(async (s' token) =>                      {                          await Task.Delay(10' token);                          return !string.IsNullOrEmpty(s);                      })                      .WithMessage("'Name' should not be empty.")                      .WithErrorCode("NotEmpty");              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,MyAllTestAsyncValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncFiltersTests.cs,MyAllTestAsyncValidator,The following statement contains a magic number: RuleFor(x => x.Name).MustAsync(async (s' token) =>                  {                      await Task.Delay(10' token);                      return !string.IsNullOrEmpty(s);                  })                  .WithMessage("'Name' should not be empty.")                  .WithErrorCode("NotEmpty");
Magic Number,ServiceStack.WebHost.Endpoints.Tests,MyAllTestAsyncValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncFiltersTests.cs,MyAllTestAsyncValidator,The following statement contains a magic number: RuleFor(x => x.Age).MustAsync(async (age' token) =>                  {                      await Task.Delay(10' token);                      return age > 0;                  })                  .WithMessage("'Age' must be greater than '0'.")                  .WithErrorCode("GreaterThan");
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AsyncFiltersTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncFiltersTests.cs,Does_Execute_all_RequestFilters_in_AutoBatch_Request,The following statement contains a magic number: Assert.That(responseBatch.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AsyncFiltersTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncFiltersTests.cs,Can_send_valid_mixed_AsyncValidator_request,The following statement contains a magic number: var asyncResponse = client.Post(new TestAsyncValidator { Age = 2' Name = "two" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AsyncProgressTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncProgressTests.cs,Can_report_progress_when_downloading_GET_async,The following statement contains a magic number: AsyncServiceClient.BufferSize = 100;
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AsyncProgressTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncProgressTests.cs,AsyncDownloadWithProgress,The following statement contains a magic number: AsyncServiceClient.BufferSize = 100;
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AsyncRestClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncRestClientTests.cs,Can_call_GetAsync_on_GetFactorial_using_RestClientAsync,The following statement contains a magic number: Assert.That(response.Result' Is.EqualTo(GetFactorialService.GetFactorial(3)));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AsyncRestClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncRestClientTests.cs,Can_call_PostAsync_to_add_new_Movie_using_RestClientAsync,The following statement contains a magic number: var newMovie = new Support.Host.Movie              {                  ImdbId = "tt0450259"'                  Title = "Blood Diamond"'                  Rating = 8.0m'                  Director = "Edward Zwick"'                  ReleaseDate = new DateTime(2007' 1' 26)'                  TagLine = "A fisherman' a smuggler' and a syndicate of businessmen match wits over the possession of a priceless diamond."'                  Genres = new List<string> { "Adventure"' "Drama"' "Thriller" }'              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AsyncRestClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncRestClientTests.cs,Can_call_PostAsync_to_add_new_Movie_using_RestClientAsync,The following statement contains a magic number: var newMovie = new Support.Host.Movie              {                  ImdbId = "tt0450259"'                  Title = "Blood Diamond"'                  Rating = 8.0m'                  Director = "Edward Zwick"'                  ReleaseDate = new DateTime(2007' 1' 26)'                  TagLine = "A fisherman' a smuggler' and a syndicate of businessmen match wits over the possession of a priceless diamond."'                  Genres = new List<string> { "Adventure"' "Drama"' "Thriller" }'              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AsyncRestClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncRestClientTests.cs,Can_call_PostAsync_to_add_new_Movie_using_RestClientAsync,The following statement contains a magic number: var newMovie = new Support.Host.Movie              {                  ImdbId = "tt0450259"'                  Title = "Blood Diamond"'                  Rating = 8.0m'                  Director = "Edward Zwick"'                  ReleaseDate = new DateTime(2007' 1' 26)'                  TagLine = "A fisherman' a smuggler' and a syndicate of businessmen match wits over the possession of a priceless diamond."'                  Genres = new List<string> { "Adventure"' "Drama"' "Thriller" }'              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AsyncRestClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncRestClientTests.cs,Can_call_DeleteAsync_to_delete_Movie_using_RestClientAsync,The following statement contains a magic number: var newMovie = new Support.Host.Movie              {                  ImdbId = "tt0450259"'                  Title = "Blood Diamond"'                  Rating = 8.0m'                  Director = "Edward Zwick"'                  ReleaseDate = new DateTime(2007' 1' 26)'                  TagLine = "A fisherman' a smuggler' and a syndicate of businessmen match wits over the possession of a priceless diamond."'                  Genres = new List<string> { "Adventure"' "Drama"' "Thriller" }'              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AsyncRestClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncRestClientTests.cs,Can_call_DeleteAsync_to_delete_Movie_using_RestClientAsync,The following statement contains a magic number: var newMovie = new Support.Host.Movie              {                  ImdbId = "tt0450259"'                  Title = "Blood Diamond"'                  Rating = 8.0m'                  Director = "Edward Zwick"'                  ReleaseDate = new DateTime(2007' 1' 26)'                  TagLine = "A fisherman' a smuggler' and a syndicate of businessmen match wits over the possession of a priceless diamond."'                  Genres = new List<string> { "Adventure"' "Drama"' "Thriller" }'              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AsyncRestClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncRestClientTests.cs,Can_call_DeleteAsync_to_delete_Movie_using_RestClientAsync,The following statement contains a magic number: var newMovie = new Support.Host.Movie              {                  ImdbId = "tt0450259"'                  Title = "Blood Diamond"'                  Rating = 8.0m'                  Director = "Edward Zwick"'                  ReleaseDate = new DateTime(2007' 1' 26)'                  TagLine = "A fisherman' a smuggler' and a syndicate of businessmen match wits over the possession of a priceless diamond."'                  Genres = new List<string> { "Adventure"' "Drama"' "Thriller" }'              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AsyncServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncServiceClientTests.cs,Can_call_SendAsync_on_ServiceClient,The following statement contains a magic number: var request = new GetFactorial { ForNumber = 3 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AsyncServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncServiceClientTests.cs,Can_call_SendAsync_with_compression_on_ServiceClient,The following statement contains a magic number: var request = new GetFactorial { ForNumber = 3 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,GetFactorialAsyncService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncTaskTests.cs,Any,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AsyncLoadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncTaskTests.cs,Load_test_GetFactorialSync_sync,The following statement contains a magic number: var response = client.Get(new GetFactorialSync { ForNumber = 3 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AsyncLoadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncTaskTests.cs,Load_test_GetFactorialSync_sync,The following statement contains a magic number: i % 100 == 0
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AsyncLoadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncTaskTests.cs,Load_test_GetFactorialSync_HttpClient_sync,The following statement contains a magic number: var response = client.Get(new GetFactorialSync { ForNumber = 3 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AsyncLoadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncTaskTests.cs,Load_test_GetFactorialSync_HttpClient_sync,The following statement contains a magic number: i % 100 == 0
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AsyncLoadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncTaskTests.cs,Load_test_GetFactorialSync_async,The following statement contains a magic number: var fetchTasks = NoOfTimes.Times(() =>                  client.GetAsync(new GetFactorialSync { ForNumber = 3 })                  .ContinueWith(t =>                  {                      if (++i % 100 == 0)                      {                          "{0}: {1}".Print(i' t.Result.Result);                      }                  }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AsyncLoadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncTaskTests.cs,Load_test_GetFactorialSync_async,The following statement contains a magic number: var fetchTasks = NoOfTimes.Times(() =>                  client.GetAsync(new GetFactorialSync { ForNumber = 3 })                  .ContinueWith(t =>                  {                      if (++i % 100 == 0)                      {                          "{0}: {1}".Print(i' t.Result.Result);                      }                  }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AsyncLoadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncTaskTests.cs,Load_test_GetFactorialSync_HttpClient_async,The following statement contains a magic number: var fetchTasks = NoOfTimes.Times(() =>                  client.GetAsync(new GetFactorialSync { ForNumber = 3 })                  .ContinueWith(t =>                  {                      if (++i % 100 == 0)                      {                          "{0}: {1}".Print(i' t.Result.Result);                      }                  }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AsyncLoadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncTaskTests.cs,Load_test_GetFactorialSync_HttpClient_async,The following statement contains a magic number: var fetchTasks = NoOfTimes.Times(() =>                  client.GetAsync(new GetFactorialSync { ForNumber = 3 })                  .ContinueWith(t =>                  {                      if (++i % 100 == 0)                      {                          "{0}: {1}".Print(i' t.Result.Result);                      }                  }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AsyncLoadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncTaskTests.cs,Load_test_GetFactorialGenericAsync_sync,The following statement contains a magic number: var response = client.Get(new GetFactorialGenericAsync { ForNumber = 3 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AsyncLoadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncTaskTests.cs,Load_test_GetFactorialGenericAsync_sync,The following statement contains a magic number: i % 100 == 0
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AsyncLoadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncTaskTests.cs,Load_test_GetFactorialGenericAsync_async,The following statement contains a magic number: var fetchTasks = NoOfTimes.Times(() =>                  client.GetAsync(new GetFactorialGenericAsync { ForNumber = 3 })                  .ContinueWith(t =>                  {                      if (++i % 100 == 0)                      {                          "{0}: {1}".Print(i' t.Result.Result);                      }                  }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AsyncLoadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AsyncTaskTests.cs,Load_test_GetFactorialGenericAsync_async,The following statement contains a magic number: var fetchTasks = NoOfTimes.Times(() =>                  client.GetAsync(new GetFactorialGenericAsync { ForNumber = 3 })                  .ContinueWith(t =>                  {                      if (++i % 100 == 0)                      {                          "{0}: {1}".Print(i' t.Result.Result);                      }                  }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AttributeFiltersTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AttributeFiltersTest.cs,RequestFilters_are_prioritized,The following statement contains a magic number: Assert.That(attrPriorities' Is.EquivalentTo(new[] { int.MinValue' -100' -90' -80' 0' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AttributeFiltersTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AttributeFiltersTest.cs,RequestFilters_are_prioritized,The following statement contains a magic number: Assert.That(attrPriorities' Is.EquivalentTo(new[] { int.MinValue' -100' -90' -80' 0' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AttributeFiltersTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AttributeFiltersTest.cs,RequestFilters_are_prioritized,The following statement contains a magic number: Assert.That(attrPriorities' Is.EquivalentTo(new[] { int.MinValue' -100' -90' -80' 0' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AttributeFiltersTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AttributeFiltersTest.cs,RequestFilters_are_prioritized,The following statement contains a magic number: Assert.That(execOrderPriorities' Is.EquivalentTo(new[] { int.MinValue' -100' -90' -80' 0' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AttributeFiltersTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AttributeFiltersTest.cs,RequestFilters_are_prioritized,The following statement contains a magic number: Assert.That(execOrderPriorities' Is.EquivalentTo(new[] { int.MinValue' -100' -90' -80' 0' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AttributeFiltersTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AttributeFiltersTest.cs,RequestFilters_are_prioritized,The following statement contains a magic number: Assert.That(execOrderPriorities' Is.EquivalentTo(new[] { int.MinValue' -100' -90' -80' 0' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AttributeFiltersAsyncTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AttributeFiltersTestAsync.cs,RequestFilters_are_prioritized,The following statement contains a magic number: Assert.That(attrPriorities' Is.EquivalentTo(new[] { int.MinValue' -100' -90' -80' 0' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AttributeFiltersAsyncTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AttributeFiltersTestAsync.cs,RequestFilters_are_prioritized,The following statement contains a magic number: Assert.That(attrPriorities' Is.EquivalentTo(new[] { int.MinValue' -100' -90' -80' 0' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AttributeFiltersAsyncTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AttributeFiltersTestAsync.cs,RequestFilters_are_prioritized,The following statement contains a magic number: Assert.That(attrPriorities' Is.EquivalentTo(new[] { int.MinValue' -100' -90' -80' 0' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AttributeFiltersAsyncTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AttributeFiltersTestAsync.cs,RequestFilters_are_prioritized,The following statement contains a magic number: Assert.That(execOrderPriorities' Is.EquivalentTo(new[] { int.MinValue' -100' -90' -80' 0' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AttributeFiltersAsyncTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AttributeFiltersTestAsync.cs,RequestFilters_are_prioritized,The following statement contains a magic number: Assert.That(execOrderPriorities' Is.EquivalentTo(new[] { int.MinValue' -100' -90' -80' 0' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AttributeFiltersAsyncTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AttributeFiltersTestAsync.cs,RequestFilters_are_prioritized,The following statement contains a magic number: Assert.That(execOrderPriorities' Is.EquivalentTo(new[] { int.MinValue' -100' -90' -80' 0' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryQueryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryQueryTests.cs,SeedData,The following statement contains a magic number: newUser = authRepo.CreateUserAuth(new AppUser              {                  Id = 2'                  DisplayName = "Test Manager"'                  Email = "manager@gmail.com"'                  FirstName = "Test"'                  LastName = "Manager"'              }' "p@55wOrd");
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryQueryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryQueryTests.cs,SeedData,The following statement contains a magic number: newUser = authRepo.CreateUserAuth(new AppUser              {                  Id = 3'                  DisplayName = "Admin User"'                  Email = "admin@gmail.com"'                  FirstName = "Admin"'                  LastName = "Super User"'              }' "p@55wOrd");
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryQueryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryQueryTests.cs,Can_QueryUserAuth_GetUserAuths,The following statement contains a magic number: Assert.That(allUsers.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryQueryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryQueryTests.cs,Can_QueryUserAuth_GetUserAuths,The following statement contains a magic number: Assert.That(allUsers.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryQueryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryQueryTests.cs,Can_QueryUserAuth_GetUserAuths,The following statement contains a magic number: allUsers = authRepo.GetUserAuths(take:2);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryQueryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryQueryTests.cs,Can_QueryUserAuth_GetUserAuths,The following statement contains a magic number: Assert.That(allUsers.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryQueryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryQueryTests.cs,Can_QueryUserAuth_GetUserAuths,The following statement contains a magic number: allUsers = authRepo.GetUserAuths(skip:1'take:2);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryQueryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryQueryTests.cs,Can_QueryUserAuth_GetUserAuths,The following statement contains a magic number: Assert.That(allUsers.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryQueryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryQueryTests.cs,Can_QueryUserAuth_GetUserAuths_OrderBy,The following statement contains a magic number: Assert.That(allUsers.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryQueryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryQueryTests.cs,Can_QueryUserAuth_GetUserAuths_OrderBy,The following statement contains a magic number: Assert.That(allUsers.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryQueryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryQueryTests.cs,Can_QueryUserAuth_GetUserAuths_OrderBy,The following statement contains a magic number: Assert.That(allUsers.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryQueryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryQueryTests.cs,Can_QueryUserAuth_GetUserAuths_OrderBy,The following statement contains a magic number: Assert.That(allUsers.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryQueryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryQueryTests.cs,Can_QueryUserAuth_GetUserAuths_OrderBy,The following statement contains a magic number: Assert.That(allUsers.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryQueryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryQueryTests.cs,Can_QueryUserAuth_SearchUserAuths,The following statement contains a magic number: Assert.That(allUsers.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryQueryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryQueryTests.cs,Can_QueryUserAuth_SearchUserAuths,The following statement contains a magic number: Assert.That(allUsers.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryQueryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryQueryTests.cs,Can_QueryUserAuth_SearchUserAuths,The following statement contains a magic number: allUsers = authRepo.SearchUserAuths(query:"gmail.com"'take:2);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryQueryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryQueryTests.cs,Can_QueryUserAuth_SearchUserAuths,The following statement contains a magic number: Assert.That(allUsers.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryQueryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryQueryTests.cs,Can_QueryUserAuth_SearchUserAuths,The following statement contains a magic number: allUsers = authRepo.SearchUserAuths(query:"gmail.com"'skip:1'take:2);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryQueryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryQueryTests.cs,Can_QueryUserAuth_SearchUserAuths,The following statement contains a magic number: Assert.That(allUsers.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AuthRepositoryQueryTestsBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthRepositoryQueryTests.cs,Can_QueryUserAuth_SearchUserAuths,The following statement contains a magic number: Assert.That(allUsers.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AuthAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthTests.cs,Configure,The following statement contains a magic number: CreateUser(2' AuthTests.UserNameWithSessionRedirect' null' AuthTests.PasswordForSessionRedirect);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AuthAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthTests.cs,Configure,The following statement contains a magic number: CreateUser(3' null' AuthTests.EmailBasedUsername' AuthTests.PasswordForEmailBasedAccount);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AuthTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthTests.cs,PostFileWithRequest_does_work_with_BasicAuth,The following statement contains a magic number: var request = new SecuredFileUpload { CustomerId = 123' CustomerName = "Foo" };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AuthTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthTests.cs,PostFileWithRequest_does_work_with_BasicAuth,The following statement contains a magic number: Assert.That(response.CustomerId' Is.EqualTo(123));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AuthTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthTests.cs,Does_work_with_CredentailsAuth_Multiple_Times,The following statement contains a magic number: i < 10
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AuthTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthTests.cs,Does_generate_new_SessionCookies_when_Authenticating_multiple_times,The following statement contains a magic number: 3.Times(x =>              {                  var authResponse = client.Send(new Authenticate                  {                      provider = CredentialsAuthProvider.Name'                      UserName = "user"'                      Password = "p@55word"'                      RememberMe = true'                  });                    var permId = client.GetCookieValues()[SessionFeature.PermanentSessionId];                  Assert.That(permId' Is.Not.EqualTo(lastPermId));                    var ssOpt = client.GetCookieValues()[SessionFeature.SessionOptionsKey];                  Assert.That(ssOpt' Is.Not.Null);                    lastPermId = permId;              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AuthTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthTests.cs,Does_retain_Session_after_authenticating_multiple_times,The following statement contains a magic number: 3.Times(x =>              {                  var authResponse = client.Send(new Authenticate                  {                      provider = CredentialsAuthProvider.Name'                      UserName = "user"'                      Password = "p@55word"'                      RememberMe = true'                  });                    var customSession = client.Send(new IncrSession { By = 1 });                  Assert.That(customSession.Counter'                      lastSession == null ? Is.EqualTo(1) : Is.EqualTo(lastSession.Counter + 1));                    lastSession = customSession;              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AuthTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AuthTests.cs,Does_retain_Session_after_authenticating_multiple_times,The following statement contains a magic number: Assert.That(lastSession.Counter' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataServiceTests.cs,Can_call_overidden_AutoQueryData_Service_with_custom_MemorySource,The following statement contains a magic number: Assert.That(response.Results[0].RockstarId' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataServiceTests.cs,Does_Cache_third_party_api_ServiceSource,The following statement contains a magic number: Assert.That(response.Results.Count' Is.GreaterThan(20));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataServiceTests.cs,Does_Cache_third_party_api_ServiceSource,The following statement contains a magic number: Assert.That(response.Results.Count' Is.LessThan(20));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataServiceTests.cs,Does_Cache_third_party_api_ServiceSource,The following statement contains a magic number: Assert.That(response.Results[0].Watchers_Count' Is.GreaterThan(3000));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataServiceTests.cs,Does_Cache_third_party_api_ServiceSource,The following statement contains a magic number: Assert.That(response.Results.Count' Is.GreaterThan(20));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataServiceTests.cs,Does_Cache_third_party_api_ServiceSource,The following statement contains a magic number: Assert.That(GetGithubRepos.ApiCalls' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataServiceTests.cs,Does_Cache_third_party_api_ServiceSource,The following statement contains a magic number: response = client.Get(new QueryGitHubRepos { User = "mythz"'                  DescriptionContains = "101 LINQ Samples"'                  Take = 4'                  OrderBy = "Name"'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataServiceTests.cs,Does_Cache_third_party_api_ServiceSource,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataServiceTests.cs,Does_Cache_third_party_api_ServiceSource,The following statement contains a magic number: Assert.That(GetGithubRepos.ApiCalls' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataServiceTests.cs,Does_Cache_MemorySource,The following statement contains a magic number: response = client.Get(new QueryServiceStackContributors              {                  Repo = "ServiceStack"'                  Take = 20'                  Include = "Total"              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataServiceTests.cs,Does_Cache_MemorySource,The following statement contains a magic number: Assert.That(response.Total' Is.GreaterThan(20));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataServiceTests.cs,Does_Cache_MemorySource,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(20));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataServiceTests.cs,Does_Cache_MemorySource,The following statement contains a magic number: response = client.Get(new QueryServiceStackContributors              {                  Repo = "ServiceStack"'                  ContributionsAbove = 10'                  Fields = "Login'Contributions"              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataServiceTests.cs,Does_Cache_MemorySource,The following statement contains a magic number: Assert.That(response.Results.Count' Is.GreaterThan(10));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataServiceTests.cs,Does_Cache_MemorySource,The following statement contains a magic number: Assert.That(response.Results.All(c => c.Contributions > 10));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Configure,The following statement contains a magic number: Plugins.Add(new AutoQueryDataFeature                  {                      MaxLimit = 100'                      ResponseFilters = {                          ctx => {                              var executedCmds = new List<Command>();                              var supportedFns = new Dictionary<string' Func<int' int' int>>(StringComparer.OrdinalIgnoreCase)                              {                                  {"ADD"'      (a'b) => a + b }'                                  {"MULTIPLY"' (a'b) => a * b }'                                  {"DIVIDE"'   (a'b) => a / b }'                                  {"SUBTRACT"' (a'b) => a - b }'                              };                              foreach (var cmd in ctx.Commands)                              {                                  if (!supportedFns.TryGetValue(cmd.Name' out var fn)) continue;                                  var label = !cmd.Suffix.IsNullOrWhiteSpace() ? cmd.Suffix.Trim().ToString() : cmd.ToString();                                  ctx.Response.Meta[label] = fn(cmd.Args[0].ParseInt32()' cmd.Args[1].ParseInt32()).ToString();                                  executedCmds.Add(cmd);                              }                              ctx.Commands.RemoveAll(executedCmds.Contains);                          }                      }                  }                  .AddDataSource(ctx => ctx.MemorySource(SeedRockstars))                  .AddDataSource(ctx => ctx.MemorySource(SeedAlbums))                  .AddDataSource(ctx => ctx.MemorySource(SeedGenres))                  .AddDataSource(ctx => ctx.MemorySource(SeedAdhoc))                  .AddDataSource(ctx => ctx.MemorySource(SeedMovies))                  .AddDataSource(ctx => ctx.MemorySource(SeedAllFields))                  .AddDataSource(ctx => ctx.MemorySource(SeedPagingTest))                  .RegisterQueryFilter<QueryDataRockstarsFilter>((q' dto' req) =>                      q.And<Rockstar>(x => x.LastName' new EndsWithCondition()' "son")                  )                  .RegisterQueryFilter<QueryDataCustomRockstarsFilter>((q' dto' req) =>                      q.And<Rockstar>(x => x.LastName' new EndsWithCondition()' "son")                  )                  .RegisterQueryFilter<IFilterRockstars>((q' dto' req) =>                      q.And<Rockstar>(x => x.LastName' new EndsWithCondition()' "son")                  )              );
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_Adhoc_query_convention,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(7));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_explicit_equality_condition_on_overridden_CustomRockstar,The following statement contains a magic number: var response = client.Get(new QueryDataOverridedCustomRockstars { Age = 27' Include = "Total" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_explicit_equality_condition_on_overridden_CustomRockstar,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_basic_query_with_limits,The following statement contains a magic number: var response = client.Get(new QueryDataRockstars { Skip = 2' Include = "Total" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_basic_query_with_limits,The following statement contains a magic number: Assert.That(response.Offset' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_basic_query_with_limits,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(TotalRockstars - 2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_basic_query_with_limits,The following statement contains a magic number: response = client.Get(new QueryDataRockstars { Take = 2' Include = "Total" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_basic_query_with_limits,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_basic_query_with_limits,The following statement contains a magic number: response = client.Get(new QueryDataRockstars { Skip = 2' Take = 2' Include = "Total" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_basic_query_with_limits,The following statement contains a magic number: response = client.Get(new QueryDataRockstars { Skip = 2' Take = 2' Include = "Total" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_basic_query_with_limits,The following statement contains a magic number: Assert.That(response.Offset' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_basic_query_with_limits,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_explicit_equality_condition,The following statement contains a magic number: var response = client.Get(new QueryDataRockstars { Age = 27' Include = "Total" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_explicit_equality_condition,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_explicit_equality_condition,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_explicit_equality_condition_on_CustomRockstar,The following statement contains a magic number: var response = client.Get(new QueryDataCustomRockstars { Age = 27' Include = "Total" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_explicit_equality_condition_on_CustomRockstar,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_explicit_equality_condition_on_CustomRockstar,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_implicit_IsNull_condition,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_implicit_IsNull_condition,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_custom_QueryFields,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_custom_QueryFields,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_custom_QueryFields,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_custom_QueryFields,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_custom_QueryFields,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_custom_QueryFields,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_custom_QueryFields,The following statement contains a magic number: response = client.Get(new QueryDataFieldRockstars { Age = 42 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_custom_QueryFields,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_combination_of_QueryFields,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Does_allow_adding_attributes_dynamically,The following statement contains a magic number: var response = client.Get(new QueryDataFieldRockstarsDynamic { Age = 42 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Does_allow_adding_attributes_dynamically,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Does_execute_typed_QueryFilters,The following statement contains a magic number: var response = client.Get(new QueryDataRockstarsFilter { Age = 27 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Does_execute_typed_QueryFilters,The following statement contains a magic number: var custom = client.Get(new QueryDataCustomRockstarsFilter { Age = 27 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Does_execute_typed_QueryFilters,The following statement contains a magic number: response = client.Get(new QueryDataRockstarsIFilter { Age = 27 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_OR_QueryFilters,The following statement contains a magic number: var response = client.Get(new QueryDataOrRockstars { Age = 42' FirstName = "Jim" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_OR_QueryFilters,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_OR_QueryFilters,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_OR_QueryFilters_Fields,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_OR_QueryFilters_Fields,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: var response = baseUrl.AddQueryParam("AgeOlderThan"' 42).AsJsonInto<Rockstar>();
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: response = baseUrl.AddQueryParam("AgeGreaterThanOrEqualTo"' 42).AsJsonInto<Rockstar>();
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: response = baseUrl.AddQueryParam("AgeGreaterThan"' 42).AsJsonInto<Rockstar>();
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: response = baseUrl.AddQueryParam("GreaterThanAge"' 42).AsJsonInto<Rockstar>();
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: response = baseUrl.AddQueryParam("AgeNotEqualTo"' 27).AsJsonInto<Rockstar>();
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: response = baseUrl.AddQueryParam(">Age"' 42).AsJsonInto<Rockstar>();
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: response = baseUrl.AddQueryParam("Age>"' 42).AsJsonInto<Rockstar>();
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: response = baseUrl.AddQueryParam("<Age"' 42).AsJsonInto<Rockstar>();
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: response = baseUrl.AddQueryParam("Age<"' 42).AsJsonInto<Rockstar>();
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: response = client.Get(new QueryDataRockstarsConventions { Ids = new[] { 1' 2' 3 } });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: response = client.Get(new QueryDataRockstarsConventions { Ids = new[] { 1' 2' 3 } });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: response = client.Get(new QueryDataRockstarsConventions { AgeOlderThan = 42 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: response = client.Get(new QueryDataRockstarsConventions { AgeGreaterThanOrEqualTo = 42 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: response = client.Get(new QueryDataRockstarsConventions { AgeGreaterThan = 42 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: response = client.Get(new QueryDataRockstarsConventions { GreaterThanAge = 42 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: response = client.Get(new QueryDataRockstarsConventions { DateOfBirthGreaterThan = new DateTime(1960' 01' 01) });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: response = client.Get(new QueryDataRockstarsConventions { DateDiedLessThan = new DateTime(1980' 01' 01) });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_In_OR_Queries,The following statement contains a magic number: response = client.Get(new QueryDataGetRockstars { Ids = new[] { 1' 2' 3 } });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_In_OR_Queries,The following statement contains a magic number: response = client.Get(new QueryDataGetRockstars { Ids = new[] { 1' 2' 3 } });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_In_OR_Queries,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_In_OR_Queries,The following statement contains a magic number: response = client.Get(new QueryDataGetRockstars { Ages = new[] { 42' 44 }.ToList() });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_In_OR_Queries,The following statement contains a magic number: response = client.Get(new QueryDataGetRockstars { Ages = new[] { 42' 44 }.ToList() });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_In_OR_Queries,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_In_OR_Queries,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_In_OR_Queries,The following statement contains a magic number: response = client.Get(new QueryDataGetRockstars { IdsBetween = new[] { 1' 3 } });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_In_OR_Queries,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_In_OR_Queries_with_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_In_OR_Queries_with_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_In_OR_Queries_with_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_execute_In_OR_Queries_with_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_query_Movie_Ratings,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_query_Movie_Ratings,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_query_Movie_Ratings,The following statement contains a magic number: response = client.Get(new QueryDataMovies              {                  Ids = new[] { 1' 2 }'                  ImdbIds = new[] { "tt0071562"' "tt0060196" }'                  Ratings = new[] { "G"' "PG-13" }              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_query_Movie_Ratings,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(9));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_query_Movie_Ratings,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(9));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_StreamMovies,The following statement contains a magic number: Assert.That(results.Count' Is.EqualTo(10));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_StreamMovies,The following statement contains a magic number: Assert.That(results.Count' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Does_implicitly_OrderBy_PrimaryKey_when_limits_is_specified,The following statement contains a magic number: var movies = client.Get(new SearchDataMovies { Take = 100 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Does_implicitly_OrderBy_PrimaryKey_when_limits_is_specified,The following statement contains a magic number: var rockstars = client.Get(new SearchDataMovies { Take = 100 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_OrderBy_queries,The following statement contains a magic number: var movies = client.Get(new SearchDataMovies { Take = 100' OrderBy = "ImdbId" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_OrderBy_queries,The following statement contains a magic number: movies = client.Get(new SearchDataMovies { Take = 100' OrderBy = "Rating'ImdbId" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_OrderBy_queries,The following statement contains a magic number: movies = client.Get(new SearchDataMovies { Take = 100' OrderByDesc = "ImdbId" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_OrderBy_queries,The following statement contains a magic number: movies = client.Get(new SearchDataMovies { Take = 100' OrderByDesc = "Rating'ImdbId" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_OrderBy_queries,The following statement contains a magic number: movies = client.Get(new SearchDataMovies { Take = 100' OrderBy = "Rating'-ImdbId" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_OrderBy_queries,The following statement contains a magic number: movies = client.Get(new SearchDataMovies { Take = 100' OrderByDesc = "Rating'-ImdbId" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Does_populate_Total,The following statement contains a magic number: response = client.Get(new QueryDataRockstars { Age = 27' Include = "Count(*)' Min(Age)' Max(Age)' Sum(Id)" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Does_populate_Total,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(Rockstars.Count(x => x.Age == 27)));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_Include_Aggregates_in_AutoQuery,The following statement contains a magic number: response = client.Get(new QueryDataRockstars { Age = 27' Include = "Count(*)' Min(Age)' Max(Age)' Sum(Id)' Avg(Age)' First(Id)' Last(Id)"' OrderBy = "Id" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_Include_Aggregates_in_AutoQuery,The following statement contains a magic number: var rockstars27 = Rockstars.Where(x => x.Age == 27).ToList();
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Does_return_MaxLimit_results,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(100));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Does_return_MaxLimit_results,The following statement contains a magic number: response = client.Get(new QueryDataPagingTest { Skip = 200' Include = "Total" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Does_return_MaxLimit_results,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(PagingTests.Skip(200).Count()));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Does_return_MaxLimit_results,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(100));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: response = client.Get(new QueryDataRockstarAlbums { RockstarId = 3' Include = "Total" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: response = client.Get(new QueryDataRockstarAlbums { RockstarId = 3' Id = 3' Include = "Total" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: response = client.Get(new QueryDataRockstarAlbums { RockstarId = 3' Id = 3' Include = "Total" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: response = client.Get(new QueryDataRockstarAlbums              {                  RockstarId = 3'                  IdBetween = new[] { 2' 3 }'                  Include = "Total"              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: response = client.Get(new QueryDataRockstarAlbums              {                  RockstarId = 3'                  IdBetween = new[] { 2' 3 }'                  Include = "Total"              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: response = client.Get(new QueryDataRockstarAlbums              {                  RockstarId = 3'                  IdBetween = new[] { 2' 3 }'                  Include = "Total"              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: response = client.Get(new QueryDataRockstarAlbums              {                  RockstarId = 3'                  IdBetween = new[] { 2' 3 }'                  Name = "Nevermind"'                  Include = "Total"              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: response = client.Get(new QueryDataRockstarAlbums              {                  RockstarId = 3'                  IdBetween = new[] { 2' 3 }'                  Name = "Nevermind"'                  Include = "Total"              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: response = client.Get(new QueryDataRockstarAlbums              {                  RockstarId = 3'                  IdBetween = new[] { 2' 3 }'                  Name = "Nevermind"'                  Include = "Total"              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: Assert.That(response.Results[0].Id' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: response = client.Get(new QueryDataRockstarAlbums { RockstarId = 3' Genre = "Grunge"' Include = "Total" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Does_perform_QUERY_operation_when_querying_hash_key,The following statement contains a magic number: var response = client.Get(new QueryDataRockstarAlbums              {                  RockstarId = 3'                  Genre = "Grunge"'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Does_perform_QUERY_operation_when_querying_hash_key,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Does_perform_QUERY_operation_when_querying_hash_key,The following statement contains a magic number: Assert.That(response.Results.Map(x => x.RockstarId).Distinct()'                  Is.EquivalentTo(new[] { 3 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Does_perform_SCAN_operation_when_not_querying_hash_key,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Does_perform_SCAN_operation_when_not_querying_hash_key,The following statement contains a magic number: Assert.That(response.Results.Map(x => x.RockstarId).Distinct()'                  Is.EquivalentTo(new[] { 3' 5 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Does_perform_SCAN_operation_when_not_querying_hash_key,The following statement contains a magic number: Assert.That(response.Results.Map(x => x.RockstarId).Distinct()'                  Is.EquivalentTo(new[] { 3' 5 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_query_on_ForeignKey_and_RockstarAlbumGenreIndex,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_query_on_ForeignKey_and_RockstarAlbumGenreIndex,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_query_on_ForeignKey_and_RockstarAlbumGenreIndex,The following statement contains a magic number: response = client.Get(new QueryDataRockstarAlbumGenreIndex { Genre = "Grunge"' Id = 3' Include = "Total" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_query_on_ForeignKey_and_RockstarAlbumGenreIndex,The following statement contains a magic number: response = client.Get(new QueryDataRockstarAlbumGenreIndex              {                  Genre = "Grunge"'                  IdBetween = new[] { 2' 3 }'                  Include = "Total"              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_query_on_ForeignKey_and_RockstarAlbumGenreIndex,The following statement contains a magic number: response = client.Get(new QueryDataRockstarAlbumGenreIndex              {                  Genre = "Grunge"'                  IdBetween = new[] { 2' 3 }'                  Include = "Total"              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_query_on_ForeignKey_and_RockstarAlbumGenreIndex,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_query_on_ForeignKey_and_RockstarAlbumGenreIndex,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_query_on_ForeignKey_and_RockstarAlbumGenreIndex,The following statement contains a magic number: response = client.Get(new QueryDataRockstarAlbumGenreIndex              {                  Genre = "Grunge"'                  IdBetween = new[] { 2' 3 }'                  Name = "Nevermind"'                  Include = "Total"              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_query_on_ForeignKey_and_RockstarAlbumGenreIndex,The following statement contains a magic number: response = client.Get(new QueryDataRockstarAlbumGenreIndex              {                  Genre = "Grunge"'                  IdBetween = new[] { 2' 3 }'                  Name = "Nevermind"'                  Include = "Total"              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_query_on_ForeignKey_and_RockstarAlbumGenreIndex,The following statement contains a magic number: Assert.That(response.Results[0].Id' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_query_on_ForeignKey_and_RockstarAlbumGenreIndex_Mapped,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_query_on_ForeignKey_and_RockstarAlbumGenreIndex_Mapped,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_query_on_ForeignKey_and_RockstarAlbumGenreIndex_Mapped,The following statement contains a magic number: response = client.Get(new QueryDataRockstarAlbumGenreIndexMapped { Genre = "Grunge"' Id = 3' Include = "Total" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_query_on_ForeignKey_and_RockstarAlbumGenreIndex_Mapped,The following statement contains a magic number: response = client.Get(new QueryDataRockstarAlbumGenreIndexMapped              {                  Genre = "Grunge"'                  IdBetween = new[] { 2' 3 }'                  Include = "Total"              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_query_on_ForeignKey_and_RockstarAlbumGenreIndex_Mapped,The following statement contains a magic number: response = client.Get(new QueryDataRockstarAlbumGenreIndexMapped              {                  Genre = "Grunge"'                  IdBetween = new[] { 2' 3 }'                  Include = "Total"              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_query_on_ForeignKey_and_RockstarAlbumGenreIndex_Mapped,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_query_on_ForeignKey_and_RockstarAlbumGenreIndex_Mapped,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_query_on_ForeignKey_and_RockstarAlbumGenreIndex_Mapped,The following statement contains a magic number: response = client.Get(new QueryDataRockstarAlbumGenreIndexMapped              {                  Genre = "Grunge"'                  IdBetween = new[] { 2' 3 }'                  Name = "Nevermind"'                  Include = "Total"              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_query_on_ForeignKey_and_RockstarAlbumGenreIndex_Mapped,The following statement contains a magic number: response = client.Get(new QueryDataRockstarAlbumGenreIndexMapped              {                  Genre = "Grunge"'                  IdBetween = new[] { 2' 3 }'                  Name = "Nevermind"'                  Include = "Total"              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_query_on_ForeignKey_and_RockstarAlbumGenreIndex_Mapped,The following statement contains a magic number: Assert.That(response.Results[0].Id' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_query_MovieTitleIndex_Ratings,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_query_MovieTitleIndex_Ratings,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_query_MovieTitleIndex_Ratings,The following statement contains a magic number: response = client.Get(new QueryDataMovieTitleIndex              {                  Ids = new[] { 1' 2 }'                  ImdbIds = new[] { "tt0071562"' "tt0060196" }'                  Ratings = new[] { "G"' "PG-13" }              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_query_MovieTitleIndex_Ratings,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(9));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_query_MovieTitleIndex_Ratings,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(9));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Does_implicitly_OrderBy_PrimaryKey_when_limits_is_specified_SearchDataMovieTitleIndex,The following statement contains a magic number: var movies = client.Get(new SearchDataMovieTitleIndex { Take = 100 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Does_implicitly_OrderBy_PrimaryKey_when_limits_is_specified_SearchDataMovieTitleIndex,The following statement contains a magic number: var rockstars = client.Get(new SearchDataMovieTitleIndex { Take = 100 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_OrderBy_queries_SearchDataMovieTitleIndex,The following statement contains a magic number: var movies = client.Get(new SearchDataMovieTitleIndex { Take = 100' OrderBy = "ImdbId" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_OrderBy_queries_SearchDataMovieTitleIndex,The following statement contains a magic number: movies = client.Get(new SearchDataMovieTitleIndex { Take = 100' OrderBy = "Rating'ImdbId" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_OrderBy_queries_SearchDataMovieTitleIndex,The following statement contains a magic number: movies = client.Get(new SearchDataMovieTitleIndex { Take = 100' OrderByDesc = "ImdbId" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_OrderBy_queries_SearchDataMovieTitleIndex,The following statement contains a magic number: movies = client.Get(new SearchDataMovieTitleIndex { Take = 100' OrderByDesc = "Rating'ImdbId" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_OrderBy_queries_SearchDataMovieTitleIndex,The following statement contains a magic number: movies = client.Get(new SearchDataMovieTitleIndex { Take = 100' OrderBy = "Rating'-ImdbId" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Can_OrderBy_queries_SearchDataMovieTitleIndex,The following statement contains a magic number: movies = client.Get(new SearchDataMovieTitleIndex { Take = 100' OrderByDesc = "Rating'-ImdbId" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Cached_DynamoQuery_does_cached_duplicate_requests_when_MaxAge,The following statement contains a magic number: response = client.Get(new QueryCacheMaxAgeDataRockstars { Age = 27 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Cached_DynamoQuery_does_cached_duplicate_requests_when_MaxAge,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(Rockstars.Count(x => x.Age == 27)));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Cached_DynamoQuery_does_cached_duplicate_requests_when_MaxAge_Custom_Cached,The following statement contains a magic number: response = client.Get(new CustomQueryCacheMaxAgeDataRockstars { Age = 27 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Cached_DynamoQuery_does_cached_duplicate_requests_when_MaxAge_Custom_Cached,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(Rockstars.Count(x => x.Age == 27)));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Cached_DynamoQuery_does_return_NotModified_when_MustRevalidate,The following statement contains a magic number: response = client.Get(new QueryCacheMustRevalidateDataRockstars { Age = 27 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryDataDynamoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryDataTests.Dynamo.cs,Cached_DynamoQuery_does_return_NotModified_when_MustRevalidate,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(Rockstars.Count(x => x.Age == 27)));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new NamedRockstar {                      Id = 1'                      FirstName = "Microsoft"'                      LastName = "SQL Server"'                      Age = 27'                      DateOfBirth = new DateTime(1989'1'1)'                      LivingStatus = LivingStatus.Alive'                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new NamedRockstar {                      Id = 1'                      FirstName = "Microsoft"'                      LastName = "SQL Server"'                      Age = 27'                      DateOfBirth = new DateTime(1989'1'1)'                      LivingStatus = LivingStatus.Alive'                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new Rockstar {                      Id = 1'                      FirstName = "Sqlite"'                      LastName = "File DB"'                      Age = 16'                      DateOfBirth = new DateTime(2000' 8' 1)'                      LivingStatus = LivingStatus.Alive'                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new Rockstar {                      Id = 1'                      FirstName = "Sqlite"'                      LastName = "File DB"'                      Age = 16'                      DateOfBirth = new DateTime(2000' 8' 1)'                      LivingStatus = LivingStatus.Alive'                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new Rockstar {                      Id = 1'                      FirstName = "Sqlite"'                      LastName = "File DB"'                      Age = 16'                      DateOfBirth = new DateTime(2000' 8' 1)'                      LivingStatus = LivingStatus.Alive'                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new AllFields                  {                      Id = 1'                      NullableId = 2'                      Byte = 3'                      DateTime = new DateTime(2001' 01' 01)'                      NullableDateTime = new DateTime(2002' 02' 02)'                      Decimal = 4'                      Double = 5.5'                      Float = 6.6f'                      Guid = new Guid("3EE6865A-4149-4940-B7A2-F952E0FEFC5E")'                      NullableGuid = new Guid("7A2FDDD8-4BB0-4735-8230-A6AC79088489")'                      Long = 7'                      Short = 8'                      String = "string"'                      TimeSpan = TimeSpan.FromHours(1)'                      NullableTimeSpan = TimeSpan.FromDays(1)'                      UInt = 9'                      ULong = 10'                      UShort = 11'                      Enum = HttpStatusCode.MethodNotAllowed'                      NullableEnum = HttpStatusCode.MethodNotAllowed'                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new AllFields                  {                      Id = 1'                      NullableId = 2'                      Byte = 3'                      DateTime = new DateTime(2001' 01' 01)'                      NullableDateTime = new DateTime(2002' 02' 02)'                      Decimal = 4'                      Double = 5.5'                      Float = 6.6f'                      Guid = new Guid("3EE6865A-4149-4940-B7A2-F952E0FEFC5E")'                      NullableGuid = new Guid("7A2FDDD8-4BB0-4735-8230-A6AC79088489")'                      Long = 7'                      Short = 8'                      String = "string"'                      TimeSpan = TimeSpan.FromHours(1)'                      NullableTimeSpan = TimeSpan.FromDays(1)'                      UInt = 9'                      ULong = 10'                      UShort = 11'                      Enum = HttpStatusCode.MethodNotAllowed'                      NullableEnum = HttpStatusCode.MethodNotAllowed'                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new AllFields                  {                      Id = 1'                      NullableId = 2'                      Byte = 3'                      DateTime = new DateTime(2001' 01' 01)'                      NullableDateTime = new DateTime(2002' 02' 02)'                      Decimal = 4'                      Double = 5.5'                      Float = 6.6f'                      Guid = new Guid("3EE6865A-4149-4940-B7A2-F952E0FEFC5E")'                      NullableGuid = new Guid("7A2FDDD8-4BB0-4735-8230-A6AC79088489")'                      Long = 7'                      Short = 8'                      String = "string"'                      TimeSpan = TimeSpan.FromHours(1)'                      NullableTimeSpan = TimeSpan.FromDays(1)'                      UInt = 9'                      ULong = 10'                      UShort = 11'                      Enum = HttpStatusCode.MethodNotAllowed'                      NullableEnum = HttpStatusCode.MethodNotAllowed'                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new AllFields                  {                      Id = 1'                      NullableId = 2'                      Byte = 3'                      DateTime = new DateTime(2001' 01' 01)'                      NullableDateTime = new DateTime(2002' 02' 02)'                      Decimal = 4'                      Double = 5.5'                      Float = 6.6f'                      Guid = new Guid("3EE6865A-4149-4940-B7A2-F952E0FEFC5E")'                      NullableGuid = new Guid("7A2FDDD8-4BB0-4735-8230-A6AC79088489")'                      Long = 7'                      Short = 8'                      String = "string"'                      TimeSpan = TimeSpan.FromHours(1)'                      NullableTimeSpan = TimeSpan.FromDays(1)'                      UInt = 9'                      ULong = 10'                      UShort = 11'                      Enum = HttpStatusCode.MethodNotAllowed'                      NullableEnum = HttpStatusCode.MethodNotAllowed'                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new AllFields                  {                      Id = 1'                      NullableId = 2'                      Byte = 3'                      DateTime = new DateTime(2001' 01' 01)'                      NullableDateTime = new DateTime(2002' 02' 02)'                      Decimal = 4'                      Double = 5.5'                      Float = 6.6f'                      Guid = new Guid("3EE6865A-4149-4940-B7A2-F952E0FEFC5E")'                      NullableGuid = new Guid("7A2FDDD8-4BB0-4735-8230-A6AC79088489")'                      Long = 7'                      Short = 8'                      String = "string"'                      TimeSpan = TimeSpan.FromHours(1)'                      NullableTimeSpan = TimeSpan.FromDays(1)'                      UInt = 9'                      ULong = 10'                      UShort = 11'                      Enum = HttpStatusCode.MethodNotAllowed'                      NullableEnum = HttpStatusCode.MethodNotAllowed'                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new AllFields                  {                      Id = 1'                      NullableId = 2'                      Byte = 3'                      DateTime = new DateTime(2001' 01' 01)'                      NullableDateTime = new DateTime(2002' 02' 02)'                      Decimal = 4'                      Double = 5.5'                      Float = 6.6f'                      Guid = new Guid("3EE6865A-4149-4940-B7A2-F952E0FEFC5E")'                      NullableGuid = new Guid("7A2FDDD8-4BB0-4735-8230-A6AC79088489")'                      Long = 7'                      Short = 8'                      String = "string"'                      TimeSpan = TimeSpan.FromHours(1)'                      NullableTimeSpan = TimeSpan.FromDays(1)'                      UInt = 9'                      ULong = 10'                      UShort = 11'                      Enum = HttpStatusCode.MethodNotAllowed'                      NullableEnum = HttpStatusCode.MethodNotAllowed'                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new AllFields                  {                      Id = 1'                      NullableId = 2'                      Byte = 3'                      DateTime = new DateTime(2001' 01' 01)'                      NullableDateTime = new DateTime(2002' 02' 02)'                      Decimal = 4'                      Double = 5.5'                      Float = 6.6f'                      Guid = new Guid("3EE6865A-4149-4940-B7A2-F952E0FEFC5E")'                      NullableGuid = new Guid("7A2FDDD8-4BB0-4735-8230-A6AC79088489")'                      Long = 7'                      Short = 8'                      String = "string"'                      TimeSpan = TimeSpan.FromHours(1)'                      NullableTimeSpan = TimeSpan.FromDays(1)'                      UInt = 9'                      ULong = 10'                      UShort = 11'                      Enum = HttpStatusCode.MethodNotAllowed'                      NullableEnum = HttpStatusCode.MethodNotAllowed'                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new AllFields                  {                      Id = 1'                      NullableId = 2'                      Byte = 3'                      DateTime = new DateTime(2001' 01' 01)'                      NullableDateTime = new DateTime(2002' 02' 02)'                      Decimal = 4'                      Double = 5.5'                      Float = 6.6f'                      Guid = new Guid("3EE6865A-4149-4940-B7A2-F952E0FEFC5E")'                      NullableGuid = new Guid("7A2FDDD8-4BB0-4735-8230-A6AC79088489")'                      Long = 7'                      Short = 8'                      String = "string"'                      TimeSpan = TimeSpan.FromHours(1)'                      NullableTimeSpan = TimeSpan.FromDays(1)'                      UInt = 9'                      ULong = 10'                      UShort = 11'                      Enum = HttpStatusCode.MethodNotAllowed'                      NullableEnum = HttpStatusCode.MethodNotAllowed'                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new AllFields                  {                      Id = 1'                      NullableId = 2'                      Byte = 3'                      DateTime = new DateTime(2001' 01' 01)'                      NullableDateTime = new DateTime(2002' 02' 02)'                      Decimal = 4'                      Double = 5.5'                      Float = 6.6f'                      Guid = new Guid("3EE6865A-4149-4940-B7A2-F952E0FEFC5E")'                      NullableGuid = new Guid("7A2FDDD8-4BB0-4735-8230-A6AC79088489")'                      Long = 7'                      Short = 8'                      String = "string"'                      TimeSpan = TimeSpan.FromHours(1)'                      NullableTimeSpan = TimeSpan.FromDays(1)'                      UInt = 9'                      ULong = 10'                      UShort = 11'                      Enum = HttpStatusCode.MethodNotAllowed'                      NullableEnum = HttpStatusCode.MethodNotAllowed'                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new AllFields                  {                      Id = 1'                      NullableId = 2'                      Byte = 3'                      DateTime = new DateTime(2001' 01' 01)'                      NullableDateTime = new DateTime(2002' 02' 02)'                      Decimal = 4'                      Double = 5.5'                      Float = 6.6f'                      Guid = new Guid("3EE6865A-4149-4940-B7A2-F952E0FEFC5E")'                      NullableGuid = new Guid("7A2FDDD8-4BB0-4735-8230-A6AC79088489")'                      Long = 7'                      Short = 8'                      String = "string"'                      TimeSpan = TimeSpan.FromHours(1)'                      NullableTimeSpan = TimeSpan.FromDays(1)'                      UInt = 9'                      ULong = 10'                      UShort = 11'                      Enum = HttpStatusCode.MethodNotAllowed'                      NullableEnum = HttpStatusCode.MethodNotAllowed'                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new AllFields                  {                      Id = 1'                      NullableId = 2'                      Byte = 3'                      DateTime = new DateTime(2001' 01' 01)'                      NullableDateTime = new DateTime(2002' 02' 02)'                      Decimal = 4'                      Double = 5.5'                      Float = 6.6f'                      Guid = new Guid("3EE6865A-4149-4940-B7A2-F952E0FEFC5E")'                      NullableGuid = new Guid("7A2FDDD8-4BB0-4735-8230-A6AC79088489")'                      Long = 7'                      Short = 8'                      String = "string"'                      TimeSpan = TimeSpan.FromHours(1)'                      NullableTimeSpan = TimeSpan.FromDays(1)'                      UInt = 9'                      ULong = 10'                      UShort = 11'                      Enum = HttpStatusCode.MethodNotAllowed'                      NullableEnum = HttpStatusCode.MethodNotAllowed'                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new AllFields                  {                      Id = 1'                      NullableId = 2'                      Byte = 3'                      DateTime = new DateTime(2001' 01' 01)'                      NullableDateTime = new DateTime(2002' 02' 02)'                      Decimal = 4'                      Double = 5.5'                      Float = 6.6f'                      Guid = new Guid("3EE6865A-4149-4940-B7A2-F952E0FEFC5E")'                      NullableGuid = new Guid("7A2FDDD8-4BB0-4735-8230-A6AC79088489")'                      Long = 7'                      Short = 8'                      String = "string"'                      TimeSpan = TimeSpan.FromHours(1)'                      NullableTimeSpan = TimeSpan.FromDays(1)'                      UInt = 9'                      ULong = 10'                      UShort = 11'                      Enum = HttpStatusCode.MethodNotAllowed'                      NullableEnum = HttpStatusCode.MethodNotAllowed'                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new AllFields                  {                      Id = 1'                      NullableId = 2'                      Byte = 3'                      DateTime = new DateTime(2001' 01' 01)'                      NullableDateTime = new DateTime(2002' 02' 02)'                      Decimal = 4'                      Double = 5.5'                      Float = 6.6f'                      Guid = new Guid("3EE6865A-4149-4940-B7A2-F952E0FEFC5E")'                      NullableGuid = new Guid("7A2FDDD8-4BB0-4735-8230-A6AC79088489")'                      Long = 7'                      Short = 8'                      String = "string"'                      TimeSpan = TimeSpan.FromHours(1)'                      NullableTimeSpan = TimeSpan.FromDays(1)'                      UInt = 9'                      ULong = 10'                      UShort = 11'                      Enum = HttpStatusCode.MethodNotAllowed'                      NullableEnum = HttpStatusCode.MethodNotAllowed'                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new AllFields                  {                      Id = 1'                      NullableId = 2'                      Byte = 3'                      DateTime = new DateTime(2001' 01' 01)'                      NullableDateTime = new DateTime(2002' 02' 02)'                      Decimal = 4'                      Double = 5.5'                      Float = 6.6f'                      Guid = new Guid("3EE6865A-4149-4940-B7A2-F952E0FEFC5E")'                      NullableGuid = new Guid("7A2FDDD8-4BB0-4735-8230-A6AC79088489")'                      Long = 7'                      Short = 8'                      String = "string"'                      TimeSpan = TimeSpan.FromHours(1)'                      NullableTimeSpan = TimeSpan.FromDays(1)'                      UInt = 9'                      ULong = 10'                      UShort = 11'                      Enum = HttpStatusCode.MethodNotAllowed'                      NullableEnum = HttpStatusCode.MethodNotAllowed'                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new TypeWithEnum { Id = 2' Name = "Value2"' SomeEnum = SomeEnum.Value2' NSomeEnum = SomeEnum.Value2' SomeEnumAsInt = SomeEnumAsInt.Value2' NSomeEnumAsInt = SomeEnumAsInt.Value2 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Configure,The following statement contains a magic number: db.Insert(new TypeWithEnum { Id = 3' Name = "Value3"' SomeEnum = SomeEnum.Value3' NSomeEnum = SomeEnum.Value3' SomeEnumAsInt = SomeEnumAsInt.Value3' NSomeEnumAsInt = SomeEnumAsInt.Value3 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Configure,The following statement contains a magic number: var autoQuery = new AutoQueryFeature                  {                      MaxLimit = 100'                      EnableRawSqlFilters = true'                      ResponseFilters = {                          ctx => {                              var executedCmds = new List<Command>();                              var supportedFns = new Dictionary<string' Func<int' int' int>>(StringComparer.OrdinalIgnoreCase)                              {                                  {"ADD"'      (a'b) => a + b }'                                  {"MULTIPLY"' (a'b) => a * b }'                                  {"DIVIDE"'   (a'b) => a / b }'                                  {"SUBTRACT"' (a'b) => a - b }'                              };                              foreach (var cmd in ctx.Commands)                              {                                  if (!supportedFns.TryGetValue(cmd.Name' out var fn)) continue;                                  var label = !cmd.Suffix.IsNullOrWhiteSpace() ? cmd.Suffix.Trim().ToString() : cmd.ToString();                                  ctx.Response.Meta[label] = fn(cmd.Args[0].ParseInt32()' cmd.Args[1].ParseInt32()).ToString();                                  executedCmds.Add(cmd);                              }                              ctx.Commands.RemoveAll(executedCmds.Contains);                          }                              }                  }                  .RegisterQueryFilter<QueryRockstarsFilter' Rockstar>((q' dto' req) =>                      q.And(x => x.LastName.EndsWith("son"))                  )                  .RegisterQueryFilter<QueryCustomRockstarsFilter' Rockstar>((q' dto' req) =>                      q.And(x => x.LastName.EndsWith("son"))                  )                  .RegisterQueryFilter<IFilterRockstars' Rockstar>((q' dto' req) =>                      q.And(x => x.LastName.EndsWith("son"))                  );
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Any,The following statement contains a magic number: q.Take(2);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryUnitTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_AutoQueryService_in_UnitTest,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,RunFor10Mins,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromMinutes(10));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_overridden_basic_query_with_case_insensitive_orderBy,The following statement contains a magic number: var response = client.Get(new QueryCaseInsensitiveOrderBy { Age = 27' OrderBy = "FirstName" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_overridden_basic_query_with_case_insensitive_orderBy,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_Adhoc_query_convention,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(7));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_explicit_equality_condition_on_overridden_CustomRockstar,The following statement contains a magic number: var response = client.Get(new QueryOverridedCustomRockstars { Age = 27' Include = "Total" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_explicit_equality_condition_on_overridden_CustomRockstar,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_basic_query_with_limits,The following statement contains a magic number: var response = client.Get(new QueryRockstars { Skip = 2' Include = "Total" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_basic_query_with_limits,The following statement contains a magic number: Assert.That(response.Offset' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_basic_query_with_limits,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(TotalRockstars - 2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_basic_query_with_limits,The following statement contains a magic number: response = client.Get(new QueryRockstars { Take = 2' Include = "Total" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_basic_query_with_limits,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_basic_query_with_limits,The following statement contains a magic number: response = client.Get(new QueryRockstars { Skip = 2' Take = 2' Include = "Total" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_basic_query_with_limits,The following statement contains a magic number: response = client.Get(new QueryRockstars { Skip = 2' Take = 2' Include = "Total" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_basic_query_with_limits,The following statement contains a magic number: Assert.That(response.Offset' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_basic_query_with_limits,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_explicit_equality_condition,The following statement contains a magic number: var response = client.Get(new QueryRockstars { Age = 27' Include = "Total" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_explicit_equality_condition,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_explicit_equality_condition,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_explicit_equality_condition_on_CustomRockstar,The following statement contains a magic number: var response = client.Get(new QueryCustomRockstars { Age = 27' Include = "Total" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_explicit_equality_condition_on_CustomRockstar,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_explicit_equality_condition_on_CustomRockstar,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_explicit_equality_condition_on_CustomRockstarSchema,The following statement contains a magic number: var response = client.Get(new QueryCustomRockstarsSchema { Age = 27' Include = "Total" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_explicit_equality_condition_on_CustomRockstarSchema,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_explicit_equality_condition_on_CustomRockstarSchema,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_explicit_equality_condition_on_CustomRockstarSchema,The following statement contains a magic number: Assert.That(response.Results[0].Age' Is.EqualTo(27));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_implicit_IsNull_condition,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_implicit_IsNull_condition,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_query_with_JOIN_on_RockstarAlbums,The following statement contains a magic number: response = client.Get(new QueryJoinedRockstarAlbums { Age = 27' Include = "Total" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_query_with_JOIN_on_RockstarAlbums,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(6));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_query_with_JOIN_on_RockstarAlbums,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(6));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_query_with_JOIN_on_RockstarAlbums_and_CustomSelectRockstar,The following statement contains a magic number: Assert.That(ages.Contains(27 * 2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_query_with_JOIN_on_RockstarAlbums_and_CustomSelectRockstar,The following statement contains a magic number: Assert.That(ages.Contains(27 * 2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_query_with_JOIN_on_RockstarAlbums_and_CustomSelectRockstar,The following statement contains a magic number: Assert.That(ages.Contains(27 * 2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_query_with_JOIN_on_RockstarAlbums_and_CustomSelectRockstar,The following statement contains a magic number: Assert.That(ages.Contains(27 * 2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_IMPLICIT_query_with_JOIN_on_RockstarAlbums,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(6));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_IMPLICIT_query_with_JOIN_on_RockstarAlbums,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(6));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_query_with_LEFTJOIN_on_RockstarAlbums,The following statement contains a magic number: var response = client.Get(new QueryRockstarAlbumsLeftJoin { IdNotEqualTo = 3' Include = "Total" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_query_with_custom_LEFTJOIN_on_RockstarAlbums,The following statement contains a magic number: var response = client.Get(new QueryRockstarAlbumsCustomLeftJoin { IdNotEqualTo = 3' Include = "Total" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_custom_QueryFields,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_custom_QueryFields,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_custom_QueryFields,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_custom_QueryFields,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_custom_QueryFields,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_custom_QueryFields,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_custom_QueryFields,The following statement contains a magic number: response = client.Get(new QueryFieldRockstars { Age = 42 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_custom_QueryFields,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_combination_of_QueryFields,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Does_use_custom_model_to_select_columns,The following statement contains a magic number: Assert.That(response.Results[0].RockstarId' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Does_allow_adding_attributes_dynamically,The following statement contains a magic number: var response = client.Get(new QueryFieldRockstarsDynamic { Age = 42 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Does_allow_adding_attributes_dynamically,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Does_execute_typed_QueryFilters,The following statement contains a magic number: var response = client.Get(new QueryRockstarsFilter { Age = 27 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Does_execute_typed_QueryFilters,The following statement contains a magic number: var custom = client.Get(new QueryCustomRockstarsFilter { Age = 27 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Does_execute_typed_QueryFilters,The following statement contains a magic number: response = client.Get(new QueryRockstarsIFilter { Age = 27 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_OR_QueryFilters,The following statement contains a magic number: var response = client.Get(new QueryOrRockstars { Age = 42' FirstName = "Jim" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_OR_QueryFilters,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_OR_QueryFilters,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Does_retain_implicit_convention_when_not_overriding_template_or_ValueFormat,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Does_retain_implicit_convention_when_not_overriding_template_or_ValueFormat,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_OR_QueryFilters_Fields,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_OR_QueryFilters_Fields,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: var response = baseUrl.AddQueryParam("AgeOlderThan"' 42).AsJsonInto<Rockstar>();
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: response = baseUrl.AddQueryParam("AgeGreaterThanOrEqualTo"' 42).AsJsonInto<Rockstar>();
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: response = baseUrl.AddQueryParam("AgeGreaterThan"' 42).AsJsonInto<Rockstar>();
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: response = baseUrl.AddQueryParam("GreaterThanAge"' 42).AsJsonInto<Rockstar>();
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: response = baseUrl.AddQueryParam("AgeNotEqualTo"' 27).AsJsonInto<Rockstar>();
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: response = baseUrl.AddQueryParam(">Age"' 42).AsJsonInto<Rockstar>();
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: response = baseUrl.AddQueryParam("Age>"' 42).AsJsonInto<Rockstar>();
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: response = baseUrl.AddQueryParam("<Age"' 42).AsJsonInto<Rockstar>();
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: response = baseUrl.AddQueryParam("Age<"' 42).AsJsonInto<Rockstar>();
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_implicit_conventions_on_JOIN,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(6));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_implicit_conventions_on_JOIN,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(7));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_implicit_conventions_on_JOIN,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: var response = client.Get(new QueryRockstarsConventions { Ids = new[] {1' 2' 3} });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: var response = client.Get(new QueryRockstarsConventions { Ids = new[] {1' 2' 3} });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: response = client.Get(new QueryRockstarsConventions { AgeOlderThan = 42 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: response = client.Get(new QueryRockstarsConventions { AgeGreaterThanOrEqualTo = 42 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: response = client.Get(new QueryRockstarsConventions { AgeGreaterThan = 42 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: response = client.Get(new QueryRockstarsConventions { GreaterThanAge = 42 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: response = client.Get(new QueryRockstarsConventions { DateOfBirthGreaterThan = new DateTime(1960' 01' 01) });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: response = client.Get(new QueryRockstarsConventions { DateDiedLessThan = new DateTime(1980' 01' 01) });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_Explicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_where_SqlFilter,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_where_SqlFilter,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_where_SqlFilter,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_where_SqlFilter,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_where_SqlFilter,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_In_OR_Queries,The following statement contains a magic number: response = client.Get(new QueryGetRockstars { Ids = new[] { 1' 2' 3 } });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_In_OR_Queries,The following statement contains a magic number: response = client.Get(new QueryGetRockstars { Ids = new[] { 1' 2' 3 } });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_In_OR_Queries,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_In_OR_Queries,The following statement contains a magic number: response = client.Get(new QueryGetRockstars { Ages = new[] { 42' 44 }.ToList() });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_In_OR_Queries,The following statement contains a magic number: response = client.Get(new QueryGetRockstars { Ages = new[] { 42' 44 }.ToList() });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_In_OR_Queries,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_In_OR_Queries,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_In_OR_Queries,The following statement contains a magic number: response = client.Get(new QueryGetRockstars { IdsBetween = new[] { 1' 3 } });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_In_OR_Queries,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_In_OR_Queries_with_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_In_OR_Queries_with_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_In_OR_Queries_with_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_execute_In_OR_Queries_with_implicit_conventions,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_query_Movie_Ratings,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_query_Movie_Ratings,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_query_Movie_Ratings,The following statement contains a magic number: response = client.Get(new QueryMovies {                  Ids = new[] { 1' 2 }'                  ImdbIds = new[] { "tt0071562"' "tt0060196" }'                  Ratings = new[] { "G"' "PG-13" }              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_query_Movie_Ratings,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(9));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_query_Movie_Ratings,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(9));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_StreamMovies,The following statement contains a magic number: Assert.That(results.Count' Is.EqualTo(10));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_StreamMovies,The following statement contains a magic number: Assert.That(results.Count' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Does_implicitly_OrderBy_PrimaryKey_when_limits_is_specified,The following statement contains a magic number: var movies = client.Get(new SearchMovies { Take = 100 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Does_implicitly_OrderBy_PrimaryKey_when_limits_is_specified,The following statement contains a magic number: var rockstars = client.Get(new SearchMovies { Take = 100 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_OrderBy_queries,The following statement contains a magic number: var movies = client.Get(new SearchMovies { Take = 100' OrderBy = "ImdbId" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_OrderBy_queries,The following statement contains a magic number: movies = client.Get(new SearchMovies { Take = 100' OrderBy = "Rating'ImdbId" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_OrderBy_queries,The following statement contains a magic number: movies = client.Get(new SearchMovies { Take = 100' OrderByDesc = "ImdbId" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_OrderBy_queries,The following statement contains a magic number: movies = client.Get(new SearchMovies { Take = 100' OrderByDesc = "Rating'ImdbId" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_OrderBy_queries,The following statement contains a magic number: movies = client.Get(new SearchMovies { Take = 100' OrderBy = "Rating'-ImdbId" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_OrderBy_queries,The following statement contains a magic number: movies = client.Get(new SearchMovies { Take = 100' OrderByDesc = "Rating'-ImdbId" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_Query_Rockstars_with_References,The following statement contains a magic number: var response = client.Get(new QueryRockstarsWithReferences {                  Age = 27              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_Query_Rockstars_with_References,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_Query_Rockstars_with_References,The following statement contains a magic number: Assert.That(kurt.Albums.Count' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_Query_Rockstars_with_References,The following statement contains a magic number: response = client.Get(new QueryRockstarsWithReferences              {                  Age = 27'                  Fields = "Id'FirstName'Age"              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_Query_Rockstars_with_References,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_Query_Rockstars_with_References,The following statement contains a magic number: response = client.Get(new QueryRockstarsWithReferences              {                  Age = 27'                  Fields = "Id'FirstName'Age'Albums"              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_Query_RockstarReference_without_References,The following statement contains a magic number: var response = client.Get(new QueryCustomRockstarsReferences              {                  Age = 27              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_Query_RockstarReference_without_References,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Does_populate_Total,The following statement contains a magic number: response = client.Get(new QueryRockstars { Age = 27' Include = "Count(*)' Min(Age)' Max(Age)' Sum(Id)" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Does_populate_Total,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(Rockstars.Count(x => x.Age == 27)));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_Include_Aggregates_in_AutoQuery,The following statement contains a magic number: response = client.Get(new QueryRockstars { Age = 27' Include = "Count(*)' Min(Age)' Max(Age)' Sum(Id)' Avg(Age)"' OrderBy = "Id" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_Include_Aggregates_in_AutoQuery,The following statement contains a magic number: var rockstars27 = Rockstars.Where(x => x.Age == 27).ToList();
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Does_return_MaxLimit_results,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(100));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Does_return_MaxLimit_results,The following statement contains a magic number: response = client.Get(new QueryPagingTest { Skip = 200' Include = "Total" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Does_return_MaxLimit_results,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(PagingTests.Skip(200).Count()));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Does_return_MaxLimit_results,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(100));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: response = client.Get(new QueryRockstarAlbums { RockstarId = 3' Include = "Total" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: response = client.Get(new QueryRockstarAlbums { RockstarId = 3' Id = 3' Include = "Total" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: response = client.Get(new QueryRockstarAlbums { RockstarId = 3' Id = 3' Include = "Total" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: response = client.Get(new QueryRockstarAlbums              {                  RockstarId = 3'                  IdBetween = new[] { 2' 3 }'                  Include = "Total"              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: response = client.Get(new QueryRockstarAlbums              {                  RockstarId = 3'                  IdBetween = new[] { 2' 3 }'                  Include = "Total"              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: response = client.Get(new QueryRockstarAlbums              {                  RockstarId = 3'                  IdBetween = new[] { 2' 3 }'                  Include = "Total"              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: response = client.Get(new QueryRockstarAlbums              {                  RockstarId = 3'                  IdBetween = new[] { 2' 3 }'                  Name = "Nevermind"'                  Include = "Total"              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: response = client.Get(new QueryRockstarAlbums              {                  RockstarId = 3'                  IdBetween = new[] { 2' 3 }'                  Name = "Nevermind"'                  Include = "Total"              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: response = client.Get(new QueryRockstarAlbums              {                  RockstarId = 3'                  IdBetween = new[] { 2' 3 }'                  Name = "Nevermind"'                  Include = "Total"              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: Assert.That(response.Results[0].Id' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: response = client.Get(new QueryRockstarAlbums { RockstarId = 3' Genre = "Grunge"' Include = "Total" });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AutoQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\AutoQueryTests.cs,Can_query_on_ForeignKey_and_Index,The following statement contains a magic number: Assert.That(response.Total' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,BuiltinRouteTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\BuiltinRouteTests.cs,RunFor10Mins,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromMinutes(10));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CachedServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CachedServiceClientTests.cs,CachedServiceClient_does_return_cached_LastModified_Requests,The following statement contains a magic number: var request = new SetCache { LastModified = new DateTime(2016' 1' 1' 0' 0' 0) };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CachedServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CachedServiceClientTests.cs,CachedServiceClient_does_return_cached_LastModified_Requests_using_URL,The following statement contains a magic number: Assert.That(response.LastModified' Is.EqualTo(new DateTime(2016' 1' 1' 0' 0' 0)));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CachedServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CachedServiceClientTests.cs,CachedServiceClient_does_return_cached_LastModified_Requests_using_URL,The following statement contains a magic number: Assert.That(response.LastModified' Is.EqualTo(new DateTime(2016' 1' 1' 0' 0' 0)));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CachedServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CachedServiceClientTests.cs,CachedServiceClient_does_return_cached_LastModified_Requests_using_URL_Async,The following statement contains a magic number: Assert.That(response.LastModified' Is.EqualTo(new DateTime(2016' 1' 1' 0' 0' 0)));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CachedServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CachedServiceClientTests.cs,CachedServiceClient_does_return_cached_LastModified_Requests_using_URL_Async,The following statement contains a magic number: Assert.That(response.LastModified' Is.EqualTo(new DateTime(2016' 1' 1' 0' 0' 0)));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CacheResponseServices,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CacheResponseTests.cs,Any,The following statement contains a magic number: cacheInfo.KeyBase += "::flag=" + (ServerCustomCacheKey.Count % 2 == 0);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CacheResponseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CacheResponseTests.cs,Does_vary_cache_by_QueryString,The following statement contains a magic number: var request = new ServerCacheOnly { Id = 2' Value = "foo" };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CacheResponseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CacheResponseTests.cs,Does_vary_cache_by_QueryString,The following statement contains a magic number: Assert.That(ServerCacheOnly.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CacheResponseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CacheResponseTests.cs,Does_vary_cache_by_UserSession,The following statement contains a magic number: var request = new ServerCacheUser { Id = 3' Value = "foo" };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CacheResponseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CacheResponseTests.cs,Does_vary_cache_by_UserSession,The following statement contains a magic number: Assert.That(ServerCacheUser.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CacheResponseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CacheResponseTests.cs,Does_vary_cache_by_Role,The following statement contains a magic number: var request = new ServerCacheRoles { Id = 3' Value = "foo" };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CacheResponseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CacheResponseTests.cs,Does_vary_cache_by_Role,The following statement contains a magic number: Assert.That(ServerCacheRoles.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CacheResponseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CacheResponseTests.cs,Does_cache_different_content_types_and_encoding,The following statement contains a magic number: var request = new ServerCacheOnly { Id = 4' Value = "bar" };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CacheResponseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CacheResponseTests.cs,Does_cache_different_content_types_and_encoding,The following statement contains a magic number: Assert.That(ServerCacheOnly.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CacheResponseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CacheResponseTests.cs,Does_cache_different_content_types_and_encoding,The following statement contains a magic number: Assert.That(ServerCacheOnly.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CacheResponseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CacheResponseTests.cs,Does_cache_different_content_types_and_encoding,The following statement contains a magic number: Assert.That(ServerCacheOnly.Count' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CacheResponseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CacheResponseTests.cs,Does_cache_different_content_types_and_encoding,The following statement contains a magic number: Assert.That(ServerCacheOnly.Count' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CacheResponseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CacheResponseTests.cs,Cache_does_Expire,The following statement contains a magic number: var request = new ServerCacheShort { Id = 5' Value = "foo" };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CacheResponseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CacheResponseTests.cs,Cache_does_Expire,The following statement contains a magic number: Thread.Sleep(1100);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CacheResponseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CacheResponseTests.cs,Cache_does_Expire,The following statement contains a magic number: Assert.That(ServerCacheShort.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CacheResponseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CacheResponseTests.cs,Cached_client_does_return_local_cache_when_MaxAge,The following statement contains a magic number: var request = new ClientCacheMaxAge { Id = 6' Value = "foo" };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CacheResponseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CacheResponseTests.cs,Cached_client_does_return_NotModified_when_MustRevalidate,The following statement contains a magic number: var request = new ClientCacheMustRevalidate { Id = 7' Value = "foo" };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CacheResponseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CacheResponseTests.cs,Does_cache_by_custom_CacheKey,The following statement contains a magic number: var request = new ServerCustomCacheKey { Id = 8' Value = "foo" };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CacheResponseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CacheResponseTests.cs,Does_cache_by_custom_CacheKey,The following statement contains a magic number: Assert.That(ServerCustomCacheKey.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CacheResponseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CacheResponseTests.cs,Does_cache_by_custom_CacheKey,The following statement contains a magic number: Assert.That(ServerCustomCacheKey.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CacheServerFeatureTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CacheServerFeatureTests.cs,Does_set_LastModified_and_Default_MaxAge,The following statement contains a magic number: var request = new SetCache { LastModified = new DateTime(2016' 1' 1' 0' 0' 0) };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CacheServerFeatureTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CacheServerFeatureTests.cs,Does_set_Etag_MaxAge_and_CacheControl,The following statement contains a magic number: var request = new SetCache              {                  ETag = "etag"'                  Age = TimeSpan.FromDays(10)'                  MaxAge = TimeSpan.FromDays(1)'                  CacheControl = CacheControl.Public | CacheControl.NoStore | CacheControl.MustRevalidate'              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CacheServerFeatureTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CacheServerFeatureTests.cs,Does_throw_304_when_not_ModifiedSince,The following statement contains a magic number: var request = new SetCache { LastModified = new DateTime(2016' 1' 1' 0' 0' 0) };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CacheServerFeatureTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CacheServerFeatureTests.cs,Returns_response_when_ModifiedSince_LastModified,The following statement contains a magic number: var request = new SetCache { LastModified = new DateTime(2016' 1' 1' 0' 0' 0) };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CacheRequestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CacheServerFeatureTests.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ MaxAge.GetHashCode();
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CacheRequestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CacheServerFeatureTests.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Expires.GetHashCode();
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CacheRequestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CacheServerFeatureTests.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ LastModified.GetHashCode();
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CacheRequestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CacheServerFeatureTests.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ CacheControl.GetHashCode();
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CancellableRequestTestService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CancellableRequestTests.cs,Any,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CancellableRequestTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CancellableRequestTests.cs,Can_Cancel_long_running_request,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ConcurrencyTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ConcurrencyTest.cs,Does_handle_concurrent_requests,The following statement contains a magic number: client.GetHttpClient().Timeout = TimeSpan.FromMinutes(5);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ConcurrencyTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ConcurrencyTest.cs,Does_handle_concurrent_requests,The following statement contains a magic number: const int ConcurrentRequests = 50;
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ConcurrencyTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ConcurrencyTest.cs,Does_handle_concurrent_requests,The following statement contains a magic number: ConcurrentRequests.Times(i =>              {                  Interlocked.Increment(ref responsesReceived);                    ThreadPool.QueueUserWorkItem(async _ =>                  {                      var request = new SleepTest                      {                          Name = $"Request {i+1}"'                          WaitingSecs = rand.Next(30' 60)'                      };                      Interlocked.Add(ref totalSecondsWaited' request.WaitingSecs);                        log.Info($"[{DateTime.Now.TimeOfDay}] Sending {request.Name} to sleep for {request.WaitingSecs} seconds...");                                            try                      {                          var response = await client.GetAsync(request);                            log.Info($"[{DateTime.Now.TimeOfDay}] Received {request.Name}: {response.Message}");                      }                      catch (Exception ex)                      {                          log.Error($"[{DateTime.Now.TimeOfDay}] Error Response: {ex.UnwrapIfSingleException().Message}"' ex);                      }                      finally                      {                          Interlocked.Decrement(ref responsesReceived);                      }                  });              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ConcurrencyTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ConcurrencyTest.cs,Does_handle_concurrent_requests,The following statement contains a magic number: ConcurrentRequests.Times(i =>              {                  Interlocked.Increment(ref responsesReceived);                    ThreadPool.QueueUserWorkItem(async _ =>                  {                      var request = new SleepTest                      {                          Name = $"Request {i+1}"'                          WaitingSecs = rand.Next(30' 60)'                      };                      Interlocked.Add(ref totalSecondsWaited' request.WaitingSecs);                        log.Info($"[{DateTime.Now.TimeOfDay}] Sending {request.Name} to sleep for {request.WaitingSecs} seconds...");                                            try                      {                          var response = await client.GetAsync(request);                            log.Info($"[{DateTime.Now.TimeOfDay}] Received {request.Name}: {response.Message}");                      }                      catch (Exception ex)                      {                          log.Error($"[{DateTime.Now.TimeOfDay}] Error Response: {ex.UnwrapIfSingleException().Message}"' ex);                      }                      finally                      {                          Interlocked.Decrement(ref responsesReceived);                      }                  });              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ConcurrencyTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ConcurrencyTest.cs,Does_handle_concurrent_requests,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ContainerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ContainerTests.cs,Can_register_Autowired_Transient,The following statement contains a magic number: container.AddTransient(() => 99);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ContainerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ContainerTests.cs,Can_register_Autowired_Transient,The following statement contains a magic number: Assert.That(instance1.Age' Is.EqualTo(27));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ContainerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ContainerTests.cs,Can_register_Autowired_Singleton,The following statement contains a magic number: container.AddSingleton(() => 99);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ContainerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ContainerTests.cs,Can_register_Autowired_Singleton,The following statement contains a magic number: Assert.That(instance1.Age' Is.EqualTo(27));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,Test,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ContainerTests.cs,Test,The following statement contains a magic number: this.Age = 27;
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CorsFeatureServiceTest,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CorsFeatureTest.cs,RunFor5Mins,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromMinutes(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CsvContentTypeFilterTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CsvContentTypeFilterTests.cs,Run_for_30secs,The following statement contains a magic number: Thread.Sleep(30000);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CsvItem,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CsvServiceClientTests.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Name != null ? Name.GetHashCode() : 0);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CsvItem,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CsvServiceClientTests.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Ints != null ? Ints.GetHashCode() : 0);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CsvItem,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CsvServiceClientTests.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Strings != null ? Strings.GetHashCode() : 0);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CsvItem,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CsvServiceClientTests.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (CsvPocos != null ? CsvPocos.GetHashCode() : 0);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CsvItem,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CsvServiceClientTests.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (CsvPocoMap != null ? CsvPocoMap.GetHashCode() : 0);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CsvPoco,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CsvServiceClientTests.cs,GetHashCode,The following statement contains a magic number: return (Id * 397) ^ (Name != null ? Name.GetHashCode() : 0);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CsvServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CsvServiceClientTests.cs,CreateCsvItem,The following statement contains a magic number: return new CsvItem              {                  Id = i'                  Name = "Name" + i'                  Ints = i.Times(x => x)'                  Strings = i.Times(x => "Name" + x)'                  CsvPocos = new List<CsvPoco>                  {                      new CsvPoco { Id = 10 + i' Name = "CsvPoco" + i }'                  }'                  CsvPocoMap = new Dictionary<string' CsvPoco>                  {                      { "Key" + i' new CsvPoco { Id = 10 + i' Name = "CsvPoco" + i } }                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CsvServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CsvServiceClientTests.cs,CreateCsvItem,The following statement contains a magic number: return new CsvItem              {                  Id = i'                  Name = "Name" + i'                  Ints = i.Times(x => x)'                  Strings = i.Times(x => "Name" + x)'                  CsvPocos = new List<CsvPoco>                  {                      new CsvPoco { Id = 10 + i' Name = "CsvPoco" + i }'                  }'                  CsvPocoMap = new Dictionary<string' CsvPoco>                  {                      { "Key" + i' new CsvPoco { Id = 10 + i' Name = "CsvPoco" + i } }                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CsvServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CsvServiceClientTests.cs,Can_SendAll_CsvItem,The following statement contains a magic number: var dtos = 3.Times(x => CreateCsvItem(x));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CsvServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CsvServiceClientTests.cs,Can_POST_CsvList,The following statement contains a magic number: var dtos = 3.Times(x => CreateCsvItem(x));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CsvServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CsvServiceClientTests.cs,Can_POST_CsvFirstEnumerable,The following statement contains a magic number: var dto = new CsvFirstEnumerable              {                  Id = 1'                  Name = "Name"'                  Items = 3.Times(x => CreateCsvItem(x))              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CsvServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CsvServiceClientTests.cs,Can_POST_CsvDto,The following statement contains a magic number: var dto = new CsvDtoEnumerable              {                  Id = 1'                  Name = "Name"'                  Items = 3.Times(x => CreateCsvItem(x))              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CustomMethodService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CustomHttpMethodTests.cs,Head,The following statement contains a magic number: Response.SetContentLength(100);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CustomHttpMethodTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CustomHttpMethodTests.cs,Does_execute_HEAD_Request_returning_custom_HttpResult,The following statement contains a magic number: var response = Config.ListeningOn.AppendPath("custom-method"'"result").AddQueryParam("id"' 1)                  .SendStringToUrl(method: "HEAD"'                      requestFilter: req => { req.Method = "HEAD"; }'                       responseFilter: res => {                          Assert.That(res.Headers["X-Method"]' Is.EqualTo("HEAD"));                          Assert.That(res.Headers["X-Id"]' Is.EqualTo("1"));                          Assert.That(res.ContentType' Is.EqualTo("video/mp4"));                          Assert.That(res.ContentLength' Is.EqualTo(100));                      });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CustomHttpMethodTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CustomHttpMethodTests.cs,Does_execute_HEAD_Request_writing_custom_headers,The following statement contains a magic number: var response = Config.ListeningOn.AppendPath("custom-method"'"headers").AddQueryParam("id"' 1)                  .SendStringToUrl(method: "HEAD"'                      requestFilter: req => { req.Method = "HEAD"; }'                       responseFilter: res => {                          Assert.That(res.Headers["X-Method"]' Is.EqualTo("HEAD"));                          Assert.That(res.Headers["X-Id"]' Is.EqualTo("1"));                          Assert.That(res.ContentType' Is.EqualTo("video/mp4"));                          Assert.That(res.ContentLength' Is.EqualTo(100));                      });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ReqstarsService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ExceptionHandling2Tests.cs,Any,The following statement contains a magic number: var response = new SearchReqstarsResponse              {                  Total = 2'                  Aged = 10'                  Results = new List<Reqstar>                  {                      new Reqstar {Id = 1' FirstName = "Max"' LastName = "Meier"' Age = 10}'                      new Reqstar {Id = 2' FirstName = "Susan"' LastName = "Stark"' Age = 10}                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ReqstarsService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ExceptionHandling2Tests.cs,Any,The following statement contains a magic number: var response = new SearchReqstarsResponse              {                  Total = 2'                  Aged = 10'                  Results = new List<Reqstar>                  {                      new Reqstar {Id = 1' FirstName = "Max"' LastName = "Meier"' Age = 10}'                      new Reqstar {Id = 2' FirstName = "Susan"' LastName = "Stark"' Age = 10}                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ReqstarsService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ExceptionHandling2Tests.cs,Any,The following statement contains a magic number: var response = new SearchReqstarsResponse              {                  Total = 2'                  Aged = 10'                  Results = new List<Reqstar>                  {                      new Reqstar {Id = 1' FirstName = "Max"' LastName = "Meier"' Age = 10}'                      new Reqstar {Id = 2' FirstName = "Susan"' LastName = "Stark"' Age = 10}                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ReqstarsService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ExceptionHandling2Tests.cs,Any,The following statement contains a magic number: var response = new SearchReqstarsResponse              {                  Total = 2'                  Aged = 10'                  Results = new List<Reqstar>                  {                      new Reqstar {Id = 1' FirstName = "Max"' LastName = "Meier"' Age = 10}'                      new Reqstar {Id = 2' FirstName = "Susan"' LastName = "Stark"' Age = 10}                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ReqstarsService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ExceptionHandling2Tests.cs,Any,The following statement contains a magic number: var response = new SearchReqstarsResponse              {                  Total = 2'                  Aged = 10'                  Results = new List<Reqstar>                  {                      new Reqstar {Id = 1' FirstName = "Max"' LastName = "Meier"' Age = 10}'                      new Reqstar {Id = 2' FirstName = "Susan"' LastName = "Stark"' Age = 10}                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ReqstarsService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ExceptionHandling2Tests.cs,Any,The following statement contains a magic number: var response = new ReqstarsResponse()              {                  Total = 2'                  Aged = 10'                  Results = new List<Reqstar>                  {                      new Reqstar {Id = 1' FirstName = "Max"' LastName = "Meier"' Age = 10}'                      new Reqstar {Id = 2' FirstName = "Susan"' LastName = "Stark"' Age = 10}                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ReqstarsService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ExceptionHandling2Tests.cs,Any,The following statement contains a magic number: var response = new ReqstarsResponse()              {                  Total = 2'                  Aged = 10'                  Results = new List<Reqstar>                  {                      new Reqstar {Id = 1' FirstName = "Max"' LastName = "Meier"' Age = 10}'                      new Reqstar {Id = 2' FirstName = "Susan"' LastName = "Stark"' Age = 10}                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ReqstarsService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ExceptionHandling2Tests.cs,Any,The following statement contains a magic number: var response = new ReqstarsResponse()              {                  Total = 2'                  Aged = 10'                  Results = new List<Reqstar>                  {                      new Reqstar {Id = 1' FirstName = "Max"' LastName = "Meier"' Age = 10}'                      new Reqstar {Id = 2' FirstName = "Susan"' LastName = "Stark"' Age = 10}                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ReqstarsService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ExceptionHandling2Tests.cs,Any,The following statement contains a magic number: var response = new ReqstarsResponse()              {                  Total = 2'                  Aged = 10'                  Results = new List<Reqstar>                  {                      new Reqstar {Id = 1' FirstName = "Max"' LastName = "Meier"' Age = 10}'                      new Reqstar {Id = 2' FirstName = "Susan"' LastName = "Stark"' Age = 10}                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ReqstarsService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ExceptionHandling2Tests.cs,Any,The following statement contains a magic number: var response = new ReqstarsResponse()              {                  Total = 2'                  Aged = 10'                  Results = new List<Reqstar>                  {                      new Reqstar {Id = 1' FirstName = "Max"' LastName = "Meier"' Age = 10}'                      new Reqstar {Id = 2' FirstName = "Susan"' LastName = "Stark"' Age = 10}                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ExceptionHandling2Tests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ExceptionHandling2Tests.cs,OldNamingConv_Get_ExpectingResults,The following statement contains a magic number: var response = client.Get(new SearchReqstars {Age = 10});
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ExceptionHandling2Tests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ExceptionHandling2Tests.cs,OldNamingConv_Get_ExpectingResults,The following statement contains a magic number: Assert.AreEqual(2' response.Total);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ExceptionHandling2Tests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ExceptionHandling2Tests.cs,OldNamingConv_Post_ExpectingResults,The following statement contains a magic number: var response = client.Post(new SearchReqstars {Age = 10});
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ExceptionHandling2Tests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ExceptionHandling2Tests.cs,OldNamingConv_Post_ExpectingResults,The following statement contains a magic number: Assert.AreEqual(2' response.Total);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ExceptionHandling2Tests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ExceptionHandling2Tests.cs,NoNamingConv_Get_ExpectingResults,The following statement contains a magic number: var response = client.Get(new SearchReqstars2 {Age = 10});
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ExceptionHandling2Tests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ExceptionHandling2Tests.cs,NoNamingConv_Get_ExpectingResults,The following statement contains a magic number: Assert.AreEqual(2' response.Total);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ExceptionHandling2Tests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ExceptionHandling2Tests.cs,NoNamingConv_Post_ExpectingResults,The following statement contains a magic number: var response = client.Post(new SearchReqstars2 {Age = 10});
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ExceptionHandling2Tests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ExceptionHandling2Tests.cs,NoNamingConv_Post_ExpectingResults,The following statement contains a magic number: Assert.AreEqual(2' response.Total);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,CustomFieldHttpErrorService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ExceptionHandlingTests.cs,Any,The following statement contains a magic number: throw new HttpError(new CustomFieldHttpErrorResponse                  {                      Custom = "Ignored"'                      ResponseStatus = new ResponseStatus("StatusErrorCode"' "StatusErrorMessage")                  }'                  500'                  "HeaderErrorCode");
Magic Number,ServiceStack.WebHost.Endpoints.Tests,DirectResponseService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ExceptionHandlingTests.cs,Any,The following statement contains a magic number: base.Response.StatusCode = 500;
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ExceptionHandlingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ExceptionHandlingTests.cs,Returns_custom_Status_and_Description_with_CustomHttpError,The following statement contains a magic number: var json = PredefinedJsonUrl<CustomHttpError>()                      .AddQueryParam("StatusCode"' 406)                      .AddQueryParam("StatusDescription"' "CustomDescription")                      .GetJsonFromUrl();
Magic Number,ServiceStack.WebHost.Endpoints.Tests,FileUploadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\FileUploadTests.cs,Run_for_30secs,The following statement contains a magic number: Thread.Sleep(30000);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,FileUploadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\FileUploadTests.cs,AssertResponse,The following statement contains a magic number: Assert.That(statusCode' Is.LessThan(400));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,FileUploadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\FileUploadTests.cs,Can_POST_upload_file_using_ServiceClient_with_request,The following statement contains a magic number: var request = new FileUpload { CustomerId = 123' CustomerName = "Foo'Bar" };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,FileUploadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\FileUploadTests.cs,Can_POST_upload_file_using_ServiceClient_with_request,The following statement contains a magic number: Assert.That(response.CustomerId' Is.EqualTo(123));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,FileUploadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\FileUploadTests.cs,Can_POST_upload_file_using_ServiceClient_with_request_and_QueryString,The following statement contains a magic number: Assert.That(response.CustomerId' Is.EqualTo(123));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,FileUploadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\FileUploadTests.cs,Can_POST_upload_multiple_files_using_ServiceClient_with_request_and_QueryString,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,FileUploadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\FileUploadTests.cs,Can_POST_upload_multiple_files_using_ServiceClient_with_request_and_QueryString,The following statement contains a magic number: Assert.That(file1.CustomerId' Is.EqualTo(123));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,FileUploadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\FileUploadTests.cs,Can_POST_upload_multiple_files_using_ServiceClient_with_request_and_QueryString,The following statement contains a magic number: Assert.That(file2.CustomerId' Is.EqualTo(123));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,FileUploadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\FileUploadTests.cs,Can_POST_upload_multiple_files_using_ServiceClient_with_request_and_QueryString_JsonHttpClient,The following statement contains a magic number: var response = await client.PostFilesWithRequestAsync<MultipleFileUploadResponse>(                      new MultipleFileUpload { CustomerId = 123' CustomerName = "Foo'Bar" }'                      new[] {                          new UploadFile("upload1.html"' stream1)'                          new UploadFile("upload2.html"' stream2)'                      });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,FileUploadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\FileUploadTests.cs,Can_POST_upload_multiple_files_using_ServiceClient_with_request_and_QueryString_JsonHttpClient,The following statement contains a magic number: Assert.That(response.Results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,FileUploadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\FileUploadTests.cs,Can_POST_upload_multiple_files_using_ServiceClient_with_request_and_QueryString_JsonHttpClient,The following statement contains a magic number: Assert.That(file1.CustomerId' Is.EqualTo(123));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,FileUploadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\FileUploadTests.cs,Can_POST_upload_multiple_files_using_ServiceClient_with_request_and_QueryString_JsonHttpClient,The following statement contains a magic number: Assert.That(file2.CustomerId' Is.EqualTo(123));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,FileUploadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\FileUploadTests.cs,Can_POST_upload_file_using_ServiceClient_with_request_containing_utf8_chars,The following statement contains a magic number: var request = new FileUpload { CustomerId = 123' CustomerName = "Föяšč" };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,FileUploadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\FileUploadTests.cs,Can_POST_upload_file_using_ServiceClient_with_request_containing_utf8_chars,The following statement contains a magic number: Assert.That(response.CustomerId' Is.EqualTo(123));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,FileUploadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\FileUploadTests.cs,PostFileWithRequest_returns_the_same_date_as_normal_Put_with_ServiceClient,The following statement contains a magic number: var request = new FileUpload {                      CreatedDate = new DateTime(2014' 1' 1' 1' 0' 0)                  };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,FileUploadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\FileUploadTests.cs,PostFileWithRequest_returns_the_same_date_as_normal_Put_with_JsonHttpClient,The following statement contains a magic number: var request = new FileUpload                  {                      CreatedDate = new DateTime(2014' 1' 1' 1' 0' 0)                  };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,HttpErrorAsyncTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\HttpErrorAsyncTests.cs,PUT_returning_custom_403_Exception,The following statement contains a magic number: var response = await restClient.PutAsync(new ThrowHttpError                  {                      StatusCode = 403'                      Type = typeof(Exception).Name'                      Message = "ForbiddenErrorMessage"'                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,HttpErrorSyncTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\HttpErrorSyncTests.cs,PUT_returning_custom_403_Exception,The following statement contains a magic number: var response = client.Put(new ThrowHttpError                  {                      StatusCode = 403'                      Type = typeof(Exception).Name'                      Message = "ForbiddenErrorMessage"'                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,HttpErrorSyncTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\HttpErrorSyncTests.cs,PUT_throwing_custom_403_Exception,The following statement contains a magic number: client.Put(new ThrowHttpErrorNoReturn                  {                      StatusCode = 403'                      Type = typeof(Exception).Name'                      Message = "ForbiddenErrorMessage"'                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,HttpErrorSyncTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\HttpErrorSyncTests.cs,Assert404,The following statement contains a magic number: Assert.That(webEx.StatusCode' Is.EqualTo(404));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,HttpErrorSyncTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\HttpErrorSyncTests.cs,Does_preserve_WebServiceException,The following statement contains a magic number: var request = new ThrowWebServiceException              {                  StatusCode = 400'                  StatusDescription = "Original Message"'                  ResponseStatus = new ResponseStatus                  {                      ErrorCode = "ResponseStatus.ErrorCode"'                      Message = "ResponseStatus.Message"                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ErrorStatusTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\HttpErrorSyncTests.cs,Does_map_Exception_to_StatusCode,The following statement contains a magic number: Assert.That(new Custom400Exception().ToStatusCode()' Is.EqualTo(400));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ErrorStatusTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\HttpErrorSyncTests.cs,Does_map_Exception_to_StatusCode,The following statement contains a magic number: Assert.That(new Custom400SubException().ToStatusCode()' Is.EqualTo(400));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ErrorStatusTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\HttpErrorSyncTests.cs,Does_map_Exception_to_StatusCode,The following statement contains a magic number: Assert.That(new Custom401Exception().ToStatusCode()' Is.EqualTo(401));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,IocServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IocServiceTests.cs,Does_create_correct_instances_per_scope,The following statement contains a magic number: Assert.That(response2.Results[typeof(FunqRequestScope).Name]' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,IocServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IocServiceTests.cs,Does_create_correct_instances_per_scope,The following statement contains a magic number: Assert.That(response2.Results[typeof(FunqNoneScope).Name]' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,IocServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IocServiceTests.cs,Does_create_correct_instances_per_scope,The following statement contains a magic number: Assert.That(response2.InjectsRequest' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,IocServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IocServiceTests.cs,Does_create_correct_instances_per_scope,The following statement contains a magic number: Assert.That(stats.FunqRequestScopeDepDisposableProperty_DisposeCount' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,IocServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IocServiceTests.cs,Does_create_correct_instances_per_scope,The following statement contains a magic number: Assert.That(stats.AltRequestScopeDepDisposableProperty_DisposeCount' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,IocServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IocServiceTests.cs,Does_create_correct_instances_per_scope_Async,The following statement contains a magic number: Assert.That(response2.Results[typeof(FunqRequestScope).Name]' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,IocServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IocServiceTests.cs,Does_create_correct_instances_per_scope_Async,The following statement contains a magic number: Assert.That(response2.Results[typeof(FunqNoneScope).Name]' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,IocServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IocServiceTests.cs,Does_create_correct_instances_per_scope_Async,The following statement contains a magic number: Assert.That(stats.FunqRequestScopeDepDisposableProperty_DisposeCount' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,IocServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IocServiceTests.cs,Does_create_correct_instances_per_scope_Async,The following statement contains a magic number: Assert.That(stats.AltRequestScopeDepDisposableProperty_DisposeCount' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,IocServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IocServiceTests.cs,Does_create_correct_instances_per_scope_with_exception,The following statement contains a magic number: Assert.That(stats.FunqRequestScopeDepDisposableProperty_DisposeCount' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,IocServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IocServiceTests.cs,Does_create_correct_instances_per_scope_with_exception,The following statement contains a magic number: Assert.That(stats.AltRequestScopeDepDisposableProperty_DisposeCount' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,IocServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IocServiceTests.cs,Does_create_correct_instances_per_scope_with_exception_Async,The following statement contains a magic number: Assert.That(stats.FunqRequestScopeDepDisposableProperty_DisposeCount' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,IocServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IocServiceTests.cs,Does_create_correct_instances_per_scope_with_exception_Async,The following statement contains a magic number: Assert.That(stats.AltRequestScopeDepDisposableProperty_DisposeCount' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,IocServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IocServiceTests.cs,Does_dispose_service_and_Request_and_None_scope_but_not_singletons,The following statement contains a magic number: Assert.That(stats.IocDisposableService_DisposeCount' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,IocServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IocServiceTests.cs,Does_dispose_service_and_Request_and_None_scope_but_not_singletons,The following statement contains a magic number: Assert.That(stats.FunqRequestScopeDisposable_DisposeCount' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,IocServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IocServiceTests.cs,Does_dispose_service_and_Request_and_None_scope_but_not_singletons,The following statement contains a magic number: Assert.That(stats.FunqNoneScopeDisposable_DisposeCount' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,IocServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IocServiceTests.cs,Does_dispose_service_and_Request_and_None_scope_but_not_singletons,The following statement contains a magic number: Assert.That(stats.FunqRequestScopeDepDisposableProperty_DisposeCount' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,IocServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IocServiceTests.cs,Does_dispose_service_and_Request_and_None_scope_but_not_singletons,The following statement contains a magic number: Assert.That(stats.AltRequestScopeDepDisposableProperty_DisposeCount' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,IocServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IocServiceTests.cs,Does_dispose_service_and_Request_and_None_scope_but_not_singletons_Async,The following statement contains a magic number: Assert.That(stats.IocDisposableService_DisposeCount' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,IocServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IocServiceTests.cs,Does_dispose_service_and_Request_and_None_scope_but_not_singletons_Async,The following statement contains a magic number: Assert.That(stats.FunqRequestScopeDisposable_DisposeCount' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,IocServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IocServiceTests.cs,Does_dispose_service_and_Request_and_None_scope_but_not_singletons_Async,The following statement contains a magic number: Assert.That(stats.FunqNoneScopeDisposable_DisposeCount' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,IocServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IocServiceTests.cs,Does_dispose_service_and_Request_and_None_scope_but_not_singletons_Async,The following statement contains a magic number: Assert.That(stats.FunqRequestScopeDepDisposableProperty_DisposeCount' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,IocServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IocServiceTests.cs,Does_dispose_service_and_Request_and_None_scope_but_not_singletons_Async,The following statement contains a magic number: Assert.That(stats.AltRequestScopeDepDisposableProperty_DisposeCount' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,JsonpTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\JsonpTests.cs,Can_GET_single_Movie_using_RestClient_with_JSONP,The following statement contains a magic number: Assert.That(response.Length' Is.GreaterThan(50));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,JSTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\JSTests.cs,Can_parse_dynamic_json,The following statement contains a magic number: Assert.That(JSON.parse("1.1")' Is.EqualTo(1.1));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,JSTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\JSTests.cs,Can_parse_dynamic_json,The following statement contains a magic number: Assert.That(JSON.parse("[{a:1}'{b:2]")' Is.EqualTo(new List<object>              {                  new Dictionary<string' object> { { "a"' 1 } }'                  new Dictionary<string' object> { { "b"' 2 } }              }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,FreeLicenseUsageServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\LicenseUsageTests.cs,Allows_registration_of_10_operations,The following statement contains a magic number: Assert.That(appHost.Metadata.GetOperationDtos().Count' Is.EqualTo(10));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,RegisteredLicenseUsageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\LicenseUsageTests.cs,Allows_registration_of_11_operations,The following statement contains a magic number: Assert.That(appHost.Metadata.GetOperationDtos().Count' Is.EqualTo(11));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,MultiTenantChangeDbAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\MultiTennantAppHostTests.cs,Configure,The following statement contains a magic number: const int noOfTennants = 3;
Magic Number,ServiceStack.WebHost.Endpoints.Tests,MultiTenantCustomDbFactoryAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\MultiTennantAppHostTests.cs,Configure,The following statement contains a magic number: const int noOfTennants = 3;
Magic Number,ServiceStack.WebHost.Endpoints.Tests,NestedServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\NestedServiceTests.cs,Can_call_nested_service_with_ServiceClient,The following statement contains a magic number: var reqNested = new Root.Nested { Id = 2 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,NestedServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\NestedServiceTests.cs,Can_call_nested_service_with_ServiceClient,The following statement contains a magic number: Assert.That(nested.Id' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,PartialContentResultTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\PartialContentResultTests.cs,Can_StaticFile_GET_206_Partial_response_for_file_with_range_header,The following statement contains a magic number: var actualContents = "{0}/TestExistingDir/upload.html".Fmt(BaseUri).GetStringFromUrl(                  requestFilter: httpReq => httpReq.AddRange(5' 11)'                  responseFilter: httpRes =>                  {                      "Content-Length header {0}".Print(httpRes.Headers["Content-Length"]);                      Assert.That(httpRes.ContentType' Is.EqualTo(MimeTypes.GetMimeType(uploadedFile.Name)));                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,PartialContentResultTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\PartialContentResultTests.cs,Can_StaticFile_GET_206_Partial_response_for_file_with_range_header,The following statement contains a magic number: var actualContents = "{0}/TestExistingDir/upload.html".Fmt(BaseUri).GetStringFromUrl(                  requestFilter: httpReq => httpReq.AddRange(5' 11)'                  responseFilter: httpRes =>                  {                      "Content-Length header {0}".Print(httpRes.Headers["Content-Length"]);                      Assert.That(httpRes.ContentType' Is.EqualTo(MimeTypes.GetMimeType(uploadedFile.Name)));                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,PartialContentResultTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\PartialContentResultTests.cs,Can_GET_206_Partial_response_for_file_with_range_header,The following statement contains a magic number: var actualContents = "{0}/partialfiles/TestExistingDir/upload.html".Fmt(BaseUri).GetStringFromUrl(                  requestFilter: httpReq => httpReq.AddRange(5' 11)'                  responseFilter: httpRes =>                  {                      "Content-Length header {0}".Print(httpRes.Headers["Content-Length"]);                      Assert.That(httpRes.ContentType' Is.EqualTo(MimeTypes.GetMimeType(uploadedFile.Name)));                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,PartialContentResultTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\PartialContentResultTests.cs,Can_GET_206_Partial_response_for_file_with_range_header,The following statement contains a magic number: var actualContents = "{0}/partialfiles/TestExistingDir/upload.html".Fmt(BaseUri).GetStringFromUrl(                  requestFilter: httpReq => httpReq.AddRange(5' 11)'                  responseFilter: httpRes =>                  {                      "Content-Length header {0}".Print(httpRes.Headers["Content-Length"]);                      Assert.That(httpRes.ContentType' Is.EqualTo(MimeTypes.GetMimeType(uploadedFile.Name)));                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,PartialContentResultTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\PartialContentResultTests.cs,Can_GET_206_Partial_response_for_memory_with_range_header,The following statement contains a magic number: var actualContents = "{0}/partialfiles/memory?mimeType=audio/mpeg".Fmt(BaseUri).GetStringFromUrl(                  requestFilter: httpReq => httpReq.AddRange(5' 9)'                  responseFilter: httpRes => "Content-Length header {0}".Print(httpRes.Headers["Content-Length"]));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,PartialContentResultTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\PartialContentResultTests.cs,Can_GET_206_Partial_response_for_memory_with_range_header,The following statement contains a magic number: var actualContents = "{0}/partialfiles/memory?mimeType=audio/mpeg".Fmt(BaseUri).GetStringFromUrl(                  requestFilter: httpReq => httpReq.AddRange(5' 9)'                  responseFilter: httpRes => "Content-Length header {0}".Print(httpRes.Headers["Content-Length"]));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,PartialContentResultTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\PartialContentResultTests.cs,Can_GET_206_Partial_response_for_text_with_range_header,The following statement contains a magic number: var actualContents = "{0}/partialfiles/text".Fmt(BaseUri).GetStringFromUrl(                  requestFilter: httpReq => httpReq.AddRange(5' 9)'                  responseFilter: httpRes => "Content-Length header {0}".Print(httpRes.Headers["Content-Length"]));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,PartialContentResultTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\PartialContentResultTests.cs,Can_GET_206_Partial_response_for_text_with_range_header,The following statement contains a magic number: var actualContents = "{0}/partialfiles/text".Fmt(BaseUri).GetStringFromUrl(                  requestFilter: httpReq => httpReq.AddRange(5' 9)'                  responseFilter: httpRes => "Content-Length header {0}".Print(httpRes.Headers["Content-Length"]));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,PartialContentResultTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\PartialContentResultTests.cs,Can_respond_to_non_range_requests_with_200_OK_response,The following statement contains a magic number: Assert.That(mockResponse.StatusCode' Is.EqualTo(200));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,PartialContentResultTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\PartialContentResultTests.cs,Can_seek_from_beginning_to_end,The following statement contains a magic number: Assert.That(mockResponse.StatusCode' Is.EqualTo(206));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,PartialContentResultTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\PartialContentResultTests.cs,Can_seek_from_beginning_to_further_than_end,The following statement contains a magic number: Assert.That(mockResponse.StatusCode' Is.EqualTo(206));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,PartialContentResultTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\PartialContentResultTests.cs,Can_seek_from_beginning_to_middle,The following statement contains a magic number: Assert.That(mockResponse.StatusCode' Is.EqualTo(206));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,PartialContentResultTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\PartialContentResultTests.cs,Can_seek_from_middle_to_end,The following statement contains a magic number: Assert.That(mockResponse.StatusCode' Is.EqualTo(206));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,PartialContentResultTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\PartialContentResultTests.cs,Can_seek_from_middle_to_middle,The following statement contains a magic number: Assert.That(mockResponse.StatusCode' Is.EqualTo(206));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,PartialContentResultTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\PartialContentResultTests.cs,Can_use_fileStream,The following statement contains a magic number: Assert.That(writtenString' Is.EqualTo(fileText.Substring(6' 3)));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,PartialContentResultTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\PartialContentResultTests.cs,Can_use_fileStream,The following statement contains a magic number: Assert.That(writtenString' Is.EqualTo(fileText.Substring(6' 3)));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,PartialContentResultTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\PartialContentResultTests.cs,Can_use_fileStream,The following statement contains a magic number: Assert.That(mockResponse.StatusCode' Is.EqualTo(206));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,PartialContentResultTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\PartialContentResultTests.cs,Run_for_30secs,The following statement contains a magic number: Thread.Sleep(30000);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ProtoBufEmail,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ProtoBufServiceTests.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ (FromAddress != null ? FromAddress.GetHashCode() : 0);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ProtoBufEmail,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ProtoBufServiceTests.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ (Subject != null ? Subject.GetHashCode() : 0);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ProtoBufEmail,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ProtoBufServiceTests.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ (Body != null ? Body.GetHashCode() : 0);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ProtoBufEmail,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ProtoBufServiceTests.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ (AttachmentData != null ? AttachmentData.GetHashCode() : 0);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,RemoteEndDropsConnectionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RemoteEndDropsConnectionTests.cs,TestClientDropsConnection,The following statement contains a magic number: const int sleepMs = 1000;
Magic Number,ServiceStack.WebHost.Endpoints.Tests,RemoteEndDropsConnectionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RemoteEndDropsConnectionTests.cs,TestClientDropsConnection,The following statement contains a magic number: req.Timeout = 100;
Magic Number,ServiceStack.WebHost.Endpoints.Tests,RemoteEndDropsConnectionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RemoteEndDropsConnectionTests.cs,TestClientDropsConnection,The following statement contains a magic number: Thread.Sleep(sleepMs * 2);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,RemoteEndDropsConnectionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RemoteEndDropsConnectionTests.cs,TestClientDropsConnection,The following statement contains a magic number: Assert.AreEqual(2' errorLogs.Count' "Checking if there is only one ERROR entry");
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ReplyAllTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ReplyAllTests.cs,Can_store_multiple_requests_with_SendAllOneWay,The following statement contains a magic number: var requests = new[]                  {                      new Request { Id = 1' Name = "Foo" }'                      new Request { Id = 2' Name = "Bar" }'                      new Request { Id = 3' Name = "Baz" }'                  };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ReplyAllTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ReplyAllTests.cs,Can_store_multiple_requests_with_SendAllOneWay,The following statement contains a magic number: var requests = new[]                  {                      new Request { Id = 1' Name = "Foo" }'                      new Request { Id = 2' Name = "Bar" }'                      new Request { Id = 3' Name = "Baz" }'                  };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ReplyAllTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ReplyAllTests.cs,Does_throw_WebServiceException_on_Error,The following statement contains a magic number: var requests = new[]              {                  new BatchThrows { Id = 1' Name = "Foo" }'                  new BatchThrows { Id = 2' Name = "Bar" }'                  new BatchThrows { Id = 3' Name = "Baz" }'              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ReplyAllTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ReplyAllTests.cs,Does_throw_WebServiceException_on_Error,The following statement contains a magic number: var requests = new[]              {                  new BatchThrows { Id = 1' Name = "Foo" }'                  new BatchThrows { Id = 2' Name = "Bar" }'                  new BatchThrows { Id = 3' Name = "Baz" }'              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ReplyAllTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ReplyAllTests.cs,Does_throw_WebServiceException_on_Error_Async,The following statement contains a magic number: var requests = new[]              {                  new BatchThrowsAsync { Id = 1' Name = "Foo" }'                  new BatchThrowsAsync { Id = 2' Name = "Bar" }'                  new BatchThrowsAsync { Id = 3' Name = "Baz" }'              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ReplyAllTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ReplyAllTests.cs,Does_throw_WebServiceException_on_Error_Async,The following statement contains a magic number: var requests = new[]              {                  new BatchThrowsAsync { Id = 1' Name = "Foo" }'                  new BatchThrowsAsync { Id = 2' Name = "Bar" }'                  new BatchThrowsAsync { Id = 3' Name = "Baz" }'              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ThrowsInFilterAttribute,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RequestFiltersTests.cs,Execute,The following statement contains a magic number: var status = (HttpStatusCode)dto.StatusCode.GetValueOrDefault(400);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,RequestFiltersTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RequestFiltersTests.cs,Assert401,The following statement contains a magic number: ex.StatusCode != 401
Magic Number,ServiceStack.WebHost.Endpoints.Tests,RequestFiltersTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RequestFiltersTests.cs,Assert401,The following statement contains a magic number: Assert.That(ex.StatusCode' Is.EqualTo(401));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,RequestFiltersTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RequestFiltersTests.cs,Assert401,The following statement contains a magic number: Assert.That(webEx.StatusCode' Is.EqualTo(401));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,RequestFiltersTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RequestFiltersTests.cs,Does_populate_ResponseStatus_when_Exception_thrown_in_RequestFilter,The following statement contains a magic number: var response = await client.PostAsync(new ThrowsInFilter                  {                      StatusCode = 409'                      ExceptionType = nameof(HttpError)'                      Message = "POST HttpError CONFLICT"'                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,RequestFiltersAppHostHttpListener,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RequestFiltersTests.cs,Configure,The following statement contains a magic number: this.GlobalRequestFilters.Add((req' res' dto) =>                  {                      if (dto is Secure)                      {                          var sessionId = req.GetItemOrCookie("ss-session") ?? string.Empty;                          var sessionIdParts = sessionId.SplitOnFirst('/');                          if (sessionIdParts.Length < 2 || sessionIdParts[0] != AllowedUser || sessionIdParts[1] != currentSessionGuid.ToString("N"))                          {                              res.ReturnAuthRequired();                          }                      }                      if (dto is SoapDeserializationException)                      {                          req.Response.UseBufferedStream = true;                      }                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,RequestPipelineService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RequestPipelineTests.cs,Any,The following statement contains a magic number: await Task.Delay(100);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,RequestPipelineService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RequestPipelineTests.cs,Any,The following statement contains a magic number: return await Task.Factory.StartNew(() =>              {                  Task.Delay(100);                    Dep.AssertNotDisposed();                    request.Service = true;                  return request;              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,RestHandlerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RestHandlerTests.cs,Throws_binding_exception_when_unable_to_match_path_values,The following statement contains a magic number: Assert.That(response.StatusCode' Is.EqualTo(400));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,RestHandlerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RestHandlerTests.cs,Throws_binding_exception_when_unable_to_bind_request,The following statement contains a magic number: Assert.That(response.StatusCode' Is.EqualTo(400));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,RouteInferenceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RouteInferenceTests.cs,Should_infer_route_from_AnyPublicProperty_named_Id,The following statement contains a magic number: Assert.That(restPath.PathComponentsCount == 2);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,RouteInferenceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RouteInferenceTests.cs,Should_infer_route_from_AnyPublicProperty_named_Ids,The following statement contains a magic number: Assert.That(restPath.PathComponentsCount == 2);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,RouteInferenceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RouteInferenceTests.cs,Should_infer_route_from_AnyPublicProperty_in_MatchingNameStrategy,The following statement contains a magic number: Assert.That(restPath.PathComponentsCount == 2);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,RouteInferenceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RouteInferenceTests.cs,Should_infer_route_from_AnyPublicProperty_with_PrimaryKeyAttribute,The following statement contains a magic number: Assert.That(restPath.PathComponentsCount == 2);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,RouteInferenceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RouteInferenceTests.cs,Should_infer_route_from_AnyPublicProperty_in_MatchingAttributeStrategy,The following statement contains a magic number: Assert.That(restPath.PathComponentsCount == 2);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,RouteInferenceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RouteInferenceTests.cs,Should_infer_route_from_AnyPubicProperty_FromAnyStrategy_AndCompositeTheRoute,The following statement contains a magic number: Assert.That(restPath.PathComponentsCount == 3);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,RouteInferenceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RouteInferenceTests.cs,Should_infer_route_from_AnyPubicProperty_FromAnyStrategy_AndCompositeTheRoute,The following statement contains a magic number: Assert.IsTrue(restPath.Path.Count(c => c == '}') == 2);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,RouteTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RouteTests.cs,Does_populate_version_when_using_Version_Abbreviation,The following statement contains a magic number: Assert.That(response.Version' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,RouteTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RouteTests.cs,Does_populate_version_when_using_Version_Abbreviation,The following statement contains a magic number: Assert.That(response.Version' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,RuntimeAttributeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\RuntimeAttributeTests.cs,Can_add_RequestFilter_attribute_in_Configure,The following statement contains a magic number: Assert.That(response.Id' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventIntegrationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventIntegrationTests.cs,Does_reconnect_when_remote_AppServer_restarts,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMinutes(10));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsAppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Configure,The following statement contains a magic number: Plugins.Add(new ServerEventsFeature              {                  HeartbeatInterval = TimeSpan.FromMilliseconds(200)'                  LimitToAuthenticatedUsers = LimitToAuthenticatedUsers'                  OnPublish = OnPublish              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Can_connect_to_ServerEventsStream,The following statement contains a magic number: Assert.That(connectMsg.IdleTimeoutMs' Is.EqualTo(TimeSpan.FromSeconds(30).TotalMilliseconds));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_fire_onJoin_events_for_multiple_Channels,The following statement contains a magic number: var connectMsg = await client.Connect().WaitAsync(2000);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_fire_onJoin_events_for_multiple_Channels,The following statement contains a magic number: await allJoinsReceived.Task.WaitAsync(3000);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_not_fire_UnobservedTaskException,The following statement contains a magic number: Assert.True(connectedEvent.WaitOne(TimeSpan.FromSeconds(10)));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_not_fire_UnobservedTaskException,The following statement contains a magic number: await Task.Delay(200);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_fire_all_callbacks,The following statement contains a magic number: taskCmd != await Task.WhenAny(taskCmd' Task.Delay(2000))
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_fire_all_callbacks,The following statement contains a magic number: Assert.That(commands.Count' Is.GreaterThanOrEqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_receive_messages,The following statement contains a magic number: Assert.That(msgs1.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_receive_messages,The following statement contains a magic number: Assert.That(msgs2.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_send_multiple_heartbeats,The following statement contains a magic number: client1.OnHeartbeat = () =>                  {                      //configured to 1s interval in AppHost                      if (heartbeats++ == 2)                          tcs.SetResult(null);                  };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_send_multiple_heartbeats,The following statement contains a magic number: Assert.That(heartbeats' Is.GreaterThanOrEqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,GetStringFromUrlAsync_does_throw_error,The following statement contains a magic number: task != await Task.WhenAny(task' Task.Delay(2000))
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_reconnect_on_lost_connection,The following statement contains a magic number: await Task.WhenAny(client1.Connect()' Task.Delay(2000));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_reconnect_on_lost_connection,The following statement contains a magic number: var msg2 = await msgTask.WaitAsync(5000);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_send_message_to_named_receiver,The following statement contains a magic number: client1.Post(new CustomType { Id = 2' Name = "Bar" }' "test.BarMethod");
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_send_message_to_named_receiver,The following statement contains a magic number: Assert.That(bar.Id' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_send_message_to_named_receiver,The following statement contains a magic number: client1.Post(new CustomType { Id = 3' Name = "Baz" }' "test.BazMethod");
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_send_message_to_named_receiver,The following statement contains a magic number: Assert.That(baz.Id' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_send_message_to_named_receiver,The following statement contains a magic number: client1.Post(new CustomType { Id = 4' Name = "Qux" }' "test.QuxSetter");
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_send_message_to_named_receiver,The following statement contains a magic number: Assert.That(qux.Id' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Can_use_IOC_to_autowire_Receivers,The following statement contains a magic number: client1.Post(new SetterType { Id = 2' Name = "Bar" }' "cmd.Setter");
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Can_use_IOC_to_autowire_Receivers,The following statement contains a magic number: Assert.That(setterType.Id' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_receive_messages_on_to_clients_subscribed_on_multiple_channels,The following statement contains a magic number: Assert.That(channelAsubscribers.Count' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_receive_messages_on_to_clients_subscribed_on_multiple_channels,The following statement contains a magic number: Assert.That(channelABsubscribers.Count' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_receive_messages_on_to_clients_subscribed_on_multiple_channels,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_receive_messages_on_to_clients_subscribed_on_multiple_channels,The following statement contains a magic number: Assert.That(msgsAB.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_receive_messages_on_to_clients_subscribed_on_multiple_channels,The following statement contains a magic number: Assert.That(msgsABC.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_receive_messages_on_to_clients_subscribed_on_multiple_channels,The following statement contains a magic number: Assert.That(msgsABCD.Count' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_receive_messages_on_to_clients_subscribed_on_multiple_channels,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_receive_messages_on_to_clients_subscribed_on_multiple_channels,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_receive_messages_on_to_clients_subscribed_on_multiple_channels,The following statement contains a magic number: Assert.That(msgsA.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_receive_messages_on_to_clients_subscribed_on_multiple_channels,The following statement contains a magic number: Assert.That(msgsAB.Count' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_receive_messages_on_to_clients_subscribed_on_multiple_channels,The following statement contains a magic number: Assert.That(msgsABC.Count' Is.EqualTo(6));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_receive_messages_on_to_clients_subscribed_on_multiple_channels,The following statement contains a magic number: Assert.That(msgsABCD.Count' Is.EqualTo(8));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_receive_all_join_and_leave_messages,The following statement contains a magic number: clientA.OnCommand = e =>                  {                      if (e is ServerEventJoin)                      {                          joinA.Add((ServerEventJoin)e);                          if (joinA.Count == 2)                              joinARecieved.SetResult(true);                      }                      else if (e is ServerEventLeave)                          leaveA.Add((ServerEventLeave)e);                  };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_receive_all_join_and_leave_messages,The following statement contains a magic number: clientB.OnCommand = e =>                  {                      if (e is ServerEventJoin)                      {                          joinB.Add((ServerEventJoin)e);                          if (joinB.Count == 2)                              joinBRecieved.SetResult(true);                      }                      else if (e is ServerEventLeave)                          leaveB.Add((ServerEventLeave)e);                  };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_receive_all_join_and_leave_messages,The following statement contains a magic number: clientAB.OnCommand = e =>                  {                      if (e is ServerEventJoin)                      {                          joinAB.Add((ServerEventJoin)e);                          if (joinAB.Count == 2)                              joinABRecieved.SetResult(true);                      }                      else if (e is ServerEventLeave)                          leaveAB.Add((ServerEventLeave)e);                  };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_receive_all_join_and_leave_messages,The following statement contains a magic number: Assert.That(joinA.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_receive_all_join_and_leave_messages,The following statement contains a magic number: Assert.That(joinB.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_receive_all_join_and_leave_messages,The following statement contains a magic number: Assert.That(joinAB.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_receive_all_join_and_leave_messages,The following statement contains a magic number: Assert.That(channelAsubscribers.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_receive_all_join_and_leave_messages,The following statement contains a magic number: Assert.That(channelBsubscribers.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_receive_all_join_and_leave_messages,The following statement contains a magic number: Assert.That(channelABsubscribers.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_receive_all_join_and_leave_messages,The following statement contains a magic number: Assert.That(usersA.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_receive_all_join_and_leave_messages,The following statement contains a magic number: Assert.That(usersB.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_receive_all_join_and_leave_messages,The following statement contains a magic number: Assert.That(usersAB.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_receive_all_join_and_leave_messages,The following statement contains a magic number: await Task.Delay(100);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_receive_all_join_and_leave_messages,The following statement contains a magic number: await Task.Delay(100);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,MultiChannel_Does_receive_all_join_and_leave_messages,The following statement contains a magic number: clientAB.OnCommand = e =>                  {                      if (e is ServerEventJoin)                      {                          joinAB.Add((ServerEventJoin)e);                          if (joinAB.Count == 4)                              joinABRecieved.SetResult(true);                      }                      else if (e is ServerEventLeave)                          leaveAB.Add((ServerEventLeave)e);                  };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,MultiChannel_Does_receive_all_join_and_leave_messages,The following statement contains a magic number: Assert.That(joinAB.Count' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,MultiChannel_Does_receive_all_join_and_leave_messages,The following statement contains a magic number: await Task.Delay(100);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,MultiChannel_Does_receive_all_join_and_leave_messages,The following statement contains a magic number: Assert.That(leaveAB.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Can_subscribe_to_channels_whilst_connected,The following statement contains a magic number: await Task.Delay(500);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Can_subscribe_to_channels_whilst_connected,The following statement contains a magic number: await Task.Delay(500);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Can_subscribe_to_channels_whilst_connected,The following statement contains a magic number: await Task.Delay(500);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Can_subscribe_to_channels_whilst_connected,The following statement contains a magic number: Assert.That(msgs2.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Can_subscribe_to_channels_whilst_connected,The following statement contains a magic number: await Task.Delay(500);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Can_subscribe_to_channels_whilst_connected,The following statement contains a magic number: await Task.Delay(500);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Can_subscribe_to_channels_whilst_connected,The following statement contains a magic number: Assert.That(msgs1.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Can_subscribe_to_channels_whilst_connected,The following statement contains a magic number: Assert.That(msgs2.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Can_unsubscribe_from_channels_whilst_connected,The following statement contains a magic number: await Task.Delay(500);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Can_unsubscribe_from_channels_whilst_connected,The following statement contains a magic number: await Task.Delay(500);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Can_unsubscribe_from_channels_whilst_connected,The following statement contains a magic number: await Task.Delay(500);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Can_unsubscribe_from_channels_whilst_connected,The following statement contains a magic number: Assert.That(msgs1.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Can_unsubscribe_from_channels_whilst_connected,The following statement contains a magic number: Assert.That(msgs2.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Can_unsubscribe_from_channels_whilst_connected,The following statement contains a magic number: await Task.Delay(500);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Can_unsubscribe_from_channels_whilst_connected,The following statement contains a magic number: await Task.Delay(500);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Can_unsubscribe_from_channels_whilst_connected,The following statement contains a magic number: Assert.That(msgs1.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Can_unsubscribe_from_channels_whilst_connected,The following statement contains a magic number: Assert.That(msgs2.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_fire_multiple_listeners_for_custom_trigger,The following statement contains a magic number: await Task.Delay(500);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_fire_multiple_listeners_for_custom_trigger,The following statement contains a magic number: await Task.Delay(500);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Does_fire_multiple_listeners_for_custom_trigger,The following statement contains a magic number: Assert.That(msgs2.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventConnectionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Only_allows_one_Thread_through_at_a_time,The following statement contains a magic number: 10.Times(i =>                  {                      ThreadPool.QueueUserWorkItem(_ => client.Start());                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventConnectionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Only_allows_one_Thread_through_at_a_time,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventConnectionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Only_allows_one_Thread_through_at_a_time,The following statement contains a magic number: 10.Times(i =>                  {                      ThreadPool.QueueUserWorkItem(_ => client.Restart());                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventConnectionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Only_allows_one_Thread_through_at_a_time,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventConnectionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Only_allows_one_Thread_through_at_a_time,The following statement contains a magic number: Assert.That(client.TimesStarted' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventConnectionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Only_allows_one_Thread_through_at_a_time,The following statement contains a magic number: 10.Times(i =>                  {                      ThreadPool.QueueUserWorkItem(_ => client.Stop());                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventConnectionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Only_allows_one_Thread_through_at_a_time,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventConnectionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Only_allows_one_Thread_through_at_a_time,The following statement contains a magic number: Assert.That(client.TimesStarted' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventConnectionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Only_allows_one_Thread_through_at_a_time,The following statement contains a magic number: 10.Times(i =>                  {                      ThreadPool.QueueUserWorkItem(_ => client.Restart());                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventConnectionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Only_allows_one_Thread_through_at_a_time,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventConnectionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Only_allows_one_Thread_through_at_a_time,The following statement contains a magic number: Assert.That(client.TimesStarted' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventConnectionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Only_allows_one_Thread_through_at_a_time,The following statement contains a magic number: 10.Times(i =>                  {                      ThreadPool.QueueUserWorkItem(_ => client.Start());                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventConnectionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Only_allows_one_Thread_through_at_a_time,The following statement contains a magic number: var wait = 10;
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventConnectionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Only_allows_one_Thread_through_at_a_time,The following statement contains a magic number: client.TimesStarted == 3
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventConnectionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Only_allows_one_Thread_through_at_a_time,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventConnectionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Only_allows_one_Thread_through_at_a_time,The following statement contains a magic number: wait++ < 50
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServerEventConnectionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Only_allows_one_Thread_through_at_a_time,The following statement contains a magic number: Assert.That(client.TimesStarted' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AuthMemoryServerEventsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServerEventTests.cs,Channels_updated_after_Restart,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,JsonServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceClientTests.cs,Does_allow_sending_Cached_Response,The following statement contains a magic number: var response1 = client.Get(new GetCustomer { CustomerId = 5 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,JsonServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceClientTests.cs,Does_allow_sending_Cached_Response,The following statement contains a magic number: var response2 = client.Get(new GetCustomer { CustomerId = 5 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,JsonServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceClientTests.cs,Does_allow_sending_Cached_Response_Async,The following statement contains a magic number: var response1 = await client.GetAsync(new GetCustomer { CustomerId = 5 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,JsonServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceClientTests.cs,Does_allow_sending_Cached_Response_Async,The following statement contains a magic number: var response2 = await client.GetAsync(new GetCustomer { CustomerId = 5 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,JsonHttpClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceClientTests.cs,Does_allow_sending_Cached_Response,The following statement contains a magic number: var response1 = client.Get(new GetCustomer { CustomerId = 5 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,JsonHttpClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceClientTests.cs,Does_allow_sending_Cached_Response,The following statement contains a magic number: var response2 = client.Get(new GetCustomer { CustomerId = 5 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,JsonHttpClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceClientTests.cs,Does_allow_sending_Cached_Response_Async,The following statement contains a magic number: var response1 = await client.GetAsync(new GetCustomer { CustomerId = 5 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,JsonHttpClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceClientTests.cs,Does_allow_sending_Cached_Response_Async,The following statement contains a magic number: var response2 = await client.GetAsync(new GetCustomer { CustomerId = 5 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceClientTests.cs,Can_GetCustomers,The following statement contains a magic number: var request = new GetCustomer { CustomerId = 5 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceClientTests.cs,Can_post_raw_response_as_raw_JSON,The following statement contains a magic number: var request = new GetCustomer { CustomerId = 5 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceClientTests.cs,Can_post_raw_response_as_raw_JSON,The following statement contains a magic number: Assert.That(response.Customer.Id' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceClientTests.cs,Can_post_raw_response_as_raw_JSON,The following statement contains a magic number: Assert.That(response.Customer.Id' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceClientTests.cs,Can_post_raw_response_as_raw_JSON,The following statement contains a magic number: Assert.That(response.Customer.Id' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceClientTests.cs,Can_post_raw_response_as_raw_JSON,The following statement contains a magic number: Assert.That(response.Customer.Id' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceClientTests.cs,Can_post_raw_response_as_raw_JSON_async,The following statement contains a magic number: var request = new GetCustomer { CustomerId = 5 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceClientTests.cs,Can_post_raw_response_as_raw_JSON_async,The following statement contains a magic number: Assert.That(response.Customer.Id' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceClientTests.cs,Can_post_raw_response_as_raw_JSON_async,The following statement contains a magic number: Assert.That(response.Customer.Id' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceClientTests.cs,Can_post_raw_response_as_raw_JSON_async,The following statement contains a magic number: Assert.That(response.Customer.Id' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceClientTests.cs,Can_post_raw_response_as_raw_JSON_async,The following statement contains a magic number: Assert.That(response.Customer.Id' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceClientTests.cs,Can_post_raw_response_as_raw_JSON_HttpClient,The following statement contains a magic number: var request = new GetCustomer { CustomerId = 5 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceClientTests.cs,Can_post_raw_response_as_raw_JSON_HttpClient,The following statement contains a magic number: Assert.That(response.Customer.Id' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceClientTests.cs,Can_post_raw_response_as_raw_JSON_HttpClient,The following statement contains a magic number: Assert.That(response.Customer.Id' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceClientTests.cs,Can_post_raw_response_as_raw_JSON_HttpClient,The following statement contains a magic number: Assert.That(response.Customer.Id' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceClientTests.cs,Can_post_raw_response_as_raw_JSON_HttpClient,The following statement contains a magic number: Assert.That(response.Customer.Id' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceClientTests.cs,Can_WaitAsync,The following statement contains a magic number: PclExportClient.Instance.WaitAsync(100)                  .ContinueWith(_ =>                  {                      called++;                  });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceClientTests.cs,Can_WaitAsync,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceGatewayServices,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceGatewayTests.cs,Any,The following statement contains a magic number: var requests = 3.Times(i => new SGSyncGetAnyInternal              {                  Value = request.Value + "> " + Request.Verb + " " + typeof(SGSendAllSyncGetAnyInternal).Name + i              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceGatewayServices,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceGatewayTests.cs,Any,The following statement contains a magic number: var requests = 3.Times(i => new SGSyncPostExternal              {                  Value = request.Value + "> " + Request.Verb + " " + typeof(SGSendAllSyncPostExternal).Name + i              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceGatewayServices,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceGatewayTests.cs,Any,The following statement contains a magic number: var requests = 3.Times(i => new SGSyncPostInternalVoid              {                  Value = request.Value + "> " + Request.Verb + " " + typeof(SGPublishAllPostInternalVoid).Name + i              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceGatewayServices,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceGatewayTests.cs,Any,The following statement contains a magic number: var requests = 3.Times(i => new SGSyncPostExternalVoid              {                  Value = request.Value + "> " + Request.Verb + " " + typeof(SGPublishAllPostExternalVoid).Name + i              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceGatewayTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceGatewayTests.cs,Does_SGSendAllSyncGetAnyInternal,The following statement contains a magic number: Assert.That(response.Map(x => x.Value)' Is.EquivalentTo(                  3.Times(i => "GET CLIENT> GET SGSendAllSyncGetAnyInternal{0}> ANY SGSyncGetAnyInternal".Fmt(i))));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceGatewayTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceGatewayTests.cs,Does_SGSendAllSyncPostExternal,The following statement contains a magic number: Assert.That(response.Map(x => x.Value)' Is.EquivalentTo(                  3.Times(i => "GET CLIENT> GET SGSendAllSyncPostExternal{0}> POST SGSyncPostExternal".Fmt(i))));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceGatewayTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceGatewayTests.cs,Does_SGPublishAllPostInternalVoid,The following statement contains a magic number: Assert.That(MessageProducer.Messages.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceGatewayTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceGatewayTests.cs,Does_SGPublishAllPostInternalVoid,The following statement contains a magic number: Assert.That(MessageProducer.Messages.Map(x => ((SGSyncPostInternalVoid)x).Value)' Is.EquivalentTo(                  3.Times(i => "GET CLIENT> GET SGPublishAllPostInternalVoid{0}".Fmt(i))));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceGatewayTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceGatewayTests.cs,Does_SGPublishAllPostExternalVoid,The following statement contains a magic number: Assert.That(MessageProducer.Messages.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceGatewayTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceGatewayTests.cs,Does_SGPublishAllPostExternalVoid,The following statement contains a magic number: Assert.That(MessageProducer.Messages.Map(x => ((SGSyncPostExternalVoid)x).Value)' Is.EquivalentTo(                  3.Times(i => "GET CLIENT> POST SGPublishAllPostExternalVoid{0}".Fmt(i))));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceGatewayAsyncServices,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceGatewayTestsAsync.cs,Any,The following statement contains a magic number: var requests = 3.Times(i => new SGAsyncGetAnyInternal              {                  Value = request.Value + "> " + Request.Verb + " " + typeof(SGSendAllAsyncGetAnyInternal).Name + i              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceGatewayAsyncServices,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceGatewayTestsAsync.cs,Any,The following statement contains a magic number: var requests = 3.Times(i => new SGAsyncPostExternal              {                  Value = request.Value + "> " + Request.Verb + " " + typeof(SGSendAllAsyncPostExternal).Name + i              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceGatewayAsyncServices,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceGatewayTestsAsync.cs,Any,The following statement contains a magic number: var requests = 3.Times(i => new SGAsyncPostInternalVoid              {                  Value = request.Value + "> " + Request.Verb + " " + typeof(SGPublishAllAsyncPostInternalVoid).Name + i              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceGatewayAsyncServices,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceGatewayTestsAsync.cs,Any,The following statement contains a magic number: var requests = 3.Times(i => new SGAsyncPostExternalVoid              {                  Value = request.Value + "> " + Request.Verb + " " + typeof(SGPublishAllAsyncPostExternalVoid).Name + i              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AllInternalServiceGatewayAsyncTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceGatewayTestsAsync.cs,Verify_all_internal_gateway_requests_are_marked_as_in_process,The following statement contains a magic number: await client.GetAsync(new SGMultiGatewayRequests { Times = 3' Delay = 10 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,AllInternalServiceGatewayAsyncTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceGatewayTestsAsync.cs,Verify_all_internal_gateway_requests_are_marked_as_in_process,The following statement contains a magic number: await client.GetAsync(new SGMultiGatewayRequests { Times = 3' Delay = 10 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceGatewayAsyncTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceGatewayTestsAsync.cs,Does_SGSendAllAsyncGetAnyInternal,The following statement contains a magic number: Assert.That(response.Map(x => x.Value)' Is.EquivalentTo(                  3.Times(i => "GET CLIENT> GET SGSendAllAsyncGetAnyInternal{0}> ANY SGAsyncGetAnyInternal".Fmt(i))));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceGatewayAsyncTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceGatewayTestsAsync.cs,Does_SGSendAllAsyncPostExternal,The following statement contains a magic number: Assert.That(response.Map(x => x.Value)' Is.EquivalentTo(                  3.Times(i => "GET CLIENT> GET SGSendAllAsyncPostExternal{0}> POST SGAsyncPostExternal".Fmt(i))));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceGatewayAsyncTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceGatewayTestsAsync.cs,Does_SGPublishAllAsyncPostInternalVoid,The following statement contains a magic number: Assert.That(MessageProducer.Messages.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceGatewayAsyncTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceGatewayTestsAsync.cs,Does_SGPublishAllAsyncPostInternalVoid,The following statement contains a magic number: Assert.That(MessageProducer.Messages.Map(x => ((SGAsyncPostInternalVoid)x).Value)' Is.EquivalentTo(                  3.Times(i => "GET CLIENT> GET SGPublishAllAsyncPostInternalVoid{0}".Fmt(i))));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceGatewayAsyncTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceGatewayTestsAsync.cs,Does_SGPublishAllAsyncPostExternalVoid,The following statement contains a magic number: Assert.That(MessageProducer.Messages.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceGatewayAsyncTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceGatewayTestsAsync.cs,Does_SGPublishAllAsyncPostExternalVoid,The following statement contains a magic number: Assert.That(MessageProducer.Messages.Map(x => ((SGAsyncPostExternalVoid)x).Value)' Is.EquivalentTo(                  3.Times(i => "GET CLIENT> POST SGPublishAllAsyncPostExternalVoid{0}".Fmt(i))));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ServiceSetupTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ServiceSetupTests.cs,Can_still_load_with_Abstract_Generic_BaseTypes,The following statement contains a magic number: Assert.That(response.Id' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SessionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SessionTests.cs,Can_increment_session_int_counter,The following statement contains a magic number: Assert.That(client.Get(new SessionIncr()).Counter' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SessionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SessionTests.cs,Different_clients_have_different_session_int_counters,The following statement contains a magic number: Assert.That(client.Get(new SessionIncr()).Counter' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SessionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SessionTests.cs,Can_increment_session_cart_qty,The following statement contains a magic number: Assert.That(client.Get(request).Qty' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SessionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SessionTests.cs,Different_clients_have_different_session_cart_qty,The following statement contains a magic number: Assert.That(client.Get(request).Qty' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SessionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SessionTests.cs,Can_increment_typed_session_tag,The following statement contains a magic number: Assert.That(Log(client.Get(new SessionTypedIncr())).Tag' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SessionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SessionTests.cs,Different_clients_have_different_typed_session_tag,The following statement contains a magic number: Assert.That(Log(client.Get(new SessionTypedIncr())).Tag' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SessionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SessionTests.cs,Different_clients_have_different_typed_session_tag,The following statement contains a magic number: Assert.That(Log(altClient.Get(new SessionTypedIncr())).Tag' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SessionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SessionTests.cs,Different_clients_have_different_typed_session_tag,The following statement contains a magic number: Assert.That(client.Get(new SessionTypedIncr()).Tag' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SessionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SessionTests.cs,Different_clients_have_different_typed_session_tag,The following statement contains a magic number: Assert.That(altClient.Get(new SessionTypedIncr()).Tag' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SessionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SessionTests.cs,Can_access_session_with_HTTP_Headers,The following statement contains a magic number: Assert.That(Log(altClient.Get(new SessionTypedIncr())).Tag' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SessionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SessionTests.cs,Can_access_session_with_QueryString,The following statement contains a magic number: Assert.That(response.Tag' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SessionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SessionTests.cs,Can_override_existing_session_with_QueryString,The following statement contains a magic number: Assert.That(response.Tag' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SwaggerFeatureServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SwaggerFeatureTests.cs,RunFor5Mins,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromMinutes(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SwaggerFeatureServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SwaggerFeatureTests.cs,Should_order_fields_with_DataMemberAttribute,The following statement contains a magic number: Assert.That(requestClassModel.Properties.ElementAt(2).Key' Is.EqualTo("Dog"));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SwaggerFeatureServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SwaggerFeatureTests.cs,Should_order_fields_with_DataMemberAttribute,The following statement contains a magic number: Assert.That(requestClassModel.Properties.ElementAt(3).Key' Is.EqualTo("Bird"));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SwaggerFeatureServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SwaggerFeatureTests.cs,Should_order_fields_with_DataMemberAttribute,The following statement contains a magic number: Assert.That(requestClassModel.Properties.ElementAt(4).Key' Is.EqualTo("Albatross"));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SwaggerFeatureServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SwaggerFeatureTests.cs,Should_order_fields_with_DataMemberAttribute,The following statement contains a magic number: Assert.That(requestClassModel.Properties.ElementAt(5).Key' Is.EqualTo("Parrot"));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SwaggerFeatureServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SwaggerFeatureTests.cs,Should_order_fields_with_DataMemberAttribute,The following statement contains a magic number: Assert.That(requestClassModel.Properties.ElementAt(6).Key' Is.EqualTo("Antelope"));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SwaggerFeatureServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SwaggerFeatureTests.cs,Should_order_fields_with_DataMemberAttribute,The following statement contains a magic number: Assert.That(responseClassModel.Properties.ElementAt(2).Key' Is.EqualTo("Cat"));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SwaggerFeatureServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SwaggerFeatureTests.cs,Should_order_fields_with_DataMemberAttribute,The following statement contains a magic number: Assert.That(responseClassModel.Properties.ElementAt(3).Key' Is.EqualTo("Dog"));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SwaggerFeatureServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SwaggerFeatureTests.cs,Should_order_fields_with_DataMemberAttribute,The following statement contains a magic number: Assert.That(responseClassModel.Properties.ElementAt(4).Key' Is.EqualTo("Baldeagle"));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SwaggerFeatureServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SwaggerFeatureTests.cs,Should_order_fields_with_DataMemberAttribute,The following statement contains a magic number: Assert.That(responseClassModel.Properties.ElementAt(5).Key' Is.EqualTo("Bird"));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SwaggerFeatureServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SwaggerFeatureTests.cs,Should_order_fields_with_DataMemberAttribute,The following statement contains a magic number: Assert.That(responseClassModel.Properties.ElementAt(6).Key' Is.EqualTo("Albatross"));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SwaggerFeatureServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SwaggerFeatureTests.cs,Should_order_fields_with_DataMemberAttribute,The following statement contains a magic number: Assert.That(responseClassModel.Properties.ElementAt(7).Key' Is.EqualTo("Parrot"));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SwaggerFeatureServiceTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SwaggerFeatureTests.cs,Should_order_fields_with_DataMemberAttribute,The following statement contains a magic number: Assert.That(responseClassModel.Properties.ElementAt(8).Key' Is.EqualTo("Antelope"));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SyncRestClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SyncRestClientTests.cs,Can_GET_GetFactorial_using_RestClient,The following statement contains a magic number: Assert.That(response.Result' Is.EqualTo(GetFactorialService.GetFactorial(3)));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SyncRestClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SyncRestClientTests.cs,Can_POST_to_add_new_Movie_using_RestClient,The following statement contains a magic number: var newMovie = new Support.Host.Movie {                  ImdbId = "tt0450259"'                  Title = "Blood Diamond"'                  Rating = 8.0m'                  Director = "Edward Zwick"'                  ReleaseDate = new DateTime(2007' 1' 26)'                  TagLine = "A fisherman' a smuggler' and a syndicate of businessmen match wits over the possession of a priceless diamond."'                  Genres = new List<string> { "Adventure"' "Drama"' "Thriller" }'              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SyncRestClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SyncRestClientTests.cs,Can_POST_to_add_new_Movie_using_RestClient,The following statement contains a magic number: var newMovie = new Support.Host.Movie {                  ImdbId = "tt0450259"'                  Title = "Blood Diamond"'                  Rating = 8.0m'                  Director = "Edward Zwick"'                  ReleaseDate = new DateTime(2007' 1' 26)'                  TagLine = "A fisherman' a smuggler' and a syndicate of businessmen match wits over the possession of a priceless diamond."'                  Genres = new List<string> { "Adventure"' "Drama"' "Thriller" }'              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SyncRestClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SyncRestClientTests.cs,Can_POST_to_add_new_Movie_using_RestClient,The following statement contains a magic number: var newMovie = new Support.Host.Movie {                  ImdbId = "tt0450259"'                  Title = "Blood Diamond"'                  Rating = 8.0m'                  Director = "Edward Zwick"'                  ReleaseDate = new DateTime(2007' 1' 26)'                  TagLine = "A fisherman' a smuggler' and a syndicate of businessmen match wits over the possession of a priceless diamond."'                  Genres = new List<string> { "Adventure"' "Drama"' "Thriller" }'              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SyncRestClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SyncRestClientTests.cs,Can_DELETE_Movie_using_RestClient,The following statement contains a magic number: var newMovie = new Support.Host.Movie              {                  ImdbId = "tt0450259"'                  Title = "Blood Diamond"'                  Rating = 8.0m'                  Director = "Edward Zwick"'                  ReleaseDate = new DateTime(2007' 1' 26)'                  TagLine = "A fisherman' a smuggler' and a syndicate of businessmen match wits over the possession of a priceless diamond."'                  Genres = new List<string> { "Adventure"' "Drama"' "Thriller" }'              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SyncRestClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SyncRestClientTests.cs,Can_DELETE_Movie_using_RestClient,The following statement contains a magic number: var newMovie = new Support.Host.Movie              {                  ImdbId = "tt0450259"'                  Title = "Blood Diamond"'                  Rating = 8.0m'                  Director = "Edward Zwick"'                  ReleaseDate = new DateTime(2007' 1' 26)'                  TagLine = "A fisherman' a smuggler' and a syndicate of businessmen match wits over the possession of a priceless diamond."'                  Genres = new List<string> { "Adventure"' "Drama"' "Thriller" }'              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SyncRestClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SyncRestClientTests.cs,Can_DELETE_Movie_using_RestClient,The following statement contains a magic number: var newMovie = new Support.Host.Movie              {                  ImdbId = "tt0450259"'                  Title = "Blood Diamond"'                  Rating = 8.0m'                  Director = "Edward Zwick"'                  ReleaseDate = new DateTime(2007' 1' 26)'                  TagLine = "A fisherman' a smuggler' and a syndicate of businessmen match wits over the possession of a priceless diamond."'                  Genres = new List<string> { "Adventure"' "Drama"' "Thriller" }'              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SyncRestClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SyncRestClientTests.cs,Can_PUT_complex_type_with_custom_path,The following statement contains a magic number: var request = new InboxPostResponseRequest {                  Id = 123'                  Responses = new List<PageElementResponseDTO> {                      new PageElementResponseDTO {                          PageElementId = 123'                          PageElementResponse = "something"'                          PageElementType = "Question"                      }                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,SyncRestClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\SyncRestClientTests.cs,Can_PUT_complex_type_with_custom_path,The following statement contains a magic number: var request = new InboxPostResponseRequest {                  Id = 123'                  Responses = new List<PageElementResponseDTO> {                      new PageElementResponseDTO {                          PageElementId = 123'                          PageElementResponse = "something"'                          PageElementType = "Question"                      }                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,UniqueRequestTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\UniqueRequestTests.cs,Can_handle_collections_with_ServiceClient,The following statement contains a magic number: var request = new Collections {                  Ids = new[] {1' 2' 3}'                   Names = new List<string> {"A"' "B"' "C"}'              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,UniqueRequestTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\UniqueRequestTests.cs,Can_handle_collections_with_ServiceClient,The following statement contains a magic number: var request = new Collections {                  Ids = new[] {1' 2' 3}'                   Names = new List<string> {"A"' "B"' "C"}'              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,UniqueRequestTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\UniqueRequestTests.cs,Can_handle_collections_with_HttpClient,The following statement contains a magic number: Assert.That(response.Ids' Is.EquivalentTo(new[] { 1' 2' 3 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,UniqueRequestTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\UniqueRequestTests.cs,Can_handle_collections_with_HttpClient,The following statement contains a magic number: Assert.That(response.Ids' Is.EquivalentTo(new[] { 1' 2' 3 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,UniqueRequestTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\UniqueRequestTests.cs,Can_handle_collections_with_HttpClient,The following statement contains a magic number: Assert.That(response.Ids' Is.EquivalentTo(new[] { 1' 2' 3 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,UniqueRequestTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\UniqueRequestTests.cs,Can_handle_collections_with_HttpClient,The following statement contains a magic number: Assert.That(response.Ids' Is.EquivalentTo(new[] { 1' 2' 3 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,UniqueRequestTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\UniqueRequestTests.cs,Can_handle_collections_with_HttpClient_on_predefined_route,The following statement contains a magic number: Assert.That(response.Ids' Is.EquivalentTo(new[] { 1' 2' 3 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,UniqueRequestTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\UniqueRequestTests.cs,Can_handle_collections_with_HttpClient_on_predefined_route,The following statement contains a magic number: Assert.That(response.Ids' Is.EquivalentTo(new[] { 1' 2' 3 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,UniqueRequestTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\UniqueRequestTests.cs,Can_handle_collections_with_HttpClient_on_predefined_route,The following statement contains a magic number: Assert.That(response.Ids' Is.EquivalentTo(new[] { 1' 2' 3 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,UniqueRequestTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\UniqueRequestTests.cs,Can_handle_collections_with_HttpClient_on_predefined_route,The following statement contains a magic number: Assert.That(response.Ids' Is.EquivalentTo(new[] { 1' 2' 3 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,UnitTestExample,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\UnitTestExample.cs,Using_in_memory_database,The following statement contains a magic number: var rockstars = service.Get(new FindRockstars { Aged = 27 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests,UnitTestExample,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\UnitTestExample.cs,Using_in_memory_database,The following statement contains a magic number: Assert.That(rockstars.Count' Is.EqualTo(SeedData.Count(x => x.Age == 27)));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,UnitTestExample,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\UnitTestExample.cs,Using_in_memory_database,The following statement contains a magic number: Assert.That(status.Age' Is.EqualTo(48));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,UnitTestExample,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\UnitTestExample.cs,Using_in_memory_database,The following statement contains a magic number: Assert.That(status.Age' Is.EqualTo(27));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,UnitTestExample,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\UnitTestExample.cs,Using_manual_dependency_injection,The following statement contains a magic number: Assert.That(status.Age' Is.EqualTo(48));
Magic Number,ServiceStack.WebHost.Endpoints.Tests,RockstarRepositoryMock,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\UnitTestExample.cs,GetByLastName,The following statement contains a magic number: return lastName == "Vedder"                      ? new Rockstar { Id = 6' FirstName = "Eddie"' LastName = "Vedder"' Age = 48 }                      : null;
Magic Number,ServiceStack.WebHost.Endpoints.Tests,RockstarRepositoryMock,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\UnitTestExample.cs,GetByLastName,The following statement contains a magic number: return lastName == "Vedder"                      ? new Rockstar { Id = 6' FirstName = "Eddie"' LastName = "Vedder"' Age = 48 }                      : null;
Magic Number,ServiceStack.WebHost.Endpoints.Tests,TriggerValidatorsValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ValidationExceptionTests.cs,TriggerValidatorsValidator,The following statement contains a magic number: RuleFor(x => x.ExclusiveBetween).ExclusiveBetween(10' 20);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,TriggerValidatorsValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ValidationExceptionTests.cs,TriggerValidatorsValidator,The following statement contains a magic number: RuleFor(x => x.ExclusiveBetween).ExclusiveBetween(10' 20);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,TriggerValidatorsValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ValidationExceptionTests.cs,TriggerValidatorsValidator,The following statement contains a magic number: RuleFor(x => x.GreaterThanOrEqual).GreaterThanOrEqualTo(10);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,TriggerValidatorsValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ValidationExceptionTests.cs,TriggerValidatorsValidator,The following statement contains a magic number: RuleFor(x => x.GreaterThan).GreaterThan(10);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,TriggerValidatorsValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ValidationExceptionTests.cs,TriggerValidatorsValidator,The following statement contains a magic number: RuleFor(x => x.InclusiveBetween).InclusiveBetween(10' 20);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,TriggerValidatorsValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ValidationExceptionTests.cs,TriggerValidatorsValidator,The following statement contains a magic number: RuleFor(x => x.InclusiveBetween).InclusiveBetween(10' 20);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,TriggerValidatorsValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ValidationExceptionTests.cs,TriggerValidatorsValidator,The following statement contains a magic number: RuleFor(x => x.Length).Length(10);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,TriggerValidatorsValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ValidationExceptionTests.cs,TriggerValidatorsValidator,The following statement contains a magic number: RuleFor(x => x.LessThanOrEqual).LessThanOrEqualTo(10);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,TriggerValidatorsValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ValidationExceptionTests.cs,TriggerValidatorsValidator,The following statement contains a magic number: RuleFor(x => x.LessThan).LessThan(10);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ValidationExceptionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ValidationExceptionTests.cs,Triggering_all_validators_returns_right_ErrorCode,The following statement contains a magic number: var request = new TriggerValidators              {                  CreditCard = "NotCreditCard"'                  Email = "NotEmail"'                  Empty = "NotEmpty"'                  Equal = "NotEqual"'                  ExclusiveBetween = 1'                  GreaterThan = 1'                  GreaterThanOrEqual = 1'                  InclusiveBetween = 1'                  Length = "Length"'                  LessThan = 20'                  LessThanOrEqual = 20'                  NotEmpty = ""'                  NotEqual = "NotEqual"'                  Null = "NotNull"'                  RegularExpression = "FOO"'                  ScalePrecision = 123.456m              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ValidationExceptionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ValidationExceptionTests.cs,Triggering_all_validators_returns_right_ErrorCode,The following statement contains a magic number: var request = new TriggerValidators              {                  CreditCard = "NotCreditCard"'                  Email = "NotEmail"'                  Empty = "NotEmpty"'                  Equal = "NotEqual"'                  ExclusiveBetween = 1'                  GreaterThan = 1'                  GreaterThanOrEqual = 1'                  InclusiveBetween = 1'                  Length = "Length"'                  LessThan = 20'                  LessThanOrEqual = 20'                  NotEmpty = ""'                  NotEqual = "NotEqual"'                  Null = "NotNull"'                  RegularExpression = "FOO"'                  ScalePrecision = 123.456m              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,ValidationExceptionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ValidationExceptionTests.cs,Triggering_all_validators_returns_right_ErrorCode,The following statement contains a magic number: var request = new TriggerValidators              {                  CreditCard = "NotCreditCard"'                  Email = "NotEmail"'                  Empty = "NotEmpty"'                  Equal = "NotEqual"'                  ExclusiveBetween = 1'                  GreaterThan = 1'                  GreaterThanOrEqual = 1'                  InclusiveBetween = 1'                  Length = "Length"'                  LessThan = 20'                  LessThanOrEqual = 20'                  NotEmpty = ""'                  NotEqual = "NotEqual"'                  Null = "NotNull"'                  RegularExpression = "FOO"'                  ScalePrecision = 123.456m              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,VirtualPathProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\VirtualPathProviderTests.cs,Does_refresh_LastModified,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,ServiceStack.WebHost.Endpoints.Tests,VirtualPathProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\VirtualPathProviderTests.cs,Does_write_binary_file,The following statement contains a magic number: var bytes = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,VirtualPathProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\VirtualPathProviderTests.cs,Does_write_binary_file,The following statement contains a magic number: var bytes = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,VirtualPathProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\VirtualPathProviderTests.cs,Does_write_binary_file,The following statement contains a magic number: var bytes = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,VirtualPathProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\VirtualPathProviderTests.cs,Does_write_binary_file,The following statement contains a magic number: var bytes = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,VirtualPathProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\VirtualPathProviderTests.cs,Does_write_binary_file,The following statement contains a magic number: var bytes = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,VirtualPathProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\VirtualPathProviderTests.cs,Does_write_binary_file,The following statement contains a magic number: var bytes = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,VirtualPathProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\VirtualPathProviderTests.cs,Does_write_binary_file,The following statement contains a magic number: var bytes = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,VirtualPathProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\VirtualPathProviderTests.cs,Does_write_binary_file,The following statement contains a magic number: var bytes = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,VirtualPathProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\VirtualPathProviderTests.cs,GetContents_of_Binary_File_returns_ReadOnlyMemory_byte,The following statement contains a magic number: var bytes = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,VirtualPathProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\VirtualPathProviderTests.cs,GetContents_of_Binary_File_returns_ReadOnlyMemory_byte,The following statement contains a magic number: var bytes = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,VirtualPathProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\VirtualPathProviderTests.cs,GetContents_of_Binary_File_returns_ReadOnlyMemory_byte,The following statement contains a magic number: var bytes = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,VirtualPathProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\VirtualPathProviderTests.cs,GetContents_of_Binary_File_returns_ReadOnlyMemory_byte,The following statement contains a magic number: var bytes = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,VirtualPathProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\VirtualPathProviderTests.cs,GetContents_of_Binary_File_returns_ReadOnlyMemory_byte,The following statement contains a magic number: var bytes = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,VirtualPathProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\VirtualPathProviderTests.cs,GetContents_of_Binary_File_returns_ReadOnlyMemory_byte,The following statement contains a magic number: var bytes = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,VirtualPathProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\VirtualPathProviderTests.cs,GetContents_of_Binary_File_returns_ReadOnlyMemory_byte,The following statement contains a magic number: var bytes = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests,VirtualPathProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\VirtualPathProviderTests.cs,GetContents_of_Binary_File_returns_ReadOnlyMemory_byte,The following statement contains a magic number: var bytes = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,ServiceStack.WebHost.IntegrationTests.Services,AddressValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CustomerServiceValidationTests.cs,ValidAddress,The following statement contains a magic number: return address != null                  && address.Length >= 20                  && address.Length <= 250;
Magic Number,ServiceStack.WebHost.IntegrationTests.Services,AddressValidator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CustomerServiceValidationTests.cs,ValidAddress,The following statement contains a magic number: return address != null                  && address.Length >= 20                  && address.Length <= 250;
Magic Number,ServiceStack.WebHost.IntegrationTests.Services,UserService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CustomerServiceValidationTests.cs,Post,The following statement contains a magic number: return new HttpResult(new SaveUser { Id = -100' User = new User { Name = "bad name" } }' HttpStatusCode.Created);
Magic Number,ServiceStack.WebHost.IntegrationTests.Services,CustomerServiceValidationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CustomerServiceValidationTests.cs,CreateValidCustomers,The following statement contains a magic number: return new ValidCustomers              {                  Id = 1'                  FirstName = "FirstName"'                  LastName = "LastName"'                  Address = "12345 Address St' New York"'                  Company = "Company"'                  Discount = 10'                  HasDiscount = true'                  Postcode = "11215"'              };
Magic Number,ServiceStack.WebHost.IntegrationTests.Services,CustomerServiceValidationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\CustomerServiceValidationTests.cs,Validates_collection_with_null_request_on_Post,The following statement contains a magic number: Assert.That(errorFields.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.IntegrationTests.Services,Todo,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\TodoListTests.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ (Name != null ? Name.GetHashCode() : 0);
Magic Number,ServiceStack.WebHost.IntegrationTests.Services,Todo,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\TodoListTests.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ (Content != null ? Content.GetHashCode() : 0);
Magic Number,ServiceStack.WebHost.IntegrationTests.Services,Todo,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\TodoListTests.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ Done.GetHashCode();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.IntegrationTests,ExampleConfig,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IntegrationTests\ExampleConfig.cs,ExampleConfig,The following statement contains a magic number: DefaultFibonacciLimit = appConfig.Get("DefaultFibonacciLimit"' 10);
Magic Number,ServiceStack.WebHost.Endpoints.Tests.IntegrationTests,MovieRestTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IntegrationTests\MovieRestTests.cs,Can_add_movie,The following statement contains a magic number: var newMovie = new RestMovie  			{  				Id = "tt0110912"'  				Title = "Pulp Fiction"'  				Rating = 8.9m'  				Director = "Quentin Tarantino"'  				ReleaseDate = new DateTime(1994' 10' 24)'  				TagLine = "Girls like me don't make invitations like this to just anyone!"'  				Genres = new List<string> { "Crime"' "Drama"' "Thriller" }'  			};
Magic Number,ServiceStack.WebHost.Endpoints.Tests.IntegrationTests,MovieRestTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IntegrationTests\MovieRestTests.cs,Can_add_movie,The following statement contains a magic number: var newMovie = new RestMovie  			{  				Id = "tt0110912"'  				Title = "Pulp Fiction"'  				Rating = 8.9m'  				Director = "Quentin Tarantino"'  				ReleaseDate = new DateTime(1994' 10' 24)'  				TagLine = "Girls like me don't make invitations like this to just anyone!"'  				Genres = new List<string> { "Crime"' "Drama"' "Thriller" }'  			};
Magic Number,ServiceStack.WebHost.Endpoints.Tests.IntegrationTests,MovieRestTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IntegrationTests\MovieRestTests.cs,Can_add_movie,The following statement contains a magic number: var newMovie = new RestMovie  			{  				Id = "tt0110912"'  				Title = "Pulp Fiction"'  				Rating = 8.9m'  				Director = "Quentin Tarantino"'  				ReleaseDate = new DateTime(1994' 10' 24)'  				TagLine = "Girls like me don't make invitations like this to just anyone!"'  				Genres = new List<string> { "Crime"' "Drama"' "Thriller" }'  			};
Magic Number,ServiceStack.WebHost.Endpoints.Tests.IntegrationTests,MovieRestTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IntegrationTests\MovieRestTests.cs,Can_add_movie,The following statement contains a magic number: var newMovie = new RestMovie  			{  				Id = "tt0110912"'  				Title = "Pulp Fiction"'  				Rating = 8.9m'  				Director = "Quentin Tarantino"'  				ReleaseDate = new DateTime(1994' 10' 24)'  				TagLine = "Girls like me don't make invitations like this to just anyone!"'  				Genres = new List<string> { "Crime"' "Drama"' "Thriller" }'  			};
Magic Number,ServiceStack.WebHost.Endpoints.Tests.IntegrationTests,RestMovie,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IntegrationTests\RestMovie.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ (Title != null ? Title.GetHashCode() : 0);
Magic Number,ServiceStack.WebHost.Endpoints.Tests.IntegrationTests,RestMovie,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IntegrationTests\RestMovie.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ Rating.GetHashCode();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.IntegrationTests,RestMovie,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IntegrationTests\RestMovie.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ (Director != null ? Director.GetHashCode() : 0);
Magic Number,ServiceStack.WebHost.Endpoints.Tests.IntegrationTests,RestMovie,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IntegrationTests\RestMovie.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ ReleaseDate.GetHashCode();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.IntegrationTests,RestMovie,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IntegrationTests\RestMovie.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ (TagLine != null ? TagLine.GetHashCode() : 0);
Magic Number,ServiceStack.WebHost.Endpoints.Tests.IntegrationTests,RestMovie,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\IntegrationTests\RestMovie.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ (Genres != null ? Genres.GetHashCode() : 0);
Magic Number,ServiceStack.WebHost.Endpoints.Tests.Issues,AutoQueryJoinReferenceId,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Issues\AutoQueryIssues.cs,Does_only_populate_selected_fields,The following statement contains a magic number: Assert.That(response.Results.All(x => x.Id > 0 && x.Id < 10));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.Issues,AutoQueryJoinReferenceId,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Issues\AutoQueryIssues.cs,Does_only_populate_selected_fields,The following statement contains a magic number: Assert.That(response.Results.All(x => x.DepartmentId >= 10));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.Issues,AutoQueryJoinReferenceId,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Issues\AutoQueryIssues.cs,Does_only_populate_selected_fields,The following statement contains a magic number: Assert.That(response.Results.All(x => x.DepartmentId >= 10));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.Issues,AutoQueryJoinReferenceId,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Issues\AutoQueryIssues.cs,Can_query_Table_with_Byte_property,The following statement contains a magic number: db.Insert(new CustomFields { StringId = "1002"' Byte = 2 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.Issues,AutoQueryJoinReferenceId,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Issues\AutoQueryIssues.cs,Can_query_Table_with_Byte_property,The following statement contains a magic number: Assert.That(response.Results.Map(x => x.Byte)' Is.EquivalentTo(new[] { 1' 2 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.Issues,AutoQueryJoinReferenceId,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Issues\AutoQueryIssues.cs,Can_query_Table_with_Byte_property,The following statement contains a magic number: response = client.Get(new CustomFieldsQuery              {                  StringIdIn = new[] { "1001"' "1002" }'                  Byte = 2              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.Issues,AutoQueryJoinReferenceId,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Issues\AutoQueryIssues.cs,Can_query_Table_with_Byte_property,The following statement contains a magic number: Assert.That(response.Results.Map(x => x.Byte)' Is.EquivalentTo(new[] { (byte)2 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.Issues,AutoQueryJoinReferenceId,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Issues\AutoQueryIssues.cs,Can_query_Table_with_Byte_property,The following statement contains a magic number: response = client.Get(new CustomFieldsQuery              {                  ByteIn = new byte[] { 1' 2 }              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.Issues,AutoQueryJoinReferenceId,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Issues\AutoQueryIssues.cs,Can_query_Table_with_Byte_property,The following statement contains a magic number: Assert.That(response.Results.Map(x => x.Byte)' Is.EquivalentTo(new[] { 1' 2 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.Issues,AppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Issues\AutoQueryIssues.cs,Configure,The following statement contains a magic number: Plugins.Add(new AutoQueryFeature { MaxLimit = 100 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.Issues,ClientMemoryLeak,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Issues\ClientMemoryLeak.cs,Run_GET_dto_in_loop,The following statement contains a magic number: i < 10001
Magic Number,ServiceStack.WebHost.Endpoints.Tests.Issues,ClientMemoryLeak,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Issues\ClientMemoryLeak.cs,Run_GET_dto_in_loop,The following statement contains a magic number: i < 10001
Magic Number,ServiceStack.WebHost.Endpoints.Tests.Issues,ClientMemoryLeak,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Issues\ClientMemoryLeak.cs,Run_GET_url_in_loop,The following statement contains a magic number: i < 10001
Magic Number,ServiceStack.WebHost.Endpoints.Tests.Issues,ClientMemoryLeak,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Issues\ClientMemoryLeak.cs,Run_GET_url_in_loop,The following statement contains a magic number: i < 10001
Magic Number,ServiceStack.WebHost.Endpoints.Tests.Issues,ClientMemoryLeak,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Issues\ClientMemoryLeak.cs,Run_GET_url_HttpWebResponse_in_loop,The following statement contains a magic number: i < 10001
Magic Number,ServiceStack.WebHost.Endpoints.Tests.Issues,ClientMemoryLeak,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Issues\ClientMemoryLeak.cs,Run_GET_url_HttpWebResponse_in_loop,The following statement contains a magic number: i < 10001
Magic Number,ServiceStack.WebHost.Endpoints.Tests.Issues,NetworkIssues,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Issues\NetworkIssues.cs,Simulate_broken_Network,The following statement contains a magic number: var response = await client.GetAsync(new Wait { ForMs = 50000 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.Issues,RequestScopeIssue,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Issues\RequestScopeIssue.cs,Can_get_RequestScope_dependency,The following statement contains a magic number: Assert.That(client.Get(new GetMasterConfig()).Id' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.Issues,RequestScopeIssue,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Issues\RequestScopeIssue.cs,Can_get_RequestScope_dependency,The following statement contains a magic number: Assert.That(client.Get(new GetMasterConfig()).Id' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.Issues,SerializationIssues,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Issues\SerializationIssues.cs,Does_serialize_request,The following statement contains a magic number: var response = client.Put(new PutConfirmed              {                  Confirmations = new List<Confirmation>                  {                      new Confirmation                      {                          ChangeId = 126552616'                          Confirmed = true'                      }                  }              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BAK_CompatTemplateTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BAK_CompatTemplateTests.cs,BAK_Arguments,The following statement contains a magic number: var result = new PageResult(context.GetPage("page")) {                   Args = {                      ["arg"] = 4                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BAK_CompatTemplateTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BAK_CompatTemplateTests.cs,BAK_Sandbox,The following statement contains a magic number: context = new TemplateContext {                  MaxQuota = 1000              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BAK_CompatTemplateTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BAK_CompatTemplateTests.cs,BAK_APIReference,The following statement contains a magic number: context = new TemplateContext {                  MaxQuota = 10000'                  Args = {                      [TemplateConstants.DefaultCulture] = CultureInfo.CurrentCulture'                      [TemplateConstants.DefaultDateFormat] = "yyyy-MM-dd"'                      [TemplateConstants.DefaultDateTimeFormat] = "u"'                      [TemplateConstants.DefaultTimeFormat] = "h\\:mm\\:ss"'                      [TemplateConstants.DefaultFileCacheExpiry] = TimeSpan.FromMinutes(1)'                      [TemplateConstants.DefaultUrlCacheExpiry] = TimeSpan.FromMinutes(1)'                      [TemplateConstants.DefaultIndent] = "\t"'                      [TemplateConstants.DefaultNewLine] = Environment.NewLine'                      [TemplateConstants.DefaultJsConfig] = "excludetypeinfo"'                      [TemplateConstants.DefaultStringComparison] = StringComparison.Ordinal'                      [TemplateConstants.DefaultTableClassName] = "table"'                      [TemplateConstants.DefaultErrorClassName] = "alert alert-danger"'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_basic_binary_expressions,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(new JsBinaryExpression(new JsLiteral(1)' JsAddition.Operator' new JsLiteral(2))));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_basic_binary_expressions,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(new JsBinaryExpression(new JsLiteral(1)' JsSubtraction.Operator' new JsLiteral(2))));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_basic_binary_expressions,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(new JsBinaryExpression(new JsLiteral(1)' JsMultiplication.Operator' new JsLiteral(2))));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_basic_binary_expressions,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(new JsBinaryExpression(new JsLiteral(1)' JsDivision.Operator' new JsLiteral(2))));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_basic_binary_expressions,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(new JsBinaryExpression(new JsLiteral(1)' JsBitwiseAnd.Operator' new JsLiteral(2))));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_basic_binary_expressions,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(new JsBinaryExpression(new JsLiteral(1)' JsBitwiseOr.Operator' new JsLiteral(2))));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_basic_binary_expressions,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(new JsBinaryExpression(new JsLiteral(1)' JsBitwiseXOr.Operator' new JsLiteral(2))));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_basic_binary_expressions,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(new JsBinaryExpression(new JsLiteral(1)' JsBitwiseLeftShift.Operator' new JsLiteral(2))));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_basic_binary_expressions,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(new JsBinaryExpression(new JsLiteral(1)' JsBitwiseRightShift.Operator' new JsLiteral(2))));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_composite_binary_expressions,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsBinaryExpression(                      new JsBinaryExpression(new JsLiteral(1)' JsAddition.Operator' new JsLiteral(2))'                       JsAddition.Operator'                       new JsLiteral(3)                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_composite_binary_expressions,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsBinaryExpression(                      new JsBinaryExpression(new JsLiteral(1)' JsAddition.Operator' new JsLiteral(2))'                       JsAddition.Operator'                       new JsLiteral(3)                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_composite_binary_expressions,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsBinaryExpression(                      new JsBinaryExpression(                          new JsBinaryExpression(new JsLiteral(1)' JsAddition.Operator' new JsLiteral(2))'                           JsAddition.Operator'                           new JsLiteral(3))'                       JsAddition.Operator'                       new JsLiteral(4)                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_composite_binary_expressions,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsBinaryExpression(                      new JsBinaryExpression(                          new JsBinaryExpression(new JsLiteral(1)' JsAddition.Operator' new JsLiteral(2))'                           JsAddition.Operator'                           new JsLiteral(3))'                       JsAddition.Operator'                       new JsLiteral(4)                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_composite_binary_expressions,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsBinaryExpression(                      new JsBinaryExpression(                          new JsBinaryExpression(new JsLiteral(1)' JsAddition.Operator' new JsLiteral(2))'                           JsAddition.Operator'                           new JsLiteral(3))'                       JsAddition.Operator'                       new JsLiteral(4)                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_binary_expressions_with_precedence,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsBinaryExpression(                      new JsLiteral(1)'                       JsAddition.Operator'                       new JsBinaryExpression(new JsLiteral(2)' JsMultiplication.Operator' new JsLiteral(3))                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_binary_expressions_with_precedence,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsBinaryExpression(                      new JsLiteral(1)'                       JsAddition.Operator'                       new JsBinaryExpression(new JsLiteral(2)' JsMultiplication.Operator' new JsLiteral(3))                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_binary_expressions_with_precedence,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsBinaryExpression(                      new JsBinaryExpression(                          new JsLiteral(1)'                           JsAddition.Operator'                           new JsBinaryExpression(new JsLiteral(2)' JsMultiplication.Operator' new JsLiteral(3)))'                       JsSubtraction.Operator'                       new JsLiteral(4)                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_binary_expressions_with_precedence,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsBinaryExpression(                      new JsBinaryExpression(                          new JsLiteral(1)'                           JsAddition.Operator'                           new JsBinaryExpression(new JsLiteral(2)' JsMultiplication.Operator' new JsLiteral(3)))'                       JsSubtraction.Operator'                       new JsLiteral(4)                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_binary_expressions_with_precedence,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsBinaryExpression(                      new JsBinaryExpression(                          new JsLiteral(1)'                           JsAddition.Operator'                           new JsBinaryExpression(new JsLiteral(2)' JsMultiplication.Operator' new JsLiteral(3)))'                       JsSubtraction.Operator'                       new JsLiteral(4)                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_binary_expressions_with_precedence,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsBinaryExpression(                      new JsBinaryExpression(                          new JsLiteral(1)'                           JsAddition.Operator'                           new JsBinaryExpression(new JsLiteral(2)' JsMultiplication.Operator' new JsLiteral(3)))'                       JsSubtraction.Operator'                       new JsBinaryExpression(new JsLiteral(4)' JsDivision.Operator' new JsLiteral(5)))                  )              );
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_binary_expressions_with_precedence,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsBinaryExpression(                      new JsBinaryExpression(                          new JsLiteral(1)'                           JsAddition.Operator'                           new JsBinaryExpression(new JsLiteral(2)' JsMultiplication.Operator' new JsLiteral(3)))'                       JsSubtraction.Operator'                       new JsBinaryExpression(new JsLiteral(4)' JsDivision.Operator' new JsLiteral(5)))                  )              );
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_binary_expressions_with_precedence,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsBinaryExpression(                      new JsBinaryExpression(                          new JsLiteral(1)'                           JsAddition.Operator'                           new JsBinaryExpression(new JsLiteral(2)' JsMultiplication.Operator' new JsLiteral(3)))'                       JsSubtraction.Operator'                       new JsBinaryExpression(new JsLiteral(4)' JsDivision.Operator' new JsLiteral(5)))                  )              );
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_binary_expressions_with_precedence,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsBinaryExpression(                      new JsBinaryExpression(                          new JsLiteral(1)'                           JsAddition.Operator'                           new JsBinaryExpression(new JsLiteral(2)' JsMultiplication.Operator' new JsLiteral(3)))'                       JsSubtraction.Operator'                       new JsBinaryExpression(new JsLiteral(4)' JsDivision.Operator' new JsLiteral(5)))                  )              );
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_binary_expression_with_brackets,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsBinaryExpression(new JsLiteral(1)' JsAddition.Operator' new JsLiteral(2))              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_binary_expression_with_brackets,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsBinaryExpression(                      new JsBinaryExpression(new JsLiteral(1)' JsAddition.Operator' new JsLiteral(2))'                       JsMultiplication.Operator'                       new JsLiteral(3)                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_binary_expression_with_brackets,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsBinaryExpression(                      new JsBinaryExpression(new JsLiteral(1)' JsAddition.Operator' new JsLiteral(2))'                       JsMultiplication.Operator'                       new JsLiteral(3)                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_binary_expression_with_brackets,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsBinaryExpression(                      new JsBinaryExpression(new JsLiteral(1)' JsAddition.Operator' new JsLiteral(2))'                       JsMultiplication.Operator'                       new JsBinaryExpression(new JsLiteral(3)' JsSubtraction.Operator' new JsLiteral(4))                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_binary_expression_with_brackets,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsBinaryExpression(                      new JsBinaryExpression(new JsLiteral(1)' JsAddition.Operator' new JsLiteral(2))'                       JsMultiplication.Operator'                       new JsBinaryExpression(new JsLiteral(3)' JsSubtraction.Operator' new JsLiteral(4))                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_binary_expression_with_brackets,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsBinaryExpression(                      new JsBinaryExpression(new JsLiteral(1)' JsAddition.Operator' new JsLiteral(2))'                       JsMultiplication.Operator'                       new JsBinaryExpression(new JsLiteral(3)' JsSubtraction.Operator' new JsLiteral(4))                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_binary_expression_with_brackets,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsBinaryExpression(                      new JsBinaryExpression(new JsLiteral(1)' JsAddition.Operator' new JsLiteral(2))'                       JsMultiplication.Operator'                       new JsBinaryExpression(                          new JsBinaryExpression(new JsLiteral(3)' JsSubtraction.Operator' new JsLiteral(4))'                          JsDivision.Operator'                          new JsLiteral(5)                      )                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_binary_expression_with_brackets,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsBinaryExpression(                      new JsBinaryExpression(new JsLiteral(1)' JsAddition.Operator' new JsLiteral(2))'                       JsMultiplication.Operator'                       new JsBinaryExpression(                          new JsBinaryExpression(new JsLiteral(3)' JsSubtraction.Operator' new JsLiteral(4))'                          JsDivision.Operator'                          new JsLiteral(5)                      )                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_binary_expression_with_brackets,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsBinaryExpression(                      new JsBinaryExpression(new JsLiteral(1)' JsAddition.Operator' new JsLiteral(2))'                       JsMultiplication.Operator'                       new JsBinaryExpression(                          new JsBinaryExpression(new JsLiteral(3)' JsSubtraction.Operator' new JsLiteral(4))'                          JsDivision.Operator'                          new JsLiteral(5)                      )                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_binary_expression_with_brackets,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsBinaryExpression(                      new JsBinaryExpression(new JsLiteral(1)' JsAddition.Operator' new JsLiteral(2))'                       JsMultiplication.Operator'                       new JsBinaryExpression(                          new JsBinaryExpression(new JsLiteral(3)' JsSubtraction.Operator' new JsLiteral(4))'                          JsDivision.Operator'                          new JsLiteral(5)                      )                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_binary_and_logical_expressions,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsArrayExpression(                      new JsLogicalExpression(                          new JsBinaryExpression(                              new JsBinaryExpression(                                  new JsLiteral(1)'                                  JsAddition.Operator'                                  new JsBinaryExpression(                                      new JsLiteral(2)'                                      JsMultiplication.Operator'                                       new JsLiteral(3)                                  )                              )'                              JsGreaterThan.Operator'                              new JsIdentifier("one")                                                 )'                          JsAnd.Operator'                           new JsBinaryExpression(                              new JsBinaryExpression(                                  new JsLiteral(1)'                                  JsMultiplication.Operator'                                   new JsLiteral(2)                              )'                              JsLessThan.Operator'                              new JsIdentifier("ten")                                                 )                      )                  ))              );
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_binary_and_logical_expressions,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsArrayExpression(                      new JsLogicalExpression(                          new JsBinaryExpression(                              new JsBinaryExpression(                                  new JsLiteral(1)'                                  JsAddition.Operator'                                  new JsBinaryExpression(                                      new JsLiteral(2)'                                      JsMultiplication.Operator'                                       new JsLiteral(3)                                  )                              )'                              JsGreaterThan.Operator'                              new JsIdentifier("one")                                                 )'                          JsAnd.Operator'                           new JsBinaryExpression(                              new JsBinaryExpression(                                  new JsLiteral(1)'                                  JsMultiplication.Operator'                                   new JsLiteral(2)                              )'                              JsLessThan.Operator'                              new JsIdentifier("ten")                                                 )                      )                  ))              );
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_parse_binary_and_logical_expressions,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsArrayExpression(                      new JsLogicalExpression(                          new JsBinaryExpression(                              new JsBinaryExpression(                                  new JsLiteral(1)'                                  JsAddition.Operator'                                  new JsBinaryExpression(                                      new JsLiteral(2)'                                      JsMultiplication.Operator'                                       new JsLiteral(3)                                  )                              )'                              JsGreaterThan.Operator'                              new JsIdentifier("one")                                                 )'                          JsAnd.Operator'                           new JsBinaryExpression(                              new JsBinaryExpression(                                  new JsLiteral(1)'                                  JsMultiplication.Operator'                                   new JsLiteral(2)                              )'                              JsLessThan.Operator'                              new JsIdentifier("ten")                                                 )                      )                  ))              );
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,Does_evaluate_binary_and_logical_expressions,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["one"] = 1'                      ["ten"] = 10'                                      }'              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,BinaryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\BinaryExpressionTests.cs,CreateContext,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["a"] = null'                      ["b"] = 2'                      ["empty"] = ""'                      ["f"] = false'                      ["zero"] = 0'                      ["t"] = true'                      ["one"] = 1'                      ["obj"] = new Dictionary<string' object>()'                      ["array"] = new List<object>()'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,CachingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\CachingTests.cs,Cant_use_ReadOnlyMemory_from_different_string_as_Dictionary_Key,The following statement contains a magic number: Assert.That(i' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,CachingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\CachingTests.cs,Cant_use_ReadOnlyMemory_from_different_string_as_Dictionary_Key,The following statement contains a magic number: Assert.That(map.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,CachingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\CachingTests.cs,Unique_Template_Should_Be_Cached_Only_Once,The following statement contains a magic number: 10000.Times(() =>              {                  var result = context.EvaluateScript(@"{{#each templates}}{{index}}{{/each}}");                  Assert.That(result' Is.EqualTo("012"));              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,CallExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\CallExpressionTests.cs,Can_parse_expressions_with_methods,The following statement contains a magic number: Assert.That(token' Is.EqualTo(                  new JsBinaryExpression(                      new JsCallExpression(                          new JsIdentifier("mod")'                          new JsIdentifier("it")'                          new JsLiteral(3)                      )'                      JsNotEquals.Operator'                       new JsLiteral(0)                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,CallExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\CallExpressionTests.cs,Does_evaluate_nested_call_expressions,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["it"] = 10                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,CreateContext,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["foo"] = "bar"'                      ["intVal"] = 1'                      ["doubleVal"] = 2.2                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_increment_and_decrement,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["ten"] = 10                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_increment_and_decrement_pipeline_operator,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["ten"] = 10                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_numbers,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["two"] = 2                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_DateTime,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["year2000"] = new DateTime(2000'1'1)'                      ["year2100"] = new DateTime(2100'1'1)                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_compare_DateTime,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["year2000"] = new DateTime(2000'1'1)'                      ["year2100"] = new DateTime(2100'1'1)                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_logical_boolean_operators,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["foo"] = "foo"'                      ["bar"] = "bar"'                      ["year2000"] = new DateTime(2000'1'1)'                      ["year2100"] = new DateTime(2100'1'1)'                      ["contextTrue"] = true'                      ["contextFalse"] = false                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_logical_boolean_operators,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["foo"] = "foo"'                      ["bar"] = "bar"'                      ["year2000"] = new DateTime(2000'1'1)'                      ["year2100"] = new DateTime(2100'1'1)'                      ["contextTrue"] = true'                      ["contextFalse"] = false                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_filter_arithmetic_chained_filters,The following statement contains a magic number: Assert.That((((1 + 2) * 3) / 4) - 5' Is.EqualTo(- 3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_filter_arithmetic_chained_filters,The following statement contains a magic number: Assert.That((((1 + 2) * 3) / 4) - 5' Is.EqualTo(- 3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_filter_arithmetic_chained_filters,The following statement contains a magic number: Assert.That((((1 + 2) * 3) / 4) - 5' Is.EqualTo(- 3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_filter_arithmetic_chained_filters,The following statement contains a magic number: Assert.That((((1 + 2) * 3) / 4) - 5' Is.EqualTo(- 3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_filter_arithmetic_chained_filters,The following statement contains a magic number: Assert.That((((1 + 2) * 3) / 4) - 5' Is.EqualTo(- 3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_filter_arithmetic_chained_filters,The following statement contains a magic number: Assert.That((((1 + 2) * 3) / 4d) - 5' Is.EqualTo(-2.75));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_filter_arithmetic_chained_filters,The following statement contains a magic number: Assert.That((((1 + 2) * 3) / 4d) - 5' Is.EqualTo(-2.75));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_filter_arithmetic_chained_filters,The following statement contains a magic number: Assert.That((((1 + 2) * 3) / 4d) - 5' Is.EqualTo(-2.75));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_filter_arithmetic_chained_filters,The following statement contains a magic number: Assert.That((((1 + 2) * 3) / 4d) - 5' Is.EqualTo(-2.75));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_filter_arithmetic_chained_filters,The following statement contains a magic number: Assert.That((((1 + 2) * 3) / 4d) - 5' Is.EqualTo(-2.75));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_filter_arithmetic_chained_filters,The following statement contains a magic number: Assert.That(1 + 2 * 3 / 4 - 5' Is.EqualTo(-3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_filter_arithmetic_chained_filters,The following statement contains a magic number: Assert.That(1 + 2 * 3 / 4 - 5' Is.EqualTo(-3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_filter_arithmetic_chained_filters,The following statement contains a magic number: Assert.That(1 + 2 * 3 / 4 - 5' Is.EqualTo(-3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_filter_arithmetic_chained_filters,The following statement contains a magic number: Assert.That(1 + 2 * 3 / 4 - 5' Is.EqualTo(-3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_filter_arithmetic_chained_filters,The following statement contains a magic number: Assert.That(1 + 2 * 3 / 4 - 5' Is.EqualTo(-3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_filter_arithmetic_chained_filters,The following statement contains a magic number: Assert.That(1 + 2 * 3 / 4d - 5' Is.EqualTo(-2.5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_filter_arithmetic_chained_filters,The following statement contains a magic number: Assert.That(1 + 2 * 3 / 4d - 5' Is.EqualTo(-2.5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_filter_arithmetic_chained_filters,The following statement contains a magic number: Assert.That(1 + 2 * 3 / 4d - 5' Is.EqualTo(-2.5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_filter_arithmetic_chained_filters,The following statement contains a magic number: Assert.That(1 + 2 * 3 / 4d - 5' Is.EqualTo(-2.5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_filter_arithmetic_chained_filters,The following statement contains a magic number: Assert.That(1 + 2 * 3 / 4d - 5' Is.EqualTo(-2.5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_filter_dateFormat,The following statement contains a magic number: var result = await new PageResult(context.GetPage("dateFormat-default"))              {                  Args = { ["date"] = new DateTime(2001'01'01'1'1'1'1' DateTimeKind.Utc) }              }.RenderToStringAsync();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_filter_dateFormat,The following statement contains a magic number: result = await new PageResult(context.GetPage("dateFormat-default"))              {                  Args = { ["date"] = new DateTime(2001'01'01'1'1'1'1' DateTimeKind.Utc) }              }.RenderToStringAsync();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_filter_dateFormat,The following statement contains a magic number: result = await new PageResult(context.GetPage("dateFormat-custom"))              {                  Args =                  {                      ["date"] = new DateTime(2001'01'01'1'1'1'1' DateTimeKind.Utc)'                      ["format"] = "dd.MM.yyyy"                  }              }.RenderToStringAsync();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_time_format,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["time"] = new TimeSpan(1'2'3'4'5)'                      ["date"] = new DateTime(2001'2'3'4'5'6'7)                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_time_format,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["time"] = new TimeSpan(1'2'3'4'5)'                      ["date"] = new DateTime(2001'2'3'4'5'6'7)                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_time_format,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["time"] = new TimeSpan(1'2'3'4'5)'                      ["date"] = new DateTime(2001'2'3'4'5'6'7)                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_time_format,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["time"] = new TimeSpan(1'2'3'4'5)'                      ["date"] = new DateTime(2001'2'3'4'5'6'7)                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_time_format,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["time"] = new TimeSpan(1'2'3'4'5)'                      ["date"] = new DateTime(2001'2'3'4'5'6'7)                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_time_format,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["time"] = new TimeSpan(1'2'3'4'5)'                      ["date"] = new DateTime(2001'2'3'4'5'6'7)                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_time_format,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["time"] = new TimeSpan(1'2'3'4'5)'                      ["date"] = new DateTime(2001'2'3'4'5'6'7)                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_time_format,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["time"] = new TimeSpan(1'2'3'4'5)'                      ["date"] = new DateTime(2001'2'3'4'5'6'7)                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_time_format,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["time"] = new TimeSpan(1'2'3'4'5)'                      ["date"] = new DateTime(2001'2'3'4'5'6'7)                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_time_format,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["time"] = new TimeSpan(1'2'3'4'5)'                      ["date"] = new DateTime(2001'2'3'4'5'6'7)                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_time_format,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["time"] = new TimeSpan(1'2'3'4'5)'                      ["date"] = new DateTime(2001'2'3'4'5'6'7)                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_filter_dateTimeFormat,The following statement contains a magic number: var result = await new PageResult(context.GetPage("dateTimeFormat-default"))              {                  Args = { ["date"] = new DateTime(2001'01'01'1'1'1'1' DateTimeKind.Utc) }              }.RenderToStringAsync();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_filter_dateTimeFormat,The following statement contains a magic number: result = await new PageResult(context.GetPage("dateTimeFormat-default"))              {                  Args = { ["date"] = new DateTime(2001'01'01'1'1'1'1' DateTimeKind.Utc) }              }.RenderToStringAsync();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Does_default_filter_dateTimeFormat,The following statement contains a magic number: result = await new PageResult(context.GetPage("dateTimeFormat-custom"))              {                  Args =                  {                      ["date"] = new DateTime(2001'01'01'1'1'1'1' DateTimeKind.Utc)'                      ["format"] = "dd.MM.yyyy hh.mm.ss"                  }              }.RenderToStringAsync();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_order_by_different_data_types,The following statement contains a magic number: var items = new[]              {                  new ModelValues { Id = 1' DateTime = new DateTime(2001'01'01)' TimeSpan = TimeSpan.FromSeconds(1) }'                   new ModelValues { Id = 2' DateTime = new DateTime(2001'01'02)' TimeSpan = TimeSpan.FromSeconds(2) }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_order_by_different_data_types,The following statement contains a magic number: var items = new[]              {                  new ModelValues { Id = 1' DateTime = new DateTime(2001'01'01)' TimeSpan = TimeSpan.FromSeconds(1) }'                   new ModelValues { Id = 2' DateTime = new DateTime(2001'01'02)' TimeSpan = TimeSpan.FromSeconds(2) }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_order_by_different_data_types,The following statement contains a magic number: var items = new[]              {                  new ModelValues { Id = 1' DateTime = new DateTime(2001'01'01)' TimeSpan = TimeSpan.FromSeconds(1) }'                   new ModelValues { Id = 2' DateTime = new DateTime(2001'01'02)' TimeSpan = TimeSpan.FromSeconds(2) }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_order_by_different_data_types,The following statement contains a magic number: var items = new[]              {                  new ModelValues { Id = 1' DateTime = new DateTime(2001'01'01)' TimeSpan = TimeSpan.FromSeconds(1) }'                   new ModelValues { Id = 2' DateTime = new DateTime(2001'01'02)' TimeSpan = TimeSpan.FromSeconds(2) }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_order_by_different_data_types,The following statement contains a magic number: var items = new[]              {                  new ModelValues { Id = 1' DateTime = new DateTime(2001'01'01)' TimeSpan = TimeSpan.FromSeconds(1) }'                   new ModelValues { Id = 2' DateTime = new DateTime(2001'01'02)' TimeSpan = TimeSpan.FromSeconds(2) }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_exist_tests_on_non_existing_arguments,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["arg"] = "value"'                      ["list"] = new[]{ 1' 2' 3 }'                      ["emptyList"] = new int[0]'                      ["map"] = new Dictionary<string' object> { {"a"' 1}' {"b"' 2} }'                      ["emptyMap"] = new Dictionary<string' object>()                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_exist_tests_on_non_existing_arguments,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["arg"] = "value"'                      ["list"] = new[]{ 1' 2' 3 }'                      ["emptyList"] = new int[0]'                      ["map"] = new Dictionary<string' object> { {"a"' 1}' {"b"' 2} }'                      ["emptyMap"] = new Dictionary<string' object>()                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_exist_tests_on_non_existing_arguments,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["arg"] = "value"'                      ["list"] = new[]{ 1' 2' 3 }'                      ["emptyList"] = new int[0]'                      ["map"] = new Dictionary<string' object> { {"a"' 1}' {"b"' 2} }'                      ["emptyMap"] = new Dictionary<string' object>()                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_length_filters,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["items"] = new[]{1'2'3}                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_length_filters,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["items"] = new[]{1'2'3}                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_test_isTest_filters,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["string"] = "foo"'                      ["int"] = 1'                      ["long"] = (long)1'                      ["byte"] = (byte)1'                      ["double"] = 1.1'                      ["float"] = (float)1.1'                      ["decimal"] = (decimal)1.1'                      ["bool"] = true'                      ["char"] = 'c''                      ["chars"] = new[]{ 'a'''b'''c' }'                      ["bytes"] = new byte[]{ 1' 2' 3 }'                      ["intDictionary"] = new Dictionary<int' int>()'                      ["stringDictionary"] = new Dictionary<string' string>()'                      ["objectDictionary"] = new Dictionary<string' object>()'                      ["objectList"] = new List<object>()'                      ["objectArray"] = new object[]{ 1' "a" }'                      ["anonObject"] = new { id = 1 }'                      ["context"] = new ScriptContext()'                      ["tuple"] = Tuple.Create(1' "a")'                      ["keyValuePair"] = new KeyValuePair<int'string>(1'"a")                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_test_isTest_filters,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["string"] = "foo"'                      ["int"] = 1'                      ["long"] = (long)1'                      ["byte"] = (byte)1'                      ["double"] = 1.1'                      ["float"] = (float)1.1'                      ["decimal"] = (decimal)1.1'                      ["bool"] = true'                      ["char"] = 'c''                      ["chars"] = new[]{ 'a'''b'''c' }'                      ["bytes"] = new byte[]{ 1' 2' 3 }'                      ["intDictionary"] = new Dictionary<int' int>()'                      ["stringDictionary"] = new Dictionary<string' string>()'                      ["objectDictionary"] = new Dictionary<string' object>()'                      ["objectList"] = new List<object>()'                      ["objectArray"] = new object[]{ 1' "a" }'                      ["anonObject"] = new { id = 1 }'                      ["context"] = new ScriptContext()'                      ["tuple"] = Tuple.Create(1' "a")'                      ["keyValuePair"] = new KeyValuePair<int'string>(1'"a")                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_test_isTest_filters,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["string"] = "foo"'                      ["int"] = 1'                      ["long"] = (long)1'                      ["byte"] = (byte)1'                      ["double"] = 1.1'                      ["float"] = (float)1.1'                      ["decimal"] = (decimal)1.1'                      ["bool"] = true'                      ["char"] = 'c''                      ["chars"] = new[]{ 'a'''b'''c' }'                      ["bytes"] = new byte[]{ 1' 2' 3 }'                      ["intDictionary"] = new Dictionary<int' int>()'                      ["stringDictionary"] = new Dictionary<string' string>()'                      ["objectDictionary"] = new Dictionary<string' object>()'                      ["objectList"] = new List<object>()'                      ["objectArray"] = new object[]{ 1' "a" }'                      ["anonObject"] = new { id = 1 }'                      ["context"] = new ScriptContext()'                      ["tuple"] = Tuple.Create(1' "a")'                      ["keyValuePair"] = new KeyValuePair<int'string>(1'"a")                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_test_isTest_filters,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["string"] = "foo"'                      ["int"] = 1'                      ["long"] = (long)1'                      ["byte"] = (byte)1'                      ["double"] = 1.1'                      ["float"] = (float)1.1'                      ["decimal"] = (decimal)1.1'                      ["bool"] = true'                      ["char"] = 'c''                      ["chars"] = new[]{ 'a'''b'''c' }'                      ["bytes"] = new byte[]{ 1' 2' 3 }'                      ["intDictionary"] = new Dictionary<int' int>()'                      ["stringDictionary"] = new Dictionary<string' string>()'                      ["objectDictionary"] = new Dictionary<string' object>()'                      ["objectList"] = new List<object>()'                      ["objectArray"] = new object[]{ 1' "a" }'                      ["anonObject"] = new { id = 1 }'                      ["context"] = new ScriptContext()'                      ["tuple"] = Tuple.Create(1' "a")'                      ["keyValuePair"] = new KeyValuePair<int'string>(1'"a")                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_test_isTest_filters,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["string"] = "foo"'                      ["int"] = 1'                      ["long"] = (long)1'                      ["byte"] = (byte)1'                      ["double"] = 1.1'                      ["float"] = (float)1.1'                      ["decimal"] = (decimal)1.1'                      ["bool"] = true'                      ["char"] = 'c''                      ["chars"] = new[]{ 'a'''b'''c' }'                      ["bytes"] = new byte[]{ 1' 2' 3 }'                      ["intDictionary"] = new Dictionary<int' int>()'                      ["stringDictionary"] = new Dictionary<string' string>()'                      ["objectDictionary"] = new Dictionary<string' object>()'                      ["objectList"] = new List<object>()'                      ["objectArray"] = new object[]{ 1' "a" }'                      ["anonObject"] = new { id = 1 }'                      ["context"] = new ScriptContext()'                      ["tuple"] = Tuple.Create(1' "a")'                      ["keyValuePair"] = new KeyValuePair<int'string>(1'"a")                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_stop_filter_execution_with_end,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["arg"] = "foo"'                      ["items"] = new[]{1'2'3}                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_stop_filter_execution_with_end,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["arg"] = "foo"'                      ["items"] = new[]{1'2'3}                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_chain_end_filters_together,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["arg"] = "foo"'                      ["empty"] = ""'                      ["nil"] = null'                      ["items"] = new[]{1'2'3}'                      ["none"] = new int[]{}                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_chain_end_filters_together,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["arg"] = "foo"'                      ["empty"] = ""'                      ["nil"] = null'                      ["items"] = new[]{1'2'3}'                      ["none"] = new int[]{}                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_continue_filter_execution_with_only,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["arg"] = "foo"'                      ["items"] = new[]{1'2'3}                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_continue_filter_execution_with_only,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["arg"] = "foo"'                      ["items"] = new[]{1'2'3}                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_chain_only_filters_together,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["arg"] = "foo"'                      ["empty"] = ""'                      ["nil"] = null'                      ["items"] = new[]{1'2'3}'                      ["none"] = new int[]{}                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_chain_only_filters_together,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["arg"] = "foo"'                      ["empty"] = ""'                      ["nil"] = null'                      ["items"] = new[]{1'2'3}'                      ["none"] = new int[]{}                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_flatten,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["nestedInts"] = new [] { new[]{1'2'3}'new[]{4'5'6} }'                      ["nestedInts2"] = new [] { new[]{new[]{1'2}'new[]{3}}'new[]{new[]{4}'new[]{5'6}} }'                      ["nestedStrings"] = new [] { new[]{"A"'"B"'"C"}'new[]{"D"'"E"'"F"} }'                      ["nestedStrings2"] = new [] { new[]{new[]{"A"'"B"}'new[]{"C"}}'new[]{new[]{"D"}'new[]{"E"'"F"}} }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_flatten,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["nestedInts"] = new [] { new[]{1'2'3}'new[]{4'5'6} }'                      ["nestedInts2"] = new [] { new[]{new[]{1'2}'new[]{3}}'new[]{new[]{4}'new[]{5'6}} }'                      ["nestedStrings"] = new [] { new[]{"A"'"B"'"C"}'new[]{"D"'"E"'"F"} }'                      ["nestedStrings2"] = new [] { new[]{new[]{"A"'"B"}'new[]{"C"}}'new[]{new[]{"D"}'new[]{"E"'"F"}} }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_flatten,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["nestedInts"] = new [] { new[]{1'2'3}'new[]{4'5'6} }'                      ["nestedInts2"] = new [] { new[]{new[]{1'2}'new[]{3}}'new[]{new[]{4}'new[]{5'6}} }'                      ["nestedStrings"] = new [] { new[]{"A"'"B"'"C"}'new[]{"D"'"E"'"F"} }'                      ["nestedStrings2"] = new [] { new[]{new[]{"A"'"B"}'new[]{"C"}}'new[]{new[]{"D"}'new[]{"E"'"F"}} }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_flatten,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["nestedInts"] = new [] { new[]{1'2'3}'new[]{4'5'6} }'                      ["nestedInts2"] = new [] { new[]{new[]{1'2}'new[]{3}}'new[]{new[]{4}'new[]{5'6}} }'                      ["nestedStrings"] = new [] { new[]{"A"'"B"'"C"}'new[]{"D"'"E"'"F"} }'                      ["nestedStrings2"] = new [] { new[]{new[]{"A"'"B"}'new[]{"C"}}'new[]{new[]{"D"}'new[]{"E"'"F"}} }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_flatten,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["nestedInts"] = new [] { new[]{1'2'3}'new[]{4'5'6} }'                      ["nestedInts2"] = new [] { new[]{new[]{1'2}'new[]{3}}'new[]{new[]{4}'new[]{5'6}} }'                      ["nestedStrings"] = new [] { new[]{"A"'"B"'"C"}'new[]{"D"'"E"'"F"} }'                      ["nestedStrings2"] = new [] { new[]{new[]{"A"'"B"}'new[]{"C"}}'new[]{new[]{"D"}'new[]{"E"'"F"}} }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_flatten,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["nestedInts"] = new [] { new[]{1'2'3}'new[]{4'5'6} }'                      ["nestedInts2"] = new [] { new[]{new[]{1'2}'new[]{3}}'new[]{new[]{4}'new[]{5'6}} }'                      ["nestedStrings"] = new [] { new[]{"A"'"B"'"C"}'new[]{"D"'"E"'"F"} }'                      ["nestedStrings2"] = new [] { new[]{new[]{"A"'"B"}'new[]{"C"}}'new[]{new[]{"D"}'new[]{"E"'"F"}} }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_flatten,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["nestedInts"] = new [] { new[]{1'2'3}'new[]{4'5'6} }'                      ["nestedInts2"] = new [] { new[]{new[]{1'2}'new[]{3}}'new[]{new[]{4}'new[]{5'6}} }'                      ["nestedStrings"] = new [] { new[]{"A"'"B"'"C"}'new[]{"D"'"E"'"F"} }'                      ["nestedStrings2"] = new [] { new[]{new[]{"A"'"B"}'new[]{"C"}}'new[]{new[]{"D"}'new[]{"E"'"F"}} }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_flatten,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["nestedInts"] = new [] { new[]{1'2'3}'new[]{4'5'6} }'                      ["nestedInts2"] = new [] { new[]{new[]{1'2}'new[]{3}}'new[]{new[]{4}'new[]{5'6}} }'                      ["nestedStrings"] = new [] { new[]{"A"'"B"'"C"}'new[]{"D"'"E"'"F"} }'                      ["nestedStrings2"] = new [] { new[]{new[]{"A"'"B"}'new[]{"C"}}'new[]{new[]{"D"}'new[]{"E"'"F"}} }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_flatten,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["nestedInts"] = new [] { new[]{1'2'3}'new[]{4'5'6} }'                      ["nestedInts2"] = new [] { new[]{new[]{1'2}'new[]{3}}'new[]{new[]{4}'new[]{5'6}} }'                      ["nestedStrings"] = new [] { new[]{"A"'"B"'"C"}'new[]{"D"'"E"'"F"} }'                      ["nestedStrings2"] = new [] { new[]{new[]{"A"'"B"}'new[]{"C"}}'new[]{new[]{"D"}'new[]{"E"'"F"}} }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_flatten,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["nestedInts"] = new [] { new[]{1'2'3}'new[]{4'5'6} }'                      ["nestedInts2"] = new [] { new[]{new[]{1'2}'new[]{3}}'new[]{new[]{4}'new[]{5'6}} }'                      ["nestedStrings"] = new [] { new[]{"A"'"B"'"C"}'new[]{"D"'"E"'"F"} }'                      ["nestedStrings2"] = new [] { new[]{new[]{"A"'"B"}'new[]{"C"}}'new[]{new[]{"D"}'new[]{"E"'"F"}} }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_flatten,The following statement contains a magic number: Assert.That(context.Evaluate<List<object>>("{{ nestedInts | flat | return }}")'                   Is.EquivalentTo(new[]{ 1'2'3'4'5'6 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_flatten,The following statement contains a magic number: Assert.That(context.Evaluate<List<object>>("{{ nestedInts | flat | return }}")'                   Is.EquivalentTo(new[]{ 1'2'3'4'5'6 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_flatten,The following statement contains a magic number: Assert.That(context.Evaluate<List<object>>("{{ nestedInts | flat | return }}")'                   Is.EquivalentTo(new[]{ 1'2'3'4'5'6 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_flatten,The following statement contains a magic number: Assert.That(context.Evaluate<List<object>>("{{ nestedInts | flat | return }}")'                   Is.EquivalentTo(new[]{ 1'2'3'4'5'6 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_flatten,The following statement contains a magic number: Assert.That(context.Evaluate<List<object>>("{{ nestedInts | flat | return }}")'                   Is.EquivalentTo(new[]{ 1'2'3'4'5'6 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_flatten,The following statement contains a magic number: Assert.That(context.Evaluate<List<object>>("{{ nestedInts2 | flatten | return }}")'                   Is.EquivalentTo(new[]{ 1'2'3'4'5'6 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_flatten,The following statement contains a magic number: Assert.That(context.Evaluate<List<object>>("{{ nestedInts2 | flatten | return }}")'                   Is.EquivalentTo(new[]{ 1'2'3'4'5'6 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_flatten,The following statement contains a magic number: Assert.That(context.Evaluate<List<object>>("{{ nestedInts2 | flatten | return }}")'                   Is.EquivalentTo(new[]{ 1'2'3'4'5'6 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_flatten,The following statement contains a magic number: Assert.That(context.Evaluate<List<object>>("{{ nestedInts2 | flatten | return }}")'                   Is.EquivalentTo(new[]{ 1'2'3'4'5'6 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_flatten,The following statement contains a magic number: Assert.That(context.Evaluate<List<object>>("{{ nestedInts2 | flatten | return }}")'                   Is.EquivalentTo(new[]{ 1'2'3'4'5'6 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_flatten,The following statement contains a magic number: Assert.That(context.Evaluate<List<object>>("{{ [ [1'2'[3]' [4'[5'6]] ] ] | flatten | return }}")'                   Is.EquivalentTo(new[]{ 1'2'3'4'5'6 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_flatten,The following statement contains a magic number: Assert.That(context.Evaluate<List<object>>("{{ [ [1'2'[3]' [4'[5'6]] ] ] | flatten | return }}")'                   Is.EquivalentTo(new[]{ 1'2'3'4'5'6 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_flatten,The following statement contains a magic number: Assert.That(context.Evaluate<List<object>>("{{ [ [1'2'[3]' [4'[5'6]] ] ] | flatten | return }}")'                   Is.EquivalentTo(new[]{ 1'2'3'4'5'6 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_flatten,The following statement contains a magic number: Assert.That(context.Evaluate<List<object>>("{{ [ [1'2'[3]' [4'[5'6]] ] ] | flatten | return }}")'                   Is.EquivalentTo(new[]{ 1'2'3'4'5'6 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_flatten,The following statement contains a magic number: Assert.That(context.Evaluate<List<object>>("{{ [ [1'2'[3]' [4'[5'6]] ] ] | flatten | return }}")'                   Is.EquivalentTo(new[]{ 1'2'3'4'5'6 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_shadow_default_ScriptMethods_with_InsertScriptMethods,The following statement contains a magic number: Assert.That(result' Is.EqualTo(16));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_textDump,The following statement contains a magic number: var kvpA2 = new KeyValuePair<string'object>("a"'2);
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_textDump,The following statement contains a magic number: Assert.That(context.EvaluateScript("{{ o | textDump({ caption: 'C'' rowNumbers:false }) }}"' new ObjectDictionary { ["o"] = new[]{ new A(1)' new A(2) } }).NormalizeNewLines()'                   Is.EqualTo("C\n\n| a |\n|---|\n| 1 |\n| 2 |".NormalizeNewLines()));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_textDump,The following statement contains a magic number: Assert.That(context.EvaluateScript("{{ o | textDump({ caption: 'C'' rowNumbers:false }) }}"' new ObjectDictionary { ["o"] = new[]{ new B(1' "x")' new B(2' "y") } }).NormalizeNewLines()'                   Is.EqualTo("C\n\n| a | b |\n|---|---|\n| 1 | x |\n| 2 | y |".NormalizeNewLines()));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_textDump,The following statement contains a magic number: Assert.That(context.EvaluateScript("{{ o | textDump({ caption: 'C' }) }}"' new ObjectDictionary { ["o"] = new[]{ new A(1)' new A(2) } }).NormalizeNewLines()'                   Is.EqualTo("C\n\n| # | a |\n|---|---|\n| 1 | 1 |\n| 2 | 2 |".NormalizeNewLines()));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_textDump,The following statement contains a magic number: Assert.That(context.EvaluateScript("{{ o | textDump({ caption: 'C' }) }}"' new ObjectDictionary { ["o"] = new[]{ new B(1' "x")' new B(2' "y") } }).NormalizeNewLines()'                   Is.EqualTo("C\n\n| # | a | b |\n|---|---|---|\n| 1 | 1 | x |\n| 2 | 2 | y |".NormalizeNewLines()));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_htmlDump,The following statement contains a magic number: var kvpA2 = new KeyValuePair<string'object>("a"'2);
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_htmlDump,The following statement contains a magic number: Assert.That(context.EvaluateScript("{{ o | htmlDump({ caption: 'C' }) }}"' new ObjectDictionary { ["o"] = new[]{ new A(1)' new A(2) } }).NormalizeNewLines()'                   Is.EqualTo("<table class=\"table\"><caption>C</caption><thead><tr><th>a</th></tr></thead><tbody><tr><td>1</td></tr><tr><td>2</td></tr></tbody></table>".NormalizeNewLines()));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_use_htmlDump,The following statement contains a magic number: Assert.That(context.EvaluateScript("{{ o | htmlDump({ caption: 'C' }) }}"' new ObjectDictionary { ["o"] = new[]{ new B(1' "x")' new B(2' "y") } }).NormalizeNewLines()'                   Is.EqualTo("<table class=\"table\"><caption>C</caption><thead><tr><th>a</th><th>b</th></tr></thead><tbody><tr><td>1</td><td>x</td></tr><tr><td>2</td><td>y</td></tr></tbody></table>".NormalizeNewLines()));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_flatMap,The following statement contains a magic number: Assert.That(context.Evaluate("{{ flatten([[1'2]'[3'4]]) | return }}")' Is.EqualTo(new[]{ 1' 2' 3' 4 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_flatMap,The following statement contains a magic number: Assert.That(context.Evaluate("{{ flatten([[1'2]'[3'4]]) | return }}")' Is.EqualTo(new[]{ 1' 2' 3' 4 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DefaultScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DefaultScriptsTests.cs,Can_flatMap,The following statement contains a magic number: Assert.That(context.Evaluate("{{ flatten([[1'2]'[3'4]]) | return }}")' Is.EqualTo(new[]{ 1' 2' 3' 4 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DslTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DslTests.cs,Can_use_injected_binary_serializer_with_EvaluateScript,The following statement contains a magic number: var person = new PersonContract { Name = "Kurt"' Age = 27 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DslTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DslTests.cs,Can_use_injected_binary_serializer_via_eval_and_custom_Scope,The following statement contains a magic number: var person = new PersonContract { Name = "Kurt"' Age = 27 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DslTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DslTests.cs,Can_use_injected_binary_serializer_via_eval_and_custom_ScriptScopeContext,The following statement contains a magic number: var person = new PersonContract { Name = "Kurt"' Age = 27 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,DslTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\DslTests.cs,Can_use_injected_binary_serializer_via_page_result,The following statement contains a magic number: var person = new PersonContract { Name = "Kurt"' Age = 27 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,EvaluateScriptTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\EvaluateScriptTests.cs,Evaluate_does_return_ReturnValue,The following statement contains a magic number: Assert.That(context.Evaluate("{{ 1 + 1 | return }}")' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,EvaluateScriptTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\EvaluateScriptTests.cs,Evaluate_does_return_ReturnValue,The following statement contains a magic number: Assert.That(context.Evaluate("{{ return(1 + 1) }}")' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,EvaluateScriptTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\EvaluateScriptTests.cs,Evaluate_does_return_ReturnValue_Async,The following statement contains a magic number: Assert.That(await context.EvaluateAsync("{{ 1 + 1 | return }}")' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,EvaluateScriptTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\EvaluateScriptTests.cs,Evaluate_does_return_ReturnValue_Async,The following statement contains a magic number: Assert.That(await context.EvaluateAsync("{{ return(1 + 1) }}")' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,EvaluateScriptTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\EvaluateScriptTests.cs,Evaluate_does_convert_return_Value,The following statement contains a magic number: Assert.That(context.Evaluate<int>("{{ return(1 + 1) }}")' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,EvaluateScriptTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\EvaluateScriptTests.cs,Evaluate_does_convert_return_Value,The following statement contains a magic number: Assert.That(context.Evaluate<long>("{{ return(1 + 1) }}")' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,EvaluateScriptTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\EvaluateScriptTests.cs,Evaluate_does_convert_return_Value,The following statement contains a magic number: Assert.That(context.Evaluate<double>("{{ return(1 + 1) }}")' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,EvaluateScriptTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\EvaluateScriptTests.cs,Evaluate_does_convert_return_Value,The following statement contains a magic number: Assert.That(context.Evaluate<double>("{{ return('2') }}")' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsArrowFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsArrowFunctionTests.cs,Does_evaluate_let_bindings_Arrow_Expressions,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["people"] = new[] { new Person("name1"' 1)' new Person("name2"' 2)' new Person("name3"' 3)' }                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsArrowFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsArrowFunctionTests.cs,Does_evaluate_let_bindings_Arrow_Expressions,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["people"] = new[] { new Person("name1"' 1)' new Person("name2"' 2)' new Person("name3"' 3)' }                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsArrowFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsArrowFunctionTests.cs,Can_Invoke_Arrow_Expressions,The following statement contains a magic number: Assert.That(expr.Evaluate()' Is.EqualTo(20));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsArrowFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsArrowFunctionTests.cs,Can_Invoke_Arrow_Expressions,The following statement contains a magic number: Assert.That(JS.eval("pow(2'2) + pow(4'2)")' Is.EqualTo(20));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsArrowFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsArrowFunctionTests.cs,Can_Invoke_Arrow_Expressions,The following statement contains a magic number: var scope = JS.CreateScope(args: new Dictionary<string' object> {                  ["a"] = 2'                  ["b"] = 4'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsArrowFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsArrowFunctionTests.cs,Can_Invoke_Arrow_Expressions,The following statement contains a magic number: var scope = JS.CreateScope(args: new Dictionary<string' object> {                  ["a"] = 2'                  ["b"] = 4'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsArrowFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsArrowFunctionTests.cs,Can_Invoke_Arrow_Expressions,The following statement contains a magic number: Assert.That(JS.eval("pow(a'2) + pow(b'2)"' scope)' Is.EqualTo(20));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsArrowFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsArrowFunctionTests.cs,Can_Invoke_Arrow_Expressions,The following statement contains a magic number: Assert.That(JS.eval("pow(2'2) + pow(4'2)"' customPow)' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsArrowFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsArrowFunctionTests.cs,Can_Invoke_Arrow_Expressions,The following statement contains a magic number: Assert.That(arrowExpr.Invoke(2'4)' Is.EqualTo(20));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsArrowFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsArrowFunctionTests.cs,Can_Invoke_Arrow_Expressions,The following statement contains a magic number: Assert.That(arrowExpr.Invoke(2'4)' Is.EqualTo(20));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsArrowFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsArrowFunctionTests.cs,Can_Invoke_Arrow_Expressions,The following statement contains a magic number: Assert.That(arrowExpr.Invoke(2'4)' Is.EqualTo(20));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsArrowFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsArrowFunctionTests.cs,Can_Invoke_Arrow_Expressions,The following statement contains a magic number: Assert.That(arrowExpr.Invoke(customPow' 2'4)' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsArrowFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsArrowFunctionTests.cs,Can_Invoke_Arrow_Expressions,The following statement contains a magic number: Assert.That(arrowExpr.Invoke(customPow' 2'4)' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsArrowFunctionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsArrowFunctionTests.cs,Can_Invoke_Arrow_Expressions,The following statement contains a magic number: Assert.That(arrowExpr.Invoke(customPow' 2'4)' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsAstTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsAstTests.cs,Can_use_ToJsAst_to_generate_Esprima_AST,The following statement contains a magic number: var expected = new Dictionary<string' object> {                  ["type"] = "ObjectExpression"'                  ["properties"] = new List<object> {                      new Dictionary<string' object> {                          ["type"] = "Property"'                          ["key"] = new Dictionary<string' object> {                              ["type"] = "Identifier"'                              ["name"] = "key"'                          }'                          ["computed"] = false'                          ["value"] = new Dictionary<string' object> {                              ["type"] = "ConditionalExpression"'                              ["test"] = new Dictionary<string' object> {                                  ["type"] = "BinaryExpression"'                                  ["operator"] = "=="'                                  ["left"] = new Dictionary<string' object> {                                      ["type"] = "MemberExpression"'                                      ["computed"] = false'                                      ["object"] = new Dictionary<string' object> {                                          ["type"] = "Identifier"'                                          ["name"] = "a"'                                      }'                                      ["property"] = new Dictionary<string' object> {                                          ["type"] = "Identifier"'                                          ["name"] = "prop"'                                      }                                  }'                                  ["right"] = new Dictionary<string' object> {                                      ["type"] = "Literal"'                                      ["value"] = 1'                                      ["raw"] = "1"'                                  }'                              }'                              ["consequent"] = new Dictionary<string' object> {                                  ["type"] = "BinaryExpression"'                                  ["operator"] = "<"'                                  ["left"] = new Dictionary<string' object> {                                      ["type"] = "Identifier"'                                      ["name"] = "b"'                                  }'                                  ["right"] = new Dictionary<string' object> {                                      ["type"] = "Literal"'                                      ["value"] = 2'                                      ["raw"] = "2"'                                  }'                              }'                              ["alternate"] = new Dictionary<string' object> {                                  ["type"] = "BinaryExpression"'                                  ["operator"] = ">"'                                  ["left"] = new Dictionary<string' object> {                                      ["type"] = "Identifier"'                                      ["name"] = "c"'                                  }'                                  ["right"] = new Dictionary<string' object> {                                      ["type"] = "Literal"'                                      ["value"] = 3'                                      ["raw"] = "3"'                                  }'                              }'                          }'                          ["kind"] = "init"'                          ["method"] = false'                          ["shorthand"] = false'                      }                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsAstTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsAstTests.cs,Can_use_ToJsAst_to_generate_Esprima_AST,The following statement contains a magic number: var expected = new Dictionary<string' object> {                  ["type"] = "ObjectExpression"'                  ["properties"] = new List<object> {                      new Dictionary<string' object> {                          ["type"] = "Property"'                          ["key"] = new Dictionary<string' object> {                              ["type"] = "Identifier"'                              ["name"] = "key"'                          }'                          ["computed"] = false'                          ["value"] = new Dictionary<string' object> {                              ["type"] = "ConditionalExpression"'                              ["test"] = new Dictionary<string' object> {                                  ["type"] = "BinaryExpression"'                                  ["operator"] = "=="'                                  ["left"] = new Dictionary<string' object> {                                      ["type"] = "MemberExpression"'                                      ["computed"] = false'                                      ["object"] = new Dictionary<string' object> {                                          ["type"] = "Identifier"'                                          ["name"] = "a"'                                      }'                                      ["property"] = new Dictionary<string' object> {                                          ["type"] = "Identifier"'                                          ["name"] = "prop"'                                      }                                  }'                                  ["right"] = new Dictionary<string' object> {                                      ["type"] = "Literal"'                                      ["value"] = 1'                                      ["raw"] = "1"'                                  }'                              }'                              ["consequent"] = new Dictionary<string' object> {                                  ["type"] = "BinaryExpression"'                                  ["operator"] = "<"'                                  ["left"] = new Dictionary<string' object> {                                      ["type"] = "Identifier"'                                      ["name"] = "b"'                                  }'                                  ["right"] = new Dictionary<string' object> {                                      ["type"] = "Literal"'                                      ["value"] = 2'                                      ["raw"] = "2"'                                  }'                              }'                              ["alternate"] = new Dictionary<string' object> {                                  ["type"] = "BinaryExpression"'                                  ["operator"] = ">"'                                  ["left"] = new Dictionary<string' object> {                                      ["type"] = "Identifier"'                                      ["name"] = "c"'                                  }'                                  ["right"] = new Dictionary<string' object> {                                      ["type"] = "Literal"'                                      ["value"] = 3'                                      ["raw"] = "3"'                                  }'                              }'                          }'                          ["kind"] = "init"'                          ["method"] = false'                          ["shorthand"] = false'                      }                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsLiteralTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsLiteralTests.cs,Does_evaluate_TemplateLiteral,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["a"] = 1'                      ["b"] = 2'                      ["c"] = 3'                      ["d"] = 4'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsLiteralTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsLiteralTests.cs,Does_evaluate_TemplateLiteral,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["a"] = 1'                      ["b"] = 2'                      ["c"] = 3'                      ["d"] = 4'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsLiteralTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsLiteralTests.cs,Does_evaluate_TemplateLiteral,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["a"] = 1'                      ["b"] = 2'                      ["c"] = 3'                      ["d"] = 4'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsLogicalExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsLogicalExpressionTests.cs,Does_parse_ConditionalExpression,The following statement contains a magic number: Assert.That(token' Is.EqualTo(new JsConditionalExpression(                  new JsBinaryExpression(                      new JsLiteral(1)'                      JsLessThan.Operator'                      new JsLiteral(2)                  )'                  new JsBinaryExpression(                      new JsLiteral(3)'                      JsAddition.Operator'                      new JsLiteral(4)                  )'                   new JsBinaryExpression(                      new JsUnaryExpression(JsMinus.Operator' new JsLiteral(5))'                      JsAddition.Operator'                      new JsBinaryExpression(                          new JsCallExpression(                              new JsIdentifier("add")'                              new JsLiteral(6)'                              new JsIdentifier("a")                          )'                           JsAddition.Operator'                          new JsLiteral(7)                      )                  )              )));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsLogicalExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsLogicalExpressionTests.cs,Does_parse_ConditionalExpression,The following statement contains a magic number: Assert.That(token' Is.EqualTo(new JsConditionalExpression(                  new JsBinaryExpression(                      new JsLiteral(1)'                      JsLessThan.Operator'                      new JsLiteral(2)                  )'                  new JsBinaryExpression(                      new JsLiteral(3)'                      JsAddition.Operator'                      new JsLiteral(4)                  )'                   new JsBinaryExpression(                      new JsUnaryExpression(JsMinus.Operator' new JsLiteral(5))'                      JsAddition.Operator'                      new JsBinaryExpression(                          new JsCallExpression(                              new JsIdentifier("add")'                              new JsLiteral(6)'                              new JsIdentifier("a")                          )'                           JsAddition.Operator'                          new JsLiteral(7)                      )                  )              )));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsLogicalExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsLogicalExpressionTests.cs,Does_parse_ConditionalExpression,The following statement contains a magic number: Assert.That(token' Is.EqualTo(new JsConditionalExpression(                  new JsBinaryExpression(                      new JsLiteral(1)'                      JsLessThan.Operator'                      new JsLiteral(2)                  )'                  new JsBinaryExpression(                      new JsLiteral(3)'                      JsAddition.Operator'                      new JsLiteral(4)                  )'                   new JsBinaryExpression(                      new JsUnaryExpression(JsMinus.Operator' new JsLiteral(5))'                      JsAddition.Operator'                      new JsBinaryExpression(                          new JsCallExpression(                              new JsIdentifier("add")'                              new JsLiteral(6)'                              new JsIdentifier("a")                          )'                           JsAddition.Operator'                          new JsLiteral(7)                      )                  )              )));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsLogicalExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsLogicalExpressionTests.cs,Does_parse_ConditionalExpression,The following statement contains a magic number: Assert.That(token' Is.EqualTo(new JsConditionalExpression(                  new JsBinaryExpression(                      new JsLiteral(1)'                      JsLessThan.Operator'                      new JsLiteral(2)                  )'                  new JsBinaryExpression(                      new JsLiteral(3)'                      JsAddition.Operator'                      new JsLiteral(4)                  )'                   new JsBinaryExpression(                      new JsUnaryExpression(JsMinus.Operator' new JsLiteral(5))'                      JsAddition.Operator'                      new JsBinaryExpression(                          new JsCallExpression(                              new JsIdentifier("add")'                              new JsLiteral(6)'                              new JsIdentifier("a")                          )'                           JsAddition.Operator'                          new JsLiteral(7)                      )                  )              )));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsLogicalExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsLogicalExpressionTests.cs,Does_parse_ConditionalExpression,The following statement contains a magic number: Assert.That(token' Is.EqualTo(new JsConditionalExpression(                  new JsBinaryExpression(                      new JsLiteral(1)'                      JsLessThan.Operator'                      new JsLiteral(2)                  )'                  new JsBinaryExpression(                      new JsLiteral(3)'                      JsAddition.Operator'                      new JsLiteral(4)                  )'                   new JsBinaryExpression(                      new JsUnaryExpression(JsMinus.Operator' new JsLiteral(5))'                      JsAddition.Operator'                      new JsBinaryExpression(                          new JsCallExpression(                              new JsIdentifier("add")'                              new JsLiteral(6)'                              new JsIdentifier("a")                          )'                           JsAddition.Operator'                          new JsLiteral(7)                      )                  )              )));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsLogicalExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsLogicalExpressionTests.cs,Does_parse_ConditionalExpression,The following statement contains a magic number: Assert.That(token' Is.EqualTo(new JsConditionalExpression(                  new JsBinaryExpression(                      new JsLiteral(1)'                      JsLessThan.Operator'                      new JsLiteral(2)                  )'                  new JsBinaryExpression(                      new JsLiteral(3)'                      JsAddition.Operator'                      new JsLiteral(4)                  )'                   new JsBinaryExpression(                      new JsUnaryExpression(JsMinus.Operator' new JsLiteral(5))'                      JsAddition.Operator'                      new JsBinaryExpression(                          new JsCallExpression(                              new JsIdentifier("add")'                              new JsLiteral(6)'                              new JsIdentifier("a")                          )'                           JsAddition.Operator'                          new JsLiteral(7)                      )                  )              )));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsLogicalExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsLogicalExpressionTests.cs,Does_parse_ConditionalExpression,The following statement contains a magic number: Assert.That(token' Is.EqualTo(new JsConditionalExpression(                  new JsBinaryExpression(                      new JsBinaryExpression(                          new JsLiteral(1)'                          JsAddition.Operator'                          new JsLiteral(2)                      )'                       JsGreaterThan.Operator'                       new JsCallExpression(                          new JsIdentifier("subtract")'                          new JsLiteral(3)'                          new JsLiteral(4)                      )                  )'                   new JsLiteral("YES")'                  new JsLiteral("NO")              )));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsLogicalExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsLogicalExpressionTests.cs,Does_parse_ConditionalExpression,The following statement contains a magic number: Assert.That(token' Is.EqualTo(new JsConditionalExpression(                  new JsBinaryExpression(                      new JsBinaryExpression(                          new JsLiteral(1)'                          JsAddition.Operator'                          new JsLiteral(2)                      )'                       JsGreaterThan.Operator'                       new JsCallExpression(                          new JsIdentifier("subtract")'                          new JsLiteral(3)'                          new JsLiteral(4)                      )                  )'                   new JsLiteral("YES")'                  new JsLiteral("NO")              )));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsLogicalExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsLogicalExpressionTests.cs,Does_parse_ConditionalExpression,The following statement contains a magic number: Assert.That(token' Is.EqualTo(new JsConditionalExpression(                  new JsBinaryExpression(                      new JsBinaryExpression(                          new JsLiteral(1)'                          JsAddition.Operator'                          new JsLiteral(2)                      )'                       JsGreaterThan.Operator'                       new JsCallExpression(                          new JsIdentifier("subtract")'                          new JsLiteral(3)'                          new JsLiteral(4)                      )                  )'                   new JsLiteral("YES")'                  new JsLiteral("NO")              )));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsMemberCallExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsMemberCallExpressionTests.cs,Does_parse_member_call_expressions_on_literals,The following statement contains a magic number: Assert.That(token' Is.EqualTo(new JsCallExpression(                  new JsMemberExpression(                      new JsLiteral(1.2)'                       new JsIdentifier("a")                   )              )));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsMemberCallExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsMemberCallExpressionTests.cs,Does_parse_member_call_expressions_on_literals_chained,The following statement contains a magic number: Assert.That(token' Is.EqualTo(new JsCallExpression(                  new JsMemberExpression(                      new JsCallExpression(                          new JsMemberExpression(                              new JsLiteral(1.2)'                               new JsIdentifier("a")                           )                      )'                      new JsIdentifier("b")                   )              )));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsMemberCallExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsMemberCallExpressionTests.cs,Does_parse_member_call_expressions_with_arrow_expression_args,The following statement contains a magic number: Assert.That(token' Is.EqualTo(new JsCallExpression(                  new JsMemberExpression(                      new JsIdentifier("a")'                       new JsIdentifier("b")                   )'                  new JsArrowFunctionExpression(                      new JsIdentifier("x")'                      new JsBinaryExpression(                          new JsIdentifier("x")'                          JsMultiplication.Operator'                           new JsLiteral(2)                      )                  )              )));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsMemberCallExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsMemberCallExpressionTests.cs,CreateScriptContext,The following statement contains a magic number: return new ScriptContext {                  ScriptMethods = { new MyMethods() }'                  Args = {                      ["a"] = new TestTarget {                          Int = 2'                          String = "test"'                          Nums = new[] { 1'2'3 }'                      }'                      ["c"] = "count"'                      ["two"] = 2'                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsMemberCallExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsMemberCallExpressionTests.cs,CreateScriptContext,The following statement contains a magic number: return new ScriptContext {                  ScriptMethods = { new MyMethods() }'                  Args = {                      ["a"] = new TestTarget {                          Int = 2'                          String = "test"'                          Nums = new[] { 1'2'3 }'                      }'                      ["c"] = "count"'                      ["two"] = 2'                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsMemberCallExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsMemberCallExpressionTests.cs,CreateScriptContext,The following statement contains a magic number: return new ScriptContext {                  ScriptMethods = { new MyMethods() }'                  Args = {                      ["a"] = new TestTarget {                          Int = 2'                          String = "test"'                          Nums = new[] { 1'2'3 }'                      }'                      ["c"] = "count"'                      ["two"] = 2'                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsMemberCallExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsMemberCallExpressionTests.cs,CreateScriptContext,The following statement contains a magic number: return new ScriptContext {                  ScriptMethods = { new MyMethods() }'                  Args = {                      ["a"] = new TestTarget {                          Int = 2'                          String = "test"'                          Nums = new[] { 1'2'3 }'                      }'                      ["c"] = "count"'                      ["two"] = 2'                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsSpreadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsSpreadTests.cs,Does_parse_ArrayExpression_with_spread_operator,The following statement contains a magic number: Assert.That(token' Is.EqualTo(new JsArrayExpression(                  new JsLiteral(1)'                  new JsSpreadElement(new JsArrayExpression(                      new JsLiteral(2)                  ))'                  new JsLiteral(3)              )));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsSpreadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsSpreadTests.cs,Does_parse_ArrayExpression_with_spread_operator,The following statement contains a magic number: Assert.That(token' Is.EqualTo(new JsArrayExpression(                  new JsLiteral(1)'                  new JsSpreadElement(new JsArrayExpression(                      new JsLiteral(2)                  ))'                  new JsLiteral(3)              )));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsSpreadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsSpreadTests.cs,Does_parse_ObjectExpression_with_spread_operator,The following statement contains a magic number: Assert.That(token' Is.EqualTo(new JsObjectExpression(                  new JsProperty(                      null'                       new JsSpreadElement(                          new JsObjectExpression(                              new JsProperty(new JsIdentifier("b")' new JsLiteral(2))                          )                      )                  )              )));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsSpreadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsSpreadTests.cs,Does_parse_ObjectExpression_with_spread_operator,The following statement contains a magic number: Assert.That(token' Is.EqualTo(new JsObjectExpression(                  new JsProperty(new JsIdentifier("a")' new JsLiteral(1))'                  new JsProperty(                      null'                       new JsSpreadElement(                          new JsObjectExpression(                              new JsProperty(new JsIdentifier("b")' new JsLiteral(2))                          )                      )                  )'                  new JsProperty(new JsIdentifier("c")' new JsLiteral(3))              )));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsSpreadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsSpreadTests.cs,Does_parse_ObjectExpression_with_spread_operator,The following statement contains a magic number: Assert.That(token' Is.EqualTo(new JsObjectExpression(                  new JsProperty(new JsIdentifier("a")' new JsLiteral(1))'                  new JsProperty(                      null'                       new JsSpreadElement(                          new JsObjectExpression(                              new JsProperty(new JsIdentifier("b")' new JsLiteral(2))                          )                      )                  )'                  new JsProperty(new JsIdentifier("c")' new JsLiteral(3))              )));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsSpreadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsSpreadTests.cs,Does_parse_CallExpression_with_spread_operator,The following statement contains a magic number: Assert.That(token' Is.EqualTo(new JsCallExpression(                  new JsIdentifier("fn")'                  new JsLiteral(1)'                  new JsSpreadElement(new JsArrayExpression(                      new JsLiteral(2)                  ))'                  new JsLiteral(3)              )));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsSpreadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsSpreadTests.cs,Does_parse_CallExpression_with_spread_operator,The following statement contains a magic number: Assert.That(token' Is.EqualTo(new JsCallExpression(                  new JsIdentifier("fn")'                  new JsLiteral(1)'                  new JsSpreadElement(new JsArrayExpression(                      new JsLiteral(2)                  ))'                  new JsLiteral(3)              )));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsSpreadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsSpreadTests.cs,Does_parse_CallExpression_with_spread_operator,The following statement contains a magic number: Assert.That(token' Is.EqualTo(new JsCallExpression(                  new JsIdentifier("fn")'                  new JsSpreadElement(                      new JsCallExpression(                          new JsIdentifier("range")'                          new JsLiteral(3)                      )                  )              )));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsSpreadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsSpreadTests.cs,Does_evaluate_ArrayExpression_with_spread_operator,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["a"] = new[]{ 2' 1 }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsSpreadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsSpreadTests.cs,Does_evaluate_ObjectExpression_with_spread_operator,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["a"] = new{ b = 2' c = 3 }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsSpreadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsSpreadTests.cs,Does_evaluate_ObjectExpression_with_spread_operator,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["a"] = new{ b = 2' c = 3 }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsSpreadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsSpreadTests.cs,Spread_operator_does_cascade_object_properties,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["poco"] = new Person("foo"' 1)'                      ["anon"] = new { Name = "bar"' Age = 2 }'                      ["foo"] = new Person("foo"' 3)'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsSpreadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsSpreadTests.cs,Spread_operator_does_cascade_object_properties,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["poco"] = new Person("foo"' 1)'                      ["anon"] = new { Name = "bar"' Age = 2 }'                      ["foo"] = new Person("foo"' 3)'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsSpreadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsSpreadTests.cs,Does_evaluate_CallExpression_with_spread_operator,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["nums2"] = new[]{ 20'10 }'                      ["nums3"] = new[]{ 20'10'1 }'                  }'                  ScriptMethods = {                      new MyFilters()                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsSpreadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsSpreadTests.cs,Does_evaluate_CallExpression_with_spread_operator,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["nums2"] = new[]{ 20'10 }'                      ["nums3"] = new[]{ 20'10'1 }'                  }'                  ScriptMethods = {                      new MyFilters()                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsSpreadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsSpreadTests.cs,Does_evaluate_CallExpression_with_spread_operator,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["nums2"] = new[]{ 20'10 }'                      ["nums3"] = new[]{ 20'10'1 }'                  }'                  ScriptMethods = {                      new MyFilters()                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsSpreadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsSpreadTests.cs,Does_evaluate_CallExpression_with_spread_operator,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["nums2"] = new[]{ 20'10 }'                      ["nums3"] = new[]{ 20'10'1 }'                  }'                  ScriptMethods = {                      new MyFilters()                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,JsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\JsTests.cs,Can_parse_json_values,The following statement contains a magic number: Assert.That(JSON.parseSpan("1.1".AsSpan())' Is.EqualTo(1.1));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,AppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\PageBasedRoutingTests.cs,Configure,The following statement contains a magic number: Plugins.Add(new AutoQueryDataFeature { MaxLimit = 100 }                      .AddDataSource(ctx => ctx.ServiceSource<Product>(ctx.ConvertTo<GetAllProducts>()))                  );
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,AppHost,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\PageBasedRoutingTests.cs,Configure,The following statement contains a magic number: Plugins.Add(new AutoQueryFeature { MaxLimit = 100 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ProtectedScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ProtectedScriptsTests.cs,Can_cache_contents_with_includeUrlWithCache_and_includeFileWithCache,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromMilliseconds(1001));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ProtectedScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ProtectedScriptsTests.cs,Can_write_and_read_Contents_API,The following statement contains a magic number: var bytes = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ProtectedScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ProtectedScriptsTests.cs,Can_write_and_read_Contents_API,The following statement contains a magic number: var bytes = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ProtectedScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ProtectedScriptsTests.cs,Can_write_and_read_Contents_API,The following statement contains a magic number: var bytes = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ProtectedScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ProtectedScriptsTests.cs,Can_write_and_read_Contents_API,The following statement contains a magic number: var bytes = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ProtectedScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ProtectedScriptsTests.cs,Can_write_and_read_Contents_API,The following statement contains a magic number: var bytes = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ProtectedScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ProtectedScriptsTests.cs,Can_write_and_read_Contents_API,The following statement contains a magic number: var bytes = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ProtectedScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ProtectedScriptsTests.cs,Can_write_and_read_Contents_API,The following statement contains a magic number: var bytes = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ProtectedScriptsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ProtectedScriptsTests.cs,Can_write_and_read_Contents_API,The following statement contains a magic number: var bytes = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryExpressionTests.cs,Does_parse_basic_QueryExpressions,The following statement contains a magic number: Assert.That(expr'                  Is.EqualTo(new JsBinaryExpression(new JsLiteral(1)' JsGreaterThan.Operator' new JsLiteral(2))));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryExpressionTests.cs,Does_parse_basic_QueryExpressions,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsLogicalExpression(                      new JsBinaryExpression(new JsLiteral(1)' JsGreaterThan.Operator' new JsLiteral(2))'                      JsAnd.Operator'                      new JsBinaryExpression(new JsLiteral(3)' JsGreaterThan.Operator' new JsLiteral(4))                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryExpressionTests.cs,Does_parse_basic_QueryExpressions,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsLogicalExpression(                      new JsBinaryExpression(new JsLiteral(1)' JsGreaterThan.Operator' new JsLiteral(2))'                      JsAnd.Operator'                      new JsBinaryExpression(new JsLiteral(3)' JsGreaterThan.Operator' new JsLiteral(4))                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryExpressionTests.cs,Does_parse_basic_QueryExpressions,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsLogicalExpression(                      new JsBinaryExpression(new JsLiteral(1)' JsGreaterThan.Operator' new JsLiteral(2))'                      JsAnd.Operator'                      new JsBinaryExpression(new JsLiteral(3)' JsGreaterThan.Operator' new JsLiteral(4))                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryExpressionTests.cs,Does_parse_basic_QueryExpressions,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsLogicalExpression(                      new JsBinaryExpression(new JsLiteral(1)' JsGreaterThan.Operator' new JsLiteral(2))'                      JsAnd.Operator'                      new JsBinaryExpression(new JsLiteral(3)' JsGreaterThan.Operator' new JsLiteral(4))                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryExpressionTests.cs,Does_parse_basic_QueryExpressions,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsLogicalExpression(                      new JsBinaryExpression(new JsLiteral(1)' JsGreaterThan.Operator' new JsLiteral(2))'                      JsAnd.Operator'                      new JsBinaryExpression(new JsLiteral(3)' JsGreaterThan.Operator' new JsLiteral(4))                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryExpressionTests.cs,Does_parse_basic_QueryExpressions,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsLogicalExpression(                      new JsBinaryExpression(new JsLiteral(1)' JsGreaterThan.Operator' new JsLiteral(2))'                      JsAnd.Operator'                      new JsBinaryExpression(new JsLiteral(3)' JsGreaterThan.Operator' new JsLiteral(4))                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryExpressionTests.cs,Does_parse_linq_examples,The following statement contains a magic number: Assert.That(expr'                  Is.EqualTo(new JsBinaryExpression(it' JsLessThan.Operator' new JsLiteral(5))));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryExpressionTests.cs,Does_parse_linq_examples,The following statement contains a magic number: Assert.That(expr' Is.EqualTo(                  new JsLogicalExpression(                      new JsBinaryExpression(                          new JsMemberExpression(new JsIdentifier("it")' new JsIdentifier("UnitsInStock"))'                           JsGreaterThan.Operator'                           new JsLiteral(0)                      )'                      JsAnd.Operator'                      new JsBinaryExpression(                          new JsMemberExpression(new JsIdentifier("it")' new JsIdentifier("UnitPrice"))'                           JsGreaterThan.Operator'                           new JsLiteral(3)                      )                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryExpressionTests.cs,Can_customize_and_evaluate_custom_AST_expressions,The following statement contains a magic number: var expected = new JsLogicalExpression(                  new JsBinaryExpression(new JsIdentifier("a")' JsGreaterThan.Operator' new JsLiteral(1))'                  JsAnd.Operator'                  new JsBinaryExpression(new JsIdentifier("b")' JsLessThan.Operator' new JsLiteral(2))              );
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryExpressionTests.cs,Can_customize_and_evaluate_custom_AST_expressions,The following statement contains a magic number: Assert.That((bool)expr.Evaluate(JS.CreateScope(args:new Dictionary<string' object> {                  ["a"] = 2'                  ["b"] = 1              })));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryExpressionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryExpressionTests.cs,Can_customize_and_evaluate_custom_AST_expressions,The following statement contains a magic number: Assert.That((bool)expr.Evaluate(JS.CreateScope(args:new Dictionary<string' object> {                  ["a"] = 1'                  ["b"] = 2              }))' Is.False);
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryFilterAlternativeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqAlternativeTests.cs,CreateContext,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["numbers"] = new[] {5' 4' 1' 3' 9' 8' 6' 7' 2' 0}'                      ["products"] = QueryData.Products'                      ["customers"] = QueryData.Customers'                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryFilterAlternativeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqAlternativeTests.cs,CreateContext,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["numbers"] = new[] {5' 4' 1' 3' 9' 8' 6' 7' 2' 0}'                      ["products"] = QueryData.Products'                      ["customers"] = QueryData.Customers'                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryFilterAlternativeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqAlternativeTests.cs,CreateContext,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["numbers"] = new[] {5' 4' 1' 3' 9' 8' 6' 7' 2' 0}'                      ["products"] = QueryData.Products'                      ["customers"] = QueryData.Customers'                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryFilterAlternativeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqAlternativeTests.cs,CreateContext,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["numbers"] = new[] {5' 4' 1' 3' 9' 8' 6' 7' 2' 0}'                      ["products"] = QueryData.Products'                      ["customers"] = QueryData.Customers'                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryFilterAlternativeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqAlternativeTests.cs,CreateContext,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["numbers"] = new[] {5' 4' 1' 3' 9' 8' 6' 7' 2' 0}'                      ["products"] = QueryData.Products'                      ["customers"] = QueryData.Customers'                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryFilterAlternativeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqAlternativeTests.cs,CreateContext,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["numbers"] = new[] {5' 4' 1' 3' 9' 8' 6' 7' 2' 0}'                      ["products"] = QueryData.Products'                      ["customers"] = QueryData.Customers'                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryFilterAlternativeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqAlternativeTests.cs,CreateContext,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["numbers"] = new[] {5' 4' 1' 3' 9' 8' 6' 7' 2' 0}'                      ["products"] = QueryData.Products'                      ["customers"] = QueryData.Customers'                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryFilterAlternativeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqAlternativeTests.cs,CreateContext,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["numbers"] = new[] {5' 4' 1' 3' 9' 8' 6' 7' 2' 0}'                      ["products"] = QueryData.Products'                      ["customers"] = QueryData.Customers'                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryFilterAlternativeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqAlternativeTests.cs,Linq14_original,The following statement contains a magic number: var context = CreateContext(new Dictionary<string' object>              {                  {"numbersA"' new[] {0' 2' 4' 5' 6' 8' 9}}'                  {"numbersB"' new[] {1' 3' 5' 7' 8}}'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryFilterAlternativeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqAlternativeTests.cs,Linq14_original,The following statement contains a magic number: var context = CreateContext(new Dictionary<string' object>              {                  {"numbersA"' new[] {0' 2' 4' 5' 6' 8' 9}}'                  {"numbersB"' new[] {1' 3' 5' 7' 8}}'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryFilterAlternativeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqAlternativeTests.cs,Linq14_original,The following statement contains a magic number: var context = CreateContext(new Dictionary<string' object>              {                  {"numbersA"' new[] {0' 2' 4' 5' 6' 8' 9}}'                  {"numbersB"' new[] {1' 3' 5' 7' 8}}'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryFilterAlternativeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqAlternativeTests.cs,Linq14_original,The following statement contains a magic number: var context = CreateContext(new Dictionary<string' object>              {                  {"numbersA"' new[] {0' 2' 4' 5' 6' 8' 9}}'                  {"numbersB"' new[] {1' 3' 5' 7' 8}}'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryFilterAlternativeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqAlternativeTests.cs,Linq14_original,The following statement contains a magic number: var context = CreateContext(new Dictionary<string' object>              {                  {"numbersA"' new[] {0' 2' 4' 5' 6' 8' 9}}'                  {"numbersB"' new[] {1' 3' 5' 7' 8}}'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryFilterAlternativeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqAlternativeTests.cs,Linq14_original,The following statement contains a magic number: var context = CreateContext(new Dictionary<string' object>              {                  {"numbersA"' new[] {0' 2' 4' 5' 6' 8' 9}}'                  {"numbersB"' new[] {1' 3' 5' 7' 8}}'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryFilterAlternativeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqAlternativeTests.cs,Linq14_original,The following statement contains a magic number: var context = CreateContext(new Dictionary<string' object>              {                  {"numbersA"' new[] {0' 2' 4' 5' 6' 8' 9}}'                  {"numbersB"' new[] {1' 3' 5' 7' 8}}'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryFilterAlternativeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqAlternativeTests.cs,Linq14_original,The following statement contains a magic number: var context = CreateContext(new Dictionary<string' object>              {                  {"numbersA"' new[] {0' 2' 4' 5' 6' 8' 9}}'                  {"numbersB"' new[] {1' 3' 5' 7' 8}}'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryFilterAlternativeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqAlternativeTests.cs,Linq14_original,The following statement contains a magic number: var context = CreateContext(new Dictionary<string' object>              {                  {"numbersA"' new[] {0' 2' 4' 5' 6' 8' 9}}'                  {"numbersB"' new[] {1' 3' 5' 7' 8}}'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryFilterAlternativeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqAlternativeTests.cs,Linq14_original,The following statement contains a magic number: var context = CreateContext(new Dictionary<string' object>              {                  {"numbersA"' new[] {0' 2' 4' 5' 6' 8' 9}}'                  {"numbersB"' new[] {1' 3' 5' 7' 8}}'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryFilterAlternativeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqAlternativeTests.cs,Linq14_bindings,The following statement contains a magic number: var context = CreateContext(new Dictionary<string' object>              {                  {"numbersA"' new[] {0' 2' 4' 5' 6' 8' 9}}'                  {"numbersB"' new[] {1' 3' 5' 7' 8}}'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryFilterAlternativeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqAlternativeTests.cs,Linq14_bindings,The following statement contains a magic number: var context = CreateContext(new Dictionary<string' object>              {                  {"numbersA"' new[] {0' 2' 4' 5' 6' 8' 9}}'                  {"numbersB"' new[] {1' 3' 5' 7' 8}}'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryFilterAlternativeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqAlternativeTests.cs,Linq14_bindings,The following statement contains a magic number: var context = CreateContext(new Dictionary<string' object>              {                  {"numbersA"' new[] {0' 2' 4' 5' 6' 8' 9}}'                  {"numbersB"' new[] {1' 3' 5' 7' 8}}'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryFilterAlternativeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqAlternativeTests.cs,Linq14_bindings,The following statement contains a magic number: var context = CreateContext(new Dictionary<string' object>              {                  {"numbersA"' new[] {0' 2' 4' 5' 6' 8' 9}}'                  {"numbersB"' new[] {1' 3' 5' 7' 8}}'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryFilterAlternativeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqAlternativeTests.cs,Linq14_bindings,The following statement contains a magic number: var context = CreateContext(new Dictionary<string' object>              {                  {"numbersA"' new[] {0' 2' 4' 5' 6' 8' 9}}'                  {"numbersB"' new[] {1' 3' 5' 7' 8}}'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryFilterAlternativeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqAlternativeTests.cs,Linq14_bindings,The following statement contains a magic number: var context = CreateContext(new Dictionary<string' object>              {                  {"numbersA"' new[] {0' 2' 4' 5' 6' 8' 9}}'                  {"numbersB"' new[] {1' 3' 5' 7' 8}}'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryFilterAlternativeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqAlternativeTests.cs,Linq14_bindings,The following statement contains a magic number: var context = CreateContext(new Dictionary<string' object>              {                  {"numbersA"' new[] {0' 2' 4' 5' 6' 8' 9}}'                  {"numbersB"' new[] {1' 3' 5' 7' 8}}'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryFilterAlternativeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqAlternativeTests.cs,Linq14_bindings,The following statement contains a magic number: var context = CreateContext(new Dictionary<string' object>              {                  {"numbersA"' new[] {0' 2' 4' 5' 6' 8' 9}}'                  {"numbersB"' new[] {1' 3' 5' 7' 8}}'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryFilterAlternativeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqAlternativeTests.cs,Linq14_bindings,The following statement contains a magic number: var context = CreateContext(new Dictionary<string' object>              {                  {"numbersA"' new[] {0' 2' 4' 5' 6' 8' 9}}'                  {"numbersB"' new[] {1' 3' 5' 7' 8}}'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryFilterAlternativeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryLinqAlternativeTests.cs,Linq14_bindings,The following statement contains a magic number: var context = CreateContext(new Dictionary<string' object>              {                  {"numbersA"' new[] {0' 2' 4' 5' 6' 8' 9}}'                  {"numbersB"' new[] {1' 3' 5' 7' 8}}'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryTests.cs,Take_does_limit_KVP_Objects,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["items"] = new List<KeyValuePair<string' object>> {                          new KeyValuePair<string' object>("A"' 1)'                          new KeyValuePair<string' object>("B"' 2)'                          new KeyValuePair<string' object>("C"' 3)'                      }                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryTests.cs,Take_does_limit_KVP_Objects,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["items"] = new List<KeyValuePair<string' object>> {                          new KeyValuePair<string' object>("A"' 1)'                          new KeyValuePair<string' object>("B"' 2)'                          new KeyValuePair<string' object>("C"' 3)'                      }                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryTests.cs,Take_does_limit_KVP_longs,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["items"] = new List<KeyValuePair<string' long>> {                          new KeyValuePair<string' long>("A"' 1)'                          new KeyValuePair<string' long>("B"' 2)'                          new KeyValuePair<string' long>("C"' 3)'                      }                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,QueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\QueryTests.cs,Take_does_limit_KVP_longs,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["items"] = new List<KeyValuePair<string' long>> {                          new KeyValuePair<string' long>("A"' 1)'                          new KeyValuePair<string' long>("B"' 2)'                          new KeyValuePair<string' long>("C"' 3)'                      }                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptAssembliesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptAssembliesTests.cs,Can_call_ambiguous_methods,The following statement contains a magic number: Assert.That(result' Is.EqualTo(2.0d));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptAssembliesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptAssembliesTests.cs,Can_call_ambiguous_methods,The following statement contains a magic number: Assert.That(result' Is.EqualTo(2.0d));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptAssembliesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptAssembliesTests.cs,Can_create_Type_from_registered_Script_Assembly_from_Constructor_ObjectActivator,The following statement contains a magic number: Assert.That(result' Is.EqualTo(new DateTime(2001'1'1)));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptAssembliesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptAssembliesTests.cs,Can_create_Type_from_registered_Script_Assembly_from_Constructor_ObjectActivator,The following statement contains a magic number: Assert.That(result' Is.EqualTo(new DateTime(2001'1'1)));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptAssembliesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptAssembliesTests.cs,Can_create_Type_from_registered_Script_Assembly_from_Constructor_ObjectActivator,The following statement contains a magic number: Assert.That(result' Is.EqualTo(new DateTime(2001'1'1)));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptAssembliesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptAssembliesTests.cs,Can_create_type_with_constructor_arguments,The following statement contains a magic number: Assert.That(result' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptAssembliesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptAssembliesTests.cs,Can_create_type_with_constructor_arguments,The following statement contains a magic number: Assert.That(result' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptAssembliesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptAssembliesTests.cs,Can_create_type_with_constructor_arguments,The following statement contains a magic number: Assert.That(result' Is.EqualTo(10));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptAssembliesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptAssembliesTests.cs,Can_create_type_with_constructor_arguments,The following statement contains a magic number: Assert.That(result' Is.EqualTo(10));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptAssembliesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptAssembliesTests.cs,Can_create_type_with_constructor_arguments,The following statement contains a magic number: Assert.That(result' Is.EqualTo(10));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptAssembliesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptAssembliesTests.cs,Can_create_type_with_constructor_arguments,The following statement contains a magic number: Assert.That(result' Is.EqualTo(10));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockHtmlTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockHtmlTests.cs,Does_evaluate_ul_html_block,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["numbers"] = new int[]{1' 2' 3}'                      ["letters"] = new[]{ "A"' "B"' "C" }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockHtmlTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockHtmlTests.cs,Does_evaluate_ul_html_block,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["numbers"] = new int[]{1' 2' 3}'                      ["letters"] = new[]{ "A"' "B"' "C" }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockHtmlTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockHtmlTests.cs,CreateContext,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["items"] = new[] {new Person("foo"' 1)' new Person("bar"' 2)' new Person("baz"' 3)}'                      ["id"] = "menu"'                      ["disclaimerAccepted"] = false'                      ["hasAccess"] = true'                      ["highlight"] = "baz"'                      ["digits"] = new[] { "zero"' "one"' "two"' "three"' "four"' "five"' "six"' "seven"' "eight"' "nine" }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockHtmlTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockHtmlTests.cs,CreateContext,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["items"] = new[] {new Person("foo"' 1)' new Person("bar"' 2)' new Person("baz"' 3)}'                      ["id"] = "menu"'                      ["disclaimerAccepted"] = false'                      ["hasAccess"] = true'                      ["highlight"] = "baz"'                      ["digits"] = new[] { "zero"' "one"' "two"' "three"' "four"' "five"' "six"' "seven"' "eight"' "nine" }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_parse_template_with_Block_Statement,The following statement contains a magic number: Assert.That(fragments.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_parse_template_with_Block_Statement,The following statement contains a magic number: Assert.That(((PageStringFragment)statement.Body[2]).Value.ToString()' Is.EqualTo("! "));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_parse_template_with_Block_Statement,The following statement contains a magic number: Assert.That(((PageStringFragment)fragments[2]).Value.ToString()' Is.EqualTo(" AFTER"));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_parse_template_with_if_else_statement,The following statement contains a magic number: Assert.That(fragments.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_parse_template_with_if_else_statement,The following statement contains a magic number: Assert.That(((PageStringFragment)fragments[2]).Value.ToString()' Is.EqualTo(" AFTER"));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_parse_template_with_if_and_else_if_statement,The following statement contains a magic number: Assert.That(fragments.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_parse_template_with_if_and_else_if_statement,The following statement contains a magic number: Assert.That(((PageStringFragment)fragments[2]).Value.ToString()' Is.EqualTo(" AFTER"));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_parse_template_with_nested_Block_Statement,The following statement contains a magic number: Assert.That(fragments.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_parse_template_with_nested_Block_Statement,The following statement contains a magic number: Assert.That(((PageStringFragment)statement.Body[2]).Value.ToString()' Is.EqualTo("! "));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_parse_template_with_nested_Block_Statement,The following statement contains a magic number: Assert.That(((PageStringFragment)fragments[2]).Value.ToString()' Is.EqualTo(" AFTER"));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_parse_Raw_block_body_as_string,The following statement contains a magic number: Assert.That(fragments.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_parse_Raw_block_body_as_string,The following statement contains a magic number: Assert.That(((PageStringFragment)fragments[2]).Value.ToString()' Is.EqualTo(" AFTER"));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_if_else_statement,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["a"] = 1'                      ["b"] = 2'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_if_else_statement,The following statement contains a magic number: context.Args["a"] = 3;
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_if_and_else_if_statement,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["a"] = 1'                      ["b"] = 2'                      ["c"] = 3'                      ["d"] = 4                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_if_and_else_if_statement,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["a"] = 1'                      ["b"] = 2'                      ["c"] = 3'                      ["d"] = 4                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_if_and_else_if_statement,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["a"] = 1'                      ["b"] = 2'                      ["c"] = 3'                      ["d"] = 4                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_if_and_else_if_statement,The following statement contains a magic number: context.Args["a"] = 3;
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_if_and_else_if_statement,The following statement contains a magic number: context.Args["c"] = 5;
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_containing_with_block,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["person"] = new Person { Name = "poco"' Age = 27 }'                      ["personMap"] = new Dictionary<string' object> {                          ["name"] = "map"'                          ["age"] = 27'                      }                   }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_containing_with_block,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["person"] = new Person { Name = "poco"' Age = 27 }'                      ["personMap"] = new Dictionary<string' object> {                          ["name"] = "map"'                          ["age"] = 27'                      }                   }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_containing_with_and_else_block,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["person"] = null'                      ["personMap"] = new Dictionary<string' object> {                          ["name"] = "map"'                          ["age"] = 27'                      }                   }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_simple_each_blocks,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["numbers"] = new[]{ 1' 2' 3 }'                      ["letters"] = new[]{ "A"' "B"' "C" }'                      ["empty"] = new int[]{}'                  }'                  ScriptBlocks = {                      new ScriptSimpleEachBlock()'                      new IfScriptBlock()'                  }              }              .RemovePlugins(x => x is DefaultScriptBlocks)              .Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_simple_each_blocks,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["numbers"] = new[]{ 1' 2' 3 }'                      ["letters"] = new[]{ "A"' "B"' "C" }'                      ["empty"] = new int[]{}'                  }'                  ScriptBlocks = {                      new ScriptSimpleEachBlock()'                      new IfScriptBlock()'                  }              }              .RemovePlugins(x => x is DefaultScriptBlocks)              .Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_blocks,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["numbers"] = new[]{ 1' 2' 3 }'                      ["letters"] = new[]{ "A"' "B"' "C" }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_blocks,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["numbers"] = new[]{ 1' 2' 3 }'                      ["letters"] = new[]{ "A"' "B"' "C" }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_else_blocks,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["numbers"] = new int[]{}'                      ["letters"] = new[]{ "A"' "B"' "C" }'                      ["people"] = new[]{ new Person("name1"' 1)'new Person("name2"' 2)'new Person("name3"' 3) }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_else_blocks,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["numbers"] = new int[]{}'                      ["letters"] = new[]{ "A"' "B"' "C" }'                      ["people"] = new[]{ new Person("name1"' 1)'new Person("name2"' 2)'new Person("name3"' 3) }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_where_blocks,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["numbers"] = new[]{ 1' 2' 3' 4' 5' }'                      ["letters"] = new[]{ "A"' "B"' "C"' "D"' "E" }'                      ["people"] = new[]{ new Person("name1"' 1)'new Person("name2"' 2)'new Person("name3"' 3) }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_where_blocks,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["numbers"] = new[]{ 1' 2' 3' 4' 5' }'                      ["letters"] = new[]{ "A"' "B"' "C"' "D"' "E" }'                      ["people"] = new[]{ new Person("name1"' 1)'new Person("name2"' 2)'new Person("name3"' 3) }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_where_blocks,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["numbers"] = new[]{ 1' 2' 3' 4' 5' }'                      ["letters"] = new[]{ "A"' "B"' "C"' "D"' "E" }'                      ["people"] = new[]{ new Person("name1"' 1)'new Person("name2"' 2)'new Person("name3"' 3) }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_where_blocks,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["numbers"] = new[]{ 1' 2' 3' 4' 5' }'                      ["letters"] = new[]{ "A"' "B"' "C"' "D"' "E" }'                      ["people"] = new[]{ new Person("name1"' 1)'new Person("name2"' 2)'new Person("name3"' 3) }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_where_blocks,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["numbers"] = new[]{ 1' 2' 3' 4' 5' }'                      ["letters"] = new[]{ "A"' "B"' "C"' "D"' "E" }'                      ["people"] = new[]{ new Person("name1"' 1)'new Person("name2"' 2)'new Person("name3"' 3) }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_where_blocks,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["numbers"] = new[]{ 1' 2' 3' 4' 5' }'                      ["letters"] = new[]{ "A"' "B"' "C"' "D"' "E" }'                      ["people"] = new[]{ new Person("name1"' 1)'new Person("name2"' 2)'new Person("name3"' 3) }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_blocks_containing_LINQ_expressions,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["numbers"] = new[]{ 4' 5' 1' 3' 2' }'                      ["letters"] = new[]{ "C"' "D"' "B"' "E"' "A" }'                      ["people"] = new[]{ new Person("name3"' 3)'new Person("name2"' 4)'new Person("name1"' 5)'new Person("name5"' 1)'new Person("name4"' 2) }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_blocks_containing_LINQ_expressions,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["numbers"] = new[]{ 4' 5' 1' 3' 2' }'                      ["letters"] = new[]{ "C"' "D"' "B"' "E"' "A" }'                      ["people"] = new[]{ new Person("name3"' 3)'new Person("name2"' 4)'new Person("name1"' 5)'new Person("name5"' 1)'new Person("name4"' 2) }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_blocks_containing_LINQ_expressions,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["numbers"] = new[]{ 4' 5' 1' 3' 2' }'                      ["letters"] = new[]{ "C"' "D"' "B"' "E"' "A" }'                      ["people"] = new[]{ new Person("name3"' 3)'new Person("name2"' 4)'new Person("name1"' 5)'new Person("name5"' 1)'new Person("name4"' 2) }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_blocks_containing_LINQ_expressions,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["numbers"] = new[]{ 4' 5' 1' 3' 2' }'                      ["letters"] = new[]{ "C"' "D"' "B"' "E"' "A" }'                      ["people"] = new[]{ new Person("name3"' 3)'new Person("name2"' 4)'new Person("name1"' 5)'new Person("name5"' 1)'new Person("name4"' 2) }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_blocks_containing_LINQ_expressions,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["numbers"] = new[]{ 4' 5' 1' 3' 2' }'                      ["letters"] = new[]{ "C"' "D"' "B"' "E"' "A" }'                      ["people"] = new[]{ new Person("name3"' 3)'new Person("name2"' 4)'new Person("name1"' 5)'new Person("name5"' 1)'new Person("name4"' 2) }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_blocks_containing_LINQ_expressions,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["numbers"] = new[]{ 4' 5' 1' 3' 2' }'                      ["letters"] = new[]{ "C"' "D"' "B"' "E"' "A" }'                      ["people"] = new[]{ new Person("name3"' 3)'new Person("name2"' 4)'new Person("name1"' 5)'new Person("name5"' 1)'new Person("name4"' 2) }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_blocks_containing_LINQ_expressions,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["numbers"] = new[]{ 4' 5' 1' 3' 2' }'                      ["letters"] = new[]{ "C"' "D"' "B"' "E"' "A" }'                      ["people"] = new[]{ new Person("name3"' 3)'new Person("name2"' 4)'new Person("name1"' 5)'new Person("name5"' 1)'new Person("name4"' 2) }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_blocks_containing_LINQ_expressions,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["numbers"] = new[]{ 4' 5' 1' 3' 2' }'                      ["letters"] = new[]{ "C"' "D"' "B"' "E"' "A" }'                      ["people"] = new[]{ new Person("name3"' 3)'new Person("name2"' 4)'new Person("name1"' 5)'new Person("name5"' 1)'new Person("name4"' 2) }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Template_each_blocks_without_in_explodes_ref_type_arguments_into_scope,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["people"] = new[]{ new Person("name1"' 1)'new Person("name2"' 2)'new Person("name3"' 3) }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Template_each_blocks_without_in_explodes_ref_type_arguments_into_scope,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["people"] = new[]{ new Person("name1"' 1)'new Person("name2"' 2)'new Person("name3"' 3) }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_in_blocks,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["numbers"] = new[]{ 1' 2' 3 }'                      ["letters"] = new[]{ "A"' "B"' "C" }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_template_with_each_in_blocks,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["numbers"] = new[]{ 1' 2' 3 }'                      ["letters"] = new[]{ "A"' "B"' "C" }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_export_scope_args_of_all_KeyValuePairs,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["numbers"] = new Dictionary<string'int> { ["a"] = 1' ["b"] = 2' ["c"] = 3}'                      ["letters"] = new Dictionary<string'string> { ["a"] = "A"' ["b"] = "B"' ["c"] = "C"}'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_export_scope_args_of_all_KeyValuePairs,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["numbers"] = new Dictionary<string'int> { ["a"] = 1' ["b"] = 2' ["c"] = 3}'                      ["letters"] = new Dictionary<string'string> { ["a"] = "A"' ["b"] = "B"' ["c"] = "C"}'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Can_capture_output_with_capture_block,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["nums"] = new[]{1'2'3}                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Can_capture_output_with_capture_block,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["nums"] = new[]{1'2'3}                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Can_capture_and_appendTo_output_with_capture_block,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["nums"] = new[]{1'2'3}                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Can_capture_and_appendTo_output_with_capture_block,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["nums"] = new[]{1'2'3}                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_partial_in_existing_Context,The following statement contains a magic number: var context = new ScriptContext {                  Args = {                      ["income"] = 1000                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_eval_block_in_new_Context_by_default,The following statement contains a magic number: var context = new ScriptContext {                  ScriptBlocks = { new EvalScriptBlock() }'                  Args = {                      ["income"] = 1000'                      ["incomeExpr"] = "{{income ?? 2000}}"'                      ["expenseExpr"] = "{{expenses}}"'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptBlockTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,Does_evaluate_eval_block_in_existing_Context_with_use_context,The following statement contains a magic number: var context = new ScriptContext {                  ScriptBlocks = { new EvalScriptBlock() }'                  Args = {                      ["income"] = 1000'                      ["incomeExpr"] = "{{income ?? 2000}}"'                      ["expenseExpr"] = "{{expenses}}"'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,AsyncResultsFilter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,asyncInts,The following statement contains a magic number: return ((object)new object[]{1' 2' 3}).InTask();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,AsyncResultsFilter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,asyncInts,The following statement contains a magic number: return ((object)new object[]{1' 2' 3}).InTask();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,AsyncResultsFilter,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptBlockTests.cs,asyncDictionary,The following statement contains a magic number: return ((object)new Dictionary<string' object> { {"foo"' 1}' {"bar"' 2} }).InTask();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptCodeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptCodeTests.cs,Can_parse_single_and_multi_line_code_statements,The following statement contains a magic number: expr = new[] {                  new JsExpressionStatement(new JsBinaryExpression(new JsLiteral(1)' JsAddition.Operator'                      new JsLiteral(2)))'                  new JsExpressionStatement(new JsBinaryExpression(new JsLiteral(3)' JsMultiplication.Operator'                      new JsLiteral(4)))'              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptCodeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptCodeTests.cs,Can_parse_single_and_multi_line_code_statements,The following statement contains a magic number: expr = new[] {                  new JsExpressionStatement(new JsBinaryExpression(new JsLiteral(1)' JsAddition.Operator'                      new JsLiteral(2)))'                  new JsExpressionStatement(new JsBinaryExpression(new JsLiteral(3)' JsMultiplication.Operator'                      new JsLiteral(4)))'              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptCodeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptCodeTests.cs,Can_parse_single_and_multi_line_code_statements,The following statement contains a magic number: expr = new[] {                  new JsExpressionStatement(new JsBinaryExpression(new JsLiteral(1)' JsAddition.Operator'                      new JsLiteral(2)))'                  new JsExpressionStatement(new JsBinaryExpression(new JsLiteral(3)' JsMultiplication.Operator'                      new JsLiteral(4)))'              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptCodeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptCodeTests.cs,Can_parse_single_and_multi_line_code_statements,The following statement contains a magic number: expr = new List<JsStatement>(expr) {                  new JsExpressionStatement(new JsBinaryExpression(new JsLiteral(5)' JsDivision.Operator'                      new JsLiteral(6)))'              }.ToArray();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptCodeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptCodeTests.cs,Can_parse_single_and_multi_line_code_statements,The following statement contains a magic number: expr = new List<JsStatement>(expr) {                  new JsExpressionStatement(new JsBinaryExpression(new JsLiteral(5)' JsDivision.Operator'                      new JsLiteral(6)))'              }.ToArray();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptCodeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptCodeTests.cs,Can_parse_single_and_multi_line_code_statements,The following statement contains a magic number: expr = new[] {                  new JsExpressionStatement(new JsBinaryExpression(new JsLiteral(1)' JsAddition.Operator'                      new JsLiteral(2)))'                  new JsExpressionStatement(new JsLiteral("\n3\n*\n4\n"))'                  new JsExpressionStatement(new JsLiteral(" 5 \n / \n 6 "))'              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptCodeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptCodeTests.cs,Can_parse_single_and_multi_line_code_statements,The following statement contains a magic number: expr = new[] {                  new JsExpressionStatement(new JsBinaryExpression(new JsLiteral(1)' JsAddition.Operator'                      new JsLiteral(2)))'                  new JsExpressionStatement(new JsTemplateLiteral("\n3\n*\n4\n"))'                  new JsExpressionStatement(new JsTemplateLiteral(" 5 \n / \n 6 "))'              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptCodeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptCodeTests.cs,Can_parse_single_and_multi_line_code_statements,The following statement contains a magic number: expr = new[] {                  new JsExpressionStatement(                      new JsConditionalExpression(                          new JsBinaryExpression(new JsIdentifier("a")' JsGreaterThan.Operator' new JsLiteral(2))'                          new JsConditionalExpression(                              new JsCallExpression(new JsMemberExpression(new JsIdentifier("a")' new JsIdentifier("isOdd")))'                              new JsLiteral("a > 2 and odd")'                               new JsLiteral("a > 2 and even")                           )'                          new JsConditionalExpression(                              new JsCallExpression(new JsMemberExpression(new JsIdentifier("a")' new JsIdentifier("isOdd")))'                              new JsLiteral("a <= 2 and odd")'                               new JsLiteral("a <= 2 and even")                           )                      )                  )'              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptCodeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptCodeTests.cs,Can_parse_filter_expressions,The following statement contains a magic number: expr = new[] {                  new JsFilterExpressionStatement("1 | add(2)"' new JsLiteral(1)'                      new JsCallExpression(new JsIdentifier("add")' new JsLiteral(2)))'              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptCodeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptCodeTests.cs,Can_parse_filter_expressions,The following statement contains a magic number: expr = new[] {                  new JsFilterExpressionStatement("1 \n | \n add(2)"' new JsLiteral(1)'                      new JsCallExpression(new JsIdentifier("add")' new JsLiteral(2)))'              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptCodeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptCodeTests.cs,Can_parse_code_statements_with_blocks,The following statement contains a magic number: expr = new[] {                  new JsPageBlockFragmentStatement(new PageBlockFragment("1"' "if"' "true"'                      new JsBlockStatement(                          new JsPageBlockFragmentStatement(                              new PageBlockFragment("1"' "if"' "a > b"'                                  new JsBlockStatement(new JsExpressionStatement(new JsLiteral(1)))'                                  new List<PageElseBlock> {                                      new PageElseBlock(""' new JsBlockStatement(new JsExpressionStatement(new JsLiteral(2))))                                                                      }                              )                          )                      )'                      new List<PageElseBlock> {                          new PageElseBlock(""' new JsBlockStatement(new JsExpressionStatement(new JsLiteral("3"))))                                                          }                  ))              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptCodeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptCodeTests.cs,Can_Evaluate_code,The following statement contains a magic number: result = context.RenderCode(code' new Dictionary<string' object> { ["a"] = 2 });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptCodeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptCodeTests.cs,Can_execute_existing_Script_Blocks_in_Code_Statements_in_Template_Syntax,The following statement contains a magic number: output = context.RenderCode(@"  {{#ul {if:hasAccess' each:items' where:'Age >= 2'' class:['nav'' !disclaimerAccepted?'blur':'']' id:`ul-${id}`} }}      {{#li {class: {alt:isOdd(index)' active:Name==highlight} }}          {{Name}}      {{/li}}  {{else}}      <div>no items</div>  {{/ul}}"' new Dictionary<string' object> {                  ["items"] = new[] {new Person("foo"' 1)' new Person("bar"' 2)' new Person("baz"' 3)}'                  ["id"] = "menu"'                  ["disclaimerAccepted"] = false'                  ["hasAccess"] = true'                  ["highlight"] = "baz"'                  ["digits"] = new[] { "zero"' "one"' "two"' "three"' "four"' "five"' "six"' "seven"' "eight"' "nine" }'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptCodeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptCodeTests.cs,Can_execute_existing_Script_Blocks_in_Code_Statements_in_Template_Syntax,The following statement contains a magic number: output = context.RenderCode(@"  {{#ul {if:hasAccess' each:items' where:'Age >= 2'' class:['nav'' !disclaimerAccepted?'blur':'']' id:`ul-${id}`} }}      {{#li {class: {alt:isOdd(index)' active:Name==highlight} }}          {{Name}}      {{/li}}  {{else}}      <div>no items</div>  {{/ul}}"' new Dictionary<string' object> {                  ["items"] = new[] {new Person("foo"' 1)' new Person("bar"' 2)' new Person("baz"' 3)}'                  ["id"] = "menu"'                  ["disclaimerAccepted"] = false'                  ["hasAccess"] = true'                  ["highlight"] = "baz"'                  ["digits"] = new[] { "zero"' "one"' "two"' "three"' "four"' "five"' "six"' "seven"' "eight"' "nine" }'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptCodeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptCodeTests.cs,Can_execute_existing_Script_Blocks_in_Code_Statements_in_Template_Syntax,The following statement contains a magic number: Assert.That(context.RenderCode(@"'Person '  {{#with person}}  {{Name}} is {{Age}} years old  {{/with}}".NormalizeNewLines()'                       new Dictionary<string' object> {                          ["person"] = new Person { Name = "poco"' Age = 27 }'                      })'                   Is.EqualTo("Person \npoco is 27 years old\n"));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptCodeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptCodeTests.cs,Can_execute_existing_Script_Blocks_in_Code_Statements_in_Code_Syntax,The following statement contains a magic number: Assert.That(context.RenderCode(code'                  new Dictionary<string' object> {                      ["person"] = new Person {Name = "poco"' Age = 27}'                  })'                   Is.EqualTo("Person \npoco is 27 years old\n"));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptCodeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptCodeTests.cs,Can_execute_existing_Script_Blocks_in_Code_Statements_in_Code_Syntax,The following statement contains a magic number: Assert.That(context.RenderCode(code.Trim()'                      new Dictionary<string' object> {                          ["person"] = new Person {Name = "poco"' Age = 27}'                      })'                   Is.EqualTo("Person \npoco is 27 years old\n"));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptCodeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptCodeTests.cs,Can_execute_existing_Script_Blocks_in_Code_Statements_in_Code_Syntax_only_LF,The following statement contains a magic number: Assert.That(context.RenderCode(code'                       new Dictionary<string' object> {                          ["person"] = new Person { Name = "poco"' Age = 27 }'                      }).NormalizeNewLines()'                   Is.EqualTo("Person \npoco is 27 years old"));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptCodeTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptCodeTests.cs,Can_execute_existing_Script_Blocks_in_Code_Statements_in_Code_Syntax_only_LF,The following statement contains a magic number: Assert.That(context.RenderCode(code.Trim()'                       new Dictionary<string' object> {                          ["person"] = new Person { Name = "poco"' Age = 27 }'                      }).NormalizeNewLines()'                   Is.EqualTo("Person \npoco is 27 years old"));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptDelegateTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptDelegateTests.cs,Can_use_function_block_to_create_delegate_with_multiple_args_and_invoke_it,The following statement contains a magic number: Assert.That(result' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptDelegateTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptDelegateTests.cs,Can_use_function_block_to_create_delegate_with_multiple_args_and_invoke_it,The following statement contains a magic number: Assert.That(result' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptDelegateTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptDelegateTests.cs,Can_use_function_block_to_create_delegate_with_multiple_args_and_invoke_it_LISP,The following statement contains a magic number: Assert.That(result' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptDelegateTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptDelegateTests.cs,Can_use_function_block_to_create_delegate_with_multiple_args_and_invoke_it_LISP,The following statement contains a magic number: Assert.That(result' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptDelegateTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptDelegateTests.cs,Can_use_function_block_to_create_delegate_with_multiple_args_and_invoke_it_LISP,The following statement contains a magic number: Assert.That(result' Is.EqualTo(55));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptDelegateTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptDelegateTests.cs,Does_not_Exceed_MaxStackDepth,The following statement contains a magic number: var result = context.Evaluate<int>(template(10));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptDelegateTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptDelegateTests.cs,Does_not_Exceed_MaxStackDepth,The following statement contains a magic number: Assert.That(result' Is.EqualTo(55));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptDelegateTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptDelegateTests.cs,Does_not_Exceed_MaxStackDepth,The following statement contains a magic number: Assert.That(context.MaxStackDepth' Is.EqualTo(25));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptDelegateTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptDelegateTests.cs,Does_not_Exceed_MaxStackDepth,The following statement contains a magic number: Assert.That(result' Is.EqualTo(46368));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptHtmlFilterTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptHtmlFilterTests.cs,Can_render_simple_table,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["rockstars"] = new List<Dictionary<string'object>>                      {                          new Dictionary<string' object>{ {"FirstName"' "Kurt" }' { "Age"' 27 } }'                          new Dictionary<string' object>{ {"FirstName"' "Jimi" }' { "Age"' 27 } }'                      }                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptHtmlFilterTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptHtmlFilterTests.cs,Can_render_simple_table,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["rockstars"] = new List<Dictionary<string'object>>                      {                          new Dictionary<string' object>{ {"FirstName"' "Kurt" }' { "Age"' 27 } }'                          new Dictionary<string' object>{ {"FirstName"' "Jimi" }' { "Age"' 27 } }'                      }                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptHtmlFilterTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptHtmlFilterTests.cs,Can_render_complex_object_graph_with_htmldump,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["customers"] = QueryData.Customers'                      ["htmlOptions"] = new Dictionary<string' object>                      {                          { "className"' "table" }'                          { "childClass"' "table-striped" }'                          { "childDepth"' 3 }'                      }                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,CreateContext,The following statement contains a magic number: var context = new ScriptContext {                  ScriptLanguages = {ScriptLisp.Language}'                  Args = {                      ["nums3"] = new[] {0' 1' 2}'                      ["nums10"] = new[] {0' 1' 2' 3' 4' 5' 6' 7' 8' 9'}'                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,CreateContext,The following statement contains a magic number: var context = new ScriptContext {                  ScriptLanguages = {ScriptLisp.Language}'                  Args = {                      ["nums3"] = new[] {0' 1' 2}'                      ["nums10"] = new[] {0' 1' 2' 3' 4' 5' 6' 7' 8' 9'}'                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,CreateContext,The following statement contains a magic number: var context = new ScriptContext {                  ScriptLanguages = {ScriptLisp.Language}'                  Args = {                      ["nums3"] = new[] {0' 1' 2}'                      ["nums10"] = new[] {0' 1' 2' 3' 4' 5' 6' 7' 8' 9'}'                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,CreateContext,The following statement contains a magic number: var context = new ScriptContext {                  ScriptLanguages = {ScriptLisp.Language}'                  Args = {                      ["nums3"] = new[] {0' 1' 2}'                      ["nums10"] = new[] {0' 1' 2' 3' 4' 5' 6' 7' 8' 9'}'                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,CreateContext,The following statement contains a magic number: var context = new ScriptContext {                  ScriptLanguages = {ScriptLisp.Language}'                  Args = {                      ["nums3"] = new[] {0' 1' 2}'                      ["nums10"] = new[] {0' 1' 2' 3' 4' 5' 6' 7' 8' 9'}'                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,CreateContext,The following statement contains a magic number: var context = new ScriptContext {                  ScriptLanguages = {ScriptLisp.Language}'                  Args = {                      ["nums3"] = new[] {0' 1' 2}'                      ["nums10"] = new[] {0' 1' 2' 3' 4' 5' 6' 7' 8' 9'}'                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,CreateContext,The following statement contains a magic number: var context = new ScriptContext {                  ScriptLanguages = {ScriptLisp.Language}'                  Args = {                      ["nums3"] = new[] {0' 1' 2}'                      ["nums10"] = new[] {0' 1' 2' 3' 4' 5' 6' 7' 8' 9'}'                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,CreateContext,The following statement contains a magic number: var context = new ScriptContext {                  ScriptLanguages = {ScriptLisp.Language}'                  Args = {                      ["nums3"] = new[] {0' 1' 2}'                      ["nums10"] = new[] {0' 1' 2' 3' 4' 5' 6' 7' 8' 9'}'                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,CreateContext,The following statement contains a magic number: var context = new ScriptContext {                  ScriptLanguages = {ScriptLisp.Language}'                  Args = {                      ["nums3"] = new[] {0' 1' 2}'                      ["nums10"] = new[] {0' 1' 2' 3' 4' 5' 6' 7' 8' 9'}'                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_fn_shorthand,The following statement contains a magic number: Assert.That(eval(@"(#(1+ %) 2)")' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_fn_shorthand,The following statement contains a magic number: Assert.That(eval(@"(#(+ %1 %2) 2 3)")' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_mapcan,The following statement contains a magic number: Assert.That(eval(@"(mapcan (lambda (x) (and (number? x) (list x))) '(a 1 b c 3 4 d 5))")'                  Is.EqualTo(new[] {1' 3' 4' 5}));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_mapcan,The following statement contains a magic number: Assert.That(eval(@"(mapcan (lambda (x) (and (number? x) (list x))) '(a 1 b c 3 4 d 5))")'                  Is.EqualTo(new[] {1' 3' 4' 5}));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_mapcan,The following statement contains a magic number: Assert.That(eval(@"(mapcan (lambda (x) (and (number? x) (list x))) '(a 1 b c 3 4 d 5))")'                  Is.EqualTo(new[] {1' 3' 4' 5}));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_range,The following statement contains a magic number: Assert.That(eval(@"(range 5)")' Is.EqualTo(new[] {0' 1' 2' 3' 4}));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_range,The following statement contains a magic number: Assert.That(eval(@"(range 5)")' Is.EqualTo(new[] {0' 1' 2' 3' 4}));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_range,The following statement contains a magic number: Assert.That(eval(@"(range 5)")' Is.EqualTo(new[] {0' 1' 2' 3' 4}));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_range,The following statement contains a magic number: Assert.That(eval(@"(range 10 15)")' Is.EqualTo(new[] {10' 11' 12' 13' 14}));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_range,The following statement contains a magic number: Assert.That(eval(@"(range 10 15)")' Is.EqualTo(new[] {10' 11' 12' 13' 14}));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_range,The following statement contains a magic number: Assert.That(eval(@"(range 10 15)")' Is.EqualTo(new[] {10' 11' 12' 13' 14}));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_range,The following statement contains a magic number: Assert.That(eval(@"(range 10 15)")' Is.EqualTo(new[] {10' 11' 12' 13' 14}));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_range,The following statement contains a magic number: Assert.That(eval(@"(range 10 15)")' Is.EqualTo(new[] {10' 11' 12' 13' 14}));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_filter,The following statement contains a magic number: Assert.That(eval(@"(filter #(<= % 3) [5 4 1 3 9 8 6 7 2 0])")' Is.EqualTo(new[] { 1' 3' 2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_filter,The following statement contains a magic number: Assert.That(eval(@"(filter #(<= % 3) [5 4 1 3 9 8 6 7 2 0])")' Is.EqualTo(new[] { 1' 3' 2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_filter,The following statement contains a magic number: Assert.That(eval(@"(filter #(<= % 3) [-5 -4 -1 -3 -9 -8 -6 -7 -2 -0])")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_filter,The following statement contains a magic number: Assert.That(eval(@"(filter #(<= % 3) [-5 -4 -1 -3 -9 -8 -6 -7 -2 -0])")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_filter,The following statement contains a magic number: Assert.That(eval(@"(filter #(<= % 3) [-5 -4 -1 -3 -9 -8 -6 -7 -2 -0])")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_filter,The following statement contains a magic number: Assert.That(eval(@"(filter #(<= % 3) [-5 -4 -1 -3 -9 -8 -6 -7 -2 -0])")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_filter,The following statement contains a magic number: Assert.That(eval(@"(filter #(<= % 3) [-5 -4 -1 -3 -9 -8 -6 -7 -2 -0])")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_filter,The following statement contains a magic number: Assert.That(eval(@"(filter #(<= % 3) [-5 -4 -1 -3 -9 -8 -6 -7 -2 -0])")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_filter,The following statement contains a magic number: Assert.That(eval(@"(filter #(<= % 3) [-5 -4 -1 -3 -9 -8 -6 -7 -2 -0])")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_filter,The following statement contains a magic number: Assert.That(eval(@"(filter #(<= % 3) [-5 -4 -1 -3 -9 -8 -6 -7 -2 -0])")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_filter,The following statement contains a magic number: Assert.That(eval(@"(filter #(<= % 3) (to-cons (map #(- %) [5 4 1 3 9 8 6 7 2 0])))")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_filter,The following statement contains a magic number: Assert.That(eval(@"(filter #(<= % 3) (to-cons (map #(- %) [5 4 1 3 9 8 6 7 2 0])))")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_filter,The following statement contains a magic number: Assert.That(eval(@"(filter #(<= % 3) (to-cons (map #(- %) [5 4 1 3 9 8 6 7 2 0])))")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_filter,The following statement contains a magic number: Assert.That(eval(@"(filter #(<= % 3) (to-cons (map #(- %) [5 4 1 3 9 8 6 7 2 0])))")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_filter,The following statement contains a magic number: Assert.That(eval(@"(filter #(<= % 3) (to-cons (map #(- %) [5 4 1 3 9 8 6 7 2 0])))")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_filter,The following statement contains a magic number: Assert.That(eval(@"(filter #(<= % 3) (to-cons (map #(- %) [5 4 1 3 9 8 6 7 2 0])))")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_filter,The following statement contains a magic number: Assert.That(eval(@"(filter #(<= % 3) (to-cons (map #(- %) [5 4 1 3 9 8 6 7 2 0])))")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_filter,The following statement contains a magic number: Assert.That(eval(@"(filter #(<= % 3) (to-cons (map #(- %) [5 4 1 3 9 8 6 7 2 0])))")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_filter,The following statement contains a magic number: Assert.That(eval(@"(filter   even? (range 10))")' Is.EqualTo(new[] {0' 2' 4' 6' 8}));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_filter,The following statement contains a magic number: Assert.That(eval(@"(filter   even? (range 10))")' Is.EqualTo(new[] {0' 2' 4' 6' 8}));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_filter,The following statement contains a magic number: Assert.That(eval(@"(filter   even? (range 10))")' Is.EqualTo(new[] {0' 2' 4' 6' 8}));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_filter,The following statement contains a magic number: Assert.That(eval(@"(filter   even? (range 10))")' Is.EqualTo(new[] {0' 2' 4' 6' 8}));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_where,The following statement contains a magic number: Assert.That(eval(@"(where #(<= % 3) [5 4 1 3 9 8 6 7 2 0])")' Is.EqualTo(new[] { 1' 3' 2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_where,The following statement contains a magic number: Assert.That(eval(@"(where #(<= % 3) [5 4 1 3 9 8 6 7 2 0])")' Is.EqualTo(new[] { 1' 3' 2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_where,The following statement contains a magic number: Assert.That(eval(@"(where #(<= % 3) [-5 -4 -1 -3 -9 -8 -6 -7 -2 -0])")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_where,The following statement contains a magic number: Assert.That(eval(@"(where #(<= % 3) [-5 -4 -1 -3 -9 -8 -6 -7 -2 -0])")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_where,The following statement contains a magic number: Assert.That(eval(@"(where #(<= % 3) [-5 -4 -1 -3 -9 -8 -6 -7 -2 -0])")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_where,The following statement contains a magic number: Assert.That(eval(@"(where #(<= % 3) [-5 -4 -1 -3 -9 -8 -6 -7 -2 -0])")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_where,The following statement contains a magic number: Assert.That(eval(@"(where #(<= % 3) [-5 -4 -1 -3 -9 -8 -6 -7 -2 -0])")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_where,The following statement contains a magic number: Assert.That(eval(@"(where #(<= % 3) [-5 -4 -1 -3 -9 -8 -6 -7 -2 -0])")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_where,The following statement contains a magic number: Assert.That(eval(@"(where #(<= % 3) [-5 -4 -1 -3 -9 -8 -6 -7 -2 -0])")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_where,The following statement contains a magic number: Assert.That(eval(@"(where #(<= % 3) [-5 -4 -1 -3 -9 -8 -6 -7 -2 -0])")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_where,The following statement contains a magic number: Assert.That(eval(@"(where #(<= % 3) (to-cons (map #(- %) [5 4 1 3 9 8 6 7 2 0])))")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_where,The following statement contains a magic number: Assert.That(eval(@"(where #(<= % 3) (to-cons (map #(- %) [5 4 1 3 9 8 6 7 2 0])))")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_where,The following statement contains a magic number: Assert.That(eval(@"(where #(<= % 3) (to-cons (map #(- %) [5 4 1 3 9 8 6 7 2 0])))")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_where,The following statement contains a magic number: Assert.That(eval(@"(where #(<= % 3) (to-cons (map #(- %) [5 4 1 3 9 8 6 7 2 0])))")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_where,The following statement contains a magic number: Assert.That(eval(@"(where #(<= % 3) (to-cons (map #(- %) [5 4 1 3 9 8 6 7 2 0])))")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_where,The following statement contains a magic number: Assert.That(eval(@"(where #(<= % 3) (to-cons (map #(- %) [5 4 1 3 9 8 6 7 2 0])))")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_where,The following statement contains a magic number: Assert.That(eval(@"(where #(<= % 3) (to-cons (map #(- %) [5 4 1 3 9 8 6 7 2 0])))")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_where,The following statement contains a magic number: Assert.That(eval(@"(where #(<= % 3) (to-cons (map #(- %) [5 4 1 3 9 8 6 7 2 0])))")' Is.EqualTo(new[] { -5' -4' -1' -3' -9' -8' -6' -7' -2' 0 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_where,The following statement contains a magic number: Assert.That(eval(@"(where   even? (range 10))")' Is.EqualTo(new[] {0' 2' 4' 6' 8}));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_where,The following statement contains a magic number: Assert.That(eval(@"(where   even? (range 10))")' Is.EqualTo(new[] {0' 2' 4' 6' 8}));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_where,The following statement contains a magic number: Assert.That(eval(@"(where   even? (range 10))")' Is.EqualTo(new[] {0' 2' 4' 6' 8}));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_where,The following statement contains a magic number: Assert.That(eval(@"(where   even? (range 10))")' Is.EqualTo(new[] {0' 2' 4' 6' 8}));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_add,The following statement contains a magic number: Assert.That(eval(@"(+ 1 2 3 4)")' Is.EqualTo(10));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_multiply,The following statement contains a magic number: Assert.That(eval(@"(* 1 2 3 4)")' Is.EqualTo(24));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_subtract_minus,The following statement contains a magic number: Assert.That(eval(@"(- 10)")' Is.EqualTo(-10));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_subtract_minus,The following statement contains a magic number: Assert.That(eval(@"-10")' Is.EqualTo(-10));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_divide,The following statement contains a magic number: Assert.That(eval(@"(/ 6 2)")' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_divide,The following statement contains a magic number: Assert.That(eval(@"(/ 5 2)")' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_divide,The following statement contains a magic number: Assert.That(eval(@"(/ 5.0 2)")' Is.EqualTo(2.5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_divide,The following statement contains a magic number: Assert.That(eval(@"(/ 5 2.0)")' Is.EqualTo(2.5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_divide,The following statement contains a magic number: Assert.That(eval(@"(/ 5.0 2.0)")' Is.EqualTo(2.5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_divide,The following statement contains a magic number: Assert.That(eval(@"(/ 4.0)")' Is.EqualTo(0.25));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_divide,The following statement contains a magic number: Assert.That(eval(@"(/ 25 3 2)")' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_divide,The following statement contains a magic number: Assert.That(eval(@"(/ -17 6)")' Is.EqualTo(-2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_reduce,The following statement contains a magic number: Assert.That(eval(@"(reduce + [1 2 3])")' Is.EqualTo(6));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_reduce,The following statement contains a magic number: Assert.That(eval(@"(reduce + (to-list [1 2 3]))")' Is.EqualTo(6));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_reduce,The following statement contains a magic number: Assert.That(eval(@"(reduce * [2 3 4])")' Is.EqualTo(24));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_reduce,The following statement contains a magic number: Assert.That(eval(@"(reduce * (to-list [2 3 4]))")' Is.EqualTo(24));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_reduce,The following statement contains a magic number: Assert.That(eval(@"(reduce - [10 1 2 3])")' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_reduce,The following statement contains a magic number: Assert.That(eval(@"(reduce - (to-list [10 1 2 3]))")' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_reduce,The following statement contains a magic number: Assert.That(eval(@"(reduce / [10 1 2])")' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_reduce,The following statement contains a magic number: Assert.That(eval(@"(reduce / (to-list [10 1 2]))")' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_map_literals,The following statement contains a magic number: var expected = new Dictionary<string' object> {                  {"a"' 1}'                  {"b"' 2}'                  {"c"' 3}'              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_map_literals,The following statement contains a magic number: var expected = new Dictionary<string' object> {                  {"a"' 1}'                  {"b"' 2}'                  {"c"' 3}'              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_map_literals,The following statement contains a magic number: Assert.That(eval("{ :a 1  :b { :b1 10 :b2 20 }  :c 3 }")' Is.EqualTo(new Dictionary<string' object> {                  {"a"' 1}'                  {"b"' new Dictionary<string' object> {                      {"b1"' 10}'                      {"b2"' 20}'                  }}'                  {"c"' 3}'              }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_map_literals,The following statement contains a magic number: Assert.That(eval("{ :a 1  :b { :b1 10 :b2 20 }  :c 3 }")' Is.EqualTo(new Dictionary<string' object> {                  {"a"' 1}'                  {"b"' new Dictionary<string' object> {                      {"b1"' 10}'                      {"b2"' 20}'                  }}'                  {"c"' 3}'              }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_map_literals,The following statement contains a magic number: Assert.That(eval("{ :a 1  :b { :b1 10 :b2 20 }  :c 3 }")' Is.EqualTo(new Dictionary<string' object> {                  {"a"' 1}'                  {"b"' new Dictionary<string' object> {                      {"b1"' 10}'                      {"b2"' 20}'                  }}'                  {"c"' 3}'              }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,Lisp_data_list,The following statement contains a magic number: Assert.That(eval(@"(sum [1 2 3 4])")' Is.EqualTo(10));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,Lisp_data_list,The following statement contains a magic number: Assert.That(eval(@"(sum [1' 2' 3' 4])")' Is.EqualTo(10));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_butlast,The following statement contains a magic number: Assert.That(eval(@"(butlast [1 2 3 4])")' Is.EqualTo(new[]{ 1' 2' 3 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_butlast,The following statement contains a magic number: Assert.That(eval(@"(butlast [1 2 3 4])")' Is.EqualTo(new[]{ 1' 2' 3 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_butlast,The following statement contains a magic number: Assert.That(eval(@"(butlast (to-list [1 2 3 4]))")' Is.EqualTo(new[]{ 1' 2' 3 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_butlast,The following statement contains a magic number: Assert.That(eval(@"(butlast (to-list [1 2 3 4]))")' Is.EqualTo(new[]{ 1' 2' 3 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_reverse,The following statement contains a magic number: Assert.That(eval(@"(reverse [1 2 3 4])")' Is.EqualTo(new[]{ 4' 3' 2' 1 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_reverse,The following statement contains a magic number: Assert.That(eval(@"(reverse [1 2 3 4])")' Is.EqualTo(new[]{ 4' 3' 2' 1 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_reverse,The following statement contains a magic number: Assert.That(eval(@"(reverse [1 2 3 4])")' Is.EqualTo(new[]{ 4' 3' 2' 1 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_reverse,The following statement contains a magic number: Assert.That(eval(@"(reverse (to-list [1 2 3 4]))")' Is.EqualTo(new[]{ 4' 3' 2' 1 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_reverse,The following statement contains a magic number: Assert.That(eval(@"(reverse (to-list [1 2 3 4]))")' Is.EqualTo(new[]{ 4' 3' 2' 1 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_reverse,The following statement contains a magic number: Assert.That(eval(@"(reverse (to-list [1 2 3 4]))")' Is.EqualTo(new[]{ 4' 3' 2' 1 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_first,The following statement contains a magic number: Assert.That(eval(@"(first [10 20 30])")' Is.EqualTo(10));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_first,The following statement contains a magic number: Assert.That(eval(@"(first (to-list [10 20 30]))")' Is.EqualTo(10));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_first,The following statement contains a magic number: Assert.That(eval(@"(1st [10 20 30])")' Is.EqualTo(10));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_second,The following statement contains a magic number: Assert.That(eval(@"(second [10 20 30])")' Is.EqualTo(20));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_second,The following statement contains a magic number: Assert.That(eval(@"(second (to-list [10 20 30]))")' Is.EqualTo(20));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_second,The following statement contains a magic number: Assert.That(eval(@"(2nd [10 20 30])")' Is.EqualTo(20));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_third,The following statement contains a magic number: Assert.That(eval(@"(third [10 20 30])")' Is.EqualTo(30));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_third,The following statement contains a magic number: Assert.That(eval(@"(third (to-list [10 20 30]))")' Is.EqualTo(30));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_third,The following statement contains a magic number: Assert.That(eval(@"(3rd [10 20 30])")' Is.EqualTo(30));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_rest,The following statement contains a magic number: Assert.That(eval(@"(rest [10 20 30])")' Is.EqualTo(new[]{ 20' 30 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_rest,The following statement contains a magic number: Assert.That(eval(@"(rest [10 20 30])")' Is.EqualTo(new[]{ 20' 30 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_rest,The following statement contains a magic number: Assert.That(eval(@"(rest (to-list [10 20 30]))")' Is.EqualTo(new[]{ 20' 30 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_rest,The following statement contains a magic number: Assert.That(eval(@"(rest (to-list [10 20 30]))")' Is.EqualTo(new[]{ 20' 30 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_rest,The following statement contains a magic number: Assert.That(eval(@"(next [10 20 30])")' Is.EqualTo(new[]{ 20' 30 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_rest,The following statement contains a magic number: Assert.That(eval(@"(next [10 20 30])")' Is.EqualTo(new[]{ 20' 30 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_flatten,The following statement contains a magic number: Assert.That(eval(@"(flatten [1 2 3])")' Is.EqualTo(new[]{ 1' 2' 3 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_flatten,The following statement contains a magic number: Assert.That(eval(@"(flatten [1 2 3])")' Is.EqualTo(new[]{ 1' 2' 3 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_flatten,The following statement contains a magic number: Assert.That(eval(@"(flatten (to-list [1 2 3]))")' Is.EqualTo(new[]{ 1' 2' 3 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_flatten,The following statement contains a magic number: Assert.That(eval(@"(flatten (to-list [1 2 3]))")' Is.EqualTo(new[]{ 1' 2' 3 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_flatten,The following statement contains a magic number: Assert.That(eval(@"(flatten [1 2 [3 4] 5 [6 [7 [8 9]]]])")' Is.EqualTo(new[]{ 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_flatten,The following statement contains a magic number: Assert.That(eval(@"(flatten [1 2 [3 4] 5 [6 [7 [8 9]]]])")' Is.EqualTo(new[]{ 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_flatten,The following statement contains a magic number: Assert.That(eval(@"(flatten [1 2 [3 4] 5 [6 [7 [8 9]]]])")' Is.EqualTo(new[]{ 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_flatten,The following statement contains a magic number: Assert.That(eval(@"(flatten [1 2 [3 4] 5 [6 [7 [8 9]]]])")' Is.EqualTo(new[]{ 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_flatten,The following statement contains a magic number: Assert.That(eval(@"(flatten [1 2 [3 4] 5 [6 [7 [8 9]]]])")' Is.EqualTo(new[]{ 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_flatten,The following statement contains a magic number: Assert.That(eval(@"(flatten [1 2 [3 4] 5 [6 [7 [8 9]]]])")' Is.EqualTo(new[]{ 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_flatten,The following statement contains a magic number: Assert.That(eval(@"(flatten [1 2 [3 4] 5 [6 [7 [8 9]]]])")' Is.EqualTo(new[]{ 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_flatten,The following statement contains a magic number: Assert.That(eval(@"(flatten [1 2 [3 4] 5 [6 [7 [8 9]]]])")' Is.EqualTo(new[]{ 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_flatten,The following statement contains a magic number: Assert.That(eval(@"(flatten (to-list [1 2 [3 4] 5 [6 [7 [8 9]]]]))")' Is.EqualTo(new[]{ 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_flatten,The following statement contains a magic number: Assert.That(eval(@"(flatten (to-list [1 2 [3 4] 5 [6 [7 [8 9]]]]))")' Is.EqualTo(new[]{ 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_flatten,The following statement contains a magic number: Assert.That(eval(@"(flatten (to-list [1 2 [3 4] 5 [6 [7 [8 9]]]]))")' Is.EqualTo(new[]{ 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_flatten,The following statement contains a magic number: Assert.That(eval(@"(flatten (to-list [1 2 [3 4] 5 [6 [7 [8 9]]]]))")' Is.EqualTo(new[]{ 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_flatten,The following statement contains a magic number: Assert.That(eval(@"(flatten (to-list [1 2 [3 4] 5 [6 [7 [8 9]]]]))")' Is.EqualTo(new[]{ 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_flatten,The following statement contains a magic number: Assert.That(eval(@"(flatten (to-list [1 2 [3 4] 5 [6 [7 [8 9]]]]))")' Is.EqualTo(new[]{ 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_flatten,The following statement contains a magic number: Assert.That(eval(@"(flatten (to-list [1 2 [3 4] 5 [6 [7 [8 9]]]]))")' Is.EqualTo(new[]{ 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_flatten,The following statement contains a magic number: Assert.That(eval(@"(flatten (to-list [1 2 [3 4] 5 [6 [7 [8 9]]]]))")' Is.EqualTo(new[]{ 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_min,The following statement contains a magic number: Assert.That(eval(@"(min 10 20)")' Is.EqualTo(10));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_min,The following statement contains a magic number: Assert.That(eval(@"(min 30 10 20)")' Is.EqualTo(10));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_min,The following statement contains a magic number: Assert.That(eval(@"(apply min [5 4 3 9 8 6 7 2])")' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_min,The following statement contains a magic number: Assert.That(eval(@"(apply min (to-list [5 4 3 9 8 6 7 2]))")' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_max,The following statement contains a magic number: Assert.That(eval(@"(max 10 20)")' Is.EqualTo(20));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_max,The following statement contains a magic number: Assert.That(eval(@"(max 30 10 20)")' Is.EqualTo(30));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_max,The following statement contains a magic number: Assert.That(eval(@"(apply max [5 4 3 9 8 6 7 2])")' Is.EqualTo(9));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LISP_max,The following statement contains a magic number: Assert.That(eval(@"(apply max (to-list [5 4 3 9 8 6 7 2]))")' Is.EqualTo(9));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,Can_access_db,The following statement contains a magic number: db.InsertAll(new [] {                      new Person("A"' 1)'                       new Person("B"' 2)'                   });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,Can_load_scripts,The following statement contains a magic number: Assert.That(result' Is.EqualTo(9));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,Can_load_scripts,The following statement contains a magic number: Assert.That(result' Is.EqualTo(9));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,Can_load_scripts,The following statement contains a magic number: Assert.That(result' Is.EqualTo(20));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,Can_load_scripts,The following statement contains a magic number: Assert.That(result' Is.EqualTo(20));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LoadLispTests,The following statement contains a magic number: Assert.That(result' Is.EqualTo(9));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LoadLispTests,The following statement contains a magic number: Assert.That(result' Is.EqualTo(20));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LoadLispTests,The following statement contains a magic number: Assert.That(result' Is.EqualTo(9));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LoadLispTests,The following statement contains a magic number: Assert.That(result' Is.EqualTo(9));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispApiTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispApiTests.cs,LoadLispTests,The following statement contains a magic number: Assert.That(result' Is.EqualTo(20));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_eval_fib_lisp,The following statement contains a magic number: Assert.That((int)x' Is.EqualTo(987));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_eval_lisp_in_lisp,The following statement contains a magic number: Assert.That((int)x' Is.EqualTo(89));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_min_max_int_long_double_values,The following statement contains a magic number: Assert.That((int)lispCtx.Eval(Lisp.Parse("(max 1 2)"))' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_min_max_int_long_double_values,The following statement contains a magic number: Assert.That((double)lispCtx.Eval(Lisp.Parse("(max 1.0 2.0)"))' Is.EqualTo(2.0));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_min_max_int_long_double_values,The following statement contains a magic number: Assert.That((long)lispCtx.Eval(Lisp.Parse($"(min {int.MaxValue + 1L} {int.MaxValue + 2L})"))' Is.EqualTo(int.MaxValue + 1L));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_min_max_int_long_double_values,The following statement contains a magic number: Assert.That((long)lispCtx.Eval(Lisp.Parse($"(max {int.MaxValue + 1L} {int.MaxValue + 2L})"))' Is.EqualTo(int.MaxValue + 2L));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_min_max_int_long_double_values,The following statement contains a magic number: Assert.That((long)lispCtx.Eval(Lisp.Parse($"(max {int.MaxValue + 1L} {int.MaxValue + 2L})"))' Is.EqualTo(int.MaxValue + 2L));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_convert_IEnumerable_to_and_from_cons,The following statement contains a magic number: var context = LispScriptContext(new ObjectDictionary {                  ["numArray"] = new[] { 1' 2' 3 }'                  ["numList"] = new[] { 1' 2' 3 }.ToList()'                  ["numSet"] = new[] { 1' 2' 3 }.ToHashSet()'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_convert_IEnumerable_to_and_from_cons,The following statement contains a magic number: var context = LispScriptContext(new ObjectDictionary {                  ["numArray"] = new[] { 1' 2' 3 }'                  ["numList"] = new[] { 1' 2' 3 }.ToList()'                  ["numSet"] = new[] { 1' 2' 3 }.ToHashSet()'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_convert_IEnumerable_to_and_from_cons,The following statement contains a magic number: var context = LispScriptContext(new ObjectDictionary {                  ["numArray"] = new[] { 1' 2' 3 }'                  ["numList"] = new[] { 1' 2' 3 }.ToList()'                  ["numSet"] = new[] { 1' 2' 3 }.ToHashSet()'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_convert_IEnumerable_to_and_from_cons,The following statement contains a magic number: var context = LispScriptContext(new ObjectDictionary {                  ["numArray"] = new[] { 1' 2' 3 }'                  ["numList"] = new[] { 1' 2' 3 }.ToList()'                  ["numSet"] = new[] { 1' 2' 3 }.ToHashSet()'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_convert_IEnumerable_to_and_from_cons,The following statement contains a magic number: var context = LispScriptContext(new ObjectDictionary {                  ["numArray"] = new[] { 1' 2' 3 }'                  ["numList"] = new[] { 1' 2' 3 }.ToList()'                  ["numSet"] = new[] { 1' 2' 3 }.ToHashSet()'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_convert_IEnumerable_to_and_from_cons,The following statement contains a magic number: var context = LispScriptContext(new ObjectDictionary {                  ["numArray"] = new[] { 1' 2' 3 }'                  ["numList"] = new[] { 1' 2' 3 }.ToList()'                  ["numSet"] = new[] { 1' 2' 3 }.ToHashSet()'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_create_type_with_constructor_arguments_LISP,The following statement contains a magic number: Assert.That(eval("(.GetTotal (Ints. 1 2))")' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_create_type_with_constructor_arguments_LISP,The following statement contains a magic number: Assert.That(eval("(.GetTotal (/set (Ints. 1 2) { :C 3 :D 4 }))")' Is.EqualTo(10));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_create_type_with_constructor_arguments_LISP,The following statement contains a magic number: Assert.That(eval("(.GetTotal (set (Ints. 1 2) { :C 3 :D 4 }))")' Is.EqualTo(10));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_map_on_IEnumerables,The following statement contains a magic number: var context = LispScriptContext(new ObjectDictionary {                  ["numArray"] = new[] { 1' 2' 3 }'                  ["numList"] = new[] { 1' 2' 3 }.ToList()'                  ["numSet"] = new[] { 1' 2' 3 }.ToHashSet()'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_map_on_IEnumerables,The following statement contains a magic number: var context = LispScriptContext(new ObjectDictionary {                  ["numArray"] = new[] { 1' 2' 3 }'                  ["numList"] = new[] { 1' 2' 3 }.ToList()'                  ["numSet"] = new[] { 1' 2' 3 }.ToHashSet()'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_map_on_IEnumerables,The following statement contains a magic number: var context = LispScriptContext(new ObjectDictionary {                  ["numArray"] = new[] { 1' 2' 3 }'                  ["numList"] = new[] { 1' 2' 3 }.ToList()'                  ["numSet"] = new[] { 1' 2' 3 }.ToHashSet()'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_map_on_IEnumerables,The following statement contains a magic number: var context = LispScriptContext(new ObjectDictionary {                  ["numArray"] = new[] { 1' 2' 3 }'                  ["numList"] = new[] { 1' 2' 3 }.ToList()'                  ["numSet"] = new[] { 1' 2' 3 }.ToHashSet()'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_map_on_IEnumerables,The following statement contains a magic number: var context = LispScriptContext(new ObjectDictionary {                  ["numArray"] = new[] { 1' 2' 3 }'                  ["numList"] = new[] { 1' 2' 3 }.ToList()'                  ["numSet"] = new[] { 1' 2' 3 }.ToHashSet()'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_map_on_IEnumerables,The following statement contains a magic number: var context = LispScriptContext(new ObjectDictionary {                  ["numArray"] = new[] { 1' 2' 3 }'                  ["numList"] = new[] { 1' 2' 3 }.ToList()'                  ["numSet"] = new[] { 1' 2' 3 }.ToHashSet()'              });
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptLispTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptLispTests.cs,Can_import_into_global_symbols,The following statement contains a magic number: Assert.That(lispCtx.Eval(SExprs)' Is.EqualTo(89));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptMethodsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptMethodsTests.cs,Can_Scan_FilterExamples_TemplateFilter,The following statement contains a magic number: Assert.That(context.ScriptMethods.Count' Is.GreaterThanOrEqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptMethodsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptMethodsTests.cs,Does_scan_AppHost_Service_Assemblies_in_SharpPagesFeature,The following statement contains a magic number: Assert.That(context.ScriptMethods.Count' Is.GreaterThanOrEqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptMethodsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptMethodsTests.cs,Can_use_nested_addInt_filter_with_page_and_result_args,The following statement contains a magic number: context.Args["contextArg"] = 10;
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptMethodsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptMethodsTests.cs,Caches_are_kept_isolated_in_each_Context_Filter_instance,The following statement contains a magic number: Assert.That(context.ScriptMethods.First(x => x is DefaultScripts).InvokerCache.Count' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptMethodsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptMethodsTests.cs,Caches_are_kept_isolated_in_each_Context_Filter_instance,The following statement contains a magic number: Assert.That(tempContext.ScriptMethods.First(x => x is DefaultScripts).InvokerCache.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptMethodsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptMethodsTests.cs,Caches_are_kept_isolated_in_each_Context_Filter_instance,The following statement contains a magic number: Assert.That(context.ScriptMethods.First(x => x is DefaultScripts).InvokerCache.Count' Is.EqualTo(4));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,Person,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptTestUtils.cs,GetHashCode,The following statement contains a magic number: return ((Name != null ? Name.GetHashCode() : 0) * 397) ^ Age;
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptUseCaseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptUseCaseTests.cs,Can_convert_dbScript_Results_to_Customer_Poco,The following statement contains a magic number: Assert.That(results.Length' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ScriptUseCaseTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptUseCaseTests.cs,Can_use_GetTableNames_with_textDump,The following statement contains a magic number: QueryData.Products.Take(3).Each(x => db.Insert(x));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,ServiceStackScriptTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ServiceStackScriptTests.cs,Can_call_customers_api_page_with_all_arguments,The following statement contains a magic number: var url = BaseUrl.CombineWith("api"' "customers")                  .AddQueryParam("country"' "UK")                  .AddQueryParam("city"' "London")                  .AddQueryParam("limit"' 10);
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageContextScriptMethodsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageContextScriptMethodsTests.cs,Does_replace_bindings,The following statement contains a magic number: var result = new PageResult(context.GetPage("bind-page"))              {                  Args =                  {                      ["title"] = "Page title"'                      ["pagePartial"] = "bind-partial"'                      ["pageTag"] = "h3"'                      ["items"] = new[] { 1' 2' 3 }'                  }              }.Result;
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageContextScriptMethodsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageContextScriptMethodsTests.cs,Does_replace_bindings,The following statement contains a magic number: var result = new PageResult(context.GetPage("bind-page"))              {                  Args =                  {                      ["title"] = "Page title"'                      ["pagePartial"] = "bind-partial"'                      ["pageTag"] = "h3"'                      ["items"] = new[] { 1' 2' 3 }'                  }              }.Result;
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageContextScriptMethodsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageContextScriptMethodsTests.cs,Can_repeat_templates_using_selectEach,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["letters"] = new[]{ "A"' "B"' "C" }'                      ["numbers"] = new[]{ 1' 2' 3 }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageContextScriptMethodsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageContextScriptMethodsTests.cs,Can_repeat_templates_using_selectEach,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["letters"] = new[]{ "A"' "B"' "C" }'                      ["numbers"] = new[]{ 1' 2' 3 }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageContextScriptMethodsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageContextScriptMethodsTests.cs,Can_repeat_templates_using_forEach_in_page_and_layouts,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["numbers"] = new[]{ 1' 2' 3 }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageContextScriptMethodsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageContextScriptMethodsTests.cs,Can_repeat_templates_using_forEach_in_page_and_layouts,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["numbers"] = new[]{ 1' 2' 3 }'                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,CreateModelBinding,The following statement contains a magic number: var model = new ModelBinding              {                  Int = 1'                  Prop = "The Prop"'                  Object = new NestedModelBinding                  {                      Int = 2'                      Prop = "Nested Prop"'                      Object = new ModelBinding                      {                          Int = 21'                          Prop = "Nested Nested Prop"'                      }'                      AltNested = new AltNested                      {                          Field = "Object AltNested Field"                      }                  }'                  Dictionary = new Dictionary<string' ModelBinding>                  {                      {                          "map-key"'                          new ModelBinding                          {                              Int = 3'                              Prop = "Dictionary Prop"'                              Object = new NestedModelBinding                              {                                  Int = 5'                                  Prop = "Nested Dictionary Prop"'                                  AltNested = new AltNested                                  {                                      Field = "Dictionary AltNested Field"                                  }                              }                          }                      }'                  }'                  List = new List<ModelBinding>                  {                      new ModelBinding                      {                          Int = 4'                          Prop = "List Prop"'                          Object = new NestedModelBinding {Int = 5' Prop = "Nested List Prop"}                      }                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,CreateModelBinding,The following statement contains a magic number: var model = new ModelBinding              {                  Int = 1'                  Prop = "The Prop"'                  Object = new NestedModelBinding                  {                      Int = 2'                      Prop = "Nested Prop"'                      Object = new ModelBinding                      {                          Int = 21'                          Prop = "Nested Nested Prop"'                      }'                      AltNested = new AltNested                      {                          Field = "Object AltNested Field"                      }                  }'                  Dictionary = new Dictionary<string' ModelBinding>                  {                      {                          "map-key"'                          new ModelBinding                          {                              Int = 3'                              Prop = "Dictionary Prop"'                              Object = new NestedModelBinding                              {                                  Int = 5'                                  Prop = "Nested Dictionary Prop"'                                  AltNested = new AltNested                                  {                                      Field = "Dictionary AltNested Field"                                  }                              }                          }                      }'                  }'                  List = new List<ModelBinding>                  {                      new ModelBinding                      {                          Int = 4'                          Prop = "List Prop"'                          Object = new NestedModelBinding {Int = 5' Prop = "Nested List Prop"}                      }                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,CreateModelBinding,The following statement contains a magic number: var model = new ModelBinding              {                  Int = 1'                  Prop = "The Prop"'                  Object = new NestedModelBinding                  {                      Int = 2'                      Prop = "Nested Prop"'                      Object = new ModelBinding                      {                          Int = 21'                          Prop = "Nested Nested Prop"'                      }'                      AltNested = new AltNested                      {                          Field = "Object AltNested Field"                      }                  }'                  Dictionary = new Dictionary<string' ModelBinding>                  {                      {                          "map-key"'                          new ModelBinding                          {                              Int = 3'                              Prop = "Dictionary Prop"'                              Object = new NestedModelBinding                              {                                  Int = 5'                                  Prop = "Nested Dictionary Prop"'                                  AltNested = new AltNested                                  {                                      Field = "Dictionary AltNested Field"                                  }                              }                          }                      }'                  }'                  List = new List<ModelBinding>                  {                      new ModelBinding                      {                          Int = 4'                          Prop = "List Prop"'                          Object = new NestedModelBinding {Int = 5' Prop = "Nested List Prop"}                      }                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,CreateModelBinding,The following statement contains a magic number: var model = new ModelBinding              {                  Int = 1'                  Prop = "The Prop"'                  Object = new NestedModelBinding                  {                      Int = 2'                      Prop = "Nested Prop"'                      Object = new ModelBinding                      {                          Int = 21'                          Prop = "Nested Nested Prop"'                      }'                      AltNested = new AltNested                      {                          Field = "Object AltNested Field"                      }                  }'                  Dictionary = new Dictionary<string' ModelBinding>                  {                      {                          "map-key"'                          new ModelBinding                          {                              Int = 3'                              Prop = "Dictionary Prop"'                              Object = new NestedModelBinding                              {                                  Int = 5'                                  Prop = "Nested Dictionary Prop"'                                  AltNested = new AltNested                                  {                                      Field = "Dictionary AltNested Field"                                  }                              }                          }                      }'                  }'                  List = new List<ModelBinding>                  {                      new ModelBinding                      {                          Int = 4'                          Prop = "List Prop"'                          Object = new NestedModelBinding {Int = 5' Prop = "Nested List Prop"}                      }                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,CreateModelBinding,The following statement contains a magic number: var model = new ModelBinding              {                  Int = 1'                  Prop = "The Prop"'                  Object = new NestedModelBinding                  {                      Int = 2'                      Prop = "Nested Prop"'                      Object = new ModelBinding                      {                          Int = 21'                          Prop = "Nested Nested Prop"'                      }'                      AltNested = new AltNested                      {                          Field = "Object AltNested Field"                      }                  }'                  Dictionary = new Dictionary<string' ModelBinding>                  {                      {                          "map-key"'                          new ModelBinding                          {                              Int = 3'                              Prop = "Dictionary Prop"'                              Object = new NestedModelBinding                              {                                  Int = 5'                                  Prop = "Nested Dictionary Prop"'                                  AltNested = new AltNested                                  {                                      Field = "Dictionary AltNested Field"                                  }                              }                          }                      }'                  }'                  List = new List<ModelBinding>                  {                      new ModelBinding                      {                          Int = 4'                          Prop = "List Prop"'                          Object = new NestedModelBinding {Int = 5' Prop = "Nested List Prop"}                      }                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,CreateModelBinding,The following statement contains a magic number: var model = new ModelBinding              {                  Int = 1'                  Prop = "The Prop"'                  Object = new NestedModelBinding                  {                      Int = 2'                      Prop = "Nested Prop"'                      Object = new ModelBinding                      {                          Int = 21'                          Prop = "Nested Nested Prop"'                      }'                      AltNested = new AltNested                      {                          Field = "Object AltNested Field"                      }                  }'                  Dictionary = new Dictionary<string' ModelBinding>                  {                      {                          "map-key"'                          new ModelBinding                          {                              Int = 3'                              Prop = "Dictionary Prop"'                              Object = new NestedModelBinding                              {                                  Int = 5'                                  Prop = "Nested Dictionary Prop"'                                  AltNested = new AltNested                                  {                                      Field = "Dictionary AltNested Field"                                  }                              }                          }                      }'                  }'                  List = new List<ModelBinding>                  {                      new ModelBinding                      {                          Int = 4'                          Prop = "List Prop"'                          Object = new NestedModelBinding {Int = 5' Prop = "Nested List Prop"}                      }                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Does_evaluate_variable_binding_expressions,The following statement contains a magic number: var pageResultArg = new NestedModelBinding              {                  Int = 2'                  Prop = "Nested Prop"'                  Object = new ModelBinding                  {                      Int = 21'                      Prop = "Nested Nested Prop"'                  }'                  AltNested = new AltNested                  {                      Field = "Object AltNested Field"                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Does_evaluate_variable_binding_expressions,The following statement contains a magic number: var pageResultArg = new NestedModelBinding              {                  Int = 2'                  Prop = "Nested Prop"'                  Object = new ModelBinding                  {                      Int = 21'                      Prop = "Nested Nested Prop"'                  }'                  AltNested = new AltNested                  {                      Field = "Object AltNested Field"                  }              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageRawTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageRawTests.cs,Can_use_whitespace_for_last_string_arg,The following statement contains a magic number: var context = new ScriptContext              {                  Args =                  {                      ["ten"] = 10                  }              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Can_parse_template_with_body_variable,The following statement contains a magic number: Assert.That(page.PageFragments.Length' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Can_parse_template_with_body_variable,The following statement contains a magic number: var strFragment3 = (PageStringFragment)page.PageFragments[2];
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Can_parse_template_with_body_variable,The following statement contains a magic number: var varFragment4 = (PageVariableFragment)page.PageFragments[3];
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Can_parse_template_with_body_variable,The following statement contains a magic number: var strFragment5 = (PageStringFragment)page.PageFragments[4];
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Does_limit_file_changes_checks_to_specified_time,The following statement contains a magic number: var context = new ScriptContext              {                  DebugMode = false'                  CheckForModifiedPagesAfter = TimeSpan.FromMilliseconds(100)              }.Init();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Does_limit_file_changes_checks_to_specified_time,The following statement contains a magic number: Thread.Sleep(300);
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Never_checks_for_changes_if_CheckForModifiedPagesAfter_is_null,The following statement contains a magic number: Thread.Sleep(150);
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Does_find_last_modified_file_in_page,The following statement contains a magic number: ((InMemoryVirtualFile)context.VirtualFiles.GetFile("page.html")).FileLastModified = new DateTime(2001' 01' 01);
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Does_find_last_modified_file_in_page,The following statement contains a magic number: ((InMemoryVirtualFile)context.VirtualFiles.GetFile("_layout.html")).FileLastModified = new DateTime(2001' 01' 02);
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Does_find_last_modified_file_in_page,The following statement contains a magic number: ((InMemoryVirtualFile)context.VirtualFiles.GetFile("_layout.html")).FileLastModified = new DateTime(2001' 01' 02);
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Does_find_last_modified_file_in_page,The following statement contains a magic number: ((InMemoryVirtualFile)context.VirtualFiles.GetFile("root-partial.html")).FileLastModified = new DateTime(2001' 01' 03);
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Does_find_last_modified_file_in_page,The following statement contains a magic number: ((InMemoryVirtualFile)context.VirtualFiles.GetFile("root-partial.html")).FileLastModified = new DateTime(2001' 01' 03);
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Does_find_last_modified_file_in_page,The following statement contains a magic number: ((InMemoryVirtualFile)context.VirtualFiles.GetFile("file.txt")).FileLastModified = new DateTime(2001' 01' 04);
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Does_find_last_modified_file_in_page,The following statement contains a magic number: ((InMemoryVirtualFile)context.VirtualFiles.GetFile("file.txt")).FileLastModified = new DateTime(2001' 01' 04);
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Does_find_last_modified_file_in_page,The following statement contains a magic number: ((InMemoryVirtualFile)context.VirtualFiles.GetFile("inner-partial.html")).FileLastModified = new DateTime(2001' 01' 05);
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Does_find_last_modified_file_in_page,The following statement contains a magic number: ((InMemoryVirtualFile)context.VirtualFiles.GetFile("inner-partial.html")).FileLastModified = new DateTime(2001' 01' 05);
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Does_find_last_modified_file_in_page,The following statement contains a magic number: ((InMemoryVirtualFile)context.VirtualFiles.GetFile("partial-file.txt")).FileLastModified = new DateTime(2001' 01' 06);
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Does_find_last_modified_file_in_page,The following statement contains a magic number: ((InMemoryVirtualFile)context.VirtualFiles.GetFile("partial-file.txt")).FileLastModified = new DateTime(2001' 01' 06);
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Does_find_last_modified_file_in_page,The following statement contains a magic number: ((InMemoryVirtualFile)context.VirtualFiles.GetFile("select-partial.html")).FileLastModified = new DateTime(2001' 01' 07);
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Does_find_last_modified_file_in_page,The following statement contains a magic number: ((InMemoryVirtualFile)context.VirtualFiles.GetFile("select-partial.html")).FileLastModified = new DateTime(2001' 01' 07);
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Does_find_last_modified_file_in_page,The following statement contains a magic number: ((InMemoryVirtualFile)context.VirtualFiles.GetFile("layout-partial.html")).FileLastModified = new DateTime(2001' 01' 08);
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Does_find_last_modified_file_in_page,The following statement contains a magic number: ((InMemoryVirtualFile)context.VirtualFiles.GetFile("layout-partial.html")).FileLastModified = new DateTime(2001' 01' 08);
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Does_find_last_modified_file_in_page,The following statement contains a magic number: ((InMemoryVirtualFile)context.VirtualFiles.GetFile("layout-file.txt")).FileLastModified = new DateTime(2001' 01' 09);
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Does_find_last_modified_file_in_page,The following statement contains a magic number: ((InMemoryVirtualFile)context.VirtualFiles.GetFile("layout-file.txt")).FileLastModified = new DateTime(2001' 01' 09);
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Does_find_last_modified_file_in_page,The following statement contains a magic number: Assert.That(lastModified' Is.EqualTo(new DateTime(2001' 01' 09)));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageTests.cs,Does_find_last_modified_file_in_page,The following statement contains a magic number: Assert.That(lastModified' Is.EqualTo(new DateTime(2001' 01' 09)));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_variable,The following statement contains a magic number: Assert.That(fragments.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_variable,The following statement contains a magic number: var strFragment3 = fragments[2] as PageStringFragment;
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_filter,The following statement contains a magic number: Assert.That(fragments.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_filter,The following statement contains a magic number: var strFragment3 = fragments[2] as PageStringFragment;
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_filter_without_whitespace,The following statement contains a magic number: Assert.That(fragments.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_filter_without_whitespace,The following statement contains a magic number: var strFragment3 = fragments[2] as PageStringFragment;
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_filter_without_whitespace,The following statement contains a magic number: Assert.That(fragments.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_filter_without_whitespace,The following statement contains a magic number: strFragment3 = fragments[2] as PageStringFragment;
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_filter_with_arg,The following statement contains a magic number: Assert.That(fragments.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_filter_with_arg,The following statement contains a magic number: var strFragment3 = fragments[2] as PageStringFragment;
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_filter_with_multiple_args,The following statement contains a magic number: Assert.That(fragments.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_filter_with_multiple_args,The following statement contains a magic number: var strFragment3 = fragments[2] as PageStringFragment;
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_filter_with_multiple_args,The following statement contains a magic number: Assert.That(varFragment2.FilterExpressions[0].Arguments.Length' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_filter_with_multiple_args,The following statement contains a magic number: Assert.That(varFragment2.FilterExpressions[0].Arguments[1]' Is.EqualTo(new JsLiteral(2.2)));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_filter_with_multiple_args,The following statement contains a magic number: Assert.That(varFragment2.FilterExpressions[0].Arguments[2]' Is.EqualTo(new JsLiteral("a")));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_filter_with_multiple_args,The following statement contains a magic number: Assert.That(varFragment2.FilterExpressions[0].Arguments[3]' Is.EqualTo(new JsLiteral("b")));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_filter_with_multiple_args,The following statement contains a magic number: Assert.That(varFragment2.FilterExpressions[0].Arguments[4]' Is.EqualTo(JsLiteral.True));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_multiple_filters_and_multiple_args,The following statement contains a magic number: Assert.That(fragments.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_multiple_filters_and_multiple_args,The following statement contains a magic number: var strFragment3 = fragments[2] as PageStringFragment;
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_multiple_filters_and_multiple_args,The following statement contains a magic number: Assert.That(varFragment2.FilterExpressions.Length' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_multiple_filters_and_multiple_args,The following statement contains a magic number: Assert.That(varFragment2.FilterExpressions[2].Name' Is.EqualTo("filter3"));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_multiple_filters_and_multiple_args,The following statement contains a magic number: Assert.That(varFragment2.FilterExpressions[2].Arguments.Length' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_multiple_filters_and_multiple_args,The following statement contains a magic number: Assert.That(varFragment2.FilterExpressions[2].Arguments.Length' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_multiple_filters_and_multiple_args,The following statement contains a magic number: Assert.That(varFragment2.FilterExpressions[2].Arguments[0]' Is.EqualTo(new JsLiteral(1)));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_multiple_filters_and_multiple_args,The following statement contains a magic number: Assert.That(varFragment2.FilterExpressions[2].Arguments[1]' Is.EqualTo(new JsLiteral(2.2)));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_multiple_filters_and_multiple_args,The following statement contains a magic number: Assert.That(varFragment2.FilterExpressions[2].Arguments[1]' Is.EqualTo(new JsLiteral(2.2)));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_multiple_filters_and_multiple_args,The following statement contains a magic number: Assert.That(varFragment2.FilterExpressions[2].Arguments[2]' Is.EqualTo(new JsLiteral("a")));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_multiple_filters_and_multiple_args,The following statement contains a magic number: Assert.That(varFragment2.FilterExpressions[2].Arguments[2]' Is.EqualTo(new JsLiteral("a")));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_multiple_filters_and_multiple_args,The following statement contains a magic number: Assert.That(varFragment2.FilterExpressions[2].Arguments[3]' Is.EqualTo(new JsLiteral("b")));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_multiple_filters_and_multiple_args,The following statement contains a magic number: Assert.That(varFragment2.FilterExpressions[2].Arguments[3]' Is.EqualTo(new JsLiteral("b")));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_multiple_filters_and_multiple_args,The following statement contains a magic number: Assert.That(varFragment2.FilterExpressions[2].Arguments[4]' Is.EqualTo(JsLiteral.True));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_multiple_filters_and_multiple_args,The following statement contains a magic number: Assert.That(varFragment2.FilterExpressions[2].Arguments[4]' Is.EqualTo(JsLiteral.True));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_multiple_variables_and_filters,The following statement contains a magic number: Assert.That(fragments.Count' Is.EqualTo(5));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_multiple_variables_and_filters,The following statement contains a magic number: var strFragment3 = fragments[2] as PageStringFragment;
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_multiple_variables_and_filters,The following statement contains a magic number: var varFragment4 = fragments[3] as PageVariableFragment;
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_multiple_variables_and_filters,The following statement contains a magic number: var strFragment5 = fragments[4] as PageStringFragment;
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_template_with_arg_and_multiple_filters,The following statement contains a magic number: Assert.That(varFragment.FilterExpressions.Length' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_next_token,The following statement contains a magic number: Assert.That(token' Is.EqualTo(new JsLiteral(100)));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_next_token,The following statement contains a magic number: Assert.That(token' Is.EqualTo(new JsLiteral(100d)));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_next_token,The following statement contains a magic number: Assert.That(token' Is.EqualTo(new JsLiteral(100d)));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_next_token,The following statement contains a magic number: Assert.That(token' Is.EqualTo(new JsLiteral(100d)));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_next_token,The following statement contains a magic number: Assert.That(token' Is.EqualTo(                  new JsObjectExpression(                      new JsProperty(new JsIdentifier("foo")' new JsLiteral(1))'                      new JsProperty(new JsIdentifier("bar")' new JsLiteral("qux"))'                      new JsProperty(new JsIdentifier("d")' new JsLiteral(1.1))'                      new JsProperty(new JsIdentifier("b")' new JsLiteral(false))'                      new JsProperty(new JsIdentifier("n")' JsNull.Value)                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_next_token,The following statement contains a magic number: Assert.That(token' Is.EqualTo(                  new JsObjectExpression(                      new JsProperty(new JsLiteral("foo")' new JsLiteral(1))'                      new JsProperty(new JsLiteral("bar")' new JsLiteral("qux"))'                      new JsProperty(new JsLiteral("d")' new JsLiteral(1.1))'                      new JsProperty(new JsLiteral("b")' new JsLiteral(false))'                      new JsProperty(new JsLiteral("n")' JsNull.Value)                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_next_token,The following statement contains a magic number: Assert.That(token' Is.EqualTo(                  new JsObjectExpression(                      new JsProperty(new JsTemplateLiteral("foo")' new JsLiteral(1))'                      new JsProperty(new JsTemplateLiteral("bar")' new JsLiteral("qux"))'                      new JsProperty(new JsTemplateLiteral("d")' new JsLiteral(1.1))'                      new JsProperty(new JsTemplateLiteral("b")' new JsLiteral(false))'                      new JsProperty(new JsTemplateLiteral("n")' JsNull.Value)                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_next_token,The following statement contains a magic number: Assert.That(token' Is.EqualTo(new JsArrayExpression(new JsLiteral(1)'new JsLiteral(2)'new JsLiteral(3))));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_next_token,The following statement contains a magic number: Assert.That(token' Is.EqualTo(new JsArrayExpression(new JsLiteral(1)'new JsLiteral(2)'new JsLiteral(3))));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_next_token,The following statement contains a magic number: Assert.That(token' Is.EqualTo(                  new JsArrayExpression(                      new JsObjectExpression(                          new JsProperty(new JsIdentifier("a")' new JsLiteral(1))                      )'                      new JsObjectExpression(                          new JsProperty(new JsIdentifier("b")' new JsLiteral(2))                      )                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_next_token,The following statement contains a magic number: Assert.That(token' Is.EqualTo(                  new JsArrayExpression(                      new JsObjectExpression(                          new JsProperty(                              new JsIdentifier("a")'                               new JsObjectExpression(                                  new JsProperty(                                      new JsLiteral("aa")'                                       new JsArrayExpression(new JsLiteral(1)'new JsLiteral(2)'new JsLiteral(3))                                  )                              )                          )                                              )'                      new JsObjectExpression(                          new JsProperty(                              new JsIdentifier("b")'                               new JsArrayExpression(new JsIdentifier("a")'new JsIdentifier("b")'new JsIdentifier("c"))                          )                                              )'                      new JsLiteral(3)'                      new JsLiteral(true)'                      JsNull.Value                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_next_token,The following statement contains a magic number: Assert.That(token' Is.EqualTo(                  new JsArrayExpression(                      new JsObjectExpression(                          new JsProperty(                              new JsIdentifier("a")'                               new JsObjectExpression(                                  new JsProperty(                                      new JsLiteral("aa")'                                       new JsArrayExpression(new JsLiteral(1)'new JsLiteral(2)'new JsLiteral(3))                                  )                              )                          )                                              )'                      new JsObjectExpression(                          new JsProperty(                              new JsIdentifier("b")'                               new JsArrayExpression(new JsIdentifier("a")'new JsIdentifier("b")'new JsIdentifier("c"))                          )                                              )'                      new JsLiteral(3)'                      new JsLiteral(true)'                      JsNull.Value                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_next_token,The following statement contains a magic number: Assert.That(token' Is.EqualTo(                  new JsArrayExpression(                      new JsObjectExpression(                          new JsProperty(                              new JsIdentifier("a")'                               new JsObjectExpression(                                  new JsProperty(                                      new JsLiteral("aa")'                                       new JsArrayExpression(new JsLiteral(1)'new JsLiteral(2)'new JsLiteral(3))                                  )                              )                          )                                              )'                      new JsObjectExpression(                          new JsProperty(                              new JsIdentifier("b")'                               new JsArrayExpression(new JsIdentifier("a")'new JsIdentifier("b")'new JsIdentifier("c"))                          )                                              )'                      new JsLiteral(3)'                      new JsLiteral(true)'                      JsNull.Value                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_next_token,The following statement contains a magic number: Assert.That(token' Is.EqualTo(                  new JsArrayExpression(                      new JsObjectExpression(                          new JsProperty(new JsIdentifier("name")' new JsLiteral("Alice"))'                          new JsProperty(new JsIdentifier("score")' new JsLiteral(50))                      )'                      new JsObjectExpression(                          new JsProperty(new JsIdentifier("name")' new JsLiteral("Bob"))'                          new JsProperty(new JsIdentifier("score")' new JsLiteral(40))                      )'                      new JsObjectExpression(                          new JsProperty(new JsIdentifier("name")' new JsLiteral("Cathy"))'                          new JsProperty(new JsIdentifier("score")' new JsLiteral(45))                      )                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_next_token,The following statement contains a magic number: Assert.That(token' Is.EqualTo(                  new JsArrayExpression(                      new JsObjectExpression(                          new JsProperty(new JsIdentifier("name")' new JsLiteral("Alice"))'                          new JsProperty(new JsIdentifier("score")' new JsLiteral(50))                      )'                      new JsObjectExpression(                          new JsProperty(new JsIdentifier("name")' new JsLiteral("Bob"))'                          new JsProperty(new JsIdentifier("score")' new JsLiteral(40))                      )'                      new JsObjectExpression(                          new JsProperty(new JsIdentifier("name")' new JsLiteral("Cathy"))'                          new JsProperty(new JsIdentifier("score")' new JsLiteral(45))                      )                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_next_token,The following statement contains a magic number: Assert.That(token' Is.EqualTo(                  new JsArrayExpression(                      new JsObjectExpression(                          new JsProperty(new JsIdentifier("name")' new JsLiteral("Alice"))'                          new JsProperty(new JsIdentifier("score")' new JsLiteral(50))                      )'                      new JsObjectExpression(                          new JsProperty(new JsIdentifier("name")' new JsLiteral("Bob"))'                          new JsProperty(new JsIdentifier("score")' new JsLiteral(40))                      )'                      new JsObjectExpression(                          new JsProperty(new JsIdentifier("name")' new JsLiteral("Cathy"))'                          new JsProperty(new JsIdentifier("score")' new JsLiteral(45))                      )                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_templates_within_literals,The following statement contains a magic number: Assert.That(fragments.Count' Is.EqualTo(3));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_method_binding_expressions,The following statement contains a magic number: Assert.That(token' Is.EqualTo(                  new JsCallExpression(                      new JsIdentifier("if")'                      new JsCallExpression(                          new JsIdentifier("OR")'                          new JsCallExpression(                              new JsIdentifier("gt")'                              new JsLiteral(1)'                              new JsLiteral(2)                          )'                          new JsCallExpression(                              new JsIdentifier("lt")'                              new JsLiteral(3)'                              new JsLiteral(4)                          )                      )                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_method_binding_expressions,The following statement contains a magic number: Assert.That(token' Is.EqualTo(                  new JsCallExpression(                      new JsIdentifier("if")'                      new JsCallExpression(                          new JsIdentifier("OR")'                          new JsCallExpression(                              new JsIdentifier("gt")'                              new JsLiteral(1)'                              new JsLiteral(2)                          )'                          new JsCallExpression(                              new JsIdentifier("lt")'                              new JsLiteral(3)'                              new JsLiteral(4)                          )                      )                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_method_binding_expressions,The following statement contains a magic number: Assert.That(token' Is.EqualTo(                  new JsCallExpression(                      new JsIdentifier("if")'                      new JsCallExpression(                          new JsIdentifier("OR")'                          new JsCallExpression(                              new JsIdentifier("gt")'                              new JsLiteral(1)'                              new JsLiteral(2)                          )'                          new JsCallExpression(                              new JsIdentifier("lt")'                              new JsLiteral(3)'                              new JsLiteral(4)                          )                      )                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_method_binding_expressions,The following statement contains a magic number: Assert.That(token' Is.EqualTo(                  new JsCallExpression(                      new JsIdentifier("if")'                      new JsCallExpression(                          new JsIdentifier("OR")'                          new JsCallExpression(                              new JsIdentifier("gt")'                              new JsLiteral(1)'                              new JsLiteral(2)                          )'                          new JsCallExpression(                              new JsIdentifier("lt")'                              new JsLiteral(3)'                              new JsLiteral(4)                          )                      )                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_method_binding_expressions,The following statement contains a magic number: Assert.That(token' Is.EqualTo(                  new JsCallExpression(                      new JsIdentifier("if")'                      new JsCallExpression(                          new JsIdentifier("OR")'                          new JsCallExpression(                              new JsIdentifier("gt")'                              new JsLiteral(1)'                              new JsLiteral(2)                          )'                          new JsCallExpression(                              new JsIdentifier("lt")'                              new JsLiteral(3)'                              new JsLiteral(4)                          )                      )                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Can_parse_method_binding_expressions,The following statement contains a magic number: Assert.That(token' Is.EqualTo(                  new JsCallExpression(                      new JsIdentifier("if")'                      new JsCallExpression(                          new JsIdentifier("OR")'                          new JsCallExpression(                              new JsIdentifier("gt")'                              new JsLiteral(1)'                              new JsLiteral(2)                          )'                          new JsCallExpression(                              new JsIdentifier("lt")'                              new JsLiteral(3)'                              new JsLiteral(4)                          )                      )                  )              ));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Does_remove_new_line_between_var_literals,The following statement contains a magic number: Assert.That(fragments.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Does_remove_new_line_between_var_literals,The following statement contains a magic number: Assert.That(fragments.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Does_remove_new_line_between_var_literals,The following statement contains a magic number: Assert.That(fragments.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Does_remove_new_line_between_var_literals,The following statement contains a magic number: Assert.That(fragments.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Does_remove_new_line_between_var_literals,The following statement contains a magic number: Assert.That(fragments.Count' Is.EqualTo(2));
Magic Number,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,SharpPageUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\SharpPageUtilsTests.cs,Does_remove_new_line_between_var_literals,The following statement contains a magic number: Assert.That(fragments.Count' Is.EqualTo(2));
Magic Number,ServiceStack.Shared.Tests,IocService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Shared\IocService.cs,Any,The following statement contains a magic number: await Task.Delay(10);
Magic Number,ServiceStack.Shared.Tests,IocService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Shared\IocService.cs,Any,The following statement contains a magic number: await Task.Delay(10);
Magic Number,ServiceStack.Shared.Tests,IocScopeService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Shared\IocService.cs,Any,The following statement contains a magic number: await Task.Delay(10);
Magic Number,ServiceStack.Shared.Tests,IocDisposableService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Shared\IocService.cs,Any,The following statement contains a magic number: await Task.Delay(10);
Magic Number,ServiceStack.WebHost.Endpoints.Tests.Support,DirectServiceClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Support\DirectServiceClient.cs,ThrowIfError,The following statement contains a magic number: httpRes.StatusCode >= 400
Magic Number,ServiceStack.WebHost.Endpoints.Tests.Support,GithubGateway,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Support\GithubGateway.cs,ParseLinkUrls,The following statement contains a magic number: keyValueParts.Length < 2
Magic Number,ServiceStack.WebHost.Endpoints.Tests.Support.Host,LongRunningService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Support\Host\ExampleAppHostHttpListener.cs,Any,The following statement contains a magic number: Thread.Sleep(5000);
Magic Number,ServiceStack.WebHost.Endpoints.Tests.Support.Operations,RequestOfAllTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Support\Operations\RequestOfAllTypes.cs,Create,The following statement contains a magic number: return new RequestOfAllTypes {  				Byte = (byte)i'  				Char = (char)i'  				DateTime = new DateTime(i % 2000' 1' 1)'  				Decimal = i'  				Double = i'  				Float = i'  				Guid = System.Guid.NewGuid()'  				Int = i'  				Long = i'  				Short = (short)i'  				String = i.ToString()'  				TimeSpan = new TimeSpan(i' 1' 1' 1)'  				UInt = (uint)i'  				ULong = (ulong)i'  			};
Magic Number,ServiceStack.WebHost.Endpoints.Tests.Support.Operations,RequestOfComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Support\Operations\RequestOfComplexTypes.cs,Create,The following statement contains a magic number: return new RequestOfComplexTypes {  				IntArray = new[] { i' i + 1 }'  				IntList = new List<int> { i' i + 1 }'  				IntMap = new Dictionary<int' int> { { i' i + 1 }' { i + 2' i + 3 } }'  				StringArray = new[] { "String" + i' "String" + i + 1 }'  				StringList = new List<string> { "String" + i' "String" + (i + 1) }'  				StringMap = new Dictionary<string' string> { { "String" + i' "String" + "String" + i + 1 }' { "String" + i + 2' "String" + i + 3 } }'  				StringIntMap = new Dictionary<string' int> { { "String" + i' i }' { "String" + i + 1' i + 1 } }'  				RequestOfAllTypes = RequestOfAllTypes.Create(i)'  			};
Magic Number,ServiceStack.WebHost.Endpoints.Tests.Support.Operations,RequestOfComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Support\Operations\RequestOfComplexTypes.cs,Create,The following statement contains a magic number: return new RequestOfComplexTypes {  				IntArray = new[] { i' i + 1 }'  				IntList = new List<int> { i' i + 1 }'  				IntMap = new Dictionary<int' int> { { i' i + 1 }' { i + 2' i + 3 } }'  				StringArray = new[] { "String" + i' "String" + i + 1 }'  				StringList = new List<string> { "String" + i' "String" + (i + 1) }'  				StringMap = new Dictionary<string' string> { { "String" + i' "String" + "String" + i + 1 }' { "String" + i + 2' "String" + i + 3 } }'  				StringIntMap = new Dictionary<string' int> { { "String" + i' i }' { "String" + i + 1' i + 1 } }'  				RequestOfAllTypes = RequestOfAllTypes.Create(i)'  			};
Magic Number,ServiceStack.WebHost.Endpoints.Tests.Support.Operations,RequestOfComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Support\Operations\RequestOfComplexTypes.cs,Create,The following statement contains a magic number: return new RequestOfComplexTypes {  				IntArray = new[] { i' i + 1 }'  				IntList = new List<int> { i' i + 1 }'  				IntMap = new Dictionary<int' int> { { i' i + 1 }' { i + 2' i + 3 } }'  				StringArray = new[] { "String" + i' "String" + i + 1 }'  				StringList = new List<string> { "String" + i' "String" + (i + 1) }'  				StringMap = new Dictionary<string' string> { { "String" + i' "String" + "String" + i + 1 }' { "String" + i + 2' "String" + i + 3 } }'  				StringIntMap = new Dictionary<string' int> { { "String" + i' i }' { "String" + i + 1' i + 1 } }'  				RequestOfAllTypes = RequestOfAllTypes.Create(i)'  			};
Magic Number,ServiceStack.WebHost.Endpoints.Tests.Support.Operations,RequestOfComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Support\Operations\RequestOfComplexTypes.cs,Create,The following statement contains a magic number: return new RequestOfComplexTypes {  				IntArray = new[] { i' i + 1 }'  				IntList = new List<int> { i' i + 1 }'  				IntMap = new Dictionary<int' int> { { i' i + 1 }' { i + 2' i + 3 } }'  				StringArray = new[] { "String" + i' "String" + i + 1 }'  				StringList = new List<string> { "String" + i' "String" + (i + 1) }'  				StringMap = new Dictionary<string' string> { { "String" + i' "String" + "String" + i + 1 }' { "String" + i + 2' "String" + i + 3 } }'  				StringIntMap = new Dictionary<string' int> { { "String" + i' i }' { "String" + i + 1' i + 1 } }'  				RequestOfAllTypes = RequestOfAllTypes.Create(i)'  			};
Magic Number,ServiceStack.WebHost.Endpoints.Tests.Support.Services,HttpErrorService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Support\Services\HttpErrorService.cs,Any,The following statement contains a magic number: throw new WebServiceException(request.Message ?? "Message")              {                  StatusCode = request.StatusCode ?? 500'                  StatusDescription = request.StatusDescription ?? "StatusDescription"'                  ResponseDto = request'              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.UseCases,EncryptedMessagesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\UseCases\EncryptedMessagesTests.cs,Does_populate_Request_metadata,The following statement contains a magic number: client.Version = 2;
Magic Number,ServiceStack.WebHost.Endpoints.Tests.UseCases,EncryptedMessagesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\UseCases\EncryptedMessagesTests.cs,Can_send_large_messages,The following statement contains a magic number: var request = new LargeMessage              {                  Messages = 100.Times(i => new HelloSecure { Name = "Name" + i })              };
Magic Number,ServiceStack.WebHost.Endpoints.Tests.UseCases,EncryptedMessagesTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\UseCases\EncryptedMessagesTests.cs,Does_throw_on_old_messages,The following statement contains a magic number: var timestamp = DateTime.UtcNow.Subtract(TimeSpan.FromMinutes(21)).ToUnixTime();
Magic Number,ServiceStack.WebHost.Endpoints.Tests.UseCases,CryptUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\UseCases\EncryptedMessagesTests.cs,Does_Hybrid_RSA_SHA512_AES_MasterKey_and_HmacSha256,The following statement contains a magic number: var cryptKey = new byte[sha512KeyBytes.Length / 2];
Magic Number,ServiceStack.WebHost.Endpoints.Tests.UseCases,CryptUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\UseCases\EncryptedMessagesTests.cs,Does_Hybrid_RSA_SHA512_AES_MasterKey_and_HmacSha256,The following statement contains a magic number: var authKey = new byte[sha512KeyBytes.Length / 2];
Magic Number,ServiceStack.WebHost.Endpoints.Tests.UseCases,CryptUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\UseCases\EncryptedMessagesTests.cs,ValidateAndDecryptWithMasterKey,The following statement contains a magic number: var cryptKey = new byte[sha512HashBytes.Length / 2];
Magic Number,ServiceStack.WebHost.Endpoints.Tests.UseCases,CryptUtilsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\UseCases\EncryptedMessagesTests.cs,ValidateAndDecryptWithMasterKey,The following statement contains a magic number: var authKey = new byte[sha512HashBytes.Length / 2];
Missing Default,ServiceStack.WebHost.Endpoints.Tests.ScriptTests,FilterInfoFilters,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\ScriptTests\ScriptUseCaseTests.cs,GetFilterType,The following switch statement is missing a default case: switch(name)                  {                      case nameof(DefaultScripts):                          return typeof(DefaultScripts);                      case nameof(HtmlScripts):                          return typeof(HtmlScripts);                      case nameof(ProtectedScripts):                          return typeof(ProtectedScripts);                      case nameof(InfoScripts):                          return typeof(InfoScripts);                      case nameof(ServiceStackScripts):                          return typeof(ServiceStackScripts);                      case nameof(AutoQueryScripts):                          return typeof(AutoQueryScripts);                  }
Missing Default,ServiceStack.WebHost.Endpoints.Tests.Support.Services,HttpErrorService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\tests\ServiceStack.WebHost.Endpoints.Tests\Support\Services\HttpErrorService.cs,Any,The following switch statement is missing a default case: switch (request.Type)              {                  case "FileNotFoundException":                      ex = new FileNotFoundException(request.Message);                      break;              }
