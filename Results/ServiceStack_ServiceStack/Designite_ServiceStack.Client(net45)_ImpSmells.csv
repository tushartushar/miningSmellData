Implementation smell,Namespace,Class,File,Method,Description
Long Method,ServiceStack,AsyncServiceClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\AsyncServiceClient.cs,SendWebRequestAsync,The method has 246 lines of code.
Long Method,ServiceStack,ServiceClientBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServiceClientBase.cs,HandleResponseException,The method has 108 lines of code.
Complex Method,ServiceStack,AsyncServiceClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\AsyncServiceClient.cs,SendWebRequestAsync,Cyclomatic complexity of the method is 19
Complex Method,ServiceStack,CachedServiceClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\CachedServiceClient.cs,OnResultsFilterResponse,Cyclomatic complexity of the method is 14
Complex Method,ServiceStack,ContentFormat,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ContentFormat.cs,GetEndpointAttributes,Cyclomatic complexity of the method is 12
Complex Method,ServiceStack,ContentFormat,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ContentFormat.cs,ToFeature,Cyclomatic complexity of the method is 11
Complex Method,ServiceStack,ContentFormat,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ContentFormat.cs,ToContentType,Cyclomatic complexity of the method is 9
Complex Method,ServiceStack,PlatformRsaUtils,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\CryptUtils.cs,ExtractFromXml,Cyclomatic complexity of the method is 12
Complex Method,ServiceStack,ServerEventsClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServerEventsClient.cs,Start,Cyclomatic complexity of the method is 13
Complex Method,ServiceStack,ServerEventsClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServerEventsClient.cs,ToTypedMessage,Cyclomatic complexity of the method is 10
Complex Method,ServiceStack,ServerEventsClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServerEventsClient.cs,ProcessEventMessage,Cyclomatic complexity of the method is 10
Complex Method,ServiceStack,ReceiverExec<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServerEventsClient.Receiver.cs,Reset,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack,ServiceClientBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServiceClientBase.cs,Send,Cyclomatic complexity of the method is 10
Complex Method,ServiceStack,ServiceClientBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServiceClientBase.cs,HandleResponseException,Cyclomatic complexity of the method is 10
Complex Method,ServiceStack,ServiceClientBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServiceClientBase.cs,PrepareWebRequest,Cyclomatic complexity of the method is 13
Complex Method,ServiceStack,ServiceClientBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServiceClientBase.cs,SendAsync,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack,UrlExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\UrlExtensions.cs,ToUrl,Cyclomatic complexity of the method is 10
Complex Method,ServiceStack,RestRoute,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\UrlExtensions.cs,GetQueryProperties,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack,AuthenticationInfo,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\WebRequestUtils.cs,AuthenticationInfo,Cyclomatic complexity of the method is 11
Complex Method,ServiceStack,WebServiceException,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\WebServiceException.cs,ToString,Cyclomatic complexity of the method is 9
Complex Method,ServiceStack.Serialization,StringMapTypeDeserializer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\Serialization\StringMapTypeDeserializer.cs,PopulateFromKeyValue,Cyclomatic complexity of the method is 8
Long Parameter List,ServiceStack,AsyncServiceClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\AsyncServiceClient.cs,SendWebRequestAsync,The method has 5 parameters. Parameters: httpMethod' absoluteUrl' request' token' recall
Long Parameter List,ServiceStack,CachedServiceClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\CachedServiceClient.cs,OnResultsFilterResponse,The method has 5 parameters. Parameters: webRes' response' httpMethod' requestUri' request
Long Parameter List,ServiceStack,CachedServiceClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\CachedServiceClient.cs,PostFileWithRequest,The method has 5 parameters. Parameters: relativeOrAbsoluteUrl' fileToUpload' fileName' request' fieldName
Long Parameter List,ServiceStack,RsaUtils,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\CryptUtils.cs,Verify,The method has 5 parameters. Parameters: dataToVerify' signature' publicKey' hashAlgorithm' rsaKeyLength
Long Parameter List,ServiceStack,EncryptedServiceClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\EncryptedServiceClient.cs,CreateEncryptedMessage,The method has 6 parameters. Parameters: request' operationName' cryptKey' authKey' iv' verb
Long Parameter List,ServiceStack,ServiceClientExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\EncryptedServiceClient.cs,PostFileWithRequest,The method has 5 parameters. Parameters: client' relativeOrAbsoluteUrl' fileToUpload' request' fieldName
Long Parameter List,ServiceStack,ServiceClientExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\EncryptedServiceClient.cs,SetCookie,The method has 8 parameters. Parameters: client' baseUri' name' value' expiresAt' path' httpOnly' secure
Long Parameter List,ServiceStack,ServiceClientExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\EncryptedServiceClient.cs,SetCookie,The method has 8 parameters. Parameters: cookieContainer' baseUri' name' value' expiresAt' path' httpOnly' secure
Long Parameter List,ServiceStack,ServiceClientBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServiceClientBase.cs,HandleResponseException,The method has 6 parameters. Parameters: ex' request' requestUri' createWebRequest' getResponse' response
Long Parameter List,ServiceStack,ServiceClientBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServiceClientBase.cs,PostFileWithRequest,The method has 5 parameters. Parameters: relativeOrAbsoluteUrl' fileToUpload' fileName' request' fieldName
Long Parameter List,ServiceStack,WcfServiceClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\WcfServiceClient.cs,PostFileWithRequest,The method has 5 parameters. Parameters: relativeOrAbsoluteUrl' fileToUpload' fileName' request' fieldName
Long Parameter List,ServiceStack.Serialization,StringMapTypeDeserializer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\Serialization\StringMapTypeDeserializer.cs,PopulateFromKeyValue,The method has 6 parameters. Parameters: instance' propertyName' propertyTextValue' propertySerializerEntry' errors' ignoredWarningsOnPropertyNames
Long Identifier,ServiceStack,UrlExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\UrlExtensions.cs,ToRelativeUri,The length of the parameter formatFallbackToPredefinedRoute is 31.
Long Identifier,ServiceStack,UrlExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\UrlExtensions.cs,ToRelativeUri,The length of the parameter formatFallbackToPredefinedRoute is 31.
Long Identifier,ServiceStack,UrlExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\UrlExtensions.cs,ToUrl,The length of the parameter formatFallbackToPredefinedRoute is 31.
Long Identifier,ServiceStack,UrlExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\UrlExtensions.cs,ToUrl,The length of the parameter formatFallbackToPredefinedRoute is 31.
Long Identifier,ServiceStack.Serialization,StringMapTypeDeserializer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\Serialization\StringMapTypeDeserializer.cs,PopulateFromMap,The length of the parameter ignoredWarningsOnPropertyNames is 30.
Long Identifier,ServiceStack.Serialization,StringMapTypeDeserializer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\Serialization\StringMapTypeDeserializer.cs,PopulateFromMap,The length of the parameter ignoredWarningsOnPropertyNames is 30.
Long Identifier,ServiceStack.Serialization,StringMapTypeDeserializer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\Serialization\StringMapTypeDeserializer.cs,PopulateFromKeyValue,The length of the parameter ignoredWarningsOnPropertyNames is 30.
Long Statement,ServiceStack,ClientFactory,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ClientFactory.cs,Create,The length of the statement  "            if (endpointUrl.IndexOf("format="' StringComparison.Ordinal) == -1 || endpointUrl.IndexOf("format=json"' StringComparison.Ordinal) >= 0) " is 136.
Long Statement,ServiceStack,ResponseStatusUtils,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ResponseStatusUtils.cs,CreateResponseStatus,The length of the statement  "                throw new ArgumentException("Cannot create a valid error response with a en empty errorCode and an empty validationError list"); " is 128.
Long Statement,ServiceStack,ServerEventsClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServerEventsClient.cs,OnJoinReceived,The length of the statement  "                log.Debug($"[SSE-CLIENT] OnJoinReceived: ({e.GetType().Name}) #{e.EventId} on #{ConnectionDisplayName} ({string.Join("' "' Channels)})"); " is 137.
Long Statement,ServiceStack,ServerEventsClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServerEventsClient.cs,OnLeaveReceived,The length of the statement  "                log.Debug($"[SSE-CLIENT] OnLeaveReceived: ({e.GetType().Name}) #{e.EventId} on #{ConnectionDisplayName} ({string.Join("' "' Channels)})"); " is 138.
Long Statement,ServiceStack,ServerEventsClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServerEventsClient.cs,OnUpdateReceived,The length of the statement  "                log.Debug($"[SSE-CLIENT] OnUpdateReceived: ({e.GetType().Name}) #{e.EventId} on #{ConnectionDisplayName} ({string.Join("' "' Channels)})"); " is 139.
Long Statement,ServiceStack,ServerEventsClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServerEventsClient.cs,OnCommandReceived,The length of the statement  "                log.Debug($"[SSE-CLIENT] OnCommandReceived: ({e.GetType().Name}) #{e.EventId} on #{ConnectionDisplayName} ({string.Join("' "' Channels)})"); " is 140.
Long Statement,ServiceStack,ServerEventsClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServerEventsClient.cs,OnHeartbeatReceived,The length of the statement  "                log.Debug($"[SSE-CLIENT] OnHeartbeatReceived: ({e.GetType().Name}) #{e.EventId} on #{ConnectionDisplayName} ({string.Join("' "' Channels)})"); " is 142.
Long Statement,ServiceStack,ServerEventClientExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServerEventsClient.cs,SubscribeToChannels,The length of the statement  "            client.ServiceClient.Post(new UpdateEventSubscriber { Id = client.ConnectionInfo.Id' SubscribeChannels = channels.ToArray() }); " is 127.
Long Statement,ServiceStack,ServerEventClientExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServerEventsClient.cs,SubscribeToChannelsAsync,The length of the statement  "            return client.ServiceClient.PostAsync(new UpdateEventSubscriber { Id = client.ConnectionInfo.Id' SubscribeChannels = channels.ToArray() }) " is 138.
Long Statement,ServiceStack,ServerEventClientExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServerEventsClient.cs,UnsubscribeFromChannels,The length of the statement  "            client.ServiceClient.Post(new UpdateEventSubscriber { Id = client.ConnectionInfo.Id' UnsubscribeChannels = channels.ToArray() }); " is 129.
Long Statement,ServiceStack,ServerEventClientExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServerEventsClient.cs,UnsubscribeFromChannelsAsync,The length of the statement  "            return client.ServiceClient.PostAsync(new UpdateEventSubscriber { Id = client.ConnectionInfo.Id' UnsubscribeChannels = channels.ToArray() }) " is 140.
Long Statement,ServiceStack,ServiceClientBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServiceClientBase.cs,SendAllAsync,The length of the statement  "            return asyncClient.SendAsync<List<TResponse>>(HttpMethods.Post' ResolveUrl(HttpMethods.Post' requestUri)' requests' token); " is 123.
Long Statement,ServiceStack,ServiceClientBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServiceClientBase.cs,DeleteAsync,The length of the statement  "            return asyncClient.SendAsync<TResponse>(HttpMethods.Delete' ResolveUrl(HttpMethods.Delete' relativeOrAbsoluteUrl)' null); " is 121.
Long Statement,ServiceStack,ServiceClientBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServiceClientBase.cs,PostAsync,The length of the statement  "            return asyncClient.SendAsync<TResponse>(HttpMethods.Post' ResolveUrl(HttpMethods.Post' relativeOrAbsoluteUrl)' request); " is 120.
Long Statement,ServiceStack,ServiceClientBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServiceClientBase.cs,PatchAsync,The length of the statement  "            return asyncClient.SendAsync<TResponse>(HttpMethods.Patch' ResolveUrl(HttpMethods.Patch' relativeOrAbsoluteUrl)' request); " is 122.
Long Statement,ServiceStack,ServiceClientBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServiceClientBase.cs,PostFilesWithRequest,The length of the statement  "                        var contentType = file.ContentType ?? (file.FileName != null ? MimeTypes.GetMimeType(file.FileName) : null) ?? "application/octet-stream"; " is 138.
Long Statement,ServiceStack,ServiceClientBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServiceClientBase.cs,PostFilesWithRequest,The length of the statement  "                        outputStream.Write($"Content-Disposition: form-data;name=\"{fieldName}\";filename=\"{fileName}\"{newLine}Content-Type: {contentType}{newLine}{newLine}"); " is 153.
Long Statement,ServiceStack,ServiceClientBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServiceClientBase.cs,PostFileWithRequest,The length of the statement  "            return PostFileWithRequest<TResponse>(ResolveTypedUrl(HttpMethods.Post' request)' fileToUpload' fileName' request' fieldName); " is 126.
Long Statement,ServiceStack,ServiceGatewayExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServiceGatewayExtensions.cs,SendAsync,The length of the statement  "                    newCache = new Dictionary<Type' Func<IServiceGateway' object' CancellationToken' Task<object>>>(LateBoundSendAsyncFns) { " is 120.
Long Statement,ServiceStack,RestRoute,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\UrlExtensions.cs,Apply,The length of the statement  "            if (HttpMethods != null && HttpMethods.Length != 0 && httpMethod != null && !HttpMethods.Contains(httpMethod) && !HttpMethods.Contains("ANY")) " is 142.
Long Statement,ServiceStack,RestRoute,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\UrlExtensions.cs,GetUrlVariables,The length of the statement  "                    if (component[0] != VariablePrefixChar || component[component.Length - 1] != VariablePostfixChar || variableName.Contains(VariablePostfix)) " is 139.
Long Statement,ServiceStack,AuthenticationInfo,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\WebRequestUtils.cs,ToString,The length of the statement  "            return $"[AuthenticationInfo: method={method}' realm={realm}' qop={qop}' nonce={nonce}' opaque={opaque}' cnonce={cnonce}' nc={nc}]"; " is 132.
Long Statement,ServiceStack,WebRequestUtils,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\WebRequestUtils.cs,CreateCustomException,The length of the statement  "                    "Invalid remote SSL certificate' overide with: \nServicePointManager.ServerCertificateValidationCallback += ((sender' certificate' chain' sslPolicyErrors) => isValidPolicy);"' ex); " is 180.
Long Statement,ServiceStack,WebRequestUtils,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\WebRequestUtils.cs,AddAuthInfo,The length of the statement  "                client.AddBasicAuth(userName' password); // FIXME AddBasicAuth ignores the server provided Realm property. Potential Bug. " is 121.
Long Statement,ServiceStack,WebRequestUtils,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\WebRequestUtils.cs,AddDigestAuth,The length of the statement  "                client.RequestUri.PathAndQuery + "\"' cnonce=\"" + authInfo.cnonce + "\"' nc=" + ncUse + "' qop=\"" + authInfo.qop + "\"' response=\"" + response + " is 147.
Long Statement,ServiceStack.Serialization,DataContractSerializer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\Serialization\DataContractSerializer.cs,CompressToStream,The length of the statement  "            using (var deflateStream = new System.IO.Compression.DeflateStream(stream' System.IO.Compression.CompressionMode.Compress)) " is 123.
Long Statement,ServiceStack.Serialization,StringMapTypeDeserializer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\Serialization\StringMapTypeDeserializer.cs,PopulateFromKeyValue,The length of the statement  "                    //InputExtensions.cs#530 MVC Checkbox helper emits extra hidden input field' generating 2 values' first is the real value " is 121.
Complex Conditional,ServiceStack,AsyncServiceClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\AsyncServiceClient.cs,SendWebRequestAsync,The conditional expression  "firstCall && WebRequestUtils.ShouldAuthenticate(webEx'                          (!string.IsNullOrEmpty(UserName) && !string.IsNullOrEmpty(Password))                          || Credentials != null                          || BearerToken != null                          || RefreshToken != null                          || OnAuthenticationRequired != null)"  is complex.
Complex Conditional,ServiceStack,ServerEventClientExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServerEventsClient.cs,ToServerEventUser,The conditional expression  "entry.Key == "userId" || entry.Key == "displayName" ||                       entry.Key == "profileUrl" || entry.Key == "channels""  is complex.
Complex Conditional,ServiceStack,ServiceClientBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServiceClientBase.cs,HandleResponseException,The conditional expression  "WebRequestUtils.ShouldAuthenticate(webEx'                      (!string.IsNullOrEmpty(username) && !string.IsNullOrEmpty(password))                      || credentials != null                      || bearerToken != null                      || refreshToken != null                      || OnAuthenticationRequired != null)"  is complex.
Complex Conditional,ServiceStack,UrlExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\UrlExtensions.cs,ToUrl,The conditional expression  "httpMethod == "GET" || httpMethod == "DELETE" || httpMethod == "OPTIONS" || httpMethod == "HEAD""  is complex.
Complex Conditional,ServiceStack,RestRoute,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\UrlExtensions.cs,Apply,The conditional expression  "HttpMethods != null && HttpMethods.Length != 0 && httpMethod != null && !HttpMethods.Contains(httpMethod) && !HttpMethods.Contains("ANY")"  is complex.
Empty Catch Block,ServiceStack,PclExportClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\PclExportClient.cs,PclExportClient,The method has an empty catch block.
Empty Catch Block,ServiceStack,ServerEventsClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServerEventsClient.cs,InternalStop,The method has an empty catch block.
Empty Catch Block,ServiceStack,WcfServiceClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\WcfServiceClient.cs,GetErrorStatus,The method has an empty catch block.
Magic Number,ServiceStack,CachedServiceClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\CachedServiceClient.cs,CachedServiceClient,The following statement contains a magic number: CleanCachesWhenCountExceeds = 1000;
Magic Number,ServiceStack,CachedServiceClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\CachedServiceClient.cs,OnResultsFilterResponse,The following statement contains a magic number: switch (key)                      {                          case "max-age":                              if (kvp.Length == 2 && long.TryParse(kvp[1]' out secs))                                  entry.MaxAge = TimeSpan.FromSeconds(secs);                              break;                          case "must-revalidate":                              entry.MustRevalidate = true;                              break;                          case "no-cache":                              entry.NoCache = true;                              break;                      }
Magic Number,ServiceStack,EncryptedServiceClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\EncryptedServiceClient.cs,EncryptedServiceClient,The following statement contains a magic number: KeyId = Convert.ToBase64String(publicKey.Modulus).Substring(0' 7);
Magic Number,ServiceStack,ServiceClientExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\EncryptedServiceClient.cs,SetPermanentSessionId,The following statement contains a magic number: client.SetCookie("ss-pid"' sessionId' expiresIn: TimeSpan.FromDays(365 * 20));
Magic Number,ServiceStack,ServiceClientExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\EncryptedServiceClient.cs,SetPermanentSessionId,The following statement contains a magic number: client.SetCookie("ss-pid"' sessionId' expiresIn: TimeSpan.FromDays(365 * 20));
Magic Number,ServiceStack,ServiceClientExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\EncryptedServiceClient.cs,SetTokenCookie,The following statement contains a magic number: client.SetCookie("ss-tok"' token' expiresIn: TimeSpan.FromDays(365 * 20));
Magic Number,ServiceStack,ServiceClientExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\EncryptedServiceClient.cs,SetTokenCookie,The following statement contains a magic number: client.SetCookie("ss-tok"' token' expiresIn: TimeSpan.FromDays(365 * 20));
Magic Number,ServiceStack,ServiceClientExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\EncryptedServiceClient.cs,SetTokenCookie,The following statement contains a magic number: cookies.SetCookie(new Uri(baseUri)' "ss-tok"' token'                  expiresAt: DateTime.UtcNow.Add(TimeSpan.FromDays(365 * 20)));
Magic Number,ServiceStack,ServiceClientExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\EncryptedServiceClient.cs,SetTokenCookie,The following statement contains a magic number: cookies.SetCookie(new Uri(baseUri)' "ss-tok"' token'                  expiresAt: DateTime.UtcNow.Add(TimeSpan.FromDays(365 * 20)));
Magic Number,ServiceStack,ServerEventsClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServerEventsClient.cs,SleepBackOffMultiplier,The following statement contains a magic number: const int MaxSleepMs = 60 * 1000;
Magic Number,ServiceStack,ServerEventsClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServerEventsClient.cs,SleepBackOffMultiplier,The following statement contains a magic number: const int MaxSleepMs = 60 * 1000;
Magic Number,ServiceStack,ServerEventsClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServerEventsClient.cs,SleepBackOffMultiplier,The following statement contains a magic number: var nextTry = Math.Min(                  rand.Next((int)Math.Pow(continuousErrorsCount' 3)' (int)Math.Pow(continuousErrorsCount + 1' 3) + 1)'                  MaxSleepMs);
Magic Number,ServiceStack,ServerEventsClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServerEventsClient.cs,SleepBackOffMultiplier,The following statement contains a magic number: var nextTry = Math.Min(                  rand.Next((int)Math.Pow(continuousErrorsCount' 3)' (int)Math.Pow(continuousErrorsCount + 1' 3) + 1)'                  MaxSleepMs);
Magic Number,ServiceStack,ServiceClientBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServiceClientBase.cs,PostFilesWithRequest,The following statement contains a magic number: var buffer = new byte[4096];
Magic Number,ServiceStack,ServiceClientBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServiceClientBase.cs,PostFilesWithRequest,The following statement contains a magic number: (byteCount = file.Stream.Read(buffer' 0' 4096)) > 0
Magic Number,ServiceStack,ServiceClientBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServiceClientBase.cs,PostFileWithRequest,The following statement contains a magic number: var buffer = new byte[4096];
Magic Number,ServiceStack,ServiceClientBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServiceClientBase.cs,PostFileWithRequest,The following statement contains a magic number: (byteCount = fileToUpload.Read(buffer' 0' 4096)) > 0
Magic Number,ServiceStack,RestRoute,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\UrlExtensions.cs,GetUrlVariables,The following statement contains a magic number: var variableName = component.Substring(1' component.Length - 2);
Magic Number,ServiceStack,WcfServiceClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\WcfServiceClient.cs,GetErrorStatus,The following statement contains a magic number: var errorStatus = 500;
Magic Number,ServiceStack,WebRequestUtils,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\WebRequestUtils.cs,padNC,The following statement contains a magic number: i < (8 - ("" + num).Length)
Magic Number,ServiceStack.Messaging,RedisMessageQueueClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\Messaging\RedisMessageQueueClient.cs,RedisMessageQueueClient,The following statement contains a magic number: this.MaxSuccessQueueSize = 100;
Magic Number,ServiceStack.Messaging,RedisMessageQueueClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\Messaging\RedisMessageQueueClient.cs,Get,The following statement contains a magic number: var messageBytes = unblockingKeyAndValue.Length != 2                  ? null                  : unblockingKeyAndValue[1];
Missing Default,ServiceStack,CachedServiceClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\CachedServiceClient.cs,OnResultsFilterResponse,The following switch statement is missing a default case: switch (key)                      {                          case "max-age":                              if (kvp.Length == 2 && long.TryParse(kvp[1]' out secs))                                  entry.MaxAge = TimeSpan.FromSeconds(secs);                              break;                          case "must-revalidate":                              entry.MustRevalidate = true;                              break;                          case "no-cache":                              entry.NoCache = true;                              break;                      }
Missing Default,ServiceStack,ContentFormat,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ContentFormat.cs,GetEndpointAttributes,The following switch statement is missing a default case: switch (realContentType)              {                  case MimeTypes.Json:                  case MimeTypes.JsonText:                      return RequestAttributes.Json;                    case MimeTypes.Xml:                  case MimeTypes.XmlText:                      return RequestAttributes.Xml;                    case MimeTypes.Html:                      return RequestAttributes.Html;                    case MimeTypes.Jsv:                  case MimeTypes.JsvText:                      return RequestAttributes.Jsv;                    case MimeTypes.Yaml:                  case MimeTypes.YamlText:                      return RequestAttributes.FormatOther;                    case MimeTypes.Csv:                      return RequestAttributes.Csv;                    case MimeTypes.Soap12:                      return RequestAttributes.Soap12;                    case MimeTypes.ProtoBuf:                      return RequestAttributes.ProtoBuf;                    case MimeTypes.MsgPack:                      return RequestAttributes.MsgPack;                    case MimeTypes.Wire:                      return RequestAttributes.Wire;              }
Missing Default,ServiceStack,ContentFormat,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ContentFormat.cs,ToFeature,The following switch statement is missing a default case: switch (realContentType)              {                  case MimeTypes.Json:                  case MimeTypes.JsonText:                      return Feature.Json;                    case MimeTypes.Xml:                  case MimeTypes.XmlText:                      return Feature.Xml;                    case MimeTypes.Html:                      return Feature.Html;                    case MimeTypes.Jsv:                  case MimeTypes.JsvText:                      return Feature.Jsv;                    case MimeTypes.Csv:                      return Feature.Csv;                    case MimeTypes.Soap11:                      return Feature.Soap11;                    case MimeTypes.Soap12:                      return Feature.Soap12;                    case MimeTypes.ProtoBuf:                      return Feature.ProtoBuf;                    case MimeTypes.MsgPack:                      return Feature.MsgPack;                    case MimeTypes.Wire:                      return Feature.Wire;              }
Missing Default,ServiceStack,ContentFormat,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ContentFormat.cs,GetRequestAttribute,The following switch statement is missing a default case: switch (httpMethod.ToUpper())              {                  case HttpMethods.Get:                      return RequestAttributes.HttpGet;                  case HttpMethods.Put:                      return RequestAttributes.HttpPut;                  case HttpMethods.Post:                      return RequestAttributes.HttpPost;                  case HttpMethods.Delete:                      return RequestAttributes.HttpDelete;                  case HttpMethods.Patch:                      return RequestAttributes.HttpPatch;                  case HttpMethods.Head:                      return RequestAttributes.HttpHead;                  case HttpMethods.Options:                      return RequestAttributes.HttpOptions;              }
Missing Default,ServiceStack,PlatformRsaUtils,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\CryptUtils.cs,ExtractFromXml,The following switch statement is missing a default case: switch (elName)                      {                          case "Modulus":                              csp.Modulus = Convert.FromBase64String(value);                              break;                          case "Exponent":                              csp.Exponent = Convert.FromBase64String(value);                              break;                          case "P":                              csp.P = Convert.FromBase64String(value);                              break;                          case "Q":                              csp.Q = Convert.FromBase64String(value);                              break;                          case "DP":                              csp.DP = Convert.FromBase64String(value);                              break;                          case "DQ":                              csp.DQ = Convert.FromBase64String(value);                              break;                          case "InverseQ":                              csp.InverseQ = Convert.FromBase64String(value);                              break;                          case "D":                              csp.D = Convert.FromBase64String(value);                              break;                      }
Missing Default,ServiceStack,ServerEventsClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServerEventsClient.cs,ProcessLine,The following switch statement is missing a default case: switch (label)              {                  case "id":                      currentMsg.EventId = long.Parse(data);                      break;                  case "data":                      currentMsg.Data = data;                      break;              }
Missing Default,ServiceStack,ServerEventsClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Client\ServerEventsClient.cs,ToTypedMessage,The following switch statement is missing a default case: switch (e.Target)                      {                          case "onConnect":                              var msg = JsonServiceClient.ParseObject(e.Json);                              var to = new ServerEventConnect                              {                                  HeartbeatIntervalMs = DefaultHeartbeatMs'                                  IdleTimeoutMs = DefaultIdleTimeoutMs'                              }.Populate(e' msg);                              to.Id = msg.Get("id");                              to.HeartbeatUrl = msg.Get("heartbeatUrl");                              to.HeartbeatIntervalMs = msg.Get<long>("heartbeatIntervalMs");                              to.IdleTimeoutMs = msg.Get<long>("idleTimeoutMs");                              to.UnRegisterUrl = msg.Get("unRegisterUrl");                              to.UpdateSubscriberUrl = msg.Get("updateSubscriberUrl");                              to.UserId = msg.Get("userId");                              to.DisplayName = msg.Get("displayName");                              to.IsAuthenticated = msg.Get("isAuthenticated") == "true";                              to.ProfileUrl = msg.Get("profileUrl");                              return to;                          case "onJoin":                              return new ServerEventJoin().Populate(e' JsonServiceClient.ParseObject(e.Json));                          case "onLeave":                              return new ServerEventLeave().Populate(e' JsonServiceClient.ParseObject(e.Json));                          case "onUpdate":                              return new ServerEventUpdate().Populate(e' JsonServiceClient.ParseObject(e.Json));                          case "onHeartbeat":                              return new ServerEventHeartbeat().Populate(e' JsonServiceClient.ParseObject(e.Json));                      }
