Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ServiceStack,GrpcFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Extensions\GrpcFeature.cs,ShouldRegisterService,Cyclomatic complexity of the method is 17
Complex Method,ServiceStack,GrpcFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Extensions\GrpcFeature.cs,GenerateGrpcServices,Cyclomatic complexity of the method is 14
Complex Method,ServiceStack,SubscribeServerEventsService,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Extensions\GrpcFeature.cs,Stream,Cyclomatic complexity of the method is 9
Complex Method,ServiceStack,GrpcServiceBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Extensions\Grpc\GrpcServiceBase.cs,WriteResponseHeadersAsync,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack,GrpcServiceBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Extensions\Grpc\GrpcServiceBase.cs,Stream,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack.Grpc,GrpcProtoGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Extensions\Grpc\GrpcProtoGenerator.cs,GetCode,Cyclomatic complexity of the method is 12
Long Statement,ServiceStack,GrpcFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Extensions\GrpcFeature.cs,AfterPluginsLoaded,The length of the statement  "            var genericMi = GetType().GetMethod(nameof(MapGrpcService)' BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic); " is 130.
Long Statement,ServiceStack,GrpcFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Extensions\GrpcFeature.cs,ShouldRegisterService,The length of the statement  "            // Only enable Services that are annotated with [DataContract] or [ProtoContract] attributes. ProtoBuf requires index per prop " is 126.
Long Statement,ServiceStack,GrpcFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Extensions\GrpcFeature.cs,ShouldRegisterService,The length of the statement  "                        log.Debug($"{op.RequestType.Name} properties: '{string.Join("' "' missingMemberOrders)}' are missing '[DataMember(Order=N)]' annotations required by GRPC."); " is 157.
Long Statement,ServiceStack,GrpcFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Extensions\GrpcFeature.cs,ShouldRegisterService,The length of the statement  "                        log.Debug($"{responseType.Name} properties: '{string.Join("' "' missingMemberOrders)}' are missing '[DataMember(Order=N)]' annotations required by GRPC."); " is 155.
Long Statement,ServiceStack,GrpcFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Extensions\GrpcFeature.cs,GenerateGrpcServices,The length of the statement  "                    var mi = GrpcServicesBaseType.GetMethod("Execute"' BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic); " is 121.
Long Statement,ServiceStack,GrpcFeature,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Extensions\GrpcFeature.cs,GenerateGrpcServices,The length of the statement  "                var mi = GrpcServicesBaseType.GetMethod("Stream"' BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic); " is 120.
Long Statement,ServiceStack.Grpc,GrpcProtoGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Extensions\Grpc\GrpcProtoGenerator.cs,GetCode,The length of the statement  "            sb.AppendLine("{0}AddDescriptionAsComments: {1}".Fmt(defaultValue("AddDescriptionAsComments")' Config.AddDescriptionAsComments)); " is 129.
Long Statement,ServiceStack.Grpc,GrpcProtoGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Extensions\Grpc\GrpcProtoGenerator.cs,GetCode,The length of the statement  "//            sb.AppendLine("{0}IncludeTypes: {1}".Fmt(defaultValue("IncludeTypes")' Config.IncludeTypes.Safe().ToArray().Join("'"))); " is 134.
Long Statement,ServiceStack.Grpc,GrpcProtoGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Extensions\Grpc\GrpcProtoGenerator.cs,GetCode,The length of the statement  "//            sb.AppendLine("{0}ExcludeTypes: {1}".Fmt(defaultValue("ExcludeTypes")' Config.ExcludeTypes.Safe().ToArray().Join("'"))); " is 134.
Long Statement,ServiceStack.Grpc,GrpcProtoGenerator,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Extensions\Grpc\GrpcProtoGenerator.cs,GetCode,The length of the statement  "                    //sb.AppendLine($"package {Config.Package ?? ResolvePackageName(globalNs.Replace("."'"_").ToLowercaseUnderscore().Replace("__"'"_"))};"); " is 137.
Magic Number,ServiceStack,GrpcServiceBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Extensions\Grpc\GrpcServiceBase.cs,WriteResponseHeadersAsync,The following statement contains a magic number: var nonSuccessStatus = res.StatusCode >= 300;
Magic Number,ServiceStack,GrpcServiceBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Extensions\Grpc\GrpcServiceBase.cs,ToGrpcStatus,The following statement contains a magic number: switch (httpStatus)              {                  case 400:                      return new Status(StatusCode.Internal' detail);                   case 401:                      return new Status(StatusCode.Unauthenticated' detail);                   case 403:                      return new Status(StatusCode.PermissionDenied' detail);                   case 404:                      return new Status(StatusCode.NotFound' detail);                   case 409:                      return new Status(StatusCode.AlreadyExists' detail);                   case 429:                  case 502:                  case 503:                  case 504:                      return new Status(StatusCode.Unavailable' detail);                   default:                      return new Status(StatusCode.Unknown' detail);               }
Magic Number,ServiceStack,GrpcServiceBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Extensions\Grpc\GrpcServiceBase.cs,ToGrpcStatus,The following statement contains a magic number: switch (httpStatus)              {                  case 400:                      return new Status(StatusCode.Internal' detail);                   case 401:                      return new Status(StatusCode.Unauthenticated' detail);                   case 403:                      return new Status(StatusCode.PermissionDenied' detail);                   case 404:                      return new Status(StatusCode.NotFound' detail);                   case 409:                      return new Status(StatusCode.AlreadyExists' detail);                   case 429:                  case 502:                  case 503:                  case 504:                      return new Status(StatusCode.Unavailable' detail);                   default:                      return new Status(StatusCode.Unknown' detail);               }
Magic Number,ServiceStack,GrpcServiceBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Extensions\Grpc\GrpcServiceBase.cs,ToGrpcStatus,The following statement contains a magic number: switch (httpStatus)              {                  case 400:                      return new Status(StatusCode.Internal' detail);                   case 401:                      return new Status(StatusCode.Unauthenticated' detail);                   case 403:                      return new Status(StatusCode.PermissionDenied' detail);                   case 404:                      return new Status(StatusCode.NotFound' detail);                   case 409:                      return new Status(StatusCode.AlreadyExists' detail);                   case 429:                  case 502:                  case 503:                  case 504:                      return new Status(StatusCode.Unavailable' detail);                   default:                      return new Status(StatusCode.Unknown' detail);               }
Magic Number,ServiceStack,GrpcServiceBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Extensions\Grpc\GrpcServiceBase.cs,ToGrpcStatus,The following statement contains a magic number: switch (httpStatus)              {                  case 400:                      return new Status(StatusCode.Internal' detail);                   case 401:                      return new Status(StatusCode.Unauthenticated' detail);                   case 403:                      return new Status(StatusCode.PermissionDenied' detail);                   case 404:                      return new Status(StatusCode.NotFound' detail);                   case 409:                      return new Status(StatusCode.AlreadyExists' detail);                   case 429:                  case 502:                  case 503:                  case 504:                      return new Status(StatusCode.Unavailable' detail);                   default:                      return new Status(StatusCode.Unknown' detail);               }
Magic Number,ServiceStack,GrpcServiceBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Extensions\Grpc\GrpcServiceBase.cs,ToGrpcStatus,The following statement contains a magic number: switch (httpStatus)              {                  case 400:                      return new Status(StatusCode.Internal' detail);                   case 401:                      return new Status(StatusCode.Unauthenticated' detail);                   case 403:                      return new Status(StatusCode.PermissionDenied' detail);                   case 404:                      return new Status(StatusCode.NotFound' detail);                   case 409:                      return new Status(StatusCode.AlreadyExists' detail);                   case 429:                  case 502:                  case 503:                  case 504:                      return new Status(StatusCode.Unavailable' detail);                   default:                      return new Status(StatusCode.Unknown' detail);               }
Magic Number,ServiceStack,GrpcServiceBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Extensions\Grpc\GrpcServiceBase.cs,ToGrpcStatus,The following statement contains a magic number: switch (httpStatus)              {                  case 400:                      return new Status(StatusCode.Internal' detail);                   case 401:                      return new Status(StatusCode.Unauthenticated' detail);                   case 403:                      return new Status(StatusCode.PermissionDenied' detail);                   case 404:                      return new Status(StatusCode.NotFound' detail);                   case 409:                      return new Status(StatusCode.AlreadyExists' detail);                   case 429:                  case 502:                  case 503:                  case 504:                      return new Status(StatusCode.Unavailable' detail);                   default:                      return new Status(StatusCode.Unknown' detail);               }
Magic Number,ServiceStack,GrpcServiceBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Extensions\Grpc\GrpcServiceBase.cs,ToGrpcStatus,The following statement contains a magic number: switch (httpStatus)              {                  case 400:                      return new Status(StatusCode.Internal' detail);                   case 401:                      return new Status(StatusCode.Unauthenticated' detail);                   case 403:                      return new Status(StatusCode.PermissionDenied' detail);                   case 404:                      return new Status(StatusCode.NotFound' detail);                   case 409:                      return new Status(StatusCode.AlreadyExists' detail);                   case 429:                  case 502:                  case 503:                  case 504:                      return new Status(StatusCode.Unavailable' detail);                   default:                      return new Status(StatusCode.Unknown' detail);               }
Magic Number,ServiceStack,GrpcServiceBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Extensions\Grpc\GrpcServiceBase.cs,ToGrpcStatus,The following statement contains a magic number: switch (httpStatus)              {                  case 400:                      return new Status(StatusCode.Internal' detail);                   case 401:                      return new Status(StatusCode.Unauthenticated' detail);                   case 403:                      return new Status(StatusCode.PermissionDenied' detail);                   case 404:                      return new Status(StatusCode.NotFound' detail);                   case 409:                      return new Status(StatusCode.AlreadyExists' detail);                   case 429:                  case 502:                  case 503:                  case 504:                      return new Status(StatusCode.Unavailable' detail);                   default:                      return new Status(StatusCode.Unknown' detail);               }
Magic Number,ServiceStack,GrpcServiceBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack\src\ServiceStack.Extensions\Grpc\GrpcServiceBase.cs,ToGrpcStatus,The following statement contains a magic number: switch (httpStatus)              {                  case 400:                      return new Status(StatusCode.Internal' detail);                   case 401:                      return new Status(StatusCode.Unauthenticated' detail);                   case 403:                      return new Status(StatusCode.PermissionDenied' detail);                   case 404:                      return new Status(StatusCode.NotFound' detail);                   case 409:                      return new Status(StatusCode.AlreadyExists' detail);                   case 429:                  case 502:                  case 503:                  case 504:                      return new Status(StatusCode.Unavailable' detail);                   default:                      return new Status(StatusCode.Unknown' detail);               }
