Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Remotion.Linq.Development.UnitTesting,ExpressionTreeComparerBase,C:\repos\re-motion_Relinq\Development\UnitTesting\ExpressionTreeComparerBase.cs,CheckAreEqualProperties,The method has 6 parameters. Parameters: property' valueType' value1' value2' e1' e2
Long Identifier,Remotion.Linq.Utilities,ReflectionUtility,C:\repos\re-motion_Relinq\Core\Utilities\ReflectionUtility.cs,,The length of the parameter s_enumerableAndQueryableMethods is 31.
Long Identifier,Remotion.Linq.Development.UnitTesting,ExpressionTreeComparerBase,C:\repos\re-motion_Relinq\Development\UnitTesting\ExpressionTreeComparerBase.cs,ExpressionTreeComparerBase,The length of the parameter additionalStructurallyComparedTypes is 35.
Long Statement,Remotion.Linq.Utilities,ReflectionUtility,C:\repos\re-motion_Relinq\Core\Utilities\ReflectionUtility.cs,GetMethod,The length of the statement  "      throw new ArgumentException (string.Format ("Cannot extract a method from the given expression '{0}'."' wrappedCall.Body)' "wrappedCall"); " is 138.
Long Statement,Remotion.Linq.Utilities,ReflectionUtility,C:\repos\re-motion_Relinq\Core\Utilities\ReflectionUtility.cs,CheckTypeIsClosedGenericIEnumerable,The length of the statement  "        var message = string.Format ("Expected a closed generic type implementing IEnumerable<T>' but found '{0}'."' enumerableType); " is 125.
Long Statement,Remotion.Linq.Utilities,ReflectionUtility,C:\repos\re-motion_Relinq\Core\Utilities\ReflectionUtility.cs,GetItemTypeOfClosedGenericIEnumerable,The length of the statement  "        var message = string.Format ("Expected a closed generic type implementing IEnumerable<T>' but found '{0}'."' enumerableType); " is 125.
Long Statement,Remotion.Utilities,ArgumentUtility,C:\repos\re-motion_Relinq\Development.Net_3_5\App_Packages\Remotion.Utilities.ArgumentUtility.Sources.1.15.23.0\ArgumentUtility.cs,CreateArgumentTypeException,The length of the statement  "        return new ArgumentException (string.Format ("Parameter '{0}' has unexpected type '{1}'."' argumentName' actualTypeName)' argumentName); " is 136.
Long Statement,Remotion.Utilities,ArgumentUtility,C:\repos\re-motion_Relinq\Development.Net_3_5\App_Packages\Remotion.Utilities.ArgumentUtility.Sources.1.15.23.0\ArgumentUtility.cs,CreateArgumentTypeException,The length of the statement  "            string.Format ("Parameter '{0}' has type '{2}' when type '{1}' was expected."' argumentName' expectedType' actualTypeName)' " is 123.
Long Statement,Remotion.Utilities,ArgumentUtility,C:\repos\re-motion_Relinq\Development.Net_3_5\App_Packages\Remotion.Utilities.ArgumentUtility.Sources.1.15.23.0\ArgumentUtility.cs,CreateArgumentItemNullException,The length of the statement  "      return new ArgumentNullException (argumentName' string.Format ("Item {0} of parameter '{1}' is null."' index' argumentName)); " is 125.
Long Statement,Remotion.Linq.Development.UnitTesting,ExpressionTreeComparerBase,C:\repos\re-motion_Relinq\Development\UnitTesting\ExpressionTreeComparerBase.cs,CheckAreEqualProperties,The length of the statement  "          Assert.AreEqual (list1.Count' list2.Count' GetMessage (list1.Count' list2.Count' "Number of elements in property '" + property.Name + "'")); " is 140.
Long Statement,Remotion.Linq.Development.UnitTesting,ExpressionTreeComparerBase,C:\repos\re-motion_Relinq\Development\UnitTesting\ExpressionTreeComparerBase.cs,CheckAreEqualProperties,The length of the statement  "                    "The item types of the items in the lists in property '{0}' differ: One is '{1}'' the other is '{2}'.\nTree 1: {3}\nTree 2: {4}"'  " is 129.
Long Statement,Remotion.Linq.Development.UnitTesting,ExpressionTreeComparerBase,C:\repos\re-motion_Relinq\Development\UnitTesting\ExpressionTreeComparerBase.cs,GetMessage,The length of the statement  "      return string.Format ("Trees are not equal: {0}\nNode 1: {1}\nNode 2: {2}\nTree 1: {3}\nTree 2: {4}"' context' e1' e2' _expectedInitial' _actualInitial); " is 153.
Long Statement,Remotion.Linq.Development.UnitTesting,Assert,C:\repos\re-motion_Relinq\Development\UnitTesting\ExpressionTreeComparerBase.cs,AreEqual,The length of the statement  "      if (expectedEnumerable != null && actualEnumerable != null && expectedEnumerable.Cast<object>().SequenceEqual (actualEnumerable.Cast<object>())) " is 144.
Long Statement,Remotion.Linq.Development.UnitTesting,StubQueryExecutor,C:\repos\re-motion_Relinq\Development\UnitTesting\StubQueryExecutor.cs,ExecuteSingle,The length of the statement  "      throw new NotImplementedException ("ExecuteSingle<" + typeof (T).Name + "> (" + queryModel + "' " + returnDefaultWhenEmpty + ")"); " is 130.
Long Statement,Remotion.Linq.Development.UnitTesting.Sandboxing,PermissionSets,C:\repos\re-motion_Relinq\Development\UnitTesting\Sandboxing\PermissionSets.cs,GetMediumTrust,The length of the statement  "                   new SecurityPermission (SecurityPermissionFlag.Assertion | SecurityPermissionFlag.Execution | SecurityPermissionFlag.ControlThread " is 130.
Long Statement,Remotion.Linq.Development.UnitTesting.Sandboxing,Sandbox,C:\repos\re-motion_Relinq\Development\UnitTesting\Sandboxing\Sandbox.cs,CreateSandbox,The length of the statement  "          // This clock does not have a unit test because it's impossible/difficult to reference an unsigned assembly from a signed unit test project. " is 140.
Long Statement,Remotion.Linq.Development.UnitTesting.Sandboxing,Sandbox,C:\repos\re-motion_Relinq\Development\UnitTesting\Sandboxing\Sandbox.cs,CreateSandbox,The length of the statement  "      var appDomain = AppDomain.CreateDomain ("Sandbox (" + DateTime.Now + ")"' null' appDomainSetup' permissionSet' fullTrustStrongNames); " is 133.
Long Statement,Remotion.Linq.Development.UnitTesting.Sandboxing,Sandbox,C:\repos\re-motion_Relinq\Development\UnitTesting\Sandboxing\Sandbox.cs,GetNonNullPublicKey,The length of the statement  "      // This case does not have a unit test because it's impossible/difficult to reference an unsigned assembly from a signed unit test project. " is 139.
Long Statement,Remotion.Linq.Development.UnitTesting.Sandboxing,SandboxTestRunner,C:\repos\re-motion_Relinq\Development\UnitTesting\Sandboxing\SandboxTestRunner.cs,RunTestFixture,The length of the statement  "      var tearDownMethod = type.GetMethods ().Where (m => IsDefined (m' "NUnit.Framework.TearDownAttribute")).SingleOrDefault (); " is 123.
Long Statement,Remotion.Linq.Development.UnitTesting.Sandboxing,SandboxTestRunner,C:\repos\re-motion_Relinq\Development\UnitTesting\Sandboxing\SandboxTestRunner.cs,RunTestFixture,The length of the statement  "      var testResults = testMethods.Select (testMethod => RunTestMethod (testFixtureInstance' testMethod' setupMethod' tearDownMethod)).ToArray (); " is 141.
Long Statement,Remotion.Linq.Development.UnitTesting.Sandboxing,SandboxTestRunner,C:\repos\re-motion_Relinq\Development\UnitTesting\Sandboxing\SandboxTestRunner.cs,RunTestMethod,The length of the statement  "      if (IsDefined (testMethod' "NUnit.Framework.IgnoreAttribute") || IsDefined (testMethod.DeclaringType' "NUnit.Framework.IgnoreAttribute")) " is 137.
Long Statement,Remotion.Linq.Development.UnitTesting.Sandboxing,SandboxTestRunner,C:\repos\re-motion_Relinq\Development\UnitTesting\Sandboxing\SandboxTestRunner.cs,RunTestMethod,The length of the statement  "        var exceptionType = (Type) GetAttribute (testMethod' "NUnit.Framework.ExpectedExceptionAttribute").ConstructorArguments[0].Value; " is 129.
Long Statement,Remotion.Linq.Development.UnitTesting.Sandboxing,SandboxTestRunner,C:\repos\re-motion_Relinq\Development\UnitTesting\Sandboxing\SandboxTestRunner.cs,GetAttribute,The length of the statement  "      return CustomAttributeData.GetCustomAttributes (memberInfo).SingleOrDefault (ad => ad.Constructor.DeclaringType.FullName == attributeName); " is 139.
Magic Number,Remotion.Linq.Development.UnitTesting,ExpressionHelper,C:\repos\re-motion_Relinq\Development\UnitTesting\ExpressionHelper.cs,CreateGroupResultOperator,The following statement contains a magic number: var keySelector = Resolve<int' short> (fromClause2' j => (short) (j % 3));
Magic Number,Remotion.Linq.Development.UnitTesting,ExpressionHelper,C:\repos\re-motion_Relinq\Development\UnitTesting\ExpressionHelper.cs,CreateUnionResultOperator,The following statement contains a magic number: return new UnionResultOperator ("union"' typeof (int)' Expression.Constant (new[] { 1' 2 }));
Magic Number,Remotion.Linq.Development.UnitTesting,ExpressionHelper,C:\repos\re-motion_Relinq\Development\UnitTesting\ExpressionHelper.cs,CreateConcatResultOperator,The following statement contains a magic number: return new UnionResultOperator ("concat"' typeof (int)' Expression.Constant (new[] { 1' 2 }));
Magic Number,Remotion.Linq.Development.UnitTesting,ExpressionHelper,C:\repos\re-motion_Relinq\Development\UnitTesting\ExpressionHelper.cs,CreateWhereClause,The following statement contains a magic number: var predicate = Expression.MakeBinary (ExpressionType.Equal' Expression.Constant (1)' Expression.Constant (2));
Magic Number,Remotion.Linq.Development.UnitTesting,ExpressionHelper,C:\repos\re-motion_Relinq\Development\UnitTesting\ExpressionHelper.cs,Resolve,The following statement contains a magic number: var expressionMapping = new Dictionary<Expression' Expression> (2)                                {                                    { expressionToBeResolved.Parameters[0]' new QuerySourceReferenceExpression (sourceToReference1) }'                                    { expressionToBeResolved.Parameters[1]' new QuerySourceReferenceExpression (sourceToReference2) }                                };
Magic Number,Remotion.Linq.Development.UnitTesting,ExpressionHelper,C:\repos\re-motion_Relinq\Development\UnitTesting\ExpressionHelper.cs,Resolve,The following statement contains a magic number: var expressionMapping = new Dictionary<Expression' Expression> (3)                                {                                    { expressionToBeResolved.Parameters[0]' new QuerySourceReferenceExpression (sourceToReference1) }'                                    { expressionToBeResolved.Parameters[1]' new QuerySourceReferenceExpression (sourceToReference2) }'                                    { expressionToBeResolved.Parameters[2]' new QuerySourceReferenceExpression (sourceToReference3) }'                                };
Magic Number,Remotion.Linq.Development.UnitTesting,ExpressionHelper,C:\repos\re-motion_Relinq\Development\UnitTesting\ExpressionHelper.cs,Resolve,The following statement contains a magic number: var expressionMapping = new Dictionary<Expression' Expression> (3)                                {                                    { expressionToBeResolved.Parameters[0]' new QuerySourceReferenceExpression (sourceToReference1) }'                                    { expressionToBeResolved.Parameters[1]' new QuerySourceReferenceExpression (sourceToReference2) }'                                    { expressionToBeResolved.Parameters[2]' new QuerySourceReferenceExpression (sourceToReference3) }'                                };
Missing Default,Remotion.Linq.Utilities,ReflectionUtility,C:\repos\re-motion_Relinq\Core\Utilities\ReflectionUtility.cs,GetMethod,The following switch statement is missing a default case: switch (wrappedCall.Body.NodeType)        {          case ExpressionType.Call:            return ((MethodCallExpression) wrappedCall.Body).Method;          case ExpressionType.MemberAccess:            var memberExpression = (MemberExpression) wrappedCall.Body;            var property = memberExpression.Member as PropertyInfo;            var method = property != null ? property.GetGetMethod (true) : null;            if (method != null)              return method;            break;        }
