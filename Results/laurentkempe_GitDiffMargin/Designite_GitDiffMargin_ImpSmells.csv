Implementation smell,Namespace,Class,File,Method,Description
Complex Method,GitDiffMargin,GitDiffMarginCommandHandler,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\GitDiffMarginCommandHandler.cs,QueryCommandStatus,Cyclomatic complexity of the method is 18
Complex Method,GitDiffMargin,GitDiffMarginCommandHandler,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\GitDiffMarginCommandHandler.cs,HandlePreExec,Cyclomatic complexity of the method is 14
Complex Method,GitDiffMargin,EditorDiffMargin,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\EditorDiffMargin.cs,UpdateNormalDiffDimensions,Cyclomatic complexity of the method is 12
Complex Method,GitDiffMargin,EditorDiffMargin,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\EditorDiffMargin.cs,UpdateDeletedDiffDimensions,Cyclomatic complexity of the method is 10
Complex Method,GitDiffMargin.Git,GitCommands,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\Git\GitCommands.cs,GetGitDiffFor,Cyclomatic complexity of the method is 17
Complex Method,GitDiffMargin.Git,GitCommands,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\Git\GitCommands.cs,StartExternalDiff,Cyclomatic complexity of the method is 9
Complex Method,GitDiffMargin.Git,GitCommands,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\Git\GitCommands.cs,AdjustPath,Cyclomatic complexity of the method is 17
Long Parameter List,GitDiffMargin.Core,DiffUpdateBackgroundParser,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\Core\DiffUpdateBackgroundParser.cs,DiffUpdateBackgroundParser,The method has 6 parameters. Parameters: textBuffer' documentBuffer' originalPath' taskScheduler' textDocumentFactoryService' commands
Long Parameter List,GitDiffMargin.Core,MarginCore,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\Core\MarginCore.cs,MarginCore,The method has 6 parameters. Parameters: textView' originalPath' textDocumentFactoryService' classificationFormatMapService' editorFormatMapService' gitCommands
Long Parameter List,GitDiffMargin,GitDiffMarginCommandHandler,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\GitDiffMarginCommandHandler.cs,HandlePreExec,The method has 5 parameters. Parameters: commandGroup' commandId' executionOptions' pvaIn' pvaOut
Long Identifier,GitDiffMargin.Core,MarginCore,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\Core\MarginCore.cs,MarginCore,The length of the parameter classificationFormatMapService is 30.
Long Statement,GitDiffMargin.Core,MarginCore,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\Core\MarginCore.cs,RollBack,The length of the statement  "                    var endLine = snapshot.GetLineFromLineNumber(hunkRangeInfo.NewHunkRange.StartingLineNumber + hunkRangeInfo.NewHunkRange.NumberOfLines - 1); " is 139.
Long Statement,GitDiffMargin.Core,MarginCore,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\Core\MarginCore.cs,RollBack,The length of the statement  "                    var endLine = snapshot.GetLineFromLineNumber(hunkRangeInfo.NewHunkRange.StartingLineNumber + hunkRangeInfo.NewHunkRange.NumberOfLines - 1); " is 139.
Long Statement,GitDiffMargin,GitDiffMarginCommandHandler,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\GitDiffMarginCommandHandler.cs,QueryCommandStatus,The length of the statement  "                        EditorDiffViewModel diffViewModel = viewModel.DiffViewModels.OfType<EditorDiffViewModel>().FirstOrDefault(i => i.ShowPopup); " is 124.
Long Statement,GitDiffMargin,GitDiffMarginCommandHandler,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\GitDiffMarginCommandHandler.cs,QueryCommandStatus,The length of the statement  "                            RelayCommand<DiffViewModel> command = (GitDiffMarginCommand)commandId == GitDiffMarginCommand.NextChange ? viewModel.NextChangeCommand : viewModel.PreviousChangeCommand; " is 169.
Long Statement,GitDiffMargin,GitDiffMarginCommandHandler,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\GitDiffMarginCommandHandler.cs,QueryCommandStatus,The length of the statement  "                        EditorDiffViewModel diffViewModel = viewModel.DiffViewModels.OfType<EditorDiffViewModel>().FirstOrDefault(i => i.ShowPopup); " is 124.
Long Statement,GitDiffMargin,GitDiffMarginCommandHandler,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\GitDiffMarginCommandHandler.cs,QueryCommandStatus,The length of the statement  "                            ICommand command = (GitDiffMarginCommand)commandId == GitDiffMarginCommand.RollbackChange ? diffViewModel.RollbackCommand : diffViewModel.CopyOldTextCommand; " is 157.
Long Statement,GitDiffMargin,GitDiffMarginCommandHandler,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\GitDiffMarginCommandHandler.cs,HandlePreExec,The length of the statement  "                        RelayCommand<DiffViewModel> command = (GitDiffMarginCommand)commandId == GitDiffMarginCommand.NextChange ? viewModel.NextChangeCommand : viewModel.PreviousChangeCommand; " is 169.
Long Statement,GitDiffMargin,GitDiffMarginCommandHandler,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\GitDiffMarginCommandHandler.cs,HandlePreExec,The length of the statement  "                        ICommand command = (GitDiffMarginCommand)commandId == GitDiffMarginCommand.RollbackChange ? diffViewModel.RollbackCommand : diffViewModel.CopyOldTextCommand; " is 157.
Long Statement,GitDiffMargin,GitDiffMarginCommandHandler,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\GitDiffMarginCommandHandler.cs,GetCurrentDiffViewModel,The length of the statement  "            return viewModel.DiffViewModels.OfType<EditorDiffViewModel>().FirstOrDefault(diff => diff.IsLineNumberBetweenDiff(caretLineNumber)); " is 132.
Long Statement,GitDiffMargin,DiffMarginFactoryBase,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\DiffMarginFactoryBase.cs,TryGetMarginCore,The length of the statement  "                        () => new MarginCore(textViewHost.TextView' originalPath' TextDocumentFactoryService' ClassificationFormatMapService' EditorFormatMapService' GitCommands)); " is 156.
Long Statement,GitDiffMargin.Git,GitCommands,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\Git\GitCommands.cs,GetGitDiffFor,The length of the statement  "                    var treeChanges = repo.Diff.Compare(blob' newBlob' new CompareOptions { ContextLines = ContextLines' InterhunkLines = 0 }); " is 123.
Long Statement,GitDiffMargin.Git,GitCommands,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\Git\GitCommands.cs,StartExternalDiff,The length of the statement  "                IVsDifferenceService differenceService = _serviceProvider.GetService(typeof(SVsDifferenceService)) as IVsDifferenceService; " is 123.
Long Statement,GitDiffMargin.Git,GitCommands,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\Git\GitCommands.cs,StartExternalDiff,The length of the statement  "                differenceService.OpenComparisonWindow2(leftFileMoniker' rightFileMoniker' caption' tooltip' leftLabel' rightLabel' inlineLabel' roles' (uint)grfDiffOptions); " is 158.
Long Statement,GitDiffMargin.Git,GitCommands,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\Git\GitCommands.cs,AdjustPath,The length of the statement  "            if (!ErrorHandler.Succeeded(solution.GetProjectEnum((uint)__VSENUMPROJFLAGS.EPF_LOADEDINSOLUTION' Guid.Empty' out IEnumHierarchies ppenum)) " is 139.
Long Statement,GitDiffMargin.Git,GitDiffParser,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\Git\GitDiffParser.cs,Parse,The length of the statement  "                   select new HunkRangeInfo(new HunkRange(GetHunkOriginalFile(hunkLine.Item1)' _contextLines)' new HunkRange(GetHunkNewFile(hunkLine.Item1)' _contextLines)' hunkLine.Item2' _suppressRollback); " is 189.
Long Statement,GitDiffMargin.Git,GitDiffParser,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\Git\GitDiffParser.cs,GetUnifiedFormatHunkLines,The length of the statement  "                splitHunks.Select(splitHunk => new Tuple<string' IEnumerable<string>>(splitHunk[0]' splitHunk.Skip(1).TakeWhile((s' i) => i < splitHunk.Count))) :  " is 146.
Long Statement,GitDiffMargin.ViewModel,EditorDiffViewModel,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\ViewModel\EditorDiffViewModel.cs,GetDiffText,The length of the statement  "                return HunkRangeInfo.IsModification || HunkRangeInfo.IsDeletion ? String.Join(Environment.NewLine' HunkRangeInfo.OriginalText) : string.Empty; " is 142.
Long Statement,GitDiffMargin.View,EditorDiffMarginControl,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\View\EditorDiffMarginControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/GitDiffMargin;component/view/editordiffmargincontrol.xaml"' System.UriKind.Relative); " is 131.
Long Statement,GitDiffMargin.View,EditorDiffMarginControl,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\View\EditorDiffMarginControl.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Button)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.Button_MouseDoubleClick); " is 142.
Long Statement,GitDiffMargin.View,EditorDiffMarginControl,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\View\EditorDiffMarginControl.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.Popup_Close); " is 130.
Long Statement,GitDiffMargin.View,ScrollDiffMarginControl,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\View\ScrollDiffMarginControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/GitDiffMargin;component/view/scrolldiffmargincontrol.xaml"' System.UriKind.Relative); " is 131.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\obj\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Complex Conditional,GitDiffMargin,EditorDiffMargin,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\EditorDiffMargin.cs,UpdateNormalDiffDimensions,The conditional expression  "startLineNumber < 0                  || startLineNumber >= snapshot.LineCount                  || endLineNumber < 0                  || endLineNumber >= snapshot.LineCount"  is complex.
Complex Conditional,GitDiffMargin,ScrollDiffMargin,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\ScrollDiffMargin.cs,UpdateDiffDimensions,The conditional expression  "startLineNumber < 0                  || startLineNumber >= snapshot.LineCount                  || endLineNumber < 0                  || endLineNumber >= snapshot.LineCount"  is complex.
Complex Conditional,GitDiffMargin.Git,GitCommands,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\Git\GitCommands.cs,GetGitDiffFor,The conditional expression  "from == null                      && retrieveStatus == FileStatus.Unaltered                      && !textDocument.IsDirty                      && Path.GetFullPath(filename) == originalPath"  is complex.
Virtual Method Call from Constructor,GitDiffMargin.ViewModel,ScrollDiffViewModel,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\ViewModel\ScrollDiffViewModel.cs,ScrollDiffViewModel,The constructor "ScrollDiffViewModel" calls a virtual method "UpdateDimensions".
Magic Number,GitDiffMargin.Core,BackgroundParser,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\Core\BackgroundParser.cs,BackgroundParser,The following statement contains a magic number: _reparseDelay = TimeSpan.FromMilliseconds(1500);
Magic Number,GitDiffMargin.Core,DiffUpdateBackgroundParser,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\Core\DiffUpdateBackgroundParser.cs,DiffUpdateBackgroundParser,The following statement contains a magic number: ReparseDelay = TimeSpan.FromMilliseconds(500);
Magic Number,GitDiffMargin,EditorDiffMargin,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\EditorDiffMargin.cs,UpdateDeletedDiffDimensions,The following statement contains a magic number: diffViewModel.Top = center - (height / 2.0);
Magic Number,GitDiffMargin,ScrollDiffMargin,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\ScrollDiffMargin.cs,UpdateDiffDimensions,The following statement contains a magic number: var mapTop = _scrollBar.Map.GetCoordinateAtBufferPosition(startLine.Start) - 0.5;
Magic Number,GitDiffMargin,ScrollDiffMargin,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\ScrollDiffMargin.cs,UpdateDiffDimensions,The following statement contains a magic number: var mapBottom = _scrollBar.Map.GetCoordinateAtBufferPosition(endLine.End) + 0.5;
Magic Number,GitDiffMargin,ScrollDiffMargin,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\ScrollDiffMargin.cs,UpdateDiffDimensions,The following statement contains a magic number: diffViewModel.Top = Math.Round(_scrollBar.GetYCoordinateOfScrollMapPosition(mapTop)) - 2.0;
Magic Number,GitDiffMargin,ScrollDiffMargin,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\ScrollDiffMargin.cs,UpdateDiffDimensions,The following statement contains a magic number: diffViewModel.Height = Math.Round(_scrollBar.GetYCoordinateOfScrollMapPosition(mapBottom)) - diffViewModel.Top + 2.0;
Magic Number,GitDiffMargin,ScrollDiffMarginFactory2012,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\ScrollDiffMarginFactory2012.cs,CreateMargin,The following statement contains a magic number: typeof(ErrorHandler).Assembly.GetName().Version.Major >= 12
Magic Number,GitDiffMargin,ScrollDiffMarginFactory2013,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\ScrollDiffMarginFactory2013.cs,CreateMargin,The following statement contains a magic number: typeof(ErrorHandler).Assembly.GetName().Version.Major < 12
Magic Number,GitDiffMargin.Settings,DiffAdditionEditorFormatDefinition,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\Settings\DiffAdditionEditorFormatDefinition.cs,DiffAdditionEditorFormatDefinition,The following statement contains a magic number: BackgroundColor = Color.FromRgb(180' 255' 180);
Magic Number,GitDiffMargin.Settings,DiffAdditionEditorFormatDefinition,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\Settings\DiffAdditionEditorFormatDefinition.cs,DiffAdditionEditorFormatDefinition,The following statement contains a magic number: BackgroundColor = Color.FromRgb(180' 255' 180);
Magic Number,GitDiffMargin.Settings,DiffAdditionEditorFormatDefinition,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\Settings\DiffAdditionEditorFormatDefinition.cs,DiffAdditionEditorFormatDefinition,The following statement contains a magic number: BackgroundColor = Color.FromRgb(180' 255' 180);
Magic Number,GitDiffMargin.Settings,DiffModificationEditorFormatDefinition,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\Settings\DiffModificationEditorFormatDefinition.cs,DiffModificationEditorFormatDefinition,The following statement contains a magic number: BackgroundColor = Color.FromRgb(160' 200' 255);
Magic Number,GitDiffMargin.Settings,DiffModificationEditorFormatDefinition,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\Settings\DiffModificationEditorFormatDefinition.cs,DiffModificationEditorFormatDefinition,The following statement contains a magic number: BackgroundColor = Color.FromRgb(160' 200' 255);
Magic Number,GitDiffMargin.Settings,DiffModificationEditorFormatDefinition,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\Settings\DiffModificationEditorFormatDefinition.cs,DiffModificationEditorFormatDefinition,The following statement contains a magic number: BackgroundColor = Color.FromRgb(160' 200' 255);
Magic Number,GitDiffMargin.Settings,DiffRemovedEditorFormatDefinition,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\Settings\DiffRemovedEditorFormatDefinition.cs,DiffRemovedEditorFormatDefinition,The following statement contains a magic number: BackgroundColor = Color.FromRgb(255' 160' 180);
Magic Number,GitDiffMargin.Settings,DiffRemovedEditorFormatDefinition,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\Settings\DiffRemovedEditorFormatDefinition.cs,DiffRemovedEditorFormatDefinition,The following statement contains a magic number: BackgroundColor = Color.FromRgb(255' 160' 180);
Magic Number,GitDiffMargin.Settings,DiffRemovedEditorFormatDefinition,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\Settings\DiffRemovedEditorFormatDefinition.cs,DiffRemovedEditorFormatDefinition,The following statement contains a magic number: BackgroundColor = Color.FromRgb(255' 160' 180);
Magic Number,GitDiffMargin.Git,GitCommands,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\Git\GitCommands.cs,StartExternalDiff,The following statement contains a magic number: string tempPrefix = Path.GetRandomFileName().Substring(0' 5);
Magic Number,GitDiffMargin.Git,HunkRange,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\Git\HunkRange.cs,HunkRange,The following statement contains a magic number: NumberOfLines = int.Parse(hunkParts[1]) - (2 * contextLines);
Magic Number,GitDiffMargin.ViewModel,DiffViewModel,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\ViewModel\DiffViewModel.cs,IsLineNumberBetweenDiff,The following statement contains a magic number: diffEndLine = diffStartLine + NumberOfLines + 2;
Magic Number,GitDiffMargin.View,EditorDiffMarginControl,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\View\EditorDiffMarginControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 50 "..\..\..\View\EditorDiffMarginControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Button_Click);                            #line default              #line hidden                            #line 51 "..\..\..\View\EditorDiffMarginControl.xaml"              ((System.Windows.Controls.Button)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.Button_MouseDoubleClick);                            #line default              #line hidden              break;              case 2:                            #line 72 "..\..\..\View\EditorDiffMarginControl.xaml"              ((System.Windows.Controls.Primitives.Popup)(target)).Opened += new System.EventHandler(this.Popup_OnOpened);                            #line default              #line hidden              break;              case 3:                            #line 75 "..\..\..\View\EditorDiffMarginControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.Popup_Close);                            #line default              #line hidden              break;              }
Magic Number,GitDiffMargin.View,EditorDiffMarginControl,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\View\EditorDiffMarginControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 50 "..\..\..\View\EditorDiffMarginControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Button_Click);                            #line default              #line hidden                            #line 51 "..\..\..\View\EditorDiffMarginControl.xaml"              ((System.Windows.Controls.Button)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.Button_MouseDoubleClick);                            #line default              #line hidden              break;              case 2:                            #line 72 "..\..\..\View\EditorDiffMarginControl.xaml"              ((System.Windows.Controls.Primitives.Popup)(target)).Opened += new System.EventHandler(this.Popup_OnOpened);                            #line default              #line hidden              break;              case 3:                            #line 75 "..\..\..\View\EditorDiffMarginControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.Popup_Close);                            #line default              #line hidden              break;              }
Missing Default,GitDiffMargin.View,EditorDiffMarginControl,D:\research\architectureSmells\repos\laurentkempe_GitDiffMargin\GitDiffMargin\View\EditorDiffMarginControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 50 "..\..\..\View\EditorDiffMarginControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Button_Click);                            #line default              #line hidden                            #line 51 "..\..\..\View\EditorDiffMarginControl.xaml"              ((System.Windows.Controls.Button)(target)).MouseDoubleClick += new System.Windows.Input.MouseButtonEventHandler(this.Button_MouseDoubleClick);                            #line default              #line hidden              break;              case 2:                            #line 72 "..\..\..\View\EditorDiffMarginControl.xaml"              ((System.Windows.Controls.Primitives.Popup)(target)).Opened += new System.EventHandler(this.Popup_OnOpened);                            #line default              #line hidden              break;              case 3:                            #line 75 "..\..\..\View\EditorDiffMarginControl.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.Popup_Close);                            #line default              #line hidden              break;              }
