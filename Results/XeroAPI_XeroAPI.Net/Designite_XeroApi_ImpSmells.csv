Implementation smell,Namespace,Class,File,Method,Description
Long Method,XeroApi.Linq,ApiQueryTranslator,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Linq\ApiQueryTranslator.cs,VisitBinary,The method has 108 lines of code.
Complex Method,XeroApi.Linq,ApiQueryTranslator,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Linq\ApiQueryTranslator.cs,VisitBinary,Cyclomatic complexity of the method is 13
Complex Method,XeroApi.Linq,TypeSystem,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Linq\TypeSystem.cs,FindIEnumerable,Cyclomatic complexity of the method is 10
Complex Method,XeroApi.Model,Address,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Model\Address.cs,ToString,Cyclomatic complexity of the method is 10
Complex Method,DevDefined.OAuth.Consumer,ConsumerRequest,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Consumer\ConsumerRequest.cs,ToWebRequest,Cyclomatic complexity of the method is 9
Complex Method,DevDefined.OAuth.Framework,OAuthContext,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Framework\OAuthContext.cs,GenerateSignatureBase,Cyclomatic complexity of the method is 8
Long Parameter List,XeroApi.Integration,IntegrationProxy,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Integration\IntegrationProxy.cs,CallApi,The method has 8 parameters. Parameters: method' body' baseUrl' endpointName' itemId' lastModifiedDate' additionalQueryParams' acceptMimeType
Long Parameter List,XeroApi.Integration,IntegrationProxy,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Integration\IntegrationProxy.cs,ConstructChildResourceUri,The method has 5 parameters. Parameters: baseUrl' endpointName' itemId' childResourceName' childResourceId
Long Parameter List,XeroApi.Linq,ExpressionVisitor,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Linq\ExpressionVisitor.cs,UpdateBinary,The method has 6 parameters. Parameters: binary' left' right' conversion' isLiftedToNull' method
Long Parameter List,XeroApi.OAuth,XeroApiPartnerSession,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\XeroApiPartnerSession.cs,XeroApiPartnerSession,The method has 5 parameters. Parameters: userAgent' consumerKey' signingCertificate' sslCertificate' tokenRepository
Long Identifier,DevDefined.OAuth.Framework,OAuthContext,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Framework\OAuthContext.cs,,The length of the parameter _authorizationHeaderParameters is 30.
Long Identifier,DevDefined.OAuth.Framework,OAuthProblems,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Framework\OAuthProblems.cs,,The length of the parameter AdditionalAuthorizationRequired is 31.
Long Identifier,DevDefined.OAuth.Framework,Parameters,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Framework\Parameters.cs,,The length of the parameter OAuth_Authorization_Expires_In is 30.
Long Identifier,DevDefined.OAuth.Framework,UriUtility,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Framework\UriUtility.cs,,The length of the parameter AuthorizationHeaderRealmParameter is 33.
Long Statement,XeroApi,MimeTypes,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\MimeTypes.cs,GetMimeType,The length of the statement  "            RegistryKey regKey = Registry.ClassesRoot.OpenSubKey(fileInfo.Extension.ToLower()' RegistryKeyPermissionCheck.ReadSubTree); " is 123.
Long Statement,XeroApi.Integration,IntegrationProxy,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Integration\IntegrationProxy.cs,UpdateOrCreateAttachment,The length of the statement  "            Uri uri = ConstructChildResourceUri(_oauthSession.ConsumerContext.BaseEndpointUri' endpointName' itemId' "Attachments"' attachment.FileName);" is 141.
Long Statement,XeroApi.Integration,IntegrationProxy,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Integration\IntegrationProxy.cs,CreateAttachment,The length of the statement  "            Uri uri = ConstructChildResourceUri(_oauthSession.ConsumerContext.BaseEndpointUri' endpointName' itemId' "Attachments"' attachment.FileName);" is 141.
Long Statement,XeroApi.Integration,IntegrationProxy,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Integration\IntegrationProxy.cs,FindAttachments,The length of the statement  "            Uri uri = ConstructChildResourceUri(_oauthSession.ConsumerContext.BaseEndpointUri' endpointName' itemId' "Attachments"' null);" is 126.
Long Statement,XeroApi.Integration,IntegrationProxy,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Integration\IntegrationProxy.cs,FindOneAttachment,The length of the statement  "            Uri uri = ConstructChildResourceUri(_oauthSession.ConsumerContext.BaseEndpointUri' endpointName' itemId' "Attachments"' attachmentIdOrFileName);" is 144.
Long Statement,XeroApi.Integration,IntegrationProxy,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Integration\IntegrationProxy.cs,ApplyAllocation,The length of the statement  "            Uri uri = ConstructChildResourceUri(_oauthSession.ConsumerContext.BaseEndpointUri' "CreditNotes"' creditNote.CreditNoteID.ToString()' "Allocations"' null); " is 155.
Long Statement,XeroApi.Linq,ApiQueryProvider,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Linq\ApiQueryProvider.cs,Execute,The length of the statement  "                ? (IModelList)Activator.CreateInstance(queryDescription.ElementListType)        // TODO: too much going on here' needs tidying up " is 129.
Long Statement,XeroApi.Linq,ApiQueryProvider,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Linq\ApiQueryProvider.cs,Execute,The length of the statement  "                    throw new NotImplementedException(string.Format("The client side aggregator {0} cannot currently be performed"' queryDescription.ClientSideExpression)); " is 152.
Long Statement,XeroApi.Linq,ApiQueryTranslator,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Linq\ApiQueryTranslator.cs,VisitMethodCall,The length of the statement  "            // If this is a method from a clr object' as opposed to an extension method'  the API server just might be able to support it. " is 126.
Long Statement,XeroApi.Linq,ApiQueryTranslator,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Linq\ApiQueryTranslator.cs,VisitMethodCall,The length of the statement  "            throw new NotImplementedException(string.Format("The method '{0}' can't currently be used in a XeroApi WHERE querystring."' m.Method.Name));" is 140.
Long Statement,XeroApi.Linq,ApiQueryTranslator,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Linq\ApiQueryTranslator.cs,VisitLambda,The length of the statement  "            // If there WHERE clause is (user => user.IsSubscriber)' this should be translated to (user => user.IsSubscriber == true) " is 121.
Long Statement,XeroApi.Linq,ApiQueryTranslator,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Linq\ApiQueryTranslator.cs,VisitMemberAccess,The length of the statement  "            throw new NotSupportedException(string.Format("The member '{0}' of type {1} is not supported"' m.Expression' m.Expression.NodeType));" is 133.
Long Statement,XeroApi.Linq,ApiQueryTranslator,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Linq\ApiQueryTranslator.cs,ParseExpression,The length of the statement  "                    throw new NotSupportedException(string.Format("Expression type {0} was not expected in this scenario"' expression.NodeType)); " is 125.
Long Statement,XeroApi.Linq,ApiQueryTranslator,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Linq\ApiQueryTranslator.cs,EvaluateToLiteral,The length of the statement  "                    return (string.Format("DateTime({0}'{1}'{2}'{3}'{4}'{5})"' date.Year' date.Month' date.Day' date.Hour' date.Minute' date.Second)); " is 130.
Long Statement,XeroApi.Linq,ExpressionVisitor,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Linq\ExpressionVisitor.cs,UpdateBinary,The length of the statement  "            if (left != binary.Left || right != binary.Right || conversion != binary.Conversion || method != binary.Method || isLiftedToNull != binary.IsLiftedToNull) " is 154.
Long Statement,XeroApi.Linq,QueryProvider,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Linq\QueryProvider.cs,CreateQuery,The length of the statement  "                return (IQueryable)Activator.CreateInstance(typeof(ApiQuery<>).MakeGenericType(elementType)' new object[] { this' expression }); " is 128.
Long Statement,XeroApi.Model,ModelTreeNavigator,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Model\ModelTreeNavigator.cs,WriteClass,The length of the statement  "            foreach (PropertyInfo property in propertiesToSerialise.Where(prop => FindAttributeOnProperty<XmlAttributeAttribute>(prop) != null)) " is 132.
Long Statement,XeroApi.Model,ModelTreeNavigator,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Model\ModelTreeNavigator.cs,WriteClass,The length of the statement  "            foreach (PropertyInfo property in propertiesToSerialise.Where(prop => FindAttributeOnProperty<XmlAttributeAttribute>(prop) == null)) " is 132.
Long Statement,XeroApi.Model,ModelTreeNavigator,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Model\ModelTreeNavigator.cs,WritePropertyAsAttribute,The length of the statement  "            throw new SerializationException(string.Format("The property type {0} cannot be serialised as an attribute"' propType.Name)); " is 125.
Long Statement,XeroApi.Model,ModelTypeHelper,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Model\ModelTypeHelper.cs,GetModelItemId,The length of the statement  "            PropertyInfo itemIdProperty = typeof (TModel).GetProperties().FirstOrDefault(prop => prop.HasAttribute(typeof (ItemIdAttribute))); " is 130.
Long Statement,XeroApi.Model,ModelTypeHelper,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Model\ModelTypeHelper.cs,GetModelItemId,The length of the statement  "                throw new ArgumentException("The model type '' does not have an [ItemId] attribute specified on one of it's properties"); " is 121.
Long Statement,DevDefined.OAuth.Consumer,DefaultConsumerRequestRunner,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Consumer\ConsumerRequestRunner.cs,Run,The length of the statement  "                        throw new WebException(String.Format("{0} Check that {1} has permission to read the following certificates: {2}"' webEx.Message' userId' certString)); " is 150.
Long Statement,DevDefined.OAuth.Consumer,DefaultConsumerRequestRunner,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Consumer\ConsumerRequestRunner.cs,Run,The length of the statement  "                    throw new ApplicationException("An HttpWebResponse could not be obtained from the WebException. Status was " + webEx.Status' webEx); " is 132.
Long Statement,DevDefined.OAuth.Consumer,OAuthConsumerContext,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Consumer\OAuthConsumerContext.cs,SignContext,The length of the statement  "      _signer.SignContext(context' new SigningContext{Algorithm = Key' SignatureBase = signatureBase' ConsumerSecret = ConsumerSecret}); " is 130.
Long Statement,DevDefined.OAuth.Consumer,OAuthSession,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Consumer\OAuthSession.cs,AssertValidAccessToken,The length of the statement  "        Debug.WriteLine(string.Format("Access token {0} will last for {1} and will expire at {2} UTC."' token.Token' usableTimespan' expiryDateString)); " is 144.
Long Statement,DevDefined.OAuth.Consumer,OAuthSession,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Consumer\OAuthSession.cs,RunConsumerRequest,The length of the statement  "                throw new AuthenticationException(string.Format("The API server returned http {0} with content type {1}. See the inner exception for more details."' (int)consumerResponse.ResponseCode' consumerResponse.ContentType)' consumerResponse.WebException); " is 247.
Long Statement,DevDefined.OAuth.Consumer,WebExceptionHelper,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Consumer\WebExceptionHelper.cs,TryWrapException,The length of the statement  "          authException = new OAuthException(report.ProblemAdvice ?? report.Problem' webEx) {Context = requestContext' Report = report}; " is 126.
Long Statement,DevDefined.OAuth.Logging,DebugMessageLogger,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Logging\DebugMessageLogger.cs,LogMessage,The length of the statement  "            System.Diagnostics.Debug.WriteLine(string.Format("{0} {1}"' request.Context.RequestMethod' request.Context.GenerateUrl())); " is 123.
Long Statement,DevDefined.OAuth.Logging,DebugMessageLogger,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Logging\DebugMessageLogger.cs,LogMessage,The length of the statement  "                (int)response.ResponseCode' response.ResponseCode' response.ContentType' response.ContentLength' response.TimeTaken.TotalSeconds)); " is 131.
Long Statement,DevDefined.OAuth.Logging,DebugMessageLogger,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Logging\DebugMessageLogger.cs,LogMessage,The length of the statement  "                System.Diagnostics.Debug.WriteLine(string.Concat("Response body starts:"' (response.Content.Length > 100) ? response.Content.Substring(0' 100) : response.Content)); " is 164.
Long Statement,DevDefined.OAuth.Framework,Error,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Framework\Error.cs,ForRsaSha1SignatureMethodYouMustSupplyAssymetricKeyParameter,The length of the statement  "          "For the RSASSA-PKCS1-v1_5 signature method you must use the constructor which takes an additional AssymetricAlgorithm \"key\" parameter"); " is 139.
Long Statement,DevDefined.OAuth.Framework,Error,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Framework\Error.cs,RejectedRequiredOAuthParameter,The length of the statement  "      return new OAuthException(context' OAuthProblems.ParameterRejected' string.Format("The parameter \"{0}\" was rejected"' parameter)); " is 132.
Long Statement,DevDefined.OAuth.Framework,Error,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Framework\Error.cs,UnknownToken,The length of the statement  "      return new OAuthException(context' OAuthProblems.TokenRejected' string.Format("Unknown or previously rejected token \"{0}\""' token)); " is 134.
Long Statement,DevDefined.OAuth.Framework,Error,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Framework\Error.cs,UnknownToken,The length of the statement  "      return new OAuthException(context' OAuthProblems.TokenRejected' string.Format("Unknown or previously rejected token \"{0}\""' token)' exception); " is 145.
Long Statement,DevDefined.OAuth.Framework,Error,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Framework\Error.cs,RequestForTokenMustNotIncludeTokenInContext,The length of the statement  "      throw new OAuthException(context' OAuthProblems.ParameterRejected' "When obtaining a request token' you must not supply the oauth_token parameter"); " is 148.
Long Statement,DevDefined.OAuth.Framework,Error,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Framework\Error.cs,IfModifiedSinceHeaderOutOfRange,The length of the statement  "          return new ArgumentOutOfRangeException("ifModifiedSince"' string.Format("Supplied value of If-Modified-Since header is too small: {0}"' ifModifiedSince.ToString("s"))); " is 168.
Long Statement,DevDefined.OAuth.Framework,OAuthContext,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Framework\OAuthContext.cs,GenerateSignatureBase,The length of the statement  "      //fix for issue: http://groups.google.com/group/oauth/browse_thread/thread/42ef5fecc54a7e9a/a54e92b13888056c?hl=en&lnk=gst&q=Signing+PUT+Request#a54e92b13888056c " is 161.
Long Statement,DevDefined.OAuth.Framework,OAuthContext,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Framework\OAuthContext.cs,GenerateSignatureBase,The length of the statement  "        allParameters.AddRange(AuthorizationHeaderParameters.ToQueryParametersExcludingTokenSecret().Where(q => q.Key != Parameters.Realm)); " is 132.
Complex Conditional,XeroApi.Linq,ExpressionVisitor,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Linq\ExpressionVisitor.cs,UpdateBinary,The conditional expression  "left != binary.Left || right != binary.Right || conversion != binary.Conversion || method != binary.Method || isLiftedToNull != binary.IsLiftedToNull"  is complex.
Complex Conditional,DevDefined.OAuth.Framework,UriUtility,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Framework\UriUtility.cs,NormalizeUri,The conditional expression  "!((uri.Scheme == "http" && uri.Port == 80) ||              (uri.Scheme == "https" && uri.Port == 443))"  is complex.
Empty Catch Block,DevDefined.OAuth.Consumer,WebExceptionHelper,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Consumer\WebExceptionHelper.cs,TryWrapException,The method has an empty catch block.
Magic Number,XeroApi.Model,PaymentTermBase,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Model\PaymentTermBase.cs,ToString,The following statement contains a magic number: switch (Day)              {                  case 1:                  case 21:                  case 31:                      suffix = "st";                      break;                  case 2:                  case 22:                      suffix = "nd";                      break;                  case 3:                  case 23:                      suffix = "rd";                      break;                  default:                      suffix = "th";                      break;              }
Magic Number,XeroApi.Model,PaymentTermBase,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Model\PaymentTermBase.cs,ToString,The following statement contains a magic number: switch (Day)              {                  case 1:                  case 21:                  case 31:                      suffix = "st";                      break;                  case 2:                  case 22:                      suffix = "nd";                      break;                  case 3:                  case 23:                      suffix = "rd";                      break;                  default:                      suffix = "th";                      break;              }
Magic Number,XeroApi.Model,PaymentTermBase,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Model\PaymentTermBase.cs,ToString,The following statement contains a magic number: switch (Day)              {                  case 1:                  case 21:                  case 31:                      suffix = "st";                      break;                  case 2:                  case 22:                      suffix = "nd";                      break;                  case 3:                  case 23:                      suffix = "rd";                      break;                  default:                      suffix = "th";                      break;              }
Magic Number,XeroApi.Model,PaymentTermBase,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Model\PaymentTermBase.cs,ToString,The following statement contains a magic number: switch (Day)              {                  case 1:                  case 21:                  case 31:                      suffix = "st";                      break;                  case 2:                  case 22:                      suffix = "nd";                      break;                  case 3:                  case 23:                      suffix = "rd";                      break;                  default:                      suffix = "th";                      break;              }
Magic Number,XeroApi.Model,PaymentTermBase,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Model\PaymentTermBase.cs,ToString,The following statement contains a magic number: switch (Day)              {                  case 1:                  case 21:                  case 31:                      suffix = "st";                      break;                  case 2:                  case 22:                      suffix = "nd";                      break;                  case 3:                  case 23:                      suffix = "rd";                      break;                  default:                      suffix = "th";                      break;              }
Magic Number,XeroApi.Model,PaymentTermBase,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Model\PaymentTermBase.cs,ToString,The following statement contains a magic number: switch (Day)              {                  case 1:                  case 21:                  case 31:                      suffix = "st";                      break;                  case 2:                  case 22:                      suffix = "nd";                      break;                  case 3:                  case 23:                      suffix = "rd";                      break;                  default:                      suffix = "th";                      break;              }
Magic Number,DevDefined.OAuth.Consumer,ConsumerRequest,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Consumer\ConsumerRequest.cs,ToWebRequest,The following statement contains a magic number: request.Timeout = (int) TimeSpan.FromMinutes(3).TotalMilliseconds;
Magic Number,DevDefined.OAuth.Consumer,ConsumerRequest,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Consumer\ConsumerRequest.cs,AssertValidIfModifiedSinceDate,The following statement contains a magic number: if (date < new DateTime(1753' 01' 01))              {                  throw Error.IfModifiedSinceHeaderOutOfRange(date);              }
Magic Number,DevDefined.OAuth.Consumer,OAuthSession,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Consumer\OAuthSession.cs,RunConsumerRequest,The following statement contains a magic number: int retryCounter = 2;
Magic Number,DevDefined.OAuth.Logging,DebugMessageLogger,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Logging\DebugMessageLogger.cs,LogMessage,The following statement contains a magic number: if (!string.IsNullOrEmpty(response.Content))              {                  System.Diagnostics.Debug.WriteLine(string.Concat("Response body starts:"' (response.Content.Length > 100) ? response.Content.Substring(0' 100) : response.Content));              }
Magic Number,DevDefined.OAuth.Logging,DebugMessageLogger,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Logging\DebugMessageLogger.cs,LogMessage,The following statement contains a magic number: if (!string.IsNullOrEmpty(response.Content))              {                  System.Diagnostics.Debug.WriteLine(string.Concat("Response body starts:"' (response.Content.Length > 100) ? response.Content.Substring(0' 100) : response.Content));              }
Magic Number,DevDefined.OAuth.Storage.Basic,AccessToken,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Utility\Storage\Basic\AccessToken.cs,HasExpired,The following statement contains a magic number: return HasExpired(new TimeSpan(0' 0' 15));
Magic Number,DevDefined.OAuth.Utility,StreamExtensions,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Utility\StreamExtensions.cs,CopyTo,The following statement contains a magic number: byte[] buffer = new byte[1024];
Magic Number,DevDefined.OAuth.Framework,DateTimeUtility,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Framework\DateTimeUtility.cs,Epoch,The following statement contains a magic number: return (long) (d.ToUniversalTime() - new DateTime(1970' 1' 1)).TotalSeconds;
Magic Number,DevDefined.OAuth.Framework,DateTimeUtility,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Framework\DateTimeUtility.cs,FromEpoch,The following statement contains a magic number: var d = new DateTime(1970' 1' 1);
Magic Number,DevDefined.OAuth.Framework,UriUtility,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Framework\UriUtility.cs,StripQuotes,The following statement contains a magic number: foreach (string quoteCharacter in QuoteCharacters)        {          if (quotedValue.StartsWith(quoteCharacter) && quotedValue.EndsWith(quoteCharacter) && quotedValue.Length > 1)          {            return quotedValue.Substring(1' quotedValue.Length - 2);          }        }
Magic Number,DevDefined.OAuth.Framework,UriUtility,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Framework\UriUtility.cs,NormalizeUri,The following statement contains a magic number: if (!((uri.Scheme == "http" && uri.Port == 80) ||              (uri.Scheme == "https" && uri.Port == 443)))        {          normalizedUrl += ":" + uri.Port;        }
Magic Number,DevDefined.OAuth.Framework,UriUtility,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\OAuth\Framework\UriUtility.cs,NormalizeUri,The following statement contains a magic number: if (!((uri.Scheme == "http" && uri.Port == 80) ||              (uri.Scheme == "https" && uri.Port == 443)))        {          normalizedUrl += ":" + uri.Port;        }
Missing Default,XeroApi.Linq,LinqQueryDescription,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Linq\LinqQueryDescription.cs,AppendTerm,The following switch statement is missing a default case: switch (querystringName)              {                  case ApiQuerystringName.Where:                        if (_lastWhereTerm == ")" && term == "(")                          _whereQuery.Append(" AND ");                        _whereQuery.Append(term);                        _lastWhereTerm = term;                        break;                    case ApiQuerystringName.OrderBy:                        if (_orderQuery.Length > 0 && term.Trim() != "DESC")                          _orderQuery.Append("' ");                        _orderQuery.Append(term);                                            break;                    case ApiQuerystringName.Skip:                      _skipQuery.Remove(0' _skipQuery.Length);                      _skipQuery/*.Append("offset=")*/.Append(term);                      break;                                        case ApiQuerystringName.Unknown:                      throw new NotImplementedException("Not sure what to do with: " + term);                }
Missing Default,XeroApi.Linq,ApiQueryTranslator,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Linq\ApiQueryTranslator.cs,VisitMethodCall,The following switch statement is missing a default case: switch (m.Method.Name)             {                 case "Where":                      using (new QuerystringScope(this' ApiQuerystringName.Where))                     {                         return base.VisitMethodCall(m);                     }                  case "FirstOrDefault":                 case "First":                 case "SingleOrDefault":                 case "Single":                      if (!string.IsNullOrEmpty(_query.ClientSideExpression) && !_query.ClientSideExpression.Equals(m.Method.Name))                     {                         throw new NotImplementedException("Only 1 aggregator expression can currently be performed.");                     }                      _query.ClientSideExpression = m.Method.Name;                      using (new QuerystringScope(this' ApiQuerystringName.Where))                     {                         return base.VisitMethodCall(m);                     }                  case "Count":                      if (!string.IsNullOrEmpty(_query.ClientSideExpression) && !_query.ClientSideExpression.Equals(m.Method.Name))                     {                         throw new NotImplementedException("Only 1 aggregator expression can currently be performed.");                     }                      _query.ClientSideExpression = m.Method.Name;                     return base.VisitMethodCall(m);                                      case "OrderBy":                 case "ThenBy":                      using (new QuerystringScope(this' ApiQuerystringName.OrderBy))                     {                         return base.VisitMethodCall(m);                     }                                      case "OrderByDescending":                 case "ThenByDescending":                      using (new QuerystringScope(this' ApiQuerystringName.OrderBy))                     {                         var expression = base.VisitMethodCall(m);                         Append(" DESC");                         return expression;                     }                                  case "Skip":                     using (new QuerystringScope(this' ApiQuerystringName.Skip))                     {                         return base.VisitMethodCall(m);                     }             }
Missing Default,XeroApi.Linq,ApiQueryTranslator,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Linq\ApiQueryTranslator.cs,VisitMethodCall,The following switch statement is missing a default case: switch (rootExpressionType)              {                  case ExpressionType.Constant:                      Append(EvaluateToLiteral(m));                      return m;                    case ExpressionType.Parameter:                      Append(ParseExpression(m));                      return m;              }
Missing Default,XeroApi.Linq,ApiQueryTranslator,C:\repos\XeroAPI_XeroAPI.Net\source\XeroApi\Linq\ApiQueryTranslator.cs,EvaluateToLiteral,The following switch statement is missing a default case: switch (exp.Type.Name)              {                  case "DateTime":                      DateTime date = EvaluateExpression<DateTime>(exp);                        if (date.Date == date)                          return (string.Format("DateTime({0}'{1}'{2})"' date.Year' date.Month' date.Day));                                                return (string.Format("DateTime({0}'{1}'{2}'{3}'{4}'{5})"' date.Year' date.Month' date.Day' date.Hour' date.Minute' date.Second));                    case "Guid":                      Guid guid = EvaluateExpression<Guid>(exp);                        if (guid == Guid.Empty)                          return ("Guid.Empty");                                            return (string.Format("Guid(\"{0}\")"' guid));                    case "String":                      string stringValue = EvaluateExpression<string>(exp);                        if (stringValue == null)                          return ("null");                                            return string.Format("\"{0}\""' stringValue);                    case "Int32":                      int shortValue = EvaluateExpression<int>(exp);                      return string.Format("\"{0}\""' shortValue);                    case "Int64":                      long longValue = EvaluateExpression<long>(exp);                      return string.Format("\"{0}\""' longValue);              }
