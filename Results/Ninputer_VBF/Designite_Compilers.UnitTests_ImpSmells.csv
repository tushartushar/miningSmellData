Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Compilers.UnitTests,ParserBuilderTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ParserBuilderTest.cs,ParserErrorRecoveryTest,The length of the statement  "            SyntaxErrors errDef = new SyntaxErrors() { TokenUnexpectedId = 1' TokenMissingId = 2' OtherErrorId = 4' TokenMistakeId = 3 };" is 125.
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,EditDistanceGeneralTest1,The following statement contains a magic number: Assert.AreEqual(3' ed);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,EditDistanceGeneralTest2,The following statement contains a magic number: Assert.AreEqual(6' ed);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueDecreaseKeyTest,The following statement contains a magic number: var minpq = new PriorityQueue<float>(new[] { 0.3f' 0.7f' 0.1f' 0.4f' 0.5f' 0.2f' 0.9f' 0.6f }' ExtremeType.Minimum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueDecreaseKeyTest,The following statement contains a magic number: var minpq = new PriorityQueue<float>(new[] { 0.3f' 0.7f' 0.1f' 0.4f' 0.5f' 0.2f' 0.9f' 0.6f }' ExtremeType.Minimum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueDecreaseKeyTest,The following statement contains a magic number: var minpq = new PriorityQueue<float>(new[] { 0.3f' 0.7f' 0.1f' 0.4f' 0.5f' 0.2f' 0.9f' 0.6f }' ExtremeType.Minimum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueDecreaseKeyTest,The following statement contains a magic number: var minpq = new PriorityQueue<float>(new[] { 0.3f' 0.7f' 0.1f' 0.4f' 0.5f' 0.2f' 0.9f' 0.6f }' ExtremeType.Minimum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueDecreaseKeyTest,The following statement contains a magic number: var minpq = new PriorityQueue<float>(new[] { 0.3f' 0.7f' 0.1f' 0.4f' 0.5f' 0.2f' 0.9f' 0.6f }' ExtremeType.Minimum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueDecreaseKeyTest,The following statement contains a magic number: var minpq = new PriorityQueue<float>(new[] { 0.3f' 0.7f' 0.1f' 0.4f' 0.5f' 0.2f' 0.9f' 0.6f }' ExtremeType.Minimum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueDecreaseKeyTest,The following statement contains a magic number: var minpq = new PriorityQueue<float>(new[] { 0.3f' 0.7f' 0.1f' 0.4f' 0.5f' 0.2f' 0.9f' 0.6f }' ExtremeType.Minimum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueDecreaseKeyTest,The following statement contains a magic number: var minpq = new PriorityQueue<float>(new[] { 0.3f' 0.7f' 0.1f' 0.4f' 0.5f' 0.2f' 0.9f' 0.6f }' ExtremeType.Minimum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueDecreaseKeyTest,The following statement contains a magic number: Assert.AreEqual(0.1f' minpq.PeekExtreme());
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueDecreaseKeyTest,The following statement contains a magic number: minpq.ModifyValue(0.4f' 0.01f);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueDecreaseKeyTest,The following statement contains a magic number: minpq.ModifyValue(0.4f' 0.01f);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueDecreaseKeyTest,The following statement contains a magic number: Assert.AreEqual(0.01f' minpq.PeekExtreme());
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueDecreaseKeyTest,The following statement contains a magic number: minpq.ModifyValue(0.01f' 0.001f);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueDecreaseKeyTest,The following statement contains a magic number: minpq.ModifyValue(0.01f' 0.001f);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueDecreaseKeyTest,The following statement contains a magic number: Assert.AreEqual(0.001f' minpq.PeekExtreme());
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueDuplicateElementsTest,The following statement contains a magic number: var values = new[] { 3' 3' 3' 5' 3' 3' 3' 3 };
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueDuplicateElementsTest,The following statement contains a magic number: var values = new[] { 3' 3' 3' 5' 3' 3' 3' 3 };
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueDuplicateElementsTest,The following statement contains a magic number: var values = new[] { 3' 3' 3' 5' 3' 3' 3' 3 };
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueDuplicateElementsTest,The following statement contains a magic number: var values = new[] { 3' 3' 3' 5' 3' 3' 3' 3 };
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueDuplicateElementsTest,The following statement contains a magic number: var values = new[] { 3' 3' 3' 5' 3' 3' 3' 3 };
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueDuplicateElementsTest,The following statement contains a magic number: var values = new[] { 3' 3' 3' 5' 3' 3' 3' 3 };
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueDuplicateElementsTest,The following statement contains a magic number: var values = new[] { 3' 3' 3' 5' 3' 3' 3' 3 };
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueDuplicateElementsTest,The following statement contains a magic number: var values = new[] { 3' 3' 3' 5' 3' 3' 3' 3 };
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueDuplicateElementsTest,The following statement contains a magic number: Assert.AreEqual(5' maxpq.DeleteExtreme());
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueDuplicateElementsTest,The following statement contains a magic number: Assert.AreEqual(3' curr);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueIncreaseKeyTest,The following statement contains a magic number: var minpq = new PriorityQueue<float>(new[] { 0.3f' 0.7f' 0.1f' 0.4f' 0.5f' 0.2f' 0.9f' 0.6f }' ExtremeType.Minimum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueIncreaseKeyTest,The following statement contains a magic number: var minpq = new PriorityQueue<float>(new[] { 0.3f' 0.7f' 0.1f' 0.4f' 0.5f' 0.2f' 0.9f' 0.6f }' ExtremeType.Minimum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueIncreaseKeyTest,The following statement contains a magic number: var minpq = new PriorityQueue<float>(new[] { 0.3f' 0.7f' 0.1f' 0.4f' 0.5f' 0.2f' 0.9f' 0.6f }' ExtremeType.Minimum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueIncreaseKeyTest,The following statement contains a magic number: var minpq = new PriorityQueue<float>(new[] { 0.3f' 0.7f' 0.1f' 0.4f' 0.5f' 0.2f' 0.9f' 0.6f }' ExtremeType.Minimum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueIncreaseKeyTest,The following statement contains a magic number: var minpq = new PriorityQueue<float>(new[] { 0.3f' 0.7f' 0.1f' 0.4f' 0.5f' 0.2f' 0.9f' 0.6f }' ExtremeType.Minimum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueIncreaseKeyTest,The following statement contains a magic number: var minpq = new PriorityQueue<float>(new[] { 0.3f' 0.7f' 0.1f' 0.4f' 0.5f' 0.2f' 0.9f' 0.6f }' ExtremeType.Minimum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueIncreaseKeyTest,The following statement contains a magic number: var minpq = new PriorityQueue<float>(new[] { 0.3f' 0.7f' 0.1f' 0.4f' 0.5f' 0.2f' 0.9f' 0.6f }' ExtremeType.Minimum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueIncreaseKeyTest,The following statement contains a magic number: var minpq = new PriorityQueue<float>(new[] { 0.3f' 0.7f' 0.1f' 0.4f' 0.5f' 0.2f' 0.9f' 0.6f }' ExtremeType.Minimum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueIncreaseKeyTest,The following statement contains a magic number: Assert.AreEqual(0.1f' minpq.PeekExtreme());
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueIncreaseKeyTest,The following statement contains a magic number: minpq.ModifyValue(0.4f' 0.55f);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueIncreaseKeyTest,The following statement contains a magic number: minpq.ModifyValue(0.4f' 0.55f);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueIncreaseKeyTest,The following statement contains a magic number: Assert.AreEqual(0.1f' minpq.PeekExtreme());
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueIncreaseKeyTest,The following statement contains a magic number: minpq.ModifyValue(0.1f' 0.22f);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueIncreaseKeyTest,The following statement contains a magic number: minpq.ModifyValue(0.1f' 0.22f);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueIncreaseKeyTest,The following statement contains a magic number: Assert.AreEqual(0.2f' minpq.PeekExtreme());
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueIncreaseKeyTest,The following statement contains a magic number: minpq.ModifyValue(0.5f' 500f);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueIncreaseKeyTest,The following statement contains a magic number: minpq.ModifyValue(0.5f' 500f);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueIncreaseKeyTest,The following statement contains a magic number: minpq.Insert(100f);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueIncreaseKeyTest,The following statement contains a magic number: minpq.Insert(501f);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueIncreaseKeyTest,The following statement contains a magic number: Assert.AreNotEqual(0.4f' curr);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueInsertTest,The following statement contains a magic number: var values = new[] { 3' 7' 1' 4' 5' 2' 9' 6 };
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueInsertTest,The following statement contains a magic number: var values = new[] { 3' 7' 1' 4' 5' 2' 9' 6 };
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueInsertTest,The following statement contains a magic number: var values = new[] { 3' 7' 1' 4' 5' 2' 9' 6 };
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueInsertTest,The following statement contains a magic number: var values = new[] { 3' 7' 1' 4' 5' 2' 9' 6 };
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueInsertTest,The following statement contains a magic number: var values = new[] { 3' 7' 1' 4' 5' 2' 9' 6 };
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueInsertTest,The following statement contains a magic number: var values = new[] { 3' 7' 1' 4' 5' 2' 9' 6 };
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueInsertTest,The following statement contains a magic number: var values = new[] { 3' 7' 1' 4' 5' 2' 9' 6 };
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueInsertTest,The following statement contains a magic number: Assert.AreEqual(9' maxpq.DeleteExtreme());
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueInsertTest,The following statement contains a magic number: maxpq.Insert(8);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueMaxTest,The following statement contains a magic number: var maxpq = new PriorityQueue<int>(new[] { 3' 7' 1' 4' 5' 2' 9' 6 }' ExtremeType.Maximum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueMaxTest,The following statement contains a magic number: var maxpq = new PriorityQueue<int>(new[] { 3' 7' 1' 4' 5' 2' 9' 6 }' ExtremeType.Maximum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueMaxTest,The following statement contains a magic number: var maxpq = new PriorityQueue<int>(new[] { 3' 7' 1' 4' 5' 2' 9' 6 }' ExtremeType.Maximum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueMaxTest,The following statement contains a magic number: var maxpq = new PriorityQueue<int>(new[] { 3' 7' 1' 4' 5' 2' 9' 6 }' ExtremeType.Maximum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueMaxTest,The following statement contains a magic number: var maxpq = new PriorityQueue<int>(new[] { 3' 7' 1' 4' 5' 2' 9' 6 }' ExtremeType.Maximum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueMaxTest,The following statement contains a magic number: var maxpq = new PriorityQueue<int>(new[] { 3' 7' 1' 4' 5' 2' 9' 6 }' ExtremeType.Maximum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueMaxTest,The following statement contains a magic number: var maxpq = new PriorityQueue<int>(new[] { 3' 7' 1' 4' 5' 2' 9' 6 }' ExtremeType.Maximum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueMinFloatTest,The following statement contains a magic number: var minpq = new PriorityQueue<float>(new[] { 0.3f' 0.7f' 0.1f' 0.4f' 0.5f' 0.2f' 0.9f' 0.6f }' ExtremeType.Minimum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueMinFloatTest,The following statement contains a magic number: var minpq = new PriorityQueue<float>(new[] { 0.3f' 0.7f' 0.1f' 0.4f' 0.5f' 0.2f' 0.9f' 0.6f }' ExtremeType.Minimum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueMinFloatTest,The following statement contains a magic number: var minpq = new PriorityQueue<float>(new[] { 0.3f' 0.7f' 0.1f' 0.4f' 0.5f' 0.2f' 0.9f' 0.6f }' ExtremeType.Minimum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueMinFloatTest,The following statement contains a magic number: var minpq = new PriorityQueue<float>(new[] { 0.3f' 0.7f' 0.1f' 0.4f' 0.5f' 0.2f' 0.9f' 0.6f }' ExtremeType.Minimum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueMinFloatTest,The following statement contains a magic number: var minpq = new PriorityQueue<float>(new[] { 0.3f' 0.7f' 0.1f' 0.4f' 0.5f' 0.2f' 0.9f' 0.6f }' ExtremeType.Minimum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueMinFloatTest,The following statement contains a magic number: var minpq = new PriorityQueue<float>(new[] { 0.3f' 0.7f' 0.1f' 0.4f' 0.5f' 0.2f' 0.9f' 0.6f }' ExtremeType.Minimum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueMinFloatTest,The following statement contains a magic number: var minpq = new PriorityQueue<float>(new[] { 0.3f' 0.7f' 0.1f' 0.4f' 0.5f' 0.2f' 0.9f' 0.6f }' ExtremeType.Minimum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueMinFloatTest,The following statement contains a magic number: var minpq = new PriorityQueue<float>(new[] { 0.3f' 0.7f' 0.1f' 0.4f' 0.5f' 0.2f' 0.9f' 0.6f }' ExtremeType.Minimum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueMinTest,The following statement contains a magic number: var minpq = new PriorityQueue<int>(new[] { 3' 7' 1' 4' 5' 2' 9' 6 }' ExtremeType.Minimum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueMinTest,The following statement contains a magic number: var minpq = new PriorityQueue<int>(new[] { 3' 7' 1' 4' 5' 2' 9' 6 }' ExtremeType.Minimum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueMinTest,The following statement contains a magic number: var minpq = new PriorityQueue<int>(new[] { 3' 7' 1' 4' 5' 2' 9' 6 }' ExtremeType.Minimum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueMinTest,The following statement contains a magic number: var minpq = new PriorityQueue<int>(new[] { 3' 7' 1' 4' 5' 2' 9' 6 }' ExtremeType.Minimum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueMinTest,The following statement contains a magic number: var minpq = new PriorityQueue<int>(new[] { 3' 7' 1' 4' 5' 2' 9' 6 }' ExtremeType.Minimum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueMinTest,The following statement contains a magic number: var minpq = new PriorityQueue<int>(new[] { 3' 7' 1' 4' 5' 2' 9' 6 }' ExtremeType.Minimum);
Magic Number,Compilers.UnitTests,CommonTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\CommonTests.cs,PriorityQueueMinTest,The following statement contains a magic number: var minpq = new PriorityQueue<int>(new[] { 3' 7' 1' 4' 5' 2' 9' 6 }' ExtremeType.Minimum);
Magic Number,Compilers.UnitTests,GrammarTests,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\GrammarTests.cs,AmbiguityGrammarAggregationTest,The following statement contains a magic number: Assert.AreEqual(5' resarr.Length);
Magic Number,Compilers.UnitTests,ParserBuilderTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ParserBuilderTest.cs,MultipleLexerParsingTest,The following statement contains a magic number: errorManager.DefineError(2' 0' CompilationStage.Parsing' "Missing token '{0}'");
Magic Number,Compilers.UnitTests,ParserBuilderTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ParserBuilderTest.cs,MultipleLexerParsingTest,The following statement contains a magic number: errorManager.DefineError(3' 0' CompilationStage.Parsing' "Syntax error");
Magic Number,Compilers.UnitTests,ParserBuilderTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ParserBuilderTest.cs,MultipleLexerParsingTest,The following statement contains a magic number: SyntaxErrors errDef = new SyntaxErrors() { TokenUnexpectedId = 1' TokenMissingId = 2' OtherErrorId = 3 };
Magic Number,Compilers.UnitTests,ParserBuilderTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ParserBuilderTest.cs,MultipleLexerParsingTest,The following statement contains a magic number: SyntaxErrors errDef = new SyntaxErrors() { TokenUnexpectedId = 1' TokenMissingId = 2' OtherErrorId = 3 };
Magic Number,Compilers.UnitTests,ParserBuilderTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ParserBuilderTest.cs,ParserDriverConflictTest,The following statement contains a magic number: T.Rule =                 from x in X                 select (object)2;
Magic Number,Compilers.UnitTests,ParserBuilderTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ParserBuilderTest.cs,ParserDriverConflictTest,The following statement contains a magic number: Assert.AreEqual(2' driver.AcceptedCount);
Magic Number,Compilers.UnitTests,ParserBuilderTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ParserBuilderTest.cs,ParserDriverConflictTest,The following statement contains a magic number: Assert.IsTrue(results.Contains(8));
Magic Number,Compilers.UnitTests,ParserBuilderTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ParserBuilderTest.cs,ParserDriverConflictTest,The following statement contains a magic number: Assert.IsTrue(results.Contains(6));
Magic Number,Compilers.UnitTests,ParserBuilderTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ParserBuilderTest.cs,ParserDriverSimpleTest,The following statement contains a magic number: Assert.AreEqual(3' driver.GetResult(0' null));
Magic Number,Compilers.UnitTests,ParserBuilderTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ParserBuilderTest.cs,ParserErrorRecoveryTest,The following statement contains a magic number: errorManager.DefineError(2' 0' CompilationStage.Parsing' "Missing token '{0}'");
Magic Number,Compilers.UnitTests,ParserBuilderTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ParserBuilderTest.cs,ParserErrorRecoveryTest,The following statement contains a magic number: errorManager.DefineError(3' 0' CompilationStage.Parsing' "Invalid token found' did you mean '{0}' ?");
Magic Number,Compilers.UnitTests,ParserBuilderTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ParserBuilderTest.cs,ParserErrorRecoveryTest,The following statement contains a magic number: errorManager.DefineError(4' 0' CompilationStage.Parsing' "Syntax error");
Magic Number,Compilers.UnitTests,ParserBuilderTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ParserBuilderTest.cs,ParserErrorRecoveryTest,The following statement contains a magic number: SyntaxErrors errDef = new SyntaxErrors() { TokenUnexpectedId = 1' TokenMissingId = 2' OtherErrorId = 4' TokenMistakeId = 3 };
Magic Number,Compilers.UnitTests,ParserBuilderTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ParserBuilderTest.cs,ParserErrorRecoveryTest,The following statement contains a magic number: SyntaxErrors errDef = new SyntaxErrors() { TokenUnexpectedId = 1' TokenMissingId = 2' OtherErrorId = 4' TokenMistakeId = 3 };
Magic Number,Compilers.UnitTests,ParserBuilderTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ParserBuilderTest.cs,ParserErrorRecoveryTest,The following statement contains a magic number: SyntaxErrors errDef = new SyntaxErrors() { TokenUnexpectedId = 1' TokenMissingId = 2' OtherErrorId = 4' TokenMistakeId = 3 };
Magic Number,Compilers.UnitTests,ParserBuilderTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ParserBuilderTest.cs,ProductionInfoManagerTest,The following statement contains a magic number: Assert.AreEqual(xInfo.First.Count' 2);
Magic Number,Compilers.UnitTests,ParserBuilderTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ParserBuilderTest.cs,ProductionInfoManagerTest,The following statement contains a magic number: Assert.AreEqual(xInfo.Follow.Count' 3);
Magic Number,Compilers.UnitTests,ParserBuilderTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ParserBuilderTest.cs,ProductionInfoManagerTest,The following statement contains a magic number: Assert.AreEqual(yInfo.Follow.Count' 3);
Magic Number,Compilers.UnitTests,ParserBuilderTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ParserBuilderTest.cs,ProductionInfoManagerTest,The following statement contains a magic number: Assert.AreEqual(zInfo.First.Count' 3);
Magic Number,Compilers.UnitTests,ParserBuilderTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ParserBuilderTest.cs,WhereGrammaTest,The following statement contains a magic number: var p1 = from i in ID                 from g in GREATER                 from g2 in GREATER                 where Grammar.Check(g2.PrefixTrivia.Count == 0' 4' g2.Value.Span)                 from n in NUM                 select "A";
Magic Number,Compilers.UnitTests,ParserBuilderTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ParserBuilderTest.cs,WhereGrammaTest,The following statement contains a magic number: errorManager.DefineError(2' 0' CompilationStage.Parsing' "Missing token '{0}'");
Magic Number,Compilers.UnitTests,ParserBuilderTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ParserBuilderTest.cs,WhereGrammaTest,The following statement contains a magic number: errorManager.DefineError(3' 0' CompilationStage.Parsing' "Syntax error");
Magic Number,Compilers.UnitTests,ParserBuilderTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ParserBuilderTest.cs,WhereGrammaTest,The following statement contains a magic number: errorManager.DefineError(4' 0' CompilationStage.Parsing' "White spaces between >> are not allowed");
Magic Number,Compilers.UnitTests,ParserBuilderTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ParserBuilderTest.cs,WhereGrammaTest,The following statement contains a magic number: var errdef = new SyntaxErrors() { TokenUnexpectedId = 1' TokenMissingId = 2' OtherErrorId = 3 };
Magic Number,Compilers.UnitTests,ParserBuilderTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ParserBuilderTest.cs,WhereGrammaTest,The following statement contains a magic number: var errdef = new SyntaxErrors() { TokenUnexpectedId = 1' TokenMissingId = 2' OtherErrorId = 3 };
Magic Number,Compilers.UnitTests,ParserCombinatorsTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ParserCombinatorsTest.cs,ParserCastTest,The following statement contains a magic number: var context = new ParserContext(errorManager' 1' 2);
Magic Number,Compilers.UnitTests,ParserCombinatorsTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ParserCombinatorsTest.cs,ParserConvertTest,The following statement contains a magic number: var context = new ParserContext(errorManager' 1' 2);
Magic Number,Compilers.UnitTests,ParserCombinatorsTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ParserCombinatorsTest.cs,ParserFuncTest,The following statement contains a magic number: var context = new ParserContext(errorManager' 1' 2);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,CacheQueueTest,The following statement contains a magic number: q.Enqueue(2);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,CacheQueueTest,The following statement contains a magic number: q.Enqueue(3);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,CacheQueueTest,The following statement contains a magic number: q.Enqueue(4);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,CacheQueueTest,The following statement contains a magic number: q.Enqueue(5);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,CacheQueueTest,The following statement contains a magic number: Assert.AreEqual(2' q.Dequeue());
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,CacheQueueTest,The following statement contains a magic number: Assert.AreEqual(3' q.Count);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,CacheQueueTest,The following statement contains a magic number: q.Enqueue(6);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,CacheQueueTest,The following statement contains a magic number: q.Enqueue(7);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,CacheQueueTest,The following statement contains a magic number: q.Enqueue(8);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,CacheQueueTest,The following statement contains a magic number: q.Enqueue(9);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,CacheQueueTest,The following statement contains a magic number: Assert.AreEqual(7' q.Count);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,CacheQueueTest,The following statement contains a magic number: Assert.AreEqual(3' q[0]);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,CacheQueueTest,The following statement contains a magic number: Assert.AreEqual(4' q[1]);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,CacheQueueTest,The following statement contains a magic number: Assert.AreEqual(8' q[5]);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,CacheQueueTest,The following statement contains a magic number: Assert.AreEqual(8' q[5]);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,CacheQueueTest,The following statement contains a magic number: Assert.AreEqual(9' q[6]);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,CacheQueueTest,The following statement contains a magic number: Assert.AreEqual(9' q[6]);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,CacheQueueTest,The following statement contains a magic number: Assert.AreEqual(3' q.Dequeue());
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,CacheQueueTest,The following statement contains a magic number: Assert.AreEqual(4' q[0]);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,CacheQueueTest,The following statement contains a magic number: Assert.AreEqual(9' q[5]);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,CacheQueueTest,The following statement contains a magic number: Assert.AreEqual(9' q[5]);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,CacheQueueTest,The following statement contains a magic number: Assert.AreEqual(6' q.Count);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,CacheQueueTest,The following statement contains a magic number: q.Enqueue(10);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,CacheQueueTest,The following statement contains a magic number: q.Enqueue(11);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,CacheQueueTest,The following statement contains a magic number: Assert.AreEqual(11' q[7]);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,CacheQueueTest,The following statement contains a magic number: Assert.AreEqual(11' q[7]);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,CacheQueueTest,The following statement contains a magic number: Assert.AreEqual(8' q.Count);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,ErrorRecoveryTest,The following statement contains a magic number: em.DefineError(101' 0' CompilationStage.Scanning' "Invalid token: {0}");
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,ErrorRecoveryTest,The following statement contains a magic number: scanner.LexicalErrorId = 101;
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,ErrorRecoveryTest,The following statement contains a magic number: Assert.AreEqual(101' el[0].Info.Id);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,ForkableScannerTest,The following statement contains a magic number: i <= 4
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,ForkableScannerTest,The following statement contains a magic number: i <= 5
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,ForkableScannerTest,The following statement contains a magic number: Assert.AreEqual(source[5].ToString()' l5a.Value.Content);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,ForkableScannerTest,The following statement contains a magic number: Assert.AreEqual(source[5].ToString()' l5b.Value.Content);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,ForkableScannerTest,The following statement contains a magic number: Assert.AreEqual(source[6].ToString()' l6a.Value.Content);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,ForkableScannerTest,The following statement contains a magic number: Assert.AreEqual(source[6].ToString()' l6b.Value.Content);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,ForkableScannerTest,The following statement contains a magic number: i < 9
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,LexerStateToDFATest,The following statement contains a magic number: var ERROR = global.DefineToken(RE.Range(Char.MinValue' (char)255));
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,RegExToDFATest,The following statement contains a magic number: Assert.AreEqual(3' state0.OutEdges.Count);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,ScannerTest,The following statement contains a magic number: var ERROR = global.DefineToken(RE.Range(Char.MinValue' (char)255));
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,ScannerTest,The following statement contains a magic number: Assert.AreEqual(6' l1.Value.Span.EndLocation.Column);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,ScannerTest,The following statement contains a magic number: int p3 = scanner.Peek(3);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,ScannerTest,The following statement contains a magic number: int p4 = scanner.Peek(4);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,ScannerTest,The following statement contains a magic number: int p5 = scanner.Peek(5);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,SkipTokenTest,The following statement contains a magic number: var ERROR = global.DefineToken(RE.Range(Char.MinValue' (char)255));
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,SkipTokenTest,The following statement contains a magic number: Assert.AreEqual(3' l4.PrefixTrivia.Count);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,SkipTokenTest,The following statement contains a magic number: int p3 = scanner.Peek(3);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,SkipTokenTest,The following statement contains a magic number: int peof = scanner.Peek(4);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,ThrowNoExceptionAtEosTest,The following statement contains a magic number: var ERROR = global.DefineToken(RE.Range(Char.MinValue' (char)255));
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,ThrowExceptionAtEosTest,The following statement contains a magic number: var ERROR = global.DefineToken(RE.Range(Char.MinValue' (char)255));
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,SourceCodeTest,The following statement contains a magic number: Assert.AreEqual(2' source.Location.CharIndex);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,SourceCodeTest,The following statement contains a magic number: Assert.AreEqual(2' source.Location.CharIndex);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,SourceCodeTest,The following statement contains a magic number: Assert.AreEqual(3' source.Location.CharIndex);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,SourceCodeTest,The following statement contains a magic number: Assert.AreEqual(2' source.Location.CharIndex);
Magic Number,Compilers.UnitTests,ScannersTest,C:\research\architectureSmells\repos\Ninputer_VBF\src\Compilers\Compilers.UnitTests\ScannersTest.cs,SourceCodeTest,The following statement contains a magic number: Assert.AreEqual(3' source.Location.CharIndex);
