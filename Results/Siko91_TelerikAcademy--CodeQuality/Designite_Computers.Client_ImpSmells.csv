Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Computers.Client,ConsoleClient,C:\repos\Siko91_TelerikAcademy--CodeQuality\Exam\HQC-Exam-2014-Morning\Computers-problem\Computers.Client\ConsoleClient.cs,ExecuteCommands,Cyclomatic complexity of the method is 8
Magic Number,Computers.Client,ConsoleClient,C:\repos\Siko91_TelerikAcademy--CodeQuality\Exam\HQC-Exam-2014-Morning\Computers-problem\Computers.Client\ConsoleClient.cs,ExecuteCommands,The following statement contains a magic number: foreach (string command in this.Commands) {  	string[] commandParameters = command.Split (new[] {  		" "  	}' StringSplitOptions.RemoveEmptyEntries);  	if (commandParameters.Length != 2) {  		{  			throw new ArgumentException ("invalid command!");  		}  	}  	string commandName = commandParameters [0];  	int commandParam = 0;  	if (!int.TryParse (commandParameters [1]' out commandParam)) {  		throw new ArgumentException (string.Format ("Command Parameter must be a number: {0}"' command));  	}  	if (commandName == "charge") {  		this.Charge (commandParam);  	}  	else if (commandName == "process") {  		this.Process (commandParam);  	}  	else if (commandName == "play") {  		this.Play (commandParam);  	}  }  
Magic Number,Computers.Client,ConsoleClient,C:\repos\Siko91_TelerikAcademy--CodeQuality\Exam\HQC-Exam-2014-Morning\Computers-problem\Computers.Client\ConsoleClient.cs,ExecuteCommands,The following statement contains a magic number: if (commandParameters.Length != 2) {  	{  		throw new ArgumentException ("invalid command!");  	}  }  
