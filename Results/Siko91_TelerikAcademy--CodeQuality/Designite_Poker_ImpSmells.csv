Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,IsFullHouse,Cyclomatic complexity of the method is 14
Complex Method,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,IsTwoPair,Cyclomatic complexity of the method is 11
Complex Method,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,Cyclomatic complexity of the method is 17
Long Statement,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The length of the statement  "		// TODO - Refactor the whole solution' so that it could actually measure the combinations that the players have' and not just the sums of their hands. " is 150.
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,IsValidHand,The following statement contains a magic number: if (hand.Cards.Count > 5) {  	return false;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,IsFourOfAKind,The following statement contains a magic number: for (int i = 0; i < hand.Cards.Count - 1; i++) {  	for (int y = i + 1; y < hand.Cards.Count; y++) {  		if (hand.Cards [i].Face == hand.Cards [y].Face) {  			appearenceCounter++;  		}  	}  	if (appearenceCounter >= 4) {  		return true;  	}  	else {  		appearenceCounter = 1;  	}  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,IsFourOfAKind,The following statement contains a magic number: if (appearenceCounter >= 4) {  	return true;  }  else {  	appearenceCounter = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,IsFlush,The following statement contains a magic number: for (int i = 0; i < hand.Cards.Count; i++) {  	for (int y = i + 1; y < hand.Cards.Count; y++) {  		if (hand.Cards [i].Suit == hand.Cards [y].Suit) {  			suitAppearenceCounter++;  		}  	}  	if (suitAppearenceCounter >= 3) {  		return true;  	}  	else {  		suitAppearenceCounter = 0;  	}  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,IsFlush,The following statement contains a magic number: if (suitAppearenceCounter >= 3) {  	return true;  }  else {  	suitAppearenceCounter = 0;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,IsThreeOfAKind,The following statement contains a magic number: for (int i = 0; i < hand.Cards.Count - 1; i++) {  	for (int y = i + 1; y < hand.Cards.Count; y++) {  		if (hand.Cards [i].Face == hand.Cards [y].Face) {  			appearenceCounter++;  		}  	}  	if (appearenceCounter >= 3) {  		return true;  	}  	else {  		appearenceCounter = 1;  	}  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,IsThreeOfAKind,The following statement contains a magic number: if (appearenceCounter >= 3) {  	return true;  }  else {  	appearenceCounter = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,IsHighCard,The following statement contains a magic number: for (int i = 0; i < hand.Cards.Count; i++) {  	if ((int)hand.Cards [i].Face > 10) {  		return true;  	}  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,IsHighCard,The following statement contains a magic number: if ((int)hand.Cards [i].Face > 10) {  	return true;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: for (int i = 0; i < hands.Length; i++) {  	if (this.IsStraightFlush (hands [i])) {  		powerOfHands [i] = 9;  	}  	else if (this.IsFourOfAKind (hands [i])) {  		powerOfHands [i] = 8;  	}  	else if (this.IsFullHouse (hands [i])) {  		powerOfHands [i] = 7;  	}  	else if (this.IsFlush (hands [i])) {  		powerOfHands [i] = 6;  	}  	else if (this.IsStraight (hands [i])) {  		powerOfHands [i] = 5;  	}  	else if (this.IsThreeOfAKind (hands [i])) {  		powerOfHands [i] = 4;  	}  	else if (this.IsTwoPair (hands [i])) {  		powerOfHands [i] = 3;  	}  	else if (this.IsOnePair (hands [i])) {  		powerOfHands [i] = 2;  	}  	else if (this.IsHighCard (hands [i])) {  		powerOfHands [i] = 1;  	}  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: for (int i = 0; i < hands.Length; i++) {  	if (this.IsStraightFlush (hands [i])) {  		powerOfHands [i] = 9;  	}  	else if (this.IsFourOfAKind (hands [i])) {  		powerOfHands [i] = 8;  	}  	else if (this.IsFullHouse (hands [i])) {  		powerOfHands [i] = 7;  	}  	else if (this.IsFlush (hands [i])) {  		powerOfHands [i] = 6;  	}  	else if (this.IsStraight (hands [i])) {  		powerOfHands [i] = 5;  	}  	else if (this.IsThreeOfAKind (hands [i])) {  		powerOfHands [i] = 4;  	}  	else if (this.IsTwoPair (hands [i])) {  		powerOfHands [i] = 3;  	}  	else if (this.IsOnePair (hands [i])) {  		powerOfHands [i] = 2;  	}  	else if (this.IsHighCard (hands [i])) {  		powerOfHands [i] = 1;  	}  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: for (int i = 0; i < hands.Length; i++) {  	if (this.IsStraightFlush (hands [i])) {  		powerOfHands [i] = 9;  	}  	else if (this.IsFourOfAKind (hands [i])) {  		powerOfHands [i] = 8;  	}  	else if (this.IsFullHouse (hands [i])) {  		powerOfHands [i] = 7;  	}  	else if (this.IsFlush (hands [i])) {  		powerOfHands [i] = 6;  	}  	else if (this.IsStraight (hands [i])) {  		powerOfHands [i] = 5;  	}  	else if (this.IsThreeOfAKind (hands [i])) {  		powerOfHands [i] = 4;  	}  	else if (this.IsTwoPair (hands [i])) {  		powerOfHands [i] = 3;  	}  	else if (this.IsOnePair (hands [i])) {  		powerOfHands [i] = 2;  	}  	else if (this.IsHighCard (hands [i])) {  		powerOfHands [i] = 1;  	}  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: for (int i = 0; i < hands.Length; i++) {  	if (this.IsStraightFlush (hands [i])) {  		powerOfHands [i] = 9;  	}  	else if (this.IsFourOfAKind (hands [i])) {  		powerOfHands [i] = 8;  	}  	else if (this.IsFullHouse (hands [i])) {  		powerOfHands [i] = 7;  	}  	else if (this.IsFlush (hands [i])) {  		powerOfHands [i] = 6;  	}  	else if (this.IsStraight (hands [i])) {  		powerOfHands [i] = 5;  	}  	else if (this.IsThreeOfAKind (hands [i])) {  		powerOfHands [i] = 4;  	}  	else if (this.IsTwoPair (hands [i])) {  		powerOfHands [i] = 3;  	}  	else if (this.IsOnePair (hands [i])) {  		powerOfHands [i] = 2;  	}  	else if (this.IsHighCard (hands [i])) {  		powerOfHands [i] = 1;  	}  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: for (int i = 0; i < hands.Length; i++) {  	if (this.IsStraightFlush (hands [i])) {  		powerOfHands [i] = 9;  	}  	else if (this.IsFourOfAKind (hands [i])) {  		powerOfHands [i] = 8;  	}  	else if (this.IsFullHouse (hands [i])) {  		powerOfHands [i] = 7;  	}  	else if (this.IsFlush (hands [i])) {  		powerOfHands [i] = 6;  	}  	else if (this.IsStraight (hands [i])) {  		powerOfHands [i] = 5;  	}  	else if (this.IsThreeOfAKind (hands [i])) {  		powerOfHands [i] = 4;  	}  	else if (this.IsTwoPair (hands [i])) {  		powerOfHands [i] = 3;  	}  	else if (this.IsOnePair (hands [i])) {  		powerOfHands [i] = 2;  	}  	else if (this.IsHighCard (hands [i])) {  		powerOfHands [i] = 1;  	}  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: for (int i = 0; i < hands.Length; i++) {  	if (this.IsStraightFlush (hands [i])) {  		powerOfHands [i] = 9;  	}  	else if (this.IsFourOfAKind (hands [i])) {  		powerOfHands [i] = 8;  	}  	else if (this.IsFullHouse (hands [i])) {  		powerOfHands [i] = 7;  	}  	else if (this.IsFlush (hands [i])) {  		powerOfHands [i] = 6;  	}  	else if (this.IsStraight (hands [i])) {  		powerOfHands [i] = 5;  	}  	else if (this.IsThreeOfAKind (hands [i])) {  		powerOfHands [i] = 4;  	}  	else if (this.IsTwoPair (hands [i])) {  		powerOfHands [i] = 3;  	}  	else if (this.IsOnePair (hands [i])) {  		powerOfHands [i] = 2;  	}  	else if (this.IsHighCard (hands [i])) {  		powerOfHands [i] = 1;  	}  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: for (int i = 0; i < hands.Length; i++) {  	if (this.IsStraightFlush (hands [i])) {  		powerOfHands [i] = 9;  	}  	else if (this.IsFourOfAKind (hands [i])) {  		powerOfHands [i] = 8;  	}  	else if (this.IsFullHouse (hands [i])) {  		powerOfHands [i] = 7;  	}  	else if (this.IsFlush (hands [i])) {  		powerOfHands [i] = 6;  	}  	else if (this.IsStraight (hands [i])) {  		powerOfHands [i] = 5;  	}  	else if (this.IsThreeOfAKind (hands [i])) {  		powerOfHands [i] = 4;  	}  	else if (this.IsTwoPair (hands [i])) {  		powerOfHands [i] = 3;  	}  	else if (this.IsOnePair (hands [i])) {  		powerOfHands [i] = 2;  	}  	else if (this.IsHighCard (hands [i])) {  		powerOfHands [i] = 1;  	}  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: for (int i = 0; i < hands.Length; i++) {  	if (this.IsStraightFlush (hands [i])) {  		powerOfHands [i] = 9;  	}  	else if (this.IsFourOfAKind (hands [i])) {  		powerOfHands [i] = 8;  	}  	else if (this.IsFullHouse (hands [i])) {  		powerOfHands [i] = 7;  	}  	else if (this.IsFlush (hands [i])) {  		powerOfHands [i] = 6;  	}  	else if (this.IsStraight (hands [i])) {  		powerOfHands [i] = 5;  	}  	else if (this.IsThreeOfAKind (hands [i])) {  		powerOfHands [i] = 4;  	}  	else if (this.IsTwoPair (hands [i])) {  		powerOfHands [i] = 3;  	}  	else if (this.IsOnePair (hands [i])) {  		powerOfHands [i] = 2;  	}  	else if (this.IsHighCard (hands [i])) {  		powerOfHands [i] = 1;  	}  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsStraightFlush (hands [i])) {  	powerOfHands [i] = 9;  }  else if (this.IsFourOfAKind (hands [i])) {  	powerOfHands [i] = 8;  }  else if (this.IsFullHouse (hands [i])) {  	powerOfHands [i] = 7;  }  else if (this.IsFlush (hands [i])) {  	powerOfHands [i] = 6;  }  else if (this.IsStraight (hands [i])) {  	powerOfHands [i] = 5;  }  else if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsStraightFlush (hands [i])) {  	powerOfHands [i] = 9;  }  else if (this.IsFourOfAKind (hands [i])) {  	powerOfHands [i] = 8;  }  else if (this.IsFullHouse (hands [i])) {  	powerOfHands [i] = 7;  }  else if (this.IsFlush (hands [i])) {  	powerOfHands [i] = 6;  }  else if (this.IsStraight (hands [i])) {  	powerOfHands [i] = 5;  }  else if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsStraightFlush (hands [i])) {  	powerOfHands [i] = 9;  }  else if (this.IsFourOfAKind (hands [i])) {  	powerOfHands [i] = 8;  }  else if (this.IsFullHouse (hands [i])) {  	powerOfHands [i] = 7;  }  else if (this.IsFlush (hands [i])) {  	powerOfHands [i] = 6;  }  else if (this.IsStraight (hands [i])) {  	powerOfHands [i] = 5;  }  else if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsStraightFlush (hands [i])) {  	powerOfHands [i] = 9;  }  else if (this.IsFourOfAKind (hands [i])) {  	powerOfHands [i] = 8;  }  else if (this.IsFullHouse (hands [i])) {  	powerOfHands [i] = 7;  }  else if (this.IsFlush (hands [i])) {  	powerOfHands [i] = 6;  }  else if (this.IsStraight (hands [i])) {  	powerOfHands [i] = 5;  }  else if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsStraightFlush (hands [i])) {  	powerOfHands [i] = 9;  }  else if (this.IsFourOfAKind (hands [i])) {  	powerOfHands [i] = 8;  }  else if (this.IsFullHouse (hands [i])) {  	powerOfHands [i] = 7;  }  else if (this.IsFlush (hands [i])) {  	powerOfHands [i] = 6;  }  else if (this.IsStraight (hands [i])) {  	powerOfHands [i] = 5;  }  else if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsStraightFlush (hands [i])) {  	powerOfHands [i] = 9;  }  else if (this.IsFourOfAKind (hands [i])) {  	powerOfHands [i] = 8;  }  else if (this.IsFullHouse (hands [i])) {  	powerOfHands [i] = 7;  }  else if (this.IsFlush (hands [i])) {  	powerOfHands [i] = 6;  }  else if (this.IsStraight (hands [i])) {  	powerOfHands [i] = 5;  }  else if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsStraightFlush (hands [i])) {  	powerOfHands [i] = 9;  }  else if (this.IsFourOfAKind (hands [i])) {  	powerOfHands [i] = 8;  }  else if (this.IsFullHouse (hands [i])) {  	powerOfHands [i] = 7;  }  else if (this.IsFlush (hands [i])) {  	powerOfHands [i] = 6;  }  else if (this.IsStraight (hands [i])) {  	powerOfHands [i] = 5;  }  else if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsStraightFlush (hands [i])) {  	powerOfHands [i] = 9;  }  else if (this.IsFourOfAKind (hands [i])) {  	powerOfHands [i] = 8;  }  else if (this.IsFullHouse (hands [i])) {  	powerOfHands [i] = 7;  }  else if (this.IsFlush (hands [i])) {  	powerOfHands [i] = 6;  }  else if (this.IsStraight (hands [i])) {  	powerOfHands [i] = 5;  }  else if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: powerOfHands [i] = 9;  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsFourOfAKind (hands [i])) {  	powerOfHands [i] = 8;  }  else if (this.IsFullHouse (hands [i])) {  	powerOfHands [i] = 7;  }  else if (this.IsFlush (hands [i])) {  	powerOfHands [i] = 6;  }  else if (this.IsStraight (hands [i])) {  	powerOfHands [i] = 5;  }  else if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsFourOfAKind (hands [i])) {  	powerOfHands [i] = 8;  }  else if (this.IsFullHouse (hands [i])) {  	powerOfHands [i] = 7;  }  else if (this.IsFlush (hands [i])) {  	powerOfHands [i] = 6;  }  else if (this.IsStraight (hands [i])) {  	powerOfHands [i] = 5;  }  else if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsFourOfAKind (hands [i])) {  	powerOfHands [i] = 8;  }  else if (this.IsFullHouse (hands [i])) {  	powerOfHands [i] = 7;  }  else if (this.IsFlush (hands [i])) {  	powerOfHands [i] = 6;  }  else if (this.IsStraight (hands [i])) {  	powerOfHands [i] = 5;  }  else if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsFourOfAKind (hands [i])) {  	powerOfHands [i] = 8;  }  else if (this.IsFullHouse (hands [i])) {  	powerOfHands [i] = 7;  }  else if (this.IsFlush (hands [i])) {  	powerOfHands [i] = 6;  }  else if (this.IsStraight (hands [i])) {  	powerOfHands [i] = 5;  }  else if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsFourOfAKind (hands [i])) {  	powerOfHands [i] = 8;  }  else if (this.IsFullHouse (hands [i])) {  	powerOfHands [i] = 7;  }  else if (this.IsFlush (hands [i])) {  	powerOfHands [i] = 6;  }  else if (this.IsStraight (hands [i])) {  	powerOfHands [i] = 5;  }  else if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsFourOfAKind (hands [i])) {  	powerOfHands [i] = 8;  }  else if (this.IsFullHouse (hands [i])) {  	powerOfHands [i] = 7;  }  else if (this.IsFlush (hands [i])) {  	powerOfHands [i] = 6;  }  else if (this.IsStraight (hands [i])) {  	powerOfHands [i] = 5;  }  else if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsFourOfAKind (hands [i])) {  	powerOfHands [i] = 8;  }  else if (this.IsFullHouse (hands [i])) {  	powerOfHands [i] = 7;  }  else if (this.IsFlush (hands [i])) {  	powerOfHands [i] = 6;  }  else if (this.IsStraight (hands [i])) {  	powerOfHands [i] = 5;  }  else if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: powerOfHands [i] = 8;  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsFullHouse (hands [i])) {  	powerOfHands [i] = 7;  }  else if (this.IsFlush (hands [i])) {  	powerOfHands [i] = 6;  }  else if (this.IsStraight (hands [i])) {  	powerOfHands [i] = 5;  }  else if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsFullHouse (hands [i])) {  	powerOfHands [i] = 7;  }  else if (this.IsFlush (hands [i])) {  	powerOfHands [i] = 6;  }  else if (this.IsStraight (hands [i])) {  	powerOfHands [i] = 5;  }  else if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsFullHouse (hands [i])) {  	powerOfHands [i] = 7;  }  else if (this.IsFlush (hands [i])) {  	powerOfHands [i] = 6;  }  else if (this.IsStraight (hands [i])) {  	powerOfHands [i] = 5;  }  else if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsFullHouse (hands [i])) {  	powerOfHands [i] = 7;  }  else if (this.IsFlush (hands [i])) {  	powerOfHands [i] = 6;  }  else if (this.IsStraight (hands [i])) {  	powerOfHands [i] = 5;  }  else if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsFullHouse (hands [i])) {  	powerOfHands [i] = 7;  }  else if (this.IsFlush (hands [i])) {  	powerOfHands [i] = 6;  }  else if (this.IsStraight (hands [i])) {  	powerOfHands [i] = 5;  }  else if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsFullHouse (hands [i])) {  	powerOfHands [i] = 7;  }  else if (this.IsFlush (hands [i])) {  	powerOfHands [i] = 6;  }  else if (this.IsStraight (hands [i])) {  	powerOfHands [i] = 5;  }  else if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: powerOfHands [i] = 7;  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsFlush (hands [i])) {  	powerOfHands [i] = 6;  }  else if (this.IsStraight (hands [i])) {  	powerOfHands [i] = 5;  }  else if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsFlush (hands [i])) {  	powerOfHands [i] = 6;  }  else if (this.IsStraight (hands [i])) {  	powerOfHands [i] = 5;  }  else if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsFlush (hands [i])) {  	powerOfHands [i] = 6;  }  else if (this.IsStraight (hands [i])) {  	powerOfHands [i] = 5;  }  else if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsFlush (hands [i])) {  	powerOfHands [i] = 6;  }  else if (this.IsStraight (hands [i])) {  	powerOfHands [i] = 5;  }  else if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsFlush (hands [i])) {  	powerOfHands [i] = 6;  }  else if (this.IsStraight (hands [i])) {  	powerOfHands [i] = 5;  }  else if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: powerOfHands [i] = 6;  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsStraight (hands [i])) {  	powerOfHands [i] = 5;  }  else if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsStraight (hands [i])) {  	powerOfHands [i] = 5;  }  else if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsStraight (hands [i])) {  	powerOfHands [i] = 5;  }  else if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsStraight (hands [i])) {  	powerOfHands [i] = 5;  }  else if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: powerOfHands [i] = 5;  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsThreeOfAKind (hands [i])) {  	powerOfHands [i] = 4;  }  else if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: powerOfHands [i] = 4;  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsTwoPair (hands [i])) {  	powerOfHands [i] = 3;  }  else if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: powerOfHands [i] = 3;  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: if (this.IsOnePair (hands [i])) {  	powerOfHands [i] = 2;  }  else if (this.IsHighCard (hands [i])) {  	powerOfHands [i] = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\Siko91_TelerikAcademy--CodeQuality\Test-Driven-Development\Poker\PokerHandsChecker.cs,CompareHands,The following statement contains a magic number: powerOfHands [i] = 2;  
