Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Stylet,MessageBoxViewModel,C:\repos\canton7_Stylet\Stylet\MessageBoxViewModel.cs,Setup,Cyclomatic complexity of the method is 8
Complex Method,StyletIoC.Internal,Container,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Container.cs,GetFactoryForType,Cyclomatic complexity of the method is 8
Long Parameter List,Stylet,IMessageBoxViewModel,C:\repos\canton7_Stylet\Stylet\MessageBoxViewModel.cs,Setup,The method has 9 parameters. Parameters: messageBoxText' caption' buttons' icon' defaultResult' cancelResult' buttonLabels' flowDirection' textAlignment
Long Parameter List,Stylet,MessageBoxViewModel,C:\repos\canton7_Stylet\Stylet\MessageBoxViewModel.cs,Setup,The method has 9 parameters. Parameters: messageBoxText' caption' buttons' icon' defaultResult' cancelResult' buttonLabels' flowDirection' textAlignment
Long Parameter List,Stylet,IWindowManager,C:\repos\canton7_Stylet\Stylet\WindowManager.cs,ShowMessageBox,The method has 9 parameters. Parameters: messageBoxText' caption' buttons' icon' defaultResult' cancelResult' buttonLabels' flowDirection' textAlignment
Long Parameter List,Stylet,WindowManager,C:\repos\canton7_Stylet\Stylet\WindowManager.cs,ShowMessageBox,The method has 9 parameters. Parameters: messageBoxText' caption' buttons' icon' defaultResult' cancelResult' buttonLabels' flowDirection' textAlignment
Long Parameter List,Stylet.Xaml,ActionBase,C:\repos\canton7_Stylet\Stylet\Xaml\ActionBase.cs,ActionBase,The method has 6 parameters. Parameters: subject' backupSubject' methodName' targetNullBehaviour' actionNonExistentBehaviour' logger
Long Parameter List,Stylet.Xaml,CommandAction,C:\repos\canton7_Stylet\Stylet\Xaml\CommandAction.cs,CommandAction,The method has 5 parameters. Parameters: subject' backupSubject' methodName' targetNullBehaviour' actionNonExistentBehaviour
Long Parameter List,Stylet.Xaml,EventAction,C:\repos\canton7_Stylet\Stylet\Xaml\EventAction.cs,EventAction,The method has 6 parameters. Parameters: subject' backupSubject' eventHandlerType' methodName' targetNullBehaviour' actionNonExistentBehaviour
Long Statement,Stylet,BindableCollection<T>,C:\repos\canton7_Stylet\Stylet\BindableCollection.cs,SetItem,The length of the statement  "                this.OnCollectionChanging(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Replace' item' this[index]' index)); " is 129.
Long Statement,Stylet,BindableCollection<T>,C:\repos\canton7_Stylet\Stylet\BindableCollection.cs,RemoveItem,The length of the statement  "                this.OnCollectionChanging(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Remove' this[index]' index)); " is 122.
Long Statement,Stylet,BootstrapperBase,C:\repos\canton7_Stylet\Stylet\BootstrapperBase.cs,Setup,The length of the statement  "            // Make life nice for the app - they can handle these by overriding Bootstrapper methods' rather than adding event handlers " is 123.
Long Statement,Stylet,BootstrapperBase,C:\repos\canton7_Stylet\Stylet\BootstrapperBase.cs,Setup,The length of the statement  "            // Fetch this logger when needed. If we fetch it now' then no-one will have been given the change to enable the LogManager' and we'll get a NullLogger " is 150.
Long Statement,Stylet,EventAggregator,C:\repos\canton7_Stylet\Stylet\EventAggregator.cs,Unsubscribe,The length of the statement  "                if (existingHandler != null && existingHandler.UnsubscribeFromChannels(channels)) // Handles default topic appropriately " is 120.
Long Statement,Stylet,Execute,C:\repos\canton7_Stylet\Stylet\Execute.cs,OnUIThreadSync,The length of the statement  "                    throw new System.Reflection.TargetInvocationException("An error occurred while dispatching a call to the UI Thread"' exception); " is 128.
Long Statement,Stylet,PropertyChangedExtensions,C:\repos\canton7_Stylet\Stylet\PropertyChangedExtensions.cs,BindWeak,The length of the statement  "                throw new InvalidOperationException("Handler passed to BindWeak refers to a compiler-generated class. You may not capture local variables in the handler"); " is 155.
Long Statement,Stylet,Screen,C:\repos\canton7_Stylet\Stylet\Screen.cs,AttachView,The length of the statement  "                throw new InvalidOperationException(String.Format("Tried to attach View {0} to ViewModel {1}' but it already has a view attached"' view.GetType().Name' this.GetType().Name)); " is 174.
Long Statement,Stylet,Screen,C:\repos\canton7_Stylet\Stylet\Screen.cs,RequestClose,The length of the statement  "                var e = new InvalidOperationException(String.Format("Unable to close ViewModel {0} as it must have a conductor as a parent (note that windows and dialogs automatically have such a parent)"' this.GetType())); " is 207.
Long Statement,Stylet,ViewManager,C:\repos\canton7_Stylet\Stylet\ViewManager.cs,OnModelChanged,The length of the statement  "                    var e = new StyletInvalidViewTypeException(String.Format("s:View.Model=\"...\" tried to show a View of type '{0}'' but that View derives from the Window class. " + " is 163.
Long Statement,Stylet,ViewManager,C:\repos\canton7_Stylet\Stylet\ViewManager.cs,OnModelChanged,The length of the statement  "                    "Make sure any Views you display using s:View.Model=\"...\" do not derive from Window (use UserControl or similar)"' view.GetType().Name)); " is 139.
Long Statement,Stylet,ViewManager,C:\repos\canton7_Stylet\Stylet\ViewManager.cs,LocateViewForModel,The length of the statement  "                throw new StyletViewLocationException(String.Format("Unable to transform ViewModel name {0} into a suitable View name"' modelName)' viewName); " is 142.
Long Statement,Stylet,ViewManager,C:\repos\canton7_Stylet\Stylet\ViewManager.cs,CreateViewForModel,The length of the statement  "                var e = new StyletViewLocationException(String.Format("Found type for view: {0}' but it wasn't a class derived from UIElement"' viewType.Name)' viewType.Name); " is 159.
Long Statement,Stylet,ViewManager,C:\repos\canton7_Stylet\Stylet\ViewManager.cs,InitializeView,The length of the statement  "            // We have to use this reflection here' since the InitializeComponent is a method on the View' not on any of its base classes " is 125.
Long Statement,Stylet,WindowManager,C:\repos\canton7_Stylet\Stylet\WindowManager.cs,ShowMessageBox,The length of the statement  "            vm.Setup(messageBoxText' caption' buttons' icon' defaultResult' cancelResult' buttonLabels' flowDirection' textAlignment); " is 122.
Long Statement,Stylet,WindowManager,C:\repos\canton7_Stylet\Stylet\WindowManager.cs,CreateWindow,The length of the statement  "                var e = new StyletInvalidViewTypeException(String.Format("WindowManager.ShowWindow or .ShowDialog tried to show a View of type '{0}'' but that View doesn't derive from the Window class. " + " is 189.
Long Statement,Stylet,WindowManager,C:\repos\canton7_Stylet\Stylet\WindowManager.cs,CreateWindow,The length of the statement  "                    "Make sure any Views you display using WindowManager.ShowWindow or .ShowDialog derive from Window (not UserControl' etc)"' " is 122.
Long Statement,Stylet,WindowManager,C:\repos\canton7_Stylet\Stylet\WindowManager.cs,CreateWindow,The length of the statement  "            if (haveDisplayName != null && (String.IsNullOrEmpty(window.Title) || window.Title == view.GetType().Name) && BindingOperations.GetBindingBase(window' Window.TitleProperty) == null) " is 181.
Long Statement,Stylet,WindowManager,C:\repos\canton7_Stylet\Stylet\WindowManager.cs,CreateWindow,The length of the statement  "                    // Basically the MainWindow's no long active' so the second dialog chooses the first dialog as its owner... But the first dialog " is 128.
Long Statement,Stylet,WindowManager,C:\repos\canton7_Stylet\Stylet\WindowManager.cs,CreateWindow,The length of the statement  "                    // hasn't yet been shown' so we get an exception ("cannot set owner property to a Window which has not been previously shown"). " is 127.
Long Statement,Stylet,WindowManager,C:\repos\canton7_Stylet\Stylet\WindowManager.cs,CreateWindow,The length of the statement  "            if (window.WindowStartupLocation == WindowStartupLocation.Manual && Double.IsNaN(window.Top) && Double.IsNaN(window.Left) && " is 124.
Long Statement,Stylet,WindowManager,C:\repos\canton7_Stylet\Stylet\WindowManager.cs,CreateWindow,The length of the statement  "                BindingOperations.GetBinding(window' Window.TopProperty) == null && BindingOperations.GetBinding(window' Window.LeftProperty) == null) " is 134.
Long Statement,Stylet,WindowManager,C:\repos\canton7_Stylet\Stylet\WindowManager.cs,CreateWindow,The length of the statement  "                window.WindowStartupLocation = window.Owner == null ? WindowStartupLocation.CenterScreen : WindowStartupLocation.CenterOwner; " is 125.
Long Statement,Stylet,WindowConductor,C:\repos\canton7_Stylet\Stylet\WindowManager.cs,CloseItem,The length of the statement  "                logger.Info("ViewModel {0} close requested with DialogResult {1} because it called RequestClose"' this.viewModel' dialogResult); " is 128.
Long Statement,StyletIoC.Creation,BuilderUpper,C:\repos\canton7_Stylet\Stylet\StyletIoC\Creation\BuilderUpper.cs,GetExpression,The length of the statement  "            var expressions = type.GetFields(BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance).Select(x => this.ExpressionForMember(inputParameterExpression' x' x.FieldType' registrationContext)) " is 203.
Long Statement,StyletIoC.Creation,BuilderUpper,C:\repos\canton7_Stylet\Stylet\StyletIoC\Creation\BuilderUpper.cs,GetExpression,The length of the statement  "                .Concat(type.GetProperties(BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance).Select(x => this.ExpressionForMember(inputParameterExpression' x' x.PropertyType' registrationContext))) " is 201.
Long Statement,StyletIoC.Creation,BuilderUpper,C:\repos\canton7_Stylet\Stylet\StyletIoC\Creation\BuilderUpper.cs,GetExpression,The length of the statement  "            // This isn't so bad' so we'll (probably) only need to call this at most twice - once for building up the type on creation' " is 123.
Long Statement,StyletIoC.Creation,BuilderUpper,C:\repos\canton7_Stylet\Stylet\StyletIoC\Creation\BuilderUpper.cs,ExpressionForMember,The length of the statement  "            var memberValue = this.parentContext.GetSingleRegistration(memberType' attribute.Key' true).GetInstanceExpression(registrationContext); " is 135.
Long Statement,StyletIoC.Creation,BuilderUpper,C:\repos\canton7_Stylet\Stylet\StyletIoC\Creation\BuilderUpper.cs,GetImplementor,The length of the statement  "                this.implementor = Expression.Lambda<Action<IRegistrationContext' object>>(this.GetExpression(typedParameterExpression' registrationContext' type)' registrationContext' parameterExpression).Compile(); " is 200.
Long Statement,StyletIoC,StyletIoCModule,C:\repos\canton7_Stylet\Stylet\StyletIoC\StyletIoCModule.cs,Bind,The length of the statement  "                throw new InvalidOperationException("Bind should only be called from inside Load' and you must not call Load yourself"); " is 120.
Long Statement,StyletIoC,StyletIoCBuilder,C:\repos\canton7_Stylet\Stylet\StyletIoC\StyletIoCBuilder.cs,BuildContainer,The length of the statement  "            // For each binding which is weak' if another binding exists with any of the same type+key which is strong' we remove this binding " is 130.
Long Statement,StyletIoC,StyletIoCBuilder,C:\repos\canton7_Stylet\Stylet\StyletIoC\StyletIoCBuilder.cs,BuildContainer,The length of the statement  "                                binding.ServiceTypes.Any(serviceType => groups.Contains(serviceType) && groups[serviceType].Any(groupItem => !groupItem.Binding.IsWeak))) " is 137.
Long Statement,StyletIoC,StyletIoCBuilder,C:\repos\canton7_Stylet\Stylet\StyletIoC\StyletIoCBuilder.cs,GetAssemblies,The length of the statement  "                throw new StyletIoCRegistrationException(String.Format("{0} called but Assemblies is empty' and no extra assemblies given"' methodName)); " is 137.
Long Statement,StyletIoC.Internal.Builders,BuilderBindingBase,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Builders\BuilderBindingBase.cs,EnsureType,The length of the statement  "                throw new StyletIoCRegistrationException(String.Format("Type {0} is not a concrete class' and so can't be used to implemented service {1}"' implementationType.GetDescription()' serviceType.GetDescription())); " is 208.
Long Statement,StyletIoC.Internal.Builders,BuilderBindingBase,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Builders\BuilderBindingBase.cs,EnsureType,The length of the statement  "                    throw new StyletIoCRegistrationException(String.Format("You can't use an unbound generic type to implement anything that isn't an unbound generic service. Service: {0}' Type: {1}"' serviceType.GetDescription()' implementationType.GetDescription())); " is 249.
Long Statement,StyletIoC.Internal.Builders,BuilderBindingBase,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Builders\BuilderBindingBase.cs,EnsureType,The length of the statement  "                if (serviceType.GetTypeInfo().GenericTypeParameters.Length != implementationType.GetTypeInfo().GenericTypeParameters.Length) " is 124.
Long Statement,StyletIoC.Internal.Builders,BuilderBindingBase,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Builders\BuilderBindingBase.cs,EnsureType,The length of the statement  "                    throw new StyletIoCRegistrationException(String.Format("If you're registering an unbound generic type to an unbound generic service' both service and type must have the same number of type parameters. Service: {0}' Type: {1}"' serviceType.GetDescription()' implementationType.GetDescription())); " is 295.
Long Statement,StyletIoC.Internal.Builders,BuilderBindingBase,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Builders\BuilderBindingBase.cs,EnsureType,The length of the statement  "                    throw new StyletIoCRegistrationException(String.Format("You cannot bind the bound generic type {0} to the unbound generic service {1}"' implementationType.GetDescription()' serviceType.GetDescription())); " is 204.
Long Statement,StyletIoC.Internal.Builders,BuilderBindingBase,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Builders\BuilderBindingBase.cs,EnsureType,The length of the statement  "                    throw new StyletIoCRegistrationException(String.Format("You cannot bind the non-generic type {0} to the unbound generic service {1}"' implementationType.GetDescription()' serviceType.GetDescription())); " is 202.
Long Statement,StyletIoC.Internal.Builders,BuilderBindingBase,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Builders\BuilderBindingBase.cs,EnsureType,The length of the statement  "                throw new StyletIoCRegistrationException(String.Format("Type {0} does not implement service {1}"' implementationType.GetDescription()' serviceType.GetDescription())); " is 166.
Long Statement,StyletIoC.Internal.Builders,BuilderBindingBase,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Builders\BuilderBindingBase.cs,BindImplementationToServices,The length of the statement  "                    throw new StyletIoCRegistrationException(String.Format("Cannot create a multiple-service binding with an unbound generic type {0}"' firstGenericType.Type.GetDescription())); " is 173.
Long Statement,StyletIoC.Internal.Builders,BuilderBindingBase,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Builders\BuilderBindingBase.cs,BindImplementationToServices,The length of the statement  "                    container.AddRegistration(new TypeKey(serviceType.Type.TypeHandle' serviceType.Key ?? creator.AttributeKey)' registration); " is 123.
Long Statement,StyletIoC.Internal.Builders,BuilderBindingBase,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Builders\BuilderBindingBase.cs,BindImplementationToServices,The length of the statement  "                this.BindImplementationToSpecificService(container' implementationType' this.ServiceTypes[0].Type' this.ServiceTypes[0].Key); " is 125.
Long Statement,StyletIoC.Internal.Builders,BuilderBindTo,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Builders\BuilderBindTo.cs,ToAllImplementations,The length of the statement  "            this.builderBinding = new BuilderToAllImplementationsBinding(this.ServiceTypes' this.getAssemblies(assemblies' "ToAllImplementations")' allowZeroImplementations); " is 162.
Long Statement,StyletIoC.Internal.Builders,BuilderToAllImplementationsBinding,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Builders\BuilderToAllImplementationsBinding.cs,Build,The length of the statement  "                             let baseType = type.GetBaseTypesAndInterfaces().FirstOrDefault(x => x == this.ServiceType.Type || (x.IsGenericType && x.GetGenericTypeDefinition() == this.ServiceType.Type)) " is 173.
Long Statement,StyletIoC.Internal.Builders,BuilderToAllImplementationsBinding,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Builders\BuilderToAllImplementationsBinding.cs,Build,The length of the statement  "                             select new { Type = type' Base = baseType.ContainsGenericParameters ? baseType.GetGenericTypeDefinition() : baseType }).ToList(); " is 129.
Long Statement,StyletIoC.Internal.Builders,BuilderToAllImplementationsBinding,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Builders\BuilderToAllImplementationsBinding.cs,Build,The length of the statement  "                throw new StyletIoCRegistrationException(String.Format("Did not find any implementations of the type {0}"' this.ServiceType.Type)); " is 131.
Long Statement,StyletIoC.Internal.Builders,BuilderToAllImplementationsBinding,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Builders\BuilderToAllImplementationsBinding.cs,Build,The length of the statement  "                    Debug.WriteLine(String.Format("Unable to auto-bind type {0} to {1}: {2}"' candidate.Base.Name' candidate.Type.GetDescription()' e.Message)' "StyletIoC"); " is 153.
Long Statement,StyletIoC.Internal.Registrations,GetAllRegistration,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Registrations\GetAllRegistration.cs,GetGenerator,The length of the statement  "                    this.generator = Expression.Lambda<Func<IRegistrationContext' object>>(this.GetInstanceExpression(registrationContext)' registrationContext).Compile(); " is 151.
Long Statement,StyletIoC.Internal.Registrations,GetAllRegistration,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Registrations\GetAllRegistration.cs,GetInstanceExpression,The length of the statement  "            var instanceExpressions = this.parentContext.GetAllRegistrations(type.GenericTypeArguments[0]' this.Key' false).Select(x => x.GetInstanceExpression(registrationContext)).ToArray(); " is 180.
Long Statement,StyletIoC.Internal.Registrations,RegistrationBase,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Registrations\RegistrationBase.cs,GetGeneratorInternal,The length of the statement  "            return Expression.Lambda<Func<IRegistrationContext' object>>(this.GetInstanceExpression(registrationContext)' registrationContext).Compile(); " is 141.
Long Statement,StyletIoC.Internal.Registrations,SingletonRegistration,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Registrations\SingletonRegistration.cs,GetInstanceExpression,The length of the statement  "            this.instance = Expression.Lambda<Func<IRegistrationContext' object>>(this.Creator.GetInstanceExpression(registrationContext)' registrationContext).Compile()(this.parentContext); " is 178.
Long Statement,StyletIoC.Internal,TypeExtensions,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\TypeExtensions.cs,Implements,The length of the statement  "                (implementationType.IsGenericType && serviceType.IsGenericTypeDefinition && serviceType.IsAssignableFrom(implementationType.GetGenericTypeDefinition())) || " is 155.
Long Statement,StyletIoC.Internal,TypeExtensions,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\TypeExtensions.cs,Implements,The length of the statement  "                implementationType.GetBaseTypesAndInterfaces().Any(x => x == serviceType || (x.IsGenericType && x.GetGenericTypeDefinition() == serviceType)); " is 142.
Long Statement,StyletIoC.Internal,TypeExtensions,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\TypeExtensions.cs,GetDescription,The length of the statement  "                return String.Format("{0}<{1}>"' type.Name.Split('`')[0]' String.Join("' "' type.GetTypeInfo().GenericTypeParameters.Select(x => x.Name))); " is 139.
Long Statement,StyletIoC.Internal,Container,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Container.cs,GetAll,The length of the statement  "            var result = this.TryRetrieveGetAllRegistrationFromElementType(typeKey' null' out registration' elementTypeIfAvailable); " is 120.
Long Statement,StyletIoC.Internal,Container,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Container.cs,TryRetrieveGetAllRegistrationFromElementType,The length of the statement  "            // If it isn't present' and can be made' GetOrAdd to try and add it' but return the now-existing registration if someone beat us to it " is 134.
Long Statement,StyletIoC.Internal,Container,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Container.cs,TryRetrieveGetAllRegistrationFromElementType,The length of the statement  "            registration = this.getAllRegistrations.GetOrAdd(elementTypeKey' x => new GetAllRegistration(listType.TypeHandle' this' elementTypeKey.Key)); " is 141.
Long Statement,StyletIoC.Internal,Container,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Container.cs,TryRetrieveGetAllRegistration,The length of the statement  "            return this.TryRetrieveGetAllRegistrationFromElementType(new TypeKey(elementType.TypeHandle' key)' type' out registration' elementType); " is 136.
Long Statement,StyletIoC.Internal,Container,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Container.cs,TryCreateSelfBinding,The length of the statement  "            // This stops us trying to charge off and create List<T> or some other BCL class which we don't have a hope in hell of creating " is 127.
Long Statement,StyletIoC.Internal,Container,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Container.cs,TryCreateSelfBinding,The length of the statement  "            // This in turn leads to some very hard-to-debug error cases where we descend into infinite recursion on some random type " is 121.
Long Statement,StyletIoC.Internal,Container,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Container.cs,TryCreateFuncFactory,The length of the statement  "                foreach (var registration in this.GetRegistrations(new TypeKey(genericArguments[0].TypeHandle' key)' true' genericArguments[0]).GetAll()) " is 137.
Long Statement,StyletIoC.Internal,Container,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Container.cs,TryCreateGenericTypesForUnboundGeneric,The length of the statement  "                    var implOfUnboundGenericType = unboundGeneric.Type.GetBaseTypesAndInterfaces().Single(x => x.Name == unboundGenericType.Name); " is 126.
Long Statement,StyletIoC.Internal,Container,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Container.cs,TryCreateGenericTypesForUnboundGeneric,The length of the statement  "                    var mapping = implOfUnboundGenericType.GenericTypeArguments.Zip(type.GenericTypeArguments' (n' t) => new { Type = t' Name = n }); " is 129.
Long Statement,StyletIoC.Internal,Container,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Container.cs,TryCreateGenericTypesForUnboundGeneric,The length of the statement  "                    newType = unboundGeneric.Type.MakeGenericType(unboundGeneric.Type.GetTypeInfo().GenericTypeParameters.Select(x => mapping.Single(t => t.Name.Name == x.Name).Type).ToArray()); " is 174.
Long Statement,StyletIoC.Internal,Container,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Container.cs,GetRegistrations,The length of the statement  "                    // Couldn't find this type - is it a 'get all' collection type? (i.e. they've put IEnumerable<TypeWeCanResolve> in a ctor param) " is 128.
Long Statement,StyletIoC.Internal,Container,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Container.cs,GetRegistrations,The length of the statement  "                        throw new StyletIoCRegistrationException(String.Format("No registrations found for service {0}."' type.GetDescription())); " is 122.
Long Statement,StyletIoC.Internal,Container,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Container.cs,AddRegistration,The length of the statement  "                return this.registrations.AddOrUpdate(typeKey' x => new SingleRegistration(registration)' (x' c) => c.AddRegistration(registration)); " is 133.
Long Statement,StyletIoC.Internal,Container,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Container.cs,AddRegistration,The length of the statement  "                throw new StyletIoCRegistrationException(String.Format("{0} Service type: {1}' key: '{2}'"' e.Message' Type.GetTypeFromHandle(typeKey.TypeHandle).GetDescription()' typeKey.Key)' e); " is 181.
Long Statement,StyletIoC.Internal,Container,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Container.cs,AddUnboundGeneric,The length of the statement  "            // We're not worried about thread-safety across multiple calls to this function (as it's only called as part of setup' which we're " is 130.
Long Statement,StyletIoC.Internal,Container,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Container.cs,AddUnboundGeneric,The length of the statement  "                throw new StyletIoCRegistrationException(String.Format("Multiple registrations for type {0} found"' Type.GetTypeFromHandle(typeKey.TypeHandle).GetDescription())); " is 162.
Long Statement,StyletIoC.Internal,Container,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Container.cs,GetFactoryForType,The length of the statement  "                throw new StyletIoCCreateFactoryException(String.Format("Unable to create a factory implementing type {0}' as it isn't an interface"' serviceType.GetDescription())); " is 165.
Long Statement,StyletIoC.Internal,Container,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Container.cs,GetFactoryForType,The length of the statement  "            var registrationContextField = typeBuilder.DefineField("registrationContext"' typeof(IRegistrationContext)' FieldAttributes.Private); " is 133.
Long Statement,StyletIoC.Internal,Container,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Container.cs,GetFactoryForType,The length of the statement  "            var ctorBuilder = typeBuilder.DefineConstructor(MethodAttributes.Public' CallingConventions.Standard' new[] { typeof(IRegistrationContext) }); " is 142.
Long Statement,StyletIoC.Internal,Container,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Container.cs,GetFactoryForType,The length of the statement  "                    throw new StyletIoCCreateFactoryException("Can only implement methods with zero arguments' or a single string argument"); " is 121.
Long Statement,StyletIoC.Internal,Container,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Container.cs,GetFactoryForType,The length of the statement  "                var methodBuilder = typeBuilder.DefineMethod(methodInfo.Name' MethodAttributes.Public | MethodAttributes.Virtual' methodInfo.ReturnType' parameters.Select(x => x.ParameterType).ToArray()); " is 188.
Long Statement,StyletIoC.Internal,Container,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Container.cs,GetFactoryForType,The length of the statement  "                throw new StyletIoCCreateFactoryException(String.Format("Unable to create factory type for interface {0}. Ensure that the interface is public' or add [assembly: InternalsVisibleTo(StyletIoCContainer.FactoryAssemblyName)] to your AssemblyInfo.cs"' serviceType.GetDescription())' e); " is 281.
Long Statement,StyletIoC.Internal.Creators,TypeCreator,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Creators\TypeCreator.cs,GetInstanceExpression,The length of the statement  "            // Find the constructor which has the most parameters which we can fulfill' accepting default values which we can't fulfill " is 123.
Long Statement,StyletIoC.Internal.Creators,TypeCreator,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Creators\TypeCreator.cs,GetInstanceExpression,The length of the statement  "            var ctorsWithAttribute = type.GetConstructors().Where(x => x.GetCustomAttribute<InjectAttribute>(true) != null).ToList(); " is 121.
Long Statement,StyletIoC.Internal.Creators,TypeCreator,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Creators\TypeCreator.cs,GetInstanceExpression,The length of the statement  "                throw new StyletIoCFindConstructorException(String.Format("Found more than one constructor with [Inject] on type {0}."' type.GetDescription())); " is 144.
Long Statement,StyletIoC.Internal.Creators,TypeCreator,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Creators\TypeCreator.cs,GetInstanceExpression,The length of the statement  "                var cantResolve = ctor.GetParameters().FirstOrDefault(p => !this.ParentContext.CanResolve(p.ParameterType' key) && !p.HasDefaultValue); " is 135.
Long Statement,StyletIoC.Internal.Creators,TypeCreator,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Creators\TypeCreator.cs,GetInstanceExpression,The length of the statement  "                    throw new StyletIoCFindConstructorException(String.Format("Found a constructor with [Inject] on type {0}' but can't resolve parameter '{1}' (of type {2}' and doesn't have a default value)."' type.GetDescription()' cantResolve.Name' cantResolve.ParameterType.GetDescription())); " is 277.
Long Statement,StyletIoC.Internal.Creators,TypeCreator,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Creators\TypeCreator.cs,GetInstanceExpression,The length of the statement  "                    .Where(c => c.GetParameters().All(p => p.ParameterType != type && (this.ParentContext.CanResolve(p.ParameterType' this.KeyForParameter(p)) || p.HasDefaultValue))) " is 162.
Long Statement,StyletIoC.Internal.Creators,TypeCreator,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Creators\TypeCreator.cs,GetInstanceExpression,The length of the statement  "                        var usingDefaultStr = (!this.ParentContext.CanResolve(p.ParameterType' key) && p.HasDefaultValue) ? " [Using Default]" : ""; " is 124.
Long Statement,StyletIoC.Internal.Creators,TypeCreator,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Creators\TypeCreator.cs,GetInstanceExpression,The length of the statement  "                        return String.Format("   {0}{1}: {2}{3}{4}"' p.ParameterType.GetDescription()' keyStr' canResolve ? "Success" : "Failure"' usingDefaultStr' recursiveStr); " is 154.
Long Statement,StyletIoC.Internal.Creators,TypeCreator,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Creators\TypeCreator.cs,GetInstanceExpression,The length of the statement  "                    var info = String.Join("\n\n"' type.GetConstructors().Select(c => String.Format("Constructor:\n{0}\n\n"' String.Join("\n"' c.GetParameters().Select(ctorParameterPrinter))))); " is 174.
Long Statement,StyletIoC.Internal.Creators,TypeCreator,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Creators\TypeCreator.cs,GetInstanceExpression,The length of the statement  "                    throw new StyletIoCFindConstructorException(String.Format("Unable to find a constructor for type {0} which we can call:\n{1}"' type.GetDescription()' info)); " is 157.
Long Statement,StyletIoC.Internal.Creators,TypeCreator,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Creators\TypeCreator.cs,GetInstanceExpression,The length of the statement  "                        throw new StyletIoCRegistrationException(String.Format("{0} Required by parameter '{1}' of type {2} (which is a {3})."' e.Message' x.Name' type.GetDescription()' x.ParameterType.GetDescription())' e); " is 200.
Long Statement,StyletIoC.Internal.RegistrationCollections,EmptyRegistrationCollection,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\RegistrationCollections\EmptyRegistrationCollection.cs,GetSingle,The length of the statement  "            throw new StyletIoCRegistrationException(String.Format("No registrations found for service {0}."' this.type.GetDescription())); " is 127.
Long Statement,StyletIoC.Internal.RegistrationCollections,SingleRegistration,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\RegistrationCollections\SingleRegistration.cs,AddRegistration,The length of the statement  "                throw new StyletIoCRegistrationException(String.Format("Multiple registrations for type {0} found."' Type.GetTypeFromHandle(registration.TypeHandle).GetDescription())); " is 168.
Long Statement,Stylet.Xaml,ActionBase,C:\repos\canton7_Stylet\Stylet\Xaml\ActionBase.cs,UpdateActionTarget,The length of the statement  "                    var e = new ActionTargetNullException(String.Format("ActionTarget on element {0} is null (method name is {1})"' this.Subject' this.MethodName)); " is 144.
Long Statement,Stylet.Xaml,ActionBase,C:\repos\canton7_Stylet\Stylet\Xaml\ActionBase.cs,UpdateActionTarget,The length of the statement  "                    this.logger.Info("ActionTarget on element {0} is null (method name is {1})' but NullTarget is not Throw' so carrying on"' this.Subject' this.MethodName); " is 153.
Long Statement,Stylet.Xaml,ActionBase,C:\repos\canton7_Stylet\Stylet\Xaml\ActionBase.cs,AssertTargetSet,The length of the statement  "                    "This probably means the control hasn't inherited it from a parent' e.g. because a ContextMenu or Popup sits in the visual tree. " + " is 132.
Long Statement,Stylet.Xaml,ActionBase,C:\repos\canton7_Stylet\Stylet\Xaml\ActionBase.cs,AssertTargetSet,The length of the statement  "                    "You will need so set 's:View.ActionTarget' explicitly. See the wiki section \"Actions\" for more details."' this.Subject' this.MethodName)); " is 141.
Long Statement,Stylet.Xaml,ActionBase,C:\repos\canton7_Stylet\Stylet\Xaml\ActionBase.cs,AssertTargetSet,The length of the statement  "                var ex = new ActionNotFoundException(String.Format("Unable to find method {0} on target {1}"' this.MethodName' this.Target.GetType().Name)); " is 140.
Long Statement,Stylet.Xaml,ActionBase,C:\repos\canton7_Stylet\Stylet\Xaml\ActionBase.cs,InvokeTargetMethod,The length of the statement  "            this.logger.Info("Invoking method {0} on target {1} with parameters ({2})"' this.MethodName' this.Target' parameters == null ? "none" : String.Join("' "' parameters)); " is 167.
Long Statement,Stylet.Xaml,ActionBase,C:\repos\canton7_Stylet\Stylet\Xaml\ActionBase.cs,InvokeTargetMethod,The length of the statement  "                this.logger.Error(e.InnerException' String.Format("Failed to invoke method {0} on target {1} with parameters ({2})"' this.MethodName' this.Target' parameters == null ? "none" : String.Join("' "' parameters))); " is 209.
Long Statement,Stylet.Xaml,ActionExtension,C:\repos\canton7_Stylet\Stylet\Xaml\ActionExtension.cs,ProvideValue,The length of the statement  "            // http://social.msdn.microsoft.com/Forums/vstudio/en-US/a9ead3d5-a4e4-4f9c-b507-b7a7d530c6a9/gaining-access-to-target-object-instead-of-shareddp-in-custom-markupextensions-providevalue-method?forum=wpf " is 202.
Long Statement,Stylet.Xaml,ActionExtension,C:\repos\canton7_Stylet\Stylet\Xaml\ActionExtension.cs,ProvideValue,The length of the statement  "                return new CommandAction(targetObject' rootObject' this.Method' this.CommandNullTargetBehaviour' this.CommandActionNotFoundBehaviour); " is 134.
Long Statement,Stylet.Xaml,ActionExtension,C:\repos\canton7_Stylet\Stylet\Xaml\ActionExtension.cs,ProvideValue,The length of the statement  "                var ec = new EventAction(targetObject' rootObject' propertyAsEventInfo.EventHandlerType' this.Method' this.EventNullTargetBehaviour' this.EventActionNotFoundBehaviour); " is 168.
Long Statement,Stylet.Xaml,ActionExtension,C:\repos\canton7_Stylet\Stylet\Xaml\ActionExtension.cs,ProvideValue,The length of the statement  "                    var ec = new EventAction(targetObject' rootObject' parameters[1].ParameterType' this.Method' this.EventNullTargetBehaviour' this.EventActionNotFoundBehaviour); " is 159.
Long Statement,Stylet.Xaml,CommandAction,C:\repos\canton7_Stylet\Stylet\Xaml\CommandAction.cs,AssertTargetMethodInfo,The length of the statement  "                var e = new ActionSignatureInvalidException(String.Format("Method {0} on {1} must have zero or one parameters"' this.MethodName' newTargetType.Name)); " is 150.
Long Statement,Stylet.Xaml,CommandAction,C:\repos\canton7_Stylet\Stylet\Xaml\CommandAction.cs,OnTargetChanged,The length of the statement  "                        logger.Warn("Found guard property {0} for action {1} on target {2}' but its return type wasn't bool. Therefore' ignoring"' this.GuardName' this.MethodName' newTarget); " is 167.
Long Statement,Stylet.Xaml,CommandAction,C:\repos\canton7_Stylet\Stylet\Xaml\CommandAction.cs,Execute,The length of the statement  "            // This is not going to be called very often' so don't bother to generate a delegate' in the way that we do for the method guard " is 128.
Long Statement,Stylet.Xaml,DebugConverter,C:\repos\canton7_Stylet\Stylet\Xaml\DebugConverter.cs,Convert,The length of the statement  "                this.Logger(String.Format(culture' "Convert: Value = '{0}' TargetType = '{1}' Parameter = '{2}'"' value' targetType' parameter)' this.Name); " is 140.
Long Statement,Stylet.Xaml,DebugConverter,C:\repos\canton7_Stylet\Stylet\Xaml\DebugConverter.cs,ConvertBack,The length of the statement  "                this.Logger(String.Format(culture' "ConvertBack: Value = '{0}' TargetType = '{1}' Parameter = '{2}'"' value' targetType' parameter)' this.Name); " is 144.
Long Statement,Stylet.Xaml,EventAction,C:\repos\canton7_Stylet\Stylet\Xaml\EventAction.cs,AssertTargetMethodInfo,The length of the statement  "                (methodParameters.Length == 1 && (typeof(EventArgs).IsAssignableFrom(methodParameters[0].ParameterType) || methodParameters[0].ParameterType == typeof(DependencyPropertyChangedEventArgs))) || " is 191.
Long Statement,Stylet.Xaml,EventAction,C:\repos\canton7_Stylet\Stylet\Xaml\EventAction.cs,AssertTargetMethodInfo,The length of the statement  "                (methodParameters.Length == 2 && (typeof(EventArgs).IsAssignableFrom(methodParameters[1].ParameterType) || methodParameters[1].ParameterType == typeof(DependencyPropertyChangedEventArgs))))) " is 190.
Long Statement,Stylet.Xaml,EventAction,C:\repos\canton7_Stylet\Stylet\Xaml\EventAction.cs,AssertTargetMethodInfo,The length of the statement  "                var e = new ActionSignatureInvalidException(String.Format("Method {0} on {1} must have the signatures void Method()' void Method(EventArgsOrSubClass e)' or void Method(object sender' EventArgsOrSubClass e)"' this.MethodName' newTargetType.Name)); " is 246.
Long Statement,Stylet.Xaml,EventAction,C:\repos\canton7_Stylet\Stylet\Xaml\EventAction.cs,GetDelegate,The length of the statement  "                var msg = String.Format("Event being bound to does not have a signature we know about. Method {0} on target {1}. Valid signatures are:" + " is 137.
Long Statement,Stylet.Xaml,View,C:\repos\canton7_Stylet\Stylet\Xaml\View.cs,SetContentProperty,The length of the statement  "                throw new InvalidOperationException(String.Format("Unable to find a Content property on type {0}. Make sure you're using 's:View.Model' on a suitable container' e.g. a ContentControl"' type.Name)); " is 197.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,C:\repos\canton7_Stylet\Stylet\obj\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Complex Conditional,Stylet,WindowManager,C:\repos\canton7_Stylet\Stylet\WindowManager.cs,CreateWindow,The conditional expression  "haveDisplayName != null && (String.IsNullOrEmpty(window.Title) || window.Title == view.GetType().Name) && BindingOperations.GetBindingBase(window' Window.TitleProperty) == null"  is complex.
Complex Conditional,Stylet,WindowManager,C:\repos\canton7_Stylet\Stylet\WindowManager.cs,CreateWindow,The conditional expression  "window.WindowStartupLocation == WindowStartupLocation.Manual && Double.IsNaN(window.Top) && Double.IsNaN(window.Left) &&                  BindingOperations.GetBinding(window' Window.TopProperty) == null && BindingOperations.GetBinding(window' Window.LeftProperty) == null"  is complex.
Complex Conditional,StyletIoC.Internal,Container,C:\repos\canton7_Stylet\Stylet\StyletIoC\Internal\Container.cs,CanResolve,The conditional expression  "this.registrations.TryGetValue(new TypeKey(type.TypeHandle' key)' out registrations) ||                  this.TryCreateFuncFactory(type' key' out registrations) ||                  this.TryCreateGenericTypesForUnboundGeneric(type' key' out registrations) ||                  this.TryCreateSelfBinding(type' key' out registrations)"  is complex.
Complex Conditional,Stylet.Xaml,EventAction,C:\repos\canton7_Stylet\Stylet\Xaml\EventAction.cs,AssertTargetMethodInfo,The conditional expression  "!(methodParameters.Length == 0 ||                  (methodParameters.Length == 1 && (typeof(EventArgs).IsAssignableFrom(methodParameters[0].ParameterType) || methodParameters[0].ParameterType == typeof(DependencyPropertyChangedEventArgs))) ||                  (methodParameters.Length == 2 && (typeof(EventArgs).IsAssignableFrom(methodParameters[1].ParameterType) || methodParameters[1].ParameterType == typeof(DependencyPropertyChangedEventArgs))))"  is complex.
Virtual Method Call from Constructor,Stylet,AllActive,C:\repos\canton7_Stylet\Stylet\ConductorAllActive.cs,AllActive,The constructor "AllActive" calls a virtual method "ActivateAndSetParent".
Virtual Method Call from Constructor,Stylet,AllActive,C:\repos\canton7_Stylet\Stylet\ConductorAllActive.cs,AllActive,The constructor "AllActive" calls a virtual method "ActivateAndSetParent".
Virtual Method Call from Constructor,Stylet,AllActive,C:\repos\canton7_Stylet\Stylet\ConductorAllActive.cs,AllActive,The constructor "AllActive" calls a virtual method "ActivateAndSetParent".
Virtual Method Call from Constructor,Stylet,OneActive,C:\repos\canton7_Stylet\Stylet\ConductorOneActive.cs,OneActive,The constructor "OneActive" calls a virtual method "ActiveItemMayHaveBeenRemovedFromItems".
Virtual Method Call from Constructor,Stylet,OneActive,C:\repos\canton7_Stylet\Stylet\ConductorOneActive.cs,OneActive,The constructor "OneActive" calls a virtual method "ActiveItemMayHaveBeenRemovedFromItems".
Virtual Method Call from Constructor,Stylet,OneActive,C:\repos\canton7_Stylet\Stylet\ConductorOneActive.cs,OneActive,The constructor "OneActive" calls a virtual method "ActiveItemMayHaveBeenRemovedFromItems".
Magic Number,Stylet,LabelledValue<T>,C:\repos\canton7_Stylet\Stylet\LabelledValue.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int hash = 17;                  if (this.Label != null)                      hash = hash * 23 + this.Label.GetHashCode();                  if (this.Value != null)                      hash = hash * 23 + this.Value.GetHashCode();                  return hash;              }
Magic Number,Stylet,LabelledValue<T>,C:\repos\canton7_Stylet\Stylet\LabelledValue.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int hash = 17;                  if (this.Label != null)                      hash = hash * 23 + this.Label.GetHashCode();                  if (this.Value != null)                      hash = hash * 23 + this.Value.GetHashCode();                  return hash;              }
Magic Number,Stylet,LabelledValue<T>,C:\repos\canton7_Stylet\Stylet\LabelledValue.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int hash = 17;                  if (this.Label != null)                      hash = hash * 23 + this.Label.GetHashCode();                  if (this.Value != null)                      hash = hash * 23 + this.Value.GetHashCode();                  return hash;              }
Magic Number,StyletIoC.Creation,BuilderTypeKey,C:\repos\canton7_Stylet\Stylet\StyletIoC\Creation\BuilderTypeKey.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int hash = 17;                  hash = (hash * 23) + this.Type.GetHashCode();                  if (this.Key != null)                      hash = (hash * 23) + this.Key.GetHashCode();                  return hash;              }
Magic Number,StyletIoC.Creation,BuilderTypeKey,C:\repos\canton7_Stylet\Stylet\StyletIoC\Creation\BuilderTypeKey.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int hash = 17;                  hash = (hash * 23) + this.Type.GetHashCode();                  if (this.Key != null)                      hash = (hash * 23) + this.Key.GetHashCode();                  return hash;              }
Magic Number,StyletIoC.Creation,BuilderTypeKey,C:\repos\canton7_Stylet\Stylet\StyletIoC\Creation\BuilderTypeKey.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int hash = 17;                  hash = (hash * 23) + this.Type.GetHashCode();                  if (this.Key != null)                      hash = (hash * 23) + this.Key.GetHashCode();                  return hash;              }
Magic Number,Stylet.Xaml,MultiBindingToActionTargetConverter,C:\repos\canton7_Stylet\Stylet\Xaml\ActionBase.cs,Convert,The following statement contains a magic number: Debug.Assert(values.Length == 2);
Magic Number,Stylet.Xaml,ActionExtension,C:\repos\canton7_Stylet\Stylet\Xaml\ActionExtension.cs,ProvideValue,The following statement contains a magic number: if (propertyAsMethodInfo != null)              {                  var parameters = propertyAsMethodInfo.GetParameters();                  if (parameters.Length == 2 && typeof(Delegate).IsAssignableFrom(parameters[1].ParameterType))                  {                      var ec = new EventAction(targetObject' rootObject' parameters[1].ParameterType' this.Method' this.EventNullTargetBehaviour' this.EventActionNotFoundBehaviour);                      return ec.GetDelegate();                  }              }
Magic Number,Stylet.Xaml,EventAction,C:\repos\canton7_Stylet\Stylet\Xaml\EventAction.cs,AssertTargetMethodInfo,The following statement contains a magic number: if (!(methodParameters.Length == 0 ||                  (methodParameters.Length == 1 && (typeof(EventArgs).IsAssignableFrom(methodParameters[0].ParameterType) || methodParameters[0].ParameterType == typeof(DependencyPropertyChangedEventArgs))) ||                  (methodParameters.Length == 2 && (typeof(EventArgs).IsAssignableFrom(methodParameters[1].ParameterType) || methodParameters[1].ParameterType == typeof(DependencyPropertyChangedEventArgs)))))              {                  var e = new ActionSignatureInvalidException(String.Format("Method {0} on {1} must have the signatures void Method()' void Method(EventArgsOrSubClass e)' or void Method(object sender' EventArgsOrSubClass e)"' this.MethodName' newTargetType.Name));                  logger.Error(e);                  throw e;              }
Magic Number,Stylet.Xaml,EventAction,C:\repos\canton7_Stylet\Stylet\Xaml\EventAction.cs,InvokeCommand,The following statement contains a magic number: switch (this.TargetMethodInfo.GetParameters().Length)              {                  case 1:                      parameters = new object[] { e };                      break;                                        case 2:                      parameters = new[] { sender' e };                      break;                    default:                      parameters = null;                      break;              }
Missing Default,Stylet,AllActive,C:\repos\canton7_Stylet\Stylet\ConductorAllActive.cs,AllActive,The following switch statement is missing a default case: switch (e.Action)                          {                              case NotifyCollectionChangedAction.Reset:                                  this.itemsBeforeReset = this.items.ToList();                                  break;                          }
Missing Default,Stylet,AllActive,C:\repos\canton7_Stylet\Stylet\ConductorAllActive.cs,AllActive,The following switch statement is missing a default case: switch (e.Action)                          {                              case NotifyCollectionChangedAction.Add:                                  this.ActivateAndSetParent(e.NewItems);                                  break;                                case NotifyCollectionChangedAction.Remove:                                  this.CloseAndCleanUp(e.OldItems' this.DisposeChildren);                                  break;                                case NotifyCollectionChangedAction.Replace:                                  this.ActivateAndSetParent(e.NewItems);                                  this.CloseAndCleanUp(e.OldItems' this.DisposeChildren);                                  break;                                case NotifyCollectionChangedAction.Reset:                                  this.ActivateAndSetParent(this.items.Except(this.itemsBeforeReset));                                  this.CloseAndCleanUp(this.itemsBeforeReset.Except(this.items)' this.DisposeChildren);                                  this.itemsBeforeReset = null;                                  break;                          }
Missing Default,Stylet,OneActive,C:\repos\canton7_Stylet\Stylet\ConductorOneActive.cs,OneActive,The following switch statement is missing a default case: switch (e.Action)                          {                              case NotifyCollectionChangedAction.Reset:                                  this.itemsBeforeReset = this.items.ToList();                                  break;                          }
Missing Default,Stylet,OneActive,C:\repos\canton7_Stylet\Stylet\ConductorOneActive.cs,OneActive,The following switch statement is missing a default case: switch (e.Action)                          {                              case NotifyCollectionChangedAction.Add:                                  this.SetParentAndSetActive(e.NewItems' false);                                  break;                                case NotifyCollectionChangedAction.Remove:                                  // ActiveItemMayHaveBeenRemovedFromItems may deactivate the ActiveItem; CloseAndCleanUp may close it.                                  // Call the methods in this order to avoid closing then deactivating (which causes reactivation)                                  this.ActiveItemMayHaveBeenRemovedFromItems();                                  this.CloseAndCleanUp(e.OldItems' this.DisposeChildren);                                  break;                                case NotifyCollectionChangedAction.Replace:                                  // ActiveItemMayHaveBeenRemovedFromItems may deactivate the ActiveItem; CloseAndCleanUp may close it.                                  // Call the methods in this order to avoid closing then deactivating (which causes reactivation)                                  this.ActiveItemMayHaveBeenRemovedFromItems();                                  this.CloseAndCleanUp(e.OldItems' this.DisposeChildren);                                  this.SetParentAndSetActive(e.NewItems' false);                                  break;                                case NotifyCollectionChangedAction.Reset:                                  // ActiveItemMayHaveBeenRemovedFromItems may deactivate the ActiveItem; CloseAndCleanUp may close it.                                  // Call the methods in this order to avoid closing then deactivating (which causes reactivation)                                  this.ActiveItemMayHaveBeenRemovedFromItems();                                  this.CloseAndCleanUp(this.itemsBeforeReset.Except(this.items)' this.DisposeChildren);                                  this.SetParentAndSetActive(this.items.Except(this.itemsBeforeReset)' false);                                  this.itemsBeforeReset = null;                                  break;                          }
Missing Default,Stylet,WindowConductor,C:\repos\canton7_Stylet\Stylet\WindowManager.cs,WindowStateChanged,The following switch statement is missing a default case: switch (this.window.WindowState)                  {                      case WindowState.Maximized:                      case WindowState.Normal:                          logger.Info("Window {0} maximized/restored: activating"' this.window);                          ScreenExtensions.TryActivate(this.viewModel);                          break;                        case WindowState.Minimized:                          logger.Info("Window {0} minimized: deactivating"' this.window);                          ScreenExtensions.TryDeactivate(this.viewModel);                          break;                  }
Missing Default,Stylet,MessageBoxView,C:\repos\canton7_Stylet\Stylet\obj\Debug\MessageBoxView.g.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.RootObject = ((Stylet.MessageBoxView)(target));              return;              }
