Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,LargeFileViewer.Models.Detectors,ColumnsSeparatorDetector,C:\repos\SergeyUsok_LargeFileViewer\LargeFileViewer\Models\Detectors\ColumnsSeparatorDetector.cs,DetectColumnSeparator,The method has 10 parameters.
Long Parameter List,LargeFileViewer.Models.Sorting,Sorter,C:\repos\SergeyUsok_LargeFileViewer\LargeFileViewer\Models\Sorting\Sorter.cs,ApplyExternalSort,The method has 7 parameters.
Long Parameter List,LargeFileViewer.Models.StreamReading,IndexedStream,C:\repos\SergeyUsok_LargeFileViewer\LargeFileViewer\Models\StreamReading\IndexedStream.cs,GetColumnsSet,The method has 5 parameters.
Long Statement,LargeFileViewer.Models.Detectors,ColumnsSeparatorDetector,C:\repos\SergeyUsok_LargeFileViewer\LargeFileViewer\Models\Detectors\ColumnsSeparatorDetector.cs,DetectColumnSeparator,The length of the statement  "	return rows.Select (line => line.ToCharArray ().Where (c => !char.IsLetterOrDigit (c)).GroupBy (c => c).Select (c => new { " is 122.
Long Statement,LargeFileViewer.Models.Detectors,ColumnTypeDetector,C:\repos\SergeyUsok_LargeFileViewer\LargeFileViewer\Models\Detectors\ColumnTypeDetector.cs,DetectColumnType,The length of the statement  "	return IsColumnInterger (columnValues) ? typeof(int) : IsColumnDouble (columnValues) ? typeof(double) : IsColumnBoolean (columnValues) ? typeof(bool) : IsColumnDateTime (columnValues) ? typeof(DateTime) : typeof(string); " is 220.
Long Statement,LargeFileViewer.Models.Detectors,ColumnTypeDetector,C:\repos\SergeyUsok_LargeFileViewer\LargeFileViewer\Models\Detectors\ColumnTypeDetector.cs,IsColumnDateTime,The length of the statement  "		if (!DateTime.TryParse (columnValue' CultureInfo.InvariantCulture' DateTimeStyles.AllowWhiteSpaces | DateTimeStyles.AssumeLocal' out value)) " is 140.
Long Statement,LargeFileViewer.Models.Sorting,AuxiliaryExtensions,C:\repos\SergeyUsok_LargeFileViewer\LargeFileViewer\Models\Sorting\AuxiliaryExtensions.cs,SubArray,The length of the statement  "		throw new ArgumentOutOfRangeException ("startIndex"' @"Sum of startIndex and length is greater than length of source array"); " is 125.
Long Statement,LargeFileViewer.Models.Sorting,Sorter,C:\repos\SergeyUsok_LargeFileViewer\LargeFileViewer\Models\Sorting\Sorter.cs,Sort,The length of the statement  "		var provider = _providersCache.ContainsKey (column) ? _providersCache [column] : new SortedRowsProvider (OriginalProvider' SortByColumn (column)); " is 146.
Long Statement,LargeFileViewer.Models.Sorting,Sorter,C:\repos\SergeyUsok_LargeFileViewer\LargeFileViewer\Models\Sorting\Sorter.cs,ApplyExternalSort,The length of the statement  "	.Select (range => OriginalProvider.ColumnsProvider.GetColumnsSet (column' range)).SortAscendingAsync (fc => fc.Value).SavePartialResult (fc => fc.ToString ()).Select (file => new FileInfo (file).Deserialize ().GetEnumerator ()).MergeAscending (fc => fc.Value).Select (fc => fc.ParentRowIndex).ToList (); " is 303.
Long Statement,LargeFileViewer.Models.Sorting,Sorter,C:\repos\SergeyUsok_LargeFileViewer\LargeFileViewer\Models\Sorting\Sorter.cs,ApplyInMemorySort,The length of the statement  "	return GenerateRanges (OriginalProvider.FetchCount ()' OriginalProvider.FetchCount ()).SelectMany (range => OriginalProvider.ColumnsProvider.GetColumnsSet (column' range)).OrderBy (fc => fc.Value).Select (fc => fc.ParentRowIndex).ToList (); " is 240.
Long Statement,LargeFileViewer.Models.Sorting.ExternalSort,ExternalSortPipeline,C:\repos\SergeyUsok_LargeFileViewer\LargeFileViewer\Models\Sorting\ExternalSort\ExternalSortPipeline.cs,SortAscendingAsync,The length of the statement  "	Func<IEnumerable<TSource>' PartialResult<TSource>> projector = part => new PartialResult<TSource> (part.OrderBy (keySelector).ForceEnumeration ()); " is 147.
Long Statement,LargeFileViewer.Models.StreamReading,IndexedStream,C:\repos\SergeyUsok_LargeFileViewer\LargeFileViewer\Models\StreamReading\IndexedStream.cs,GetColumnsSet,The length of the statement  "	return GetRawColumns (buffer' columnNumber' separator).Select (rawColumn => Encoding.UTF8.GetString (rawColumn).TrimEnd ('\r'' '\n')).ToList (); " is 144.
Long Statement,LargeFileViewer.Models.Virtualization,ColumnsProvider,C:\repos\SergeyUsok_LargeFileViewer\LargeFileViewer\Models\Virtualization\ColumnsProvider.cs,GetColumnsSet,The length of the statement  "	return _indexedStream.GetColumnsSet (columnIndex' range.StartIndex' range.Count' _columnsSeparator.First ()).Select (value => FileColumn.Create (++index' column' value' _columnTypes [column])); " is 193.
Long Statement,LargeFileViewer.Models.Virtualization,ColumnsProvider,C:\repos\SergeyUsok_LargeFileViewer\LargeFileViewer\Models\Virtualization\ColumnsProvider.cs,GetColumnsForRange,The length of the statement  "	return _indexedStream.GetLines (rowNumber' count).Zip (Enumerable.Range (rowNumber' count)' (row' number) => CreateColumns (row' number)); " is 138.
Long Statement,LargeFileViewer.Models.Virtualization,ColumnsProvider,C:\repos\SergeyUsok_LargeFileViewer\LargeFileViewer\Models\Virtualization\ColumnsProvider.cs,CreateColumns,The length of the statement  "	var columns = row.Split (_columnsSeparator' StringSplitOptions.None).Zip (Header' (value' header) => FileColumn.Create (rowNumber' header' value' typeof(string))); " is 163.
Long Statement,LargeFileViewer.Models.Virtualization,FileColumn,C:\repos\SergeyUsok_LargeFileViewer\LargeFileViewer\Models\Virtualization\FileColumn.cs,ToString,The length of the statement  "	return typeof(FileColumn).GetProperties ().Select (p => string.Format ("{0}{1}{2}"' p.Name' NameValueSeparator' p.GetValue (this))).Aggregate ((total' next) => string.Format ("{0}{1}{2}"' total' PropertySeparator' next)); " is 221.
Long Statement,LargeFileViewer.Models.Virtualization,FileColumn,C:\repos\SergeyUsok_LargeFileViewer\LargeFileViewer\Models\Virtualization\FileColumn.cs,FromString,The length of the statement  "	var properties = sortInfoString.Split (PropertySeparator).Select (p => p.Split (NameValueSeparator)).ToDictionary (keyValue => keyValue [0]' keyValue => keyValue [1]); " is 167.
Magic Number,LargeFileViewer.Models.Sorting.ExternalSort,ExternalSortPipeline,C:\repos\SergeyUsok_LargeFileViewer\LargeFileViewer\Models\Sorting\ExternalSort\ExternalSortPipeline.cs,CalculateDegreeOfParallelism,The following statement contains a magic number: return Environment.ProcessorCount == 1 ? 2 : Environment.ProcessorCount;  
Magic Number,LargeFileViewer.Models.StreamReading,IndexedStream,C:\repos\SergeyUsok_LargeFileViewer\LargeFileViewer\Models\StreamReading\IndexedStream.cs,IsEndOfLine,The following statement contains a magic number: return byteToCheck == 10;  
Magic Number,LargeFileViewer.Models.StreamReading,StreamIndexer,C:\repos\SergeyUsok_LargeFileViewer\LargeFileViewer\Models\StreamReading\StreamIndexer.cs,GetHeader,The following statement contains a magic number: while ((byteRead = stream.ReadByte ()) != -1 && byteRead != 10) {  	headerBytes.Add ((byte)byteRead);  }  
Magic Number,LargeFileViewer.Models.StreamReading,StreamIndexer,C:\repos\SergeyUsok_LargeFileViewer\LargeFileViewer\Models\StreamReading\StreamIndexer.cs,GetRowsIndexes,The following statement contains a magic number: while ((byteRead = stream.ReadByte ()) != -1)// where -1 is end of stream   {  	if (IsEndOfLine (byteRead)) {  		rowIndexes.Add (stream.Position);  	}  	processedBytesCount++;  	var progress = (int)(100 * processedBytesCount / stream.Length);  	reportProgress (progress);  }  
Magic Number,LargeFileViewer.Models.StreamReading,StreamIndexer,C:\repos\SergeyUsok_LargeFileViewer\LargeFileViewer\Models\StreamReading\StreamIndexer.cs,IsEndOfLine,The following statement contains a magic number: return byteToCheck == 10;  
Magic Number,LargeFileViewer.Models.Virtualization,ColumnsProvider,C:\repos\SergeyUsok_LargeFileViewer\LargeFileViewer\Models\Virtualization\ColumnsProvider.cs,DetectColumnTypes,The following statement contains a magic number: for (int columnNumber = 0; columnNumber < headers.Length; columnNumber++) {  	var columnValues = indexedStream.GetColumnsSet (columnNumber' 0' 10' columnsSeparator);  	// take top 10 rows for a investigation  	var type = ColumnTypeDetector.DetectColumnType (columnValues);  	types.Add (headers [columnNumber]' type);  }  
