Implementation smell,Namespace,Class,File,Method,Description
Complex Method,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,whichEquation,Cyclomatic complexity of the method is 18
Magic Number,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,whichEquation,The following statement contains a magic number: switch (firstEntry) {  case 0:  	if (secondEntry == 1) {  		// Solving for Amps and Ohms so we need to make sure we set the answer places to there.  		MainWindow.setAnswerPlaces (2' 3);  		//Calculate and return.  		answer [0] = wattsVoltsToAmps (firstValue' secondValue);  		answer [1] = wattsVoltsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 2) {  		MainWindow.setAnswerPlaces (1' 3);  		answer [0] = wattsAmpsToVolts (firstValue' secondValue);  		answer [1] = wattsAmpsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 3) {  		MainWindow.setAnswerPlaces (1' 2);  		answer [0] = wattsOhmsToVolts (firstValue' secondValue);  		answer [1] = wattsOhmsToAmps (firstValue' secondValue);  		return answer;  	}  	break;  case 1:  	if (secondEntry == 2) {  		MainWindow.setAnswerPlaces (0' 3);  		answer [0] = voltsAmpsToWatts (firstValue' secondValue);  		answer [1] = voltsAmpsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 3) {  		MainWindow.setAnswerPlaces (0' 2);  		answer [0] = voltsOhmsToWatts (firstValue' secondValue);  		answer [1] = voltsOhmsToAmps (firstValue' secondValue);  		return answer;  	}  	break;  case 2:  	MainWindow.setAnswerPlaces (0' 1);  	answer [0] = ampsOhmsToWatts (firstValue' secondValue);  	answer [1] = ampsOhmsToVolts (firstValue' secondValue);  	return answer;  }  
Magic Number,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,whichEquation,The following statement contains a magic number: switch (firstEntry) {  case 0:  	if (secondEntry == 1) {  		// Solving for Amps and Ohms so we need to make sure we set the answer places to there.  		MainWindow.setAnswerPlaces (2' 3);  		//Calculate and return.  		answer [0] = wattsVoltsToAmps (firstValue' secondValue);  		answer [1] = wattsVoltsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 2) {  		MainWindow.setAnswerPlaces (1' 3);  		answer [0] = wattsAmpsToVolts (firstValue' secondValue);  		answer [1] = wattsAmpsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 3) {  		MainWindow.setAnswerPlaces (1' 2);  		answer [0] = wattsOhmsToVolts (firstValue' secondValue);  		answer [1] = wattsOhmsToAmps (firstValue' secondValue);  		return answer;  	}  	break;  case 1:  	if (secondEntry == 2) {  		MainWindow.setAnswerPlaces (0' 3);  		answer [0] = voltsAmpsToWatts (firstValue' secondValue);  		answer [1] = voltsAmpsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 3) {  		MainWindow.setAnswerPlaces (0' 2);  		answer [0] = voltsOhmsToWatts (firstValue' secondValue);  		answer [1] = voltsOhmsToAmps (firstValue' secondValue);  		return answer;  	}  	break;  case 2:  	MainWindow.setAnswerPlaces (0' 1);  	answer [0] = ampsOhmsToWatts (firstValue' secondValue);  	answer [1] = ampsOhmsToVolts (firstValue' secondValue);  	return answer;  }  
Magic Number,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,whichEquation,The following statement contains a magic number: switch (firstEntry) {  case 0:  	if (secondEntry == 1) {  		// Solving for Amps and Ohms so we need to make sure we set the answer places to there.  		MainWindow.setAnswerPlaces (2' 3);  		//Calculate and return.  		answer [0] = wattsVoltsToAmps (firstValue' secondValue);  		answer [1] = wattsVoltsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 2) {  		MainWindow.setAnswerPlaces (1' 3);  		answer [0] = wattsAmpsToVolts (firstValue' secondValue);  		answer [1] = wattsAmpsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 3) {  		MainWindow.setAnswerPlaces (1' 2);  		answer [0] = wattsOhmsToVolts (firstValue' secondValue);  		answer [1] = wattsOhmsToAmps (firstValue' secondValue);  		return answer;  	}  	break;  case 1:  	if (secondEntry == 2) {  		MainWindow.setAnswerPlaces (0' 3);  		answer [0] = voltsAmpsToWatts (firstValue' secondValue);  		answer [1] = voltsAmpsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 3) {  		MainWindow.setAnswerPlaces (0' 2);  		answer [0] = voltsOhmsToWatts (firstValue' secondValue);  		answer [1] = voltsOhmsToAmps (firstValue' secondValue);  		return answer;  	}  	break;  case 2:  	MainWindow.setAnswerPlaces (0' 1);  	answer [0] = ampsOhmsToWatts (firstValue' secondValue);  	answer [1] = ampsOhmsToVolts (firstValue' secondValue);  	return answer;  }  
Magic Number,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,whichEquation,The following statement contains a magic number: switch (firstEntry) {  case 0:  	if (secondEntry == 1) {  		// Solving for Amps and Ohms so we need to make sure we set the answer places to there.  		MainWindow.setAnswerPlaces (2' 3);  		//Calculate and return.  		answer [0] = wattsVoltsToAmps (firstValue' secondValue);  		answer [1] = wattsVoltsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 2) {  		MainWindow.setAnswerPlaces (1' 3);  		answer [0] = wattsAmpsToVolts (firstValue' secondValue);  		answer [1] = wattsAmpsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 3) {  		MainWindow.setAnswerPlaces (1' 2);  		answer [0] = wattsOhmsToVolts (firstValue' secondValue);  		answer [1] = wattsOhmsToAmps (firstValue' secondValue);  		return answer;  	}  	break;  case 1:  	if (secondEntry == 2) {  		MainWindow.setAnswerPlaces (0' 3);  		answer [0] = voltsAmpsToWatts (firstValue' secondValue);  		answer [1] = voltsAmpsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 3) {  		MainWindow.setAnswerPlaces (0' 2);  		answer [0] = voltsOhmsToWatts (firstValue' secondValue);  		answer [1] = voltsOhmsToAmps (firstValue' secondValue);  		return answer;  	}  	break;  case 2:  	MainWindow.setAnswerPlaces (0' 1);  	answer [0] = ampsOhmsToWatts (firstValue' secondValue);  	answer [1] = ampsOhmsToVolts (firstValue' secondValue);  	return answer;  }  
Magic Number,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,whichEquation,The following statement contains a magic number: switch (firstEntry) {  case 0:  	if (secondEntry == 1) {  		// Solving for Amps and Ohms so we need to make sure we set the answer places to there.  		MainWindow.setAnswerPlaces (2' 3);  		//Calculate and return.  		answer [0] = wattsVoltsToAmps (firstValue' secondValue);  		answer [1] = wattsVoltsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 2) {  		MainWindow.setAnswerPlaces (1' 3);  		answer [0] = wattsAmpsToVolts (firstValue' secondValue);  		answer [1] = wattsAmpsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 3) {  		MainWindow.setAnswerPlaces (1' 2);  		answer [0] = wattsOhmsToVolts (firstValue' secondValue);  		answer [1] = wattsOhmsToAmps (firstValue' secondValue);  		return answer;  	}  	break;  case 1:  	if (secondEntry == 2) {  		MainWindow.setAnswerPlaces (0' 3);  		answer [0] = voltsAmpsToWatts (firstValue' secondValue);  		answer [1] = voltsAmpsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 3) {  		MainWindow.setAnswerPlaces (0' 2);  		answer [0] = voltsOhmsToWatts (firstValue' secondValue);  		answer [1] = voltsOhmsToAmps (firstValue' secondValue);  		return answer;  	}  	break;  case 2:  	MainWindow.setAnswerPlaces (0' 1);  	answer [0] = ampsOhmsToWatts (firstValue' secondValue);  	answer [1] = ampsOhmsToVolts (firstValue' secondValue);  	return answer;  }  
Magic Number,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,whichEquation,The following statement contains a magic number: switch (firstEntry) {  case 0:  	if (secondEntry == 1) {  		// Solving for Amps and Ohms so we need to make sure we set the answer places to there.  		MainWindow.setAnswerPlaces (2' 3);  		//Calculate and return.  		answer [0] = wattsVoltsToAmps (firstValue' secondValue);  		answer [1] = wattsVoltsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 2) {  		MainWindow.setAnswerPlaces (1' 3);  		answer [0] = wattsAmpsToVolts (firstValue' secondValue);  		answer [1] = wattsAmpsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 3) {  		MainWindow.setAnswerPlaces (1' 2);  		answer [0] = wattsOhmsToVolts (firstValue' secondValue);  		answer [1] = wattsOhmsToAmps (firstValue' secondValue);  		return answer;  	}  	break;  case 1:  	if (secondEntry == 2) {  		MainWindow.setAnswerPlaces (0' 3);  		answer [0] = voltsAmpsToWatts (firstValue' secondValue);  		answer [1] = voltsAmpsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 3) {  		MainWindow.setAnswerPlaces (0' 2);  		answer [0] = voltsOhmsToWatts (firstValue' secondValue);  		answer [1] = voltsOhmsToAmps (firstValue' secondValue);  		return answer;  	}  	break;  case 2:  	MainWindow.setAnswerPlaces (0' 1);  	answer [0] = ampsOhmsToWatts (firstValue' secondValue);  	answer [1] = ampsOhmsToVolts (firstValue' secondValue);  	return answer;  }  
Magic Number,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,whichEquation,The following statement contains a magic number: switch (firstEntry) {  case 0:  	if (secondEntry == 1) {  		// Solving for Amps and Ohms so we need to make sure we set the answer places to there.  		MainWindow.setAnswerPlaces (2' 3);  		//Calculate and return.  		answer [0] = wattsVoltsToAmps (firstValue' secondValue);  		answer [1] = wattsVoltsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 2) {  		MainWindow.setAnswerPlaces (1' 3);  		answer [0] = wattsAmpsToVolts (firstValue' secondValue);  		answer [1] = wattsAmpsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 3) {  		MainWindow.setAnswerPlaces (1' 2);  		answer [0] = wattsOhmsToVolts (firstValue' secondValue);  		answer [1] = wattsOhmsToAmps (firstValue' secondValue);  		return answer;  	}  	break;  case 1:  	if (secondEntry == 2) {  		MainWindow.setAnswerPlaces (0' 3);  		answer [0] = voltsAmpsToWatts (firstValue' secondValue);  		answer [1] = voltsAmpsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 3) {  		MainWindow.setAnswerPlaces (0' 2);  		answer [0] = voltsOhmsToWatts (firstValue' secondValue);  		answer [1] = voltsOhmsToAmps (firstValue' secondValue);  		return answer;  	}  	break;  case 2:  	MainWindow.setAnswerPlaces (0' 1);  	answer [0] = ampsOhmsToWatts (firstValue' secondValue);  	answer [1] = ampsOhmsToVolts (firstValue' secondValue);  	return answer;  }  
Magic Number,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,whichEquation,The following statement contains a magic number: switch (firstEntry) {  case 0:  	if (secondEntry == 1) {  		// Solving for Amps and Ohms so we need to make sure we set the answer places to there.  		MainWindow.setAnswerPlaces (2' 3);  		//Calculate and return.  		answer [0] = wattsVoltsToAmps (firstValue' secondValue);  		answer [1] = wattsVoltsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 2) {  		MainWindow.setAnswerPlaces (1' 3);  		answer [0] = wattsAmpsToVolts (firstValue' secondValue);  		answer [1] = wattsAmpsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 3) {  		MainWindow.setAnswerPlaces (1' 2);  		answer [0] = wattsOhmsToVolts (firstValue' secondValue);  		answer [1] = wattsOhmsToAmps (firstValue' secondValue);  		return answer;  	}  	break;  case 1:  	if (secondEntry == 2) {  		MainWindow.setAnswerPlaces (0' 3);  		answer [0] = voltsAmpsToWatts (firstValue' secondValue);  		answer [1] = voltsAmpsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 3) {  		MainWindow.setAnswerPlaces (0' 2);  		answer [0] = voltsOhmsToWatts (firstValue' secondValue);  		answer [1] = voltsOhmsToAmps (firstValue' secondValue);  		return answer;  	}  	break;  case 2:  	MainWindow.setAnswerPlaces (0' 1);  	answer [0] = ampsOhmsToWatts (firstValue' secondValue);  	answer [1] = ampsOhmsToVolts (firstValue' secondValue);  	return answer;  }  
Magic Number,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,whichEquation,The following statement contains a magic number: switch (firstEntry) {  case 0:  	if (secondEntry == 1) {  		// Solving for Amps and Ohms so we need to make sure we set the answer places to there.  		MainWindow.setAnswerPlaces (2' 3);  		//Calculate and return.  		answer [0] = wattsVoltsToAmps (firstValue' secondValue);  		answer [1] = wattsVoltsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 2) {  		MainWindow.setAnswerPlaces (1' 3);  		answer [0] = wattsAmpsToVolts (firstValue' secondValue);  		answer [1] = wattsAmpsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 3) {  		MainWindow.setAnswerPlaces (1' 2);  		answer [0] = wattsOhmsToVolts (firstValue' secondValue);  		answer [1] = wattsOhmsToAmps (firstValue' secondValue);  		return answer;  	}  	break;  case 1:  	if (secondEntry == 2) {  		MainWindow.setAnswerPlaces (0' 3);  		answer [0] = voltsAmpsToWatts (firstValue' secondValue);  		answer [1] = voltsAmpsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 3) {  		MainWindow.setAnswerPlaces (0' 2);  		answer [0] = voltsOhmsToWatts (firstValue' secondValue);  		answer [1] = voltsOhmsToAmps (firstValue' secondValue);  		return answer;  	}  	break;  case 2:  	MainWindow.setAnswerPlaces (0' 1);  	answer [0] = ampsOhmsToWatts (firstValue' secondValue);  	answer [1] = ampsOhmsToVolts (firstValue' secondValue);  	return answer;  }  
Magic Number,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,whichEquation,The following statement contains a magic number: switch (firstEntry) {  case 0:  	if (secondEntry == 1) {  		// Solving for Amps and Ohms so we need to make sure we set the answer places to there.  		MainWindow.setAnswerPlaces (2' 3);  		//Calculate and return.  		answer [0] = wattsVoltsToAmps (firstValue' secondValue);  		answer [1] = wattsVoltsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 2) {  		MainWindow.setAnswerPlaces (1' 3);  		answer [0] = wattsAmpsToVolts (firstValue' secondValue);  		answer [1] = wattsAmpsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 3) {  		MainWindow.setAnswerPlaces (1' 2);  		answer [0] = wattsOhmsToVolts (firstValue' secondValue);  		answer [1] = wattsOhmsToAmps (firstValue' secondValue);  		return answer;  	}  	break;  case 1:  	if (secondEntry == 2) {  		MainWindow.setAnswerPlaces (0' 3);  		answer [0] = voltsAmpsToWatts (firstValue' secondValue);  		answer [1] = voltsAmpsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 3) {  		MainWindow.setAnswerPlaces (0' 2);  		answer [0] = voltsOhmsToWatts (firstValue' secondValue);  		answer [1] = voltsOhmsToAmps (firstValue' secondValue);  		return answer;  	}  	break;  case 2:  	MainWindow.setAnswerPlaces (0' 1);  	answer [0] = ampsOhmsToWatts (firstValue' secondValue);  	answer [1] = ampsOhmsToVolts (firstValue' secondValue);  	return answer;  }  
Magic Number,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,whichEquation,The following statement contains a magic number: switch (firstEntry) {  case 0:  	if (secondEntry == 1) {  		// Solving for Amps and Ohms so we need to make sure we set the answer places to there.  		MainWindow.setAnswerPlaces (2' 3);  		//Calculate and return.  		answer [0] = wattsVoltsToAmps (firstValue' secondValue);  		answer [1] = wattsVoltsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 2) {  		MainWindow.setAnswerPlaces (1' 3);  		answer [0] = wattsAmpsToVolts (firstValue' secondValue);  		answer [1] = wattsAmpsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 3) {  		MainWindow.setAnswerPlaces (1' 2);  		answer [0] = wattsOhmsToVolts (firstValue' secondValue);  		answer [1] = wattsOhmsToAmps (firstValue' secondValue);  		return answer;  	}  	break;  case 1:  	if (secondEntry == 2) {  		MainWindow.setAnswerPlaces (0' 3);  		answer [0] = voltsAmpsToWatts (firstValue' secondValue);  		answer [1] = voltsAmpsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 3) {  		MainWindow.setAnswerPlaces (0' 2);  		answer [0] = voltsOhmsToWatts (firstValue' secondValue);  		answer [1] = voltsOhmsToAmps (firstValue' secondValue);  		return answer;  	}  	break;  case 2:  	MainWindow.setAnswerPlaces (0' 1);  	answer [0] = ampsOhmsToWatts (firstValue' secondValue);  	answer [1] = ampsOhmsToVolts (firstValue' secondValue);  	return answer;  }  
Magic Number,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,whichEquation,The following statement contains a magic number: if (secondEntry == 1) {  	// Solving for Amps and Ohms so we need to make sure we set the answer places to there.  	MainWindow.setAnswerPlaces (2' 3);  	//Calculate and return.  	answer [0] = wattsVoltsToAmps (firstValue' secondValue);  	answer [1] = wattsVoltsToOhms (firstValue' secondValue);  	return answer;  }  
Magic Number,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,whichEquation,The following statement contains a magic number: if (secondEntry == 1) {  	// Solving for Amps and Ohms so we need to make sure we set the answer places to there.  	MainWindow.setAnswerPlaces (2' 3);  	//Calculate and return.  	answer [0] = wattsVoltsToAmps (firstValue' secondValue);  	answer [1] = wattsVoltsToOhms (firstValue' secondValue);  	return answer;  }  
Magic Number,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,whichEquation,The following statement contains a magic number: MainWindow.setAnswerPlaces (2' 3);  
Magic Number,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,whichEquation,The following statement contains a magic number: MainWindow.setAnswerPlaces (2' 3);  
Magic Number,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,whichEquation,The following statement contains a magic number: if (secondEntry == 2) {  	MainWindow.setAnswerPlaces (1' 3);  	answer [0] = wattsAmpsToVolts (firstValue' secondValue);  	answer [1] = wattsAmpsToOhms (firstValue' secondValue);  	return answer;  }  
Magic Number,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,whichEquation,The following statement contains a magic number: if (secondEntry == 2) {  	MainWindow.setAnswerPlaces (1' 3);  	answer [0] = wattsAmpsToVolts (firstValue' secondValue);  	answer [1] = wattsAmpsToOhms (firstValue' secondValue);  	return answer;  }  
Magic Number,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,whichEquation,The following statement contains a magic number: MainWindow.setAnswerPlaces (1' 3);  
Magic Number,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,whichEquation,The following statement contains a magic number: if (secondEntry == 3) {  	MainWindow.setAnswerPlaces (1' 2);  	answer [0] = wattsOhmsToVolts (firstValue' secondValue);  	answer [1] = wattsOhmsToAmps (firstValue' secondValue);  	return answer;  }  
Magic Number,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,whichEquation,The following statement contains a magic number: if (secondEntry == 3) {  	MainWindow.setAnswerPlaces (1' 2);  	answer [0] = wattsOhmsToVolts (firstValue' secondValue);  	answer [1] = wattsOhmsToAmps (firstValue' secondValue);  	return answer;  }  
Magic Number,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,whichEquation,The following statement contains a magic number: MainWindow.setAnswerPlaces (1' 2);  
Magic Number,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,whichEquation,The following statement contains a magic number: if (secondEntry == 2) {  	MainWindow.setAnswerPlaces (0' 3);  	answer [0] = voltsAmpsToWatts (firstValue' secondValue);  	answer [1] = voltsAmpsToOhms (firstValue' secondValue);  	return answer;  }  
Magic Number,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,whichEquation,The following statement contains a magic number: if (secondEntry == 2) {  	MainWindow.setAnswerPlaces (0' 3);  	answer [0] = voltsAmpsToWatts (firstValue' secondValue);  	answer [1] = voltsAmpsToOhms (firstValue' secondValue);  	return answer;  }  
Magic Number,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,whichEquation,The following statement contains a magic number: MainWindow.setAnswerPlaces (0' 3);  
Magic Number,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,whichEquation,The following statement contains a magic number: if (secondEntry == 3) {  	MainWindow.setAnswerPlaces (0' 2);  	answer [0] = voltsOhmsToWatts (firstValue' secondValue);  	answer [1] = voltsOhmsToAmps (firstValue' secondValue);  	return answer;  }  
Magic Number,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,whichEquation,The following statement contains a magic number: if (secondEntry == 3) {  	MainWindow.setAnswerPlaces (0' 2);  	answer [0] = voltsOhmsToWatts (firstValue' secondValue);  	answer [1] = voltsOhmsToAmps (firstValue' secondValue);  	return answer;  }  
Magic Number,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,whichEquation,The following statement contains a magic number: MainWindow.setAnswerPlaces (0' 2);  
Magic Number,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,wattsVoltsToOhms,The following statement contains a magic number: return Math.Pow (volts' 2) / watts;  
Magic Number,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,wattsAmpsToOhms,The following statement contains a magic number: return watts / Math.Pow (amps' 2);  
Magic Number,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,voltsOhmsToWatts,The following statement contains a magic number: return Math.Pow (volts' 2) / ohms;  
Magic Number,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,ampsOhmsToWatts,The following statement contains a magic number: return Math.Pow (amps' 2) * ohms;  
Missing Default,TestEcigShit,Equations,C:\repos\havidad_ERecipeCalculator\TestEcigShit\Equations.cs,whichEquation,The following switch statement is missing a default case: switch (firstEntry) {  case 0:  	if (secondEntry == 1) {  		// Solving for Amps and Ohms so we need to make sure we set the answer places to there.  		MainWindow.setAnswerPlaces (2' 3);  		//Calculate and return.  		answer [0] = wattsVoltsToAmps (firstValue' secondValue);  		answer [1] = wattsVoltsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 2) {  		MainWindow.setAnswerPlaces (1' 3);  		answer [0] = wattsAmpsToVolts (firstValue' secondValue);  		answer [1] = wattsAmpsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 3) {  		MainWindow.setAnswerPlaces (1' 2);  		answer [0] = wattsOhmsToVolts (firstValue' secondValue);  		answer [1] = wattsOhmsToAmps (firstValue' secondValue);  		return answer;  	}  	break;  case 1:  	if (secondEntry == 2) {  		MainWindow.setAnswerPlaces (0' 3);  		answer [0] = voltsAmpsToWatts (firstValue' secondValue);  		answer [1] = voltsAmpsToOhms (firstValue' secondValue);  		return answer;  	}  	if (secondEntry == 3) {  		MainWindow.setAnswerPlaces (0' 2);  		answer [0] = voltsOhmsToWatts (firstValue' secondValue);  		answer [1] = voltsOhmsToAmps (firstValue' secondValue);  		return answer;  	}  	break;  case 2:  	MainWindow.setAnswerPlaces (0' 1);  	answer [0] = ampsOhmsToWatts (firstValue' secondValue);  	answer [1] = ampsOhmsToVolts (firstValue' secondValue);  	return answer;  }  
