Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerLifecycleIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerLifecycleIntegrationTests.cs,DoTest,Cyclomatic complexity of the method is 8
Long Parameter List,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerRetryIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerRetryIntegrationTests.cs,DoTestRetry,The method has 5 parameters. Parameters: messageCount' txSize' failFrequency' concurrentConsumers' stateful
Long Parameter List,Spring.Messaging.Amqp.Rabbit.Tests.Listener,SimpleMessageListenerContainerIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\SimpleMessageListenerContainerIntegrationTests.cs,SimpleMessageListenerContainerIntegrationTests,The method has 6 parameters. Parameters: messageCount' concurrency' acknowledgeMode' transactional' txSize' externalTransaction
Long Parameter List,Spring.Messaging.Amqp.Rabbit.Tests.Listener,SimpleMessageListenerContainerIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\SimpleMessageListenerContainerIntegrationTests.cs,GetParams,The method has 6 parameters. Parameters: i' messageCount' concurrency' acknowledgeMode' transactional' txSize
Long Parameter List,Spring.Messaging.Amqp.Rabbit.Tests.Listener,SimpleMessageListenerContainerIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\SimpleMessageListenerContainerIntegrationTests.cs,GetParams,The method has 5 parameters. Parameters: i' messageCount' concurrency' acknowledgeMode' txSize
Long Parameter List,Spring.Messaging.Amqp.Rabbit.Tests.Listener,SimpleMessageListenerContainerIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\SimpleMessageListenerContainerIntegrationTests.cs,GetParams,The method has 5 parameters. Parameters: i' messageCount' concurrency' acknowledgeMode' transactional
Long Identifier,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateTests.cs,TestConvertBytes,The length of the parameter convertMessageIfNecessaryMethod is 31.
Long Identifier,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateTests.cs,TestConvertString,The length of the parameter convertMessageIfNecessaryMethod is 31.
Long Identifier,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateTests.cs,TestConvertSerializable,The length of the parameter convertMessageIfNecessaryMethod is 31.
Long Identifier,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateTests.cs,TestConvertMessage,The length of the parameter convertMessageIfNecessaryMethod is 31.
Long Identifier,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateTests.cs,DontHangConsumerThread,The length of the parameter doSendAndReceiveWithTemporaryMethod is 35.
Long Identifier,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ExternalTxManagerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\ExternalTxManagerTests.cs,TestMessageListener,The length of the parameter cachedChannelsTransactionalField is 32.
Long Identifier,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ExternalTxManagerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\ExternalTxManagerTests.cs,TestMessageListenerWithRabbitTxManager,The length of the parameter cachedChannelsTransactionalField is 32.
Long Identifier,Spring.Messaging.Amqp.Rabbit.Tests.Listener,LocallyTransactedTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\LocallyTransactedTests.cs,TestMessageListener,The length of the parameter cachedChannelsTransactionalField is 32.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Config,AdminParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\AdminParserTests.cs,LoadContext,The length of the statement  "                var resourceName = @"assembly://Spring.Messaging.Amqp.Rabbit.Tests/Spring.Messaging.Amqp.Rabbit.Tests.Config/" + typeof(AdminParserTests).Name + "-" + this.contextIndex + "-context.xml"; " is 186.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Config,ConnectionFactoryParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\ConnectionFactoryParserTests.cs,Setup,The length of the statement  "            var resourceName = @"assembly://Spring.Messaging.Amqp.Rabbit.Tests/Spring.Messaging.Amqp.Rabbit.Tests.Config/" + typeof(ConnectionFactoryParserTests).Name + "-context.xml"; " is 172.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Config,ExchangeParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\ExchangeParserTests.cs,Setup,The length of the statement  "            var resourceName = @"assembly://Spring.Messaging.Amqp.Rabbit.Tests/Spring.Messaging.Amqp.Rabbit.Tests.Config/" + typeof(ExchangeParserTests).Name + "-context.xml"; " is 163.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Config,ListenerContainerParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\ListenerContainerParserTests.cs,Setup,The length of the statement  "            var resourceName = @"assembly://Spring.Messaging.Amqp.Rabbit.Tests/Spring.Messaging.Amqp.Rabbit.Tests.Config/" + typeof(ListenerContainerParserTests).Name + "-context.xml"; " is 172.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Config,ListenerContainerParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\ListenerContainerParserTests.cs,TestParseWithAdviceChain,The length of the statement  "            var adviceChainField = typeof(SimpleMessageListenerContainer).GetField("adviceChain"' BindingFlags.NonPublic | BindingFlags.Instance); " is 134.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Config,ListenerContainerParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\ListenerContainerParserTests.cs,TestParseWithDefaults,The length of the statement  "            var concurrentConsumersField = typeof(SimpleMessageListenerContainer).GetField("concurrentConsumers"' BindingFlags.NonPublic | BindingFlags.Instance); " is 150.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Config,ListenerContainerParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\ListenerContainerParserTests.cs,TestParseWithDefaultQueueRejectedFalse,The length of the statement  "            var concurrentConsumersField = typeof(SimpleMessageListenerContainer).GetField("concurrentConsumers"' BindingFlags.NonPublic | BindingFlags.Instance); " is 150.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Config,ListenerContainerParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\ListenerContainerParserTests.cs,TestParseWithDefaultQueueRejectedFalse,The length of the statement  "            var defaultRequeueRejectedField = typeof(SimpleMessageListenerContainer).GetField("defaultRequeueRejected"' BindingFlags.NonPublic | BindingFlags.Instance); " is 156.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Config,ListenerContainerParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\ListenerContainerParserTests.cs,TestParseWithTx,The length of the statement  "            var txSizeField = typeof(SimpleMessageListenerContainer).GetField("txSize"' BindingFlags.NonPublic | BindingFlags.Instance); " is 124.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Config,ListenerContainerParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\ListenerContainerParserTests.cs,TestIncompatibleTxAtts,The length of the statement  "                        Assert.That(ex.InnerException.Message' Is.StringStarting("Listener Container - cannot set channel-transacted with acknowledge='NONE'")); " is 136.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Config,ListenerContainerPlaceholderParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\ListenerContainerPlaceholderParserTests.cs,TestParseWithQueueNames,The length of the statement  "            Assert.AreEqual(5' ReflectionUtils.GetInstanceFieldValue(container' "concurrentConsumers")' "concurrency placeholder not processed correctly"); " is 143.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Config,ListenerContainerPlaceholderParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\ListenerContainerPlaceholderParserTests.cs,TestParseWithQueueNames,The length of the statement  "            Assert.AreEqual(1' ReflectionUtils.GetInstanceFieldValue(container' "txSize")' "transaction-size placeholder not processed correctly"); " is 135.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Config,ListenerContainerPlaceholderParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\ListenerContainerPlaceholderParserTests.cs,TestParseWithQueueNames,The length of the statement  "            Assert.AreEqual(this.objectFactory.GetObject<TestObject>("testObject")' ((MessageListenerAdapter)listenerAccessor).HandlerObject); " is 130.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Config,QueueParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\QueueParserTests.cs,TestIllegalAnonymousQueue,The length of the statement  "            Assert.Throws<ObjectDefinitionStoreException>(() => new XmlObjectFactory(resource)' "Parser fails to reject invalid state of anonymous queues"); " is 144.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Config,RabbitNamespaceHandlerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\RabbitNamespaceHandlerTests.cs,Setup,The length of the statement  "            var resourceName = @"assembly://Spring.Messaging.Amqp.Rabbit.Tests/Spring.Messaging.Amqp.Rabbit.Tests.Config/" + typeof(RabbitNamespaceHandlerTests).Name + "-context.xml"; " is 171.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Config,TemplateParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\TemplateParserTests.cs,TestWithReplyQ,The length of the statement  "            // TODO: Once GetObject<T>(nameValue) works correctly var queueObject = this.objectFactory.GetObject<Queue>("reply.queue"); " is 123.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Config,TemplateParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\TemplateParserTests.cs,TestWithReplyQ,The length of the statement  "            var messageListenerField = typeof(AbstractMessageListenerContainer).GetField("messageListener"' BindingFlags.NonPublic | BindingFlags.Instance); " is 144.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Config,TemplateParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\TemplateParserTests.cs,TestWithReplyQ,The length of the statement  "            var queueNamesField = typeof(AbstractMessageListenerContainer).GetField("queueNames"' BindingFlags.NonPublic | BindingFlags.Instance); " is 134.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Connection,AbstractConnectionFactoryTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Connection\AbstractConnectionFactoryTests.cs,TestWithListener,The length of the statement  "            mockConnectionListener.Setup(listener => listener.OnCreate(It.IsAny<Rabbit.Connection.IConnection>())).Callback(() => called.IncrementValueAndReturn()); " is 152.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Connection,AbstractConnectionFactoryTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Connection\AbstractConnectionFactoryTests.cs,TestWithListener,The length of the statement  "            mockConnectionListener.Setup(listener => listener.OnClose(It.IsAny<Rabbit.Connection.IConnection>())).Callback(() => called.DecrementValueAndReturn()); " is 151.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Connection,AbstractConnectionFactoryTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Connection\AbstractConnectionFactoryTests.cs,TestWithListenerRegisteredAfterOpen,The length of the statement  "            mockConnectionListener.Setup(listener => listener.OnCreate(It.IsAny<Rabbit.Connection.IConnection>())).Callback(() => called.IncrementValueAndReturn()); " is 152.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Connection,AbstractConnectionFactoryTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Connection\AbstractConnectionFactoryTests.cs,TestWithListenerRegisteredAfterOpen,The length of the statement  "            mockConnectionListener.Setup(listener => listener.OnClose(It.IsAny<Rabbit.Connection.IConnection>())).Callback(() => called.DecrementValueAndReturn()); " is 151.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Connection,AbstractConnectionFactoryTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Connection\AbstractConnectionFactoryTests.cs,TestCloseInvalidConnection,The length of the statement  "            mockConnectionFactory.Setup(factory => factory.CreateConnection()).ReturnsInOrder(mockConnection1.Object' mockConnection2.Object); " is 130.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Connection,CachingConnectionFactoryTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Connection\CachingConnectionFactoryTests.cs,TestCacheSizeExceeded,The length of the statement  "            mockConnection.Setup(c => c.CreateModel()).ReturnsInOrder(mockChannel1.Object' mockChannel2.Object' mockChannel3.Object); " is 121.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Connection,CachingConnectionFactoryTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Connection\CachingConnectionFactoryTests.cs,TestWithChannelListener,The length of the statement  "            mockConnectionListener.Setup(m => m.OnCreate(It.IsAny<Rabbit.Connection.IConnection>())).Callback((Rabbit.Connection.IConnection conn) => called.IncrementValueAndReturn()); " is 172.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Connection,CachingConnectionFactoryTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Connection\CachingConnectionFactoryTests.cs,TestWithChannelListener,The length of the statement  "            mockConnectionListener.Setup(m => m.OnClose(It.IsAny<Rabbit.Connection.IConnection>())).Callback((Rabbit.Connection.IConnection conn) => called.DecrementValueAndReturn()); " is 171.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Connection,SingleConnectionFactoryTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Connection\SingleConnectionFactoryTests.cs,TestWithChannelListener,The length of the statement  "            mockChannelListener.Setup(listener => listener.OnCreate(It.IsAny<IModel>()' It.IsAny<bool>())).Callback(() => called.IncrementValueAndReturn()); " is 144.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitAdminIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitAdminIntegrationTests.cs,TestRemoveBindingWithDefaultExchangeImplicitBinding,The length of the statement  "            var binding = new Binding(queueName' Binding.DestinationType.Queue' RabbitAdmin.DEFAULT_EXCHANGE_NAME' queueName' null); " is 120.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitBindingIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitBindingIntegrationTests.cs,CreateConsumer,The length of the statement  "            var consumer = new BlockingQueueConsumer(accessor.ConnectionFactory' new DefaultMessagePropertiesConverter()' new ActiveObjectCounter<BlockingQueueConsumer>()' AcknowledgeModeUtils.AcknowledgeMode.Auto' true' 1' queue.Name); " is 224.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateHeaderTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateHeaderTests.cs,TestPushPop,The length of the statement  "            var pushHeaderMethod = typeof(RabbitTemplate).GetMethod("PushHeaderValue"' BindingFlags.NonPublic | BindingFlags.Instance); " is 123.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateHeaderTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateHeaderTests.cs,TestPushPop,The length of the statement  "            var popHeaderMethod = typeof(RabbitTemplate).GetMethod("PopHeaderValue"' BindingFlags.NonPublic | BindingFlags.Instance); " is 121.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateHeaderTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateHeaderTests.cs,TestReplyToOneDeep,The length of the statement  "            mockChannel.Setup(m => m.BasicPublish(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<bool>()' It.IsAny<bool>()' It.IsAny<IBasicProperties>()' It.IsAny<byte[]>())).Callback<string' string' bool' bool' IBasicProperties' byte[]>( " is 228.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateHeaderTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateHeaderTests.cs,TestReplyToTwoDeep,The length of the statement  "            mockChannel.Setup(m => m.BasicPublish(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<bool>()' It.IsAny<bool>()' It.IsAny<IBasicProperties>()' It.IsAny<byte[]>())).Callback<string' string' bool' bool' IBasicProperties' byte[]> " is 227.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateHeaderTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateHeaderTests.cs,TestReplyToThreeDeep,The length of the statement  "            mockChannel.Setup(m => m.BasicPublish(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<bool>()' It.IsAny<bool>()' It.IsAny<IBasicProperties>()' It.IsAny<byte[]>())).Callback<string' string' bool' bool' IBasicProperties' byte[]> " is 227.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestReceiveInExternalTransaction,The length of the statement  "            mockCallback.Setup(c => c.DoInTransaction(It.IsAny<ITransactionStatus>())).Returns(() => (string)this.template.ReceiveAndConvert(ROUTE)); " is 137.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestReceiveInExternalTransactionAutoAck,The length of the statement  "            mockCallback.Setup(c => c.DoInTransaction(It.IsAny<ITransactionStatus>())).Returns(() => (string)this.template.ReceiveAndConvert(ROUTE)); " is 137.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplatePerformanceIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplatePerformanceIntegrationTests.cs,TestSendAndReceiveExternalTransacted,The length of the statement  "            var transactionTemplate = new TransactionTemplate(new RabbitTemplatePerformanceIntegrationTestsTransactionManager()).Execute( " is 125.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateTests.cs,TestConvertBytes,The length of the statement  "            var convertMessageIfNecessaryMethod = typeof(RabbitTemplate).GetMethod("ConvertMessageIfNecessary"' BindingFlags.NonPublic | BindingFlags.Instance); " is 148.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateTests.cs,TestConvertString,The length of the statement  "            var convertMessageIfNecessaryMethod = typeof(RabbitTemplate).GetMethod("ConvertMessageIfNecessary"' BindingFlags.NonPublic | BindingFlags.Instance); " is 148.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateTests.cs,TestConvertSerializable,The length of the statement  "            var convertMessageIfNecessaryMethod = typeof(RabbitTemplate).GetMethod("ConvertMessageIfNecessary"' BindingFlags.NonPublic | BindingFlags.Instance); " is 148.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateTests.cs,TestConvertMessage,The length of the statement  "            var convertMessageIfNecessaryMethod = typeof(RabbitTemplate).GetMethod("ConvertMessageIfNecessary"' BindingFlags.NonPublic | BindingFlags.Instance); " is 148.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateTests.cs,DontHangConsumerThread,The length of the statement  "            mockChannel.Setup(m => m.BasicConsume(It.IsAny<string>()' It.IsAny<bool>()' It.IsAny<string>()' It.IsAny<bool>()' It.IsAny<bool>()' It.IsAny<IDictionary>()' It.IsAny<IBasicConsumer>())).Callback " is 194.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateTests.cs,DontHangConsumerThread,The length of the statement  "            var doSendAndReceiveWithTemporaryMethod = typeof(RabbitTemplate).GetMethod("DoSendAndReceiveWithTemporary"' BindingFlags.NonPublic | BindingFlags.Instance); " is 156.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateTests.cs,DontHangConsumerThread,The length of the statement  "            consumer.Value.HandleBasicDeliver("foo"' envelope.DeliveryTag' envelope.Redelivered' envelope.Exchange' envelope.RoutingKey' new BasicProperties()' new byte[0]); " is 161.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,BlockingQueueConsumerIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\BlockingQueueConsumerIntegrationTests.cs,TestTransactionalLowLevel,The length of the statement  "            var blockingQueueConsumer = new BlockingQueueConsumer(connectionFactory' new DefaultMessagePropertiesConverter()' new ActiveObjectCounter<BlockingQueueConsumer>()' AcknowledgeModeUtils.AcknowledgeMode.Auto' true' 1' queue.Name); " is 228.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,BlockingQueueConsumerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\BlockingQueueConsumerTests.cs,TestRequeueOrNot,The length of the statement  "                connectionFactory.Object' new DefaultMessagePropertiesConverter()' new ActiveObjectCounter<BlockingQueueConsumer>()' AcknowledgeModeUtils.AcknowledgeMode.Auto' true' 1' "testQ"); " is 178.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,BlockingQueueConsumerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\BlockingQueueConsumerTests.cs,TestRequeueOrNotGuts,The length of the statement  "            var deliveryTagsField = typeof(BlockingQueueConsumer).GetField("deliveryTags"' BindingFlags.NonPublic | BindingFlags.Instance); " is 127.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ExternalTxManagerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\ExternalTxManagerTests.cs,TestMessageListener,The length of the statement  "            onlyChannel.Setup(m => m.BasicConsume(It.IsAny<string>()' It.IsAny<bool>()' It.IsAny<IBasicConsumer>())).Callback<string' bool' IBasicConsumer>( " is 144.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ExternalTxManagerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\ExternalTxManagerTests.cs,TestMessageListener,The length of the statement  "            onlyChannel.Verify(m => m.BasicPublish(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<bool>()' It.IsAny<bool>()' It.IsAny<IBasicProperties>()' It.IsAny<byte[]>())' Times.Once()); " is 180.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ExternalTxManagerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\ExternalTxManagerTests.cs,TestMessageListener,The length of the statement  "            var cachedChannelsTransactionalField = typeof(CachingConnectionFactory).GetField("cachedChannelsTransactional"' BindingFlags.NonPublic | BindingFlags.Instance); " is 160.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ExternalTxManagerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\ExternalTxManagerTests.cs,TestChannelAwareMessageListener,The length of the statement  "            onlyChannel.Setup(m => m.BasicConsume(It.IsAny<string>()' It.IsAny<bool>()' It.IsAny<IBasicConsumer>())).Callback<string' bool' IBasicConsumer>( " is 144.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ExternalTxManagerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\ExternalTxManagerTests.cs,TestChannelAwareMessageListener,The length of the statement  "            onlyChannel.Verify(m => m.BasicPublish(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<bool>()' It.IsAny<bool>()' It.IsAny<IBasicProperties>()' It.IsAny<byte[]>())' Times.Once()); " is 180.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ExternalTxManagerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\ExternalTxManagerTests.cs,TestChannelAwareMessageListenerDontExpose,The length of the statement  "            onlyChannel.Setup(m => m.BasicConsume(It.IsAny<string>()' It.IsAny<bool>()' It.IsAny<IBasicConsumer>())).Callback<string' bool' IBasicConsumer>( " is 144.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ExternalTxManagerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\ExternalTxManagerTests.cs,TestChannelAwareMessageListenerDontExpose,The length of the statement  "            onlyChannel.Verify(m => m.BasicPublish(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<bool>()' It.IsAny<bool>()' It.IsAny<IBasicProperties>()' It.IsAny<byte[]>())' Times.Once()); " is 180.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ExternalTxManagerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\ExternalTxManagerTests.cs,TestMessageListenerWithRabbitTxManager,The length of the statement  "            onlyChannel.Setup(m => m.BasicConsume(It.IsAny<string>()' It.IsAny<bool>()' It.IsAny<IBasicConsumer>())).Callback<string' bool' IBasicConsumer>( " is 144.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ExternalTxManagerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\ExternalTxManagerTests.cs,TestMessageListenerWithRabbitTxManager,The length of the statement  "            onlyChannel.Verify(m => m.BasicPublish(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<bool>()' It.IsAny<bool>()' It.IsAny<IBasicProperties>()' It.IsAny<byte[]>())' Times.Once()); " is 180.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ExternalTxManagerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\ExternalTxManagerTests.cs,TestMessageListenerWithRabbitTxManager,The length of the statement  "            var cachedChannelsTransactionalField = typeof(CachingConnectionFactory).GetField("cachedChannelsTransactional"' BindingFlags.NonPublic | BindingFlags.Instance); " is 160.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,LocallyTransactedTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\LocallyTransactedTests.cs,TestMessageListener,The length of the statement  "            onlyChannel.Setup(m => m.BasicConsume(It.IsAny<string>()' It.IsAny<bool>()' It.IsAny<IBasicConsumer>())).Callback<string' bool' IBasicConsumer>( " is 144.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,LocallyTransactedTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\LocallyTransactedTests.cs,TestMessageListener,The length of the statement  "            onlyChannel.Verify(m => m.BasicPublish(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<bool>()' It.IsAny<bool>()' It.IsAny<IBasicProperties>()' It.IsAny<byte[]>())' Times.Once()); " is 180.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,LocallyTransactedTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\LocallyTransactedTests.cs,TestMessageListener,The length of the statement  "            var cachedChannelsTransactionalField = typeof(CachingConnectionFactory).GetField("cachedChannelsTransactional"' BindingFlags.NonPublic | BindingFlags.Instance); " is 160.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,LocallyTransactedTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\LocallyTransactedTests.cs,TestChannelAwareMessageListener,The length of the statement  "            onlyChannel.Setup(m => m.BasicConsume(It.IsAny<string>()' It.IsAny<bool>()' It.IsAny<IBasicConsumer>())).Callback<string' bool' IBasicConsumer>( " is 144.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,LocallyTransactedTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\LocallyTransactedTests.cs,TestChannelAwareMessageListener,The length of the statement  "            onlyChannel.Verify(m => m.BasicPublish(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<bool>()' It.IsAny<bool>()' It.IsAny<IBasicProperties>()' It.IsAny<byte[]>())' Times.Once()); " is 180.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,LocallyTransactedTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\LocallyTransactedTests.cs,TestChannelAwareMessageListenerDontExpose,The length of the statement  "            firstChannel.Setup(m => m.BasicConsume(It.IsAny<string>()' It.IsAny<bool>()' It.IsAny<IBasicConsumer>())).Callback<string' bool' IBasicConsumer>( " is 145.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,LocallyTransactedTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\LocallyTransactedTests.cs,TestChannelAwareMessageListenerDontExpose,The length of the statement  "            secondChannel.Verify(m => m.BasicPublish(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<bool>()' It.IsAny<bool>()' It.IsAny<IBasicProperties>()' It.IsAny<byte[]>())' Times.Once()); " is 182.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerErrorHandlerIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerErrorHandlerIntegrationTests.cs,TestErrorHandlerInvokeExceptionFromPoco,The length of the statement  "            this.DoTest(messageCount' this.errorHandler.Object' latch' new MessageListenerAdapter(new PocoThrowingExceptionListener(latch' new Exception("Pojo exception")))); " is 162.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerErrorHandlerIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerErrorHandlerIntegrationTests.cs,TestErrorHandlerInvokeRuntimeExceptionFromPoco,The length of the statement  "            this.DoTest(messageCount' this.errorHandler.Object' latch' new MessageListenerAdapter(new PocoThrowingExceptionListener(latch' new Exception("Pojo runtime exception")))); " is 170.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerErrorHandlerIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerErrorHandlerIntegrationTests.cs,TestErrorHandlerListenerExecutionFailedExceptionFromListener,The length of the statement  "            this.DoTest(messageCount' this.errorHandler.Object' latch' new ThrowingExceptionListener(latch' new ListenerExecutionFailedException("Listener throws specific runtime exception"' null))); " is 187.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerErrorHandlerIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerErrorHandlerIntegrationTests.cs,TestErrorHandlerRegularRuntimeExceptionFromListener,The length of the statement  "            this.DoTest(messageCount' this.errorHandler.Object' latch' new ThrowingExceptionListener(latch' new Exception("Listener runtime exception"))); " is 142.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerErrorHandlerIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerErrorHandlerIntegrationTests.cs,TestErrorHandlerInvokeExceptionFromChannelAwareListener,The length of the statement  "            this.DoTest(messageCount' this.errorHandler.Object' latch' new ThrowingExceptionChannelAwareListener(latch' new Exception("Channel aware listener exception"))); " is 160.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerErrorHandlerIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerErrorHandlerIntegrationTests.cs,TestErrorHandlerInvokeRuntimeExceptionFromChannelAwareListener,The length of the statement  "            this.DoTest(messageCount' this.errorHandler.Object' latch' new ThrowingExceptionChannelAwareListener(latch' new Exception("Channel aware listener runtime exception"))); " is 168.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerLifecycleIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerLifecycleIntegrationTests.cs,DoTest,The length of the statement  "                    Assert.True(messagesReceivedBeforeStart < count' "Expected additional messages received after start: " + messagesReceivedBeforeStart + ">=" + count); " is 149.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,TransactionModeUtils,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerLifecycleIntegrationTests.cs,AcknowledgeMode,The length of the statement  "{ return mode == TransactionMode.OFF ? AcknowledgeModeUtils.AcknowledgeMode.None : AcknowledgeModeUtils.AcknowledgeMode.Auto; }" is 127.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerMultipleQueueIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerMultipleQueueIntegrationTests.cs,TestMultipleQueues,The length of the statement  "            mockConfigurer.Setup(c => c.Configure(It.IsAny<SimpleMessageListenerContainer>())).Callback<SimpleMessageListenerContainer>((container) => container.Queues = new[] { queue1' queue2 }); " is 184.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerMultipleQueueIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerMultipleQueueIntegrationTests.cs,TestMultipleQueueNames,The length of the statement  "            mockConfigurer.Setup(c => c.Configure(It.IsAny<SimpleMessageListenerContainer>())).Callback<SimpleMessageListenerContainer>((container) => container.QueueNames = new[] { queue1.Name' queue2.Name }); " is 198.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerMultipleQueueIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerMultipleQueueIntegrationTests.cs,TestMultipleQueuesWithConcurrentConsumers,The length of the statement  "            mockConfigurer.Setup(c => c.Configure(It.IsAny<SimpleMessageListenerContainer>())).Callback<SimpleMessageListenerContainer>((container) => container.Queues = new[] { queue1' queue2 }); " is 184.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerMultipleQueueIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerMultipleQueueIntegrationTests.cs,TestMultipleQueueNamesWithConcurrentConsumers,The length of the statement  "            mockConfigurer.Setup(c => c.Configure(It.IsAny<SimpleMessageListenerContainer>())).Callback<SimpleMessageListenerContainer>((container) => container.QueueNames = new[] { queue1.Name' queue2.Name }); " is 198.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerRecoveryCachingConnectionIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerRecoveryCachingConnectionIntegrationTests.cs,TestListenerSendsMessageAndThenContainerCommits,The length of the statement  "            this.container = this.CreateContainer(queue.Name' new ChannelSenderListener(sendQueue.Name' latch' false)' connectionFactory); " is 126.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerRecoveryCachingConnectionIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerRecoveryCachingConnectionIntegrationTests.cs,TestListenerSendsMessageAndThenRollback,The length of the statement  "            this.container = this.CreateContainer(queue.Name' new ChannelSenderListener(sendQueue.Name' latch' true)' connectionFactory); " is 125.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerRecoveryCachingConnectionIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerRecoveryCachingConnectionIntegrationTests.cs,TestListenerRecoversFromClosedConnection,The length of the statement  "            this.container = this.CreateContainer(queue.Name' new CloseConnectionListener((IConnectionProxy)connectionFactory.CreateConnection()' latch)' connectionFactory); " is 161.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,SimpleMessageListenerContainerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\SimpleMessageListenerContainerTests.cs,TestLazyConsumerCount,The length of the statement  "            var concurrentConsumersField = typeof(SimpleMessageListenerContainer).GetField("concurrentConsumers"' BindingFlags.NonPublic | BindingFlags.Instance); " is 150.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Listener,UnackedRawIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\UnackedRawIntegrationTests.cs,Init,The length of the statement  "            // Note: the Java client includes a convenience method with one int argument that sets the prefetchSize to 0 and global to false. " is 129.
Long Statement,Spring.Messaging.Amqp.Rabbit.Tests.Transaction,RabbitTransactionManagerIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Transaction\RabbitTransactionManagerIntegrationTests.cs,TestReceiveInTransaction,The length of the statement  "            mockCallback.Setup(c => c.DoInTransaction(It.IsAny<ITransactionStatus>())).Returns(() => (string)this.template.ReceiveAndConvert(ROUTE)); " is 137.
Empty Catch Block,Spring.Messaging.Amqp.Rabbit.Tests.Connection,CachingConnectionFactoryIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Connection\CachingConnectionFactoryIntegrationTests.cs,TestHardErrorAndReconnect,The method has an empty catch block.
Empty Catch Block,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestSendToNonExistentAndThenReceive,The method has an empty catch block.
Empty Catch Block,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestReceiveInExternalTransactionWithRollback,The method has an empty catch block.
Empty Catch Block,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestReceiveInExternalTransactionWithNoRollback,The method has an empty catch block.
Empty Catch Block,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestSendInExternalTransactionWithRollback,The method has an empty catch block.
Empty Catch Block,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ThrowingExceptionListener,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerErrorHandlerIntegrationTests.cs,OnMessage,The method has an empty catch block.
Empty Catch Block,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ThrowingExceptionChannelAwareListener,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerErrorHandlerIntegrationTests.cs,OnMessage,The method has an empty catch block.
Empty Catch Block,Spring.Messaging.Amqp.Rabbit.Tests.Transaction,RabbitTransactionManagerIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Transaction\RabbitTransactionManagerIntegrationTests.cs,TestReceiveInTransactionWithRollback,The method has an empty catch block.
Empty Catch Block,Spring.Messaging.Amqp.Rabbit.Tests.Transaction,RabbitTransactionManagerIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Transaction\RabbitTransactionManagerIntegrationTests.cs,TestSendInTransactionWithRollback,The method has an empty catch block.
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Config,AdminParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\AdminParserTests.cs,TestValid,The following statement contains a magic number: this.contextIndex = 2;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Config,ConnectionFactoryParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\ConnectionFactoryParserTests.cs,TestKitchenSink,The following statement contains a magic number: Assert.AreEqual(10' connectionFactory.ChannelCacheSize);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Config,ConnectionFactoryParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\ConnectionFactoryParserTests.cs,TestNative,The following statement contains a magic number: Assert.AreEqual(10' connectionFactory.ChannelCacheSize);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Config,ConnectionFactoryParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\ConnectionFactoryParserTests.cs,TestWithExecutor,The following statement contains a magic number: Assert.AreEqual(10' connectionFactory.ChannelCacheSize);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Config,ConnectionFactoryParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\ConnectionFactoryParserTests.cs,TestWithExecutorService,The following statement contains a magic number: Assert.AreEqual(10' connectionFactory.ChannelCacheSize);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Config,ConnectionFactoryParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\ConnectionFactoryParserTests.cs,TestMultiHost,The following statement contains a magic number: Assert.AreEqual(10' connectionFactory.ChannelCacheSize);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Config,ConnectionFactoryParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\ConnectionFactoryParserTests.cs,TestMultiHost,The following statement contains a magic number: Assert.AreEqual(3' addresses.Length);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Config,ConnectionFactoryParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\ConnectionFactoryParserTests.cs,TestMultiHost,The following statement contains a magic number: Assert.AreEqual(1234' addresses[0].Port);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Config,ConnectionFactoryParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\ConnectionFactoryParserTests.cs,TestMultiHost,The following statement contains a magic number: Assert.AreEqual(5672' addresses[1].Port);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Config,ConnectionFactoryParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\ConnectionFactoryParserTests.cs,TestMultiHost,The following statement contains a magic number: Assert.AreEqual("host3"' addresses[2].HostName);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Config,ConnectionFactoryParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\ConnectionFactoryParserTests.cs,TestMultiHost,The following statement contains a magic number: Assert.AreEqual(4567' addresses[2].Port);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Config,ConnectionFactoryParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\ConnectionFactoryParserTests.cs,TestMultiHost,The following statement contains a magic number: Assert.AreEqual(4567' addresses[2].Port);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Config,ExchangeParserIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\ExchangeParserIntegrationTests.cs,TestBindingsDeclared,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Config,FederatedExchangeParserIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\FederatedExchangeParserIntegrationTests.cs,TestBindingsDeclared,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Config,ListenerContainerParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\ListenerContainerParserTests.cs,TestParseWithAdviceChain,The following statement contains a magic number: Assert.AreEqual(3' ((IAdvice[])adviceChain).Count());
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Config,ListenerContainerParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\ListenerContainerParserTests.cs,TestParseWithTx,The following statement contains a magic number: Assert.AreEqual(5' (int)txSize);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Config,ListenerContainerPlaceholderParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\ListenerContainerPlaceholderParserTests.cs,TestParseWithQueueNames,The following statement contains a magic number: Assert.AreEqual(5' ReflectionUtils.GetInstanceFieldValue(container' "concurrentConsumers")' "concurrency placeholder not processed correctly");
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Config,QueueParserIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\QueueParserIntegrationTests.cs,TestArgumentsQueue,The following statement contains a magic number: Assert.AreEqual(100L' queue.Arguments["x-message-ttl"]);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Config,QueueParserIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\QueueParserIntegrationTests.cs,TestArgumentsQueue,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Config,QueueParserPlaceholderTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\QueueParserPlaceholderTests.cs,CanGetRabbitQueue,The following statement contains a magic number: Assert.That(obj.Arguments["x-message-ttl"]' Is.EqualTo(100L));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Config,QueueParserTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\QueueParserTests.cs,TestArgumentsQueue,The following statement contains a magic number: Assert.AreEqual(100L' queue.Arguments["x-message-ttl"]);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Config,RabbitNamespaceHandlerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Config\RabbitNamespaceHandlerTests.cs,TestBindings,The following statement contains a magic number: Assert.AreEqual(17' bindings.Count);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Connection,AbstractConnectionFactoryTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Connection\AbstractConnectionFactoryTests.cs,TestCloseInvalidConnection,The following statement contains a magic number: mockConnectionFactory.Verify(c => c.CreateConnection()' Times.Exactly(2));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Connection,CachingConnectionFactoryIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Connection\CachingConnectionFactoryIntegrationTests.cs,TestHardErrorAndReconnect,The following statement contains a magic number: Assert.True(latch.Wait(1000));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Connection,CachingConnectionFactoryTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Connection\CachingConnectionFactoryTests.cs,TestWithConnectionFactoryCacheSize,The following statement contains a magic number: ccf.ChannelCacheSize = 2;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Connection,CachingConnectionFactoryTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Connection\CachingConnectionFactoryTests.cs,TestWithConnectionFactoryCacheSize,The following statement contains a magic number: mockConnection.Verify(conn => conn.CreateModel()' Times.Exactly(2));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Connection,CachingConnectionFactoryTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Connection\CachingConnectionFactoryTests.cs,TestCacheSizeExceeded,The following statement contains a magic number: mockConnection.Verify(c => c.CreateModel()' Times.Exactly(3));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Connection,CachingConnectionFactoryTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Connection\CachingConnectionFactoryTests.cs,TestCacheSizeExceededAfterClose,The following statement contains a magic number: mockConnection.Verify(c => c.CreateModel()' Times.Exactly(2));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Connection,CachingConnectionFactoryTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Connection\CachingConnectionFactoryTests.cs,TestTransactionalAndNonTransactionalChannelsSegregated,The following statement contains a magic number: mockConnection.Verify(c => c.CreateModel()' Times.Exactly(2));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Connection,CachingConnectionFactoryTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Connection\CachingConnectionFactoryTests.cs,TestWithConnectionFactoryDestroy,The following statement contains a magic number: mockChannel1.Setup(m => m.GetHashCode()).Returns(2);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Connection,CachingConnectionFactoryTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Connection\CachingConnectionFactoryTests.cs,TestWithConnectionFactoryDestroy,The following statement contains a magic number: ccf.ChannelCacheSize = 2;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Connection,CachingConnectionFactoryTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Connection\CachingConnectionFactoryTests.cs,TestWithConnectionFactoryDestroy,The following statement contains a magic number: mockConnection.Verify(c => c.CreateModel()' Times.Exactly(2));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Connection,SharedConnectionProxy,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Connection\SharedConnectionProxy.cs,GetHashCode,The following statement contains a magic number: return 31 + ((this.target == null) ? 0 : this.target.GetHashCode());
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Connection,SingleConnectionFactoryTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Connection\SingleConnectionFactoryTests.cs,TestWithChannelListener,The following statement contains a magic number: Assert.AreEqual(2' called.Value);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,Producer,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\Producer.cs,SendMessages,The following statement contains a magic number: properties.Headers.Add("float"' 3.14);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitAdminTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitAdminTests.cs,TestNoFailOnStartupWithMissingBroker,The following statement contains a magic number: connectionFactory.Port = 434343;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitAdminTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitAdminTests.cs,TestFailOnFirstUseWithMissingBroker,The following statement contains a magic number: connectionFactory.Port = 434343;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitBindingIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitBindingIntegrationTests.cs,CreateConsumer,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitBindingIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitBindingIntegrationTests.cs,CreateConsumer,The following statement contains a magic number: n++ < 100
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitBindingIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitBindingIntegrationTests.cs,GetResult,The following statement contains a magic number: var response = consumer.NextMessage(200);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateHeaderTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateHeaderTests.cs,TestReplyToThreeDeep,The following statement contains a magic number: mockChannel.Setup(m => m.BasicPublish(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<bool>()' It.IsAny<bool>()' It.IsAny<IBasicProperties>()' It.IsAny<byte[]>())).Callback<string' string' bool' bool' IBasicProperties' byte[]>                  (                      (a1' a2' a3' a4' a5' a6) =>                      {                          var basicProps = a5;                          props.Add(basicProps);                          var springProps = new DefaultMessagePropertiesConverter().ToMessageProperties(basicProps' null' "UTF-8");                          var replyMessage = new Message(Encoding.UTF8.GetBytes("!dlrow olleH")' springProps);                          if (count.IncrementValueAndReturn() < 2)                          {                              var anotherMessage = new Message(Encoding.UTF8.GetBytes("Second")' springProps);                              replyMessage = template.SendAndReceive(anotherMessage);                              nestedReplyTo.Add(replyMessage.MessageProperties.ReplyTo);                              nestedReplyStack.Add((string)replyMessage.MessageProperties.Headers[RabbitTemplate.STACKED_REPLY_TO_HEADER]);                              nestedCorrelation.Add((string)replyMessage.MessageProperties.Headers[RabbitTemplate.STACKED_CORRELATION_HEADER]);                          }                            template.OnMessage(replyMessage);                      });
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateHeaderTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateHeaderTests.cs,TestReplyToThreeDeep,The following statement contains a magic number: Assert.AreEqual(2' props.Count);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestAtomicSendAndReceive,The following statement contains a magic number: var received = Task.Factory.StartNew(                  () =>                  {                      Message insidemessage = null;                      for (int i = 0; i < 10; i++)                      {                          insidemessage = template.Receive();                          if (insidemessage != null)                          {                              break;                          }                            Thread.Sleep(100);                      }                        Assert.IsNotNull(insidemessage' "No message received");                      template.Send(insidemessage.MessageProperties.ReplyTo' insidemessage);                      return insidemessage;                  });
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestAtomicSendAndReceive,The following statement contains a magic number: var received = Task.Factory.StartNew(                  () =>                  {                      Message insidemessage = null;                      for (int i = 0; i < 10; i++)                      {                          insidemessage = template.Receive();                          if (insidemessage != null)                          {                              break;                          }                            Thread.Sleep(100);                      }                        Assert.IsNotNull(insidemessage' "No message received");                      template.Send(insidemessage.MessageProperties.ReplyTo' insidemessage);                      return insidemessage;                  });
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestAtomicSendAndReceive,The following statement contains a magic number: var success = received.Wait(1000);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestAtomicSendAndReceiveWithRoutingKey,The following statement contains a magic number: var received = Task.Factory.StartNew(                  () =>                  {                      Message internalmessage = null;                      for (int i = 0; i < 10; i++)                      {                          internalmessage = template.Receive(ROUTE);                          if (internalmessage != null)                          {                              break;                          }                            Thread.Sleep(100);                      }                        Assert.IsNotNull(internalmessage' "No message received");                      template.Send(internalmessage.MessageProperties.ReplyTo' internalmessage);                      return internalmessage;                  });
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestAtomicSendAndReceiveWithRoutingKey,The following statement contains a magic number: var received = Task.Factory.StartNew(                  () =>                  {                      Message internalmessage = null;                      for (int i = 0; i < 10; i++)                      {                          internalmessage = template.Receive(ROUTE);                          if (internalmessage != null)                          {                              break;                          }                            Thread.Sleep(100);                      }                        Assert.IsNotNull(internalmessage' "No message received");                      template.Send(internalmessage.MessageProperties.ReplyTo' internalmessage);                      return internalmessage;                  });
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestAtomicSendAndReceiveWithRoutingKey,The following statement contains a magic number: var success = received.Wait(1000);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestAtomicSendAndReceiveWithExchangeAndRoutingKey,The following statement contains a magic number: var received = Task.Factory.StartNew(                  () =>                  {                      Message internalmessage = null;                      for (var i = 0; i < 10; i++)                      {                          internalmessage = template.Receive(ROUTE);                          if (internalmessage != null)                          {                              break;                          }                            Thread.Sleep(100);                      }                        Assert.IsNotNull(internalmessage' "No message received");                      template.Send(internalmessage.MessageProperties.ReplyTo' internalmessage);                      return internalmessage;                  });
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestAtomicSendAndReceiveWithExchangeAndRoutingKey,The following statement contains a magic number: var received = Task.Factory.StartNew(                  () =>                  {                      Message internalmessage = null;                      for (var i = 0; i < 10; i++)                      {                          internalmessage = template.Receive(ROUTE);                          if (internalmessage != null)                          {                              break;                          }                            Thread.Sleep(100);                      }                        Assert.IsNotNull(internalmessage' "No message received");                      template.Send(internalmessage.MessageProperties.ReplyTo' internalmessage);                      return internalmessage;                  });
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestAtomicSendAndReceiveWithExchangeAndRoutingKey,The following statement contains a magic number: var success = received.Wait(1000);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestAtomicSendAndReceiveWithConversion,The following statement contains a magic number: var received = Task.Factory.StartNew(                  () =>                  {                      Message message = null;                      for (var i = 0; i < 10; i++)                      {                          message = template.Receive();                          if (message != null)                          {                              break;                          }                            Thread.Sleep(100);                      }                        Assert.IsNotNull(message' "No message received");                      template.Send(message.MessageProperties.ReplyTo' message);                      return (string)template.MessageConverter.FromMessage(message);                  });
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestAtomicSendAndReceiveWithConversion,The following statement contains a magic number: var received = Task.Factory.StartNew(                  () =>                  {                      Message message = null;                      for (var i = 0; i < 10; i++)                      {                          message = template.Receive();                          if (message != null)                          {                              break;                          }                            Thread.Sleep(100);                      }                        Assert.IsNotNull(message' "No message received");                      template.Send(message.MessageProperties.ReplyTo' message);                      return (string)template.MessageConverter.FromMessage(message);                  });
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestAtomicSendAndReceiveWithConversion,The following statement contains a magic number: var success = received.Wait(1000);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestAtomicSendAndReceiveWithConversionUsingRoutingKey,The following statement contains a magic number: var received = Task.Factory.StartNew(                  () =>                  {                      Message message = null;                      for (var i = 0; i < 10; i++)                      {                          message = this.template.Receive(ROUTE);                          if (message != null)                          {                              break;                          }                            Thread.Sleep(100);                      }                        Assert.IsNotNull(message' "No message received");                      this.template.Send(message.MessageProperties.ReplyTo' message);                      return (string)this.template.MessageConverter.FromMessage(message);                  });
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestAtomicSendAndReceiveWithConversionUsingRoutingKey,The following statement contains a magic number: var received = Task.Factory.StartNew(                  () =>                  {                      Message message = null;                      for (var i = 0; i < 10; i++)                      {                          message = this.template.Receive(ROUTE);                          if (message != null)                          {                              break;                          }                            Thread.Sleep(100);                      }                        Assert.IsNotNull(message' "No message received");                      this.template.Send(message.MessageProperties.ReplyTo' message);                      return (string)this.template.MessageConverter.FromMessage(message);                  });
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestAtomicSendAndReceiveWithConversionUsingRoutingKey,The following statement contains a magic number: var success = received.Wait(1000);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestAtomicSendAndReceiveWithConversionUsingExchangeAndRoutingKey,The following statement contains a magic number: var received = Task.Factory.StartNew(                  () =>                  {                      Message message = null;                      for (var i = 0; i < 10; i++)                      {                          message = this.template.Receive(ROUTE);                          if (message != null)                          {                              break;                          }                            Thread.Sleep(100);                      }                        Assert.IsNotNull(message' "No message received");                      this.template.Send(message.MessageProperties.ReplyTo' message);                      return (string)this.template.MessageConverter.FromMessage(message);                  });
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestAtomicSendAndReceiveWithConversionUsingExchangeAndRoutingKey,The following statement contains a magic number: var received = Task.Factory.StartNew(                  () =>                  {                      Message message = null;                      for (var i = 0; i < 10; i++)                      {                          message = this.template.Receive(ROUTE);                          if (message != null)                          {                              break;                          }                            Thread.Sleep(100);                      }                        Assert.IsNotNull(message' "No message received");                      this.template.Send(message.MessageProperties.ReplyTo' message);                      return (string)this.template.MessageConverter.FromMessage(message);                  });
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestAtomicSendAndReceiveWithConversionUsingExchangeAndRoutingKey,The following statement contains a magic number: var success = received.Wait(1000);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestAtomicSendAndReceiveWithConversionAndMessagePostProcessor,The following statement contains a magic number: var received = Task.Factory.StartNew(                  () =>                  {                      Message message = null;                      for (var i = 0; i < 10; i++)                      {                          message = template.Receive();                          if (message != null)                          {                              break;                          }                            Thread.Sleep(100);                      }                        Assert.IsNotNull(message' "No message received");                      template.Send(message.MessageProperties.ReplyTo' message);                      return (string)template.MessageConverter.FromMessage(message);                  });
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestAtomicSendAndReceiveWithConversionAndMessagePostProcessor,The following statement contains a magic number: var received = Task.Factory.StartNew(                  () =>                  {                      Message message = null;                      for (var i = 0; i < 10; i++)                      {                          message = template.Receive();                          if (message != null)                          {                              break;                          }                            Thread.Sleep(100);                      }                        Assert.IsNotNull(message' "No message received");                      template.Send(message.MessageProperties.ReplyTo' message);                      return (string)template.MessageConverter.FromMessage(message);                  });
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestAtomicSendAndReceiveWithConversionAndMessagePostProcessor,The following statement contains a magic number: var success = received.Wait(1000);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestAtomicSendAndReceiveWithConversionAndMessagePostProcessorUsingRoutingKey,The following statement contains a magic number: var received = Task.Factory.StartNew(                  () =>                  {                      Message message = null;                      for (var i = 0; i < 10; i++)                      {                          message = this.template.Receive(ROUTE);                          if (message != null)                          {                              break;                          }                            Thread.Sleep(100);                      }                        Assert.IsNotNull(message' "No message received");                      this.template.Send(message.MessageProperties.ReplyTo' message);                      return (string)this.template.MessageConverter.FromMessage(message);                  });
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestAtomicSendAndReceiveWithConversionAndMessagePostProcessorUsingRoutingKey,The following statement contains a magic number: var received = Task.Factory.StartNew(                  () =>                  {                      Message message = null;                      for (var i = 0; i < 10; i++)                      {                          message = this.template.Receive(ROUTE);                          if (message != null)                          {                              break;                          }                            Thread.Sleep(100);                      }                        Assert.IsNotNull(message' "No message received");                      this.template.Send(message.MessageProperties.ReplyTo' message);                      return (string)this.template.MessageConverter.FromMessage(message);                  });
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestAtomicSendAndReceiveWithConversionAndMessagePostProcessorUsingRoutingKey,The following statement contains a magic number: var success = received.Wait(1000);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestAtomicSendAndReceiveWithConversionAndMessagePostProcessorUsingExchangeAndRoutingKey,The following statement contains a magic number: var received = Task.Factory.StartNew(                  () =>                  {                      Message message = null;                      for (var i = 0; i < 10; i++)                      {                          message = this.template.Receive(ROUTE);                          if (message != null)                          {                              break;                          }                            Thread.Sleep(100);                      }                        Assert.IsNotNull(message' "No message received");                      this.template.Send(message.MessageProperties.ReplyTo' message);                      return (string)this.template.MessageConverter.FromMessage(message);                  });
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestAtomicSendAndReceiveWithConversionAndMessagePostProcessorUsingExchangeAndRoutingKey,The following statement contains a magic number: var received = Task.Factory.StartNew(                  () =>                  {                      Message message = null;                      for (var i = 0; i < 10; i++)                      {                          message = this.template.Receive(ROUTE);                          if (message != null)                          {                              break;                          }                            Thread.Sleep(100);                      }                        Assert.IsNotNull(message' "No message received");                      this.template.Send(message.MessageProperties.ReplyTo' message);                      return (string)this.template.MessageConverter.FromMessage(message);                  });
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateIntegrationTests.cs,TestAtomicSendAndReceiveWithConversionAndMessagePostProcessorUsingExchangeAndRoutingKey,The following statement contains a magic number: var success = received.Wait(1000);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplatePerformanceIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplatePerformanceIntegrationTests.cs,FixtureSetUp,The following statement contains a magic number: brokerAdmin.StartupTimeout = 10000;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplatePerformanceIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplatePerformanceIntegrationTests.cs,DeclareQueue,The following statement contains a magic number: this.connectionFactory.ChannelCacheSize = 4;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplatePerformanceIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplatePerformanceIntegrationTests.cs,TestSendAndReceive,The following statement contains a magic number: var count = 5;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplatePerformanceIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplatePerformanceIntegrationTests.cs,TestSendAndReceive,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Core,RabbitTemplateTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Core\RabbitTemplateTests.cs,TestConvertSerializable,The following statement contains a magic number: var payload = 43L;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ActiveObjectCounterTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\ActiveObjectCounterTests.cs,TestActiveCount,The following statement contains a magic number: Assert.AreEqual(2' this.counter.GetCount());
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ActiveObjectCounterTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\ActiveObjectCounterTests.cs,TestWaitForLocks,The following statement contains a magic number: Assert.AreEqual(true' this.counter.Await(new TimeSpan(0' 0' 0' 0' 1000)));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ActiveObjectCounterTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\ActiveObjectCounterTests.cs,TestTimeoutWaitForLocks,The following statement contains a magic number: Assert.AreEqual(false' this.counter.Await(new TimeSpan(0' 0' 0' 0' 200)));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ExternalTxManagerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\ExternalTxManagerTests.cs,TestMessageListener,The following statement contains a magic number: container.ShutdownTimeout = 100;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ExternalTxManagerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\ExternalTxManagerTests.cs,TestMessageListener,The following statement contains a magic number: Assert.IsTrue(latch.Wait(new TimeSpan(0' 0' 10)));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ExternalTxManagerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\ExternalTxManagerTests.cs,TestMessageListener,The following statement contains a magic number: Assert.True(commitLatch.Wait(new TimeSpan(0' 0' 10)));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ExternalTxManagerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\ExternalTxManagerTests.cs,TestChannelAwareMessageListener,The following statement contains a magic number: container.ShutdownTimeout = 100;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ExternalTxManagerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\ExternalTxManagerTests.cs,TestChannelAwareMessageListener,The following statement contains a magic number: Assert.IsTrue(latch.Wait(new TimeSpan(0' 0' 10)));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ExternalTxManagerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\ExternalTxManagerTests.cs,TestChannelAwareMessageListener,The following statement contains a magic number: Assert.IsTrue(commitLatch.Wait(new TimeSpan(0' 0' 10)));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ExternalTxManagerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\ExternalTxManagerTests.cs,TestChannelAwareMessageListenerDontExpose,The following statement contains a magic number: container.ShutdownTimeout = 100;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ExternalTxManagerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\ExternalTxManagerTests.cs,TestChannelAwareMessageListenerDontExpose,The following statement contains a magic number: Assert.IsTrue(latch.Wait(new TimeSpan(0' 0' 10)));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ExternalTxManagerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\ExternalTxManagerTests.cs,TestChannelAwareMessageListenerDontExpose,The following statement contains a magic number: Assert.IsTrue(commitLatch.Wait(new TimeSpan(0' 0' 10)));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ExternalTxManagerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\ExternalTxManagerTests.cs,TestMessageListenerWithRabbitTxManager,The following statement contains a magic number: container.ShutdownTimeout = 100;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ExternalTxManagerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\ExternalTxManagerTests.cs,TestMessageListenerWithRabbitTxManager,The following statement contains a magic number: Assert.IsTrue(latch.Wait(new TimeSpan(0' 0' 10)));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ExternalTxManagerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\ExternalTxManagerTests.cs,TestMessageListenerWithRabbitTxManager,The following statement contains a magic number: Assert.True(commitLatch.Wait(new TimeSpan(0' 0' 10)));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,LocallyTransactedTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\LocallyTransactedTests.cs,TestMessageListener,The following statement contains a magic number: container.ShutdownTimeout = 100;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,LocallyTransactedTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\LocallyTransactedTests.cs,TestMessageListener,The following statement contains a magic number: Assert.IsTrue(latch.Wait(new TimeSpan(0' 0' 10)));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,LocallyTransactedTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\LocallyTransactedTests.cs,TestMessageListener,The following statement contains a magic number: Assert.True(commitLatch.Wait(new TimeSpan(0' 0' 10)));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,LocallyTransactedTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\LocallyTransactedTests.cs,TestChannelAwareMessageListener,The following statement contains a magic number: container.ShutdownTimeout = 100;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,LocallyTransactedTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\LocallyTransactedTests.cs,TestChannelAwareMessageListener,The following statement contains a magic number: Assert.IsTrue(latch.Wait(new TimeSpan(0' 0' 10)));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,LocallyTransactedTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\LocallyTransactedTests.cs,TestChannelAwareMessageListener,The following statement contains a magic number: Assert.IsTrue(commitLatch.Wait(new TimeSpan(0' 0' 10)));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,LocallyTransactedTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\LocallyTransactedTests.cs,TestChannelAwareMessageListenerDontExpose,The following statement contains a magic number: container.ShutdownTimeout = 100;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,LocallyTransactedTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\LocallyTransactedTests.cs,TestChannelAwareMessageListenerDontExpose,The following statement contains a magic number: Assert.IsTrue(latch.Wait(new TimeSpan(0' 0' 10)));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,LocallyTransactedTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\LocallyTransactedTests.cs,TestChannelAwareMessageListenerDontExpose,The following statement contains a magic number: mockConnection.Verify(m => m.CreateModel()' Times.Exactly(2));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,LocallyTransactedTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\LocallyTransactedTests.cs,TestChannelAwareMessageListenerDontExpose,The following statement contains a magic number: Assert.IsTrue(commitLatch.Wait(new TimeSpan(0' 0' 10)));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerBrokerInterruptionIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerBrokerInterruptionIntegrationTests.cs,Clear,The following statement contains a magic number: Thread.Sleep(300);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerBrokerInterruptionIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerBrokerInterruptionIntegrationTests.cs,TestListenerRecoversFromDeadBroker,The following statement contains a magic number: var waited = latch.Wait(500);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerBrokerInterruptionIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerBrokerInterruptionIntegrationTests.cs,TestListenerRecoversFromDeadBroker,The following statement contains a magic number: var timeout = Math.Min((4 + this.messageCount) / (4 * this.concurrentConsumers)' 30);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerBrokerInterruptionIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerBrokerInterruptionIntegrationTests.cs,TestListenerRecoversFromDeadBroker,The following statement contains a magic number: var timeout = Math.Min((4 + this.messageCount) / (4 * this.concurrentConsumers)' 30);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerBrokerInterruptionIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerBrokerInterruptionIntegrationTests.cs,TestListenerRecoversFromDeadBroker,The following statement contains a magic number: var timeout = Math.Min((4 + this.messageCount) / (4 * this.concurrentConsumers)' 30);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerBrokerInterruptionIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerBrokerInterruptionIntegrationTests.cs,TestListenerRecoversFromDeadBroker,The following statement contains a magic number: waited = latch.Wait(timeout * 1000);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerErrorHandlerIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerErrorHandlerIntegrationTests.cs,TestErrorHandlerInvokeExceptionFromPoco,The following statement contains a magic number: var messageCount = 3;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerErrorHandlerIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerErrorHandlerIntegrationTests.cs,TestErrorHandlerInvokeRuntimeExceptionFromPoco,The following statement contains a magic number: var messageCount = 3;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerErrorHandlerIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerErrorHandlerIntegrationTests.cs,TestErrorHandlerListenerExecutionFailedExceptionFromListener,The following statement contains a magic number: var messageCount = 3;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerErrorHandlerIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerErrorHandlerIntegrationTests.cs,TestErrorHandlerRegularRuntimeExceptionFromListener,The following statement contains a magic number: var messageCount = 3;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerErrorHandlerIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerErrorHandlerIntegrationTests.cs,TestErrorHandlerInvokeExceptionFromChannelAwareListener,The following statement contains a magic number: var messageCount = 3;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerErrorHandlerIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerErrorHandlerIntegrationTests.cs,TestErrorHandlerInvokeRuntimeExceptionFromChannelAwareListener,The following statement contains a magic number: var messageCount = 3;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerErrorHandlerIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerErrorHandlerIntegrationTests.cs,DoTest,The following statement contains a magic number: var waited = latch.Wait(1000);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,PocoThrowingExceptionListener,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerErrorHandlerIntegrationTests.cs,HandleMessage,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ThrowingExceptionListener,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerErrorHandlerIntegrationTests.cs,OnMessage,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ThrowingExceptionChannelAwareListener,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerErrorHandlerIntegrationTests.cs,OnMessage,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerLifecycleIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerLifecycleIntegrationTests.cs,DoTest,The following statement contains a magic number: var waited = latch.Wait(50);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerLifecycleIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerLifecycleIntegrationTests.cs,DoTest,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerLifecycleIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerLifecycleIntegrationTests.cs,DoTest,The following statement contains a magic number: waited = latch.Wait(500);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerLifecycleIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerLifecycleIntegrationTests.cs,DoTest,The following statement contains a magic number: messageCount < 100
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerLifecycleIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerLifecycleIntegrationTests.cs,DoTest,The following statement contains a magic number: var timeout = Math.Min(1 + messageCount / (4 * concurrentConsumers)' 30);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerLifecycleIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerLifecycleIntegrationTests.cs,DoTest,The following statement contains a magic number: var timeout = Math.Min(1 + messageCount / (4 * concurrentConsumers)' 30);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerLifecycleIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerLifecycleIntegrationTests.cs,DoTest,The following statement contains a magic number: waited = latch.Wait(timeout * 1000);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,LifecyclePocoListener,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerLifecycleIntegrationTests.cs,HandleMessage,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,TransactionModeUtils,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerLifecycleIntegrationTests.cs,Prefetch,The following statement contains a magic number: return mode == TransactionMode.PREFETCH ? 10 : -1;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,TransactionModeUtils,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerLifecycleIntegrationTests.cs,TxSize,The following statement contains a magic number: return mode == TransactionMode.PREFETCH ? 5 : -1;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerMultipleQueueIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerMultipleQueueIntegrationTests.cs,TestMultipleQueuesWithConcurrentConsumers,The following statement contains a magic number: this.DoTest(3' mockConfigurer.Object);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerMultipleQueueIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerMultipleQueueIntegrationTests.cs,TestMultipleQueueNamesWithConcurrentConsumers,The following statement contains a magic number: this.DoTest(3' mockConfigurer.Object);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerMultipleQueueIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerMultipleQueueIntegrationTests.cs,DoTest,The following statement contains a magic number: var messageCount = 10;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerMultipleQueueIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerMultipleQueueIntegrationTests.cs,DoTest,The following statement contains a magic number: var latch = new CountdownEvent(messageCount * 2);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerMultipleQueueIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerMultipleQueueIntegrationTests.cs,DoTest,The following statement contains a magic number: var timeout = Math.Min((1 + messageCount) / concurrentConsumers' 50);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerMultipleQueueIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerMultipleQueueIntegrationTests.cs,DoTest,The following statement contains a magic number: var waited = latch.Wait(timeout * 1000);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerRetryIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerRetryIntegrationTests.cs,testStatefulRetryWithAllMessagesFailing,The following statement contains a magic number: var messageCount = 10;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerRetryIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerRetryIntegrationTests.cs,testStatefulRetryWithAllMessagesFailing,The following statement contains a magic number: var concurrentConsumers = 3;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerRetryIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerRetryIntegrationTests.cs,testStatelessRetryWithAllMessagesFailing,The following statement contains a magic number: var messageCount = 10;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerRetryIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerRetryIntegrationTests.cs,testStatelessRetryWithAllMessagesFailing,The following statement contains a magic number: var concurrentConsumers = 3;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerRetryIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerRetryIntegrationTests.cs,testStatefulRetryWithNoMessageIds,The following statement contains a magic number: var messageCount = 2;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerRetryIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerRetryIntegrationTests.cs,testStatefulRetryWithTxSizeAndIntermittentFailure,The following statement contains a magic number: var messageCount = 10;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerRetryIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerRetryIntegrationTests.cs,testStatefulRetryWithTxSizeAndIntermittentFailure,The following statement contains a magic number: var txSize = 4;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerRetryIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerRetryIntegrationTests.cs,testStatefulRetryWithTxSizeAndIntermittentFailure,The following statement contains a magic number: var failFrequency = 3;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerRetryIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerRetryIntegrationTests.cs,testStatefulRetryWithTxSizeAndIntermittentFailure,The following statement contains a magic number: var concurrentConsumers = 3;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerRetryIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerRetryIntegrationTests.cs,testStatefulRetryWithMoreMessages,The following statement contains a magic number: var messageCount = 200;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerRetryIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerRetryIntegrationTests.cs,testStatefulRetryWithMoreMessages,The following statement contains a magic number: var txSize = 10;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerRetryIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerRetryIntegrationTests.cs,testStatefulRetryWithMoreMessages,The following statement contains a magic number: var failFrequency = 6;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerRetryIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerRetryIntegrationTests.cs,testStatefulRetryWithMoreMessages,The following statement contains a magic number: var concurrentConsumers = 3;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerRetryIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerRetryIntegrationTests.cs,DoTestRetry,The following statement contains a magic number: var timeout = Math.Min(1 + messageCount / concurrentConsumers' 30);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerRetryIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerRetryIntegrationTests.cs,DoTestRetry,The following statement contains a magic number: Task.Factory.StartNew(                      () =>                      {                          while (container.ActiveConsumerCount > 0)                          {                              try                              {                                  Thread.Sleep(100);                              }                              catch (ThreadInterruptedException e)                              {                                  if (latch.CurrentCount > 0)                                  {                                      latch.Signal();                                  }                                    Thread.CurrentThread.Interrupt();                                  return;                              }                          }                            for (var i = 0; i < count; i++)                          {                              if (latch.CurrentCount > 0)                              {                                  latch.Signal();                              }                          }                      });
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerRetryIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerRetryIntegrationTests.cs,DoTestRetry,The following statement contains a magic number: var waited = latch.Wait(timeout * 1000);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerContainerRetryIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerContainerRetryIntegrationTests.cs,DoTestRetry,The following statement contains a magic number: Assert.AreEqual(3 * failedMessageCount' listener.Count);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerManualAckIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerManualAckIntegrationTests.cs,Clear,The following statement contains a magic number: Thread.Sleep(300);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerManualAckIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerManualAckIntegrationTests.cs,TestListenerWithManualAckNonTransactional,The following statement contains a magic number: var timeout = Math.Min(1 + this.messageCount / (4 * this.concurrentConsumers)' 30);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerManualAckIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerManualAckIntegrationTests.cs,TestListenerWithManualAckNonTransactional,The following statement contains a magic number: var timeout = Math.Min(1 + this.messageCount / (4 * this.concurrentConsumers)' 30);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerManualAckIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerManualAckIntegrationTests.cs,TestListenerWithManualAckNonTransactional,The following statement contains a magic number: var waited = latch.Wait(timeout * 1000);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerManualAckIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerManualAckIntegrationTests.cs,TestListenerWithManualAckTransactional,The following statement contains a magic number: var timeout = Math.Min(1 + this.messageCount / (4 * this.concurrentConsumers)' 30);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerManualAckIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerManualAckIntegrationTests.cs,TestListenerWithManualAckTransactional,The following statement contains a magic number: var timeout = Math.Min(1 + this.messageCount / (4 * this.concurrentConsumers)' 30);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerManualAckIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerManualAckIntegrationTests.cs,TestListenerWithManualAckTransactional,The following statement contains a magic number: var waited = latch.Wait(timeout * 1000);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerRecoveryCachingConnectionIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerRecoveryCachingConnectionIntegrationTests.cs,SetUp,The following statement contains a magic number: this.messageCount = 10;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerRecoveryCachingConnectionIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerRecoveryCachingConnectionIntegrationTests.cs,Clear,The following statement contains a magic number: Thread.Sleep(300);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerRecoveryCachingConnectionIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerRecoveryCachingConnectionIntegrationTests.cs,TestListenerSendsMessageAndThenContainerCommits,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerRecoveryCachingConnectionIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerRecoveryCachingConnectionIntegrationTests.cs,TestListenerSendsMessageAndThenRollback,The following statement contains a magic number: var waited = latch.Wait(timeout * 1000);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerRecoveryCachingConnectionIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerRecoveryCachingConnectionIntegrationTests.cs,TestListenerSendsMessageAndThenRollback,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerRecoveryCachingConnectionIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerRecoveryCachingConnectionIntegrationTests.cs,TestListenerRecoversFromClosedChannelAndStop,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerRecoveryCachingConnectionIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerRecoveryCachingConnectionIntegrationTests.cs,TestListenerRecoversFromClosedChannelAndStop,The following statement contains a magic number: n++ < 100 && this.container.ActiveConsumerCount != this.concurrentConsumers
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerRecoveryCachingConnectionIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerRecoveryCachingConnectionIntegrationTests.cs,TestListenerRecoversFromClosedConnection,The following statement contains a magic number: var timeout = Math.Min(4 + (this.messageCount / (4 * this.concurrentConsumers))' 30);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerRecoveryCachingConnectionIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerRecoveryCachingConnectionIntegrationTests.cs,TestListenerRecoversFromClosedConnection,The following statement contains a magic number: var timeout = Math.Min(4 + (this.messageCount / (4 * this.concurrentConsumers))' 30);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerRecoveryCachingConnectionIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerRecoveryCachingConnectionIntegrationTests.cs,TestListenerRecoversFromClosedConnection,The following statement contains a magic number: var timeout = Math.Min(4 + (this.messageCount / (4 * this.concurrentConsumers))' 30);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerRecoveryCachingConnectionIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerRecoveryCachingConnectionIntegrationTests.cs,TestListenerDoesNotRecoverFromMissingQueue,The following statement contains a magic number: this.concurrentConsumers = 3;
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerRecoveryCachingConnectionIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerRecoveryCachingConnectionIntegrationTests.cs,GetTimeout,The following statement contains a magic number: return Math.Min(1 + (this.messageCount / (4 * this.concurrentConsumers))' 30);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerRecoveryCachingConnectionIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerRecoveryCachingConnectionIntegrationTests.cs,GetTimeout,The following statement contains a magic number: return Math.Min(1 + (this.messageCount / (4 * this.concurrentConsumers))' 30);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerTxSizeIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerTxSizeIntegrationTests.cs,Clear,The following statement contains a magic number: Thread.Sleep(300);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerTxSizeIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerTxSizeIntegrationTests.cs,TestListenerTransactionalSunnyDay,The following statement contains a magic number: var timeout = Math.Min(1 + (this.messageCount / (4 * this.concurrentConsumers))' 30);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerTxSizeIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerTxSizeIntegrationTests.cs,TestListenerTransactionalSunnyDay,The following statement contains a magic number: var timeout = Math.Min(1 + (this.messageCount / (4 * this.concurrentConsumers))' 30);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerTxSizeIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerTxSizeIntegrationTests.cs,TestListenerTransactionalFails,The following statement contains a magic number: var timeout = Math.Min(1 + (this.messageCount / (4 * this.concurrentConsumers))' 30);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,MessageListenerTxSizeIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\MessageListenerTxSizeIntegrationTests.cs,TestListenerTransactionalFails,The following statement contains a magic number: var timeout = Math.Min(1 + (this.messageCount / (4 * this.concurrentConsumers))' 30);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,SimpleMessageListenerContainerIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\SimpleMessageListenerContainerIntegrationTests.cs,Clear,The following statement contains a magic number: Thread.Sleep(300);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,SimpleMessageListenerContainerIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\SimpleMessageListenerContainerIntegrationTests.cs,DoSunnyDayTest,The following statement contains a magic number: Logger.Debug(m => m("Waiting {0} seconds for messages to be received."' Math.Max(2' this.messageCount / 20)));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,SimpleMessageListenerContainerIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\SimpleMessageListenerContainerIntegrationTests.cs,DoSunnyDayTest,The following statement contains a magic number: Logger.Debug(m => m("Waiting {0} seconds for messages to be received."' Math.Max(2' this.messageCount / 20)));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,SimpleMessageListenerContainerIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\SimpleMessageListenerContainerIntegrationTests.cs,DoSunnyDayTest,The following statement contains a magic number: var waited = latch.Wait(new TimeSpan(0' 0' 0' Math.Max(2' this.messageCount / 20)));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,SimpleMessageListenerContainerIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\SimpleMessageListenerContainerIntegrationTests.cs,DoSunnyDayTest,The following statement contains a magic number: var waited = latch.Wait(new TimeSpan(0' 0' 0' Math.Max(2' this.messageCount / 20)));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,SimpleMessageListenerContainerIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\SimpleMessageListenerContainerIntegrationTests.cs,DoListenerWithExceptionTest,The following statement contains a magic number: Logger.Debug(m => m("Waiting {0} seconds for messages to be received."' 5 + Math.Max(1' this.messageCount / 10)));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,SimpleMessageListenerContainerIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\SimpleMessageListenerContainerIntegrationTests.cs,DoListenerWithExceptionTest,The following statement contains a magic number: Logger.Debug(m => m("Waiting {0} seconds for messages to be received."' 5 + Math.Max(1' this.messageCount / 10)));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,SimpleMessageListenerContainerIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\SimpleMessageListenerContainerIntegrationTests.cs,DoListenerWithExceptionTest,The following statement contains a magic number: var waited = latch.Wait(new TimeSpan(0' 0' 0' 5 + Math.Max(1' this.messageCount / 10)));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,SimpleMessageListenerContainerIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\SimpleMessageListenerContainerIntegrationTests.cs,DoListenerWithExceptionTest,The following statement contains a magic number: var waited = latch.Wait(new TimeSpan(0' 0' 0' 5 + Math.Max(1' this.messageCount / 10)));
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,SimplePocoListener,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\SimpleMessageListenerContainerIntegrationTests.cs,HandleMessage,The following statement contains a magic number: Logger.IsDebugEnabled && counter % 100 == 0
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,Listener,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\SimpleMessageListenerContainerIntegrationTests.cs,OnMessage,The following statement contains a magic number: Logger.IsDebugEnabled && counter % 100 == 0
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,ChannelAwareListener,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\SimpleMessageListenerContainerIntegrationTests.cs,OnMessage,The following statement contains a magic number: Logger.IsDebugEnabled && counter % 100 == 0
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,StopStartIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\StopStartIntegrationTests.cs,Test,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,StopStartIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\StopStartIntegrationTests.cs,Test,The following statement contains a magic number: DateTime.UtcNow.ToMilliseconds() - t > 240000 && lastN == n
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,UnackedRawIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\UnackedRawIntegrationTests.cs,TestOnePublishUnackedRequeued,The following statement contains a magic number: callback.Queue.Dequeue(1000' out next);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Listener,UnackedRawIntegrationTests,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Listener\UnackedRawIntegrationTests.cs,TestFourPublishUnackedRequeued,The following statement contains a magic number: callback.Queue.Dequeue(1000' out next);
Magic Number,Spring.Messaging.Amqp.Rabbit.Tests.Test,BrokerTestUtils,D:\research\architectureSmells\repos1\spring-projects_spring-net-amqp\test\Spring.Messaging.Amqp.Rabbit.Tests\Test\BrokerTestUtils.cs,GetRabbitBrokerAdmin,The following statement contains a magic number: brokerAdmin.StartupTimeout = 10000L;
