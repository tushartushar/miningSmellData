Implementation smell,Namespace,Class,File,Method,Description
Long Statement,NHttp.Test.Support,WebBrowserForm,C:\research\architectureSmells\repos\pvginkel_NHttp\NHttp.Test\Support\WebBrowserForm.cs,InitializeComponent,The length of the statement  "            this._webBrowser.DocumentCompleted += new System.Windows.Forms.WebBrowserDocumentCompletedEventHandler(this._webBrowser_DocumentCompleted); " is 139.
Long Statement,NHttp.Test.WebRequestFixtures,Cookies,C:\research\architectureSmells\repos\pvginkel_NHttp\NHttp.Test\WebRequestFixtures\Cookies.cs,SetCookieWithDetails,The length of the statement  "                    Assert.AreEqual("a=b; expires=" + expires.ToString(DateFormat' DateCulture) + "; path=/path; secure; HttpOnly"' response.Headers["Set-Cookie"]); " is 144.
Long Statement,NHttp.Test.WebRequestFixtures,Cookies,C:\research\architectureSmells\repos\pvginkel_NHttp\NHttp.Test\WebRequestFixtures\Cookies.cs,SetCookieWithDetails,The length of the statement  "                    Assert.AreEqual(expires.ToString(CultureInfo.InvariantCulture)' cookie.Expires.ToUniversalTime().ToString(CultureInfo.InvariantCulture)); " is 137.
Magic Number,NHttp.Test.Support,StreamExtensions,C:\research\architectureSmells\repos\pvginkel_NHttp\NHttp.Test\Support\StreamExtensions.cs,GetLength,The following statement contains a magic number: byte[] buffer = new byte[4096];
Magic Number,NHttp.Test.Support,FixtureBase,C:\research\architectureSmells\repos\pvginkel_NHttp\NHttp.Test\Support\FixtureBase.cs,WriteRandomData,The following statement contains a magic number: var randomBytes = new byte[128];
Magic Number,NHttp.Test.Support,ResourceHandler,C:\research\architectureSmells\repos\pvginkel_NHttp\NHttp.Test\Support\RequestHandler.cs,Handle,The following statement contains a magic number: byte[] buffer = new byte[4096];
Magic Number,NHttp.Test.Support,WebBrowserForm,C:\research\architectureSmells\repos\pvginkel_NHttp\NHttp.Test\Support\WebBrowserForm.cs,InitializeComponent,The following statement contains a magic number: this._webBrowser.MinimumSize = new System.Drawing.Size(20' 20);
Magic Number,NHttp.Test.Support,WebBrowserForm,C:\research\architectureSmells\repos\pvginkel_NHttp\NHttp.Test\Support\WebBrowserForm.cs,InitializeComponent,The following statement contains a magic number: this._webBrowser.MinimumSize = new System.Drawing.Size(20' 20);
Magic Number,NHttp.Test.Support,WebBrowserForm,C:\research\architectureSmells\repos\pvginkel_NHttp\NHttp.Test\Support\WebBrowserForm.cs,InitializeComponent,The following statement contains a magic number: this._webBrowser.Size = new System.Drawing.Size(284' 262);
Magic Number,NHttp.Test.Support,WebBrowserForm,C:\research\architectureSmells\repos\pvginkel_NHttp\NHttp.Test\Support\WebBrowserForm.cs,InitializeComponent,The following statement contains a magic number: this._webBrowser.Size = new System.Drawing.Size(284' 262);
Magic Number,NHttp.Test.Support,WebBrowserForm,C:\research\architectureSmells\repos\pvginkel_NHttp\NHttp.Test\Support\WebBrowserForm.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,NHttp.Test.Support,WebBrowserForm,C:\research\architectureSmells\repos\pvginkel_NHttp\NHttp.Test\Support\WebBrowserForm.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,NHttp.Test.Support,WebBrowserForm,C:\research\architectureSmells\repos\pvginkel_NHttp\NHttp.Test\Support\WebBrowserForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(284' 262);
Magic Number,NHttp.Test.Support,WebBrowserForm,C:\research\architectureSmells\repos\pvginkel_NHttp\NHttp.Test\Support\WebBrowserForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(284' 262);
Magic Number,NHttp.Test.WebBrowserFixtures,FileUpload,C:\research\architectureSmells\repos\pvginkel_NHttp\NHttp.Test\WebBrowserFixtures\FileUpload.cs,LargeFileUpload,The following statement contains a magic number: WriteRandomData(tempFile' 10 * 1024 * 1024);
Magic Number,NHttp.Test.WebBrowserFixtures,FileUpload,C:\research\architectureSmells\repos\pvginkel_NHttp\NHttp.Test\WebBrowserFixtures\FileUpload.cs,LargeFileUpload,The following statement contains a magic number: WriteRandomData(tempFile' 10 * 1024 * 1024);
Magic Number,NHttp.Test.WebBrowserFixtures,FileUpload,C:\research\architectureSmells\repos\pvginkel_NHttp\NHttp.Test\WebBrowserFixtures\FileUpload.cs,LargeFileUpload,The following statement contains a magic number: WriteRandomData(tempFile' 10 * 1024 * 1024);
Magic Number,NHttp.Test.WebBrowserFixtures,FileUpload,C:\research\architectureSmells\repos\pvginkel_NHttp\NHttp.Test\WebBrowserFixtures\FileUpload.cs,PerformFileUpload,The following statement contains a magic number: Assert.That(submittedEvent.WaitOne(TimeSpan.FromSeconds(5))' "No /submit request received");
Magic Number,NHttp.Test.WebRequestFixtures,Cookies,C:\research\architectureSmells\repos\pvginkel_NHttp\NHttp.Test\WebRequestFixtures\Cookies.cs,SetMultipleCookies,The following statement contains a magic number: Assert.AreEqual(2' response.Cookies.Count);
Magic Number,NHttp.Test.WebRequestFixtures,GracefullShutdown,C:\research\architectureSmells\repos\pvginkel_NHttp\NHttp.Test\WebRequestFixtures\GracefullShutdown.cs,ForcedShutdown,The following statement contains a magic number: server.RequestReceived += (s' e) =>                  {                      // Start closing the server.                        ThreadPool.QueueUserWorkItem(p => server.Stop());                        // Wait some time to fulfill the request.                        Thread.Sleep(TimeSpan.FromSeconds(30));                        using (var writer = new StreamWriter(e.Response.OutputStream))                      {                          writer.WriteLine("Hello!");                      }                  };
Magic Number,NHttp.Test.WebRequestFixtures,PostRequest,C:\research\architectureSmells\repos\pvginkel_NHttp\NHttp.Test\WebRequestFixtures\PostRequest.cs,PostWithContentWithoutType,The following statement contains a magic number: WriteRandomData(uploadStream' 1 * 1024 * 1024);
Magic Number,NHttp.Test.WebRequestFixtures,PostRequest,C:\research\architectureSmells\repos\pvginkel_NHttp\NHttp.Test\WebRequestFixtures\PostRequest.cs,PostWithContentWithoutType,The following statement contains a magic number: WriteRandomData(uploadStream' 1 * 1024 * 1024);
Missing Default,NHttp.Test.WebRequestFixtures,Cookies,C:\research\architectureSmells\repos\pvginkel_NHttp\NHttp.Test\WebRequestFixtures\Cookies.cs,SetMultipleCookies,The following switch statement is missing a default case: switch (i)                          {                              case 0:                                  Assert.AreEqual("a"' cookie.Name);                                  Assert.AreEqual("b"' cookie.Value);                                  break;                                case 1:                                  Assert.AreEqual("c"' cookie.Name);                                  Assert.AreEqual("d"' cookie.Value);                                  break;                          }
Missing Default,NHttp.Test.WebRequestFixtures,Cookies,C:\research\architectureSmells\repos\pvginkel_NHttp\NHttp.Test\WebRequestFixtures\Cookies.cs,TestCookieRoundtrip,The following switch statement is missing a default case: switch (e.Request.Path)                      {                          case "/from":                              fromCallback(e.Context);                                e.Response.RedirectPermanent("/to");                              break;                            case "/to":                              toCallback(e.Context);                              break;                      }
