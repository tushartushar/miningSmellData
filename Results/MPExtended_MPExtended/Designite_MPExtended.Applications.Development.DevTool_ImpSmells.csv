Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MPExtended.Applications.Development.DevTool.DocGen,Generator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\Generator.cs,Generate,Cyclomatic complexity of the method is 10
Complex Method,MPExtended.Applications.Development.DevTool.DocGen,MASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\MASGenerator.cs,GenerateSortOrder,Cyclomatic complexity of the method is 8
Complex Method,MPExtended.Applications.Development.DevTool.DocGen,TASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\TASGenerator.cs,GenerateSortOrder,Cyclomatic complexity of the method is 11
Complex Method,MPExtended.Applications.Development.DevTool.DocGen,WSSGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\WSSGenerator.cs,GenerateSortOrder,Cyclomatic complexity of the method is 11
Complex Method,MPExtended.Applications.Development.DevTool.Tools,InterfaceCheck,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\InterfaceCheck.cs,CheckService,Cyclomatic complexity of the method is 9
Long Parameter List,MPExtended.Applications.Development.DevTool.WixFS,WixFSGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\WixFS\WixFSGenerator.cs,RunFromInput,The method has 5 parameters. Parameters: inputDir' outputFile' name' parentName' skipImmediate
Long Parameter List,MPExtended.Applications.Development.DevTool.WixFS,WixFSGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\WixFS\WixFSGenerator.cs,AddDirectory,The method has 7 parameters. Parameters: path' baseComponent' basePrefix' ns' dirNode' componentGroup' skipImmediate
Long Statement,MPExtended.Applications.Development.DevTool.DocGen,Generator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\Generator.cs,Generate,The length of the statement  "                "<p>This page contains the API documentation for this MPExtended service' as automatically generated on {0} for version {1} (build {2}). " + " is 140.
Long Statement,MPExtended.Applications.Development.DevTool.DocGen,Generator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\Generator.cs,GenerateMethodDocumentation,The length of the statement  "                Output.WriteLine(String.Format("<dt>Returns</dt><dd>List of <strong>{0}</strong><br />"' MapName(method' itemType.Name))); " is 122.
Long Statement,MPExtended.Applications.Development.DevTool.DocGen,Generator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\Generator.cs,GenerateParameterDocumentation,The length of the statement  "                    Output.WriteLine("<li><strong>{0}</strong> (nullable {1})"' param.Name' GenerateTypeNameLink(method' param.ParameterType)); " is 123.
Long Statement,MPExtended.Applications.Development.DevTool.DocGen,Generator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\Generator.cs,GenerateReturnDocumentation,The length of the statement  "                    Output.WriteLine(String.Format("<li><strong>{0}</strong> ({1}):"' property.Name' GenerateTypeNameLink(method' property.PropertyType))); " is 135.
Long Statement,MPExtended.Applications.Development.DevTool.DocGen,Generator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\Generator.cs,GenerateReturnDocumentation,The length of the statement  "                    Output.WriteLine(String.Format("<li><strong>{0}</strong> ({1})</li>"' property.Name' GenerateTypeNameLink(method' property.PropertyType))); " is 139.
Long Statement,MPExtended.Applications.Development.DevTool.DocGen,Generator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\Generator.cs,GenerateTypeNameLink,The length of the statement  "            string typename = IsListType(type' out elementType) ? "list of " + MapName(method' elementType.Name) : MapName(method' type.Name); " is 130.
Long Statement,MPExtended.Applications.Development.DevTool.DocGen,Generator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\Generator.cs,GenerateTypeNameLink,The length of the statement  "            return typename == elementType.Name && type.Assembly.GetName().Name != "MPExtended.Services.Common.Interfaces" && !IsUndocumentableType(type) " is 141.
Long Statement,MPExtended.Applications.Development.DevTool.DocGen,Generator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\Generator.cs,IsUndocumentableType,The length of the statement  "            if (type == typeof(string) || type == typeof(char) || type == typeof(Stream) || type == typeof(DateTime) || type.Name.Contains("WebDictionary")) " is 144.
Long Statement,MPExtended.Applications.Development.DevTool.DocGen,MASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\MASGenerator.cs,MapName,The length of the statement  "                var items = rettype.GetInterfaces().Where(x => x.Name.EndsWith("Sortable")).Select(x => x.Name.Substring(1' x.Name.Length - 9)).ToList(); " is 137.
Long Statement,MPExtended.Applications.Development.DevTool.DocGen,MASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\MASGenerator.cs,MapName,The length of the statement  "                var valid = sby.GetEnumValues().Cast<int>().Select(x => new { Value = x' Name = sby.GetEnumName(x) }).Where(x => items.Contains(x.Name)); " is 137.
Long Statement,MPExtended.Applications.Development.DevTool.DocGen,DocDevTool,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\DocDevTool.cs,Run,The length of the statement  "                Assembly asm = Assembly.LoadFrom(Path.Combine(rootpath' "Services"' projectName' "bin"' Installation.GetSourceBuildDirectoryName()' projectName + ".dll")); " is 155.
Long Statement,MPExtended.Applications.Development.DevTool.Tools,PSPluginInstallGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\PSPluginInstallGenerator.cs,Run,The length of the statement  "            string path = Path.Combine(Installation.GetSourceRootDirectory()' "Applications"' "MPExtended.Applications.PowerSchedulerPlugin"' "bin"' "Debug"' "MPExtended.PowerScheduler.dll"); " is 179.
Long Statement,MPExtended.Applications.Development.DevTool.Tools,PSPluginInstallGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\PSPluginInstallGenerator.cs,Run,The length of the statement  "                component.Add(new XElement(ns + "File"' new XAttribute("Source"' @"$(var.MPExtended.Applications.PowerSchedulerPlugin.TargetDir)\MPExtended.PowerScheduler.dll"))); " is 163.
Long Statement,MPExtended.Applications.Development.DevTool.Tools,PSPluginInstallGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\PSPluginInstallGenerator.cs,Run,The length of the statement  "                component.Add(new XElement(ns + "File"' new XAttribute("Source"' @"$(var.MPExtended.Applications.PowerSchedulerPlugin.TargetDir)\MPExtended.PowerScheduler.pdb"))); " is 163.
Long Statement,MPExtended.Applications.Development.DevTool.Tools,PSPluginInstallGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\PSPluginInstallGenerator.cs,Run,The length of the statement  "                component.Add(new XElement(ns + "File"' new XAttribute("Source"' @"$(var.MPExtended.Applications.PowerSchedulerPlugin.TargetDir)\MPExtended.Services.Common.Interfaces.dll")' new XAttribute("Id"' "PS_Common"))); " is 210.
Long Statement,MPExtended.Applications.Development.DevTool.Tools,PSPluginInstallGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\PSPluginInstallGenerator.cs,Run,The length of the statement  "                component.Add(new XElement(ns + "File"' new XAttribute("Source"' @"$(var.MPExtended.Applications.PowerSchedulerPlugin.TargetDir)\MPExtended.Services.MetaService.Interfaces.dll")' new XAttribute("Id"' "PS_MetaService"))); " is 220.
Long Statement,MPExtended.Applications.Development.DevTool.Tools,PSPluginInstallGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\PSPluginInstallGenerator.cs,Run,The length of the statement  "                component.Add(new XElement(ns + "File"' new XAttribute("Source"' @"$(var.MPExtended.Applications.PowerSchedulerPlugin.TargetDir)\MPExtended.Applications.PowerSchedulerPlugin.dll"))); " is 182.
Long Statement,MPExtended.Applications.Development.DevTool.Tools,PSPluginInstallGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\PSPluginInstallGenerator.cs,Run,The length of the statement  "                component.Add(new XElement(ns + "File"' new XAttribute("Source"' @"$(var.MPExtended.Applications.PowerSchedulerPlugin.TargetDir)\MPExtended.Applications.PowerSchedulerPlugin.pdb"))); " is 182.
Long Statement,MPExtended.Applications.Development.DevTool.Tools,PSPluginInstallGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\PSPluginInstallGenerator.cs,Run,The length of the statement  "                    new XComment(String.Format("Autogenerated at {0}"' DateTime.Now.ToString("dd MMM yyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture)))' " is 146.
Long Statement,MPExtended.Applications.Development.DevTool.Tools,PSPluginInstallGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\PSPluginInstallGenerator.cs,Run,The length of the statement  "            doc.Save(Path.Combine(Installation.GetSourceRootDirectory()' "Installers"' "MPExtended.Installers.Service"' "Generated.wxs")); " is 126.
Long Statement,MPExtended.Applications.Development.DevTool.Tools,InstallLayoutExporter,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\InstallLayoutExporter.cs,Run,The length of the statement  "            string filesystemWxs = Path.Combine(Installation.GetSourceRootDirectory()' "Installers"' "MPExtended.Installers.Service"' "Filesystem.wxs"); " is 140.
Long Statement,MPExtended.Applications.Development.DevTool.Tools,InstallLayoutExporter,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\InstallLayoutExporter.cs,Run,The length of the statement  "            var dir = root.Descendants(XName.Get("Directory"' WIX_NS)).First(d => d.Attribute("Id") != null && d.Attribute("Id").Value == "InstallDirectory"); " is 146.
Long Statement,MPExtended.Applications.Development.DevTool.Tools,InstallLayoutExporter,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\InstallLayoutExporter.cs,ToFullPath,The length of the statement  "                string rep = Path.Combine(Installation.GetSourceRootDirectory()' match.Groups[2].Value' match.Groups[1].Value' "bin"' Installation.GetSourceBuildDirectoryName()); " is 162.
Long Statement,MPExtended.Applications.Development.DevTool.Tools,InterfaceCheck,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\InterfaceCheck.cs,Run,The length of the statement  "            CheckService(rootpath' "MPExtended.Services.MetaService"' new string[] { "IMetaService"' "IProtectedMetaService" }' "MetaService"); " is 131.
Long Statement,MPExtended.Applications.Development.DevTool.Tools,InterfaceCheck,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\InterfaceCheck.cs,Run,The length of the statement  "            CheckService(rootpath' "MPExtended.Services.StreamingService"' new string[] { "IStreamingService"' "IWebStreamingService" }' "StreamingService"); " is 145.
Long Statement,MPExtended.Applications.Development.DevTool.Tools,InterfaceCheck,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\InterfaceCheck.cs,CheckService,The length of the statement  "            Assembly iface = Assembly.LoadFrom(Path.Combine(rootpath' "Services"' interfaceAssemblyName' "bin"' Installation.GetSourceBuildDirectoryName()' interfaceAssemblyName + ".dll")); " is 177.
Long Statement,MPExtended.Applications.Development.DevTool.Tools,InterfaceCheck,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\InterfaceCheck.cs,CheckService,The length of the statement  "            Assembly impl = Assembly.LoadFrom(Path.Combine(rootpath' "Services"' service' "bin"' Installation.GetSourceBuildDirectoryName()' service + ".dll")); " is 148.
Long Statement,MPExtended.Applications.Development.DevTool.Tools,InterfaceCheck,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\InterfaceCheck.cs,CheckService,The length of the statement  "                    OutputStream.WriteLine("{0}: Method {1} returns {2} in interface but {3} in implementation"' service' currentMethod.Name' intf.ReturnType' currentMethod.ReturnType); " is 165.
Long Statement,MPExtended.Applications.Development.DevTool.Tools,InterfaceCheck,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\InterfaceCheck.cs,CheckService,The length of the statement  "                    OutputStream.WriteLine("{0}: Method {1} exists in implementation with different signature then in interface"' service' currentMethod.Name); " is 139.
Long Statement,MPExtended.Applications.Development.DevTool.Tools,InterfaceCheck,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\InterfaceCheck.cs,CheckService,The length of the statement  "                        OutputStream.WriteLine("{0}({1}): Parameter {2} has different names ({3} vs {4})"' service' currentMethod.Name' i' intfParameters[i].Name' implParameters[i].Name); " is 163.
Long Statement,MPExtended.Applications.Development.DevTool.Tools,InterfaceCheck,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\InterfaceCheck.cs,CheckService,The length of the statement  "                        OutputStream.WriteLine("{0}({1}): Parameter {2} has differnet types ({3} vs {4})"' service' currentMethod.Name' i' intfParameters[i].ParameterType' implParameters[i].ParameterType); " is 181.
Long Statement,MPExtended.Applications.Development.DevTool.Tools,MonolithicPowerscheduler,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\MonolithicPowerscheduler.cs,Run,The length of the statement  "            // "C:\Program Files (x86)\Microsoft\ILMerge\ILMerge.exe" /target:library /v2 /out:MPExtended.PowerScheduler.dll MPExtended.Applications.PowerSchedulerPlugin.dll MPExtended.Services.MetaService.Interfaces.dll MPExtended.Services.Common.Interfaces.dll " is 250.
Long Statement,MPExtended.Applications.Development.DevTool.Tools,MonolithicPowerscheduler,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\MonolithicPowerscheduler.cs,Run,The length of the statement  "                @"/target:library /v2 ""/out:{0}/MPExtended.PowerScheduler.dll"" ""{0}/MPExtended.Applications.PowerSchedulerPlugin.dll"" ""{0}/MPExtended.Services.MetaService.Interfaces.dll"" ""{0}/MPExtended.Services.Common.Interfaces.dll"""' " is 228.
Long Statement,MPExtended.Applications.Development.DevTool.Tools,MonolithicPowerscheduler,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\MonolithicPowerscheduler.cs,Run,The length of the statement  "                Path.Combine(Installation.GetSourceRootDirectory()' "Applications"' "MPExtended.Applications.PowerSchedulerPlugin"' "bin"' Installation.GetSourceBuildDirectoryName()) " is 166.
Long Statement,MPExtended.Applications.Development.DevTool.Tools,MonolithicPowerscheduler,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\MonolithicPowerscheduler.cs,FindILMerge,The length of the statement  "            string progx86 = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.ProgramFilesX86)' "Microsoft"' "ILMerge"' "ILMerge.exe"); " is 139.
Long Statement,MPExtended.Applications.Development.DevTool.Tools,MonolithicPowerscheduler,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\MonolithicPowerscheduler.cs,FindILMerge,The length of the statement  "            string prog = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.ProgramFiles)' "Microsoft"' "ILMerge"' "ILMerge.exe"); " is 133.
Long Statement,MPExtended.Applications.Development.DevTool.Tools,TransifexDownloader,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\TransifexDownloader.cs,Run,The length of the statement  "            //client.Headers[HttpRequestHeader.UserAgent] = VersionUtil.GetUserAgent("DevTool"); <<-- This seems to cause a HTTP 401 response " is 129.
Long Statement,MPExtended.Applications.Development.DevTool.Tools,TransifexDownloader,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\TransifexDownloader.cs,Run,The length of the statement  "                    var resx = client.DownloadString(String.Format("https://www.transifex.com/api/2/project/mpextended/resource/{0}/translation/{1}/?file"' resource.Key' code)); " is 157.
Long Statement,MPExtended.Applications.Development.DevTool.Tools,TransifexDownloader,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\TransifexDownloader.cs,GetLanguageList,The length of the statement  "                var stats = client.DownloadString(String.Format("https://www.transifex.com/api/2/project/mpextended/resource/{0}/stats/"' resource.Key)); " is 137.
Long Statement,MPExtended.Applications.Development.DevTool.Tools,TransifexDownloader,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\TransifexDownloader.cs,GetLanguageList,The length of the statement  "                    OutputStream.WriteLine("Skipping language '{0}' because translated count {1}% is below threshold (80%)"' lang.Key' Math.Round(percentage * 100)); " is 145.
Long Statement,MPExtended.Applications.Development.DevTool.WixFS,ServiceTranslationsGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\WixFS\ServiceTranslationsGenerator.cs,Run,The length of the statement  "            var output = Path.Combine(Installation.GetSourceRootDirectory()' "Installers"' "MPExtended.Installers.Service"' "Translations.wxs"); " is 132.
Long Statement,MPExtended.Applications.Development.DevTool.WixFS,CustomGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\WixFS\CustomGenerator.cs,Run,The length of the statement  "            RunFromInput(Answers["inputDirectory"]' Answers["outputFile"]' Answers["prefix"]' Answers["parentName"]' Answers["noImmediate"] == "y"); " is 136.
Long Statement,MPExtended.Applications.Development.DevTool.WixFS,WebMPGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\WixFS\WebMPGenerator.cs,Run,The length of the statement  "            RunFromInput(@"Applications\MPExtended.Applications.WebMediaPortal"' Answers["outputDirectory"] + "WWW.wxs"' "WWW"' "Dir_WWW"' false); " is 134.
Long Statement,MPExtended.Applications.Development.DevTool.WixFS,WebMPGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\WixFS\WebMPGenerator.cs,Run,The length of the statement  "            RunFromInput(@"Applications\MPExtended.Applications.WebMediaPortal\bin"' Answers["outputDirectory"] + "Translations.wxs"' "Translations"' "BinDirectory"' true); " is 160.
Long Statement,MPExtended.Applications.Development.DevTool.WixFS,WixFSGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\WixFS\WixFSGenerator.cs,RunFromInput,The length of the statement  "            AddDirectory(inputDir' "Component_Generated_" + name' "Dir_Generated_" + name' ns' directoryRef' componentGroup' skipImmediate); " is 128.
Long Statement,MPExtended.Applications.Development.DevTool.WixFS,WixFSGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\WixFS\WixFSGenerator.cs,AddDirectory,The length of the statement  "                    if (AddDirectory(Path.Combine(path' dir)' baseComponent + "_" + dir' basePrefix + "_" + dir' ns' xmlDir' componentGroup)) " is 121.
Complex Conditional,MPExtended.Applications.Development.DevTool.DocGen,Generator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\Generator.cs,IsUndocumentableType,The conditional expression  "type == typeof(string) || type == typeof(char) || type == typeof(Stream) || type == typeof(DateTime) || type.Name.Contains("WebDictionary")"  is complex.
Complex Conditional,MPExtended.Applications.Development.DevTool.Tools,InterfaceCheck,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\InterfaceCheck.cs,CheckService,The conditional expression  "currentMethod.DeclaringType.Name != implementationType.Name || currentMethod.Name == "Dispose" ||                      currentMethod.Name == "get_Instance" || currentMethod.Name == "SetAsInstance""  is complex.
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,MASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\MASGenerator.cs,GenerateSortOrder,The following statement contains a magic number: if (methodName.Contains("Filter")) return 2;
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,MASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\MASGenerator.cs,GenerateSortOrder,The following statement contains a magic number: if (methodName.Contains("Movie")) return 3;
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,MASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\MASGenerator.cs,GenerateSortOrder,The following statement contains a magic number: if (methodName.Contains("Music")) return 4;
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,MASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\MASGenerator.cs,GenerateSortOrder,The following statement contains a magic number: if (methodName.Contains("Playlist")) return 5;
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,MASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\MASGenerator.cs,GenerateSortOrder,The following statement contains a magic number: if (methodName.Contains("Picture")) return 6;
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,MASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\MASGenerator.cs,GenerateSortOrder,The following statement contains a magic number: if (methodName.Contains("TV")) return 7;
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,MASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\MASGenerator.cs,GenerateSortOrder,The following statement contains a magic number: if (methodName.Contains("FileSystem")) return 8;
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,MASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\MASGenerator.cs,GetHeadings,The following statement contains a magic number: return new Dictionary<int' string>()              {                  { 1' "General" }'                  { 2' "Filters" }'                  { 3' "Movie" }'                  { 4' "Music" }'                  { 5' "Playlist" }'                  { 6' "Picture" }'                  { 7' "TVShow" }'                  { 8' "FileSystem" }'              };
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,MASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\MASGenerator.cs,GetHeadings,The following statement contains a magic number: return new Dictionary<int' string>()              {                  { 1' "General" }'                  { 2' "Filters" }'                  { 3' "Movie" }'                  { 4' "Music" }'                  { 5' "Playlist" }'                  { 6' "Picture" }'                  { 7' "TVShow" }'                  { 8' "FileSystem" }'              };
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,MASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\MASGenerator.cs,GetHeadings,The following statement contains a magic number: return new Dictionary<int' string>()              {                  { 1' "General" }'                  { 2' "Filters" }'                  { 3' "Movie" }'                  { 4' "Music" }'                  { 5' "Playlist" }'                  { 6' "Picture" }'                  { 7' "TVShow" }'                  { 8' "FileSystem" }'              };
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,MASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\MASGenerator.cs,GetHeadings,The following statement contains a magic number: return new Dictionary<int' string>()              {                  { 1' "General" }'                  { 2' "Filters" }'                  { 3' "Movie" }'                  { 4' "Music" }'                  { 5' "Playlist" }'                  { 6' "Picture" }'                  { 7' "TVShow" }'                  { 8' "FileSystem" }'              };
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,MASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\MASGenerator.cs,GetHeadings,The following statement contains a magic number: return new Dictionary<int' string>()              {                  { 1' "General" }'                  { 2' "Filters" }'                  { 3' "Movie" }'                  { 4' "Music" }'                  { 5' "Playlist" }'                  { 6' "Picture" }'                  { 7' "TVShow" }'                  { 8' "FileSystem" }'              };
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,MASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\MASGenerator.cs,GetHeadings,The following statement contains a magic number: return new Dictionary<int' string>()              {                  { 1' "General" }'                  { 2' "Filters" }'                  { 3' "Movie" }'                  { 4' "Music" }'                  { 5' "Playlist" }'                  { 6' "Picture" }'                  { 7' "TVShow" }'                  { 8' "FileSystem" }'              };
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,MASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\MASGenerator.cs,GetHeadings,The following statement contains a magic number: return new Dictionary<int' string>()              {                  { 1' "General" }'                  { 2' "Filters" }'                  { 3' "Movie" }'                  { 4' "Music" }'                  { 5' "Playlist" }'                  { 6' "Picture" }'                  { 7' "TVShow" }'                  { 8' "FileSystem" }'              };
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,MASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\MASGenerator.cs,MapName,The following statement contains a magic number: if (typename == "WebSortField")              {                  Type rettype;                  IsListType(method.ReturnType' out rettype);                  var items = rettype.GetInterfaces().Where(x => x.Name.EndsWith("Sortable")).Select(x => x.Name.Substring(1' x.Name.Length - 9)).ToList();                    Type sby = commonAssembly.GetType("MPExtended.Services.Common.Interfaces.WebSortField");                  var valid = sby.GetEnumValues().Cast<int>().Select(x => new { Value = x' Name = sby.GetEnumName(x) }).Where(x => items.Contains(x.Name));                    var validTxt = String.Join("' "' valid.Select(x => x.Name + " = " + x.Value).ToArray());                  return "WebSortField; valid values: " + (validTxt.Length > 0 ? validTxt : "<em>none</em>");              }
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,TASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\TASGenerator.cs,GenerateSortOrder,The following statement contains a magic number: if (methodName.Contains("ChannelState")) return 2;
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,TASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\TASGenerator.cs,GenerateSortOrder,The following statement contains a magic number: if (methodName.Contains("Switch")) return 5;
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,TASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\TASGenerator.cs,GenerateSortOrder,The following statement contains a magic number: if (methodName.Contains("Radio")) return 4;
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,TASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\TASGenerator.cs,GenerateSortOrder,The following statement contains a magic number: if (methodName.Contains("GetChannel")) return 3;
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,TASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\TASGenerator.cs,GenerateSortOrder,The following statement contains a magic number: if (methodName.Contains("GetGroup")) return 3;
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,TASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\TASGenerator.cs,GenerateSortOrder,The following statement contains a magic number: if (methodName.Contains("TimeShifting")) return 5;
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,TASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\TASGenerator.cs,GenerateSortOrder,The following statement contains a magic number: if (methodName.Contains("Heartbeat")) return 5;
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,TASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\TASGenerator.cs,GenerateSortOrder,The following statement contains a magic number: if (methodName.Contains("Schedule")) return 6;
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,TASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\TASGenerator.cs,GenerateSortOrder,The following statement contains a magic number: if (methodName.Contains("Recording")) return 7;
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,TASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\TASGenerator.cs,GenerateSortOrder,The following statement contains a magic number: if (methodName.Contains("Program")) return 8;
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,TASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\TASGenerator.cs,GetHeadings,The following statement contains a magic number: return new Dictionary<int' string>()              {                  { 1' "Misc" }'                  { 2' "Channels" }'                  { 3' "TV" }'                  { 4' "Radio" }'                  { 5' "Timeshiftings" }'                  { 6' "Schedule" }'                  { 7' "Recording" }'                  { 8' "EPG" }              };
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,TASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\TASGenerator.cs,GetHeadings,The following statement contains a magic number: return new Dictionary<int' string>()              {                  { 1' "Misc" }'                  { 2' "Channels" }'                  { 3' "TV" }'                  { 4' "Radio" }'                  { 5' "Timeshiftings" }'                  { 6' "Schedule" }'                  { 7' "Recording" }'                  { 8' "EPG" }              };
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,TASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\TASGenerator.cs,GetHeadings,The following statement contains a magic number: return new Dictionary<int' string>()              {                  { 1' "Misc" }'                  { 2' "Channels" }'                  { 3' "TV" }'                  { 4' "Radio" }'                  { 5' "Timeshiftings" }'                  { 6' "Schedule" }'                  { 7' "Recording" }'                  { 8' "EPG" }              };
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,TASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\TASGenerator.cs,GetHeadings,The following statement contains a magic number: return new Dictionary<int' string>()              {                  { 1' "Misc" }'                  { 2' "Channels" }'                  { 3' "TV" }'                  { 4' "Radio" }'                  { 5' "Timeshiftings" }'                  { 6' "Schedule" }'                  { 7' "Recording" }'                  { 8' "EPG" }              };
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,TASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\TASGenerator.cs,GetHeadings,The following statement contains a magic number: return new Dictionary<int' string>()              {                  { 1' "Misc" }'                  { 2' "Channels" }'                  { 3' "TV" }'                  { 4' "Radio" }'                  { 5' "Timeshiftings" }'                  { 6' "Schedule" }'                  { 7' "Recording" }'                  { 8' "EPG" }              };
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,TASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\TASGenerator.cs,GetHeadings,The following statement contains a magic number: return new Dictionary<int' string>()              {                  { 1' "Misc" }'                  { 2' "Channels" }'                  { 3' "TV" }'                  { 4' "Radio" }'                  { 5' "Timeshiftings" }'                  { 6' "Schedule" }'                  { 7' "Recording" }'                  { 8' "EPG" }              };
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,TASGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\TASGenerator.cs,GetHeadings,The following statement contains a magic number: return new Dictionary<int' string>()              {                  { 1' "Misc" }'                  { 2' "Channels" }'                  { 3' "TV" }'                  { 4' "Radio" }'                  { 5' "Timeshiftings" }'                  { 6' "Schedule" }'                  { 7' "Recording" }'                  { 8' "EPG" }              };
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,WSSGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\WSSGenerator.cs,GenerateSortOrder,The following statement contains a magic number: if (methodName.Contains("TranscoderProfile")) return 4;
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,WSSGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\WSSGenerator.cs,GenerateSortOrder,The following statement contains a magic number: if (methodName.Contains("StreamSize")) return 3;
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,WSSGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\WSSGenerator.cs,GenerateSortOrder,The following statement contains a magic number: if (methodName.Contains("TranscodingInfo")) return 3;
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,WSSGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\WSSGenerator.cs,GenerateSortOrder,The following statement contains a magic number: if (methodName.Contains("MediaInfo")) return 3;
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,WSSGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\WSSGenerator.cs,GenerateSortOrder,The following statement contains a magic number: if (methodName.Contains("CustomTranscoder")) return 6;
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,WSSGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\WSSGenerator.cs,GenerateSortOrder,The following statement contains a magic number: if (methodName.Contains("Artwork")) return 5;
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,WSSGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\WSSGenerator.cs,GenerateSortOrder,The following statement contains a magic number: if (methodName.Contains("Image")) return 5;
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,WSSGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\WSSGenerator.cs,GenerateSortOrder,The following statement contains a magic number: if (methodName.Contains("Stream")) return 2;
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,WSSGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\WSSGenerator.cs,GetHeadings,The following statement contains a magic number: return new Dictionary<int' string>()              {                  { 1' "General" }'                  { 2' "Control" }'                  { 3' "Stream info" }'                  { 4' "Profiles" }'                  { 5' "Images" }'                  { 6' "Misc" }'              };
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,WSSGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\WSSGenerator.cs,GetHeadings,The following statement contains a magic number: return new Dictionary<int' string>()              {                  { 1' "General" }'                  { 2' "Control" }'                  { 3' "Stream info" }'                  { 4' "Profiles" }'                  { 5' "Images" }'                  { 6' "Misc" }'              };
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,WSSGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\WSSGenerator.cs,GetHeadings,The following statement contains a magic number: return new Dictionary<int' string>()              {                  { 1' "General" }'                  { 2' "Control" }'                  { 3' "Stream info" }'                  { 4' "Profiles" }'                  { 5' "Images" }'                  { 6' "Misc" }'              };
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,WSSGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\WSSGenerator.cs,GetHeadings,The following statement contains a magic number: return new Dictionary<int' string>()              {                  { 1' "General" }'                  { 2' "Control" }'                  { 3' "Stream info" }'                  { 4' "Profiles" }'                  { 5' "Images" }'                  { 6' "Misc" }'              };
Magic Number,MPExtended.Applications.Development.DevTool.DocGen,WSSGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\DocGen\WSSGenerator.cs,GetHeadings,The following statement contains a magic number: return new Dictionary<int' string>()              {                  { 1' "General" }'                  { 2' "Control" }'                  { 3' "Stream info" }'                  { 4' "Profiles" }'                  { 5' "Images" }'                  { 6' "Misc" }'              };
Magic Number,MPExtended.Applications.Development.DevTool,Program,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Program.cs,Main,The following statement contains a magic number: if (args.Length >= 2 && args[0] == "/noquestions")              {                  OperateNonInteractive(args);              }              else              {                  OperateInteractive();              }
Magic Number,MPExtended.Applications.Development.DevTool,Program,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Program.cs,OperateNonInteractive,The following statement contains a magic number: foreach (var tool in ListTools())              {                  if (tool.GetType().Name == args[1])                  {                      (tool as IDevTool).OutputStream = Console.Out;                      if (tool is IQuestioningDevTool)                      {                          int arg = 2;                          (tool as IQuestioningDevTool).Answers = new Dictionary<string' string>();                          foreach (var question in (tool as IQuestioningDevTool).Questions)                          {                              (tool as IQuestioningDevTool).Answers[question.Name] = args[arg++];                          }                      }                        tool.Run();                      return;                  }              }
Magic Number,MPExtended.Applications.Development.DevTool.Tools,InstallLayoutExporter,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\InstallLayoutExporter.cs,ToFullPath,The following statement contains a magic number: foreach (Match match in result)              {                  string rep = Path.Combine(Installation.GetSourceRootDirectory()' match.Groups[2].Value' match.Groups[1].Value' "bin"' Installation.GetSourceBuildDirectoryName());                  wixpath = wixpath.Replace(match.Value' rep);              }
Magic Number,MPExtended.Applications.Development.DevTool.Tools,TransifexDownloader,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\Tools\TransifexDownloader.cs,GetLanguageList,The following statement contains a magic number: foreach (var lang in languages)              {                  float percentage = lang.Value.TranslatedStrings * 1f / lang.Value.TotalStrings;                  if (percentage < 0.8f)                  {                      OutputStream.WriteLine("Skipping language '{0}' because translated count {1}% is below threshold (80%)"' lang.Key' Math.Round(percentage * 100));                  }                  else if (lang.Key != "en") // skip the source language                  {                      yield return lang.Key;                  }              }
Magic Number,MPExtended.Applications.Development.DevTool.WixFS,WixFSGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\WixFS\WixFSGenerator.cs,AddDirectory,The following statement contains a magic number: if (files.Count() > 0 && !skipImmediate)              {                  // create stable GUIDs                  MD5 provider = MD5.Create();                  byte[] bytes = provider.ComputeHash(Encoding.UTF8.GetBytes("MPExtended_Hash_Guid_" + baseComponent));                  int byteIndex = BitConverter.IsLittleEndian ? 7 : 1;                  bytes[byteIndex] = (byte)(0x40 | (0x0F & bytes[byteIndex])); // pretend this are random GUIDs                    XElement filesComponent = new XElement(ns + "Component"'                      new XAttribute("Id"' baseComponent)'                      new XAttribute("Guid"' new Guid(bytes).ToString("D"))                  );                    foreach (var file in files)                  {                      string id = Regex.Replace(path + "_" + file' "[^a-zA-Z0-9_]+"' "_"' RegexOptions.Compiled);                      filesComponent.Add(new XElement(ns + "File"'                          new XAttribute("Source"' @"$(var.SolutionDir)\" + path + @"\" + file)'                          new XAttribute("Id"' "FileGen_" + (id.Length > 60 ? id.Substring(id.Length - 60) : id))                      ));                  }                    dirNode.Add(filesComponent);                  componentGroup.Add(new XElement(ns + "ComponentRef"' new XAttribute("Id"' baseComponent)));                  didAdd = true;              }
Magic Number,MPExtended.Applications.Development.DevTool.WixFS,WixFSGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\WixFS\WixFSGenerator.cs,AddDirectory,The following statement contains a magic number: if (files.Count() > 0 && !skipImmediate)              {                  // create stable GUIDs                  MD5 provider = MD5.Create();                  byte[] bytes = provider.ComputeHash(Encoding.UTF8.GetBytes("MPExtended_Hash_Guid_" + baseComponent));                  int byteIndex = BitConverter.IsLittleEndian ? 7 : 1;                  bytes[byteIndex] = (byte)(0x40 | (0x0F & bytes[byteIndex])); // pretend this are random GUIDs                    XElement filesComponent = new XElement(ns + "Component"'                      new XAttribute("Id"' baseComponent)'                      new XAttribute("Guid"' new Guid(bytes).ToString("D"))                  );                    foreach (var file in files)                  {                      string id = Regex.Replace(path + "_" + file' "[^a-zA-Z0-9_]+"' "_"' RegexOptions.Compiled);                      filesComponent.Add(new XElement(ns + "File"'                          new XAttribute("Source"' @"$(var.SolutionDir)\" + path + @"\" + file)'                          new XAttribute("Id"' "FileGen_" + (id.Length > 60 ? id.Substring(id.Length - 60) : id))                      ));                  }                    dirNode.Add(filesComponent);                  componentGroup.Add(new XElement(ns + "ComponentRef"' new XAttribute("Id"' baseComponent)));                  didAdd = true;              }
Magic Number,MPExtended.Applications.Development.DevTool.WixFS,WixFSGenerator,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.DevTool\WixFS\WixFSGenerator.cs,AddDirectory,The following statement contains a magic number: if (files.Count() > 0 && !skipImmediate)              {                  // create stable GUIDs                  MD5 provider = MD5.Create();                  byte[] bytes = provider.ComputeHash(Encoding.UTF8.GetBytes("MPExtended_Hash_Guid_" + baseComponent));                  int byteIndex = BitConverter.IsLittleEndian ? 7 : 1;                  bytes[byteIndex] = (byte)(0x40 | (0x0F & bytes[byteIndex])); // pretend this are random GUIDs                    XElement filesComponent = new XElement(ns + "Component"'                      new XAttribute("Id"' baseComponent)'                      new XAttribute("Guid"' new Guid(bytes).ToString("D"))                  );                    foreach (var file in files)                  {                      string id = Regex.Replace(path + "_" + file' "[^a-zA-Z0-9_]+"' "_"' RegexOptions.Compiled);                      filesComponent.Add(new XElement(ns + "File"'                          new XAttribute("Source"' @"$(var.SolutionDir)\" + path + @"\" + file)'                          new XAttribute("Id"' "FileGen_" + (id.Length > 60 ? id.Substring(id.Length - 60) : id))                      ));                  }                    dirNode.Add(filesComponent);                  componentGroup.Add(new XElement(ns + "ComponentRef"' new XAttribute("Id"' baseComponent)));                  didAdd = true;              }
