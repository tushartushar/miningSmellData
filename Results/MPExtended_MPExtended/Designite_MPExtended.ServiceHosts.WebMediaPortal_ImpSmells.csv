Implementation smell,Namespace,Class,File,Method,Description
Long Method,MPExtended.ServiceHosts.WebMediaPortal,IISExpressHost,C:\research\architectureSmells\repos\MPExtended_MPExtended\ServiceHosts\MPExtended.ServiceHosts.WebMediaPortal\IISExpressHost.cs,Start,The method has 105 lines of code.
Complex Method,MPExtended.ServiceHosts.WebMediaPortal,IISExpressHost,C:\research\architectureSmells\repos\MPExtended_MPExtended\ServiceHosts\MPExtended.ServiceHosts.WebMediaPortal\IISExpressHost.cs,Start,Cyclomatic complexity of the method is 9
Long Statement,MPExtended.ServiceHosts.WebMediaPortal,IISConfigGenerator,C:\research\architectureSmells\repos\MPExtended_MPExtended\ServiceHosts\MPExtended.ServiceHosts.WebMediaPortal\IISConfigGenerator.cs,GenerateConfigFile,The length of the statement  "                XElement site = file.Element("system.applicationHost").Element("sites").Elements("site").First(x => x.Attribute("name").Value == "WebMediaPortal"); " is 147.
Long Statement,MPExtended.ServiceHosts.WebMediaPortal,IISExpressHost,C:\research\architectureSmells\repos\MPExtended_MPExtended\ServiceHosts\MPExtended.ServiceHosts.WebMediaPortal\IISExpressHost.cs,Start,The length of the statement  "                generator.TemplatePath = Path.Combine(Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location)' "IISExpressTemplate.config"); " is 132.
Long Statement,MPExtended.ServiceHosts.WebMediaPortal,IISExpressHost,C:\research\architectureSmells\repos\MPExtended_MPExtended\ServiceHosts\MPExtended.ServiceHosts.WebMediaPortal\IISExpressHost.cs,Start,The length of the statement  "                Log.Debug("Saved IIS Express configuration file to {0}' using {1} as www directory"' tempConfigFile' generator.PhysicalSitePath); " is 129.
Long Statement,MPExtended.ServiceHosts.WebMediaPortal,IISExpressHost,C:\research\architectureSmells\repos\MPExtended_MPExtended\ServiceHosts\MPExtended.ServiceHosts.WebMediaPortal\IISExpressHost.cs,Start,The length of the statement  "                    iisExpressLocation = RegistryReader.ReadKeyAllViews(RegistryHive.LocalMachine' @"SOFTWARE\Microsoft\IISExpress\" + version' "InstallPath"); " is 139.
Long Statement,MPExtended.ServiceHosts.WebMediaPortal,IISExpressHost,C:\research\architectureSmells\repos\MPExtended_MPExtended\ServiceHosts\MPExtended.ServiceHosts.WebMediaPortal\IISExpressHost.cs,Start,The length of the statement  "                string iisExpressDefault = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.ProgramFilesX86)' "IIS Express"' "iisexpress.exe"); " is 143.
Empty Catch Block,MPExtended.ServiceHosts.WebMediaPortal,EnvironmentSetup,C:\research\architectureSmells\repos\MPExtended_MPExtended\ServiceHosts\MPExtended.ServiceHosts.WebMediaPortal\EnvironmentSetup.cs,SetupAspDotNet,The method has an empty catch block.
Magic Number,MPExtended.ServiceHosts.WebMediaPortal,IISExpressHost,C:\research\architectureSmells\repos\MPExtended_MPExtended\ServiceHosts\MPExtended.ServiceHosts.WebMediaPortal\IISExpressHost.cs,Start,The following statement contains a magic number: File.Exists(logPath) && new FileInfo(logPath).Length > 1024 * 1024
Magic Number,MPExtended.ServiceHosts.WebMediaPortal,IISExpressHost,C:\research\architectureSmells\repos\MPExtended_MPExtended\ServiceHosts\MPExtended.ServiceHosts.WebMediaPortal\IISExpressHost.cs,Start,The following statement contains a magic number: File.Exists(logPath) && new FileInfo(logPath).Length > 1024 * 1024
Magic Number,MPExtended.ServiceHosts.WebMediaPortal,IISExpressHost,C:\research\architectureSmells\repos\MPExtended_MPExtended\ServiceHosts\MPExtended.ServiceHosts.WebMediaPortal\IISExpressHost.cs,Start,The following statement contains a magic number: logThread = new Thread(delegate(object param)                  {                      using (StreamReader reader = (StreamReader)param)                      {                          Stream file = File.Open(logPath' FileMode.Append' FileAccess.Write' FileShare.Read);                          using (StreamWriter writer = new StreamWriter(file' Encoding.UTF8' 16 * 1024))                          {                              writer.WriteLine("<process started at {0:yyyy-MM-dd HH:mm:ss} with arguments {1}>"' DateTime.Now' arguments);                              string line;                              long i = 0;                              while ((line = reader.ReadLine()) != null)                              {                                  writer.WriteLine("[{0:yyyy-MM-dd HH:mm:ss}] {1}"' DateTime.Now' line);                                  if (i++ % 10 == 0)                                      writer.Flush();                              }                              writer.WriteLine("<process exited at {0:yyyy-MM-dd HH:mm:ss}>"' DateTime.Now);                          }                      }                    });
Magic Number,MPExtended.ServiceHosts.WebMediaPortal,IISExpressHost,C:\research\architectureSmells\repos\MPExtended_MPExtended\ServiceHosts\MPExtended.ServiceHosts.WebMediaPortal\IISExpressHost.cs,Start,The following statement contains a magic number: logThread = new Thread(delegate(object param)                  {                      using (StreamReader reader = (StreamReader)param)                      {                          Stream file = File.Open(logPath' FileMode.Append' FileAccess.Write' FileShare.Read);                          using (StreamWriter writer = new StreamWriter(file' Encoding.UTF8' 16 * 1024))                          {                              writer.WriteLine("<process started at {0:yyyy-MM-dd HH:mm:ss} with arguments {1}>"' DateTime.Now' arguments);                              string line;                              long i = 0;                              while ((line = reader.ReadLine()) != null)                              {                                  writer.WriteLine("[{0:yyyy-MM-dd HH:mm:ss}] {1}"' DateTime.Now' line);                                  if (i++ % 10 == 0)                                      writer.Flush();                              }                              writer.WriteLine("<process exited at {0:yyyy-MM-dd HH:mm:ss}>"' DateTime.Now);                          }                      }                    });
Magic Number,MPExtended.ServiceHosts.WebMediaPortal,IISExpressHost,C:\research\architectureSmells\repos\MPExtended_MPExtended\ServiceHosts\MPExtended.ServiceHosts.WebMediaPortal\IISExpressHost.cs,Start,The following statement contains a magic number: logThread = new Thread(delegate(object param)                  {                      using (StreamReader reader = (StreamReader)param)                      {                          Stream file = File.Open(logPath' FileMode.Append' FileAccess.Write' FileShare.Read);                          using (StreamWriter writer = new StreamWriter(file' Encoding.UTF8' 16 * 1024))                          {                              writer.WriteLine("<process started at {0:yyyy-MM-dd HH:mm:ss} with arguments {1}>"' DateTime.Now' arguments);                              string line;                              long i = 0;                              while ((line = reader.ReadLine()) != null)                              {                                  writer.WriteLine("[{0:yyyy-MM-dd HH:mm:ss}] {1}"' DateTime.Now' line);                                  if (i++ % 10 == 0)                                      writer.Flush();                              }                              writer.WriteLine("<process exited at {0:yyyy-MM-dd HH:mm:ss}>"' DateTime.Now);                          }                      }                    });
Magic Number,MPExtended.ServiceHosts.WebMediaPortal,IISExpressHost,C:\research\architectureSmells\repos\MPExtended_MPExtended\ServiceHosts\MPExtended.ServiceHosts.WebMediaPortal\IISExpressHost.cs,Stop,The following statement contains a magic number: logThread.Join(TimeSpan.FromSeconds(5));
