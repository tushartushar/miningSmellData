Implementation smell,Namespace,Class,File,Method,Description
Long Statement,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,InitializeComponent,The length of the statement  "            this.lblMovies.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 156.
Long Statement,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,InitializeComponent,The length of the statement  "            this.lblEpisodes.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 158.
Magic Number,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,btnStart_Click,The following statement contains a magic number: if (isRunning)              {                  bwMovies.CancelAsync();                  bwEpisodes.CancelAsync();                    isRunning = false;                  btnStart.Text = "Start";              }              else              {                  bwMovies = new BackgroundWorker();                  bwMovies.WorkerReportsProgress = true;                  bwMovies.WorkerSupportsCancellation = true;                  bwMovies.ProgressChanged += delegate(object bwSender' ProgressChangedEventArgs bwE)                  {                      lblMovies.Text = "Movies (" + bwE.UserState + " / " + movieCount + "):";                      prgMovies.Value = (int)bwE.UserState;                  };                  bwMovies.DoWork += delegate(object bwSender' DoWorkEventArgs bwEvent)                  {                      int j = 0;                      BackgroundWorker worker = (BackgroundWorker)bwSender;                      for (int i = 0; i < movieCount; i += 100)                      {                          var movies = _services.MAS.GetMoviesBasicByRange(null' i' i + 99);                          foreach (var movie in movies)                          {                              _services.MASStreamControl.GetMediaInfo(WebMediaType.Movie' movie.PID' movie.Id' 0);                              worker.ReportProgress(5' ++j);                              if (worker.CancellationPending)                              {                                  bwEvent.Cancel = true;                                  break;                              }                          }                            if (bwEvent.Cancel)                              break;                      }                  };                  bwMovies.RunWorkerCompleted += delegate(object bwSender' RunWorkerCompletedEventArgs bwEvent)                  {                      if (!bwEpisodes.IsBusy)                      {                          isRunning = false;                          btnStart.Text = "Start";                      }                  };                  bwMovies.RunWorkerAsync();                    bwEpisodes = new BackgroundWorker();                  bwEpisodes.WorkerReportsProgress = true;                  bwEpisodes.WorkerSupportsCancellation = true;                  bwEpisodes.ProgressChanged += delegate(object bwSender' ProgressChangedEventArgs bwE)                  {                      lblEpisodes.Text = "Episodes (" + bwE.UserState + " / " + episodeCount + "):";                      prgEpisodes.Value = (int)bwE.UserState;                  };                  bwEpisodes.DoWork += delegate(object bwSender' DoWorkEventArgs bwEvent)                  {                      int j = 0;                      BackgroundWorker worker = (BackgroundWorker)bwSender;                      for (int i = 0; i < episodeCount; i += 100)                      {                          var episodes = _services.MAS.GetTVEpisodesBasicByRange(null' i' i + 99);                          foreach (var episode in episodes)                          {                              _services.MASStreamControl.GetMediaInfo(WebMediaType.TVEpisode' episode.PID' episode.Id' 0);                              worker.ReportProgress(5' ++j);                              if (worker.CancellationPending)                              {                                  bwEvent.Cancel = true;                                  break;                              }                          }                            if (bwEvent.Cancel)                              break;                      }                  };                  bwEpisodes.RunWorkerCompleted += delegate(object bwSender' RunWorkerCompletedEventArgs bwEvent)                  {                      if (!bwMovies.IsBusy)                      {                          isRunning = false;                          btnStart.Text = "Start";                      }                  };                  bwEpisodes.RunWorkerAsync();                    btnStart.Text = "Stop";                  isRunning = true;              }
Magic Number,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,btnStart_Click,The following statement contains a magic number: if (isRunning)              {                  bwMovies.CancelAsync();                  bwEpisodes.CancelAsync();                    isRunning = false;                  btnStart.Text = "Start";              }              else              {                  bwMovies = new BackgroundWorker();                  bwMovies.WorkerReportsProgress = true;                  bwMovies.WorkerSupportsCancellation = true;                  bwMovies.ProgressChanged += delegate(object bwSender' ProgressChangedEventArgs bwE)                  {                      lblMovies.Text = "Movies (" + bwE.UserState + " / " + movieCount + "):";                      prgMovies.Value = (int)bwE.UserState;                  };                  bwMovies.DoWork += delegate(object bwSender' DoWorkEventArgs bwEvent)                  {                      int j = 0;                      BackgroundWorker worker = (BackgroundWorker)bwSender;                      for (int i = 0; i < movieCount; i += 100)                      {                          var movies = _services.MAS.GetMoviesBasicByRange(null' i' i + 99);                          foreach (var movie in movies)                          {                              _services.MASStreamControl.GetMediaInfo(WebMediaType.Movie' movie.PID' movie.Id' 0);                              worker.ReportProgress(5' ++j);                              if (worker.CancellationPending)                              {                                  bwEvent.Cancel = true;                                  break;                              }                          }                            if (bwEvent.Cancel)                              break;                      }                  };                  bwMovies.RunWorkerCompleted += delegate(object bwSender' RunWorkerCompletedEventArgs bwEvent)                  {                      if (!bwEpisodes.IsBusy)                      {                          isRunning = false;                          btnStart.Text = "Start";                      }                  };                  bwMovies.RunWorkerAsync();                    bwEpisodes = new BackgroundWorker();                  bwEpisodes.WorkerReportsProgress = true;                  bwEpisodes.WorkerSupportsCancellation = true;                  bwEpisodes.ProgressChanged += delegate(object bwSender' ProgressChangedEventArgs bwE)                  {                      lblEpisodes.Text = "Episodes (" + bwE.UserState + " / " + episodeCount + "):";                      prgEpisodes.Value = (int)bwE.UserState;                  };                  bwEpisodes.DoWork += delegate(object bwSender' DoWorkEventArgs bwEvent)                  {                      int j = 0;                      BackgroundWorker worker = (BackgroundWorker)bwSender;                      for (int i = 0; i < episodeCount; i += 100)                      {                          var episodes = _services.MAS.GetTVEpisodesBasicByRange(null' i' i + 99);                          foreach (var episode in episodes)                          {                              _services.MASStreamControl.GetMediaInfo(WebMediaType.TVEpisode' episode.PID' episode.Id' 0);                              worker.ReportProgress(5' ++j);                              if (worker.CancellationPending)                              {                                  bwEvent.Cancel = true;                                  break;                              }                          }                            if (bwEvent.Cancel)                              break;                      }                  };                  bwEpisodes.RunWorkerCompleted += delegate(object bwSender' RunWorkerCompletedEventArgs bwEvent)                  {                      if (!bwMovies.IsBusy)                      {                          isRunning = false;                          btnStart.Text = "Start";                      }                  };                  bwEpisodes.RunWorkerAsync();                    btnStart.Text = "Stop";                  isRunning = true;              }
Magic Number,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,btnStart_Click,The following statement contains a magic number: if (isRunning)              {                  bwMovies.CancelAsync();                  bwEpisodes.CancelAsync();                    isRunning = false;                  btnStart.Text = "Start";              }              else              {                  bwMovies = new BackgroundWorker();                  bwMovies.WorkerReportsProgress = true;                  bwMovies.WorkerSupportsCancellation = true;                  bwMovies.ProgressChanged += delegate(object bwSender' ProgressChangedEventArgs bwE)                  {                      lblMovies.Text = "Movies (" + bwE.UserState + " / " + movieCount + "):";                      prgMovies.Value = (int)bwE.UserState;                  };                  bwMovies.DoWork += delegate(object bwSender' DoWorkEventArgs bwEvent)                  {                      int j = 0;                      BackgroundWorker worker = (BackgroundWorker)bwSender;                      for (int i = 0; i < movieCount; i += 100)                      {                          var movies = _services.MAS.GetMoviesBasicByRange(null' i' i + 99);                          foreach (var movie in movies)                          {                              _services.MASStreamControl.GetMediaInfo(WebMediaType.Movie' movie.PID' movie.Id' 0);                              worker.ReportProgress(5' ++j);                              if (worker.CancellationPending)                              {                                  bwEvent.Cancel = true;                                  break;                              }                          }                            if (bwEvent.Cancel)                              break;                      }                  };                  bwMovies.RunWorkerCompleted += delegate(object bwSender' RunWorkerCompletedEventArgs bwEvent)                  {                      if (!bwEpisodes.IsBusy)                      {                          isRunning = false;                          btnStart.Text = "Start";                      }                  };                  bwMovies.RunWorkerAsync();                    bwEpisodes = new BackgroundWorker();                  bwEpisodes.WorkerReportsProgress = true;                  bwEpisodes.WorkerSupportsCancellation = true;                  bwEpisodes.ProgressChanged += delegate(object bwSender' ProgressChangedEventArgs bwE)                  {                      lblEpisodes.Text = "Episodes (" + bwE.UserState + " / " + episodeCount + "):";                      prgEpisodes.Value = (int)bwE.UserState;                  };                  bwEpisodes.DoWork += delegate(object bwSender' DoWorkEventArgs bwEvent)                  {                      int j = 0;                      BackgroundWorker worker = (BackgroundWorker)bwSender;                      for (int i = 0; i < episodeCount; i += 100)                      {                          var episodes = _services.MAS.GetTVEpisodesBasicByRange(null' i' i + 99);                          foreach (var episode in episodes)                          {                              _services.MASStreamControl.GetMediaInfo(WebMediaType.TVEpisode' episode.PID' episode.Id' 0);                              worker.ReportProgress(5' ++j);                              if (worker.CancellationPending)                              {                                  bwEvent.Cancel = true;                                  break;                              }                          }                            if (bwEvent.Cancel)                              break;                      }                  };                  bwEpisodes.RunWorkerCompleted += delegate(object bwSender' RunWorkerCompletedEventArgs bwEvent)                  {                      if (!bwMovies.IsBusy)                      {                          isRunning = false;                          btnStart.Text = "Start";                      }                  };                  bwEpisodes.RunWorkerAsync();                    btnStart.Text = "Stop";                  isRunning = true;              }
Magic Number,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,btnStart_Click,The following statement contains a magic number: if (isRunning)              {                  bwMovies.CancelAsync();                  bwEpisodes.CancelAsync();                    isRunning = false;                  btnStart.Text = "Start";              }              else              {                  bwMovies = new BackgroundWorker();                  bwMovies.WorkerReportsProgress = true;                  bwMovies.WorkerSupportsCancellation = true;                  bwMovies.ProgressChanged += delegate(object bwSender' ProgressChangedEventArgs bwE)                  {                      lblMovies.Text = "Movies (" + bwE.UserState + " / " + movieCount + "):";                      prgMovies.Value = (int)bwE.UserState;                  };                  bwMovies.DoWork += delegate(object bwSender' DoWorkEventArgs bwEvent)                  {                      int j = 0;                      BackgroundWorker worker = (BackgroundWorker)bwSender;                      for (int i = 0; i < movieCount; i += 100)                      {                          var movies = _services.MAS.GetMoviesBasicByRange(null' i' i + 99);                          foreach (var movie in movies)                          {                              _services.MASStreamControl.GetMediaInfo(WebMediaType.Movie' movie.PID' movie.Id' 0);                              worker.ReportProgress(5' ++j);                              if (worker.CancellationPending)                              {                                  bwEvent.Cancel = true;                                  break;                              }                          }                            if (bwEvent.Cancel)                              break;                      }                  };                  bwMovies.RunWorkerCompleted += delegate(object bwSender' RunWorkerCompletedEventArgs bwEvent)                  {                      if (!bwEpisodes.IsBusy)                      {                          isRunning = false;                          btnStart.Text = "Start";                      }                  };                  bwMovies.RunWorkerAsync();                    bwEpisodes = new BackgroundWorker();                  bwEpisodes.WorkerReportsProgress = true;                  bwEpisodes.WorkerSupportsCancellation = true;                  bwEpisodes.ProgressChanged += delegate(object bwSender' ProgressChangedEventArgs bwE)                  {                      lblEpisodes.Text = "Episodes (" + bwE.UserState + " / " + episodeCount + "):";                      prgEpisodes.Value = (int)bwE.UserState;                  };                  bwEpisodes.DoWork += delegate(object bwSender' DoWorkEventArgs bwEvent)                  {                      int j = 0;                      BackgroundWorker worker = (BackgroundWorker)bwSender;                      for (int i = 0; i < episodeCount; i += 100)                      {                          var episodes = _services.MAS.GetTVEpisodesBasicByRange(null' i' i + 99);                          foreach (var episode in episodes)                          {                              _services.MASStreamControl.GetMediaInfo(WebMediaType.TVEpisode' episode.PID' episode.Id' 0);                              worker.ReportProgress(5' ++j);                              if (worker.CancellationPending)                              {                                  bwEvent.Cancel = true;                                  break;                              }                          }                            if (bwEvent.Cancel)                              break;                      }                  };                  bwEpisodes.RunWorkerCompleted += delegate(object bwSender' RunWorkerCompletedEventArgs bwEvent)                  {                      if (!bwMovies.IsBusy)                      {                          isRunning = false;                          btnStart.Text = "Start";                      }                  };                  bwEpisodes.RunWorkerAsync();                    btnStart.Text = "Stop";                  isRunning = true;              }
Magic Number,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,btnStart_Click,The following statement contains a magic number: if (isRunning)              {                  bwMovies.CancelAsync();                  bwEpisodes.CancelAsync();                    isRunning = false;                  btnStart.Text = "Start";              }              else              {                  bwMovies = new BackgroundWorker();                  bwMovies.WorkerReportsProgress = true;                  bwMovies.WorkerSupportsCancellation = true;                  bwMovies.ProgressChanged += delegate(object bwSender' ProgressChangedEventArgs bwE)                  {                      lblMovies.Text = "Movies (" + bwE.UserState + " / " + movieCount + "):";                      prgMovies.Value = (int)bwE.UserState;                  };                  bwMovies.DoWork += delegate(object bwSender' DoWorkEventArgs bwEvent)                  {                      int j = 0;                      BackgroundWorker worker = (BackgroundWorker)bwSender;                      for (int i = 0; i < movieCount; i += 100)                      {                          var movies = _services.MAS.GetMoviesBasicByRange(null' i' i + 99);                          foreach (var movie in movies)                          {                              _services.MASStreamControl.GetMediaInfo(WebMediaType.Movie' movie.PID' movie.Id' 0);                              worker.ReportProgress(5' ++j);                              if (worker.CancellationPending)                              {                                  bwEvent.Cancel = true;                                  break;                              }                          }                            if (bwEvent.Cancel)                              break;                      }                  };                  bwMovies.RunWorkerCompleted += delegate(object bwSender' RunWorkerCompletedEventArgs bwEvent)                  {                      if (!bwEpisodes.IsBusy)                      {                          isRunning = false;                          btnStart.Text = "Start";                      }                  };                  bwMovies.RunWorkerAsync();                    bwEpisodes = new BackgroundWorker();                  bwEpisodes.WorkerReportsProgress = true;                  bwEpisodes.WorkerSupportsCancellation = true;                  bwEpisodes.ProgressChanged += delegate(object bwSender' ProgressChangedEventArgs bwE)                  {                      lblEpisodes.Text = "Episodes (" + bwE.UserState + " / " + episodeCount + "):";                      prgEpisodes.Value = (int)bwE.UserState;                  };                  bwEpisodes.DoWork += delegate(object bwSender' DoWorkEventArgs bwEvent)                  {                      int j = 0;                      BackgroundWorker worker = (BackgroundWorker)bwSender;                      for (int i = 0; i < episodeCount; i += 100)                      {                          var episodes = _services.MAS.GetTVEpisodesBasicByRange(null' i' i + 99);                          foreach (var episode in episodes)                          {                              _services.MASStreamControl.GetMediaInfo(WebMediaType.TVEpisode' episode.PID' episode.Id' 0);                              worker.ReportProgress(5' ++j);                              if (worker.CancellationPending)                              {                                  bwEvent.Cancel = true;                                  break;                              }                          }                            if (bwEvent.Cancel)                              break;                      }                  };                  bwEpisodes.RunWorkerCompleted += delegate(object bwSender' RunWorkerCompletedEventArgs bwEvent)                  {                      if (!bwMovies.IsBusy)                      {                          isRunning = false;                          btnStart.Text = "Start";                      }                  };                  bwEpisodes.RunWorkerAsync();                    btnStart.Text = "Stop";                  isRunning = true;              }
Magic Number,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,btnStart_Click,The following statement contains a magic number: if (isRunning)              {                  bwMovies.CancelAsync();                  bwEpisodes.CancelAsync();                    isRunning = false;                  btnStart.Text = "Start";              }              else              {                  bwMovies = new BackgroundWorker();                  bwMovies.WorkerReportsProgress = true;                  bwMovies.WorkerSupportsCancellation = true;                  bwMovies.ProgressChanged += delegate(object bwSender' ProgressChangedEventArgs bwE)                  {                      lblMovies.Text = "Movies (" + bwE.UserState + " / " + movieCount + "):";                      prgMovies.Value = (int)bwE.UserState;                  };                  bwMovies.DoWork += delegate(object bwSender' DoWorkEventArgs bwEvent)                  {                      int j = 0;                      BackgroundWorker worker = (BackgroundWorker)bwSender;                      for (int i = 0; i < movieCount; i += 100)                      {                          var movies = _services.MAS.GetMoviesBasicByRange(null' i' i + 99);                          foreach (var movie in movies)                          {                              _services.MASStreamControl.GetMediaInfo(WebMediaType.Movie' movie.PID' movie.Id' 0);                              worker.ReportProgress(5' ++j);                              if (worker.CancellationPending)                              {                                  bwEvent.Cancel = true;                                  break;                              }                          }                            if (bwEvent.Cancel)                              break;                      }                  };                  bwMovies.RunWorkerCompleted += delegate(object bwSender' RunWorkerCompletedEventArgs bwEvent)                  {                      if (!bwEpisodes.IsBusy)                      {                          isRunning = false;                          btnStart.Text = "Start";                      }                  };                  bwMovies.RunWorkerAsync();                    bwEpisodes = new BackgroundWorker();                  bwEpisodes.WorkerReportsProgress = true;                  bwEpisodes.WorkerSupportsCancellation = true;                  bwEpisodes.ProgressChanged += delegate(object bwSender' ProgressChangedEventArgs bwE)                  {                      lblEpisodes.Text = "Episodes (" + bwE.UserState + " / " + episodeCount + "):";                      prgEpisodes.Value = (int)bwE.UserState;                  };                  bwEpisodes.DoWork += delegate(object bwSender' DoWorkEventArgs bwEvent)                  {                      int j = 0;                      BackgroundWorker worker = (BackgroundWorker)bwSender;                      for (int i = 0; i < episodeCount; i += 100)                      {                          var episodes = _services.MAS.GetTVEpisodesBasicByRange(null' i' i + 99);                          foreach (var episode in episodes)                          {                              _services.MASStreamControl.GetMediaInfo(WebMediaType.TVEpisode' episode.PID' episode.Id' 0);                              worker.ReportProgress(5' ++j);                              if (worker.CancellationPending)                              {                                  bwEvent.Cancel = true;                                  break;                              }                          }                            if (bwEvent.Cancel)                              break;                      }                  };                  bwEpisodes.RunWorkerCompleted += delegate(object bwSender' RunWorkerCompletedEventArgs bwEvent)                  {                      if (!bwMovies.IsBusy)                      {                          isRunning = false;                          btnStart.Text = "Start";                      }                  };                  bwEpisodes.RunWorkerAsync();                    btnStart.Text = "Stop";                  isRunning = true;              }
Magic Number,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,InitializeComponent,The following statement contains a magic number: this.btnStart.Location = new System.Drawing.Point(16' 13);
Magic Number,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,InitializeComponent,The following statement contains a magic number: this.btnStart.Location = new System.Drawing.Point(16' 13);
Magic Number,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,InitializeComponent,The following statement contains a magic number: this.btnStart.Size = new System.Drawing.Size(256' 23);
Magic Number,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,InitializeComponent,The following statement contains a magic number: this.btnStart.Size = new System.Drawing.Size(256' 23);
Magic Number,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,InitializeComponent,The following statement contains a magic number: this.lblMovies.Location = new System.Drawing.Point(13' 55);
Magic Number,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,InitializeComponent,The following statement contains a magic number: this.lblMovies.Location = new System.Drawing.Point(13' 55);
Magic Number,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,InitializeComponent,The following statement contains a magic number: this.lblMovies.Size = new System.Drawing.Size(90' 15);
Magic Number,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,InitializeComponent,The following statement contains a magic number: this.lblMovies.Size = new System.Drawing.Size(90' 15);
Magic Number,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,InitializeComponent,The following statement contains a magic number: this.lblEpisodes.Location = new System.Drawing.Point(13' 124);
Magic Number,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,InitializeComponent,The following statement contains a magic number: this.lblEpisodes.Location = new System.Drawing.Point(13' 124);
Magic Number,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,InitializeComponent,The following statement contains a magic number: this.lblEpisodes.Size = new System.Drawing.Size(102' 15);
Magic Number,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,InitializeComponent,The following statement contains a magic number: this.lblEpisodes.Size = new System.Drawing.Size(102' 15);
Magic Number,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,InitializeComponent,The following statement contains a magic number: this.lblEpisodes.TabIndex = 2;
Magic Number,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,InitializeComponent,The following statement contains a magic number: this.prgMovies.Location = new System.Drawing.Point(16' 82);
Magic Number,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,InitializeComponent,The following statement contains a magic number: this.prgMovies.Location = new System.Drawing.Point(16' 82);
Magic Number,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,InitializeComponent,The following statement contains a magic number: this.prgMovies.Size = new System.Drawing.Size(256' 23);
Magic Number,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,InitializeComponent,The following statement contains a magic number: this.prgMovies.Size = new System.Drawing.Size(256' 23);
Magic Number,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,InitializeComponent,The following statement contains a magic number: this.prgMovies.TabIndex = 3;
Magic Number,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,InitializeComponent,The following statement contains a magic number: this.prgEpisodes.Location = new System.Drawing.Point(16' 153);
Magic Number,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,InitializeComponent,The following statement contains a magic number: this.prgEpisodes.Location = new System.Drawing.Point(16' 153);
Magic Number,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,InitializeComponent,The following statement contains a magic number: this.prgEpisodes.Size = new System.Drawing.Size(256' 23);
Magic Number,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,InitializeComponent,The following statement contains a magic number: this.prgEpisodes.Size = new System.Drawing.Size(256' 23);
Magic Number,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,InitializeComponent,The following statement contains a magic number: this.prgEpisodes.TabIndex = 4;
Magic Number,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(284' 189);
Magic Number,MPExtended.Applications.Development.FillMediaInfoCache,frmFillCache,C:\repos\MPExtended_MPExtended\Applications\MPExtended.Applications.Development.FillMediaInfoCache\frmFillCache.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(284' 189);
