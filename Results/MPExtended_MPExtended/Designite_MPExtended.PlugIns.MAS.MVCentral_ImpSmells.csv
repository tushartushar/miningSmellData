Implementation smell,Namespace,Class,File,Method,Description
Long Statement,MPExtended.PlugIns.MAS.MVCentral,MVCentral,C:\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MVCentral\Search.cs,LoadAllTracks,The length of the statement  "            string sql = "SELECT t.id AS track_id' t.date_added' t.track' t.rating' t.artfullpath' a.id AS album_id' a.album' p.id AS artist_id' p.artist' " + " is 146.
Long Statement,MPExtended.PlugIns.MAS.MVCentral,MVCentral,C:\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MVCentral\Search.cs,LoadAllAlbums,The length of the statement  "                         "HAVING COUNT(p.id) > 0 AND %where "; // We abuse SQL a bit here due to the inavailability of a album_info__artist_info table " is 125.
Magic Number,MPExtended.PlugIns.MAS.MVCentral,MVCentral,C:\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MVCentral\Search.cs,Search,The following statement contains a magic number: IEnumerable<WebSearchResult> artistResults = ReadList<WebSearchResult>(artistSql' delegate(SQLiteDataReader reader)              {                  string name = reader.ReadString(1);                  return new WebSearchResult()                  {                      Type = WebMediaType.MusicArtist'                      Id = reader.ReadString(0)'                      Title = name'                      Score = (int)Math.Round(40 + (decimal)text.Length / name.Length * 40)                  };              }' parameter);
Magic Number,MPExtended.PlugIns.MAS.MVCentral,MVCentral,C:\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MVCentral\Search.cs,Search,The following statement contains a magic number: IEnumerable<WebSearchResult> artistResults = ReadList<WebSearchResult>(artistSql' delegate(SQLiteDataReader reader)              {                  string name = reader.ReadString(1);                  return new WebSearchResult()                  {                      Type = WebMediaType.MusicArtist'                      Id = reader.ReadString(0)'                      Title = name'                      Score = (int)Math.Round(40 + (decimal)text.Length / name.Length * 40)                  };              }' parameter);
Magic Number,MPExtended.PlugIns.MAS.MVCentral,MVCentral,C:\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MVCentral\Search.cs,Search,The following statement contains a magic number: IEnumerable<WebSearchResult> albumResults = ReadList<WebSearchResult>(albumSql' delegate(SQLiteDataReader reader)              {                  string name = reader.ReadString(1);                  string artist = reader.ReadString(3);                  int score = name.Contains(text) ?                      (int)Math.Round(40 + (decimal)text.Length / name.Length * 40) :                      (int)Math.Round(20 + (decimal)text.Length / artist.Length * 40);                  return new WebSearchResult()                  {                      Type = WebMediaType.MusicAlbum'                      Id = reader.ReadString(0)'                      Title = name'                      Score = score'                      Details = new WebDictionary<string>()                      {                          { "ArtistId"' reader.ReadString(2) }'                          { "Artist"' artist }'                      }                  };              }' parameter);
Magic Number,MPExtended.PlugIns.MAS.MVCentral,MVCentral,C:\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MVCentral\Search.cs,Search,The following statement contains a magic number: IEnumerable<WebSearchResult> albumResults = ReadList<WebSearchResult>(albumSql' delegate(SQLiteDataReader reader)              {                  string name = reader.ReadString(1);                  string artist = reader.ReadString(3);                  int score = name.Contains(text) ?                      (int)Math.Round(40 + (decimal)text.Length / name.Length * 40) :                      (int)Math.Round(20 + (decimal)text.Length / artist.Length * 40);                  return new WebSearchResult()                  {                      Type = WebMediaType.MusicAlbum'                      Id = reader.ReadString(0)'                      Title = name'                      Score = score'                      Details = new WebDictionary<string>()                      {                          { "ArtistId"' reader.ReadString(2) }'                          { "Artist"' artist }'                      }                  };              }' parameter);
Magic Number,MPExtended.PlugIns.MAS.MVCentral,MVCentral,C:\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MVCentral\Search.cs,Search,The following statement contains a magic number: IEnumerable<WebSearchResult> albumResults = ReadList<WebSearchResult>(albumSql' delegate(SQLiteDataReader reader)              {                  string name = reader.ReadString(1);                  string artist = reader.ReadString(3);                  int score = name.Contains(text) ?                      (int)Math.Round(40 + (decimal)text.Length / name.Length * 40) :                      (int)Math.Round(20 + (decimal)text.Length / artist.Length * 40);                  return new WebSearchResult()                  {                      Type = WebMediaType.MusicAlbum'                      Id = reader.ReadString(0)'                      Title = name'                      Score = score'                      Details = new WebDictionary<string>()                      {                          { "ArtistId"' reader.ReadString(2) }'                          { "Artist"' artist }'                      }                  };              }' parameter);
Magic Number,MPExtended.PlugIns.MAS.MVCentral,MVCentral,C:\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MVCentral\Search.cs,Search,The following statement contains a magic number: IEnumerable<WebSearchResult> albumResults = ReadList<WebSearchResult>(albumSql' delegate(SQLiteDataReader reader)              {                  string name = reader.ReadString(1);                  string artist = reader.ReadString(3);                  int score = name.Contains(text) ?                      (int)Math.Round(40 + (decimal)text.Length / name.Length * 40) :                      (int)Math.Round(20 + (decimal)text.Length / artist.Length * 40);                  return new WebSearchResult()                  {                      Type = WebMediaType.MusicAlbum'                      Id = reader.ReadString(0)'                      Title = name'                      Score = score'                      Details = new WebDictionary<string>()                      {                          { "ArtistId"' reader.ReadString(2) }'                          { "Artist"' artist }'                      }                  };              }' parameter);
Magic Number,MPExtended.PlugIns.MAS.MVCentral,MVCentral,C:\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MVCentral\Search.cs,Search,The following statement contains a magic number: IEnumerable<WebSearchResult> albumResults = ReadList<WebSearchResult>(albumSql' delegate(SQLiteDataReader reader)              {                  string name = reader.ReadString(1);                  string artist = reader.ReadString(3);                  int score = name.Contains(text) ?                      (int)Math.Round(40 + (decimal)text.Length / name.Length * 40) :                      (int)Math.Round(20 + (decimal)text.Length / artist.Length * 40);                  return new WebSearchResult()                  {                      Type = WebMediaType.MusicAlbum'                      Id = reader.ReadString(0)'                      Title = name'                      Score = score'                      Details = new WebDictionary<string>()                      {                          { "ArtistId"' reader.ReadString(2) }'                          { "Artist"' artist }'                      }                  };              }' parameter);
Magic Number,MPExtended.PlugIns.MAS.MVCentral,MVCentral,C:\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MVCentral\Search.cs,Search,The following statement contains a magic number: IEnumerable<WebSearchResult> albumResults = ReadList<WebSearchResult>(albumSql' delegate(SQLiteDataReader reader)              {                  string name = reader.ReadString(1);                  string artist = reader.ReadString(3);                  int score = name.Contains(text) ?                      (int)Math.Round(40 + (decimal)text.Length / name.Length * 40) :                      (int)Math.Round(20 + (decimal)text.Length / artist.Length * 40);                  return new WebSearchResult()                  {                      Type = WebMediaType.MusicAlbum'                      Id = reader.ReadString(0)'                      Title = name'                      Score = score'                      Details = new WebDictionary<string>()                      {                          { "ArtistId"' reader.ReadString(2) }'                          { "Artist"' artist }'                      }                  };              }' parameter);
Magic Number,MPExtended.PlugIns.MAS.MVCentral,MVCentral,C:\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MVCentral\Search.cs,Search,The following statement contains a magic number: IEnumerable<WebSearchResult> trackResults = ReadList<WebSearchResult>(trackSql' delegate(SQLiteDataReader reader)              {                  string name = reader.ReadString(1);                  string album = reader.ReadString(4);                  string artist = reader.ReadString(6);                  int score = 0;                  if (name.Contains(text))                      score = (int)Math.Round(40 + (decimal)text.Length / name.Length * 40);                  if (album.Contains(text))                      score = (int)Math.Round(20 + (decimal)text.Length / album.Length * 40);                  if (artist.Contains(text))                      score = (int)Math.Round((decimal)text.Length / artist.Length * 40);                  return new WebSearchResult()                  {                      Type = WebMediaType.MusicTrack'                      Id = reader.ReadString(0)'                      Title = name'                      Score = score'                      Details = new WebDictionary<string>()                      {                          { "Duration"' reader.ReadString(2) }'                          { "AlbumId"' reader.ReadString(3) }'                          { "Album"' album }'                          { "ArtistId"' reader.ReadString(5) }'                          { "Artist"' artist }'                          { "Year"' "" }                      }                  };              }' parameter);
Magic Number,MPExtended.PlugIns.MAS.MVCentral,MVCentral,C:\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MVCentral\Search.cs,Search,The following statement contains a magic number: IEnumerable<WebSearchResult> trackResults = ReadList<WebSearchResult>(trackSql' delegate(SQLiteDataReader reader)              {                  string name = reader.ReadString(1);                  string album = reader.ReadString(4);                  string artist = reader.ReadString(6);                  int score = 0;                  if (name.Contains(text))                      score = (int)Math.Round(40 + (decimal)text.Length / name.Length * 40);                  if (album.Contains(text))                      score = (int)Math.Round(20 + (decimal)text.Length / album.Length * 40);                  if (artist.Contains(text))                      score = (int)Math.Round((decimal)text.Length / artist.Length * 40);                  return new WebSearchResult()                  {                      Type = WebMediaType.MusicTrack'                      Id = reader.ReadString(0)'                      Title = name'                      Score = score'                      Details = new WebDictionary<string>()                      {                          { "Duration"' reader.ReadString(2) }'                          { "AlbumId"' reader.ReadString(3) }'                          { "Album"' album }'                          { "ArtistId"' reader.ReadString(5) }'                          { "Artist"' artist }'                          { "Year"' "" }                      }                  };              }' parameter);
Magic Number,MPExtended.PlugIns.MAS.MVCentral,MVCentral,C:\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MVCentral\Search.cs,Search,The following statement contains a magic number: IEnumerable<WebSearchResult> trackResults = ReadList<WebSearchResult>(trackSql' delegate(SQLiteDataReader reader)              {                  string name = reader.ReadString(1);                  string album = reader.ReadString(4);                  string artist = reader.ReadString(6);                  int score = 0;                  if (name.Contains(text))                      score = (int)Math.Round(40 + (decimal)text.Length / name.Length * 40);                  if (album.Contains(text))                      score = (int)Math.Round(20 + (decimal)text.Length / album.Length * 40);                  if (artist.Contains(text))                      score = (int)Math.Round((decimal)text.Length / artist.Length * 40);                  return new WebSearchResult()                  {                      Type = WebMediaType.MusicTrack'                      Id = reader.ReadString(0)'                      Title = name'                      Score = score'                      Details = new WebDictionary<string>()                      {                          { "Duration"' reader.ReadString(2) }'                          { "AlbumId"' reader.ReadString(3) }'                          { "Album"' album }'                          { "ArtistId"' reader.ReadString(5) }'                          { "Artist"' artist }'                          { "Year"' "" }                      }                  };              }' parameter);
Magic Number,MPExtended.PlugIns.MAS.MVCentral,MVCentral,C:\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MVCentral\Search.cs,Search,The following statement contains a magic number: IEnumerable<WebSearchResult> trackResults = ReadList<WebSearchResult>(trackSql' delegate(SQLiteDataReader reader)              {                  string name = reader.ReadString(1);                  string album = reader.ReadString(4);                  string artist = reader.ReadString(6);                  int score = 0;                  if (name.Contains(text))                      score = (int)Math.Round(40 + (decimal)text.Length / name.Length * 40);                  if (album.Contains(text))                      score = (int)Math.Round(20 + (decimal)text.Length / album.Length * 40);                  if (artist.Contains(text))                      score = (int)Math.Round((decimal)text.Length / artist.Length * 40);                  return new WebSearchResult()                  {                      Type = WebMediaType.MusicTrack'                      Id = reader.ReadString(0)'                      Title = name'                      Score = score'                      Details = new WebDictionary<string>()                      {                          { "Duration"' reader.ReadString(2) }'                          { "AlbumId"' reader.ReadString(3) }'                          { "Album"' album }'                          { "ArtistId"' reader.ReadString(5) }'                          { "Artist"' artist }'                          { "Year"' "" }                      }                  };              }' parameter);
Magic Number,MPExtended.PlugIns.MAS.MVCentral,MVCentral,C:\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MVCentral\Search.cs,Search,The following statement contains a magic number: IEnumerable<WebSearchResult> trackResults = ReadList<WebSearchResult>(trackSql' delegate(SQLiteDataReader reader)              {                  string name = reader.ReadString(1);                  string album = reader.ReadString(4);                  string artist = reader.ReadString(6);                  int score = 0;                  if (name.Contains(text))                      score = (int)Math.Round(40 + (decimal)text.Length / name.Length * 40);                  if (album.Contains(text))                      score = (int)Math.Round(20 + (decimal)text.Length / album.Length * 40);                  if (artist.Contains(text))                      score = (int)Math.Round((decimal)text.Length / artist.Length * 40);                  return new WebSearchResult()                  {                      Type = WebMediaType.MusicTrack'                      Id = reader.ReadString(0)'                      Title = name'                      Score = score'                      Details = new WebDictionary<string>()                      {                          { "Duration"' reader.ReadString(2) }'                          { "AlbumId"' reader.ReadString(3) }'                          { "Album"' album }'                          { "ArtistId"' reader.ReadString(5) }'                          { "Artist"' artist }'                          { "Year"' "" }                      }                  };              }' parameter);
Magic Number,MPExtended.PlugIns.MAS.MVCentral,MVCentral,C:\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MVCentral\Search.cs,Search,The following statement contains a magic number: IEnumerable<WebSearchResult> trackResults = ReadList<WebSearchResult>(trackSql' delegate(SQLiteDataReader reader)              {                  string name = reader.ReadString(1);                  string album = reader.ReadString(4);                  string artist = reader.ReadString(6);                  int score = 0;                  if (name.Contains(text))                      score = (int)Math.Round(40 + (decimal)text.Length / name.Length * 40);                  if (album.Contains(text))                      score = (int)Math.Round(20 + (decimal)text.Length / album.Length * 40);                  if (artist.Contains(text))                      score = (int)Math.Round((decimal)text.Length / artist.Length * 40);                  return new WebSearchResult()                  {                      Type = WebMediaType.MusicTrack'                      Id = reader.ReadString(0)'                      Title = name'                      Score = score'                      Details = new WebDictionary<string>()                      {                          { "Duration"' reader.ReadString(2) }'                          { "AlbumId"' reader.ReadString(3) }'                          { "Album"' album }'                          { "ArtistId"' reader.ReadString(5) }'                          { "Artist"' artist }'                          { "Year"' "" }                      }                  };              }' parameter);
Magic Number,MPExtended.PlugIns.MAS.MVCentral,MVCentral,C:\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MVCentral\Search.cs,Search,The following statement contains a magic number: IEnumerable<WebSearchResult> trackResults = ReadList<WebSearchResult>(trackSql' delegate(SQLiteDataReader reader)              {                  string name = reader.ReadString(1);                  string album = reader.ReadString(4);                  string artist = reader.ReadString(6);                  int score = 0;                  if (name.Contains(text))                      score = (int)Math.Round(40 + (decimal)text.Length / name.Length * 40);                  if (album.Contains(text))                      score = (int)Math.Round(20 + (decimal)text.Length / album.Length * 40);                  if (artist.Contains(text))                      score = (int)Math.Round((decimal)text.Length / artist.Length * 40);                  return new WebSearchResult()                  {                      Type = WebMediaType.MusicTrack'                      Id = reader.ReadString(0)'                      Title = name'                      Score = score'                      Details = new WebDictionary<string>()                      {                          { "Duration"' reader.ReadString(2) }'                          { "AlbumId"' reader.ReadString(3) }'                          { "Album"' album }'                          { "ArtistId"' reader.ReadString(5) }'                          { "Artist"' artist }'                          { "Year"' "" }                      }                  };              }' parameter);
Magic Number,MPExtended.PlugIns.MAS.MVCentral,MVCentral,C:\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MVCentral\Search.cs,Search,The following statement contains a magic number: IEnumerable<WebSearchResult> trackResults = ReadList<WebSearchResult>(trackSql' delegate(SQLiteDataReader reader)              {                  string name = reader.ReadString(1);                  string album = reader.ReadString(4);                  string artist = reader.ReadString(6);                  int score = 0;                  if (name.Contains(text))                      score = (int)Math.Round(40 + (decimal)text.Length / name.Length * 40);                  if (album.Contains(text))                      score = (int)Math.Round(20 + (decimal)text.Length / album.Length * 40);                  if (artist.Contains(text))                      score = (int)Math.Round((decimal)text.Length / artist.Length * 40);                  return new WebSearchResult()                  {                      Type = WebMediaType.MusicTrack'                      Id = reader.ReadString(0)'                      Title = name'                      Score = score'                      Details = new WebDictionary<string>()                      {                          { "Duration"' reader.ReadString(2) }'                          { "AlbumId"' reader.ReadString(3) }'                          { "Album"' album }'                          { "ArtistId"' reader.ReadString(5) }'                          { "Artist"' artist }'                          { "Year"' "" }                      }                  };              }' parameter);
Magic Number,MPExtended.PlugIns.MAS.MVCentral,MVCentral,C:\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MVCentral\Search.cs,Search,The following statement contains a magic number: IEnumerable<WebSearchResult> trackResults = ReadList<WebSearchResult>(trackSql' delegate(SQLiteDataReader reader)              {                  string name = reader.ReadString(1);                  string album = reader.ReadString(4);                  string artist = reader.ReadString(6);                  int score = 0;                  if (name.Contains(text))                      score = (int)Math.Round(40 + (decimal)text.Length / name.Length * 40);                  if (album.Contains(text))                      score = (int)Math.Round(20 + (decimal)text.Length / album.Length * 40);                  if (artist.Contains(text))                      score = (int)Math.Round((decimal)text.Length / artist.Length * 40);                  return new WebSearchResult()                  {                      Type = WebMediaType.MusicTrack'                      Id = reader.ReadString(0)'                      Title = name'                      Score = score'                      Details = new WebDictionary<string>()                      {                          { "Duration"' reader.ReadString(2) }'                          { "AlbumId"' reader.ReadString(3) }'                          { "Album"' album }'                          { "ArtistId"' reader.ReadString(5) }'                          { "Artist"' artist }'                          { "Year"' "" }                      }                  };              }' parameter);
Magic Number,MPExtended.PlugIns.MAS.MVCentral,MVCentral,C:\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MVCentral\Search.cs,Search,The following statement contains a magic number: IEnumerable<WebSearchResult> trackResults = ReadList<WebSearchResult>(trackSql' delegate(SQLiteDataReader reader)              {                  string name = reader.ReadString(1);                  string album = reader.ReadString(4);                  string artist = reader.ReadString(6);                  int score = 0;                  if (name.Contains(text))                      score = (int)Math.Round(40 + (decimal)text.Length / name.Length * 40);                  if (album.Contains(text))                      score = (int)Math.Round(20 + (decimal)text.Length / album.Length * 40);                  if (artist.Contains(text))                      score = (int)Math.Round((decimal)text.Length / artist.Length * 40);                  return new WebSearchResult()                  {                      Type = WebMediaType.MusicTrack'                      Id = reader.ReadString(0)'                      Title = name'                      Score = score'                      Details = new WebDictionary<string>()                      {                          { "Duration"' reader.ReadString(2) }'                          { "AlbumId"' reader.ReadString(3) }'                          { "Album"' album }'                          { "ArtistId"' reader.ReadString(5) }'                          { "Artist"' artist }'                          { "Year"' "" }                      }                  };              }' parameter);
Magic Number,MPExtended.PlugIns.MAS.MVCentral,MVCentral,C:\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MVCentral\Search.cs,PlayTimeReader,The following statement contains a magic number: return reader.ReadInt32(idx) / 1000;
