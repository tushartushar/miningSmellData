Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MPExtended.Libraries.Service.Util,TranscoderProcess,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\TranscoderProcess.cs,StartAsUser,Cyclomatic complexity of the method is 12
Complex Method,MPExtended.Libraries.Service.Shared.Filters,Filter,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Shared\Filters\Filter.cs,GetIntMatchDelegate,Cyclomatic complexity of the method is 8
Complex Method,MPExtended.Libraries.Service.Shared.Filters,Filter,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Shared\Filters\Filter.cs,GetLongMatchDelegate,Cyclomatic complexity of the method is 8
Complex Method,MPExtended.Libraries.Service.Shared.Filters,FilterParser,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Shared\Filters\FilterParser.cs,Parse,Cyclomatic complexity of the method is 8
Complex Method,MPExtended.Libraries.Service.Shared.Filters,Tokenizer,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Shared\Filters\Tokenizer.cs,Tokenize,Cyclomatic complexity of the method is 19
Long Parameter List,MPExtended.Libraries.Service.Util,FileUtil,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\FileUtil.cs,TryOpen,The method has 5 parameters. Parameters: path' mode' access' share' maxDelay
Long Parameter List,MPExtended.Libraries.Service.Util,TranscoderProcess,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\TranscoderProcess.cs,LogonUser,The method has 6 parameters. Parameters: username' domain' password' logonType' logonProvider' userToken
Long Parameter List,MPExtended.Libraries.Service.Util,TranscoderProcess,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\TranscoderProcess.cs,DuplicateTokenEx,The method has 6 parameters. Parameters: hExistingToken' dwDesiredAccess' lpTokenAttributes' ImpersonationLevel' TokenType' phNewToken
Long Parameter List,MPExtended.Libraries.Service.Util,TranscoderProcess,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\TranscoderProcess.cs,CreateProcessAsUserW,The method has 11 parameters. Parameters: token' lpApplicationName' lpCommandLine' lpProcessAttributes' lpThreadAttributes' bInheritHandles' dwCreationFlags' lpEnvironment' lpCurrentDirectory' lpStartupInfo' lpProcessInformation
Long Parameter List,MPExtended.Libraries.Service.Util,TranscoderProcess,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\TranscoderProcess.cs,CreateStandardPipe,The method has 5 parameters. Parameters: readHandle' writeHandle' standardHandle' isInput' redirect
Long Parameter List,MPExtended.Libraries.Service.Util,MIME,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\MIME.cs,FindMimeFromData,The method has 8 parameters. Parameters: pBC' pwzUrl' pBuffer' cbSize' pwzMimeProposed' dwMimeFlags' ppwzMimeOut' dwReserved
Long Parameter List,MPExtended.Libraries.Service.Network,Impersonator,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Network\Impersonator.cs,LogonUserA,The method has 6 parameters. Parameters: lpszUserName' lpszDomain' lpszPassword' dwLogonType' dwLogonProvider' phToken
Long Statement,MPExtended.Libraries.Service.Composition,PluginLoader,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Composition\PluginLoader.cs,AddFromTree,The length of the statement  "                AddFromSourceDirectoryList(Directory.EnumerateDirectories(Path.Combine(Installation.GetSourceRootDirectory()' sourceDirectory))' null); " is 135.
Long Statement,MPExtended.Libraries.Service.Composition,PluginLoader,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Composition\PluginLoader.cs,AddFromTreeMatch,The length of the statement  "                AddFromSourceDirectoryList(Directory.EnumerateDirectories(Installation.GetSourceRootDirectory()' sourceDirectoryGlob)' sourceSearchPattern); " is 140.
Long Statement,MPExtended.Libraries.Service.Compression,CompressionMessageEncoder,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Compression\CompressionMessageEncoderFactory.cs,WriteMessage,The length of the statement  "                    Log.Trace("CompressionMessageEncoder::WriteMessage {0} compressed {1} bytes to {2}"' context.Type' buffer.Array.Length' compressedBuffer.Array.Length); " is 151.
Long Statement,MPExtended.Libraries.Service.Config,ConfigurationSerializer<TModel;TSerializer>,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Config\ConfigurationSerializer.cs,CreateInstance,The length of the statement  "                    // This extra check is needed because there is a (theoretical?) race condition' where two threads evaluate the if(_instance == null) at " is 135.
Long Statement,MPExtended.Libraries.Service.Config,ConfigurationSerializer<TModel;TSerializer>,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Config\ConfigurationSerializer.cs,CreateInstance,The length of the statement  "                    // the same time. The second thread which gets the lock doesn't have to load the settings again' as it's already been done by the first " is 135.
Long Statement,MPExtended.Libraries.Service.Config,ConfigurationSerializer<TModel;TSerializer>,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Config\ConfigurationSerializer.cs,CreateNonExistingFile,The length of the statement  "            FilePermissions.SetAclForUserOnFile(path' FilePermissions.EveryoneIdentity' FileSystemRights.FullControl' AccessControlType.Allow); " is 131.
Long Statement,MPExtended.Libraries.Service.Config,ConfigurationSerializer<TModel;TSerializer>,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Config\ConfigurationSerializer.cs,HandleMalformedFile,The length of the statement  "                // Whatever... you probably fucked up badly with development versions to let this happen' so sort out the mess yourself. " is 120.
Long Statement,MPExtended.Libraries.Service.Config,ConfigurationSerializer<TModel;TSerializer>,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Config\ConfigurationSerializer.cs,HandleMalformedFile,The length of the statement  "                Log.Error(String.Format("Configuration: Giving up on malformed configuration file {0}; sort out the mess yourself"' Filename)' ex); " is 131.
Long Statement,MPExtended.Libraries.Service.Config,ConfigurationSerializer<TModel;TSerializer>,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Config\ConfigurationSerializer.cs,CleanupMalformedFile,The length of the statement  "            Log.Warn("Configuration: Failed to deserialize {0}' replacing with default file (error: {1})"' Filename' problem.Message); " is 122.
Long Statement,MPExtended.Libraries.Service.Config,ConfigurationSerializer<TModel;TSerializer;TUpgrader>,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Config\ConfigurationSerializer.cs,CleanupMalformedFile,The length of the statement  "            upgrader.OldPath = upgradeFilename == null ? configPath : Path.Combine(Installation.Properties.ConfigurationDirectory' upgradeFilename); " is 136.
Long Statement,MPExtended.Libraries.Service.Config,ProfilesConfigurationSerializer,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Config\ProfilesConfigurationSerializer.cs,ReadFromDisk,The length of the statement  "                    Log.Info("Replacing uncustomized current StreamingProfiles.xml version {0} with version {1}"' currentInstance.ProfilesVersion' newInstance.ProfilesVersion); " is 156.
Long Statement,MPExtended.Libraries.Service.Config,TransformationCallbacks,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Config\TransformationCallbacks.cs,FolderSubstitution,The length of the statement  "                    Log.Info("Replacing unknown Mediaportal path substitution %mp-{0}-{1}% with empty string"' match.Groups[1].Value' match.Groups[2].Value); " is 137.
Long Statement,MPExtended.Libraries.Service.Config,InstallationProperties,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Config\InstallationProperties.cs,DetectForProduct,The length of the statement  "            prop.CacheDirectory = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData)' "MPExtended"' "Cache"); " is 134.
Long Statement,MPExtended.Libraries.Service.Config,InstallationProperties,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Config\InstallationProperties.cs,DetectForProduct,The length of the statement  "            prop.LogDirectory = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData)' "MPExtended"' "Logs"); " is 131.
Long Statement,MPExtended.Libraries.Service.Config,InstallationProperties,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Config\InstallationProperties.cs,CreateForSource,The length of the statement  "            // source tree is (which happens with WebMP for example)' so we can't use the Location of the current executing assembly.  " is 121.
Long Statement,MPExtended.Libraries.Service.Config,InstallationProperties,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Config\InstallationProperties.cs,CreateForSource,The length of the statement  "            // The CodeBase points to it's original location on compilation' but this doesn't work if you send files to other people  " is 120.
Long Statement,MPExtended.Libraries.Service.Config,InstallationProperties,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Config\InstallationProperties.cs,CreateForInstallation,The length of the statement  "            prop.ConfigurationDirectory = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData)' "MPExtended"); " is 133.
Long Statement,MPExtended.Libraries.Service.Config,InstallationProperties,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Config\InstallationProperties.cs,GetInstallDirectory,The length of the statement  "                    location = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.ProgramFilesX86)' "MPExtended"' "WebMediaPortal"); " is 126.
Long Statement,MPExtended.Libraries.Service.Config,InstallationProperties,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Config\InstallationProperties.cs,GetInstallDirectory,The length of the statement  "                    DirectoryInfo currentDir = new DirectoryInfo(Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().Location)); " is 128.
Long Statement,MPExtended.Libraries.Service.Config,InstallationProperties,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Config\InstallationProperties.cs,GetInstallDirectory,The length of the statement  "                    // If we're executing from the WebMP context' we're inside the WebMediaPortal/www/bin directory' but if we're executing from the " is 128.
Long Statement,MPExtended.Libraries.Service.Config.Upgrade,MediaAccessUpgrader,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Config\Upgrade\MediaAccessUpgrader.cs,DoUpgrade,The length of the statement  "                    string value = type == ConfigType.File || type == ConfigType.Folder ? TransformationCallbacks.FolderSubstitution(x.Value) : x.Value; " is 132.
Long Statement,MPExtended.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Extensions\NaturalSorting.cs,GetSortFunction,The length of the statement  "                    string sortableValue = _changeRoman.Replace(strippedValue' m => String.Format("{0}{1}{2}"' m.Groups[1]' RomanToDecimal(m.Groups[2].Value)' m.Groups[3])); " is 153.
Long Statement,MPExtended.Libraries.Service.Extensions,QueryableExtensionMethods,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Extensions\QueryableExtensionMethods.cs,TakeRange,The length of the statement  "            // Don't compensate for a too high end value (end - start + 1 > source.Count())' as that'll execute an additional query. " is 120.
Long Statement,MPExtended.Libraries.Service.Extensions,StringExtensionMethods,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Extensions\StringExtensionMethods.cs,Contains,The length of the statement  "            return Contains(str' value' caseSensitive ? StringComparison.CurrentCulture : StringComparison.CurrentCultureIgnoreCase); " is 121.
Long Statement,MPExtended.Libraries.Service.Util,FilePermissions,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\FilePermissions.cs,SetAclForUserOnDirectory,The length of the statement  "            acl.AddAccessRule(new FileSystemAccessRule(identity' rights' InheritanceFlags.ContainerInherit | InheritanceFlags.ObjectInherit' PropagationFlags.None' type)); " is 159.
Long Statement,MPExtended.Libraries.Service.Util,TranscoderProcess,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\TranscoderProcess.cs,StartAsUser,The length of the statement  "                    throw new Win32Exception(Marshal.GetLastWin32Error()' String.Format("TranscoderProcess: LogonUser {0}\\{1} failed"' domain' username)); " is 135.
Long Statement,MPExtended.Libraries.Service.Util,TranscoderProcess,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\TranscoderProcess.cs,StartAsUser,The length of the statement  "                if (!DuplicateTokenEx(token' MAXIMUM_ALLOWED | TOKEN_QUERY | TOKEN_DUPLICATE' IntPtr.Zero' SECURITY_IMPERSONATION' TOKEN_PRIMARY' out userToken)) " is 145.
Long Statement,MPExtended.Libraries.Service.Util,TranscoderProcess,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\TranscoderProcess.cs,StartAsUser,The length of the statement  "                CreateStandardPipe(out stdoutReadHandle' out stdoutWriteHandle' STD_OUTPUT_HANDLE' false' StartInfo.RedirectStandardOutput); " is 124.
Long Statement,MPExtended.Libraries.Service.Util,TranscoderProcess,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\TranscoderProcess.cs,StartAsUser,The length of the statement  "                CreateStandardPipe(out stderrReadHandle' out stderrWriteHandle' STD_ERROR_HANDLE' false' StartInfo.RedirectStandardError); " is 122.
Long Statement,MPExtended.Libraries.Service.Util,TranscoderProcess,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\TranscoderProcess.cs,StartAsUser,The length of the statement  "                CreateProcessFlags createFlags = CreateProcessFlags.CREATE_NEW_CONSOLE | CreateProcessFlags.CREATE_NEW_PROCESS_GROUP | CreateProcessFlags.CREATE_DEFAULT_ERROR_MODE; " is 164.
Long Statement,MPExtended.Libraries.Service.Util,TranscoderProcess,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\TranscoderProcess.cs,StartAsUser,The length of the statement  "                if (!CreateProcessAsUserW(userToken' null' GetCommandLine()' IntPtr.Zero' IntPtr.Zero' true' createFlags' IntPtr.Zero' null' ref startupInfo' out processInformation)) " is 166.
Long Statement,MPExtended.Libraries.Service.Util,TranscoderProcess,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\TranscoderProcess.cs,StartAsUser,The length of the statement  "                    StreamWriter standardInput = new StreamWriter(new FileStream(new SafeFileHandle(stdinWriteHandle' true)' FileAccess.Write' 4096)' Console.Out.Encoding); " is 152.
Long Statement,MPExtended.Libraries.Service.Util,TranscoderProcess,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\TranscoderProcess.cs,StartAsUser,The length of the statement  "                    typeof(Process).InvokeMember("standardInput"' BindingFlags.SetField | BindingFlags.NonPublic | BindingFlags.Instance' null' this' new object[] { standardInput }); " is 162.
Long Statement,MPExtended.Libraries.Service.Util,TranscoderProcess,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\TranscoderProcess.cs,StartAsUser,The length of the statement  "                    StreamReader standardOutput = new StreamReader(new FileStream(new SafeFileHandle(stdoutReadHandle' true)' FileAccess.Read' 4096)' StartInfo.StandardOutputEncoding ?? Console.Out.Encoding); " is 188.
Long Statement,MPExtended.Libraries.Service.Util,TranscoderProcess,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\TranscoderProcess.cs,StartAsUser,The length of the statement  "                    typeof(Process).InvokeMember("standardOutput"' BindingFlags.SetField | BindingFlags.NonPublic | BindingFlags.Instance' null' this' new object[] { standardOutput }); " is 164.
Long Statement,MPExtended.Libraries.Service.Util,TranscoderProcess,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\TranscoderProcess.cs,StartAsUser,The length of the statement  "                    StreamReader standardError = new StreamReader(new FileStream(new SafeFileHandle(stderrReadHandle' true)' FileAccess.Read' 4096)' StartInfo.StandardErrorEncoding ?? Console.Out.Encoding); " is 186.
Long Statement,MPExtended.Libraries.Service.Util,TranscoderProcess,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\TranscoderProcess.cs,StartAsUser,The length of the statement  "                    typeof(Process).InvokeMember("standardError"' BindingFlags.SetField | BindingFlags.NonPublic | BindingFlags.Instance' null' this' new object[] { standardError }); " is 162.
Long Statement,MPExtended.Libraries.Service.Util,TranscoderProcess,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\TranscoderProcess.cs,StartAsUser,The length of the statement  "                object safeProcessHandle = processManager.InvokeMember("OpenProcess"' BindingFlags.InvokeMethod | BindingFlags.Public | BindingFlags.Static' null' this' new object[] { processInformation.dwProcessId' 0x100000' false }); " is 219.
Long Statement,MPExtended.Libraries.Service.Util,TranscoderProcess,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\TranscoderProcess.cs,StartAsUser,The length of the statement  "                typeof(Process).InvokeMember("SetProcessHandle"' BindingFlags.InvokeMethod | BindingFlags.NonPublic | BindingFlags.Instance' null' this' new object[] { safeProcessHandle }); " is 173.
Long Statement,MPExtended.Libraries.Service.Util,TranscoderProcess,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\TranscoderProcess.cs,StartAsUser,The length of the statement  "                typeof(Process).InvokeMember("SetProcessId"' BindingFlags.InvokeMethod | BindingFlags.NonPublic | BindingFlags.Instance' null' this' new object[] { processInformation.dwProcessId }); " is 182.
Long Statement,MPExtended.Libraries.Service.Util,MIME,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\MIME.cs,GetFromFilename,The length of the statement  "            object mime = RegistryReader.ReadKey(Microsoft.Win32.RegistryHive.ClassesRoot' Path.GetExtension(filename)' "Content Type"); " is 124.
Long Statement,MPExtended.Libraries.Service.Util,CultureDatabase,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\CultureDatabase.cs,GetLanguages,The length of the statement  "                .Where(x => x.Parent == CultureInfo.InvariantCulture && x.TwoLetterISOLanguageName.Length == 2 && x.TwoLetterISOLanguageName != "iv") " is 133.
Long Statement,MPExtended.Libraries.Service.Util,CultureDatabase,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\CultureDatabase.cs,GetLanguage,The length of the statement  "                x.TwoLetterISOLanguageName == name || x.ThreeLetterISOLanguageName == name || x.ThreeLetterWindowsLanguageName == name); " is 120.
Long Statement,MPExtended.Libraries.Service.Util,CultureDatabase,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\CultureDatabase.cs,GetAvailableTranslations,The length of the statement  "                if (rs == null || culture.LCID == CultureInfo.InvariantCulture.LCID || culture.Parent.LCID != CultureInfo.InvariantCulture.LCID) " is 128.
Long Statement,MPExtended.Libraries.Service.Util,WifiRemote,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\WifiRemote.cs,DecryptConfig,The length of the statement  "            // I don't really get why this is used at all' since it doesn't provide any security. The key is static and can be found in the MP sources' and " is 143.
Long Statement,MPExtended.Libraries.Service.Util,WifiRemote,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\WifiRemote.cs,DecryptConfig,The length of the statement  "            // 3DES isn't very secure anymore. Also' hashing is a lot better to use here as we never need the plaintext variant. Well' we've to deal with  " is 141.
Long Statement,MPExtended.Libraries.Service.Util,WifiRemote,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\WifiRemote.cs,DecryptConfig,The length of the statement  "            // it. More or less taken from mediaportal/Core/Util/EncryptDecrypt.cs in the MP sources' it's at least where the encoder resides' so we've to " is 142.
Long Statement,MPExtended.Libraries.Service.Util,Mediaportal,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\Mediaportal.cs,GetClientInstallationDirectory,The length of the statement  "            object res = RegistryReader.ReadKeyAllViews(RegistryHive.LocalMachine' @"SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\MediaPortal"' "InstallPath"); " is 154.
Long Statement,MPExtended.Libraries.Service.Util,Mediaportal,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\Mediaportal.cs,GetServerInstallationDirectory,The length of the statement  "            object res = RegistryReader.ReadKeyAllViews(RegistryHive.LocalMachine' @"SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\MediaPortal TV Server"' "InstallPath"); " is 164.
Long Statement,MPExtended.Libraries.Service.Util,Mediaportal,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\Mediaportal.cs,LoadConfigurationFile,The length of the statement  "            // Open the file with FileShare.ReadWrite to make sure that MP can still write to the file. I'm not 100% sure whether this will work correctly " is 142.
Long Statement,MPExtended.Libraries.Service.Util,Mediaportal,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\Mediaportal.cs,LoadConfigurationFile,The length of the statement  "            // when MP is actually writing to the file while we're reading from it' but worst case it'll throw an exception about invalid XML. Given that " is 141.
Long Statement,MPExtended.Libraries.Service.Util,Mediaportal,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\Mediaportal.cs,LoadConfigurationFile,The length of the statement  "            // the alternative' prohibiting MP from writing to the file' probably causes all kinds of problems in MP' this seems fair to me. " is 128.
Long Statement,MPExtended.Libraries.Service.Util,Mediaportal,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\Mediaportal.cs,GetMediaPortalPath,The length of the statement  "                mpdir = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.ProgramFilesX86)' "Team MediaPortal"' "MediaPortal"); " is 126.
Long Statement,MPExtended.Libraries.Service.Util,UpdateChecker,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\UpdateChecker.cs,GetReleases,The length of the statement  "            string[] lines = data.Replace("\r"' "").Split('\n').Select(x => x.Trim()).Where(x => x.Length > 0 && x.Substring(0' 1) != "#").ToArray(); " is 137.
Long Statement,MPExtended.Libraries.Service.Network,ImpersonationContext,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Network\ImpersonationContext.cs,RewritePath,The length of the statement  "            return mdcCache.ConvertPathToUnc(Configuration.Services.NetworkImpersonation.Domain' Configuration.Services.NetworkImpersonation.Username' path); " is 145.
Long Statement,MPExtended.Libraries.Service.Network,MappedDriveConverter,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Network\MappedDriveConverter.cs,GetUncPathForDrive,The length of the statement  "                var drives = RegistryReader.GetSubKeys(RegistryHive.Users' RegistryView.Default' String.Format(@"{0}\Network"' sid.Value)); " is 123.
Long Statement,MPExtended.Libraries.Service.Network,MappedDriveConverter,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Network\MappedDriveConverter.cs,GetUncPathForDrive,The length of the statement  "                    string uncPath = RegistryReader.ReadKey(RegistryHive.Users' RegistryView.Default' String.Format(@"{0}\Network\{1}"' sid.Value' driveLetter)' "RemotePath").ToString(); " is 166.
Long Statement,MPExtended.Libraries.Service.Network,ExternalAddress,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Network\ExternalAddress.cs,GetIP,The length of the statement  "            Log.Warn("Couldn't retrieve external IP from any of the external websites. Is your network functioning and the firewall configured correctly?"); " is 144.
Long Statement,MPExtended.Libraries.Service.Network,NetworkInformation,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Network\NetworkInformation.cs,GetNetworkInterfaces,The length of the statement  "                foreach (var iface in NetworkInterface.GetAllNetworkInterfaces().Where(x => x.OperationalStatus == OperationalStatus.Up)) " is 121.
Long Statement,MPExtended.Libraries.Service.Network,NetworkInformation,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Network\NetworkInformation.cs,GetNetworkInterfaces,The length of the statement  "                        if ((unicast.Address.AddressFamily == AddressFamily.InterNetwork || unicast.Address.AddressFamily == AddressFamily.InterNetworkV6) && " is 133.
Long Statement,MPExtended.Libraries.Service.Network,NetworkInformation,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Network\NetworkInformation.cs,GetIPAddressForUri,The length of the statement  "            return _ipAddress.AddressFamily == AddressFamily.InterNetworkV6 ? String.Format("[{0}]"' _ipAddress) : _ipAddress.ToString(); " is 125.
Long Statement,MPExtended.Libraries.Service.Network,NetworkInformation,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Network\NetworkInformation.cs,IsOnLAN,The length of the statement  "                byte[] subnetMask = new byte[16] { 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00 }; " is 132.
Long Statement,MPExtended.Libraries.Service.Shared.Filters,ListFilter,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Shared\Filters\ListFilter.cs,GetMatchDelegate,The length of the statement  "            Log.Error("ListFilter: Cannot load match delegate for field of type '{0}' (property name {1})"' property.PropertyType' property.Name); " is 134.
Long Statement,MPExtended.Libraries.Service.Shared.Filters,Filter,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Shared\Filters\Filter.cs,GetMatchDelegate,The length of the statement  "            Log.Error("Filter: Cannot load match delegate for field of type '{0}' (property name {1})"' property.PropertyType' property.Name); " is 130.
Long Statement,MPExtended.Libraries.Service.Shared.Filters,AutoSuggestion,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Shared\Filters\AutoSuggestion.cs,GetValuesForField,The length of the statement  "            if (property.PropertyType.GetInterfaces().Any(x => x == typeof(IEnumerable)) && property.PropertyType != typeof(string)) " is 120.
Long Statement,MPExtended.Libraries.Service.Shared.Filters,Tokenizer,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Shared\Filters\Tokenizer.cs,Tokenize,The length of the statement  "                    else if ((valueIsQuoted && data[pos] == valueQuoteCharacter) || (!valueIsQuoted && NotExpectToken(Tokens.IsConjunction)) || (inList && NotExpectToken(Tokens.IsListEnd))) " is 169.
Long Statement,MPExtended.Libraries.Service.Shared,ChannelLogos,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Shared\ChannelLogos.cs,GetSearchDirectories,The length of the statement  "                Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData)' "Team MediaPortal"' "MediaPortal"' "thumbs"' "tv"' "logos")' " is 149.
Long Statement,MPExtended.Libraries.Service.Shared,ChannelLogos,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Shared\ChannelLogos.cs,GetSearchDirectories,The length of the statement  "                Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData)' "Team MediaPortal"' "MediaPortal"' "thumbs"' "tv"' "logo")' " is 148.
Long Statement,MPExtended.Libraries.Service.Shared,ChannelLogos,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Shared\ChannelLogos.cs,GetSearchDirectories,The length of the statement  "                Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData)' "Team MediaPortal"' "MediaPortal"' "thumbs"' "Radio")' " is 143.
Long Statement,MPExtended.Libraries.Service.Shared,ChannelLogos,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Shared\ChannelLogos.cs,FindLocation,The length of the statement  "                .Where(fi => Path.GetFileNameWithoutExtension(fi.Name).ToLowerInvariant() == PathUtil.StripInvalidCharacters(channelName' '_').ToLowerInvariant()) " is 146.
Long Statement,MPExtended.Libraries.Service.Hosting,EnvironmentSetup,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Hosting\EnvironmentSetup.cs,EnsurePermissionSettings,The length of the statement  "            var rights = FileSystemRights.CreateDirectories | FileSystemRights.CreateFiles | FileSystemRights.ListDirectory | FileSystemRights.Modify | FileSystemRights.DeleteSubdirectoriesAndFiles; " is 186.
Long Statement,MPExtended.Libraries.Service.Hosting,EnvironmentSetup,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Hosting\EnvironmentSetup.cs,EnsurePermissionSettings,The length of the statement  "                FilePermissions.SetAclForUserOnDirectory(Installation.GetConfigurationDirectory()' everyone' rights' AccessControlType.Allow); " is 126.
Long Statement,MPExtended.Libraries.Service.Hosting,BaseAddresses,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Hosting\BaseAddresses.cs,GetForService,The length of the statement  "            ret.Add(new Uri(String.Format("http://{0}:{1}/MPExtended/{2}/"' NetworkInformation.GetIPAddressForUri()' Configuration.Services.Port' serviceName))); " is 149.
Long Statement,MPExtended.Libraries.Service.Hosting,MPExtendedHost,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Hosting\MPExtendedHost.cs,Open,The length of the statement  "                Task.Factory.StartNew(() => TVEDependencyInstaller.EnsureDependencyStatus(TVEDependencyInstaller.DependencyStatus.NoDependencySet)); " is 132.
Long Statement,MPExtended.Libraries.Service.Internal,TVEDependencyInstaller,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Internal\TVEDependencyInstaller.cs,GetCurrentStatus,The length of the statement  "            if ((string)RegistryReader.ReadKeyAllViews(RegistryHive.LocalMachine' @"Software\MPExtended"' "TVEDependencyInstalled") == "true") " is 130.
Long Statement,MPExtended.Libraries.Service.Internal,TVEDependencyInstaller,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Internal\TVEDependencyInstaller.cs,GetCurrentStatus,The length of the statement  "            if ((string)RegistryReader.ReadKeyAllViews(RegistryHive.LocalMachine' @"Software\MPExtended"' "TVEDependencyInstalled") == "false") " is 131.
Long Statement,MPExtended.Libraries.Service.MpConnection,AccessRequestingClient,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\MpConnection\AccessRequestingClient.cs,SendRequestAccessDialog,The length of the statement  "            string translatedMessage = Strings.UI.ResourceManager.GetString("AccessRequestWifiRemote"' CultureDatabase.GetTranslationCulture()); " is 132.
Long Statement,MPExtended.Libraries.Service.MpConnection,AccessRequestingClient,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\MpConnection\AccessRequestingClient.cs,CancelRequestAccessDialog,The length of the statement  "                    MessageDialogAction action = new MessageDialogAction() { ActionType = "cancel"' DialogId = diag.DialogId' DialogType = diag.DialogType }; " is 137.
Long Statement,MPExtended.Libraries.Service.MpConnection,WifiRemoteClient,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\MpConnection\WifiRemoteClient.cs,HandleDialogResult,The length of the statement  "            MessageDialogResult dialogResult = (MessageDialogResult)JsonConvert.DeserializeObject(msg' typeof(MessageDialogResult)); " is 120.
Long Statement,MPExtended.Libraries.Service.MpConnection,WifiRemoteClient,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\MpConnection\WifiRemoteClient.cs,HandleWelcomeMessage,The length of the statement  "                    identificationMessage.Authenticate = new Authenticate(AuthenticationInformation.Username' AuthenticationInformation.GetPassword()); " is 131.
Long Statement,MPExtended.Libraries.Service.MpConnection,WifiRemoteClient,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\MpConnection\WifiRemoteClient.cs,HandleAuthenticationResponse,The length of the statement  "            MessageAuthenticationResponse authResponse = (MessageAuthenticationResponse)JsonConvert.DeserializeObject(msg' typeof(MessageAuthenticationResponse)); " is 150.
Long Statement,MPExtended.Libraries.Service.WCF,CompressionMessageInspector,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\WCF\CompressionBehavior.cs,BeforeSendReply,The length of the statement  "                    Log.Trace("CompressionMessageInspector::BeforeSendReply set {0} encoding for {1} response"' context.Type' prop.Headers[HttpResponseHeader.ContentType]); " is 152.
Long Statement,MPExtended.Libraries.Service.WCF,WcfUsernameValidator,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\WCF\WcfUsernameValidator.cs,Validate,The length of the statement  "                // Doesn't always work: http://blogs.msdn.com/b/drnick/archive/2010/02/02/fix-to-allow-customizing-the-status-code-when-validation-fails.aspx " is 141.
Long Statement,MPExtended.Libraries.Service.WCF,WebExceptionHandling,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\WCF\WebBehavior.cs,ProvideFault,The length of the statement  "            JsonError errorObject = new JsonError { ExceptionType = error.GetType().ToString()' Message = error.Message' StackTrace = error.StackTrace }; " is 141.
Long Statement,MPExtended.Libraries.Service,Installation,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Installation.cs,GetLogDirectory,The length of the statement  "                return EnsureDirectoryExists(Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData)' "MPExtended"' "Logs")); " is 141.
Long Statement,MPExtended.Libraries.Service,VersionUtil,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\VersionUtil.cs,GetGitVersion,The length of the statement  "            var attributes = (AssemblyGitVersionAttribute[])Assembly.GetExecutingAssembly().GetCustomAttributes(typeof(AssemblyGitVersionAttribute)' true); " is 143.
Long Statement,MPExtended.Libraries.Service,VersionUtil,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\VersionUtil.cs,GetUserAgent,The length of the statement  "            return String.Format("MPExtended/{0} ({1}; .NET {2})"' GetVersionName()' GetCommitOrBuildVersion()' Environment.Version.ToString()); " is 132.
Long Statement,MPExtended.Libraries.Service,WCFUtil,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\WCFUtil.cs,GetCurrentRoot,The length of the statement  "                if (WebOperationContext.Current != null && WebOperationContext.Current.IncomingRequest.Headers.AllKeys.Contains(ORIGINAL_URL_HEADER)) " is 133.
Long Statement,MPExtended.Libraries.Service,WCFUtil,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\WCFUtil.cs,GetCurrentRoot,The length of the statement  "                     * If MPExtended is behind a web proxy which alters the scheme and port e.g. https://mediaportal.external.com to http://mpserver:4332 " is 132.
Long Statement,MPExtended.Libraries.Service,WCFUtil,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\WCFUtil.cs,GetCurrentRoot,The length of the statement  "                     * then the Host header won't contain enough information for absolute locations such as those in WebStringResult to be set correctly. " is 132.
Long Statement,MPExtended.Libraries.Service,WCFUtil,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\WCFUtil.cs,GetCurrentRoot,The length of the statement  "                if (WebOperationContext.Current != null && WebOperationContext.Current.IncomingRequest.Headers.AllKeys.Contains(HttpRequestHeader.Host.ToString())) " is 147.
Long Statement,MPExtended.Libraries.Service,WCFUtil,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\WCFUtil.cs,GetCurrentRoot,The length of the statement  "                return String.Format("http://{0}:{1}/MPExtended/"' NetworkInformation.GetIPAddressForUri()' Configuration.Services.Port); " is 121.
Long Statement,MPExtended.Libraries.Service,WCFUtil,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\WCFUtil.cs,GetClientIPAddress,The length of the statement  "                RemoteEndpointMessageProperty endpoint = properties[RemoteEndpointMessageProperty.Name] as RemoteEndpointMessageProperty; " is 121.
Long Statement,MPExtended.Libraries.Service.Logging,Logger,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Logging\Logger.cs,LogLine,The length of the statement  "                    output.Append(String.Format(dest.LogFormat' DateTime.Now' Thread.CurrentThread.Name' Thread.CurrentThread.ManagedThreadId' levelText)); " is 135.
Long Statement,MPExtended.Libraries.Service.Logging,Logger,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Logging\Logger.cs,LogLine,The length of the statement  "                    dest.Output.WriteLine(String.Format(dest.LogFormat' DateTime.Now' Thread.CurrentThread.Name' Thread.CurrentThread.ManagedThreadId' levelText) + text); " is 150.
Complex Conditional,MPExtended.Libraries.Service.Network,NetworkInformation,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Network\NetworkInformation.cs,GetNetworkInterfaces,The conditional expression  "(unicast.Address.AddressFamily == AddressFamily.InterNetwork || unicast.Address.AddressFamily == AddressFamily.InterNetworkV6) &&                              !unicast.Address.IsIPv6LinkLocal && !unicast.Address.IsIPv6Multicast"  is complex.
Complex Conditional,MPExtended.Libraries.Service.Shared.Filters,Tokenizer,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Shared\Filters\Tokenizer.cs,Tokenize,The conditional expression  "(valueIsQuoted && data[pos] == valueQuoteCharacter) || (!valueIsQuoted && NotExpectToken(Tokens.IsConjunction)) || (inList && NotExpectToken(Tokens.IsListEnd))"  is complex.
Empty Catch Block,MPExtended.Libraries.Service.Util,FileUtil,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\FileUtil.cs,TryOpen,The method has an empty catch block.
Empty Catch Block,MPExtended.Libraries.Service.Util,FileUtil,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\FileUtil.cs,IsAccessible,The method has an empty catch block.
Empty Catch Block,MPExtended.Libraries.Service.Hosting,LogRotation,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Hosting\LogRotation.cs,Rotate,The method has an empty catch block.
Empty Catch Block,MPExtended.Libraries.Service,WCFUtil,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\WCFUtil.cs,GetCurrentRoot,The method has an empty catch block.
Magic Number,MPExtended.Libraries.Service.Composition,NativeAssemblyLoader,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Composition\NativeAssemblyLoader.cs,GetSearchDirectory,The following statement contains a magic number: var txt = new StringBuilder(1024);
Magic Number,MPExtended.Libraries.Service.Config,ConfigurationSerializer<TModel;TSerializer>,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Config\ConfigurationSerializer.cs,Reload,The following statement contains a magic number: var stream = FileUtil.TryOpen(path' FileMode.Open' FileAccess.Read' FileShare.Read' 5000);
Magic Number,MPExtended.Libraries.Service.Config,TransformationCallbacks,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Config\TransformationCallbacks.cs,FolderSubstitution,The following statement contains a magic number: input = Regex.Replace(input' @"%mp-([^-]+)-([^-]+)%"' delegate(Match match)              {                  var section = Mediaportal.ReadSectionFromConfigFile(match.Groups[1].Value);                  if (!section.ContainsKey(match.Groups[2].Value))                  {                      Log.Info("Replacing unknown Mediaportal path substitution %mp-{0}-{1}% with empty string"' match.Groups[1].Value' match.Groups[2].Value);                      return String.Empty;                  }                  else                  {                      return section[match.Groups[2].Value];                  }              });
Magic Number,MPExtended.Libraries.Service.Config,TransformationCallbacks,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Config\TransformationCallbacks.cs,FolderSubstitution,The following statement contains a magic number: input = Regex.Replace(input' @"%mp-([^-]+)-([^-]+)%"' delegate(Match match)              {                  var section = Mediaportal.ReadSectionFromConfigFile(match.Groups[1].Value);                  if (!section.ContainsKey(match.Groups[2].Value))                  {                      Log.Info("Replacing unknown Mediaportal path substitution %mp-{0}-{1}% with empty string"' match.Groups[1].Value' match.Groups[2].Value);                      return String.Empty;                  }                  else                  {                      return section[match.Groups[2].Value];                  }              });
Magic Number,MPExtended.Libraries.Service.Config,TransformationCallbacks,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Config\TransformationCallbacks.cs,FolderSubstitution,The following statement contains a magic number: input = Regex.Replace(input' @"%mp-([^-]+)-([^-]+)%"' delegate(Match match)              {                  var section = Mediaportal.ReadSectionFromConfigFile(match.Groups[1].Value);                  if (!section.ContainsKey(match.Groups[2].Value))                  {                      Log.Info("Replacing unknown Mediaportal path substitution %mp-{0}-{1}% with empty string"' match.Groups[1].Value' match.Groups[2].Value);                      return String.Empty;                  }                  else                  {                      return section[match.Groups[2].Value];                  }              });
Magic Number,MPExtended.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Extensions\NaturalSorting.cs,GetSortFunction,The following statement contains a magic number: return inputValue =>                  {                      string strippedValue = _stripPrefixRegex.Match(keySelector(inputValue)).Groups[3].Value;                      string sortableValue = _changeRoman.Replace(strippedValue' m => String.Format("{0}{1}{2}"' m.Groups[1]' RomanToDecimal(m.Groups[2].Value)' m.Groups[3]));                      return _splitNumerals.Split(sortableValue).Select(x =>                      {                          int val;                          return Int32.TryParse(x' out val) ? (object)val : (object)x;                      });                  };
Magic Number,MPExtended.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Extensions\NaturalSorting.cs,GetSortFunction,The following statement contains a magic number: return inputValue =>                  {                      string strippedValue = _stripPrefixRegex.Match(keySelector(inputValue)).Groups[3].Value;                      string sortableValue = _changeRoman.Replace(strippedValue' m => String.Format("{0}{1}{2}"' m.Groups[1]' RomanToDecimal(m.Groups[2].Value)' m.Groups[3]));                      return _splitNumerals.Split(sortableValue).Select(x =>                      {                          int val;                          return Int32.TryParse(x' out val) ? (object)val : (object)x;                      });                  };
Magic Number,MPExtended.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Extensions\NaturalSorting.cs,GetSortFunction,The following statement contains a magic number: return inputValue =>                  {                      string strippedValue = _stripPrefixRegex.Match(keySelector(inputValue)).Groups[3].Value;                      string sortableValue = _changeRoman.Replace(strippedValue' m => String.Format("{0}{1}{2}"' m.Groups[1]' RomanToDecimal(m.Groups[2].Value)' m.Groups[3]));                      return _splitNumerals.Split(sortableValue).Select(x =>                      {                          int val;                          return Int32.TryParse(x' out val) ? (object)val : (object)x;                      });                  };
Magic Number,MPExtended.Libraries.Service.Util,Encryption,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\Encryption.cs,GetAlgorithm,The following statement contains a magic number: encryptionAlgorithm.KeySize = 256;
Magic Number,MPExtended.Libraries.Service.Util,Encryption,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\Encryption.cs,GetAlgorithm,The following statement contains a magic number: encryptionAlgorithm.Key = keyDerive.GetBytes(encryptionAlgorithm.KeySize / 8);
Magic Number,MPExtended.Libraries.Service.Util,Encryption,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\Encryption.cs,GetAlgorithm,The following statement contains a magic number: encryptionAlgorithm.IV = keyDerive.GetBytes(encryptionAlgorithm.BlockSize / 8);
Magic Number,MPExtended.Libraries.Service.Util,IniFile,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\IniFile.cs,IniFile,The following statement contains a magic number: sections[currentSection].Add(match.Groups[1].Value' match.Groups[2].Value);
Magic Number,MPExtended.Libraries.Service.Util,TranscoderProcess,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\TranscoderProcess.cs,StartAsUser,The following statement contains a magic number: StreamWriter standardInput = new StreamWriter(new FileStream(new SafeFileHandle(stdinWriteHandle' true)' FileAccess.Write' 4096)' Console.Out.Encoding);
Magic Number,MPExtended.Libraries.Service.Util,TranscoderProcess,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\TranscoderProcess.cs,StartAsUser,The following statement contains a magic number: StreamReader standardOutput = new StreamReader(new FileStream(new SafeFileHandle(stdoutReadHandle' true)' FileAccess.Read' 4096)' StartInfo.StandardOutputEncoding ?? Console.Out.Encoding);
Magic Number,MPExtended.Libraries.Service.Util,TranscoderProcess,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\TranscoderProcess.cs,StartAsUser,The following statement contains a magic number: StreamReader standardError = new StreamReader(new FileStream(new SafeFileHandle(stderrReadHandle' true)' FileAccess.Read' 4096)' StartInfo.StandardErrorEncoding ?? Console.Out.Encoding);
Magic Number,MPExtended.Libraries.Service.Util,TranscoderProcess,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\TranscoderProcess.cs,CreateStandardPipe,The following statement contains a magic number: success = CreatePipe(out readHandle' out writeHandle' ref security' 4096);
Magic Number,MPExtended.Libraries.Service.Util,MIME,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\MIME.cs,GetFromContent,The following statement contains a magic number: byte[] buffer = new byte[256];
Magic Number,MPExtended.Libraries.Service.Util,MIME,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\MIME.cs,GetFromContent,The following statement contains a magic number: content.Read(buffer' 0' 256);
Magic Number,MPExtended.Libraries.Service.Util,MIME,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\MIME.cs,GetFromContent,The following statement contains a magic number: FindMimeFromData(0' null' buffer' 256' null' 0' out mimetype' 0);
Magic Number,MPExtended.Libraries.Service.Util,CultureDatabase,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\CultureDatabase.cs,GetLanguages,The following statement contains a magic number: return CultureInfo.GetCultures(CultureTypes.NeutralCultures)                  .Where(x => x.Parent == CultureInfo.InvariantCulture && x.TwoLetterISOLanguageName.Length == 2 && x.TwoLetterISOLanguageName != "iv")                  .GroupBy(x => x.TwoLetterISOLanguageName' (key' items) => items.First());
Magic Number,MPExtended.Libraries.Service.Util,Mediaportal,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\Mediaportal.cs,GetVersion,The following statement contains a magic number: var minimumVersions = new Dictionary<MediaPortalVersion' Version>()              {                  { MediaPortalVersion.MP1_7' new Version(1' 6' 100) }'   // Let's assume the pattern continues                  { MediaPortalVersion.MP1_6' new Version(1' 5' 100) }'   // 1.5.100 used by pre-release' see http://git.io/A0ZQ-A                  { MediaPortalVersion.MP1_5' new Version(1' 4' 100) }'   // 1.4.100 used by pre-release' see http://git.io/g3UWFA                  { MediaPortalVersion.MP1_4' new Version(1' 3' 100) }'   // 1.3.100 used by pre-release' see http://git.io/akz_PQ                  { MediaPortalVersion.MP1_3' new Version(1' 2' 100) }'   // 1.2.100 used by the alpha release                  { MediaPortalVersion.MP1_2' new Version(1' 2) }'        // not sure about alpha versions' but those are ancient                  { MediaPortalVersion.MP1_1' new Version(1' 1) }         // unsupported' so whatever              };
Magic Number,MPExtended.Libraries.Service.Util,Mediaportal,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\Mediaportal.cs,GetVersion,The following statement contains a magic number: var minimumVersions = new Dictionary<MediaPortalVersion' Version>()              {                  { MediaPortalVersion.MP1_7' new Version(1' 6' 100) }'   // Let's assume the pattern continues                  { MediaPortalVersion.MP1_6' new Version(1' 5' 100) }'   // 1.5.100 used by pre-release' see http://git.io/A0ZQ-A                  { MediaPortalVersion.MP1_5' new Version(1' 4' 100) }'   // 1.4.100 used by pre-release' see http://git.io/g3UWFA                  { MediaPortalVersion.MP1_4' new Version(1' 3' 100) }'   // 1.3.100 used by pre-release' see http://git.io/akz_PQ                  { MediaPortalVersion.MP1_3' new Version(1' 2' 100) }'   // 1.2.100 used by the alpha release                  { MediaPortalVersion.MP1_2' new Version(1' 2) }'        // not sure about alpha versions' but those are ancient                  { MediaPortalVersion.MP1_1' new Version(1' 1) }         // unsupported' so whatever              };
Magic Number,MPExtended.Libraries.Service.Util,Mediaportal,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\Mediaportal.cs,GetVersion,The following statement contains a magic number: var minimumVersions = new Dictionary<MediaPortalVersion' Version>()              {                  { MediaPortalVersion.MP1_7' new Version(1' 6' 100) }'   // Let's assume the pattern continues                  { MediaPortalVersion.MP1_6' new Version(1' 5' 100) }'   // 1.5.100 used by pre-release' see http://git.io/A0ZQ-A                  { MediaPortalVersion.MP1_5' new Version(1' 4' 100) }'   // 1.4.100 used by pre-release' see http://git.io/g3UWFA                  { MediaPortalVersion.MP1_4' new Version(1' 3' 100) }'   // 1.3.100 used by pre-release' see http://git.io/akz_PQ                  { MediaPortalVersion.MP1_3' new Version(1' 2' 100) }'   // 1.2.100 used by the alpha release                  { MediaPortalVersion.MP1_2' new Version(1' 2) }'        // not sure about alpha versions' but those are ancient                  { MediaPortalVersion.MP1_1' new Version(1' 1) }         // unsupported' so whatever              };
Magic Number,MPExtended.Libraries.Service.Util,Mediaportal,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\Mediaportal.cs,GetVersion,The following statement contains a magic number: var minimumVersions = new Dictionary<MediaPortalVersion' Version>()              {                  { MediaPortalVersion.MP1_7' new Version(1' 6' 100) }'   // Let's assume the pattern continues                  { MediaPortalVersion.MP1_6' new Version(1' 5' 100) }'   // 1.5.100 used by pre-release' see http://git.io/A0ZQ-A                  { MediaPortalVersion.MP1_5' new Version(1' 4' 100) }'   // 1.4.100 used by pre-release' see http://git.io/g3UWFA                  { MediaPortalVersion.MP1_4' new Version(1' 3' 100) }'   // 1.3.100 used by pre-release' see http://git.io/akz_PQ                  { MediaPortalVersion.MP1_3' new Version(1' 2' 100) }'   // 1.2.100 used by the alpha release                  { MediaPortalVersion.MP1_2' new Version(1' 2) }'        // not sure about alpha versions' but those are ancient                  { MediaPortalVersion.MP1_1' new Version(1' 1) }         // unsupported' so whatever              };
Magic Number,MPExtended.Libraries.Service.Util,Mediaportal,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\Mediaportal.cs,GetVersion,The following statement contains a magic number: var minimumVersions = new Dictionary<MediaPortalVersion' Version>()              {                  { MediaPortalVersion.MP1_7' new Version(1' 6' 100) }'   // Let's assume the pattern continues                  { MediaPortalVersion.MP1_6' new Version(1' 5' 100) }'   // 1.5.100 used by pre-release' see http://git.io/A0ZQ-A                  { MediaPortalVersion.MP1_5' new Version(1' 4' 100) }'   // 1.4.100 used by pre-release' see http://git.io/g3UWFA                  { MediaPortalVersion.MP1_4' new Version(1' 3' 100) }'   // 1.3.100 used by pre-release' see http://git.io/akz_PQ                  { MediaPortalVersion.MP1_3' new Version(1' 2' 100) }'   // 1.2.100 used by the alpha release                  { MediaPortalVersion.MP1_2' new Version(1' 2) }'        // not sure about alpha versions' but those are ancient                  { MediaPortalVersion.MP1_1' new Version(1' 1) }         // unsupported' so whatever              };
Magic Number,MPExtended.Libraries.Service.Util,Mediaportal,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\Mediaportal.cs,GetVersion,The following statement contains a magic number: var minimumVersions = new Dictionary<MediaPortalVersion' Version>()              {                  { MediaPortalVersion.MP1_7' new Version(1' 6' 100) }'   // Let's assume the pattern continues                  { MediaPortalVersion.MP1_6' new Version(1' 5' 100) }'   // 1.5.100 used by pre-release' see http://git.io/A0ZQ-A                  { MediaPortalVersion.MP1_5' new Version(1' 4' 100) }'   // 1.4.100 used by pre-release' see http://git.io/g3UWFA                  { MediaPortalVersion.MP1_4' new Version(1' 3' 100) }'   // 1.3.100 used by pre-release' see http://git.io/akz_PQ                  { MediaPortalVersion.MP1_3' new Version(1' 2' 100) }'   // 1.2.100 used by the alpha release                  { MediaPortalVersion.MP1_2' new Version(1' 2) }'        // not sure about alpha versions' but those are ancient                  { MediaPortalVersion.MP1_1' new Version(1' 1) }         // unsupported' so whatever              };
Magic Number,MPExtended.Libraries.Service.Util,Mediaportal,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\Mediaportal.cs,GetVersion,The following statement contains a magic number: var minimumVersions = new Dictionary<MediaPortalVersion' Version>()              {                  { MediaPortalVersion.MP1_7' new Version(1' 6' 100) }'   // Let's assume the pattern continues                  { MediaPortalVersion.MP1_6' new Version(1' 5' 100) }'   // 1.5.100 used by pre-release' see http://git.io/A0ZQ-A                  { MediaPortalVersion.MP1_5' new Version(1' 4' 100) }'   // 1.4.100 used by pre-release' see http://git.io/g3UWFA                  { MediaPortalVersion.MP1_4' new Version(1' 3' 100) }'   // 1.3.100 used by pre-release' see http://git.io/akz_PQ                  { MediaPortalVersion.MP1_3' new Version(1' 2' 100) }'   // 1.2.100 used by the alpha release                  { MediaPortalVersion.MP1_2' new Version(1' 2) }'        // not sure about alpha versions' but those are ancient                  { MediaPortalVersion.MP1_1' new Version(1' 1) }         // unsupported' so whatever              };
Magic Number,MPExtended.Libraries.Service.Util,Mediaportal,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\Mediaportal.cs,GetVersion,The following statement contains a magic number: var minimumVersions = new Dictionary<MediaPortalVersion' Version>()              {                  { MediaPortalVersion.MP1_7' new Version(1' 6' 100) }'   // Let's assume the pattern continues                  { MediaPortalVersion.MP1_6' new Version(1' 5' 100) }'   // 1.5.100 used by pre-release' see http://git.io/A0ZQ-A                  { MediaPortalVersion.MP1_5' new Version(1' 4' 100) }'   // 1.4.100 used by pre-release' see http://git.io/g3UWFA                  { MediaPortalVersion.MP1_4' new Version(1' 3' 100) }'   // 1.3.100 used by pre-release' see http://git.io/akz_PQ                  { MediaPortalVersion.MP1_3' new Version(1' 2' 100) }'   // 1.2.100 used by the alpha release                  { MediaPortalVersion.MP1_2' new Version(1' 2) }'        // not sure about alpha versions' but those are ancient                  { MediaPortalVersion.MP1_1' new Version(1' 1) }         // unsupported' so whatever              };
Magic Number,MPExtended.Libraries.Service.Util,Mediaportal,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\Mediaportal.cs,GetVersion,The following statement contains a magic number: var minimumVersions = new Dictionary<MediaPortalVersion' Version>()              {                  { MediaPortalVersion.MP1_7' new Version(1' 6' 100) }'   // Let's assume the pattern continues                  { MediaPortalVersion.MP1_6' new Version(1' 5' 100) }'   // 1.5.100 used by pre-release' see http://git.io/A0ZQ-A                  { MediaPortalVersion.MP1_5' new Version(1' 4' 100) }'   // 1.4.100 used by pre-release' see http://git.io/g3UWFA                  { MediaPortalVersion.MP1_4' new Version(1' 3' 100) }'   // 1.3.100 used by pre-release' see http://git.io/akz_PQ                  { MediaPortalVersion.MP1_3' new Version(1' 2' 100) }'   // 1.2.100 used by the alpha release                  { MediaPortalVersion.MP1_2' new Version(1' 2) }'        // not sure about alpha versions' but those are ancient                  { MediaPortalVersion.MP1_1' new Version(1' 1) }         // unsupported' so whatever              };
Magic Number,MPExtended.Libraries.Service.Util,Mediaportal,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\Mediaportal.cs,GetVersion,The following statement contains a magic number: var minimumVersions = new Dictionary<MediaPortalVersion' Version>()              {                  { MediaPortalVersion.MP1_7' new Version(1' 6' 100) }'   // Let's assume the pattern continues                  { MediaPortalVersion.MP1_6' new Version(1' 5' 100) }'   // 1.5.100 used by pre-release' see http://git.io/A0ZQ-A                  { MediaPortalVersion.MP1_5' new Version(1' 4' 100) }'   // 1.4.100 used by pre-release' see http://git.io/g3UWFA                  { MediaPortalVersion.MP1_4' new Version(1' 3' 100) }'   // 1.3.100 used by pre-release' see http://git.io/akz_PQ                  { MediaPortalVersion.MP1_3' new Version(1' 2' 100) }'   // 1.2.100 used by the alpha release                  { MediaPortalVersion.MP1_2' new Version(1' 2) }'        // not sure about alpha versions' but those are ancient                  { MediaPortalVersion.MP1_1' new Version(1' 1) }         // unsupported' so whatever              };
Magic Number,MPExtended.Libraries.Service.Util,Mediaportal,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\Mediaportal.cs,GetVersion,The following statement contains a magic number: var minimumVersions = new Dictionary<MediaPortalVersion' Version>()              {                  { MediaPortalVersion.MP1_7' new Version(1' 6' 100) }'   // Let's assume the pattern continues                  { MediaPortalVersion.MP1_6' new Version(1' 5' 100) }'   // 1.5.100 used by pre-release' see http://git.io/A0ZQ-A                  { MediaPortalVersion.MP1_5' new Version(1' 4' 100) }'   // 1.4.100 used by pre-release' see http://git.io/g3UWFA                  { MediaPortalVersion.MP1_4' new Version(1' 3' 100) }'   // 1.3.100 used by pre-release' see http://git.io/akz_PQ                  { MediaPortalVersion.MP1_3' new Version(1' 2' 100) }'   // 1.2.100 used by the alpha release                  { MediaPortalVersion.MP1_2' new Version(1' 2) }'        // not sure about alpha versions' but those are ancient                  { MediaPortalVersion.MP1_1' new Version(1' 1) }         // unsupported' so whatever              };
Magic Number,MPExtended.Libraries.Service.Util,PathUtil,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\PathUtil.cs,StripFileProtocolPrefix,The following statement contains a magic number: return path.StartsWith("file://") ? path.Substring(7) : path;
Magic Number,MPExtended.Libraries.Service.Util,UpdateChecker,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\UpdateChecker.cs,GetReleases,The following statement contains a magic number: versionInfoCache.Add(new ReleasedVersion()                  {                      BuildNumber = new Version(items[0])'                      Version = items[1]'                      ReleaseDate = DateTime.Parse(items[2])                  });
Magic Number,MPExtended.Libraries.Service.Network,Impersonator,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Network\Impersonator.cs,DoImpersonation,The following statement contains a magic number: DuplicateToken(token' 2' ref duplicatedToken) == 0
Magic Number,MPExtended.Libraries.Service.Network,NetworkInformation,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Network\NetworkInformation.cs,GetMACAddresses,The following statement contains a magic number: return GetNetworkInterfaces()                  .Where(x => x.PhysicalAddress != null && x.PhysicalAddress.GetAddressBytes().Length == 6)                  .Select(x => x.PhysicalAddress.ToString())                  .Distinct();
Magic Number,MPExtended.Libraries.Service.Shared.Filters,FilterParser,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Shared\Filters\FilterParser.cs,Parse,The following statement contains a magic number: pos = -2;
Magic Number,MPExtended.Libraries.Service.Shared,DiskSpaceInformation,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Shared\DiskSpaceInformation.cs,GetSpaceInformation,The following statement contains a magic number: return new WebDiskSpaceInformation()              {                  Disk = directory'                  Available = (float)Math.Round(freeBytes / 1024.0 / 1024 / 1024' 2)'                  Size = (float)Math.Round(totalBytes / 1024.0 / 1024 / 1024' 2)'                  Used = (float)Math.Round((totalBytes - freeBytes) / 1024.0 / 1024 / 1024' 2)'                  PercentageUsed = totalBytes > 0 ? (float)(100 - Math.Round((float)freeBytes / (float)totalBytes * 100' 1)) : (float)0              };
Magic Number,MPExtended.Libraries.Service.Shared,DiskSpaceInformation,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Shared\DiskSpaceInformation.cs,GetSpaceInformation,The following statement contains a magic number: return new WebDiskSpaceInformation()              {                  Disk = directory'                  Available = (float)Math.Round(freeBytes / 1024.0 / 1024 / 1024' 2)'                  Size = (float)Math.Round(totalBytes / 1024.0 / 1024 / 1024' 2)'                  Used = (float)Math.Round((totalBytes - freeBytes) / 1024.0 / 1024 / 1024' 2)'                  PercentageUsed = totalBytes > 0 ? (float)(100 - Math.Round((float)freeBytes / (float)totalBytes * 100' 1)) : (float)0              };
Magic Number,MPExtended.Libraries.Service.Shared,DiskSpaceInformation,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Shared\DiskSpaceInformation.cs,GetSpaceInformation,The following statement contains a magic number: return new WebDiskSpaceInformation()              {                  Disk = directory'                  Available = (float)Math.Round(freeBytes / 1024.0 / 1024 / 1024' 2)'                  Size = (float)Math.Round(totalBytes / 1024.0 / 1024 / 1024' 2)'                  Used = (float)Math.Round((totalBytes - freeBytes) / 1024.0 / 1024 / 1024' 2)'                  PercentageUsed = totalBytes > 0 ? (float)(100 - Math.Round((float)freeBytes / (float)totalBytes * 100' 1)) : (float)0              };
Magic Number,MPExtended.Libraries.Service.Shared,DiskSpaceInformation,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Shared\DiskSpaceInformation.cs,GetSpaceInformation,The following statement contains a magic number: return new WebDiskSpaceInformation()              {                  Disk = directory'                  Available = (float)Math.Round(freeBytes / 1024.0 / 1024 / 1024' 2)'                  Size = (float)Math.Round(totalBytes / 1024.0 / 1024 / 1024' 2)'                  Used = (float)Math.Round((totalBytes - freeBytes) / 1024.0 / 1024 / 1024' 2)'                  PercentageUsed = totalBytes > 0 ? (float)(100 - Math.Round((float)freeBytes / (float)totalBytes * 100' 1)) : (float)0              };
Magic Number,MPExtended.Libraries.Service.Shared,DiskSpaceInformation,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Shared\DiskSpaceInformation.cs,GetSpaceInformation,The following statement contains a magic number: return new WebDiskSpaceInformation()              {                  Disk = directory'                  Available = (float)Math.Round(freeBytes / 1024.0 / 1024 / 1024' 2)'                  Size = (float)Math.Round(totalBytes / 1024.0 / 1024 / 1024' 2)'                  Used = (float)Math.Round((totalBytes - freeBytes) / 1024.0 / 1024 / 1024' 2)'                  PercentageUsed = totalBytes > 0 ? (float)(100 - Math.Round((float)freeBytes / (float)totalBytes * 100' 1)) : (float)0              };
Magic Number,MPExtended.Libraries.Service.Shared,DiskSpaceInformation,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Shared\DiskSpaceInformation.cs,GetSpaceInformation,The following statement contains a magic number: return new WebDiskSpaceInformation()              {                  Disk = directory'                  Available = (float)Math.Round(freeBytes / 1024.0 / 1024 / 1024' 2)'                  Size = (float)Math.Round(totalBytes / 1024.0 / 1024 / 1024' 2)'                  Used = (float)Math.Round((totalBytes - freeBytes) / 1024.0 / 1024 / 1024' 2)'                  PercentageUsed = totalBytes > 0 ? (float)(100 - Math.Round((float)freeBytes / (float)totalBytes * 100' 1)) : (float)0              };
Magic Number,MPExtended.Libraries.Service.Shared,DiskSpaceInformation,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Shared\DiskSpaceInformation.cs,GetSpaceInformation,The following statement contains a magic number: return new WebDiskSpaceInformation()              {                  Disk = directory'                  Available = (float)Math.Round(freeBytes / 1024.0 / 1024 / 1024' 2)'                  Size = (float)Math.Round(totalBytes / 1024.0 / 1024 / 1024' 2)'                  Used = (float)Math.Round((totalBytes - freeBytes) / 1024.0 / 1024 / 1024' 2)'                  PercentageUsed = totalBytes > 0 ? (float)(100 - Math.Round((float)freeBytes / (float)totalBytes * 100' 1)) : (float)0              };
Magic Number,MPExtended.Libraries.Service.Shared,DiskSpaceInformation,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Shared\DiskSpaceInformation.cs,GetSpaceInformation,The following statement contains a magic number: return new WebDiskSpaceInformation()              {                  Disk = directory'                  Available = (float)Math.Round(freeBytes / 1024.0 / 1024 / 1024' 2)'                  Size = (float)Math.Round(totalBytes / 1024.0 / 1024 / 1024' 2)'                  Used = (float)Math.Round((totalBytes - freeBytes) / 1024.0 / 1024 / 1024' 2)'                  PercentageUsed = totalBytes > 0 ? (float)(100 - Math.Round((float)freeBytes / (float)totalBytes * 100' 1)) : (float)0              };
Magic Number,MPExtended.Libraries.Service.Shared,DiskSpaceInformation,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Shared\DiskSpaceInformation.cs,GetSpaceInformation,The following statement contains a magic number: return new WebDiskSpaceInformation()              {                  Disk = directory'                  Available = (float)Math.Round(freeBytes / 1024.0 / 1024 / 1024' 2)'                  Size = (float)Math.Round(totalBytes / 1024.0 / 1024 / 1024' 2)'                  Used = (float)Math.Round((totalBytes - freeBytes) / 1024.0 / 1024 / 1024' 2)'                  PercentageUsed = totalBytes > 0 ? (float)(100 - Math.Round((float)freeBytes / (float)totalBytes * 100' 1)) : (float)0              };
Magic Number,MPExtended.Libraries.Service.Shared,DiskSpaceInformation,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Shared\DiskSpaceInformation.cs,GetSpaceInformation,The following statement contains a magic number: return new WebDiskSpaceInformation()              {                  Disk = directory'                  Available = (float)Math.Round(freeBytes / 1024.0 / 1024 / 1024' 2)'                  Size = (float)Math.Round(totalBytes / 1024.0 / 1024 / 1024' 2)'                  Used = (float)Math.Round((totalBytes - freeBytes) / 1024.0 / 1024 / 1024' 2)'                  PercentageUsed = totalBytes > 0 ? (float)(100 - Math.Round((float)freeBytes / (float)totalBytes * 100' 1)) : (float)0              };
Magic Number,MPExtended.Libraries.Service.Shared,DiskSpaceInformation,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Shared\DiskSpaceInformation.cs,GetSpaceInformation,The following statement contains a magic number: return new WebDiskSpaceInformation()              {                  Disk = directory'                  Available = (float)Math.Round(freeBytes / 1024.0 / 1024 / 1024' 2)'                  Size = (float)Math.Round(totalBytes / 1024.0 / 1024 / 1024' 2)'                  Used = (float)Math.Round((totalBytes - freeBytes) / 1024.0 / 1024 / 1024' 2)'                  PercentageUsed = totalBytes > 0 ? (float)(100 - Math.Round((float)freeBytes / (float)totalBytes * 100' 1)) : (float)0              };
Magic Number,MPExtended.Libraries.Service.Shared,DiskSpaceInformation,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Shared\DiskSpaceInformation.cs,GetSpaceInformation,The following statement contains a magic number: return new WebDiskSpaceInformation()              {                  Disk = directory'                  Available = (float)Math.Round(freeBytes / 1024.0 / 1024 / 1024' 2)'                  Size = (float)Math.Round(totalBytes / 1024.0 / 1024 / 1024' 2)'                  Used = (float)Math.Round((totalBytes - freeBytes) / 1024.0 / 1024 / 1024' 2)'                  PercentageUsed = totalBytes > 0 ? (float)(100 - Math.Round((float)freeBytes / (float)totalBytes * 100' 1)) : (float)0              };
Magic Number,MPExtended.Libraries.Service.Shared,DiskSpaceInformation,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Shared\DiskSpaceInformation.cs,GetSpaceInformation,The following statement contains a magic number: return new WebDiskSpaceInformation()              {                  Disk = directory'                  Available = (float)Math.Round(freeBytes / 1024.0 / 1024 / 1024' 2)'                  Size = (float)Math.Round(totalBytes / 1024.0 / 1024 / 1024' 2)'                  Used = (float)Math.Round((totalBytes - freeBytes) / 1024.0 / 1024 / 1024' 2)'                  PercentageUsed = totalBytes > 0 ? (float)(100 - Math.Round((float)freeBytes / (float)totalBytes * 100' 1)) : (float)0              };
Magic Number,MPExtended.Libraries.Service.Shared,DiskSpaceInformation,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Shared\DiskSpaceInformation.cs,GetSpaceInformation,The following statement contains a magic number: return new WebDiskSpaceInformation()              {                  Disk = directory'                  Available = (float)Math.Round(freeBytes / 1024.0 / 1024 / 1024' 2)'                  Size = (float)Math.Round(totalBytes / 1024.0 / 1024 / 1024' 2)'                  Used = (float)Math.Round((totalBytes - freeBytes) / 1024.0 / 1024 / 1024' 2)'                  PercentageUsed = totalBytes > 0 ? (float)(100 - Math.Round((float)freeBytes / (float)totalBytes * 100' 1)) : (float)0              };
Magic Number,MPExtended.Libraries.Service.Hosting,LogRotation,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Hosting\LogRotation.cs,Rotate,The following statement contains a magic number: info.Length > 1024 * 1024
Magic Number,MPExtended.Libraries.Service.Hosting,LogRotation,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Hosting\LogRotation.cs,Rotate,The following statement contains a magic number: info.Length > 1024 * 1024
Magic Number,MPExtended.Libraries.Service.Hosting,WCFHost,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Hosting\WCFHost.cs,Stop,The following statement contains a magic number: host.Close(TimeSpan.FromMilliseconds(500));
Magic Number,MPExtended.Libraries.Service.MpConnection,AccessRequestingClient,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\MpConnection\AccessRequestingClient.cs,SendShowYesNoDialogRequest,The following statement contains a magic number: msg.DialogId = new Random().Next(0' 10000).ToString();
Magic Number,MPExtended.Libraries.Service.MpConnection,AccessRequestingClient,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\MpConnection\AccessRequestingClient.cs,SendShowSelectDialogRequest,The following statement contains a magic number: msg.DialogId = new Random().Next(0' 10000).ToString();
Magic Number,MPExtended.Libraries.Service.MpConnection,WifiRemoteClient,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\MpConnection\WifiRemoteClient.cs,Connect,The following statement contains a magic number: !socket.Connect(Address' 8017)
Magic Number,MPExtended.Libraries.Service.MpConnection,WifiRemoteClient,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\MpConnection\WifiRemoteClient.cs,HandleWelcomeMessage,The following statement contains a magic number: switch (welcomeMsg.AuthMethod)              {                  // AuthMethod: User&Password or Both                  case 1:                  case 3:                      MessageIdentify identificationMessage = new MessageIdentify();                      identificationMessage.Authenticate = new Authenticate(AuthenticationInformation.Username' AuthenticationInformation.GetPassword());                      SendCommand(identificationMessage);                      break;                    // AuthMethod: Passcode                  case 2:                      Log.Warn("WifiRemoteClient: Passcode authentication not yet implemented");                      break;                    // AuthMethod: None                  case 0:                  default:                      SendCommand(new MessageIdentify());                      break;              }
Magic Number,MPExtended.Libraries.Service.MpConnection,WifiRemoteClient,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\MpConnection\WifiRemoteClient.cs,HandleWelcomeMessage,The following statement contains a magic number: switch (welcomeMsg.AuthMethod)              {                  // AuthMethod: User&Password or Both                  case 1:                  case 3:                      MessageIdentify identificationMessage = new MessageIdentify();                      identificationMessage.Authenticate = new Authenticate(AuthenticationInformation.Username' AuthenticationInformation.GetPassword());                      SendCommand(identificationMessage);                      break;                    // AuthMethod: Passcode                  case 2:                      Log.Warn("WifiRemoteClient: Passcode authentication not yet implemented");                      break;                    // AuthMethod: None                  case 0:                  default:                      SendCommand(new MessageIdentify());                      break;              }
Magic Number,MPExtended.Libraries.Service.Logging,FileDestination,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Logging\FileDestination.cs,FileDestination,The following statement contains a magic number: Output = TextWriter.Synchronized(new StreamWriter(file' Encoding.UTF8' 4096));
Missing Default,MPExtended.Libraries.Service.Config,InstallationProperties,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Config\InstallationProperties.cs,GetInstallDirectory,The following switch statement is missing a default case: switch (product)              {                  case MPExtendedProduct.Service:                  case MPExtendedProduct.Configurator:                      location = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.ProgramFilesX86)' "MPExtended"' "Service");                      break;                  case MPExtendedProduct.WebMediaPortal:                      location = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.ProgramFilesX86)' "MPExtended"' "WebMediaPortal");                      break;              }
Missing Default,MPExtended.Libraries.Service.Util,TranscoderProcess,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\Util\TranscoderProcess.cs,StartAsUser,The following switch statement is missing a default case: switch (StartInfo.WindowStyle)                  {                      case ProcessWindowStyle.Hidden:                          startupInfo.wShowWindow = SW_HIDE;                          break;                      case ProcessWindowStyle.Maximized:                          startupInfo.wShowWindow = SW_MAXIMIZE;                          break;                      case ProcessWindowStyle.Minimized:                          startupInfo.wShowWindow = SW_MINIMIZE;                          break;                      case ProcessWindowStyle.Normal:                          startupInfo.wShowWindow = SW_SHOW;                          break;                  }
Missing Default,MPExtended.Libraries.Service.MpConnection,WifiRemoteClient,C:\research\architectureSmells\repos\MPExtended_MPExtended\Libraries\MPExtended.Libraries.Service\MpConnection\WifiRemoteClient.cs,socket_DidRead,The following switch statement is missing a default case: switch (type)                      {                                              // {"Type":"welcome"'"Server_Version":4'"AuthMethod":0}                          case "welcome":                              HandleWelcomeMessage(msg);                              break;                            // {"Type":"authenticationresponse"'"Success":true'"ErrorMessage":null}                          case "authenticationresponse":                              HandleAuthenticationResponse(msg);                              break;                          case "dialogResult":                              HandleDialogResult(msg);                              break;                          case "dialog":                              HandleDialogMessage(msg);                              break;                      }
