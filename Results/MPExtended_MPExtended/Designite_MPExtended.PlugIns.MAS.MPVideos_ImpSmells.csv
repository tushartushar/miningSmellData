Implementation smell,Namespace,Class,File,Method,Description
Long Statement,MPExtended.PlugIns.MAS.MPVideos,ArtworkRetriever,C:\research\architectureSmells\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MPVideos\ArtworkRetriever.cs,DownloadFile,The length of the statement  "            string tmpPath = Path.Combine(Installation.GetCacheDirectory()' "imagecache"' String.Format("mpvideos_{0:X8}{1}"' url.ToString().GetHashCode()' extension)); " is 156.
Long Statement,MPExtended.PlugIns.MAS.MPVideos,MPVideos,C:\research\architectureSmells\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MPVideos\MPVideos.cs,LoadMovies,The length of the statement  "            string mp13Fields = Mediaportal.GetVersion() >= Mediaportal.MediaPortalVersion.MP1_3 ? "i.strDirector' i.dateAdded' " : String.Empty; " is 133.
Long Statement,MPExtended.PlugIns.MAS.MPVideos,MPVideos,C:\research\architectureSmells\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MPVideos\MPVideos.cs,LoadMovies,The length of the statement  "                "SELECT m.idMovie' i.strTitle' i.iYear' i.fRating' i.runtime' i.IMDBID' i.strPlot' i.strPictureURL' i.strCredits' i.iswatched' " + mp13Fields + " is 143.
Magic Number,MPExtended.PlugIns.MAS.MPVideos,MPVideos,C:\research\architectureSmells\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MPVideos\MPVideos.cs,Search,The following statement contains a magic number: IEnumerable<WebSearchResult> titleResults = ReadList<WebSearchResult>(sql' delegate(SQLiteDataReader reader)                  {                      string title = reader.ReadString(1);                      string genres = reader.ReadString(3);                      return new WebSearchResult()                      {                          Type = WebMediaType.Movie'                          Id = reader.ReadIntAsString(0)'                          Title = title'                          Score = (int)Math.Round(40 + (decimal)text.Length / title.Length * 40)'                          Details = new WebDictionary<string>()                      {                          { "Year"' reader.ReadIntAsString(2) }'                          { "Genres"' genres == "unknown" ? String.Empty : genres }                      }                      };                  }' param);
Magic Number,MPExtended.PlugIns.MAS.MPVideos,MPVideos,C:\research\architectureSmells\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MPVideos\MPVideos.cs,Search,The following statement contains a magic number: IEnumerable<WebSearchResult> titleResults = ReadList<WebSearchResult>(sql' delegate(SQLiteDataReader reader)                  {                      string title = reader.ReadString(1);                      string genres = reader.ReadString(3);                      return new WebSearchResult()                      {                          Type = WebMediaType.Movie'                          Id = reader.ReadIntAsString(0)'                          Title = title'                          Score = (int)Math.Round(40 + (decimal)text.Length / title.Length * 40)'                          Details = new WebDictionary<string>()                      {                          { "Year"' reader.ReadIntAsString(2) }'                          { "Genres"' genres == "unknown" ? String.Empty : genres }                      }                      };                  }' param);
Magic Number,MPExtended.PlugIns.MAS.MPVideos,MPVideos,C:\research\architectureSmells\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MPVideos\MPVideos.cs,Search,The following statement contains a magic number: IEnumerable<WebSearchResult> titleResults = ReadList<WebSearchResult>(sql' delegate(SQLiteDataReader reader)                  {                      string title = reader.ReadString(1);                      string genres = reader.ReadString(3);                      return new WebSearchResult()                      {                          Type = WebMediaType.Movie'                          Id = reader.ReadIntAsString(0)'                          Title = title'                          Score = (int)Math.Round(40 + (decimal)text.Length / title.Length * 40)'                          Details = new WebDictionary<string>()                      {                          { "Year"' reader.ReadIntAsString(2) }'                          { "Genres"' genres == "unknown" ? String.Empty : genres }                      }                      };                  }' param);
Magic Number,MPExtended.PlugIns.MAS.MPVideos,MPVideos,C:\research\architectureSmells\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MPVideos\MPVideos.cs,Search,The following statement contains a magic number: IEnumerable<WebSearchResult> titleResults = ReadList<WebSearchResult>(sql' delegate(SQLiteDataReader reader)                  {                      string title = reader.ReadString(1);                      string genres = reader.ReadString(3);                      return new WebSearchResult()                      {                          Type = WebMediaType.Movie'                          Id = reader.ReadIntAsString(0)'                          Title = title'                          Score = (int)Math.Round(40 + (decimal)text.Length / title.Length * 40)'                          Details = new WebDictionary<string>()                      {                          { "Year"' reader.ReadIntAsString(2) }'                          { "Genres"' genres == "unknown" ? String.Empty : genres }                      }                      };                  }' param);
Magic Number,MPExtended.PlugIns.MAS.MPVideos,MPVideos,C:\research\architectureSmells\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MPVideos\MPVideos.cs,Search,The following statement contains a magic number: IEnumerable<WebSearchResult> actorResults = ReadList<WebSearchResult>(actorSql' delegate(SQLiteDataReader reader)                  {                      string genres = reader.ReadString(4);                      return new WebSearchResult()                      {                          Type = WebMediaType.Movie'                          Id = reader.ReadIntAsString(1)'                          Title = reader.ReadString(2)'                          Score = (int)Math.Round(40 + (decimal)text.Length / reader.ReadString(0).Length * 30)'                          Details = new WebDictionary<string>()                      {                          { "Year"' reader.ReadIntAsString(3) }'                          { "Genres"' genres == "unknown" ? String.Empty : genres }                      }                      };                  }' param);
Magic Number,MPExtended.PlugIns.MAS.MPVideos,MPVideos,C:\research\architectureSmells\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MPVideos\MPVideos.cs,Search,The following statement contains a magic number: IEnumerable<WebSearchResult> actorResults = ReadList<WebSearchResult>(actorSql' delegate(SQLiteDataReader reader)                  {                      string genres = reader.ReadString(4);                      return new WebSearchResult()                      {                          Type = WebMediaType.Movie'                          Id = reader.ReadIntAsString(1)'                          Title = reader.ReadString(2)'                          Score = (int)Math.Round(40 + (decimal)text.Length / reader.ReadString(0).Length * 30)'                          Details = new WebDictionary<string>()                      {                          { "Year"' reader.ReadIntAsString(3) }'                          { "Genres"' genres == "unknown" ? String.Empty : genres }                      }                      };                  }' param);
Magic Number,MPExtended.PlugIns.MAS.MPVideos,MPVideos,C:\research\architectureSmells\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MPVideos\MPVideos.cs,Search,The following statement contains a magic number: IEnumerable<WebSearchResult> actorResults = ReadList<WebSearchResult>(actorSql' delegate(SQLiteDataReader reader)                  {                      string genres = reader.ReadString(4);                      return new WebSearchResult()                      {                          Type = WebMediaType.Movie'                          Id = reader.ReadIntAsString(1)'                          Title = reader.ReadString(2)'                          Score = (int)Math.Round(40 + (decimal)text.Length / reader.ReadString(0).Length * 30)'                          Details = new WebDictionary<string>()                      {                          { "Year"' reader.ReadIntAsString(3) }'                          { "Genres"' genres == "unknown" ? String.Empty : genres }                      }                      };                  }' param);
Magic Number,MPExtended.PlugIns.MAS.MPVideos,MPVideos,C:\research\architectureSmells\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MPVideos\MPVideos.cs,Search,The following statement contains a magic number: IEnumerable<WebSearchResult> actorResults = ReadList<WebSearchResult>(actorSql' delegate(SQLiteDataReader reader)                  {                      string genres = reader.ReadString(4);                      return new WebSearchResult()                      {                          Type = WebMediaType.Movie'                          Id = reader.ReadIntAsString(1)'                          Title = reader.ReadString(2)'                          Score = (int)Math.Round(40 + (decimal)text.Length / reader.ReadString(0).Length * 30)'                          Details = new WebDictionary<string>()                      {                          { "Year"' reader.ReadIntAsString(3) }'                          { "Genres"' genres == "unknown" ? String.Empty : genres }                      }                      };                  }' param);
Magic Number,MPExtended.PlugIns.MAS.MPVideos,MPVideos,C:\research\architectureSmells\repos\MPExtended_MPExtended\PlugIns\MPExtended.PlugIns.MAS.MPVideos\MPVideos.cs,Search,The following statement contains a magic number: IEnumerable<WebSearchResult> actorResults = ReadList<WebSearchResult>(actorSql' delegate(SQLiteDataReader reader)                  {                      string genres = reader.ReadString(4);                      return new WebSearchResult()                      {                          Type = WebMediaType.Movie'                          Id = reader.ReadIntAsString(1)'                          Title = reader.ReadString(2)'                          Score = (int)Math.Round(40 + (decimal)text.Length / reader.ReadString(0).Length * 30)'                          Details = new WebDictionary<string>()                      {                          { "Year"' reader.ReadIntAsString(3) }'                          { "Genres"' genres == "unknown" ? String.Empty : genres }                      }                      };                  }' param);
