Implementation smell,Namespace,Class,File,Method,Description
Long Statement,MPExtended.Tests.Libraries.Service.Config.Tests,Upgrading,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Config\Tests\Upgrading.cs,Streaming,The length of the statement  "            Assert.Equal("a94a8fe5ccb19ba61c4c0873d391e987982fbbd3"' Configuration.Streaming.WatchSharing.TraktConfiguration["passwordHash"]); " is 130.
Long Statement,MPExtended.Tests.Libraries.Service.Config.Tests,Parsing,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Config\Tests\Parsing.cs,MediaAccess,The length of the statement  "            Assert.Equal(Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData)' "path")' path.Value); " is 123.
Long Statement,MPExtended.Tests.Libraries.Service.Config.Tests,Parsing,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Config\Tests\Parsing.cs,StreamingProfiles,The length of the statement  "            Assert.Equal(Path.Combine(Installation.Properties.SourceRoot' "Libraries"' "Streaming"' "ffmpeg.exe")' Configuration.StreamingProfiles.FFMpegPath); " is 147.
Long Statement,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The length of the statement  "                "30 People"' "8 Shoes"' "  10 Developers"' "The 4 Lists"' "A list of 12 items"' "A list of 56 movies"' "A list of 56 series"'  " is 125.
Long Statement,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The length of the statement  "                "Total I"' "Total II"' "Total III"' "Total IV"' "Total V"' "Total VI"' "Total VII"' "Total VIII"' "Total IX"' "Total X"' "Total XI" " is 131.
Long Statement,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,CreateV6Mask,The length of the statement  "            byte[] mask = new byte[16] { 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF }; " is 126.
Long Statement,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Tokenizer,The length of the statement  "            tokenizer = new Tokenizer(@"Field=Value'AnotherField    $= 'AnotherValue'| NumericField> 5' DoubleQuoted ^= ""double quoted"""); " is 128.
Long Statement,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Tokenizer,The length of the statement  "            expectedTokens = new string[] { "Field"' "="' "Value"' "'"' "AnotherField"' "$="' "AnotherValue"' "|"' "NumericField"' ">"' "5"' "'"' " is 133.
Long Statement,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Tokenizer,The length of the statement  "            tokenizer = new Tokenizer(@"EscapedField='hoi\'test\\more'    'ComplicatedField=""test\\\"""" | withoutQuotes=hello\'more"); " is 124.
Long Statement,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Tokenizer,The length of the statement  "            tokenizer = new Tokenizer(@"Field=Name With Whitespace'   AnotherField ^=  Prefixed and Suffixed space   | QuotedField='   Includes space  '"); " is 143.
Long Statement,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Tokenizer,The length of the statement  "            expectedTokens = new string[] { "Field"' "="' "Name With Whitespace"' "'"' "AnotherField"' "^="' "Prefixed and Suffixed space"' "|"'  " is 132.
Long Statement,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Tokenizer,The length of the statement  "            tokenizer = new Tokenizer(@"SomeField    = Contains A Value' FirstList = [ 'hello''another     ' more values ]' PipeList*=[xyz|abc def|ghi|'quot|ed']"); " is 152.
Long Statement,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Tokenizer,The length of the statement  "            expectedTokens = new string[] { "SomeField"' "="' "Contains A Value"' "'"' "FirstList"' "="' "["' "hello"' "'"' "another"' "'"' "more values"' "]"' "'"' " is 152.
Long Statement,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Tokenizer,The length of the statement  "            expectedTokens = new string[] { "Field"' "="' "["' "Item1"' "'"' "Item2"' "'"' "Item3"' "]"' "|"' "SecondField"' "="' "["' "Item4"' "|"' "Item5"' "]"' " is 150.
Long Statement,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Parser,The length of the statement  "            parser = new FilterParser("FirstField=Value' SecondField=OtherValue | OrSecond = SomethingElse | OrThird ~= Field' Last*=[Hello|Bye]"); " is 135.
Long Statement,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Filter,The length of the statement  "            Assert.True(TestAgainstFilter("Field *= [efgh' hijk]"' new { Field = new string[] { "abcd"' "efgh"' "hijk"' "lmno" } })); " is 121.
Long Statement,MPExtended.Tests.Libraries.Service,TestEnvironment,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\TestEnvironment.cs,CreateProperties,The length of the statement  "            prop.SourceRoot = Path.GetFullPath(Path.Combine(Path.GetDirectoryName(Assembly.GetExecutingAssembly().CodeBase.Replace("file:///"' ""))' "../../../..")); " is 153.
Long Statement,MPExtended.Tests.Libraries.Service,TestEnvironment,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\TestEnvironment.cs,CreateProperties,The length of the statement  "            prop.CacheDirectory = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData)' "MPExtended"' "Cache"); " is 134.
Long Statement,MPExtended.Tests.Libraries.Service,TestEnvironment,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\TestEnvironment.cs,CreateProperties,The length of the statement  "            prop.LogDirectory = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData)' "MPExtended"' "Logs"); " is 131.
Long Statement,MPExtended.Tests.Libraries.Service.Util,PathUtilTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Util\PathUtilTests.cs,StripInvalidCharacters,The length of the statement  "            Assert.Equal("strip multimultimultinumbersmulti"' PathUtil.StripInvalidCharacters("strip 123numbers1"' new char[] { '0'' '1'' '2'' '3' }' "multi")); " is 148.
Long Statement,MPExtended.Tests.Libraries.Service.Util,PathUtilTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Util\PathUtilTests.cs,GetAbsolutePath,The length of the statement  "            Assert.Equal(@"C:\Parent\OtherChild\file.txt"' PathUtil.GetAbsolutePath(@"C:\Parent\Child"' @"..\OtherChild\file.txt")); " is 120.
Long Statement,MPExtended.Tests.Libraries.Service.WCF,CustomQueryStringConverterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\WCF\CustomQueryStringConverterTests.cs,TestCustomFeatures,The length of the statement  "            Assert.Equal(new DateTime(2012' 8' 7' 15' 00' 00' DateTimeKind.Utc).ToLocalTime()' converter.ConvertStringToValue("2012-08-07T15:00:00Z"' typeof(DateTime))); " is 157.
Long Statement,MPExtended.Tests.Libraries.Service.WCF,CustomQueryStringConverterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\WCF\CustomQueryStringConverterTests.cs,TestCustomFeatures,The length of the statement  "            Assert.Equal(new DateTime(2012' 8' 7' 0' 0' 0' DateTimeKind.Local)' converter.ConvertStringToValue("2012-08-07"' typeof(DateTime))); " is 132.
Long Statement,MPExtended.Tests.Libraries.Service.WCF,CustomQueryStringConverterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\WCF\CustomQueryStringConverterTests.cs,TestCustomFeatures,The length of the statement  "            Assert.Equal(new DateTime(2012' 1' 17' 14' 52' 29' DateTimeKind.Utc).ToLocalTime()' converter.ConvertStringToValue("/Date(1326815549000+0000)/"' typeof(DateTime))); " is 164.
Magic Number,MPExtended.Tests.Libraries.Service.Config.Tests,Upgrading,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Config\Tests\Upgrading.cs,MediaAccess,The following statement contains a magic number: Assert.Equal(2' Configuration.Media.PluginConfiguration.Count);
Magic Number,MPExtended.Tests.Libraries.Service.Config.Tests,Upgrading,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Config\Tests\Upgrading.cs,MediaAccess,The following statement contains a magic number: Assert.Equal(2' Configuration.Media.PluginConfiguration["PluginA"].Count);
Magic Number,MPExtended.Tests.Libraries.Service.Config.Tests,Upgrading,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Config\Tests\Upgrading.cs,Authentication,The following statement contains a magic number: Assert.Equal(2' Configuration.Authentication.Users.Count);
Magic Number,MPExtended.Tests.Libraries.Service.Config.Tests,Upgrading,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Config\Tests\Upgrading.cs,Services,The following statement contains a magic number: Assert.Equal(8888' Configuration.Services.Port);
Magic Number,MPExtended.Tests.Libraries.Service.Config.Tests,Upgrading,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Config\Tests\Upgrading.cs,WebMediaPortalHosting,The following statement contains a magic number: Assert.Equal(9999' Configuration.WebMediaPortalHosting.Port);
Magic Number,MPExtended.Tests.Libraries.Service.Config.Tests,Features,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Config\Tests\Features.cs,DefaultPort,The following statement contains a magic number: Assert.Equal(4322' Configuration.DEFAULT_PORT);
Magic Number,MPExtended.Tests.Libraries.Service.Config.Tests,Parsing,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Config\Tests\Parsing.cs,MediaAccess,The following statement contains a magic number: Assert.Equal(3' Configuration.Media.PluginConfiguration.Count);
Magic Number,MPExtended.Tests.Libraries.Service.Config.Tests,Parsing,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Config\Tests\Parsing.cs,MediaAccess,The following statement contains a magic number: Assert.Equal(2' testPlugin.Count);
Magic Number,MPExtended.Tests.Libraries.Service.Config.Tests,Parsing,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Config\Tests\Parsing.cs,Services,The following statement contains a magic number: Assert.Equal(4322' Configuration.Services.Port);
Magic Number,MPExtended.Tests.Libraries.Service.Config.Tests,Parsing,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Config\Tests\Parsing.cs,StreamingProfiles,The following statement contains a magic number: Assert.Equal(2' profiles.Count);
Magic Number,MPExtended.Tests.Libraries.Service.Config.Tests,Parsing,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Config\Tests\Parsing.cs,StreamingProfiles,The following statement contains a magic number: Assert.Equal(1400' firstProfile.Bandwidth);
Magic Number,MPExtended.Tests.Libraries.Service.Config.Tests,Parsing,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Config\Tests\Parsing.cs,StreamingProfiles,The following statement contains a magic number: Assert.Equal(2' firstProfile.Targets.Count);
Magic Number,MPExtended.Tests.Libraries.Service.Config.Tests,Parsing,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Config\Tests\Parsing.cs,StreamingProfiles,The following statement contains a magic number: Assert.Equal(800' firstProfile.MaxOutputWidth);
Magic Number,MPExtended.Tests.Libraries.Service.Config.Tests,Parsing,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Config\Tests\Parsing.cs,StreamingProfiles,The following statement contains a magic number: Assert.Equal(600' firstProfile.MaxOutputHeight);
Magic Number,MPExtended.Tests.Libraries.Service.Config.Tests,Parsing,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Config\Tests\Parsing.cs,StreamingProfiles,The following statement contains a magic number: Assert.Equal(2' secondProfile.TranscoderParameters.Count);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Prefixes,The following statement contains a magic number: Assert.Equal(9' sorted.Count);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Prefixes,The following statement contains a magic number: Assert.Equal("The Something"' sorted[2]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Prefixes,The following statement contains a magic number: Assert.Equal("Something ABC"' sorted[3]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Prefixes,The following statement contains a magic number: Assert.Equal("  The  Something Else"' sorted[4]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Prefixes,The following statement contains a magic number: Assert.Equal("Suffixed The Left Alone"' sorted[5]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Prefixes,The following statement contains a magic number: Assert.Equal("Without a prefix"' sorted[6]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Prefixes,The following statement contains a magic number: Assert.Equal("A Working Example"' sorted[7]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Prefixes,The following statement contains a magic number: Assert.Equal("Worklll"' sorted[8]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The following statement contains a magic number: Assert.Equal(31' sorted.Count);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The following statement contains a magic number: Assert.Equal("8 Shoes"' sorted[2]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The following statement contains a magic number: Assert.Equal("  10 Developers"' sorted[3]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The following statement contains a magic number: Assert.Equal("30 People"' sorted[4]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The following statement contains a magic number: Assert.Equal("74 Alphabets"' sorted[5]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The following statement contains a magic number: Assert.Equal("74 windows"' sorted[6]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The following statement contains a magic number: Assert.Equal("The 74th item"' sorted[7]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The following statement contains a magic number: Assert.Equal("caseinsensitife"' sorted[8]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The following statement contains a magic number: Assert.Equal("CASEINSEnsitiVE"' sorted[9]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The following statement contains a magic number: Assert.Equal("A list of 12 items"' sorted[10]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The following statement contains a magic number: Assert.Equal("A list of LVI episodes"' sorted[11]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The following statement contains a magic number: Assert.Equal("A list of 56 movies"' sorted[12]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The following statement contains a magic number: Assert.Equal("A list of 56 series"' sorted[13]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The following statement contains a magic number: Assert.Equal("A list of 101 projects"' sorted[14]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The following statement contains a magic number: Assert.Equal("Roman XIV"' sorted[15]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The following statement contains a magic number: Assert.Equal("Roman CVLI"' sorted[16]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The following statement contains a magic number: Assert.Equal("Roman 147"' sorted[17]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The following statement contains a magic number: Assert.Equal("Roman CLC"' sorted[18]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The following statement contains a magic number: Assert.Equal("Something random"' sorted[19]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The following statement contains a magic number: Assert.Equal("Total I"' sorted[20]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The following statement contains a magic number: Assert.Equal("Total II"' sorted[21]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The following statement contains a magic number: Assert.Equal("Total III"' sorted[22]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The following statement contains a magic number: Assert.Equal("Total IV"' sorted[23]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The following statement contains a magic number: Assert.Equal("Total V"' sorted[24]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The following statement contains a magic number: Assert.Equal("Total VI"' sorted[25]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The following statement contains a magic number: Assert.Equal("Total VII"' sorted[26]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The following statement contains a magic number: Assert.Equal("Total VIII"' sorted[27]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The following statement contains a magic number: Assert.Equal("Total IX"' sorted[28]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The following statement contains a magic number: Assert.Equal("Total X"' sorted[29]);
Magic Number,MPExtended.Tests.Libraries.Service.Extensions,NaturalSorting,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Extensions\NaturalSorting.cs,Numericals,The following statement contains a magic number: Assert.Equal("Total XI"' sorted[30]);
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,CreateV6Mask,The following statement contains a magic number: byte[] mask = new byte[16] { 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF };
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,CreateV6Mask,The following statement contains a magic number: mask[(127 - i) / 8] ^= (byte)Math.Pow(2' i % 8);
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,CreateV6Mask,The following statement contains a magic number: mask[(127 - i) / 8] ^= (byte)Math.Pow(2' i % 8);
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,CreateV6Mask,The following statement contains a magic number: mask[(127 - i) / 8] ^= (byte)Math.Pow(2' i % 8);
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,CreateV6Mask,The following statement contains a magic number: mask[(127 - i) / 8] ^= (byte)Math.Pow(2' i % 8);
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.Equal(addressA.GetNetworkAddress(new byte[] { 255' 255' 255' 0 })' new IPAddress(new byte[] { 10' 11' 12' 0 }));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.Equal(addressA.GetNetworkAddress(new byte[] { 255' 255' 255' 0 })' new IPAddress(new byte[] { 10' 11' 12' 0 }));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.Equal(addressA.GetNetworkAddress(new byte[] { 255' 255' 255' 0 })' new IPAddress(new byte[] { 10' 11' 12' 0 }));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.Equal(addressA.GetNetworkAddress(new byte[] { 255' 255' 255' 0 })' new IPAddress(new byte[] { 10' 11' 12' 0 }));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.Equal(addressA.GetNetworkAddress(new byte[] { 255' 255' 255' 0 })' new IPAddress(new byte[] { 10' 11' 12' 0 }));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.Equal(addressA.GetNetworkAddress(new byte[] { 255' 255' 255' 0 })' new IPAddress(new byte[] { 10' 11' 12' 0 }));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.Equal(addressB.GetNetworkAddress(new byte[] { 255' 255' 254' 0 })' new IPAddress(new byte[] { 10' 11' 10' 0 }));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.Equal(addressB.GetNetworkAddress(new byte[] { 255' 255' 254' 0 })' new IPAddress(new byte[] { 10' 11' 10' 0 }));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.Equal(addressB.GetNetworkAddress(new byte[] { 255' 255' 254' 0 })' new IPAddress(new byte[] { 10' 11' 10' 0 }));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.Equal(addressB.GetNetworkAddress(new byte[] { 255' 255' 254' 0 })' new IPAddress(new byte[] { 10' 11' 10' 0 }));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.Equal(addressB.GetNetworkAddress(new byte[] { 255' 255' 254' 0 })' new IPAddress(new byte[] { 10' 11' 10' 0 }));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.Equal(addressB.GetNetworkAddress(new byte[] { 255' 255' 254' 0 })' new IPAddress(new byte[] { 10' 11' 10' 0 }));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.Equal(addressB.GetNetworkAddress(new byte[] { 255' 128' 0' 0 })'   new IPAddress(new byte[] { 10' 0' 0' 0 }));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.Equal(addressB.GetNetworkAddress(new byte[] { 255' 128' 0' 0 })'   new IPAddress(new byte[] { 10' 0' 0' 0 }));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.Equal(addressB.GetNetworkAddress(new byte[] { 255' 128' 0' 0 })'   new IPAddress(new byte[] { 10' 0' 0' 0 }));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.Equal(address6A.GetNetworkAddress(CreateV6Mask(64))' IPAddress.Parse("2001:0DB8:AC10:FE01::"));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => addressA.GetNetworkAddress(CreateV6Mask(64)));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.True(addressA.IsInSameSubnet(addressB' new byte[] { 255' 255' 0' 0 }));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.True(addressA.IsInSameSubnet(addressB' new byte[] { 255' 255' 0' 0 }));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.False(addressA.IsInSameSubnet(addressB' new byte[] { 255' 255' 255' 0 }));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.False(addressA.IsInSameSubnet(addressB' new byte[] { 255' 255' 255' 0 }));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.False(addressA.IsInSameSubnet(addressB' new byte[] { 255' 255' 255' 0 }));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.False(addressA.IsInSameSubnet(addressC' new byte[] { 255' 0' 0' 0 }));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.True(address6A.IsInSameSubnet(address6B' CreateV6Mask(64)));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.True(address6A.IsInSameSubnet(address6B' CreateV6Mask(32)));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.False(address6A.IsInSameSubnet(address6B' CreateV6Mask(16)));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.False(address6B.IsInSameSubnet(address6C' CreateV6Mask(64)));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.False(address6A.IsInSameSubnet(addressA' new byte[] { 255' 255' 255' 0 }));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.False(address6A.IsInSameSubnet(addressA' new byte[] { 255' 255' 255' 0 }));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.False(address6A.IsInSameSubnet(addressA' new byte[] { 255' 255' 255' 0 }));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => addressA.IsInSameSubnet(addressB' CreateV6Mask(64)));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => address6A.IsInSameSubnet(address6B' new byte[] { 255' 255' 0' 0 }));
Magic Number,MPExtended.Tests.Libraries.Service.Network,IPAddressTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Network\IPAddressTests.cs,ExtensionMethods,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => address6A.IsInSameSubnet(address6B' new byte[] { 255' 255' 0' 0 }));
Magic Number,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Parser,The following statement contains a magic number: Assert.Equal(3' ((FilterAndSet)filters).Count);
Magic Number,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Parser,The following statement contains a magic number: Assert.Equal(3' (filters[1] as FilterOrSet).Count);
Magic Number,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Parser,The following statement contains a magic number: Assert.Equal("OrThird"' ((filters[1] as FilterOrSet)[2] as Filter).Field);
Magic Number,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Parser,The following statement contains a magic number: Assert.Equal("~="' ((filters[1] as FilterOrSet)[2] as Filter).Operator);
Magic Number,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Parser,The following statement contains a magic number: Assert.Equal("Field"' ((filters[1] as FilterOrSet)[2] as Filter).Value);
Magic Number,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Parser,The following statement contains a magic number: Assert.IsType<ListFilter>(filters[2]);
Magic Number,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Parser,The following statement contains a magic number: Assert.Equal("Last"' (filters[2] as ListFilter).Field);
Magic Number,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Parser,The following statement contains a magic number: Assert.Equal("*="' (filters[2] as ListFilter).Operator);
Magic Number,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Parser,The following statement contains a magic number: Assert.Equal(2' (filters[2] as ListFilter).Values.Length);
Magic Number,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Parser,The following statement contains a magic number: Assert.Equal(2' (filters[2] as ListFilter).Values.Length);
Magic Number,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Parser,The following statement contains a magic number: Assert.Equal(ListFilter.JoinType.Or' (filters[2] as ListFilter).Type);
Magic Number,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Parser,The following statement contains a magic number: Assert.Equal("Hello"' (filters[2] as ListFilter).Values[0]);
Magic Number,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Parser,The following statement contains a magic number: Assert.Equal("Bye"' (filters[2] as ListFilter).Values[1]);
Magic Number,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Filter,The following statement contains a magic number: Assert.True(TestAgainstFilter("Field <= 8"' new { Field = 8 }));
Magic Number,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Filter,The following statement contains a magic number: Assert.True(TestAgainstFilter("Field > 1234567890"' new { Field = 1234567891L }));
Magic Number,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Filter,The following statement contains a magic number: Assert.False(TestAgainstFilter("Field != 800"' new { Field = 800L }));
Magic Number,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Filter,The following statement contains a magic number: Assert.True(TestAgainstFilter("Field *= 8"' new { Field = new List<int>() { 5' 7' 8 } }));
Magic Number,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Filter,The following statement contains a magic number: Assert.True(TestAgainstFilter("Field *= 8"' new { Field = new List<int>() { 5' 7' 8 } }));
Magic Number,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Filter,The following statement contains a magic number: Assert.True(TestAgainstFilter("Field *= 8"' new { Field = new List<int>() { 5' 7' 8 } }));
Magic Number,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Filter,The following statement contains a magic number: Assert.True(TestAgainstFilter("Field = [3' 8]"' new { Field = 3 }));
Magic Number,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Filter,The following statement contains a magic number: Assert.True(TestAgainstFilter("Field = [3' 8]"' new { Field = 8 }));
Magic Number,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Filter,The following statement contains a magic number: Assert.False(TestAgainstFilter("Field = [3' 8]"' new { Field = 9L }));
Magic Number,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Filter,The following statement contains a magic number: Assert.False(TestAgainstFilter("Field != [3' 8]"' new { Field = 3L }));
Magic Number,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Filter,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => TestAgainstFilter("Field != abc"' new { Field = 3 }));
Magic Number,MPExtended.Tests.Libraries.Service.Shared,FilterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\Shared\FilterTests.cs,Filter,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => TestAgainstFilter("Field != abc"' new { Field = 8L }));
Magic Number,MPExtended.Tests.Libraries.Service.WCF,CustomQueryStringConverterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\WCF\CustomQueryStringConverterTests.cs,TestCustomFeatures,The following statement contains a magic number: Assert.Equal("5"' converter.ConvertValueToString(5' typeof(int?)));
Magic Number,MPExtended.Tests.Libraries.Service.WCF,CustomQueryStringConverterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\WCF\CustomQueryStringConverterTests.cs,TestCustomFeatures,The following statement contains a magic number: Assert.Equal(new DateTime(2012' 8' 7' 15' 00' 00' DateTimeKind.Utc).ToLocalTime()' converter.ConvertStringToValue("2012-08-07T15:00:00Z"' typeof(DateTime)));
Magic Number,MPExtended.Tests.Libraries.Service.WCF,CustomQueryStringConverterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\WCF\CustomQueryStringConverterTests.cs,TestCustomFeatures,The following statement contains a magic number: Assert.Equal(new DateTime(2012' 8' 7' 15' 00' 00' DateTimeKind.Utc).ToLocalTime()' converter.ConvertStringToValue("2012-08-07T15:00:00Z"' typeof(DateTime)));
Magic Number,MPExtended.Tests.Libraries.Service.WCF,CustomQueryStringConverterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\WCF\CustomQueryStringConverterTests.cs,TestCustomFeatures,The following statement contains a magic number: Assert.Equal(new DateTime(2012' 8' 7' 15' 00' 00' DateTimeKind.Utc).ToLocalTime()' converter.ConvertStringToValue("2012-08-07T15:00:00Z"' typeof(DateTime)));
Magic Number,MPExtended.Tests.Libraries.Service.WCF,CustomQueryStringConverterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\WCF\CustomQueryStringConverterTests.cs,TestCustomFeatures,The following statement contains a magic number: Assert.Equal(new DateTime(2012' 8' 7' 15' 00' 00' DateTimeKind.Utc).ToLocalTime()' converter.ConvertStringToValue("2012-08-07T15:00:00Z"' typeof(DateTime)));
Magic Number,MPExtended.Tests.Libraries.Service.WCF,CustomQueryStringConverterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\WCF\CustomQueryStringConverterTests.cs,TestCustomFeatures,The following statement contains a magic number: Assert.Equal(new DateTime(2012' 8' 7' 0' 0' 0' DateTimeKind.Local)' converter.ConvertStringToValue("2012-08-07"' typeof(DateTime)));
Magic Number,MPExtended.Tests.Libraries.Service.WCF,CustomQueryStringConverterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\WCF\CustomQueryStringConverterTests.cs,TestCustomFeatures,The following statement contains a magic number: Assert.Equal(new DateTime(2012' 8' 7' 0' 0' 0' DateTimeKind.Local)' converter.ConvertStringToValue("2012-08-07"' typeof(DateTime)));
Magic Number,MPExtended.Tests.Libraries.Service.WCF,CustomQueryStringConverterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\WCF\CustomQueryStringConverterTests.cs,TestCustomFeatures,The following statement contains a magic number: Assert.Equal(new DateTime(2012' 8' 7' 0' 0' 0' DateTimeKind.Local)' converter.ConvertStringToValue("2012-08-07"' typeof(DateTime)));
Magic Number,MPExtended.Tests.Libraries.Service.WCF,CustomQueryStringConverterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\WCF\CustomQueryStringConverterTests.cs,TestCustomFeatures,The following statement contains a magic number: Assert.Equal(new DateTime(2012' 1' 17' 14' 52' 29' DateTimeKind.Utc).ToLocalTime()' converter.ConvertStringToValue("/Date(1326815549000+0000)/"' typeof(DateTime)));
Magic Number,MPExtended.Tests.Libraries.Service.WCF,CustomQueryStringConverterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\WCF\CustomQueryStringConverterTests.cs,TestCustomFeatures,The following statement contains a magic number: Assert.Equal(new DateTime(2012' 1' 17' 14' 52' 29' DateTimeKind.Utc).ToLocalTime()' converter.ConvertStringToValue("/Date(1326815549000+0000)/"' typeof(DateTime)));
Magic Number,MPExtended.Tests.Libraries.Service.WCF,CustomQueryStringConverterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\WCF\CustomQueryStringConverterTests.cs,TestCustomFeatures,The following statement contains a magic number: Assert.Equal(new DateTime(2012' 1' 17' 14' 52' 29' DateTimeKind.Utc).ToLocalTime()' converter.ConvertStringToValue("/Date(1326815549000+0000)/"' typeof(DateTime)));
Magic Number,MPExtended.Tests.Libraries.Service.WCF,CustomQueryStringConverterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\WCF\CustomQueryStringConverterTests.cs,TestCustomFeatures,The following statement contains a magic number: Assert.Equal(new DateTime(2012' 1' 17' 14' 52' 29' DateTimeKind.Utc).ToLocalTime()' converter.ConvertStringToValue("/Date(1326815549000+0000)/"' typeof(DateTime)));
Magic Number,MPExtended.Tests.Libraries.Service.WCF,CustomQueryStringConverterTests,C:\research\architectureSmells\repos\MPExtended_MPExtended\Tests\MPExtended.Tests.Libraries.Service\WCF\CustomQueryStringConverterTests.cs,TestCustomFeatures,The following statement contains a magic number: Assert.Equal(new DateTime(2012' 1' 17' 14' 52' 29' DateTimeKind.Utc).ToLocalTime()' converter.ConvertStringToValue("/Date(1326815549000+0000)/"' typeof(DateTime)));
