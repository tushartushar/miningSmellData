Implementation smell,Namespace,Class,File,Method,Description
Complex Method,XLabs.Platform.Services.Media,MediaPicker,C:\repos\nishanil_XHacknight-Samples\WorkingWithCamera\WorkingWithCamera\WorkingWithCamera.WinPhone\MediaPicker.cs,InternalOnPhotoChosen,Cyclomatic complexity of the method is 23
Long Parameter List,XLabs.Platform.Services.Media,MediaPicker,C:\repos\nishanil_XHacknight-Samples\WorkingWithCamera\WorkingWithCamera\WorkingWithCamera.WinPhone\MediaPicker.cs,InternalOnPhotoChosen,The method has 6 parameters.
Long Parameter List,XLabs.Platform.Services.Media,MediaPicker,C:\repos\nishanil_XHacknight-Samples\WorkingWithCamera\WorkingWithCamera\WorkingWithCamera.WinPhone\MediaPicker.cs,ResizeBasedOnPixelDimension,The method has 5 parameters.
Long Statement,XLabs.Platform.Services.Media,MediaPicker,C:\repos\nishanil_XHacknight-Samples\WorkingWithCamera\WorkingWithCamera\WorkingWithCamera.WinPhone\MediaPicker.cs,InternalOnPhotoChosen,The length of the statement  "		ResizeImageStream (options.MaxPixelDimension' options.PercentQuality' streamImage' stream => SafeAsyncCall (stream' o => streamImage = o)); " is 139.
Long Statement,XLabs.Platform.Services.Media,MediaPicker,C:\repos\nishanil_XHacknight-Samples\WorkingWithCamera\WorkingWithCamera\WorkingWithCamera.WinPhone\MediaPicker.cs,ResizeImageStream,The length of the statement  "	ResizeBasedOnPixelDimension (maxPixelDimension' writeable.PixelWidth' writeable.PixelHeight' out targetWidth' out targetHeight); " is 128.
Long Statement,XLabs.Platform.Services.Media,MediaPicker,C:\repos\nishanil_XHacknight-Samples\WorkingWithCamera\WorkingWithCamera\WorkingWithCamera.WinPhone\MediaPicker.cs,ResizeImageStream,The length of the statement  "	// Note: We are NOT using a "using" statement here on purpose. It is the callers responsibility to handle the dispose of the stream correctly " is 141.
Empty Catch Block,XLabs.Platform.Services.Media,MediaPicker,C:\repos\nishanil_XHacknight-Samples\WorkingWithCamera\WorkingWithCamera\WorkingWithCamera.WinPhone\MediaPicker.cs,SafeAsyncCall,The method has an empty catch block.
Empty Catch Block,XLabs.Platform.Services.Media,MediaPicker,C:\repos\nishanil_XHacknight-Samples\WorkingWithCamera\WorkingWithCamera\WorkingWithCamera.WinPhone\MediaPicker.cs,SafeAsyncCall,The method has an empty catch block.
Magic Number,XLabs.Platform.Services.Media,MediaPicker,C:\repos\nishanil_XHacknight-Samples\WorkingWithCamera\WorkingWithCamera\WorkingWithCamera.WinPhone\MediaPicker.cs,InternalOnPhotoChosen,The following statement contains a magic number: if (saveImage) {  	using (var store = IsolatedStorageFile.GetUserStoreForApplication ()) {  		path = options.GetUniqueMediaFileWithPath ((options == null) ? "temp" : options.Directory' p => store.FileExists (p));  		var dir = Path.GetDirectoryName (path);  		if (!String.IsNullOrWhiteSpace (dir)) {  			store.CreateDirectory (dir);  		}  		using (var fs = store.CreateFile (path)) {  			var buffer = new byte[20480];  			int len;  			//while ((len = photoResult.ChosenPhoto.Read(buffer' 0' buffer.Length)) > 0)  			while ((len = streamImage.Read (buffer' 0' buffer.Length)) > 0) {  				fs.Write (buffer' 0' len);  			}  			fs.Flush (true);  		}  	}  	if (options == null) {  		dispose = d =>  {  			using (var store = IsolatedStorageFile.GetUserStoreForApplication ()) {  				store.DeleteFile (path);  			}  		};  	}  }  
Magic Number,XLabs.Platform.Services.Media,MediaPicker,C:\repos\nishanil_XHacknight-Samples\WorkingWithCamera\WorkingWithCamera\WorkingWithCamera.WinPhone\MediaPicker.cs,InternalOnPhotoChosen,The following statement contains a magic number: using (var store = IsolatedStorageFile.GetUserStoreForApplication ()) {  	path = options.GetUniqueMediaFileWithPath ((options == null) ? "temp" : options.Directory' p => store.FileExists (p));  	var dir = Path.GetDirectoryName (path);  	if (!String.IsNullOrWhiteSpace (dir)) {  		store.CreateDirectory (dir);  	}  	using (var fs = store.CreateFile (path)) {  		var buffer = new byte[20480];  		int len;  		//while ((len = photoResult.ChosenPhoto.Read(buffer' 0' buffer.Length)) > 0)  		while ((len = streamImage.Read (buffer' 0' buffer.Length)) > 0) {  			fs.Write (buffer' 0' len);  		}  		fs.Flush (true);  	}  }  
Magic Number,XLabs.Platform.Services.Media,MediaPicker,C:\repos\nishanil_XHacknight-Samples\WorkingWithCamera\WorkingWithCamera\WorkingWithCamera.WinPhone\MediaPicker.cs,InternalOnPhotoChosen,The following statement contains a magic number: using (var fs = store.CreateFile (path)) {  	var buffer = new byte[20480];  	int len;  	//while ((len = photoResult.ChosenPhoto.Read(buffer' 0' buffer.Length)) > 0)  	while ((len = streamImage.Read (buffer' 0' buffer.Length)) > 0) {  		fs.Write (buffer' 0' len);  	}  	fs.Flush (true);  }  
Magic Number,XLabs.Platform.Services.Media,MediaPicker,C:\repos\nishanil_XHacknight-Samples\WorkingWithCamera\WorkingWithCamera\WorkingWithCamera.WinPhone\MediaPicker.cs,ResizeImageStream,The following statement contains a magic number: if (!percentQuality.HasValue) {  	percentQuality = 100;  }  
Magic Number,XLabs.Platform.Services.Media,MediaPicker,C:\repos\nishanil_XHacknight-Samples\WorkingWithCamera\WorkingWithCamera\WorkingWithCamera.WinPhone\MediaPicker.cs,ResizeImageStream,The following statement contains a magic number: percentQuality = 100;  
Missing Default,XLabs.Platform.Services.Media,MediaPicker,C:\repos\nishanil_XHacknight-Samples\WorkingWithCamera\WorkingWithCamera\WorkingWithCamera.WinPhone\MediaPicker.cs,InternalOnPhotoChosen,The following switch statement is missing a default case: switch (photoResult.TaskResult) {  case TaskResult.OK:  	photoResult.ChosenPhoto.Position = pos;  	var mf = new MediaFile (path' () => streamImage' dispose);  	if (OnMediaSelected != null) {  		OnMediaSelected (this' new MediaPickerArgs (mf));  	}  	tcs.SetResult (mf);  	break;  case TaskResult.None:  	photoResult.ChosenPhoto.Dispose ();  	if (photoResult.Error != null) {  		if (OnError != null) {  			OnError (this' new MediaPickerErrorArgs (photoResult.Error));  		}  		tcs.SetException (photoResult.Error);  	}  	break;  }  
