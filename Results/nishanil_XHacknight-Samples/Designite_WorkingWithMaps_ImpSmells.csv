Implementation smell,Namespace,Class,File,Method,Description
Complex Method,WorkingWithMaps,MapPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\MapPage.cs,HandleClicked,Cyclomatic complexity of the method is 9
Magic Number,WorkingWithMaps,MapPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\MapPage.cs,MapPage,The following statement contains a magic number: map = new Map {  	IsShowingUser = true'  	HeightRequest = 100'  	WidthRequest = 960'  	VerticalOptions = LayoutOptions.FillAndExpand  };  
Magic Number,WorkingWithMaps,MapPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\MapPage.cs,MapPage,The following statement contains a magic number: map = new Map {  	IsShowingUser = true'  	HeightRequest = 100'  	WidthRequest = 960'  	VerticalOptions = LayoutOptions.FillAndExpand  };  
Magic Number,WorkingWithMaps,MapPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\MapPage.cs,MapPage,The following statement contains a magic number: map.MoveToRegion (new MapSpan (new Position (0' 0)' 360' 360));  
Magic Number,WorkingWithMaps,MapPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\MapPage.cs,MapPage,The following statement contains a magic number: map.MoveToRegion (new MapSpan (new Position (0' 0)' 360' 360));  
Magic Number,WorkingWithMaps,MapPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\MapPage.cs,MapPage,The following statement contains a magic number: slider.ValueChanged += (sender' e) =>  {  	var zoomLevel = e.NewValue;  	// between 1 and 18  	var latlongdegrees = 360 / (Math.Pow (2' zoomLevel));  	Debug.WriteLine (zoomLevel + " -> " + latlongdegrees);  	if (map.VisibleRegion != null)  		map.MoveToRegion (new MapSpan (map.VisibleRegion.Center' latlongdegrees' latlongdegrees));  };  
Magic Number,WorkingWithMaps,MapPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\MapPage.cs,MapPage,The following statement contains a magic number: slider.ValueChanged += (sender' e) =>  {  	var zoomLevel = e.NewValue;  	// between 1 and 18  	var latlongdegrees = 360 / (Math.Pow (2' zoomLevel));  	Debug.WriteLine (zoomLevel + " -> " + latlongdegrees);  	if (map.VisibleRegion != null)  		map.MoveToRegion (new MapSpan (map.VisibleRegion.Center' latlongdegrees' latlongdegrees));  };  
Magic Number,WorkingWithMaps,MapPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\MapPage.cs,CalculateBoundingCoordinates,The following statement contains a magic number: if (left < -180)  	left = 180 + (180 + left);  
Magic Number,WorkingWithMaps,MapPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\MapPage.cs,CalculateBoundingCoordinates,The following statement contains a magic number: if (left < -180)  	left = 180 + (180 + left);  
Magic Number,WorkingWithMaps,MapPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\MapPage.cs,CalculateBoundingCoordinates,The following statement contains a magic number: if (left < -180)  	left = 180 + (180 + left);  
Magic Number,WorkingWithMaps,MapPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\MapPage.cs,CalculateBoundingCoordinates,The following statement contains a magic number: left = 180 + (180 + left);  
Magic Number,WorkingWithMaps,MapPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\MapPage.cs,CalculateBoundingCoordinates,The following statement contains a magic number: left = 180 + (180 + left);  
Magic Number,WorkingWithMaps,MapPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\MapPage.cs,CalculateBoundingCoordinates,The following statement contains a magic number: if (right > 180)  	right = (right - 180) - 180;  
Magic Number,WorkingWithMaps,MapPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\MapPage.cs,CalculateBoundingCoordinates,The following statement contains a magic number: if (right > 180)  	right = (right - 180) - 180;  
Magic Number,WorkingWithMaps,MapPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\MapPage.cs,CalculateBoundingCoordinates,The following statement contains a magic number: if (right > 180)  	right = (right - 180) - 180;  
Magic Number,WorkingWithMaps,MapPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\MapPage.cs,CalculateBoundingCoordinates,The following statement contains a magic number: right = (right - 180) - 180;  
Magic Number,WorkingWithMaps,MapPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\MapPage.cs,CalculateBoundingCoordinates,The following statement contains a magic number: right = (right - 180) - 180;  
Magic Number,WorkingWithMaps,GeocoderPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\GeocoderPage.cs,GeocoderPage,The following statement contains a magic number: b1.Clicked += async (sender' e) =>  {  	var fortMasonPosition = new Position (37.8044866' -122.4324132);  	var possibleAddresses = await geoCoder.GetAddressesForPositionAsync (fortMasonPosition);  	foreach (var a in possibleAddresses) {  		l.Text += a + "\n";  	}  };  
Magic Number,WorkingWithMaps,GeocoderPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\GeocoderPage.cs,GeocoderPage,The following statement contains a magic number: b1.Clicked += async (sender' e) =>  {  	var fortMasonPosition = new Position (37.8044866' -122.4324132);  	var possibleAddresses = await geoCoder.GetAddressesForPositionAsync (fortMasonPosition);  	foreach (var a in possibleAddresses) {  		l.Text += a + "\n";  	}  };  
Magic Number,WorkingWithMaps,GeocoderPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\GeocoderPage.cs,GeocoderPage,The following statement contains a magic number: Content = new StackLayout {  	Padding = new Thickness (0' 20' 0' 0)'  	Children =  {  		b2'  		b1'  		l  	}  };  
Magic Number,WorkingWithMaps,PinPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\PinPage.cs,PinPage,The following statement contains a magic number: map = new Map {  	IsShowingUser = true'  	HeightRequest = 100'  	WidthRequest = 960'  	VerticalOptions = LayoutOptions.FillAndExpand  };  
Magic Number,WorkingWithMaps,PinPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\PinPage.cs,PinPage,The following statement contains a magic number: map = new Map {  	IsShowingUser = true'  	HeightRequest = 100'  	WidthRequest = 960'  	VerticalOptions = LayoutOptions.FillAndExpand  };  
Magic Number,WorkingWithMaps,PinPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\PinPage.cs,PinPage,The following statement contains a magic number: map.MoveToRegion (MapSpan.FromCenterAndRadius (new Position (36.9628066' -122.0194722)' Distance.FromMiles (3)));  
Magic Number,WorkingWithMaps,PinPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\PinPage.cs,PinPage,The following statement contains a magic number: map.MoveToRegion (MapSpan.FromCenterAndRadius (new Position (36.9628066' -122.0194722)' Distance.FromMiles (3)));  
Magic Number,WorkingWithMaps,PinPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\PinPage.cs,PinPage,The following statement contains a magic number: map.MoveToRegion (MapSpan.FromCenterAndRadius (new Position (36.9628066' -122.0194722)' Distance.FromMiles (3)));  
Magic Number,WorkingWithMaps,PinPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\PinPage.cs,PinPage,The following statement contains a magic number: morePins.Clicked += (sender' e) =>  {  	map.Pins.Add (new Pin {  		Position = new Position (36.9641949' -122.0177232)'  		Label = "Boardwalk"  	});  	map.Pins.Add (new Pin {  		Position = new Position (36.9571571' -122.0173544)'  		Label = "Wharf"  	});  	map.MoveToRegion (MapSpan.FromCenterAndRadius (new Position (36.9628066' -122.0194722)' Distance.FromMiles (1.5)));  };  
Magic Number,WorkingWithMaps,PinPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\PinPage.cs,PinPage,The following statement contains a magic number: morePins.Clicked += (sender' e) =>  {  	map.Pins.Add (new Pin {  		Position = new Position (36.9641949' -122.0177232)'  		Label = "Boardwalk"  	});  	map.Pins.Add (new Pin {  		Position = new Position (36.9571571' -122.0173544)'  		Label = "Wharf"  	});  	map.MoveToRegion (MapSpan.FromCenterAndRadius (new Position (36.9628066' -122.0194722)' Distance.FromMiles (1.5)));  };  
Magic Number,WorkingWithMaps,PinPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\PinPage.cs,PinPage,The following statement contains a magic number: morePins.Clicked += (sender' e) =>  {  	map.Pins.Add (new Pin {  		Position = new Position (36.9641949' -122.0177232)'  		Label = "Boardwalk"  	});  	map.Pins.Add (new Pin {  		Position = new Position (36.9571571' -122.0173544)'  		Label = "Wharf"  	});  	map.MoveToRegion (MapSpan.FromCenterAndRadius (new Position (36.9628066' -122.0194722)' Distance.FromMiles (1.5)));  };  
Magic Number,WorkingWithMaps,PinPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\PinPage.cs,PinPage,The following statement contains a magic number: morePins.Clicked += (sender' e) =>  {  	map.Pins.Add (new Pin {  		Position = new Position (36.9641949' -122.0177232)'  		Label = "Boardwalk"  	});  	map.Pins.Add (new Pin {  		Position = new Position (36.9571571' -122.0173544)'  		Label = "Wharf"  	});  	map.MoveToRegion (MapSpan.FromCenterAndRadius (new Position (36.9628066' -122.0194722)' Distance.FromMiles (1.5)));  };  
Magic Number,WorkingWithMaps,PinPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\PinPage.cs,PinPage,The following statement contains a magic number: morePins.Clicked += (sender' e) =>  {  	map.Pins.Add (new Pin {  		Position = new Position (36.9641949' -122.0177232)'  		Label = "Boardwalk"  	});  	map.Pins.Add (new Pin {  		Position = new Position (36.9571571' -122.0173544)'  		Label = "Wharf"  	});  	map.MoveToRegion (MapSpan.FromCenterAndRadius (new Position (36.9628066' -122.0194722)' Distance.FromMiles (1.5)));  };  
Magic Number,WorkingWithMaps,PinPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\PinPage.cs,PinPage,The following statement contains a magic number: morePins.Clicked += (sender' e) =>  {  	map.Pins.Add (new Pin {  		Position = new Position (36.9641949' -122.0177232)'  		Label = "Boardwalk"  	});  	map.Pins.Add (new Pin {  		Position = new Position (36.9571571' -122.0173544)'  		Label = "Wharf"  	});  	map.MoveToRegion (MapSpan.FromCenterAndRadius (new Position (36.9628066' -122.0194722)' Distance.FromMiles (1.5)));  };  
Magic Number,WorkingWithMaps,PinPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\PinPage.cs,PinPage,The following statement contains a magic number: morePins.Clicked += (sender' e) =>  {  	map.Pins.Add (new Pin {  		Position = new Position (36.9641949' -122.0177232)'  		Label = "Boardwalk"  	});  	map.Pins.Add (new Pin {  		Position = new Position (36.9571571' -122.0173544)'  		Label = "Wharf"  	});  	map.MoveToRegion (MapSpan.FromCenterAndRadius (new Position (36.9628066' -122.0194722)' Distance.FromMiles (1.5)));  };  
Magic Number,WorkingWithMaps,PinPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\PinPage.cs,PinPage,The following statement contains a magic number: map.Pins.Add (new Pin {  	Position = new Position (36.9641949' -122.0177232)'  	Label = "Boardwalk"  });  
Magic Number,WorkingWithMaps,PinPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\PinPage.cs,PinPage,The following statement contains a magic number: map.Pins.Add (new Pin {  	Position = new Position (36.9641949' -122.0177232)'  	Label = "Boardwalk"  });  
Magic Number,WorkingWithMaps,PinPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\PinPage.cs,PinPage,The following statement contains a magic number: map.Pins.Add (new Pin {  	Position = new Position (36.9571571' -122.0173544)'  	Label = "Wharf"  });  
Magic Number,WorkingWithMaps,PinPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\PinPage.cs,PinPage,The following statement contains a magic number: map.Pins.Add (new Pin {  	Position = new Position (36.9571571' -122.0173544)'  	Label = "Wharf"  });  
Magic Number,WorkingWithMaps,PinPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\PinPage.cs,PinPage,The following statement contains a magic number: map.MoveToRegion (MapSpan.FromCenterAndRadius (new Position (36.9628066' -122.0194722)' Distance.FromMiles (1.5)));  
Magic Number,WorkingWithMaps,PinPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\PinPage.cs,PinPage,The following statement contains a magic number: map.MoveToRegion (MapSpan.FromCenterAndRadius (new Position (36.9628066' -122.0194722)' Distance.FromMiles (1.5)));  
Magic Number,WorkingWithMaps,PinPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\PinPage.cs,PinPage,The following statement contains a magic number: map.MoveToRegion (MapSpan.FromCenterAndRadius (new Position (36.9628066' -122.0194722)' Distance.FromMiles (1.5)));  
Magic Number,WorkingWithMaps,PinPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\PinPage.cs,PinPage,The following statement contains a magic number: reLocate.Clicked += (sender' e) =>  {  	map.MoveToRegion (MapSpan.FromCenterAndRadius (new Position (36.9628066' -122.0194722)' Distance.FromMiles (3)));  };  
Magic Number,WorkingWithMaps,PinPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\PinPage.cs,PinPage,The following statement contains a magic number: reLocate.Clicked += (sender' e) =>  {  	map.MoveToRegion (MapSpan.FromCenterAndRadius (new Position (36.9628066' -122.0194722)' Distance.FromMiles (3)));  };  
Magic Number,WorkingWithMaps,PinPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\PinPage.cs,PinPage,The following statement contains a magic number: reLocate.Clicked += (sender' e) =>  {  	map.MoveToRegion (MapSpan.FromCenterAndRadius (new Position (36.9628066' -122.0194722)' Distance.FromMiles (3)));  };  
Magic Number,WorkingWithMaps,PinPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\PinPage.cs,PinPage,The following statement contains a magic number: map.MoveToRegion (MapSpan.FromCenterAndRadius (new Position (36.9628066' -122.0194722)' Distance.FromMiles (3)));  
Magic Number,WorkingWithMaps,PinPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\PinPage.cs,PinPage,The following statement contains a magic number: map.MoveToRegion (MapSpan.FromCenterAndRadius (new Position (36.9628066' -122.0194722)' Distance.FromMiles (3)));  
Magic Number,WorkingWithMaps,PinPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\PinPage.cs,PinPage,The following statement contains a magic number: map.MoveToRegion (MapSpan.FromCenterAndRadius (new Position (36.9628066' -122.0194722)' Distance.FromMiles (3)));  
Magic Number,WorkingWithMaps,MapAppPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\MapAppPage.cs,MapAppPage,The following statement contains a magic number: Content = new StackLayout {  	Padding = new Thickness (5' 20' 5' 0)'  	HorizontalOptions = LayoutOptions.Fill'  	Children =  {  		l'  		openLocation'  		openDirections  	}  };  
Magic Number,WorkingWithMaps,MapAppPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\MapAppPage.cs,MapAppPage,The following statement contains a magic number: Content = new StackLayout {  	Padding = new Thickness (5' 20' 5' 0)'  	HorizontalOptions = LayoutOptions.Fill'  	Children =  {  		l'  		openLocation'  		openDirections  	}  };  
Magic Number,WorkingWithMaps,MapAppPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\MapAppPage.cs,MapAppPage,The following statement contains a magic number: Content = new StackLayout {  	Padding = new Thickness (5' 20' 5' 0)'  	HorizontalOptions = LayoutOptions.Fill'  	Children =  {  		l'  		openLocation'  		openDirections  	}  };  
Missing Default,WorkingWithMaps,MapPage,C:\repos\nishanil_XHacknight-Samples\WorkingWithMaps\WorkingWithMaps\MapPage.cs,HandleClicked,The following switch statement is missing a default case: switch (b.Text) {  case "Street":  	map.MapType = MapType.Street;  	break;  case "Hybrid":  	map.MapType = MapType.Hybrid;  	break;  case "Satellite":  	map.MapType = MapType.Satellite;  	break;  }  
