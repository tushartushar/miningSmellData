Implementation smell,Namespace,Class,File,Method,Description
Long Statement,XLabs.Platform.Services.GeoLocation,PositionExtensions,C:\repos\nishanil_XHacknight-Samples\WorkingWithGeoLocator\WorkingWithGeoLocator\WorkingWithGeoLocator\GeoLocation\PositionExtensions.cs,DistanceFrom,The length of the statement  "	var a1 = Math.Sin (dLat / 2) * Math.Sin (dLat / 2) + Math.Cos (a.Latitude.DegreesToRadians ()) * Math.Cos (b.Latitude.DegreesToRadians ()) * Math.Sin (dLon / 2) * Math.Sin (dLon / 2); " is 183.
Long Statement,XLabs.Platform.Services.GeoLocation,PositionExtensions,C:\repos\nishanil_XHacknight-Samples\WorkingWithGeoLocator\WorkingWithGeoLocator\WorkingWithGeoLocator\GeoLocation\PositionExtensions.cs,BearingFrom,The length of the statement  "	return Math.Atan2 ((Math.Cos (start.Latitude) * Math.Sin (stop.Latitude)) - (Math.Sin (start.Latitude) * cosStop * Math.Cos (deltaLon))' Math.Sin (deltaLon) * cosStop); " is 168.
Magic Number,WorkingWithGeoLocator,GeoLocatorViewModel,C:\repos\nishanil_XHacknight-Samples\WorkingWithGeoLocator\WorkingWithGeoLocator\WorkingWithGeoLocator\GeoLocatorViewModel.cs,GetPosition,The following statement contains a magic number: await Geolocator.GetPositionAsync (10000' _cancelSource.Token' true).ContinueWith (t =>  {  	if (t.IsFaulted) {  		PositionStatus = ((GeolocationException)t.Exception.InnerException).Error.ToString ();  	}  	else if (t.IsCanceled) {  		PositionStatus = "Canceled";  	}  	else {  		PositionStatus = t.Result.Timestamp.ToString ("G");  		PositionLatitude = "La: " + t.Result.Latitude.ToString ("N4");  		PositionLongitude = "Lo: " + t.Result.Longitude.ToString ("N4");  	}  }' _scheduler);  
Magic Number,XLabs.Platform.Services.GeoLocation,PositionExtensions,C:\repos\nishanil_XHacknight-Samples\WorkingWithGeoLocator\WorkingWithGeoLocator\WorkingWithGeoLocator\GeoLocation\PositionExtensions.cs,RadiansToDegrees,The following statement contains a magic number: return 180.0 * rad / Math.PI;  
Magic Number,XLabs.Platform.Services.GeoLocation,PositionExtensions,C:\repos\nishanil_XHacknight-Samples\WorkingWithGeoLocator\WorkingWithGeoLocator\WorkingWithGeoLocator\GeoLocation\PositionExtensions.cs,DegreesToRadians,The following statement contains a magic number: return Math.PI * deg / 180.0;  
