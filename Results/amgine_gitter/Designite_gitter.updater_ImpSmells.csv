Implementation smell,Namespace,Class,File,Method,Description
Complex Method,gitter.Updater,UpdateFromGitRepositoryProcess,C:\repos\amgine_gitter\gitter.updater.prj\GitUpdateDriver.cs,UpdateProc,Cyclomatic complexity of the method is 11
Long Parameter List,gitter,Argument,C:\repos\amgine_gitter\shared\Verify.cs,IsInRange,The method has 5 parameters. Parameters: lowerBoundInclusive' value' upperBoundInclusive' message' parameterName
Long Parameter List,gitter,Argument,C:\repos\amgine_gitter\shared\Verify.cs,IsInRange,The method has 5 parameters. Parameters: lowerBoundInclusive' value' upperBoundInclusive' message' parameterName
Long Parameter List,gitter.Updater,UpdateFromGitRepositoryProcess,C:\repos\amgine_gitter\gitter.updater.prj\GitUpdateDriver.cs,UpdateFromGitRepositoryProcess,The method has 5 parameters. Parameters: currentVersion' gitExePath' repoUrl' targetDirectory' skipVersionCheck
Long Statement,gitter.Updater,GitUpdateDriver,C:\repos\amgine_gitter\gitter.updater.prj\GitUpdateDriver.cs,GetFullPath,The length of the statement  "				foreach(string str2 in environmentVariable.Split(new char[] { Path.PathSeparator }' StringSplitOptions.RemoveEmptyEntries)) " is 123.
Long Statement,gitter.Updater,MainForm,C:\repos\amgine_gitter\gitter.updater.prj\MainForm.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(MainForm)); " is 128.
Long Statement,gitter.Updater,MainForm,C:\repos\amgine_gitter\gitter.updater.prj\MainForm.cs,InitializeComponent,The length of the statement  "			this._btnCancel.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 149.
Long Statement,gitter.Updater,MainForm,C:\repos\amgine_gitter\gitter.updater.prj\MainForm.cs,InitializeComponent,The length of the statement  "			this._updateProgress.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 148.
Long Statement,gitter.Updater,MainForm,C:\repos\amgine_gitter\gitter.updater.prj\MainForm.cs,InitializeComponent,The length of the statement  "			this._pnlContainer.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 149.
Long Statement,gitter.Updater,MainForm,C:\repos\amgine_gitter\gitter.updater.prj\MainForm.cs,InitializeComponent,The length of the statement  "			this._pnlLine.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)  " is 144.
Long Statement,gitter.Updater,MainForm,C:\repos\amgine_gitter\gitter.updater.prj\MainForm.cs,InitializeComponent,The length of the statement  "			this._pnlLine.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(223))))' ((int)(((byte)(223))))' ((int)(((byte)(223))))); " is 128.
Complex Conditional,gitter.Updater,UpdateFromGitRepositoryProcess,C:\repos\amgine_gitter\gitter.updater.prj\GitUpdateDriver.cs,GetRemoteMasterVersion,The conditional expression  "e > s && s > 9 && (refname[s - 1] == 'v' || (refname[s - 1] == '-' && refname[s - 2] == 'v'))"  is complex.
Empty Catch Block,gitter.Updater,GitUpdateDriver,C:\repos\amgine_gitter\gitter.updater.prj\GitUpdateDriver.cs,GetFullPath,The method has an empty catch block.
Empty Catch Block,gitter.Updater,UpdateFromGitRepositoryProcess,C:\repos\amgine_gitter\gitter.updater.prj\GitUpdateDriver.cs,CleanUp,The method has an empty catch block.
Empty Catch Block,gitter.Updater,UpdateFromGitRepositoryProcess,C:\repos\amgine_gitter\gitter.updater.prj\GitUpdateDriver.cs,StartApplication,The method has an empty catch block.
Empty Catch Block,gitter.Updater,Utility,C:\repos\amgine_gitter\gitter.updater.prj\Utility.cs,RemoveDirectoryRecursively,The method has an empty catch block.
Empty Catch Block,gitter.Updater,Utility,C:\repos\amgine_gitter\gitter.updater.prj\Utility.cs,KillAllGitterProcesses,The method has an empty catch block.
Empty Catch Block,gitter.Updater,Utility,C:\repos\amgine_gitter\gitter.updater.prj\Utility.cs,KillAllGitterProcesses,The method has an empty catch block.
Empty Catch Block,gitter.Updater,Utility,C:\repos\amgine_gitter\gitter.updater.prj\Utility.cs,KillAllGitterProcesses,The method has an empty catch block.
Empty Catch Block,gitter.Updater,Utility,C:\repos\amgine_gitter\gitter.updater.prj\Utility.cs,KillAllGitterProcesses,The method has an empty catch block.
Magic Number,gitter.Updater,DeployProcess,C:\repos\amgine_gitter\gitter.updater.prj\DeployDriver.cs,BeginUpdate,The following statement contains a magic number: monitor.MaximumProgress = 10;
Magic Number,gitter.Updater,DeployProcess,C:\repos\amgine_gitter\gitter.updater.prj\DeployDriver.cs,UpdateProc,The following statement contains a magic number: try  			{  				if(_monitor.CancelRequested)  				{  					_monitor.ReportCancelled();  					return;  				}  				_monitor.Stage = "Closing running app instances...";  				Utility.KillAllGitterProcesses(_target);  				_monitor.CurrentProgress = 3;  				if(_monitor.CancelRequested)  				{  					_monitor.ReportCancelled();  					return;  				}  				_monitor.CanCancel = false;  				_monitor.Stage = "Installing application...";  				Utility.CopyDirectoryContent(_source' _target);  				_monitor.CurrentProgress = _monitor.MaximumProgress;  				_monitor.ReportSuccess();  			}  			catch(Exception exc)  			{  				_monitor.ReportFailure("Unexpected error:\n" + exc.Message);  			}
Magic Number,gitter.Updater,UpdateFromGitRepositoryProcess,C:\repos\amgine_gitter\gitter.updater.prj\GitUpdateDriver.cs,GetRemoteMasterVersion,The following statement contains a magic number: using(var git = new Process())  			{  				var args = "ls-remote --heads --tags " + _repoUrl;  				var psi = new ProcessStartInfo()  				{  					FileName = _gitExePath'  					Arguments = args'  					WindowStyle = ProcessWindowStyle.Normal'  					UseShellExecute = false'  					RedirectStandardOutput = true'  					RedirectStandardError = true'  					RedirectStandardInput = true'  					StandardOutputEncoding = Encoding.UTF8'  					StandardErrorEncoding = Encoding.UTF8'  					LoadUserProfile = true'  					ErrorDialog = false'  					CreateNoWindow = true'  				};  				if(!psi.EnvironmentVariables.ContainsKey("PLINK_PROTOCOL"))  				{  					psi.EnvironmentVariables.Add("PLINK_PROTOCOL"' "ssh");  				}  				if(!psi.EnvironmentVariables.ContainsKey("HOME"))  				{  					var UserProfile = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile);  					psi.EnvironmentVariables.Add("HOME"' UserProfile);  				}  				git.StartInfo = psi;  				git.Start();  				var stdout = git.StandardOutput.ReadToEnd();  				var stderr = git.StandardError.ReadToEnd();  				git.WaitForExit();  				if(git.ExitCode == 0)  				{  					string masterSHA1 = null;  					var lines = stdout.Split(new[] { '\n' }' StringSplitOptions.RemoveEmptyEntries);  					for(int i = 0; i < lines.Length; ++i)  					{  						if(lines[i].Length > 41)  						{  							var refname = lines[i].Substring(41).Trim();  							if(masterSHA1 == null)  							{  								if(refname == "refs/heads/master")  								{  									masterSHA1 = lines[i].Substring(0' 40);  								}  							}  							else  							{  								if(lines[i].Substring(0' 40) == masterSHA1)  								{  									int s = 0;  									int e = refname.Length - 1;  									while(s < refname.Length && !char.IsDigit(refname[s])) ++s;  									while(e > 0 && !char.IsDigit(refname[e])) --e;  									if(e > s && s > 9 && (refname[s - 1] == 'v' || (refname[s - 1] == '-' && refname[s - 2] == 'v')))  									{  										if(Version.TryParse(refname.Substring(s' e - s + 1)' out result))  										{  											break;  										}  										else  										{  											result = null;  										}  									}  								}  							}  						}  					}  				}  			}
Magic Number,gitter.Updater,UpdateFromGitRepositoryProcess,C:\repos\amgine_gitter\gitter.updater.prj\GitUpdateDriver.cs,GetRemoteMasterVersion,The following statement contains a magic number: using(var git = new Process())  			{  				var args = "ls-remote --heads --tags " + _repoUrl;  				var psi = new ProcessStartInfo()  				{  					FileName = _gitExePath'  					Arguments = args'  					WindowStyle = ProcessWindowStyle.Normal'  					UseShellExecute = false'  					RedirectStandardOutput = true'  					RedirectStandardError = true'  					RedirectStandardInput = true'  					StandardOutputEncoding = Encoding.UTF8'  					StandardErrorEncoding = Encoding.UTF8'  					LoadUserProfile = true'  					ErrorDialog = false'  					CreateNoWindow = true'  				};  				if(!psi.EnvironmentVariables.ContainsKey("PLINK_PROTOCOL"))  				{  					psi.EnvironmentVariables.Add("PLINK_PROTOCOL"' "ssh");  				}  				if(!psi.EnvironmentVariables.ContainsKey("HOME"))  				{  					var UserProfile = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile);  					psi.EnvironmentVariables.Add("HOME"' UserProfile);  				}  				git.StartInfo = psi;  				git.Start();  				var stdout = git.StandardOutput.ReadToEnd();  				var stderr = git.StandardError.ReadToEnd();  				git.WaitForExit();  				if(git.ExitCode == 0)  				{  					string masterSHA1 = null;  					var lines = stdout.Split(new[] { '\n' }' StringSplitOptions.RemoveEmptyEntries);  					for(int i = 0; i < lines.Length; ++i)  					{  						if(lines[i].Length > 41)  						{  							var refname = lines[i].Substring(41).Trim();  							if(masterSHA1 == null)  							{  								if(refname == "refs/heads/master")  								{  									masterSHA1 = lines[i].Substring(0' 40);  								}  							}  							else  							{  								if(lines[i].Substring(0' 40) == masterSHA1)  								{  									int s = 0;  									int e = refname.Length - 1;  									while(s < refname.Length && !char.IsDigit(refname[s])) ++s;  									while(e > 0 && !char.IsDigit(refname[e])) --e;  									if(e > s && s > 9 && (refname[s - 1] == 'v' || (refname[s - 1] == '-' && refname[s - 2] == 'v')))  									{  										if(Version.TryParse(refname.Substring(s' e - s + 1)' out result))  										{  											break;  										}  										else  										{  											result = null;  										}  									}  								}  							}  						}  					}  				}  			}
Magic Number,gitter.Updater,UpdateFromGitRepositoryProcess,C:\repos\amgine_gitter\gitter.updater.prj\GitUpdateDriver.cs,GetRemoteMasterVersion,The following statement contains a magic number: using(var git = new Process())  			{  				var args = "ls-remote --heads --tags " + _repoUrl;  				var psi = new ProcessStartInfo()  				{  					FileName = _gitExePath'  					Arguments = args'  					WindowStyle = ProcessWindowStyle.Normal'  					UseShellExecute = false'  					RedirectStandardOutput = true'  					RedirectStandardError = true'  					RedirectStandardInput = true'  					StandardOutputEncoding = Encoding.UTF8'  					StandardErrorEncoding = Encoding.UTF8'  					LoadUserProfile = true'  					ErrorDialog = false'  					CreateNoWindow = true'  				};  				if(!psi.EnvironmentVariables.ContainsKey("PLINK_PROTOCOL"))  				{  					psi.EnvironmentVariables.Add("PLINK_PROTOCOL"' "ssh");  				}  				if(!psi.EnvironmentVariables.ContainsKey("HOME"))  				{  					var UserProfile = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile);  					psi.EnvironmentVariables.Add("HOME"' UserProfile);  				}  				git.StartInfo = psi;  				git.Start();  				var stdout = git.StandardOutput.ReadToEnd();  				var stderr = git.StandardError.ReadToEnd();  				git.WaitForExit();  				if(git.ExitCode == 0)  				{  					string masterSHA1 = null;  					var lines = stdout.Split(new[] { '\n' }' StringSplitOptions.RemoveEmptyEntries);  					for(int i = 0; i < lines.Length; ++i)  					{  						if(lines[i].Length > 41)  						{  							var refname = lines[i].Substring(41).Trim();  							if(masterSHA1 == null)  							{  								if(refname == "refs/heads/master")  								{  									masterSHA1 = lines[i].Substring(0' 40);  								}  							}  							else  							{  								if(lines[i].Substring(0' 40) == masterSHA1)  								{  									int s = 0;  									int e = refname.Length - 1;  									while(s < refname.Length && !char.IsDigit(refname[s])) ++s;  									while(e > 0 && !char.IsDigit(refname[e])) --e;  									if(e > s && s > 9 && (refname[s - 1] == 'v' || (refname[s - 1] == '-' && refname[s - 2] == 'v')))  									{  										if(Version.TryParse(refname.Substring(s' e - s + 1)' out result))  										{  											break;  										}  										else  										{  											result = null;  										}  									}  								}  							}  						}  					}  				}  			}
Magic Number,gitter.Updater,UpdateFromGitRepositoryProcess,C:\repos\amgine_gitter\gitter.updater.prj\GitUpdateDriver.cs,GetRemoteMasterVersion,The following statement contains a magic number: using(var git = new Process())  			{  				var args = "ls-remote --heads --tags " + _repoUrl;  				var psi = new ProcessStartInfo()  				{  					FileName = _gitExePath'  					Arguments = args'  					WindowStyle = ProcessWindowStyle.Normal'  					UseShellExecute = false'  					RedirectStandardOutput = true'  					RedirectStandardError = true'  					RedirectStandardInput = true'  					StandardOutputEncoding = Encoding.UTF8'  					StandardErrorEncoding = Encoding.UTF8'  					LoadUserProfile = true'  					ErrorDialog = false'  					CreateNoWindow = true'  				};  				if(!psi.EnvironmentVariables.ContainsKey("PLINK_PROTOCOL"))  				{  					psi.EnvironmentVariables.Add("PLINK_PROTOCOL"' "ssh");  				}  				if(!psi.EnvironmentVariables.ContainsKey("HOME"))  				{  					var UserProfile = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile);  					psi.EnvironmentVariables.Add("HOME"' UserProfile);  				}  				git.StartInfo = psi;  				git.Start();  				var stdout = git.StandardOutput.ReadToEnd();  				var stderr = git.StandardError.ReadToEnd();  				git.WaitForExit();  				if(git.ExitCode == 0)  				{  					string masterSHA1 = null;  					var lines = stdout.Split(new[] { '\n' }' StringSplitOptions.RemoveEmptyEntries);  					for(int i = 0; i < lines.Length; ++i)  					{  						if(lines[i].Length > 41)  						{  							var refname = lines[i].Substring(41).Trim();  							if(masterSHA1 == null)  							{  								if(refname == "refs/heads/master")  								{  									masterSHA1 = lines[i].Substring(0' 40);  								}  							}  							else  							{  								if(lines[i].Substring(0' 40) == masterSHA1)  								{  									int s = 0;  									int e = refname.Length - 1;  									while(s < refname.Length && !char.IsDigit(refname[s])) ++s;  									while(e > 0 && !char.IsDigit(refname[e])) --e;  									if(e > s && s > 9 && (refname[s - 1] == 'v' || (refname[s - 1] == '-' && refname[s - 2] == 'v')))  									{  										if(Version.TryParse(refname.Substring(s' e - s + 1)' out result))  										{  											break;  										}  										else  										{  											result = null;  										}  									}  								}  							}  						}  					}  				}  			}
Magic Number,gitter.Updater,UpdateFromGitRepositoryProcess,C:\repos\amgine_gitter\gitter.updater.prj\GitUpdateDriver.cs,GetRemoteMasterVersion,The following statement contains a magic number: using(var git = new Process())  			{  				var args = "ls-remote --heads --tags " + _repoUrl;  				var psi = new ProcessStartInfo()  				{  					FileName = _gitExePath'  					Arguments = args'  					WindowStyle = ProcessWindowStyle.Normal'  					UseShellExecute = false'  					RedirectStandardOutput = true'  					RedirectStandardError = true'  					RedirectStandardInput = true'  					StandardOutputEncoding = Encoding.UTF8'  					StandardErrorEncoding = Encoding.UTF8'  					LoadUserProfile = true'  					ErrorDialog = false'  					CreateNoWindow = true'  				};  				if(!psi.EnvironmentVariables.ContainsKey("PLINK_PROTOCOL"))  				{  					psi.EnvironmentVariables.Add("PLINK_PROTOCOL"' "ssh");  				}  				if(!psi.EnvironmentVariables.ContainsKey("HOME"))  				{  					var UserProfile = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile);  					psi.EnvironmentVariables.Add("HOME"' UserProfile);  				}  				git.StartInfo = psi;  				git.Start();  				var stdout = git.StandardOutput.ReadToEnd();  				var stderr = git.StandardError.ReadToEnd();  				git.WaitForExit();  				if(git.ExitCode == 0)  				{  					string masterSHA1 = null;  					var lines = stdout.Split(new[] { '\n' }' StringSplitOptions.RemoveEmptyEntries);  					for(int i = 0; i < lines.Length; ++i)  					{  						if(lines[i].Length > 41)  						{  							var refname = lines[i].Substring(41).Trim();  							if(masterSHA1 == null)  							{  								if(refname == "refs/heads/master")  								{  									masterSHA1 = lines[i].Substring(0' 40);  								}  							}  							else  							{  								if(lines[i].Substring(0' 40) == masterSHA1)  								{  									int s = 0;  									int e = refname.Length - 1;  									while(s < refname.Length && !char.IsDigit(refname[s])) ++s;  									while(e > 0 && !char.IsDigit(refname[e])) --e;  									if(e > s && s > 9 && (refname[s - 1] == 'v' || (refname[s - 1] == '-' && refname[s - 2] == 'v')))  									{  										if(Version.TryParse(refname.Substring(s' e - s + 1)' out result))  										{  											break;  										}  										else  										{  											result = null;  										}  									}  								}  							}  						}  					}  				}  			}
Magic Number,gitter.Updater,UpdateFromGitRepositoryProcess,C:\repos\amgine_gitter\gitter.updater.prj\GitUpdateDriver.cs,GetRemoteMasterVersion,The following statement contains a magic number: using(var git = new Process())  			{  				var args = "ls-remote --heads --tags " + _repoUrl;  				var psi = new ProcessStartInfo()  				{  					FileName = _gitExePath'  					Arguments = args'  					WindowStyle = ProcessWindowStyle.Normal'  					UseShellExecute = false'  					RedirectStandardOutput = true'  					RedirectStandardError = true'  					RedirectStandardInput = true'  					StandardOutputEncoding = Encoding.UTF8'  					StandardErrorEncoding = Encoding.UTF8'  					LoadUserProfile = true'  					ErrorDialog = false'  					CreateNoWindow = true'  				};  				if(!psi.EnvironmentVariables.ContainsKey("PLINK_PROTOCOL"))  				{  					psi.EnvironmentVariables.Add("PLINK_PROTOCOL"' "ssh");  				}  				if(!psi.EnvironmentVariables.ContainsKey("HOME"))  				{  					var UserProfile = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile);  					psi.EnvironmentVariables.Add("HOME"' UserProfile);  				}  				git.StartInfo = psi;  				git.Start();  				var stdout = git.StandardOutput.ReadToEnd();  				var stderr = git.StandardError.ReadToEnd();  				git.WaitForExit();  				if(git.ExitCode == 0)  				{  					string masterSHA1 = null;  					var lines = stdout.Split(new[] { '\n' }' StringSplitOptions.RemoveEmptyEntries);  					for(int i = 0; i < lines.Length; ++i)  					{  						if(lines[i].Length > 41)  						{  							var refname = lines[i].Substring(41).Trim();  							if(masterSHA1 == null)  							{  								if(refname == "refs/heads/master")  								{  									masterSHA1 = lines[i].Substring(0' 40);  								}  							}  							else  							{  								if(lines[i].Substring(0' 40) == masterSHA1)  								{  									int s = 0;  									int e = refname.Length - 1;  									while(s < refname.Length && !char.IsDigit(refname[s])) ++s;  									while(e > 0 && !char.IsDigit(refname[e])) --e;  									if(e > s && s > 9 && (refname[s - 1] == 'v' || (refname[s - 1] == '-' && refname[s - 2] == 'v')))  									{  										if(Version.TryParse(refname.Substring(s' e - s + 1)' out result))  										{  											break;  										}  										else  										{  											result = null;  										}  									}  								}  							}  						}  					}  				}  			}
Magic Number,gitter.Updater,UpdateFromGitRepositoryProcess,C:\repos\amgine_gitter\gitter.updater.prj\GitUpdateDriver.cs,BeginUpdate,The following statement contains a magic number: monitor.MaximumProgress = 10;
Magic Number,gitter.Updater,UpdateFromGitRepositoryProcess,C:\repos\amgine_gitter\gitter.updater.prj\GitUpdateDriver.cs,UpdateProc,The following statement contains a magic number: try  			{  				if(_monitor.CancelRequested)  				{  					_monitor.ReportCancelled();  					return;  				}  				if(!_skipVersionCheck)  				{  					_monitor.Stage = "Checking for new version...";  					var ver = GetRemoteMasterVersion();  					if(ver == null)  					{  						_monitor.ReportFailure("Failed to check for new version");  						return;  					}  					else if(ver <= _currentVersion)  					{  						_monitor.Stage = "Your version is up to date";  						_monitor.CurrentProgress = _monitor.MaximumProgress;  						_monitor.ReportSuccess();  						return;  					}  					if(_monitor.CancelRequested)  					{  						_monitor.ReportCancelled();  						return;  					}  				}  				_monitor.Stage = "Downloading source code from " + _repoUrl + "...";  				_monitor.CurrentProgress = 1;  				if(DownloadSourceCode())  				{  					if(_monitor.CancelRequested)  					{  						_monitor.ReportCancelled();  						return;  					}  					_monitor.Stage = "Compiling program...";  					_monitor.CurrentProgress = 4;  					if(BuildSourceCode())  					{  						if(_monitor.CancelRequested)  						{  							_monitor.ReportCancelled();  							return;  						}  						_monitor.Stage = "Installing program...";  						_monitor.CurrentProgress = 8;  						KillAllGitterProcesses();  						if(_monitor.CancelRequested)  						{  							_monitor.ReportCancelled();  							return;  						}  						_monitor.CanCancel = false;  						if(DeployBuildResults())  						{  							_monitor.Stage = "Cleaning up temporary files...";  							_monitor.CurrentProgress = 9;  							CleanUp();  							_monitor.CurrentProgress = 10;  							_monitor.Stage = "Launching program...";  							StartApplication();  							_monitor.ReportSuccess();  						}  						else  						{  							_monitor.ReportFailure("Failed to deploy build results.");  						}  					}  					else  					{  						_monitor.ReportFailure("Failed to build source code.");  					}  				}  				else  				{  					_monitor.ReportFailure("Failed to download source code.");  				}  			}  			catch(Exception exc)  			{  				if(_monitor.CancelRequested)  				{  					_monitor.ReportCancelled();  				}  				else  				{  					_monitor.ReportFailure("Unexpected error:\n" + exc.Message);  				}  			}  			finally  			{  				CleanUp();  			}
Magic Number,gitter.Updater,UpdateFromGitRepositoryProcess,C:\repos\amgine_gitter\gitter.updater.prj\GitUpdateDriver.cs,UpdateProc,The following statement contains a magic number: try  			{  				if(_monitor.CancelRequested)  				{  					_monitor.ReportCancelled();  					return;  				}  				if(!_skipVersionCheck)  				{  					_monitor.Stage = "Checking for new version...";  					var ver = GetRemoteMasterVersion();  					if(ver == null)  					{  						_monitor.ReportFailure("Failed to check for new version");  						return;  					}  					else if(ver <= _currentVersion)  					{  						_monitor.Stage = "Your version is up to date";  						_monitor.CurrentProgress = _monitor.MaximumProgress;  						_monitor.ReportSuccess();  						return;  					}  					if(_monitor.CancelRequested)  					{  						_monitor.ReportCancelled();  						return;  					}  				}  				_monitor.Stage = "Downloading source code from " + _repoUrl + "...";  				_monitor.CurrentProgress = 1;  				if(DownloadSourceCode())  				{  					if(_monitor.CancelRequested)  					{  						_monitor.ReportCancelled();  						return;  					}  					_monitor.Stage = "Compiling program...";  					_monitor.CurrentProgress = 4;  					if(BuildSourceCode())  					{  						if(_monitor.CancelRequested)  						{  							_monitor.ReportCancelled();  							return;  						}  						_monitor.Stage = "Installing program...";  						_monitor.CurrentProgress = 8;  						KillAllGitterProcesses();  						if(_monitor.CancelRequested)  						{  							_monitor.ReportCancelled();  							return;  						}  						_monitor.CanCancel = false;  						if(DeployBuildResults())  						{  							_monitor.Stage = "Cleaning up temporary files...";  							_monitor.CurrentProgress = 9;  							CleanUp();  							_monitor.CurrentProgress = 10;  							_monitor.Stage = "Launching program...";  							StartApplication();  							_monitor.ReportSuccess();  						}  						else  						{  							_monitor.ReportFailure("Failed to deploy build results.");  						}  					}  					else  					{  						_monitor.ReportFailure("Failed to build source code.");  					}  				}  				else  				{  					_monitor.ReportFailure("Failed to download source code.");  				}  			}  			catch(Exception exc)  			{  				if(_monitor.CancelRequested)  				{  					_monitor.ReportCancelled();  				}  				else  				{  					_monitor.ReportFailure("Unexpected error:\n" + exc.Message);  				}  			}  			finally  			{  				CleanUp();  			}
Magic Number,gitter.Updater,UpdateFromGitRepositoryProcess,C:\repos\amgine_gitter\gitter.updater.prj\GitUpdateDriver.cs,UpdateProc,The following statement contains a magic number: try  			{  				if(_monitor.CancelRequested)  				{  					_monitor.ReportCancelled();  					return;  				}  				if(!_skipVersionCheck)  				{  					_monitor.Stage = "Checking for new version...";  					var ver = GetRemoteMasterVersion();  					if(ver == null)  					{  						_monitor.ReportFailure("Failed to check for new version");  						return;  					}  					else if(ver <= _currentVersion)  					{  						_monitor.Stage = "Your version is up to date";  						_monitor.CurrentProgress = _monitor.MaximumProgress;  						_monitor.ReportSuccess();  						return;  					}  					if(_monitor.CancelRequested)  					{  						_monitor.ReportCancelled();  						return;  					}  				}  				_monitor.Stage = "Downloading source code from " + _repoUrl + "...";  				_monitor.CurrentProgress = 1;  				if(DownloadSourceCode())  				{  					if(_monitor.CancelRequested)  					{  						_monitor.ReportCancelled();  						return;  					}  					_monitor.Stage = "Compiling program...";  					_monitor.CurrentProgress = 4;  					if(BuildSourceCode())  					{  						if(_monitor.CancelRequested)  						{  							_monitor.ReportCancelled();  							return;  						}  						_monitor.Stage = "Installing program...";  						_monitor.CurrentProgress = 8;  						KillAllGitterProcesses();  						if(_monitor.CancelRequested)  						{  							_monitor.ReportCancelled();  							return;  						}  						_monitor.CanCancel = false;  						if(DeployBuildResults())  						{  							_monitor.Stage = "Cleaning up temporary files...";  							_monitor.CurrentProgress = 9;  							CleanUp();  							_monitor.CurrentProgress = 10;  							_monitor.Stage = "Launching program...";  							StartApplication();  							_monitor.ReportSuccess();  						}  						else  						{  							_monitor.ReportFailure("Failed to deploy build results.");  						}  					}  					else  					{  						_monitor.ReportFailure("Failed to build source code.");  					}  				}  				else  				{  					_monitor.ReportFailure("Failed to download source code.");  				}  			}  			catch(Exception exc)  			{  				if(_monitor.CancelRequested)  				{  					_monitor.ReportCancelled();  				}  				else  				{  					_monitor.ReportFailure("Unexpected error:\n" + exc.Message);  				}  			}  			finally  			{  				CleanUp();  			}
Magic Number,gitter.Updater,UpdateFromGitRepositoryProcess,C:\repos\amgine_gitter\gitter.updater.prj\GitUpdateDriver.cs,UpdateProc,The following statement contains a magic number: try  			{  				if(_monitor.CancelRequested)  				{  					_monitor.ReportCancelled();  					return;  				}  				if(!_skipVersionCheck)  				{  					_monitor.Stage = "Checking for new version...";  					var ver = GetRemoteMasterVersion();  					if(ver == null)  					{  						_monitor.ReportFailure("Failed to check for new version");  						return;  					}  					else if(ver <= _currentVersion)  					{  						_monitor.Stage = "Your version is up to date";  						_monitor.CurrentProgress = _monitor.MaximumProgress;  						_monitor.ReportSuccess();  						return;  					}  					if(_monitor.CancelRequested)  					{  						_monitor.ReportCancelled();  						return;  					}  				}  				_monitor.Stage = "Downloading source code from " + _repoUrl + "...";  				_monitor.CurrentProgress = 1;  				if(DownloadSourceCode())  				{  					if(_monitor.CancelRequested)  					{  						_monitor.ReportCancelled();  						return;  					}  					_monitor.Stage = "Compiling program...";  					_monitor.CurrentProgress = 4;  					if(BuildSourceCode())  					{  						if(_monitor.CancelRequested)  						{  							_monitor.ReportCancelled();  							return;  						}  						_monitor.Stage = "Installing program...";  						_monitor.CurrentProgress = 8;  						KillAllGitterProcesses();  						if(_monitor.CancelRequested)  						{  							_monitor.ReportCancelled();  							return;  						}  						_monitor.CanCancel = false;  						if(DeployBuildResults())  						{  							_monitor.Stage = "Cleaning up temporary files...";  							_monitor.CurrentProgress = 9;  							CleanUp();  							_monitor.CurrentProgress = 10;  							_monitor.Stage = "Launching program...";  							StartApplication();  							_monitor.ReportSuccess();  						}  						else  						{  							_monitor.ReportFailure("Failed to deploy build results.");  						}  					}  					else  					{  						_monitor.ReportFailure("Failed to build source code.");  					}  				}  				else  				{  					_monitor.ReportFailure("Failed to download source code.");  				}  			}  			catch(Exception exc)  			{  				if(_monitor.CancelRequested)  				{  					_monitor.ReportCancelled();  				}  				else  				{  					_monitor.ReportFailure("Unexpected error:\n" + exc.Message);  				}  			}  			finally  			{  				CleanUp();  			}
Magic Number,gitter.Updater,MainForm,C:\repos\amgine_gitter\gitter.updater.prj\MainForm.cs,InitializeComponent,The following statement contains a magic number: this._btnCancel.Location = new System.Drawing.Point(371' 84);
Magic Number,gitter.Updater,MainForm,C:\repos\amgine_gitter\gitter.updater.prj\MainForm.cs,InitializeComponent,The following statement contains a magic number: this._btnCancel.Location = new System.Drawing.Point(371' 84);
Magic Number,gitter.Updater,MainForm,C:\repos\amgine_gitter\gitter.updater.prj\MainForm.cs,InitializeComponent,The following statement contains a magic number: this._btnCancel.Size = new System.Drawing.Size(75' 23);
Magic Number,gitter.Updater,MainForm,C:\repos\amgine_gitter\gitter.updater.prj\MainForm.cs,InitializeComponent,The following statement contains a magic number: this._btnCancel.Size = new System.Drawing.Size(75' 23);
Magic Number,gitter.Updater,MainForm,C:\repos\amgine_gitter\gitter.updater.prj\MainForm.cs,InitializeComponent,The following statement contains a magic number: this._updateProgress.Location = new System.Drawing.Point(15' 33);
Magic Number,gitter.Updater,MainForm,C:\repos\amgine_gitter\gitter.updater.prj\MainForm.cs,InitializeComponent,The following statement contains a magic number: this._updateProgress.Location = new System.Drawing.Point(15' 33);
Magic Number,gitter.Updater,MainForm,C:\repos\amgine_gitter\gitter.updater.prj\MainForm.cs,InitializeComponent,The following statement contains a magic number: this._updateProgress.Size = new System.Drawing.Size(426' 23);
Magic Number,gitter.Updater,MainForm,C:\repos\amgine_gitter\gitter.updater.prj\MainForm.cs,InitializeComponent,The following statement contains a magic number: this._updateProgress.Size = new System.Drawing.Size(426' 23);
Magic Number,gitter.Updater,MainForm,C:\repos\amgine_gitter\gitter.updater.prj\MainForm.cs,InitializeComponent,The following statement contains a magic number: this._lblStage.Location = new System.Drawing.Point(12' 14);
Magic Number,gitter.Updater,MainForm,C:\repos\amgine_gitter\gitter.updater.prj\MainForm.cs,InitializeComponent,The following statement contains a magic number: this._lblStage.Location = new System.Drawing.Point(12' 14);
Magic Number,gitter.Updater,MainForm,C:\repos\amgine_gitter\gitter.updater.prj\MainForm.cs,InitializeComponent,The following statement contains a magic number: this._lblStage.Margin = new System.Windows.Forms.Padding(3' 0' 3' 3);
Magic Number,gitter.Updater,MainForm,C:\repos\amgine_gitter\gitter.updater.prj\MainForm.cs,InitializeComponent,The following statement contains a magic number: this._lblStage.Margin = new System.Windows.Forms.Padding(3' 0' 3' 3);
Magic Number,gitter.Updater,MainForm,C:\repos\amgine_gitter\gitter.updater.prj\MainForm.cs,InitializeComponent,The following statement contains a magic number: this._lblStage.Margin = new System.Windows.Forms.Padding(3' 0' 3' 3);
Magic Number,gitter.Updater,MainForm,C:\repos\amgine_gitter\gitter.updater.prj\MainForm.cs,InitializeComponent,The following statement contains a magic number: this._lblStage.Size = new System.Drawing.Size(0' 13);
Magic Number,gitter.Updater,MainForm,C:\repos\amgine_gitter\gitter.updater.prj\MainForm.cs,InitializeComponent,The following statement contains a magic number: this._lblStage.TabIndex = 2;
Magic Number,gitter.Updater,MainForm,C:\repos\amgine_gitter\gitter.updater.prj\MainForm.cs,InitializeComponent,The following statement contains a magic number: this._pnlContainer.Size = new System.Drawing.Size(455' 76);
Magic Number,gitter.Updater,MainForm,C:\repos\amgine_gitter\gitter.updater.prj\MainForm.cs,InitializeComponent,The following statement contains a magic number: this._pnlContainer.Size = new System.Drawing.Size(455' 76);
Magic Number,gitter.Updater,MainForm,C:\repos\amgine_gitter\gitter.updater.prj\MainForm.cs,InitializeComponent,The following statement contains a magic number: this._pnlContainer.TabIndex = 3;
Magic Number,gitter.Updater,MainForm,C:\repos\amgine_gitter\gitter.updater.prj\MainForm.cs,InitializeComponent,The following statement contains a magic number: this._pnlLine.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(223))))' ((int)(((byte)(223))))' ((int)(((byte)(223)))));
Magic Number,gitter.Updater,MainForm,C:\repos\amgine_gitter\gitter.updater.prj\MainForm.cs,InitializeComponent,The following statement contains a magic number: this._pnlLine.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(223))))' ((int)(((byte)(223))))' ((int)(((byte)(223)))));
Magic Number,gitter.Updater,MainForm,C:\repos\amgine_gitter\gitter.updater.prj\MainForm.cs,InitializeComponent,The following statement contains a magic number: this._pnlLine.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(223))))' ((int)(((byte)(223))))' ((int)(((byte)(223)))));
Magic Number,gitter.Updater,MainForm,C:\repos\amgine_gitter\gitter.updater.prj\MainForm.cs,InitializeComponent,The following statement contains a magic number: this._pnlLine.Location = new System.Drawing.Point(0' 75);
Magic Number,gitter.Updater,MainForm,C:\repos\amgine_gitter\gitter.updater.prj\MainForm.cs,InitializeComponent,The following statement contains a magic number: this._pnlLine.Size = new System.Drawing.Size(455' 1);
Magic Number,gitter.Updater,MainForm,C:\repos\amgine_gitter\gitter.updater.prj\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(453' 115);
Magic Number,gitter.Updater,MainForm,C:\repos\amgine_gitter\gitter.updater.prj\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(453' 115);
Magic Number,gitter.Updater,Utility,C:\repos\amgine_gitter\gitter.updater.prj\Utility.cs,KillAllGitterProcesses,The following statement contains a magic number: try  			{  				var di = new DirectoryInfo(targetDirectory);  				var processes = Process.GetProcesses();  				foreach(var p in processes)  				{  					bool kill = p.ProcessName == "gitter";  					if(!kill)  					{  						try  						{  							var dir = Path.GetDirectoryName(p.MainModule.FileName);  							var d = new DirectoryInfo(dir);  							while(d != null)  							{  								if(di.FullName == d.FullName)  								{  									kill = true;  									break;  								}  								d = d.Parent;  							}  						}  						catch  						{  						}  					}  					if(kill)  					{  						bool closed = false;  						try  						{  							closed = p.CloseMainWindow();  						}  						catch  						{  						}  						try  						{  							if(!closed || !p.WaitForExit(2000))  							{  								p.Kill();  							}  						}  						catch  						{  						}  					}  				}  			}  			catch  			{  			}
