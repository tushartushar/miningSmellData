Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Cimbalino.Toolkit.Extensions,IComparableExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IComparableExtensions.cs,CompareTo,Cyclomatic complexity of the method is 16
Complex Method,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,Cyclomatic complexity of the method is 9
Complex Method,Cimbalino.Toolkit.Services,WindowsPhoneStoreServiceAppCapabilitiesNode,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Services\WindowsPhoneStoreServiceAppCapabilitiesNode.cs,ParseXml,Cyclomatic complexity of the method is 11
Complex Method,Cimbalino.Toolkit.Services,WindowsPhoneStoreServiceAppCapabilityNode,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Services\WindowsPhoneStoreServiceAppCapabilityNode.cs,ParseXml,Cyclomatic complexity of the method is 14
Complex Method,Cimbalino.Toolkit.Services,WindowsPhoneStoreServiceAppCategoryNode,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Services\WindowsPhoneStoreServiceAppCategoryNode.cs,ParseXml,Cyclomatic complexity of the method is 17
Complex Method,Cimbalino.Toolkit.Services,WindowsPhoneStoreServiceAppEntryNode,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Services\WindowsPhoneStoreServiceAppEntryNode.cs,ParseXml,Cyclomatic complexity of the method is 64
Complex Method,Cimbalino.Toolkit.Services,WindowsPhoneStoreServiceAppHwCapabilityNode,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Services\WindowsPhoneStoreServiceAppHwCapabilityNode.cs,ParseXml,Cyclomatic complexity of the method is 17
Complex Method,Cimbalino.Toolkit.Services,WindowsPhoneStoreServiceAppImageNode,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Services\WindowsPhoneStoreServiceAppImageNode.cs,ParseXml,Cyclomatic complexity of the method is 11
Complex Method,Cimbalino.Toolkit.Services,WindowsPhoneStoreServiceAppNode,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Services\WindowsPhoneStoreServiceAppNode.cs,ParseXml,Cyclomatic complexity of the method is 73
Complex Method,Cimbalino.Toolkit.Services,WindowsPhoneStoreServiceAppOfferNode,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Services\WindowsPhoneStoreServiceAppOfferNode.cs,ParseXml,Cyclomatic complexity of the method is 34
Complex Method,Cimbalino.Toolkit.Services,WindowsPhoneStoreServiceAppRatingsDistributionsNode,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Services\WindowsPhoneStoreServiceAppRatingsDistributionsNode.cs,ParseXml,Cyclomatic complexity of the method is 19
Complex Method,Cimbalino.Toolkit.Services,WindowsStoreServiceAppCategoryNode,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Services\WindowsStoreServiceAppCategoryNode.cs,ParseXml,Cyclomatic complexity of the method is 10
Complex Method,Cimbalino.Toolkit.Services,WindowsStoreServiceAppNode,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Services\WindowsStoreServiceAppNode.cs,ParseXml,Cyclomatic complexity of the method is 49
Complex Method,Cimbalino.Toolkit.Services,WindowsStoreServiceAppPackageNode,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Services\WindowsStoreServiceAppPackageNode.cs,ParseXml,Cyclomatic complexity of the method is 46
Complex Method,Cimbalino.Toolkit.Services,WindowsStoreServiceAppScreenshotNode,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Services\WindowsStoreServiceAppScreenshotNode.cs,ParseXml,Cyclomatic complexity of the method is 10
Long Parameter List,Cimbalino.Toolkit.Services,LauncherServiceAppInfo,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Services\LauncherServiceAppInfo.cs,LauncherServiceAppInfo,The method has 5 parameters.
Long Parameter List,Cimbalino.Toolkit.Services,NavigationServiceNavigatingCancelEventArgs,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Services\NavigationServiceNavigatingCancelEventArgs.cs,NavigationServiceNavigatingCancelEventArgs,The method has 5 parameters.
Long Parameter List,Cimbalino.Toolkit.Services,IEmailComposeService,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Services\IEmailComposeService.cs,ShowAsync,The method has 5 parameters.
Long Parameter List,Cimbalino.Toolkit.Services,LocationServicePosition,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Services\LocationServicePosition.cs,LocationServicePosition,The method has 8 parameters.
Long Statement,Cimbalino.Toolkit.Extensions,IDictionaryExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IDictionaryExtensions.cs,ToQueryString,The length of the statement  "	return string.Join ("&"' dictionary.Where (x => includeEmptyValues || !string.IsNullOrEmpty (x.Value)).Select (x => WebUtility.UrlEncode (x.Key) + "=" + WebUtility.UrlEncode (x.Value ?? string.Empty))); " is 202.
Long Statement,Cimbalino.Toolkit.Extensions,IEnumerableExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IEnumerableExtensions.cs,Permutations,The length of the statement  "	return Permutations (itemsArray.Length' groupSize' allowRepeat ? null : new int[0]).Select (x => x.Select (y => itemsArray [y])); " is 129.
Long Statement,Cimbalino.Toolkit.Extensions,IEnumerableExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IEnumerableExtensions.cs,Combinations,The length of the statement  "	return Enumerable.Range (startIndex' count - startIndex).SelectMany (x => Combinations (count' selectionCount - 1' allowRepeat ? x : x + 1' allowRepeat).Select (c => c.Concat (x))); " is 181.
Long Statement,Cimbalino.Toolkit.Extensions,IEnumerableExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IEnumerableExtensions.cs,Permutations,The length of the statement  "	return Enumerable.Range (0' count).Except (exceptions ?? new int[0]).SelectMany (x => Permutations (count' selectionCount - 1' exceptions == null ? null : exceptions.Concat (x).ToArray ()).Select (c => c.Concat (x))); " is 217.
Long Statement,Cimbalino.Toolkit.Extensions,UriBuilderExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\UriBuilderExtensions.cs,AppendQueryParameter,The length of the statement  "		uriBuilder.Query = string.Format ("{0}&{1}={2}"' query.Substring (1)' WebUtility.UrlEncode (key)' WebUtility.UrlEncode (value)); " is 128.
Long Statement,Cimbalino.Toolkit.Extensions,UriExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\UriExtensions.cs,QueryString,The length of the statement  "	return query.Split ('&').Where (x => !string.IsNullOrEmpty (x)).Select (x => x.Split ('=')).Select (x => new KeyValuePair<string' string> (WebUtility.UrlDecode (x [0])' x.Length == 2 && !string.IsNullOrEmpty (x [1]) ? WebUtility.UrlDecode (x [1]) : null)); " is 256.
Long Statement,Cimbalino.Toolkit.Services,WindowsPhoneStoreServiceAppCategoryNode,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Services\WindowsPhoneStoreServiceAppCategoryNode.cs,ParseXml,The length of the statement  "				node.IsRoot = string.Equals (reader.ReadElementContentAsString ()' bool.TrueString' StringComparison.OrdinalIgnoreCase); " is 120.
Long Statement,Cimbalino.Toolkit.Services,LocationServicePosition,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Services\LocationServicePosition.cs,GetDistanceTo,The length of the statement  "	var r0 = Math.Pow (Math.Sin (deltaLatitude / 2)' 2) + (Math.Pow (Math.Sin (deltaLongitude / 2)' 2) * Math.Cos (latitude0) * Math.Cos (latitude1)); " is 146.
Empty Catch Block,Cimbalino.Toolkit.Extensions,WebRequestExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\WebRequestExtensions.cs,SetNoCacheHeaders,The method has an empty catch block.
Empty Catch Block,Cimbalino.Toolkit.Helpers,ObservableTaskBase,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Helpers\ObservableTaskBase.cs,AwaitTask,The method has an empty catch block.
Magic Number,Cimbalino.Toolkit.Compression,Adler32,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Compression\Adler32.generated.cs,Update,The following statement contains a magic number: while (len > 0) {  	int k = len < NMAX ? len : NMAX;  	len -= k;  	while (k >= 16) {  		//s1 += (buf[index++] & 0xff); s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		k -= 16;  	}  	if (k != 0) {  		do {  			s1 += buf [index++];  			s2 += s1;  		} while (--k != 0);  	}  	s1 %= BASE;  	s2 %= BASE;  }  
Magic Number,Cimbalino.Toolkit.Compression,Adler32,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Compression\Adler32.generated.cs,Update,The following statement contains a magic number: while (len > 0) {  	int k = len < NMAX ? len : NMAX;  	len -= k;  	while (k >= 16) {  		//s1 += (buf[index++] & 0xff); s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		s1 += buf [index++];  		s2 += s1;  		k -= 16;  	}  	if (k != 0) {  		do {  			s1 += buf [index++];  			s2 += s1;  		} while (--k != 0);  	}  	s1 %= BASE;  	s2 %= BASE;  }  
Magic Number,Cimbalino.Toolkit.Compression,Adler32,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Compression\Adler32.generated.cs,Update,The following statement contains a magic number: while (k >= 16) {  	//s1 += (buf[index++] & 0xff); s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	k -= 16;  }  
Magic Number,Cimbalino.Toolkit.Compression,Adler32,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Compression\Adler32.generated.cs,Update,The following statement contains a magic number: while (k >= 16) {  	//s1 += (buf[index++] & 0xff); s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	s1 += buf [index++];  	s2 += s1;  	k -= 16;  }  
Magic Number,Cimbalino.Toolkit.Compression,Adler32,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Compression\Adler32.generated.cs,Update,The following statement contains a magic number: k -= 16;  
Magic Number,Cimbalino.Toolkit.Compression,Adler32,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Compression\Adler32.generated.cs,Update,The following statement contains a magic number: return (uint)((s2 << 16) | s1);  
Magic Number,Cimbalino.Toolkit.Compression,Crc32,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Compression\Crc32.generated.cs,Update,The following statement contains a magic number: while (--length >= 0) {  	crc = CrcTable [(crc ^ buffer [offset++]) & 0xFF] ^ (crc >> 8);  }  
Magic Number,Cimbalino.Toolkit.Compression,Crc32,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Compression\Crc32.generated.cs,Update,The following statement contains a magic number: crc = CrcTable [(crc ^ buffer [offset++]) & 0xFF] ^ (crc >> 8);  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,IsPrime,The following statement contains a magic number: if (input <= 3) {  	return input > 1;  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,IsPrime,The following statement contains a magic number: if (input % 2 == 0 || input % 3 == 0) {  	return false;  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,IsPrime,The following statement contains a magic number: if (input % 2 == 0 || input % 3 == 0) {  	return false;  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,IsPrime,The following statement contains a magic number: for (var divider = 5; divider * divider <= input; divider += 6) {  	if (input % divider == 0 || input % (divider + 2) == 0) {  		return false;  	}  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,IsPrime,The following statement contains a magic number: for (var divider = 5; divider * divider <= input; divider += 6) {  	if (input % divider == 0 || input % (divider + 2) == 0) {  		return false;  	}  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,IsPrime,The following statement contains a magic number: for (var divider = 5; divider * divider <= input; divider += 6) {  	if (input % divider == 0 || input % (divider + 2) == 0) {  		return false;  	}  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,IsPrime,The following statement contains a magic number: divider += 6
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,IsPrime,The following statement contains a magic number: if (input % divider == 0 || input % (divider + 2) == 0) {  	return false;  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: while (input > 1) {  	var factor = 1;  	if (input % 2 == 0) {  		factor = 2;  	} else if (input % 3 == 0) {  		factor = 3;  	} else {  		for (var divider = 5; divider <= input; divider += 6) {  			if (input % divider == 0) {  				factor = divider;  				break;  			}  			if (input % (divider + 2) == 0) {  				factor = divider + 2;  				break;  			}  		}  	}  	if (factor != 1) {  		yield return factor;  		input = input / factor;  	}  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: while (input > 1) {  	var factor = 1;  	if (input % 2 == 0) {  		factor = 2;  	} else if (input % 3 == 0) {  		factor = 3;  	} else {  		for (var divider = 5; divider <= input; divider += 6) {  			if (input % divider == 0) {  				factor = divider;  				break;  			}  			if (input % (divider + 2) == 0) {  				factor = divider + 2;  				break;  			}  		}  	}  	if (factor != 1) {  		yield return factor;  		input = input / factor;  	}  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: while (input > 1) {  	var factor = 1;  	if (input % 2 == 0) {  		factor = 2;  	} else if (input % 3 == 0) {  		factor = 3;  	} else {  		for (var divider = 5; divider <= input; divider += 6) {  			if (input % divider == 0) {  				factor = divider;  				break;  			}  			if (input % (divider + 2) == 0) {  				factor = divider + 2;  				break;  			}  		}  	}  	if (factor != 1) {  		yield return factor;  		input = input / factor;  	}  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: while (input > 1) {  	var factor = 1;  	if (input % 2 == 0) {  		factor = 2;  	} else if (input % 3 == 0) {  		factor = 3;  	} else {  		for (var divider = 5; divider <= input; divider += 6) {  			if (input % divider == 0) {  				factor = divider;  				break;  			}  			if (input % (divider + 2) == 0) {  				factor = divider + 2;  				break;  			}  		}  	}  	if (factor != 1) {  		yield return factor;  		input = input / factor;  	}  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: while (input > 1) {  	var factor = 1;  	if (input % 2 == 0) {  		factor = 2;  	} else if (input % 3 == 0) {  		factor = 3;  	} else {  		for (var divider = 5; divider <= input; divider += 6) {  			if (input % divider == 0) {  				factor = divider;  				break;  			}  			if (input % (divider + 2) == 0) {  				factor = divider + 2;  				break;  			}  		}  	}  	if (factor != 1) {  		yield return factor;  		input = input / factor;  	}  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: while (input > 1) {  	var factor = 1;  	if (input % 2 == 0) {  		factor = 2;  	} else if (input % 3 == 0) {  		factor = 3;  	} else {  		for (var divider = 5; divider <= input; divider += 6) {  			if (input % divider == 0) {  				factor = divider;  				break;  			}  			if (input % (divider + 2) == 0) {  				factor = divider + 2;  				break;  			}  		}  	}  	if (factor != 1) {  		yield return factor;  		input = input / factor;  	}  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: while (input > 1) {  	var factor = 1;  	if (input % 2 == 0) {  		factor = 2;  	} else if (input % 3 == 0) {  		factor = 3;  	} else {  		for (var divider = 5; divider <= input; divider += 6) {  			if (input % divider == 0) {  				factor = divider;  				break;  			}  			if (input % (divider + 2) == 0) {  				factor = divider + 2;  				break;  			}  		}  	}  	if (factor != 1) {  		yield return factor;  		input = input / factor;  	}  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: while (input > 1) {  	var factor = 1;  	if (input % 2 == 0) {  		factor = 2;  	} else if (input % 3 == 0) {  		factor = 3;  	} else {  		for (var divider = 5; divider <= input; divider += 6) {  			if (input % divider == 0) {  				factor = divider;  				break;  			}  			if (input % (divider + 2) == 0) {  				factor = divider + 2;  				break;  			}  		}  	}  	if (factor != 1) {  		yield return factor;  		input = input / factor;  	}  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: if (input % 2 == 0) {  	factor = 2;  } else if (input % 3 == 0) {  	factor = 3;  } else {  	for (var divider = 5; divider <= input; divider += 6) {  		if (input % divider == 0) {  			factor = divider;  			break;  		}  		if (input % (divider + 2) == 0) {  			factor = divider + 2;  			break;  		}  	}  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: if (input % 2 == 0) {  	factor = 2;  } else if (input % 3 == 0) {  	factor = 3;  } else {  	for (var divider = 5; divider <= input; divider += 6) {  		if (input % divider == 0) {  			factor = divider;  			break;  		}  		if (input % (divider + 2) == 0) {  			factor = divider + 2;  			break;  		}  	}  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: if (input % 2 == 0) {  	factor = 2;  } else if (input % 3 == 0) {  	factor = 3;  } else {  	for (var divider = 5; divider <= input; divider += 6) {  		if (input % divider == 0) {  			factor = divider;  			break;  		}  		if (input % (divider + 2) == 0) {  			factor = divider + 2;  			break;  		}  	}  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: if (input % 2 == 0) {  	factor = 2;  } else if (input % 3 == 0) {  	factor = 3;  } else {  	for (var divider = 5; divider <= input; divider += 6) {  		if (input % divider == 0) {  			factor = divider;  			break;  		}  		if (input % (divider + 2) == 0) {  			factor = divider + 2;  			break;  		}  	}  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: if (input % 2 == 0) {  	factor = 2;  } else if (input % 3 == 0) {  	factor = 3;  } else {  	for (var divider = 5; divider <= input; divider += 6) {  		if (input % divider == 0) {  			factor = divider;  			break;  		}  		if (input % (divider + 2) == 0) {  			factor = divider + 2;  			break;  		}  	}  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: if (input % 2 == 0) {  	factor = 2;  } else if (input % 3 == 0) {  	factor = 3;  } else {  	for (var divider = 5; divider <= input; divider += 6) {  		if (input % divider == 0) {  			factor = divider;  			break;  		}  		if (input % (divider + 2) == 0) {  			factor = divider + 2;  			break;  		}  	}  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: if (input % 2 == 0) {  	factor = 2;  } else if (input % 3 == 0) {  	factor = 3;  } else {  	for (var divider = 5; divider <= input; divider += 6) {  		if (input % divider == 0) {  			factor = divider;  			break;  		}  		if (input % (divider + 2) == 0) {  			factor = divider + 2;  			break;  		}  	}  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: if (input % 2 == 0) {  	factor = 2;  } else if (input % 3 == 0) {  	factor = 3;  } else {  	for (var divider = 5; divider <= input; divider += 6) {  		if (input % divider == 0) {  			factor = divider;  			break;  		}  		if (input % (divider + 2) == 0) {  			factor = divider + 2;  			break;  		}  	}  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: factor = 2;  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: if (input % 3 == 0) {  	factor = 3;  } else {  	for (var divider = 5; divider <= input; divider += 6) {  		if (input % divider == 0) {  			factor = divider;  			break;  		}  		if (input % (divider + 2) == 0) {  			factor = divider + 2;  			break;  		}  	}  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: if (input % 3 == 0) {  	factor = 3;  } else {  	for (var divider = 5; divider <= input; divider += 6) {  		if (input % divider == 0) {  			factor = divider;  			break;  		}  		if (input % (divider + 2) == 0) {  			factor = divider + 2;  			break;  		}  	}  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: if (input % 3 == 0) {  	factor = 3;  } else {  	for (var divider = 5; divider <= input; divider += 6) {  		if (input % divider == 0) {  			factor = divider;  			break;  		}  		if (input % (divider + 2) == 0) {  			factor = divider + 2;  			break;  		}  	}  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: if (input % 3 == 0) {  	factor = 3;  } else {  	for (var divider = 5; divider <= input; divider += 6) {  		if (input % divider == 0) {  			factor = divider;  			break;  		}  		if (input % (divider + 2) == 0) {  			factor = divider + 2;  			break;  		}  	}  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: if (input % 3 == 0) {  	factor = 3;  } else {  	for (var divider = 5; divider <= input; divider += 6) {  		if (input % divider == 0) {  			factor = divider;  			break;  		}  		if (input % (divider + 2) == 0) {  			factor = divider + 2;  			break;  		}  	}  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: if (input % 3 == 0) {  	factor = 3;  } else {  	for (var divider = 5; divider <= input; divider += 6) {  		if (input % divider == 0) {  			factor = divider;  			break;  		}  		if (input % (divider + 2) == 0) {  			factor = divider + 2;  			break;  		}  	}  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: factor = 3;  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: for (var divider = 5; divider <= input; divider += 6) {  	if (input % divider == 0) {  		factor = divider;  		break;  	}  	if (input % (divider + 2) == 0) {  		factor = divider + 2;  		break;  	}  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: for (var divider = 5; divider <= input; divider += 6) {  	if (input % divider == 0) {  		factor = divider;  		break;  	}  	if (input % (divider + 2) == 0) {  		factor = divider + 2;  		break;  	}  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: for (var divider = 5; divider <= input; divider += 6) {  	if (input % divider == 0) {  		factor = divider;  		break;  	}  	if (input % (divider + 2) == 0) {  		factor = divider + 2;  		break;  	}  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: for (var divider = 5; divider <= input; divider += 6) {  	if (input % divider == 0) {  		factor = divider;  		break;  	}  	if (input % (divider + 2) == 0) {  		factor = divider + 2;  		break;  	}  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: divider += 6
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: if (input % (divider + 2) == 0) {  	factor = divider + 2;  	break;  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: if (input % (divider + 2) == 0) {  	factor = divider + 2;  	break;  }  
Magic Number,Cimbalino.Toolkit.Extensions,IntExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\IntExtensions.cs,PrimeFactors,The following statement contains a magic number: factor = divider + 2;  
Magic Number,Cimbalino.Toolkit.Extensions,UriExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\UriExtensions.cs,QueryString,The following statement contains a magic number: return query.Split ('&').Where (x => !string.IsNullOrEmpty (x)).Select (x => x.Split ('=')).Select (x => new KeyValuePair<string' string> (WebUtility.UrlDecode (x [0])' x.Length == 2 && !string.IsNullOrEmpty (x [1]) ? WebUtility.UrlDecode (x [1]) : null));  
Magic Number,Cimbalino.Toolkit.Extensions,XmlReaderExtensions,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Extensions\XmlReaderExtensions.cs,ReadElementContentAsUrn,The following statement contains a magic number: return id != null && id.StartsWith ("urn:uuid:") ? id.Substring (9) : id;  
Magic Number,Cimbalino.Toolkit.Services,LocationServicePosition,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Services\LocationServicePosition.cs,GetHashCode,The following statement contains a magic number: unchecked {  	return (Latitude.GetHashCode () * 397) ^ Longitude.GetHashCode ();  }  
Magic Number,Cimbalino.Toolkit.Services,LocationServicePosition,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Services\LocationServicePosition.cs,GetHashCode,The following statement contains a magic number: return (Latitude.GetHashCode () * 397) ^ Longitude.GetHashCode ();  
Magic Number,Cimbalino.Toolkit.Services,LocationServicePosition,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Services\LocationServicePosition.cs,GetDistanceTo,The following statement contains a magic number: return 6376500 * r1;  
Duplicate Code,Cimbalino.Toolkit.Compression,Adler32,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Compression\Adler32.generated.cs,Update,The method contains a code clone-set at the following line numbers (starting from the method definition): ((11' 30)' (13' 32)' (15' 34)' (17' 36)' (19' 38)' (21' 40)' (23' 42))
Duplicate Code,Cimbalino.Toolkit.Compression,Adler32,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Compression\Adler32.generated.cs,Update,The method contains a code clone-set at the following line numbers (starting from the method definition): ((11' 39)' (13' 41))
Duplicate Code,Cimbalino.Toolkit.Compression,Adler32,F:\newReposMay17\Cimbalino_Cimbalino-Toolkit\src\Cimbalino.Toolkit.Core (Portable)\Compression\Adler32.generated.cs,Update,The method contains a code clone-set at the following line numbers (starting from the method definition): ((11' 30)' (15' 34)' (17' 36)' (19' 38)' (21' 40)' (23' 42))
