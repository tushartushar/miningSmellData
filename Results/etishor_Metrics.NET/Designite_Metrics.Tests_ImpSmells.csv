Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Metrics.Tests,TestMetricsBuilder,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\TestMetricsBuilder.cs,BuildPerformanceCounter,The method has 5 parameters. Parameters: name' unit' counterCategory' counterName' counterInstance
Long Parameter List,Metrics.Tests,TestMetricsBuilder,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\TestMetricsBuilder.cs,BuildTimer,The method has 5 parameters. Parameters: name' unit' rateUnit' durationUnit' samplingType
Long Parameter List,Metrics.Tests,TestMetricsBuilder,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\TestMetricsBuilder.cs,BuildTimer,The method has 5 parameters. Parameters: name' unit' rateUnit' durationUnit' histogram
Long Parameter List,Metrics.Tests,TestMetricsBuilder,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\TestMetricsBuilder.cs,BuildTimer,The method has 5 parameters. Parameters: name' unit' rateUnit' durationUnit' reservoir
Long Statement,Metrics.Tests.MetricsConfigTests,HttpEndpointTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\MetricsConfigTests\HttpEndpointTests.cs,HttpEndpointCanBeDisposed,The length of the statement  "            var config = Metric.Config.WithHttpEndpoint("http://localhost:58888/metricstest/HttpListenerTests/HttpEndpointCanBeDisposed/"); " is 127.
Long Statement,Metrics.Tests.MetricsConfigTests,HttpEndpointTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\MetricsConfigTests\HttpEndpointTests.cs,SecondCallToWithHttpEndportDoesNotThrow,The length of the statement  "            using (var config = Metric.Config.WithHttpEndpoint("http://localhost:58888/metricstest/HttpListenerTests/sameendpoint/")) " is 121.
Long Statement,Metrics.Tests.MetricsConfigTests,HttpEndpointTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\MetricsConfigTests\HttpEndpointTests.cs,NoErrorIsLoggedWhenHttpEndpointIsDisposed,The length of the statement  "            using (var config = Metric.Config.WithHttpEndpoint("http://localhost:58888/metricstest/HttpListenerTests/DisposeMeOnce/")) " is 122.
Long Statement,Metrics.Tests.MetricsConfigTests,HttpEndpointTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\MetricsConfigTests\HttpEndpointTests.cs,CanSurviveDoubleDisposal,The length of the statement  "            using (var config = Metric.Config.WithHttpEndpoint("http://localhost:58888/metricstest/HttpListenerTests/DisposeMeTwice/")) " is 123.
Long Statement,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The length of the statement  "            TimeUnit.Nanoseconds.ScalingFactorFor(TimeUnit.Days).Should().BeApproximately(1.0 * 0.001 * 0.001 * 0.001 * 1 / 60.0 * 1 / 60.0 * 1 / 24.0' 1.0E-20); " is 149.
Long Statement,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The length of the statement  "            TimeUnit.Microseconds.ScalingFactorFor(TimeUnit.Days).Should().Be(1.0 * 0.001 * 0.001 * 1 / 60.0 * 1 / 60.0 * 1 / 24.0); " is 120.
Long Statement,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The length of the statement  "            TimeUnit.Milliseconds.ScalingFactorFor(TimeUnit.Hours).Should().BeApproximately(1.0 * 0.001 * 1 / 60.0 * 1 / 60.0' 1.0E-20); " is 124.
Long Statement,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The length of the statement  "            TimeUnit.Milliseconds.ScalingFactorFor(TimeUnit.Days).Should().BeApproximately(1.0 * 0.001 * 1 / 60.0 * 1 / 60.0 * 1 / 24.0' 1.0E-20); " is 134.
Long Statement,Metrics.Tests.HealthChecksTests,HealthCheckTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\HealthChecksTests\HealthCheckTests.cs,HealthCheck_FailedIfActionThrows,The length of the statement  "            new HealthCheck(name' () => { ThrowException(); HealthCheckResult.Healthy(); }).Execute().Check.IsHealthy.Should().BeFalse(); " is 125.
Long Statement,Metrics.Tests.OwinAdapter,OwinMiddlewareTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\OwinAdapter\OwinMiddlewareTests.cs,OwinMetrics_ShouldBeAbleToRecordErrors,The length of the statement  "            (await server.HttpClient.GetAsync("http://local.test/test/error")).StatusCode.Should().Be(HttpStatusCode.InternalServerError); " is 126.
Long Statement,Metrics.Tests.OwinAdapter,OwinMiddlewareTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\OwinAdapter\OwinMiddlewareTests.cs,OwinMetrics_ShouldBeAbleToRecordErrors,The length of the statement  "            (await server.HttpClient.GetAsync("http://local.test/test/error")).StatusCode.Should().Be(HttpStatusCode.InternalServerError); " is 126.
Long Statement,Metrics.Tests,TestMetricsBuilder,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\TestMetricsBuilder.cs,BuildTimer,The length of the statement  "            return new TimerMetric(new HistogramMetric(new ExponentiallyDecayingReservoir(this.clock' this.scheduler))' new MeterMetric(this.clock' this.scheduler)' this.clock); " is 165.
Long Statement,Metrics.Tests,TestMetricsBuilder,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\TestMetricsBuilder.cs,BuildTimer,The length of the statement  "            return new TimerMetric(new HistogramMetric(new ExponentiallyDecayingReservoir(this.clock' this.scheduler))' new MeterMetric(this.clock' this.scheduler)' this.clock); " is 165.
Long Statement,Metrics.Tests,TestMetricsBuilder,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\TestMetricsBuilder.cs,BuildTimer,The length of the statement  "            return new TimerMetric(new HistogramMetric(new ExponentiallyDecayingReservoir(this.clock' this.scheduler))' new MeterMetric(this.clock' this.scheduler)' this.clock); " is 165.
Long Statement,Metrics.Tests,TestContext,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\TestContext.cs,ValueFor,The length of the statement  "            value.Should().HaveCount(1' "No metric found with name {0} in context {1}. Available names: {2}"' nameWithContext.Last()' " is 121.
Magic Number,Metrics.Tests.Core,DefaultContextCustomMetricsTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Core\DefaultContextCustomMetricsTests.cs,MetricsContext_CanRegisterCustomCounter,The following statement contains a magic number: context.DataProvider.CurrentMetricsData.Counters.Single().Value.Count.Should().Be(10L);
Magic Number,Metrics.Tests.Core,DefaultContextCustomMetricsTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Core\DefaultContextCustomMetricsTests.cs,MetricsContext_CanRegisterTimerWithCustomReservoir,The following statement contains a magic number: timer.Record(10L' TimeUnit.Nanoseconds);
Magic Number,Metrics.Tests.Core,DefaultContextCustomMetricsTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Core\DefaultContextCustomMetricsTests.cs,MetricsContext_CanRegisterTimerWithCustomReservoir,The following statement contains a magic number: reservoir.Values.Single().Should().Be(10L);
Magic Number,Metrics.Tests.Core,DefaultContextCustomMetricsTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Core\DefaultContextCustomMetricsTests.cs,MetricsContext_CanRegisterTimerWithCustomHistogram,The following statement contains a magic number: timer.Record(10L' TimeUnit.Nanoseconds);
Magic Number,Metrics.Tests.Core,DefaultContextCustomMetricsTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Core\DefaultContextCustomMetricsTests.cs,MetricsContext_CanRegisterTimerWithCustomHistogram,The following statement contains a magic number: histogram.Reservoir.Values.Single().Should().Be(10L);
Magic Number,Metrics.Tests.Core,DefaultContextTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Core\DefaultContextTests.cs,MetricsContext_DataProviderReflectsChildContxts,The following statement contains a magic number: provider.CurrentMetricsData.ChildMetrics.Single().Counters.Single().Value.Count.Should().Be(2);
Magic Number,Metrics.Tests.Json,JsonSerializationTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Json\JsonSerializationTests.cs,JsonSerializationTests,The following statement contains a magic number: this.data = new MetricsData("test"' new DateTime(2014' 2' 17)' new[] { new EnvironmentEntry("name"' "1") }'                  new[] { gauge }' new[] { counter }' new[] { meter }' new[] { histogram }' new[] { timer }'                      Enumerable.Empty<MetricsData>()              );
Magic Number,Metrics.Tests.Json,JsonSerializationTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Json\JsonSerializationTests.cs,JsonSerializationTests,The following statement contains a magic number: this.data = new MetricsData("test"' new DateTime(2014' 2' 17)' new[] { new EnvironmentEntry("name"' "1") }'                  new[] { gauge }' new[] { counter }' new[] { meter }' new[] { histogram }' new[] { timer }'                      Enumerable.Empty<MetricsData>()              );
Magic Number,Metrics.Tests.Json,JsonSerializationTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Json\JsonSerializationTests.cs,JsonSerializationTests,The following statement contains a magic number: this.data = new MetricsData("test"' new DateTime(2014' 2' 17)' new[] { new EnvironmentEntry("name"' "1") }'                  new[] { gauge }' new[] { counter }' new[] { meter }' new[] { histogram }' new[] { timer }'                      Enumerable.Empty<MetricsData>()              );
Magic Number,Metrics.Tests.Json,JsonSerializationTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Json\JsonSerializationTests.cs,JsonSerialization_CanSerializeContext,The following statement contains a magic number: jsonContext.Timestamp.Should().Be(new DateTime(2014' 2' 17));
Magic Number,Metrics.Tests.Json,JsonSerializationTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Json\JsonSerializationTests.cs,JsonSerialization_CanSerializeContext,The following statement contains a magic number: jsonContext.Timestamp.Should().Be(new DateTime(2014' 2' 17));
Magic Number,Metrics.Tests.Json,JsonSerializationTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Json\JsonSerializationTests.cs,JsonSerialization_CanSerializeContext,The following statement contains a magic number: jsonContext.Timestamp.Should().Be(new DateTime(2014' 2' 17));
Magic Number,Metrics.Tests.Json,JsonSerializationTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Json\JsonSerializationTests.cs,JsonSerialization_CanSerializeCounter,The following statement contains a magic number: jsonContext.Counters[0].Items[0].Count.Should().Be(6);
Magic Number,Metrics.Tests.Json,JsonSerializationTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Json\JsonSerializationTests.cs,JsonSerialization_CanSerializeCounter,The following statement contains a magic number: jsonContext.Counters[0].Items[0].Percent.Should().Be(0.9);
Magic Number,Metrics.Tests.Json,JsonSerializationTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Json\JsonSerializationTests.cs,JsonSerialization_CanSerializeMeter,The following statement contains a magic number: jsonContext.Meters[0].Items[0].Percent.Should().Be(0.5);
Magic Number,Metrics.Tests.Json,JsonSerializationTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Json\JsonSerializationTests.cs,JsonSerialization_CanSerializeMeter,The following statement contains a magic number: jsonContext.Meters[0].Items[0].MeanRate.Should().Be(2);
Magic Number,Metrics.Tests.Json,JsonSerializationTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Json\JsonSerializationTests.cs,JsonSerialization_CanSerializeMeter,The following statement contains a magic number: jsonContext.Meters[0].Items[0].OneMinuteRate.Should().Be(3);
Magic Number,Metrics.Tests.Json,JsonSerializationTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Json\JsonSerializationTests.cs,JsonSerialization_CanSerializeMeter,The following statement contains a magic number: jsonContext.Meters[0].Items[0].FiveMinuteRate.Should().Be(4);
Magic Number,Metrics.Tests.Json,JsonSerializationTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Json\JsonSerializationTests.cs,JsonSerialization_CanSerializeMeter,The following statement contains a magic number: jsonContext.Meters[0].Items[0].FifteenMinuteRate.Should().Be(5);
Magic Number,Metrics.Tests.Json,JsonSerializationTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Json\JsonSerializationTests.cs,JsonSerialization_CanSerializeTimer,The following statement contains a magic number: jsonContext.Timers[0].Count.Should().Be(5);
Magic Number,Metrics.Tests.Json,JsonTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Json\JsonTests.cs,Json_DoubleJsonValueSerializesCultureInvariant,The following statement contains a magic number: double value = 0.5d;
Magic Number,Metrics.Tests.Json,JsonTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Json\JsonTests.cs,Json_LongJsonValueSerializesCultureInvariant,The following statement contains a magic number: long value = 1000 * 1000 * 1000;
Magic Number,Metrics.Tests.Json,JsonTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Json\JsonTests.cs,Json_LongJsonValueSerializesCultureInvariant,The following statement contains a magic number: long value = 1000 * 1000 * 1000;
Magic Number,Metrics.Tests.Json,JsonTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Json\JsonTests.cs,Json_LongJsonValueSerializesCultureInvariant,The following statement contains a magic number: long value = 1000 * 1000 * 1000;
Magic Number,Metrics.Tests.Metrics,CounterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\CounterMetricTests.cs,CounterMetric_CanIncrementWithValue,The following statement contains a magic number: counter.Increment(32L);
Magic Number,Metrics.Tests.Metrics,CounterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\CounterMetricTests.cs,CounterMetric_CanIncrementWithValue,The following statement contains a magic number: counter.Value.Count.Should().Be(32L);
Magic Number,Metrics.Tests.Metrics,CounterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\CounterMetricTests.cs,CounterMetric_CanIncrementMultipleTimes,The following statement contains a magic number: counter.Value.Count.Should().Be(3L);
Magic Number,Metrics.Tests.Metrics,CounterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\CounterMetricTests.cs,CounterMetric_CanDecrementWithValue,The following statement contains a magic number: counter.Decrement(32L);
Magic Number,Metrics.Tests.Metrics,CounterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\CounterMetricTests.cs,CounterMetric_CanDecrementWithValue,The following statement contains a magic number: counter.Value.Count.Should().Be(-32L);
Magic Number,Metrics.Tests.Metrics,CounterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\CounterMetricTests.cs,CounterMetric_CanDecrementMultipleTimes,The following statement contains a magic number: counter.Value.Count.Should().Be(-3L);
Magic Number,Metrics.Tests.Metrics,CounterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\CounterMetricTests.cs,CounterMetric_CanBeIncrementedOnMultipleThreads,The following statement contains a magic number: const int threadCount = 16;
Magic Number,Metrics.Tests.Metrics,CounterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\CounterMetricTests.cs,CounterMetric_CanBeIncrementedOnMultipleThreads,The following statement contains a magic number: const long iterations = 1000 * 100;
Magic Number,Metrics.Tests.Metrics,CounterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\CounterMetricTests.cs,CounterMetric_CanBeIncrementedOnMultipleThreads,The following statement contains a magic number: const long iterations = 1000 * 100;
Magic Number,Metrics.Tests.Metrics,CounterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\CounterMetricTests.cs,CounterMetric_CanCountForSetItem,The following statement contains a magic number: counter.Value.Items[0].Percent.Should().Be(100);
Magic Number,Metrics.Tests.Metrics,CounterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\CounterMetricTests.cs,CounterMetric_CanCountForMultipleSetItem,The following statement contains a magic number: counter.Value.Count.Should().Be(2L);
Magic Number,Metrics.Tests.Metrics,CounterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\CounterMetricTests.cs,CounterMetric_CanCountForMultipleSetItem,The following statement contains a magic number: counter.Value.Items.Should().HaveCount(2);
Magic Number,Metrics.Tests.Metrics,CounterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\CounterMetricTests.cs,CounterMetric_CanCountForMultipleSetItem,The following statement contains a magic number: counter.Value.Items[0].Percent.Should().Be(50);
Magic Number,Metrics.Tests.Metrics,CounterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\CounterMetricTests.cs,CounterMetric_CanCountForMultipleSetItem,The following statement contains a magic number: counter.Value.Items[1].Percent.Should().Be(50);
Magic Number,Metrics.Tests.Metrics,GaugeMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\GaugeMetricTests.cs,GaugeMetric_ReportsNanOnException,The following statement contains a magic number: new DerivedGauge(new FunctionGauge(() => 5.0)' (d) =>              {                  throw new InvalidOperationException("test");              }).Value.Should().Be(double.NaN);
Magic Number,Metrics.Tests.Metrics,HistogramMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\HistogramMetricTests.cs,HistogramMetric_CanCount,The following statement contains a magic number: histogram.Value.Count.Should().Be(2);
Magic Number,Metrics.Tests.Metrics,HistogramMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\HistogramMetricTests.cs,HistogramMetric_CanReset,The following statement contains a magic number: histogram.Update(10L);
Magic Number,Metrics.Tests.Metrics,HistogramMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\HistogramMetricTests.cs,HistogramMetric_RecordsUserValue,The following statement contains a magic number: histogram.Update(10L' "B");
Magic Number,Metrics.Tests.Metrics,MeterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\MeterMetricTests.cs,MeterMetric_CanCount,The following statement contains a magic number: meter.Value.Count.Should().Be(2L);
Magic Number,Metrics.Tests.Metrics,MeterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\MeterMetricTests.cs,MeterMetric_CanCount,The following statement contains a magic number: meter.Mark(8L);
Magic Number,Metrics.Tests.Metrics,MeterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\MeterMetricTests.cs,MeterMetric_CanCount,The following statement contains a magic number: meter.Value.Count.Should().Be(10L);
Magic Number,Metrics.Tests.Metrics,MeterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\MeterMetricTests.cs,MeterMetric_CanCalculateMeanRate,The following statement contains a magic number: meter.Value.MeanRate.Should().Be(0.5);
Magic Number,Metrics.Tests.Metrics,MeterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\MeterMetricTests.cs,MeterMetric_CanComputeRates,The following statement contains a magic number: clock.Advance(TimeUnit.Seconds' 10);
Magic Number,Metrics.Tests.Metrics,MeterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\MeterMetricTests.cs,MeterMetric_CanComputeRates,The following statement contains a magic number: meter.Mark(2);
Magic Number,Metrics.Tests.Metrics,MeterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\MeterMetricTests.cs,MeterMetric_CanComputeRates,The following statement contains a magic number: value.MeanRate.Should().BeApproximately(0.3' 0.001);
Magic Number,Metrics.Tests.Metrics,MeterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\MeterMetricTests.cs,MeterMetric_CanComputeRates,The following statement contains a magic number: value.MeanRate.Should().BeApproximately(0.3' 0.001);
Magic Number,Metrics.Tests.Metrics,MeterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\MeterMetricTests.cs,MeterMetric_CanComputeRates,The following statement contains a magic number: value.OneMinuteRate.Should().BeApproximately(0.1840' 0.001);
Magic Number,Metrics.Tests.Metrics,MeterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\MeterMetricTests.cs,MeterMetric_CanComputeRates,The following statement contains a magic number: value.OneMinuteRate.Should().BeApproximately(0.1840' 0.001);
Magic Number,Metrics.Tests.Metrics,MeterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\MeterMetricTests.cs,MeterMetric_CanComputeRates,The following statement contains a magic number: value.FiveMinuteRate.Should().BeApproximately(0.1966' 0.001);
Magic Number,Metrics.Tests.Metrics,MeterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\MeterMetricTests.cs,MeterMetric_CanComputeRates,The following statement contains a magic number: value.FiveMinuteRate.Should().BeApproximately(0.1966' 0.001);
Magic Number,Metrics.Tests.Metrics,MeterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\MeterMetricTests.cs,MeterMetric_CanComputeRates,The following statement contains a magic number: value.FifteenMinuteRate.Should().BeApproximately(0.1988' 0.001);
Magic Number,Metrics.Tests.Metrics,MeterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\MeterMetricTests.cs,MeterMetric_CanComputeRates,The following statement contains a magic number: value.FifteenMinuteRate.Should().BeApproximately(0.1988' 0.001);
Magic Number,Metrics.Tests.Metrics,MeterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\MeterMetricTests.cs,MeterMetric_CanReset,The following statement contains a magic number: clock.Advance(TimeUnit.Seconds' 10);
Magic Number,Metrics.Tests.Metrics,MeterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\MeterMetricTests.cs,MeterMetric_CanReset,The following statement contains a magic number: meter.Mark(2);
Magic Number,Metrics.Tests.Metrics,MeterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\MeterMetricTests.cs,MeterMetric_CanCountForSetItem,The following statement contains a magic number: meter.Value.Items[0].Percent.Should().Be(100);
Magic Number,Metrics.Tests.Metrics,MeterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\MeterMetricTests.cs,MeterMetric_CanCountForMultipleSetItem,The following statement contains a magic number: meter.Value.Count.Should().Be(2L);
Magic Number,Metrics.Tests.Metrics,MeterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\MeterMetricTests.cs,MeterMetric_CanCountForMultipleSetItem,The following statement contains a magic number: meter.Value.Items.Should().HaveCount(2);
Magic Number,Metrics.Tests.Metrics,MeterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\MeterMetricTests.cs,MeterMetric_CanCountForMultipleSetItem,The following statement contains a magic number: meter.Value.Items[0].Percent.Should().Be(50);
Magic Number,Metrics.Tests.Metrics,MeterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\MeterMetricTests.cs,MeterMetric_CanCountForMultipleSetItem,The following statement contains a magic number: meter.Value.Items[1].Percent.Should().Be(50);
Magic Number,Metrics.Tests.Metrics,MeterMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\MeterMetricTests.cs,MeterMetric_ValueCanScaleDownToDecimals,The following statement contains a magic number: scaledValue.MeanRate.Should().Be(0.001);
Magic Number,Metrics.Tests.Metrics,TimerMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\TimerMetricTests.cs,TimerMetric_CanCount,The following statement contains a magic number: timer.Value.Rate.Count.Should().Be(2);
Magic Number,Metrics.Tests.Metrics,TimerMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\TimerMetricTests.cs,TimerMetric_CanCount,The following statement contains a magic number: timer.Value.Rate.Count.Should().Be(3);
Magic Number,Metrics.Tests.Metrics,TimerMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\TimerMetricTests.cs,TimerMetric_CanCount,The following statement contains a magic number: timer.Value.Rate.Count.Should().Be(4);
Magic Number,Metrics.Tests.Metrics,TimerMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\TimerMetricTests.cs,TimerMetric_CanTrackTime,The following statement contains a magic number: clock.Advance(TimeUnit.Milliseconds' 100);
Magic Number,Metrics.Tests.Metrics,TimerMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\TimerMetricTests.cs,TimerMetric_CanTrackTime,The following statement contains a magic number: timer.Value.Histogram.Max.Should().Be(TimeUnit.Milliseconds.ToNanoseconds(100));
Magic Number,Metrics.Tests.Metrics,TimerMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\TimerMetricTests.cs,TimerMetric_ContextRecordsTimeOnlyOnFirstDispose,The following statement contains a magic number: clock.Advance(TimeUnit.Milliseconds' 100);
Magic Number,Metrics.Tests.Metrics,TimerMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\TimerMetricTests.cs,TimerMetric_ContextRecordsTimeOnlyOnFirstDispose,The following statement contains a magic number: clock.Advance(TimeUnit.Milliseconds' 100);
Magic Number,Metrics.Tests.Metrics,TimerMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\TimerMetricTests.cs,TimerMetric_ContextRecordsTimeOnlyOnFirstDispose,The following statement contains a magic number: timer.Value.Histogram.Max.Should().Be(TimeUnit.Milliseconds.ToNanoseconds(100));
Magic Number,Metrics.Tests.Metrics,TimerMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\TimerMetricTests.cs,TimerMetric_ContextReportsElapsedTime,The following statement contains a magic number: clock.Advance(TimeUnit.Milliseconds' 100);
Magic Number,Metrics.Tests.Metrics,TimerMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\TimerMetricTests.cs,TimerMetric_ContextReportsElapsedTime,The following statement contains a magic number: context.Elapsed.TotalMilliseconds.Should().Be(100);
Magic Number,Metrics.Tests.Metrics,TimerMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\TimerMetricTests.cs,TimerMetric_CanReset,The following statement contains a magic number: clock.Advance(TimeUnit.Milliseconds' 100);
Magic Number,Metrics.Tests.Metrics,TimerMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\TimerMetricTests.cs,TimerMetric_ContextCallsFinalAction,The following statement contains a magic number: clock.Advance(TimeUnit.Milliseconds' 100);
Magic Number,Metrics.Tests.Metrics,TimerMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\TimerMetricTests.cs,TimerMetric_ContextCallsFinalAction,The following statement contains a magic number: result.Should().Be(TimeSpan.FromMilliseconds(100));
Magic Number,Metrics.Tests.Metrics,TimerMetricTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Metrics\TimerMetricTests.cs,TimerMetric_RecordsUserValue,The following statement contains a magic number: timer.Record(10L' TimeUnit.Milliseconds' "B");
Magic Number,Metrics.Tests.Sampling,WeightedSnapshotTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\WeightedSnapshotTests.cs,WeightedSnapshot_BigQuantilesAreTheLastValue,The following statement contains a magic number: snapshot.GetValue(1.0).Should().Be(5.0);
Magic Number,Metrics.Tests.Sampling,WeightedSnapshotTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\WeightedSnapshotTests.cs,WeightedSnapshot_HasAMedian,The following statement contains a magic number: snapshot.Median.Should().Be(3.0);
Magic Number,Metrics.Tests.Sampling,WeightedSnapshotTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\WeightedSnapshotTests.cs,WeightedSnapshot_HasAp75,The following statement contains a magic number: snapshot.Percentile75.Should().Be(4.0);
Magic Number,Metrics.Tests.Sampling,WeightedSnapshotTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\WeightedSnapshotTests.cs,WeightedSnapshot_HasAp95,The following statement contains a magic number: snapshot.Percentile95.Should().Be(5.0);
Magic Number,Metrics.Tests.Sampling,WeightedSnapshotTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\WeightedSnapshotTests.cs,WeightedSnapshot_HasAp98,The following statement contains a magic number: snapshot.Percentile98.Should().Be(5.0);
Magic Number,Metrics.Tests.Sampling,WeightedSnapshotTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\WeightedSnapshotTests.cs,WeightedSnapshot_HasAp99,The following statement contains a magic number: snapshot.Percentile99.Should().Be(5.0);
Magic Number,Metrics.Tests.Sampling,WeightedSnapshotTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\WeightedSnapshotTests.cs,WeightedSnapshot_HasAp999,The following statement contains a magic number: snapshot.Percentile999.Should().Be(5.0);
Magic Number,Metrics.Tests.Sampling,WeightedSnapshotTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\WeightedSnapshotTests.cs,WeightedSnapshot_HasValues,The following statement contains a magic number: snapshot.Values.Should().Equal(new long[] { 1' 2' 3' 4' 5 });
Magic Number,Metrics.Tests.Sampling,WeightedSnapshotTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\WeightedSnapshotTests.cs,WeightedSnapshot_HasValues,The following statement contains a magic number: snapshot.Values.Should().Equal(new long[] { 1' 2' 3' 4' 5 });
Magic Number,Metrics.Tests.Sampling,WeightedSnapshotTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\WeightedSnapshotTests.cs,WeightedSnapshot_HasValues,The following statement contains a magic number: snapshot.Values.Should().Equal(new long[] { 1' 2' 3' 4' 5 });
Magic Number,Metrics.Tests.Sampling,WeightedSnapshotTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\WeightedSnapshotTests.cs,WeightedSnapshot_HasValues,The following statement contains a magic number: snapshot.Values.Should().Equal(new long[] { 1' 2' 3' 4' 5 });
Magic Number,Metrics.Tests.Sampling,WeightedSnapshotTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\WeightedSnapshotTests.cs,WeightedSnapshot_HasSize,The following statement contains a magic number: snapshot.Size.Should().Be(5);
Magic Number,Metrics.Tests.Sampling,WeightedSnapshotTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\WeightedSnapshotTests.cs,WeightedSnapshot_CalculatesTheMaximumValue,The following statement contains a magic number: snapshot.Max.Should().Be(5);
Magic Number,Metrics.Tests.Sampling,WeightedSnapshotTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\WeightedSnapshotTests.cs,WeightedSnapshot_CalculatesTheMeanValue,The following statement contains a magic number: snapshot.Mean.Should().Be(2.7);
Magic Number,Metrics.Tests.Sampling,WeightedSnapshotTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\WeightedSnapshotTests.cs,WeightedSnapshot_CalculatesTheStdDev,The following statement contains a magic number: snapshot.StdDev.Should().BeApproximately(1.2688' 0.0001);
Magic Number,Metrics.Tests.Sampling,WeightedSnapshotTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\WeightedSnapshotTests.cs,WeightedSnapshot_CalculatesTheStdDev,The following statement contains a magic number: snapshot.StdDev.Should().BeApproximately(1.2688' 0.0001);
Magic Number,Metrics.Tests.Sampling,WeightedSnapshotTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\WeightedSnapshotTests.cs,WeightedSnapshot_ThrowsOnBadQuantileValue,The following statement contains a magic number: ((Action)(() => snapshot.GetValue(-0.5))).ShouldThrow<ArgumentException>();
Magic Number,Metrics.Tests.Sampling,WeightedSnapshotTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\WeightedSnapshotTests.cs,WeightedSnapshot_ThrowsOnBadQuantileValue,The following statement contains a magic number: ((Action)(() => snapshot.GetValue(1.5))).ShouldThrow<ArgumentException>();
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_ReservoirOf100OutOf1000Elements,The following statement contains a magic number: ExponentiallyDecayingReservoir reservoir = new ExponentiallyDecayingReservoir(100' 0.99);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_ReservoirOf100OutOf1000Elements,The following statement contains a magic number: ExponentiallyDecayingReservoir reservoir = new ExponentiallyDecayingReservoir(100' 0.99);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_ReservoirOf100OutOf1000Elements,The following statement contains a magic number: i < 1000
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_ReservoirOf100OutOf1000Elements,The following statement contains a magic number: reservoir.Size.Should().Be(100);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_ReservoirOf100OutOf1000Elements,The following statement contains a magic number: snapshot.Size.Should().Be(100);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_ReservoirOf100OutOf1000Elements,The following statement contains a magic number: snapshot.Values.Should().OnlyContain(v => 0 <= v && v < 1000);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_ReservoirOf100OutOf10Elements,The following statement contains a magic number: ExponentiallyDecayingReservoir reservoir = new ExponentiallyDecayingReservoir(100' 0.99);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_ReservoirOf100OutOf10Elements,The following statement contains a magic number: ExponentiallyDecayingReservoir reservoir = new ExponentiallyDecayingReservoir(100' 0.99);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_ReservoirOf100OutOf10Elements,The following statement contains a magic number: i < 10
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_ReservoirOf100OutOf10Elements,The following statement contains a magic number: reservoir.Size.Should().Be(10);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_ReservoirOf100OutOf10Elements,The following statement contains a magic number: snapshot.Size.Should().Be(10);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_ReservoirOf100OutOf10Elements,The following statement contains a magic number: snapshot.Values.Should().OnlyContain(v => 0 <= v && v < 10);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_HeavilyBiasedReservoirOf100OutOf1000Elements,The following statement contains a magic number: ExponentiallyDecayingReservoir reservoir = new ExponentiallyDecayingReservoir(1000' 0.01);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_HeavilyBiasedReservoirOf100OutOf1000Elements,The following statement contains a magic number: ExponentiallyDecayingReservoir reservoir = new ExponentiallyDecayingReservoir(1000' 0.01);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_HeavilyBiasedReservoirOf100OutOf1000Elements,The following statement contains a magic number: i < 100
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_HeavilyBiasedReservoirOf100OutOf1000Elements,The following statement contains a magic number: reservoir.Size.Should().Be(100);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_HeavilyBiasedReservoirOf100OutOf1000Elements,The following statement contains a magic number: snapshot.Size.Should().Be(100);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_HeavilyBiasedReservoirOf100OutOf1000Elements,The following statement contains a magic number: snapshot.Values.Should().OnlyContain(v => 0 <= v && v < 100);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_longPeriodsOfInactivityShouldNotCorruptSamplingState,The following statement contains a magic number: ExponentiallyDecayingReservoir reservoir = new ExponentiallyDecayingReservoir(10' 0.015' clock' scheduler);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_longPeriodsOfInactivityShouldNotCorruptSamplingState,The following statement contains a magic number: ExponentiallyDecayingReservoir reservoir = new ExponentiallyDecayingReservoir(10' 0.015' clock' scheduler);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_longPeriodsOfInactivityShouldNotCorruptSamplingState,The following statement contains a magic number: reservoir.Update(1000 + i);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_longPeriodsOfInactivityShouldNotCorruptSamplingState,The following statement contains a magic number: clock.Advance(TimeUnit.Milliseconds' 100);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_longPeriodsOfInactivityShouldNotCorruptSamplingState,The following statement contains a magic number: i < 1000
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_longPeriodsOfInactivityShouldNotCorruptSamplingState,The following statement contains a magic number: reservoir.GetSnapshot().Size.Should().Be(10);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_longPeriodsOfInactivityShouldNotCorruptSamplingState,The following statement contains a magic number: reservoir.GetSnapshot().Values.Should().OnlyContain(v => 1000 <= v && v < 2000);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_longPeriodsOfInactivityShouldNotCorruptSamplingState,The following statement contains a magic number: reservoir.GetSnapshot().Values.Should().OnlyContain(v => 1000 <= v && v < 2000);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_longPeriodsOfInactivityShouldNotCorruptSamplingState,The following statement contains a magic number: clock.Advance(TimeUnit.Hours' 15);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_longPeriodsOfInactivityShouldNotCorruptSamplingState,The following statement contains a magic number: reservoir.Update(2000);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_longPeriodsOfInactivityShouldNotCorruptSamplingState,The following statement contains a magic number: snapshot.Size.Should().Be(2);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_longPeriodsOfInactivityShouldNotCorruptSamplingState,The following statement contains a magic number: snapshot.Values.Should().OnlyContain(v => 1000 <= v && v < 3000);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_longPeriodsOfInactivityShouldNotCorruptSamplingState,The following statement contains a magic number: snapshot.Values.Should().OnlyContain(v => 1000 <= v && v < 3000);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_longPeriodsOfInactivityShouldNotCorruptSamplingState,The following statement contains a magic number: reservoir.Update(3000 + i);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_longPeriodsOfInactivityShouldNotCorruptSamplingState,The following statement contains a magic number: clock.Advance(TimeUnit.Milliseconds' 100);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_longPeriodsOfInactivityShouldNotCorruptSamplingState,The following statement contains a magic number: i < 1000
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_longPeriodsOfInactivityShouldNotCorruptSamplingState,The following statement contains a magic number: finalSnapshot.Size.Should().Be(10);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_longPeriodsOfInactivityShouldNotCorruptSamplingState,The following statement contains a magic number: finalSnapshot.Values.Skip(1).Should().OnlyContain(v => 3000 <= v && v < 4000);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_longPeriodsOfInactivityShouldNotCorruptSamplingState,The following statement contains a magic number: finalSnapshot.Values.Skip(1).Should().OnlyContain(v => 3000 <= v && v < 4000);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_SpotLift,The following statement contains a magic number: int valuesRatePerMinute = 10;
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_SpotLift,The following statement contains a magic number: reservoir.Update(177);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_SpotLift,The following statement contains a magic number: i < 120 * valuesRatePerMinute
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_SpotLift,The following statement contains a magic number: reservoir.Update(9999);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_SpotLift,The following statement contains a magic number: i < 10 * valuesRatePerMinute
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_SpotLift,The following statement contains a magic number: reservoir.GetSnapshot().Median.Should().Be(9999);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_SpotFall,The following statement contains a magic number: int valuesRatePerMinute = 10;
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_SpotFall,The following statement contains a magic number: reservoir.Update(9998);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_SpotFall,The following statement contains a magic number: i < 120 * valuesRatePerMinute
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_SpotFall,The following statement contains a magic number: reservoir.Update(178);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_SpotFall,The following statement contains a magic number: i < 10 * valuesRatePerMinute
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_SpotFall,The following statement contains a magic number: reservoir.GetSnapshot().Percentile95.Should().Be(178);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_QuantiliesShouldBeBasedOnWeights,The following statement contains a magic number: reservoir.Update(177);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_QuantiliesShouldBeBasedOnWeights,The following statement contains a magic number: i < 40
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_QuantiliesShouldBeBasedOnWeights,The following statement contains a magic number: clock.Advance(TimeUnit.Seconds' 120);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_QuantiliesShouldBeBasedOnWeights,The following statement contains a magic number: reservoir.Update(9999);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_QuantiliesShouldBeBasedOnWeights,The following statement contains a magic number: i < 10
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_QuantiliesShouldBeBasedOnWeights,The following statement contains a magic number: reservoir.GetSnapshot().Size.Should().Be(50);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_QuantiliesShouldBeBasedOnWeights,The following statement contains a magic number: reservoir.GetSnapshot().Median.Should().Be(9999);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_QuantiliesShouldBeBasedOnWeights,The following statement contains a magic number: reservoir.GetSnapshot().Percentile75.Should().Be(9999);
Magic Number,Metrics.Tests.Sampling,ExponentiallyDecayingReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\ExponentiallyDecayingReservoirTests.cs,EDR_RecordsUserValue,The following statement contains a magic number: reservoir.Update(2L' "B");
Magic Number,Metrics.Tests.Sampling,SlidingWindowReservoirTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\SlidingWindowReservoirTest.cs,SlidingWindowReservoir_CanStoreSmallSample,The following statement contains a magic number: reservoir.Update(2L);
Magic Number,Metrics.Tests.Sampling,SlidingWindowReservoirTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\SlidingWindowReservoirTest.cs,SlidingWindowReservoir_CanStoreSmallSample,The following statement contains a magic number: reservoir.GetSnapshot().Values.Should().ContainInOrder(1L' 2L);
Magic Number,Metrics.Tests.Sampling,SlidingWindowReservoirTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\SlidingWindowReservoirTest.cs,SlidingWindowReservoir_OnlyStoresLastsValues,The following statement contains a magic number: reservoir.Update(2L);
Magic Number,Metrics.Tests.Sampling,SlidingWindowReservoirTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\SlidingWindowReservoirTest.cs,SlidingWindowReservoir_OnlyStoresLastsValues,The following statement contains a magic number: reservoir.Update(3L);
Magic Number,Metrics.Tests.Sampling,SlidingWindowReservoirTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\SlidingWindowReservoirTest.cs,SlidingWindowReservoir_OnlyStoresLastsValues,The following statement contains a magic number: reservoir.Update(4L);
Magic Number,Metrics.Tests.Sampling,SlidingWindowReservoirTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\SlidingWindowReservoirTest.cs,SlidingWindowReservoir_OnlyStoresLastsValues,The following statement contains a magic number: reservoir.Update(5L);
Magic Number,Metrics.Tests.Sampling,SlidingWindowReservoirTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\SlidingWindowReservoirTest.cs,SlidingWindowReservoir_OnlyStoresLastsValues,The following statement contains a magic number: reservoir.GetSnapshot().Values.Should().ContainInOrder(3L' 4L' 5L);
Magic Number,Metrics.Tests.Sampling,SlidingWindowReservoirTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\SlidingWindowReservoirTest.cs,SlidingWindowReservoir_OnlyStoresLastsValues,The following statement contains a magic number: reservoir.GetSnapshot().Values.Should().ContainInOrder(3L' 4L' 5L);
Magic Number,Metrics.Tests.Sampling,SlidingWindowReservoirTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\SlidingWindowReservoirTest.cs,SlidingWindowReservoir_OnlyStoresLastsValues,The following statement contains a magic number: reservoir.GetSnapshot().Values.Should().ContainInOrder(3L' 4L' 5L);
Magic Number,Metrics.Tests.Sampling,SlidingWindowReservoirTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\SlidingWindowReservoirTest.cs,SlidingWindowReservoir_RecordsUserValue,The following statement contains a magic number: reservoir.Update(2L' "B");
Magic Number,Metrics.Tests.Sampling,UniformSnapshotTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformSnapshotTests.cs,UniformSnapshot_SmallQuantilesAreTheFirstValue,The following statement contains a magic number: snapshot.GetValue(0.0).Should().BeApproximately(1' 0.1);
Magic Number,Metrics.Tests.Sampling,UniformSnapshotTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformSnapshotTests.cs,UniformSnapshot_BigQuantilesAreTheLastValue,The following statement contains a magic number: snapshot.GetValue(1.0).Should().BeApproximately(5' 0.1);
Magic Number,Metrics.Tests.Sampling,UniformSnapshotTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformSnapshotTests.cs,UniformSnapshot_BigQuantilesAreTheLastValue,The following statement contains a magic number: snapshot.GetValue(1.0).Should().BeApproximately(5' 0.1);
Magic Number,Metrics.Tests.Sampling,UniformSnapshotTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformSnapshotTests.cs,UniformSnapshot_HasAMedian,The following statement contains a magic number: snapshot.Median.Should().BeApproximately(3' 0.1);
Magic Number,Metrics.Tests.Sampling,UniformSnapshotTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformSnapshotTests.cs,UniformSnapshot_HasAMedian,The following statement contains a magic number: snapshot.Median.Should().BeApproximately(3' 0.1);
Magic Number,Metrics.Tests.Sampling,UniformSnapshotTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformSnapshotTests.cs,UniformSnapshot_HasAp75,The following statement contains a magic number: snapshot.Percentile75.Should().BeApproximately(4.5' 0.1);
Magic Number,Metrics.Tests.Sampling,UniformSnapshotTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformSnapshotTests.cs,UniformSnapshot_HasAp75,The following statement contains a magic number: snapshot.Percentile75.Should().BeApproximately(4.5' 0.1);
Magic Number,Metrics.Tests.Sampling,UniformSnapshotTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformSnapshotTests.cs,UniformSnapshot_HasAp95,The following statement contains a magic number: snapshot.Percentile95.Should().BeApproximately(5.0' 0.1);
Magic Number,Metrics.Tests.Sampling,UniformSnapshotTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformSnapshotTests.cs,UniformSnapshot_HasAp95,The following statement contains a magic number: snapshot.Percentile95.Should().BeApproximately(5.0' 0.1);
Magic Number,Metrics.Tests.Sampling,UniformSnapshotTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformSnapshotTests.cs,UniformSnapshot_HasAp98,The following statement contains a magic number: snapshot.Percentile98.Should().BeApproximately(5.0' 0.1);
Magic Number,Metrics.Tests.Sampling,UniformSnapshotTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformSnapshotTests.cs,UniformSnapshot_HasAp98,The following statement contains a magic number: snapshot.Percentile98.Should().BeApproximately(5.0' 0.1);
Magic Number,Metrics.Tests.Sampling,UniformSnapshotTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformSnapshotTests.cs,UniformSnapshot_HasAp99,The following statement contains a magic number: snapshot.Percentile99.Should().BeApproximately(5.0' 0.1);
Magic Number,Metrics.Tests.Sampling,UniformSnapshotTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformSnapshotTests.cs,UniformSnapshot_HasAp99,The following statement contains a magic number: snapshot.Percentile99.Should().BeApproximately(5.0' 0.1);
Magic Number,Metrics.Tests.Sampling,UniformSnapshotTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformSnapshotTests.cs,UniformSnapshot_HasAp999,The following statement contains a magic number: snapshot.Percentile999.Should().BeApproximately(5.0' 0.1);
Magic Number,Metrics.Tests.Sampling,UniformSnapshotTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformSnapshotTests.cs,UniformSnapshot_HasAp999,The following statement contains a magic number: snapshot.Percentile999.Should().BeApproximately(5.0' 0.1);
Magic Number,Metrics.Tests.Sampling,UniformSnapshotTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformSnapshotTests.cs,UniformSnapshot_HasValues,The following statement contains a magic number: snapshot.Values.Should().ContainInOrder(1L' 2L' 3L' 4L' 5L);
Magic Number,Metrics.Tests.Sampling,UniformSnapshotTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformSnapshotTests.cs,UniformSnapshot_HasValues,The following statement contains a magic number: snapshot.Values.Should().ContainInOrder(1L' 2L' 3L' 4L' 5L);
Magic Number,Metrics.Tests.Sampling,UniformSnapshotTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformSnapshotTests.cs,UniformSnapshot_HasValues,The following statement contains a magic number: snapshot.Values.Should().ContainInOrder(1L' 2L' 3L' 4L' 5L);
Magic Number,Metrics.Tests.Sampling,UniformSnapshotTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformSnapshotTests.cs,UniformSnapshot_HasValues,The following statement contains a magic number: snapshot.Values.Should().ContainInOrder(1L' 2L' 3L' 4L' 5L);
Magic Number,Metrics.Tests.Sampling,UniformSnapshotTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformSnapshotTests.cs,UniformSnapshot_HasASize,The following statement contains a magic number: snapshot.Size.Should().Be(5);
Magic Number,Metrics.Tests.Sampling,UniformSnapshotTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformSnapshotTests.cs,UniformSnapshot_CalculatesTheMaximumValue,The following statement contains a magic number: snapshot.Max.Should().Be(5);
Magic Number,Metrics.Tests.Sampling,UniformSnapshotTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformSnapshotTests.cs,UniformSnapshot_CalculatesTheMeanValue,The following statement contains a magic number: snapshot.Mean.Should().Be(3.0);
Magic Number,Metrics.Tests.Sampling,UniformSnapshotTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformSnapshotTests.cs,UniformSnapshot_CalculatesTheStdDev,The following statement contains a magic number: snapshot.StdDev.Should().BeApproximately(1.5811' 0.0001);
Magic Number,Metrics.Tests.Sampling,UniformSnapshotTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformSnapshotTests.cs,UniformSnapshot_CalculatesTheStdDev,The following statement contains a magic number: snapshot.StdDev.Should().BeApproximately(1.5811' 0.0001);
Magic Number,Metrics.Tests.Sampling,UniformSnapshotTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformSnapshotTests.cs,UniformSnapshot_ThrowsOnBadQuantileValue,The following statement contains a magic number: ((Action)(() => snapshot.GetValue(-0.5))).ShouldThrow<ArgumentException>();
Magic Number,Metrics.Tests.Sampling,UniformSnapshotTest,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformSnapshotTests.cs,UniformSnapshot_ThrowsOnBadQuantileValue,The following statement contains a magic number: ((Action)(() => snapshot.GetValue(1.5))).ShouldThrow<ArgumentException>();
Magic Number,Metrics.Tests.Sampling,UniformReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformReservoirTests.cs,UniformReservoir_Of100OutOf1000Elements,The following statement contains a magic number: UniformReservoir reservoir = new UniformReservoir(100);
Magic Number,Metrics.Tests.Sampling,UniformReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformReservoirTests.cs,UniformReservoir_Of100OutOf1000Elements,The following statement contains a magic number: i < 1000
Magic Number,Metrics.Tests.Sampling,UniformReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformReservoirTests.cs,UniformReservoir_Of100OutOf1000Elements,The following statement contains a magic number: reservoir.Size.Should().Be(100);
Magic Number,Metrics.Tests.Sampling,UniformReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformReservoirTests.cs,UniformReservoir_Of100OutOf1000Elements,The following statement contains a magic number: reservoir.GetSnapshot().Size.Should().Be(100);
Magic Number,Metrics.Tests.Sampling,UniformReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformReservoirTests.cs,UniformReservoir_Of100OutOf1000Elements,The following statement contains a magic number: reservoir.GetSnapshot().Values.Should().OnlyContain(v => 0 <= v && v < 1000);
Magic Number,Metrics.Tests.Sampling,UniformReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformReservoirTests.cs,UniformReservoir_RecordsUserValue,The following statement contains a magic number: UniformReservoir reservoir = new UniformReservoir(100);
Magic Number,Metrics.Tests.Sampling,UniformReservoirTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Sampling\UniformReservoirTests.cs,UniformReservoir_RecordsUserValue,The following statement contains a magic number: reservoir.Update(2L' "B");
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,ElapseMinute,The following statement contains a magic number: i <= 12
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.Update(3L);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.6' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.6' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.22072766' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.22072766' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.08120117' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.08120117' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.02987224' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.02987224' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.01098938' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.01098938' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.00404277' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.00404277' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.00148725' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.00148725' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.00054713' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.00054713' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.00020128' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.00020128' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.00007405' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.00007405' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.00002724' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.00002724' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.00001002' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.00001002' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.00000369' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.00000369' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.00000136' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.00000136' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.00000050' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.00000050' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.00000018' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aOneMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.00000018' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.Update(3L);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.6' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.6' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.49123845' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.49123845' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.40219203' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.40219203' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.32928698' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.32928698' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.26959738' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.26959738' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.22072766' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.22072766' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.18071653' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.18071653' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.14795818' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.14795818' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.12113791' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.12113791' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.09917933' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.09917933' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.08120117' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.08120117' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.06648190' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.06648190' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.05443077' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.05443077' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.04456415' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.04456415' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.03648604' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.03648604' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.02987224' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFiveMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.02987224' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.Update(3L);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.6' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.6' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.56130419' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.56130419' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.52510399' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.52510399' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.49123845' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.49123845' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.45955700' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.45955700' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.42991879' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.42991879' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.40219203' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.40219203' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.37625345' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.37625345' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.35198773' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.35198773' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.32928698' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.32928698' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.30805027' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.30805027' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.28818318' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.28818318' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.26959738' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.26959738' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.25221023' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.25221023' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.23594443' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.23594443' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.22072766' 0.000001);
Magic Number,Metrics.Tests.Utils,EWMATests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\EWMATests.cs,EWMA_aFifteenMinuteEWMAWithAValueOfThree,The following statement contains a magic number: ewma.GetRate(TimeUnit.Seconds).Should().BeApproximately(0.22072766' 0.000001);
Magic Number,Metrics.Tests.Utils,AtomicLongTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\AtomicLongTests.cs,AtomicLong_CanBeCreatedWithValue,The following statement contains a magic number: new AtomicLong(5L).Value.Should().Be(5L);
Magic Number,Metrics.Tests.Utils,AtomicLongTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\AtomicLongTests.cs,AtomicLong_CanBeCreatedWithValue,The following statement contains a magic number: new AtomicLong(5L).Value.Should().Be(5L);
Magic Number,Metrics.Tests.Utils,AtomicLongTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\AtomicLongTests.cs,AtomicLong_CanSetAndReadValue,The following statement contains a magic number: num.SetValue(32);
Magic Number,Metrics.Tests.Utils,AtomicLongTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\AtomicLongTests.cs,AtomicLong_CanSetAndReadValue,The following statement contains a magic number: num.Value.Should().Be(32);
Magic Number,Metrics.Tests.Utils,AtomicLongTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\AtomicLongTests.cs,AtomicLong_CanGetAndSet,The following statement contains a magic number: num.SetValue(32);
Magic Number,Metrics.Tests.Utils,AtomicLongTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\AtomicLongTests.cs,AtomicLong_CanGetAndSet,The following statement contains a magic number: long val = num.GetAndSet(64);
Magic Number,Metrics.Tests.Utils,AtomicLongTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\AtomicLongTests.cs,AtomicLong_CanGetAndSet,The following statement contains a magic number: val.Should().Be(32);
Magic Number,Metrics.Tests.Utils,AtomicLongTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\AtomicLongTests.cs,AtomicLong_CanGetAndSet,The following statement contains a magic number: num.Value.Should().Be(64);
Magic Number,Metrics.Tests.Utils,AtomicLongTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\AtomicLongTests.cs,AtomicLong_CanBeIncrementedMultipleTimes,The following statement contains a magic number: num.Value.Should().Be(3L);
Magic Number,Metrics.Tests.Utils,AtomicLongTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\AtomicLongTests.cs,AtomicLong_CanAddValue,The following statement contains a magic number: num.Add(7L);
Magic Number,Metrics.Tests.Utils,AtomicLongTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\AtomicLongTests.cs,AtomicLong_CanAddValue,The following statement contains a magic number: num.Value.Should().Be(7L);
Magic Number,Metrics.Tests.Utils,AtomicLongTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\AtomicLongTests.cs,AtomicLong_CanBeDecremented,The following statement contains a magic number: num = new AtomicLong(10L);
Magic Number,Metrics.Tests.Utils,AtomicLongTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\AtomicLongTests.cs,AtomicLong_CanBeDecremented,The following statement contains a magic number: num.Value.Should().Be(9L);
Magic Number,Metrics.Tests.Utils,AtomicLongTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\AtomicLongTests.cs,AtomicLong_CanBeAssigned,The following statement contains a magic number: AtomicLong x = new AtomicLong(10L);
Magic Number,Metrics.Tests.Utils,AtomicLongTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\AtomicLongTests.cs,AtomicLong_CanBeAssigned,The following statement contains a magic number: y.Value.Should().Be(10L);
Magic Number,Metrics.Tests.Utils,ActionSchedulerTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\ActionSchedulerTests.cs,ActionScheduler_ExecutesScheduledFunction,The following statement contains a magic number: scheduler.Start(TimeSpan.FromMilliseconds(10)' function);
Magic Number,Metrics.Tests.Utils,ActionSchedulerTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\ActionSchedulerTests.cs,ActionScheduler_ExecutesScheduledAction,The following statement contains a magic number: scheduler.Start(TimeSpan.FromMilliseconds(10)' t =>                  {                      data++;                      tcs.SetResult(true);                  });
Magic Number,Metrics.Tests.Utils,ActionSchedulerTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\ActionSchedulerTests.cs,ActionScheduler_ExecutesScheduledActionWithToken,The following statement contains a magic number: scheduler.Start(TimeSpan.FromMilliseconds(10)' t =>                  {                      data++;                      tcs.SetResult(true);                  });
Magic Number,Metrics.Tests.Utils,ActionSchedulerTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\ActionSchedulerTests.cs,ActionScheduler_ExecutesScheduledActionMultipleTimes,The following statement contains a magic number: scheduler.Start(TimeSpan.FromMilliseconds(10)' () =>                  {                      data++;                      tcs.SetResult(true);                  });
Magic Number,Metrics.Tests.Utils,ActionSchedulerTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\ActionSchedulerTests.cs,ActionScheduler_ExecutesScheduledActionMultipleTimes,The following statement contains a magic number: data.Should().Be(2);
Magic Number,Metrics.Tests.Utils,ActionSchedulerTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\ActionSchedulerTests.cs,ActionScheduler_ReportsExceptionWithGlobalMetricHandler,The following statement contains a magic number: scheduler.Start(TimeSpan.FromMilliseconds(10)' t =>                  {                      throw new InvalidOperationException("boom");                  });
Magic Number,Metrics.Tests.Utils,ActionSchedulerTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\ActionSchedulerTests.cs,ActionScheduler_ReportsExceptionWithGlobalMetricHandler,The following statement contains a magic number: tcs.Task.Wait(1000);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_ConvertsToZeroOnFractionalUnit,The following statement contains a magic number: TimeUnit.Seconds.ToMinutes(30L).Should().Be(0);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToNanoseconds(10L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToNanoseconds(10L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToMicroseconds(10L * 1000L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToMicroseconds(10L * 1000L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToMicroseconds(10L * 1000L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToMilliseconds(10L * 1000L * 1000L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToMilliseconds(10L * 1000L * 1000L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToMilliseconds(10L * 1000L * 1000L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToMilliseconds(10L * 1000L * 1000L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToSeconds(10L * 1000L * 1000L * 1000L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToSeconds(10L * 1000L * 1000L * 1000L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToSeconds(10L * 1000L * 1000L * 1000L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToSeconds(10L * 1000L * 1000L * 1000L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToSeconds(10L * 1000L * 1000L * 1000L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToMinutes(10L * 1000L * 1000L * 1000L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToMinutes(10L * 1000L * 1000L * 1000L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToMinutes(10L * 1000L * 1000L * 1000L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToMinutes(10L * 1000L * 1000L * 1000L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToMinutes(10L * 1000L * 1000L * 1000L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToMinutes(10L * 1000L * 1000L * 1000L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToHours(10L * 1000L * 1000L * 1000L * 60L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToHours(10L * 1000L * 1000L * 1000L * 60L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToHours(10L * 1000L * 1000L * 1000L * 60L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToHours(10L * 1000L * 1000L * 1000L * 60L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToHours(10L * 1000L * 1000L * 1000L * 60L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToHours(10L * 1000L * 1000L * 1000L * 60L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToHours(10L * 1000L * 1000L * 1000L * 60L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToDays(10L * 1000L * 1000L * 1000L * 60L * 60L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToDays(10L * 1000L * 1000L * 1000L * 60L * 60L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToDays(10L * 1000L * 1000L * 1000L * 60L * 60L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToDays(10L * 1000L * 1000L * 1000L * 60L * 60L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToDays(10L * 1000L * 1000L * 1000L * 60L * 60L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToDays(10L * 1000L * 1000L * 1000L * 60L * 60L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToDays(10L * 1000L * 1000L * 1000L * 60L * 60L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Nanoseconds.ToDays(10L * 1000L * 1000L * 1000L * 60L * 60L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Microseconds.ToNanoseconds(10L).Should().Be(10L * 1000L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Microseconds.ToNanoseconds(10L).Should().Be(10L * 1000L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Microseconds.ToNanoseconds(10L).Should().Be(10L * 1000L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Microseconds.ToMicroseconds(10L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Microseconds.ToMicroseconds(10L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Microseconds.ToMilliseconds(10L * 1000L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Microseconds.ToMilliseconds(10L * 1000L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Microseconds.ToMilliseconds(10L * 1000L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Microseconds.ToSeconds(10L * 1000L * 1000L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Microseconds.ToSeconds(10L * 1000L * 1000L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Microseconds.ToSeconds(10L * 1000L * 1000L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Microseconds.ToSeconds(10L * 1000L * 1000L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Microseconds.ToMinutes(10L * 1000L * 1000L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Microseconds.ToMinutes(10L * 1000L * 1000L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Microseconds.ToMinutes(10L * 1000L * 1000L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Microseconds.ToMinutes(10L * 1000L * 1000L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Microseconds.ToMinutes(10L * 1000L * 1000L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Microseconds.ToHours(10L * 1000L * 1000L * 60L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Microseconds.ToHours(10L * 1000L * 1000L * 60L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Microseconds.ToHours(10L * 1000L * 1000L * 60L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Microseconds.ToHours(10L * 1000L * 1000L * 60L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Microseconds.ToHours(10L * 1000L * 1000L * 60L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Microseconds.ToHours(10L * 1000L * 1000L * 60L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Microseconds.ToDays(10L * 1000L * 1000L * 60L * 60L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Microseconds.ToDays(10L * 1000L * 1000L * 60L * 60L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Microseconds.ToDays(10L * 1000L * 1000L * 60L * 60L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Microseconds.ToDays(10L * 1000L * 1000L * 60L * 60L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Microseconds.ToDays(10L * 1000L * 1000L * 60L * 60L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Microseconds.ToDays(10L * 1000L * 1000L * 60L * 60L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Microseconds.ToDays(10L * 1000L * 1000L * 60L * 60L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Milliseconds.ToNanoseconds(10L).Should().Be(10L * 1000L * 1000L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Milliseconds.ToNanoseconds(10L).Should().Be(10L * 1000L * 1000L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Milliseconds.ToNanoseconds(10L).Should().Be(10L * 1000L * 1000L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Milliseconds.ToNanoseconds(10L).Should().Be(10L * 1000L * 1000L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Milliseconds.ToMicroseconds(10L).Should().Be(10L * 1000L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Milliseconds.ToMicroseconds(10L).Should().Be(10L * 1000L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Milliseconds.ToMicroseconds(10L).Should().Be(10L * 1000L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Milliseconds.ToMilliseconds(10L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Milliseconds.ToMilliseconds(10L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Milliseconds.ToSeconds(10L * 1000L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Milliseconds.ToSeconds(10L * 1000L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Milliseconds.ToSeconds(10L * 1000L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Milliseconds.ToMinutes(10L * 1000L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Milliseconds.ToMinutes(10L * 1000L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Milliseconds.ToMinutes(10L * 1000L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Milliseconds.ToMinutes(10L * 1000L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Milliseconds.ToHours(10L * 1000L * 60L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Milliseconds.ToHours(10L * 1000L * 60L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Milliseconds.ToHours(10L * 1000L * 60L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Milliseconds.ToHours(10L * 1000L * 60L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Milliseconds.ToHours(10L * 1000L * 60L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Milliseconds.ToDays(10L * 1000L * 60L * 60L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Milliseconds.ToDays(10L * 1000L * 60L * 60L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Milliseconds.ToDays(10L * 1000L * 60L * 60L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Milliseconds.ToDays(10L * 1000L * 60L * 60L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Milliseconds.ToDays(10L * 1000L * 60L * 60L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Milliseconds.ToDays(10L * 1000L * 60L * 60L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Seconds.ToNanoseconds(10L).Should().Be(10L * 1000L * 1000L * 1000L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Seconds.ToNanoseconds(10L).Should().Be(10L * 1000L * 1000L * 1000L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Seconds.ToNanoseconds(10L).Should().Be(10L * 1000L * 1000L * 1000L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Seconds.ToNanoseconds(10L).Should().Be(10L * 1000L * 1000L * 1000L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Seconds.ToNanoseconds(10L).Should().Be(10L * 1000L * 1000L * 1000L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Seconds.ToMicroseconds(10L).Should().Be(10L * 1000L * 1000L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Seconds.ToMicroseconds(10L).Should().Be(10L * 1000L * 1000L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Seconds.ToMicroseconds(10L).Should().Be(10L * 1000L * 1000L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Seconds.ToMicroseconds(10L).Should().Be(10L * 1000L * 1000L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Seconds.ToMilliseconds(10L).Should().Be(10L * 1000L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Seconds.ToMilliseconds(10L).Should().Be(10L * 1000L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Seconds.ToMilliseconds(10L).Should().Be(10L * 1000L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Seconds.ToSeconds(10L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Seconds.ToSeconds(10L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Seconds.ToMinutes(10L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Seconds.ToMinutes(10L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Seconds.ToMinutes(10L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Seconds.ToHours(10L * 60L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Seconds.ToHours(10L * 60L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Seconds.ToHours(10L * 60L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Seconds.ToHours(10L * 60L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Seconds.ToDays(10L * 60L * 60L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Seconds.ToDays(10L * 60L * 60L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Seconds.ToDays(10L * 60L * 60L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Seconds.ToDays(10L * 60L * 60L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Seconds.ToDays(10L * 60L * 60L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Minutes.ToNanoseconds(10L).Should().Be(10L * 1000L * 1000L * 1000L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Minutes.ToNanoseconds(10L).Should().Be(10L * 1000L * 1000L * 1000L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Minutes.ToNanoseconds(10L).Should().Be(10L * 1000L * 1000L * 1000L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Minutes.ToNanoseconds(10L).Should().Be(10L * 1000L * 1000L * 1000L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Minutes.ToNanoseconds(10L).Should().Be(10L * 1000L * 1000L * 1000L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Minutes.ToNanoseconds(10L).Should().Be(10L * 1000L * 1000L * 1000L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Minutes.ToMicroseconds(10L).Should().Be(10L * 1000L * 1000L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Minutes.ToMicroseconds(10L).Should().Be(10L * 1000L * 1000L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Minutes.ToMicroseconds(10L).Should().Be(10L * 1000L * 1000L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Minutes.ToMicroseconds(10L).Should().Be(10L * 1000L * 1000L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Minutes.ToMicroseconds(10L).Should().Be(10L * 1000L * 1000L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Minutes.ToMilliseconds(10L).Should().Be(10L * 1000L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Minutes.ToMilliseconds(10L).Should().Be(10L * 1000L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Minutes.ToMilliseconds(10L).Should().Be(10L * 1000L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Minutes.ToMilliseconds(10L).Should().Be(10L * 1000L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Minutes.ToSeconds(10L).Should().Be(10L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Minutes.ToSeconds(10L).Should().Be(10L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Minutes.ToSeconds(10L).Should().Be(10L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Minutes.ToMinutes(10L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Minutes.ToMinutes(10L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Minutes.ToHours(10L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Minutes.ToHours(10L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Minutes.ToHours(10L * 60L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Minutes.ToDays(10L * 60L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Minutes.ToDays(10L * 60L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Minutes.ToDays(10L * 60L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Minutes.ToDays(10L * 60L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Hours.ToNanoseconds(10L).Should().Be(10L * 1000L * 1000L * 1000L * 60L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Hours.ToNanoseconds(10L).Should().Be(10L * 1000L * 1000L * 1000L * 60L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Hours.ToNanoseconds(10L).Should().Be(10L * 1000L * 1000L * 1000L * 60L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Hours.ToNanoseconds(10L).Should().Be(10L * 1000L * 1000L * 1000L * 60L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Hours.ToNanoseconds(10L).Should().Be(10L * 1000L * 1000L * 1000L * 60L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Hours.ToNanoseconds(10L).Should().Be(10L * 1000L * 1000L * 1000L * 60L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Hours.ToNanoseconds(10L).Should().Be(10L * 1000L * 1000L * 1000L * 60L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Hours.ToMicroseconds(10L).Should().Be(10L * 1000L * 1000L * 60L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Hours.ToMicroseconds(10L).Should().Be(10L * 1000L * 1000L * 60L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Hours.ToMicroseconds(10L).Should().Be(10L * 1000L * 1000L * 60L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Hours.ToMicroseconds(10L).Should().Be(10L * 1000L * 1000L * 60L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Hours.ToMicroseconds(10L).Should().Be(10L * 1000L * 1000L * 60L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Hours.ToMicroseconds(10L).Should().Be(10L * 1000L * 1000L * 60L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Hours.ToMilliseconds(10L).Should().Be(10L * 1000L * 60L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Hours.ToMilliseconds(10L).Should().Be(10L * 1000L * 60L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Hours.ToMilliseconds(10L).Should().Be(10L * 1000L * 60L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Hours.ToMilliseconds(10L).Should().Be(10L * 1000L * 60L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Hours.ToMilliseconds(10L).Should().Be(10L * 1000L * 60L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Hours.ToSeconds(10L).Should().Be(10L * 60L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Hours.ToSeconds(10L).Should().Be(10L * 60L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Hours.ToSeconds(10L).Should().Be(10L * 60L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Hours.ToSeconds(10L).Should().Be(10L * 60L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Hours.ToMinutes(10L).Should().Be(10L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Hours.ToMinutes(10L).Should().Be(10L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Hours.ToMinutes(10L).Should().Be(10L * 60L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Hours.ToHours(10L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Hours.ToHours(10L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Hours.ToDays(10L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Hours.ToDays(10L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Hours.ToDays(10L * 24L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToNanoseconds(10L).Should().Be(10L * 1000L * 1000L * 1000L * 60L * 60L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToNanoseconds(10L).Should().Be(10L * 1000L * 1000L * 1000L * 60L * 60L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToNanoseconds(10L).Should().Be(10L * 1000L * 1000L * 1000L * 60L * 60L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToNanoseconds(10L).Should().Be(10L * 1000L * 1000L * 1000L * 60L * 60L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToNanoseconds(10L).Should().Be(10L * 1000L * 1000L * 1000L * 60L * 60L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToNanoseconds(10L).Should().Be(10L * 1000L * 1000L * 1000L * 60L * 60L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToNanoseconds(10L).Should().Be(10L * 1000L * 1000L * 1000L * 60L * 60L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToNanoseconds(10L).Should().Be(10L * 1000L * 1000L * 1000L * 60L * 60L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToMicroseconds(10L).Should().Be(10L * 1000L * 1000L * 60L * 60L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToMicroseconds(10L).Should().Be(10L * 1000L * 1000L * 60L * 60L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToMicroseconds(10L).Should().Be(10L * 1000L * 1000L * 60L * 60L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToMicroseconds(10L).Should().Be(10L * 1000L * 1000L * 60L * 60L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToMicroseconds(10L).Should().Be(10L * 1000L * 1000L * 60L * 60L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToMicroseconds(10L).Should().Be(10L * 1000L * 1000L * 60L * 60L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToMicroseconds(10L).Should().Be(10L * 1000L * 1000L * 60L * 60L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToMilliseconds(10L).Should().Be(10L * 1000L * 60L * 60L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToMilliseconds(10L).Should().Be(10L * 1000L * 60L * 60L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToMilliseconds(10L).Should().Be(10L * 1000L * 60L * 60L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToMilliseconds(10L).Should().Be(10L * 1000L * 60L * 60L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToMilliseconds(10L).Should().Be(10L * 1000L * 60L * 60L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToMilliseconds(10L).Should().Be(10L * 1000L * 60L * 60L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToSeconds(10L).Should().Be(10L * 60L * 60L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToSeconds(10L).Should().Be(10L * 60L * 60L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToSeconds(10L).Should().Be(10L * 60L * 60L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToSeconds(10L).Should().Be(10L * 60L * 60L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToSeconds(10L).Should().Be(10L * 60L * 60L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToMinutes(10L).Should().Be(10L * 60L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToMinutes(10L).Should().Be(10L * 60L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToMinutes(10L).Should().Be(10L * 60L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToMinutes(10L).Should().Be(10L * 60L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToHours(10L).Should().Be(10L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToHours(10L).Should().Be(10L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToHours(10L).Should().Be(10L * 24L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToDays(10L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_CanConvertBetweenUnits,The following statement contains a magic number: TimeUnit.Days.ToDays(10L).Should().Be(10L);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Nanoseconds.ScalingFactorFor(TimeUnit.Microseconds).Should().Be(1.0 * 0.001);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Nanoseconds.ScalingFactorFor(TimeUnit.Milliseconds).Should().Be(1.0 * 0.001 * 0.001);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Nanoseconds.ScalingFactorFor(TimeUnit.Milliseconds).Should().Be(1.0 * 0.001 * 0.001);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Nanoseconds.ScalingFactorFor(TimeUnit.Seconds).Should().Be(1.0 * 0.001 * 0.001 * 0.001);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Nanoseconds.ScalingFactorFor(TimeUnit.Seconds).Should().Be(1.0 * 0.001 * 0.001 * 0.001);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Nanoseconds.ScalingFactorFor(TimeUnit.Seconds).Should().Be(1.0 * 0.001 * 0.001 * 0.001);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Nanoseconds.ScalingFactorFor(TimeUnit.Minutes).Should().Be(1.0 * 0.001 * 0.001 * 0.001 * 1 / 60.0);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Nanoseconds.ScalingFactorFor(TimeUnit.Minutes).Should().Be(1.0 * 0.001 * 0.001 * 0.001 * 1 / 60.0);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Nanoseconds.ScalingFactorFor(TimeUnit.Minutes).Should().Be(1.0 * 0.001 * 0.001 * 0.001 * 1 / 60.0);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Nanoseconds.ScalingFactorFor(TimeUnit.Minutes).Should().Be(1.0 * 0.001 * 0.001 * 0.001 * 1 / 60.0);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Nanoseconds.ScalingFactorFor(TimeUnit.Hours).Should().Be(1.0 * 0.001 * 0.001 * 0.001 * 1 / 60.0 * 1 / 60.0);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Nanoseconds.ScalingFactorFor(TimeUnit.Hours).Should().Be(1.0 * 0.001 * 0.001 * 0.001 * 1 / 60.0 * 1 / 60.0);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Nanoseconds.ScalingFactorFor(TimeUnit.Hours).Should().Be(1.0 * 0.001 * 0.001 * 0.001 * 1 / 60.0 * 1 / 60.0);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Nanoseconds.ScalingFactorFor(TimeUnit.Hours).Should().Be(1.0 * 0.001 * 0.001 * 0.001 * 1 / 60.0 * 1 / 60.0);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Nanoseconds.ScalingFactorFor(TimeUnit.Hours).Should().Be(1.0 * 0.001 * 0.001 * 0.001 * 1 / 60.0 * 1 / 60.0);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Nanoseconds.ScalingFactorFor(TimeUnit.Days).Should().BeApproximately(1.0 * 0.001 * 0.001 * 0.001 * 1 / 60.0 * 1 / 60.0 * 1 / 24.0' 1.0E-20);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Nanoseconds.ScalingFactorFor(TimeUnit.Days).Should().BeApproximately(1.0 * 0.001 * 0.001 * 0.001 * 1 / 60.0 * 1 / 60.0 * 1 / 24.0' 1.0E-20);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Nanoseconds.ScalingFactorFor(TimeUnit.Days).Should().BeApproximately(1.0 * 0.001 * 0.001 * 0.001 * 1 / 60.0 * 1 / 60.0 * 1 / 24.0' 1.0E-20);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Nanoseconds.ScalingFactorFor(TimeUnit.Days).Should().BeApproximately(1.0 * 0.001 * 0.001 * 0.001 * 1 / 60.0 * 1 / 60.0 * 1 / 24.0' 1.0E-20);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Nanoseconds.ScalingFactorFor(TimeUnit.Days).Should().BeApproximately(1.0 * 0.001 * 0.001 * 0.001 * 1 / 60.0 * 1 / 60.0 * 1 / 24.0' 1.0E-20);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Nanoseconds.ScalingFactorFor(TimeUnit.Days).Should().BeApproximately(1.0 * 0.001 * 0.001 * 0.001 * 1 / 60.0 * 1 / 60.0 * 1 / 24.0' 1.0E-20);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Nanoseconds.ScalingFactorFor(TimeUnit.Days).Should().BeApproximately(1.0 * 0.001 * 0.001 * 0.001 * 1 / 60.0 * 1 / 60.0 * 1 / 24.0' 1.0E-20);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Microseconds.ScalingFactorFor(TimeUnit.Nanoseconds).Should().Be(1.0 * 1000);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Microseconds.ScalingFactorFor(TimeUnit.Milliseconds).Should().Be(1.0 * 0.001);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Microseconds.ScalingFactorFor(TimeUnit.Seconds).Should().Be(1.0 * 0.001 * 0.001);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Microseconds.ScalingFactorFor(TimeUnit.Seconds).Should().Be(1.0 * 0.001 * 0.001);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Microseconds.ScalingFactorFor(TimeUnit.Minutes).Should().Be(1.0 * 0.001 * 0.001 * 1 / 60.0);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Microseconds.ScalingFactorFor(TimeUnit.Minutes).Should().Be(1.0 * 0.001 * 0.001 * 1 / 60.0);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Microseconds.ScalingFactorFor(TimeUnit.Minutes).Should().Be(1.0 * 0.001 * 0.001 * 1 / 60.0);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Microseconds.ScalingFactorFor(TimeUnit.Hours).Should().Be(1.0 * 0.001 * 0.001 * 1 / 60.0 * 1 / 60.0);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Microseconds.ScalingFactorFor(TimeUnit.Hours).Should().Be(1.0 * 0.001 * 0.001 * 1 / 60.0 * 1 / 60.0);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Microseconds.ScalingFactorFor(TimeUnit.Hours).Should().Be(1.0 * 0.001 * 0.001 * 1 / 60.0 * 1 / 60.0);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Microseconds.ScalingFactorFor(TimeUnit.Hours).Should().Be(1.0 * 0.001 * 0.001 * 1 / 60.0 * 1 / 60.0);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Microseconds.ScalingFactorFor(TimeUnit.Days).Should().Be(1.0 * 0.001 * 0.001 * 1 / 60.0 * 1 / 60.0 * 1 / 24.0);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Microseconds.ScalingFactorFor(TimeUnit.Days).Should().Be(1.0 * 0.001 * 0.001 * 1 / 60.0 * 1 / 60.0 * 1 / 24.0);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Microseconds.ScalingFactorFor(TimeUnit.Days).Should().Be(1.0 * 0.001 * 0.001 * 1 / 60.0 * 1 / 60.0 * 1 / 24.0);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Microseconds.ScalingFactorFor(TimeUnit.Days).Should().Be(1.0 * 0.001 * 0.001 * 1 / 60.0 * 1 / 60.0 * 1 / 24.0);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Microseconds.ScalingFactorFor(TimeUnit.Days).Should().Be(1.0 * 0.001 * 0.001 * 1 / 60.0 * 1 / 60.0 * 1 / 24.0);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Milliseconds.ScalingFactorFor(TimeUnit.Nanoseconds).Should().Be(1.0 * 1000 * 1000);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Milliseconds.ScalingFactorFor(TimeUnit.Nanoseconds).Should().Be(1.0 * 1000 * 1000);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Milliseconds.ScalingFactorFor(TimeUnit.Microseconds).Should().Be(1.0 * 1000);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Milliseconds.ScalingFactorFor(TimeUnit.Seconds).Should().Be(1.0 * 0.001);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Milliseconds.ScalingFactorFor(TimeUnit.Minutes).Should().Be(1.0 * 0.001 * 1 / 60.0);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Milliseconds.ScalingFactorFor(TimeUnit.Minutes).Should().Be(1.0 * 0.001 * 1 / 60.0);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Milliseconds.ScalingFactorFor(TimeUnit.Hours).Should().BeApproximately(1.0 * 0.001 * 1 / 60.0 * 1 / 60.0' 1.0E-20);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Milliseconds.ScalingFactorFor(TimeUnit.Hours).Should().BeApproximately(1.0 * 0.001 * 1 / 60.0 * 1 / 60.0' 1.0E-20);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Milliseconds.ScalingFactorFor(TimeUnit.Hours).Should().BeApproximately(1.0 * 0.001 * 1 / 60.0 * 1 / 60.0' 1.0E-20);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Milliseconds.ScalingFactorFor(TimeUnit.Hours).Should().BeApproximately(1.0 * 0.001 * 1 / 60.0 * 1 / 60.0' 1.0E-20);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Milliseconds.ScalingFactorFor(TimeUnit.Days).Should().BeApproximately(1.0 * 0.001 * 1 / 60.0 * 1 / 60.0 * 1 / 24.0' 1.0E-20);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Milliseconds.ScalingFactorFor(TimeUnit.Days).Should().BeApproximately(1.0 * 0.001 * 1 / 60.0 * 1 / 60.0 * 1 / 24.0' 1.0E-20);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Milliseconds.ScalingFactorFor(TimeUnit.Days).Should().BeApproximately(1.0 * 0.001 * 1 / 60.0 * 1 / 60.0 * 1 / 24.0' 1.0E-20);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Milliseconds.ScalingFactorFor(TimeUnit.Days).Should().BeApproximately(1.0 * 0.001 * 1 / 60.0 * 1 / 60.0 * 1 / 24.0' 1.0E-20);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Milliseconds.ScalingFactorFor(TimeUnit.Days).Should().BeApproximately(1.0 * 0.001 * 1 / 60.0 * 1 / 60.0 * 1 / 24.0' 1.0E-20);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Seconds.ScalingFactorFor(TimeUnit.Nanoseconds).Should().Be(1.0 * 1000 * 1000 * 1000);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Seconds.ScalingFactorFor(TimeUnit.Nanoseconds).Should().Be(1.0 * 1000 * 1000 * 1000);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Seconds.ScalingFactorFor(TimeUnit.Nanoseconds).Should().Be(1.0 * 1000 * 1000 * 1000);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Seconds.ScalingFactorFor(TimeUnit.Microseconds).Should().Be(1.0 * 1000 * 1000);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Seconds.ScalingFactorFor(TimeUnit.Microseconds).Should().Be(1.0 * 1000 * 1000);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Seconds.ScalingFactorFor(TimeUnit.Milliseconds).Should().Be(1.0 * 1000);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Seconds.ScalingFactorFor(TimeUnit.Minutes).Should().Be(1.0 * 1 / 60);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Seconds.ScalingFactorFor(TimeUnit.Hours).Should().Be(1.0 * 1 / 60 * 1 / 60);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Seconds.ScalingFactorFor(TimeUnit.Hours).Should().Be(1.0 * 1 / 60 * 1 / 60);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Seconds.ScalingFactorFor(TimeUnit.Days).Should().Be(1.0 * 1 / 60 * 1 / 60 * 1 / 24);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Seconds.ScalingFactorFor(TimeUnit.Days).Should().Be(1.0 * 1 / 60 * 1 / 60 * 1 / 24);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Seconds.ScalingFactorFor(TimeUnit.Days).Should().Be(1.0 * 1 / 60 * 1 / 60 * 1 / 24);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Minutes.ScalingFactorFor(TimeUnit.Nanoseconds).Should().Be(1.0 * 1000 * 1000 * 1000 * 60);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Minutes.ScalingFactorFor(TimeUnit.Nanoseconds).Should().Be(1.0 * 1000 * 1000 * 1000 * 60);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Minutes.ScalingFactorFor(TimeUnit.Nanoseconds).Should().Be(1.0 * 1000 * 1000 * 1000 * 60);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Minutes.ScalingFactorFor(TimeUnit.Nanoseconds).Should().Be(1.0 * 1000 * 1000 * 1000 * 60);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Minutes.ScalingFactorFor(TimeUnit.Microseconds).Should().Be(1.0 * 1000 * 1000 * 60);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Minutes.ScalingFactorFor(TimeUnit.Microseconds).Should().Be(1.0 * 1000 * 1000 * 60);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Minutes.ScalingFactorFor(TimeUnit.Microseconds).Should().Be(1.0 * 1000 * 1000 * 60);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Minutes.ScalingFactorFor(TimeUnit.Milliseconds).Should().Be(1.0 * 1000 * 60);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Minutes.ScalingFactorFor(TimeUnit.Milliseconds).Should().Be(1.0 * 1000 * 60);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Minutes.ScalingFactorFor(TimeUnit.Seconds).Should().Be(1.0 * 60);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Minutes.ScalingFactorFor(TimeUnit.Hours).Should().Be(1.0 / 60);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Minutes.ScalingFactorFor(TimeUnit.Days).Should().Be(1.0 / 60 / 24);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Minutes.ScalingFactorFor(TimeUnit.Days).Should().Be(1.0 / 60 / 24);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Hours.ScalingFactorFor(TimeUnit.Nanoseconds).Should().Be(1.0 * 1000 * 1000 * 1000 * 60 * 60);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Hours.ScalingFactorFor(TimeUnit.Nanoseconds).Should().Be(1.0 * 1000 * 1000 * 1000 * 60 * 60);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Hours.ScalingFactorFor(TimeUnit.Nanoseconds).Should().Be(1.0 * 1000 * 1000 * 1000 * 60 * 60);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Hours.ScalingFactorFor(TimeUnit.Nanoseconds).Should().Be(1.0 * 1000 * 1000 * 1000 * 60 * 60);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Hours.ScalingFactorFor(TimeUnit.Nanoseconds).Should().Be(1.0 * 1000 * 1000 * 1000 * 60 * 60);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Hours.ScalingFactorFor(TimeUnit.Microseconds).Should().Be(1.0 * 1000 * 1000 * 60 * 60);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Hours.ScalingFactorFor(TimeUnit.Microseconds).Should().Be(1.0 * 1000 * 1000 * 60 * 60);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Hours.ScalingFactorFor(TimeUnit.Microseconds).Should().Be(1.0 * 1000 * 1000 * 60 * 60);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Hours.ScalingFactorFor(TimeUnit.Microseconds).Should().Be(1.0 * 1000 * 1000 * 60 * 60);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Hours.ScalingFactorFor(TimeUnit.Milliseconds).Should().Be(1.0 * 1000 * 60 * 60);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Hours.ScalingFactorFor(TimeUnit.Milliseconds).Should().Be(1.0 * 1000 * 60 * 60);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Hours.ScalingFactorFor(TimeUnit.Milliseconds).Should().Be(1.0 * 1000 * 60 * 60);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Hours.ScalingFactorFor(TimeUnit.Seconds).Should().Be(1.0 * 60 * 60);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Hours.ScalingFactorFor(TimeUnit.Seconds).Should().Be(1.0 * 60 * 60);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Hours.ScalingFactorFor(TimeUnit.Minutes).Should().Be(1.0 * 60);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Hours.ScalingFactorFor(TimeUnit.Days).Should().Be(1.0 / 24);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Days.ScalingFactorFor(TimeUnit.Nanoseconds).Should().Be(1.0 * 1000 * 1000 * 1000 * 60 * 60 * 24);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Days.ScalingFactorFor(TimeUnit.Nanoseconds).Should().Be(1.0 * 1000 * 1000 * 1000 * 60 * 60 * 24);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Days.ScalingFactorFor(TimeUnit.Nanoseconds).Should().Be(1.0 * 1000 * 1000 * 1000 * 60 * 60 * 24);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Days.ScalingFactorFor(TimeUnit.Nanoseconds).Should().Be(1.0 * 1000 * 1000 * 1000 * 60 * 60 * 24);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Days.ScalingFactorFor(TimeUnit.Nanoseconds).Should().Be(1.0 * 1000 * 1000 * 1000 * 60 * 60 * 24);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Days.ScalingFactorFor(TimeUnit.Nanoseconds).Should().Be(1.0 * 1000 * 1000 * 1000 * 60 * 60 * 24);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Days.ScalingFactorFor(TimeUnit.Microseconds).Should().Be(1.0 * 1000 * 1000 * 60 * 60 * 24);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Days.ScalingFactorFor(TimeUnit.Microseconds).Should().Be(1.0 * 1000 * 1000 * 60 * 60 * 24);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Days.ScalingFactorFor(TimeUnit.Microseconds).Should().Be(1.0 * 1000 * 1000 * 60 * 60 * 24);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Days.ScalingFactorFor(TimeUnit.Microseconds).Should().Be(1.0 * 1000 * 1000 * 60 * 60 * 24);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Days.ScalingFactorFor(TimeUnit.Microseconds).Should().Be(1.0 * 1000 * 1000 * 60 * 60 * 24);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Days.ScalingFactorFor(TimeUnit.Milliseconds).Should().Be(1.0 * 1000 * 60 * 60 * 24);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Days.ScalingFactorFor(TimeUnit.Milliseconds).Should().Be(1.0 * 1000 * 60 * 60 * 24);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Days.ScalingFactorFor(TimeUnit.Milliseconds).Should().Be(1.0 * 1000 * 60 * 60 * 24);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Days.ScalingFactorFor(TimeUnit.Milliseconds).Should().Be(1.0 * 1000 * 60 * 60 * 24);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Days.ScalingFactorFor(TimeUnit.Seconds).Should().Be(1.0 * 60 * 60 * 24);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Days.ScalingFactorFor(TimeUnit.Seconds).Should().Be(1.0 * 60 * 60 * 24);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Days.ScalingFactorFor(TimeUnit.Seconds).Should().Be(1.0 * 60 * 60 * 24);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Days.ScalingFactorFor(TimeUnit.Minutes).Should().Be(1.0 * 60 * 24);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Days.ScalingFactorFor(TimeUnit.Minutes).Should().Be(1.0 * 60 * 24);
Magic Number,Metrics.Tests.Utils,TimeUnitTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\Utils\TimeUnitTests.cs,TimeUnit_HasCorrectScalingFactor,The following statement contains a magic number: TimeUnit.Days.ScalingFactorFor(TimeUnit.Hours).Should().Be(1.0 * 24);
Magic Number,Metrics.Tests.HealthChecksTests,HealthCheckRegistryTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\HealthChecksTests\HealthCheckRegistryTests.cs,HealthCheck_RegistryExecutesCheckOnEachGetStatus,The following statement contains a magic number: count.Should().Be(2);
Magic Number,Metrics.Tests.HealthChecksTests,HealthCheckRegistryTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\HealthChecksTests\HealthCheckRegistryTests.cs,HealthCheck_RegistryStatusIsFailedIfOneCheckFails,The following statement contains a magic number: status.Results.Length.Should().Be(2);
Magic Number,Metrics.Tests.HealthChecksTests,HealthCheckRegistryTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\HealthChecksTests\HealthCheckRegistryTests.cs,HealthCheck_RegistryStatusIsHealthyIfAllChecksAreHealthy,The following statement contains a magic number: status.Results.Length.Should().Be(2);
Magic Number,Metrics.Tests.NancyAdapter,NancyAdapterGlobalMetrics,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\NancyAdapter\NancyAdapterGlobalMetrics.cs,NancyMetrics_ShouldBeAbleToRecordTimeForAllRequests,The following statement contains a magic number: timer.Histogram.Max.Should().Be(100);
Magic Number,Metrics.Tests.NancyAdapter,NancyAdapterGlobalMetrics,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\NancyAdapter\NancyAdapterGlobalMetrics.cs,NancyMetrics_ShouldBeAbleToRecordTimeForAllRequests,The following statement contains a magic number: timer.Histogram.Min.Should().Be(100);
Magic Number,Metrics.Tests.NancyAdapter,NancyAdapterGlobalMetrics,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\NancyAdapter\NancyAdapterGlobalMetrics.cs,NancyMetrics_ShouldBeAbleToRecordTimeForAllRequests,The following statement contains a magic number: timer.Rate.Count.Should().Be(2);
Magic Number,Metrics.Tests.NancyAdapter,NancyAdapterGlobalMetrics,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\NancyAdapter\NancyAdapterGlobalMetrics.cs,NancyMetrics_ShouldBeAbleToRecordTimeForAllRequests,The following statement contains a magic number: timer.Histogram.Count.Should().Be(2);
Magic Number,Metrics.Tests.NancyAdapter,NancyAdapterGlobalMetrics,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\NancyAdapter\NancyAdapterGlobalMetrics.cs,NancyMetrics_ShouldBeAbleToRecordTimeForAllRequests,The following statement contains a magic number: timer.Histogram.Max.Should().Be(200);
Magic Number,Metrics.Tests.NancyAdapter,NancyAdapterGlobalMetrics,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\NancyAdapter\NancyAdapterGlobalMetrics.cs,NancyMetrics_ShouldBeAbleToRecordTimeForAllRequests,The following statement contains a magic number: timer.Histogram.Min.Should().Be(100);
Magic Number,Metrics.Tests.NancyAdapter,NancyAdapterGlobalMetrics,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\NancyAdapter\NancyAdapterGlobalMetrics.cs,NancyMetrics_ShouldBeAbleToCountErrors,The following statement contains a magic number: this.context.MeterValue("NancyFx"' "Errors").Count.Should().Be(2);
Magic Number,Metrics.Tests.NancyAdapter,NancyAdapterGlobalMetrics,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\NancyAdapter\NancyAdapterGlobalMetrics.cs,NancyMetrics_ShouldBeAbleToCountActiveRequests,The following statement contains a magic number: this.context.CounterValue("NancyFx"' "Active Requests").Count.Should().Be(2);
Magic Number,Metrics.Tests.NancyAdapter,TestModule,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\NancyAdapter\NancyAdapterGlobalMetrics.cs,TestModule,The following statement contains a magic number: Get["/action"] = _ =>                  {                      clock.Advance(TimeUnit.Milliseconds' 100);                      return Response.AsText("response");                  };
Magic Number,Metrics.Tests.NancyAdapter,TestModule,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\NancyAdapter\NancyAdapterGlobalMetrics.cs,TestModule,The following statement contains a magic number: Post["/post"] = _ =>                  {                      clock.Advance(TimeUnit.Milliseconds' 200);                      return HttpStatusCode.OK;                  };
Magic Number,Metrics.Tests.NancyAdapter,TestModule,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\NancyAdapter\NancyAdapterGlobalMetrics.cs,TestModule,The following statement contains a magic number: Get["/action"] = _ =>                  {                      clock.Advance(TimeUnit.Milliseconds' 100);                      return Response.AsText("response");                  };
Magic Number,Metrics.Tests.NancyAdapter,TestModule,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\NancyAdapter\NancyAdapterGlobalMetrics.cs,TestModule,The following statement contains a magic number: Get["/contentWithLength"] = _ =>                  {                      clock.Advance(TimeUnit.Milliseconds' 100);                      return Response.AsText("response").WithHeader("Content-Length"' "100");                  };
Magic Number,Metrics.Tests.NancyAdapter,NancyAdapterModuleMetricsTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\NancyAdapter\NancyAdapterModuleMetricsTests.cs,NancyMetrics_ShouldBeAbleToMonitorTimeForModuleRequest,The following statement contains a magic number: timer.Histogram.Max.Should().Be(100);
Magic Number,Metrics.Tests.NancyAdapter,NancyAdapterModuleMetricsTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\NancyAdapter\NancyAdapterModuleMetricsTests.cs,NancyMetrics_ShouldBeAbleToMonitorSizeForRouteReponse,The following statement contains a magic number: sizeHistogram.Count.Should().Be(2);
Magic Number,Metrics.Tests.NancyAdapter,NancyAdapterModuleMetricsTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\NancyAdapter\NancyAdapterModuleMetricsTests.cs,NancyMetrics_ShouldBeAbleToMonitorSizeForRouteReponse,The following statement contains a magic number: sizeHistogram.Max.Should().Be(100);
Magic Number,Metrics.Tests.OwinAdapter,OwinMiddlewareTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\OwinAdapter\OwinMiddlewareTests.cs,OwinMiddlewareTests,The following statement contains a magic number: this.server = TestServer.Create(app =>              {                  this.config.WithOwin(m => app.Use(m));                    app.Run(ctx =>                  {                      this.context.Clock.Advance(TimeUnit.Milliseconds' timePerRequest);                      if (ctx.Request.Path.ToString() == "/test/action")                      {                          return ctx.Response.WriteAsync("response");                      }                        if (ctx.Request.Path.ToString() == "/test/error")                      {                          ctx.Response.StatusCode = 500;                          return ctx.Response.WriteAsync("response");                      }                        if (ctx.Request.Path.ToString() == "/test/size")                      {                          return ctx.Response.WriteAsync("response");                      }                        if (ctx.Request.Path.ToString() == "/test/post")                      {                          return ctx.Response.WriteAsync("response");                      }                        ctx.Response.StatusCode = 404;                      return ctx.Response.WriteAsync("not found");                  });                });
Magic Number,Metrics.Tests.OwinAdapter,OwinMiddlewareTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\OwinAdapter\OwinMiddlewareTests.cs,OwinMiddlewareTests,The following statement contains a magic number: this.server = TestServer.Create(app =>              {                  this.config.WithOwin(m => app.Use(m));                    app.Run(ctx =>                  {                      this.context.Clock.Advance(TimeUnit.Milliseconds' timePerRequest);                      if (ctx.Request.Path.ToString() == "/test/action")                      {                          return ctx.Response.WriteAsync("response");                      }                        if (ctx.Request.Path.ToString() == "/test/error")                      {                          ctx.Response.StatusCode = 500;                          return ctx.Response.WriteAsync("response");                      }                        if (ctx.Request.Path.ToString() == "/test/size")                      {                          return ctx.Response.WriteAsync("response");                      }                        if (ctx.Request.Path.ToString() == "/test/post")                      {                          return ctx.Response.WriteAsync("response");                      }                        ctx.Response.StatusCode = 404;                      return ctx.Response.WriteAsync("not found");                  });                });
Magic Number,Metrics.Tests.OwinAdapter,OwinMiddlewareTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\OwinAdapter\OwinMiddlewareTests.cs,OwinMetrics_ShouldBeAbleToRecordErrors,The following statement contains a magic number: context.MeterValue("Owin"' "Errors").Count.Should().Be(2);
Magic Number,Metrics.Tests.OwinAdapter,OwinMiddlewareTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\OwinAdapter\OwinMiddlewareTests.cs,OwinMetrics_ShouldBeAbleToRecordActiveRequestCounts,The following statement contains a magic number: context.TimerValue("Owin"' "Requests").Rate.Count.Should().Be(2);
Magic Number,Metrics.Tests.OwinAdapter,OwinMiddlewareTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\OwinAdapter\OwinMiddlewareTests.cs,OwinMetrics_ShouldBeAbleToRecordActiveRequestCounts,The following statement contains a magic number: context.TimerValue("Owin"' "Requests").Rate.Count.Should().Be(3);
Magic Number,Metrics.Tests.OwinAdapter,OwinMiddlewareTests,D:\research\architectureSmells\repos\etishor_Metrics.NET\Src\Metrics.Tests\OwinAdapter\OwinMiddlewareTests.cs,OwinMetrics_ShouldBeAbleToRecordActiveRequestCounts,The following statement contains a magic number: context.TimerValue("Owin"' "Requests").Rate.Count.Should().Be(4);
