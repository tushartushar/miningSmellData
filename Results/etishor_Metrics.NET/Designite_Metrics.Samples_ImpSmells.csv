Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Metrics.Samples,UserValueTimerSample,F:\newReposMay17\etishor_Metrics.NET\Samples\Metrics.Samples\UserValueTimerSample.cs,ActualProcessingOfTheRequest,The following statement contains a magic number: Thread.Sleep ((int)ThreadLocalRandom.NextLong () % 1000);  
Magic Number,Metrics.Samples,UserValueTimerSample,F:\newReposMay17\etishor_Metrics.NET\Samples\Metrics.Samples\UserValueTimerSample.cs,RunSomeRequests,The following statement contains a magic number: for (int i = 0; i < 30; i++) {  	var documentId = ThreadLocalRandom.NextLong () % 10;  	new UserValueTimerSample ().Process ("document-" + documentId.ToString ());  }  
Magic Number,Metrics.Samples,UserValueTimerSample,F:\newReposMay17\etishor_Metrics.NET\Samples\Metrics.Samples\UserValueTimerSample.cs,RunSomeRequests,The following statement contains a magic number: for (int i = 0; i < 30; i++) {  	var documentId = ThreadLocalRandom.NextLong () % 10;  	new UserValueTimerSample ().Process ("document-" + documentId.ToString ());  }  
Magic Number,Metrics.Samples,UserValueHistogramSample,F:\newReposMay17\etishor_Metrics.NET\Samples\Metrics.Samples\UserValueHistogramSample.cs,GetResultsForDocument,The following statement contains a magic number: return new int[ThreadLocalRandom.NextLong () % 100];  
Magic Number,Metrics.Samples,UserValueHistogramSample,F:\newReposMay17\etishor_Metrics.NET\Samples\Metrics.Samples\UserValueHistogramSample.cs,RunSomeRequests,The following statement contains a magic number: for (int i = 0; i < 30; i++) {  	var documentId = ThreadLocalRandom.NextLong () % 10;  	new UserValueHistogramSample ().Process ("document-" + documentId.ToString ());  }  
Magic Number,Metrics.Samples,UserValueHistogramSample,F:\newReposMay17\etishor_Metrics.NET\Samples\Metrics.Samples\UserValueHistogramSample.cs,RunSomeRequests,The following statement contains a magic number: for (int i = 0; i < 30; i++) {  	var documentId = ThreadLocalRandom.NextLong () % 10;  	new UserValueHistogramSample ().Process ("document-" + documentId.ToString ());  }  
Magic Number,Metrics.Samples,SetMeterSample,F:\newReposMay17\etishor_Metrics.NET\Samples\Metrics.Samples\SetMeterSample.cs,RunSomeRequests,The following statement contains a magic number: for (int i = 0; i < 30; i++) {  	var commandIndex = ThreadLocalRandom.NextLong () % 5;  	if (commandIndex == 0)  		new SetMeterSample ().Process (new SendEmail ());  	if (commandIndex == 1)  		new SetMeterSample ().Process (new ShipProduct ());  	if (commandIndex == 2)  		new SetMeterSample ().Process (new BillCustomer ());  	if (commandIndex == 3)  		new SetMeterSample ().Process (new MakeInvoice ());  	if (commandIndex == 4)  		new SetMeterSample ().Process (new MarkAsPreffered ());  }  
Magic Number,Metrics.Samples,SetMeterSample,F:\newReposMay17\etishor_Metrics.NET\Samples\Metrics.Samples\SetMeterSample.cs,RunSomeRequests,The following statement contains a magic number: for (int i = 0; i < 30; i++) {  	var commandIndex = ThreadLocalRandom.NextLong () % 5;  	if (commandIndex == 0)  		new SetMeterSample ().Process (new SendEmail ());  	if (commandIndex == 1)  		new SetMeterSample ().Process (new ShipProduct ());  	if (commandIndex == 2)  		new SetMeterSample ().Process (new BillCustomer ());  	if (commandIndex == 3)  		new SetMeterSample ().Process (new MakeInvoice ());  	if (commandIndex == 4)  		new SetMeterSample ().Process (new MarkAsPreffered ());  }  
Magic Number,Metrics.Samples,SetMeterSample,F:\newReposMay17\etishor_Metrics.NET\Samples\Metrics.Samples\SetMeterSample.cs,RunSomeRequests,The following statement contains a magic number: for (int i = 0; i < 30; i++) {  	var commandIndex = ThreadLocalRandom.NextLong () % 5;  	if (commandIndex == 0)  		new SetMeterSample ().Process (new SendEmail ());  	if (commandIndex == 1)  		new SetMeterSample ().Process (new ShipProduct ());  	if (commandIndex == 2)  		new SetMeterSample ().Process (new BillCustomer ());  	if (commandIndex == 3)  		new SetMeterSample ().Process (new MakeInvoice ());  	if (commandIndex == 4)  		new SetMeterSample ().Process (new MarkAsPreffered ());  }  
Magic Number,Metrics.Samples,SetMeterSample,F:\newReposMay17\etishor_Metrics.NET\Samples\Metrics.Samples\SetMeterSample.cs,RunSomeRequests,The following statement contains a magic number: for (int i = 0; i < 30; i++) {  	var commandIndex = ThreadLocalRandom.NextLong () % 5;  	if (commandIndex == 0)  		new SetMeterSample ().Process (new SendEmail ());  	if (commandIndex == 1)  		new SetMeterSample ().Process (new ShipProduct ());  	if (commandIndex == 2)  		new SetMeterSample ().Process (new BillCustomer ());  	if (commandIndex == 3)  		new SetMeterSample ().Process (new MakeInvoice ());  	if (commandIndex == 4)  		new SetMeterSample ().Process (new MarkAsPreffered ());  }  
Magic Number,Metrics.Samples,SetMeterSample,F:\newReposMay17\etishor_Metrics.NET\Samples\Metrics.Samples\SetMeterSample.cs,RunSomeRequests,The following statement contains a magic number: for (int i = 0; i < 30; i++) {  	var commandIndex = ThreadLocalRandom.NextLong () % 5;  	if (commandIndex == 0)  		new SetMeterSample ().Process (new SendEmail ());  	if (commandIndex == 1)  		new SetMeterSample ().Process (new ShipProduct ());  	if (commandIndex == 2)  		new SetMeterSample ().Process (new BillCustomer ());  	if (commandIndex == 3)  		new SetMeterSample ().Process (new MakeInvoice ());  	if (commandIndex == 4)  		new SetMeterSample ().Process (new MarkAsPreffered ());  }  
Magic Number,Metrics.Samples,SetMeterSample,F:\newReposMay17\etishor_Metrics.NET\Samples\Metrics.Samples\SetMeterSample.cs,RunSomeRequests,The following statement contains a magic number: if (commandIndex == 2)  	new SetMeterSample ().Process (new BillCustomer ());  
Magic Number,Metrics.Samples,SetMeterSample,F:\newReposMay17\etishor_Metrics.NET\Samples\Metrics.Samples\SetMeterSample.cs,RunSomeRequests,The following statement contains a magic number: if (commandIndex == 3)  	new SetMeterSample ().Process (new MakeInvoice ());  
Magic Number,Metrics.Samples,SetMeterSample,F:\newReposMay17\etishor_Metrics.NET\Samples\Metrics.Samples\SetMeterSample.cs,RunSomeRequests,The following statement contains a magic number: if (commandIndex == 4)  	new SetMeterSample ().Process (new MarkAsPreffered ());  
Magic Number,Metrics.Samples,HealthChecksSample,F:\newReposMay17\etishor_Metrics.NET\Samples\Metrics.Samples\HealthChecksSample.cs,RegisterHealthChecks,The following statement contains a magic number: HealthChecks.RegisterHealthCheck ("DiskSpace"' () => {  	int freeDiskSpace = GetFreeDiskSpace ();  	if (freeDiskSpace <= 512) {  		return HealthCheckResult.Unhealthy ("Not enough disk space: {0}"' freeDiskSpace);  	} else {  		return HealthCheckResult.Unhealthy ("Disk space ok: {0}"' freeDiskSpace);  	}  });  
Magic Number,Metrics.Samples,HealthChecksSample,F:\newReposMay17\etishor_Metrics.NET\Samples\Metrics.Samples\HealthChecksSample.cs,RegisterHealthChecks,The following statement contains a magic number: if (freeDiskSpace <= 512) {  	return HealthCheckResult.Unhealthy ("Not enough disk space: {0}"' freeDiskSpace);  } else {  	return HealthCheckResult.Unhealthy ("Disk space ok: {0}"' freeDiskSpace);  }  
Magic Number,Metrics.Samples,HealthChecksSample,F:\newReposMay17\etishor_Metrics.NET\Samples\Metrics.Samples\HealthChecksSample.cs,GetFreeDiskSpace,The following statement contains a magic number: return 1024;  
Magic Number,Metrics.Samples,MultiContextInstanceMetrics,F:\newReposMay17\etishor_Metrics.NET\Samples\Metrics.Samples\MultiContextMetrics.cs,RunSample,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	new MultiContextInstanceMetrics ("Sample Instance " + i.ToString ()).Run ();  }  
Magic Number,Metrics.Samples,SampleMetrics,F:\newReposMay17\etishor_Metrics.NET\Samples\Metrics.Samples\SampleMetrics.cs,Request,The following statement contains a magic number: using (this.timer.NewContext (i.ToString ()))// measure until disposed   {  	someValue *= (i + 1);  	// will be reflected in the gauge   	this.concurrentRequestsCounter.Increment ();  	// increment concurrent requests counter  	this.totalRequestsCounter.Increment ();  	// increment total requests counter   	this.meter.Mark ();  	// signal a new request to the meter  	this.histogramOfData.Update (ThreadLocalRandom.NextLong () % 5000' i.ToString ());  	// update the histogram with the input data  	var item = "Item " + ThreadLocalRandom.NextLong () % 5;  	this.setCounter.Increment (item);  	this.setMeter.Mark (item);  	// simulate doing some work  	int ms = Math.Abs ((int)(ThreadLocalRandom.NextLong () % 3000L));  	Thread.Sleep (ms);  	this.concurrentRequestsCounter.Decrement ();  	// decrement number of concurrent requests  }  
Magic Number,Metrics.Samples,SampleMetrics,F:\newReposMay17\etishor_Metrics.NET\Samples\Metrics.Samples\SampleMetrics.cs,Request,The following statement contains a magic number: using (this.timer.NewContext (i.ToString ()))// measure until disposed   {  	someValue *= (i + 1);  	// will be reflected in the gauge   	this.concurrentRequestsCounter.Increment ();  	// increment concurrent requests counter  	this.totalRequestsCounter.Increment ();  	// increment total requests counter   	this.meter.Mark ();  	// signal a new request to the meter  	this.histogramOfData.Update (ThreadLocalRandom.NextLong () % 5000' i.ToString ());  	// update the histogram with the input data  	var item = "Item " + ThreadLocalRandom.NextLong () % 5;  	this.setCounter.Increment (item);  	this.setMeter.Mark (item);  	// simulate doing some work  	int ms = Math.Abs ((int)(ThreadLocalRandom.NextLong () % 3000L));  	Thread.Sleep (ms);  	this.concurrentRequestsCounter.Decrement ();  	// decrement number of concurrent requests  }  
Magic Number,Metrics.Samples,SampleMetrics,F:\newReposMay17\etishor_Metrics.NET\Samples\Metrics.Samples\SampleMetrics.cs,Request,The following statement contains a magic number: this.histogramOfData.Update (ThreadLocalRandom.NextLong () % 5000' i.ToString ());  
Magic Number,Metrics.Samples,SampleMetrics,F:\newReposMay17\etishor_Metrics.NET\Samples\Metrics.Samples\SampleMetrics.cs,RunSomeRequests,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	int j = i;  	tasks.Add (new Thread (() => test.Request (j)));  }  
Magic Number,Metrics.Samples,SetCounterSample,F:\newReposMay17\etishor_Metrics.NET\Samples\Metrics.Samples\SetCounterSample.cs,RunSomeRequests,The following statement contains a magic number: for (int i = 0; i < 30; i++) {  	var commandIndex = ThreadLocalRandom.NextLong () % 5;  	if (commandIndex == 0)  		new SetCounterSample ().Process (new SendEmail ());  	if (commandIndex == 1)  		new SetCounterSample ().Process (new ShipProduct ());  	if (commandIndex == 2)  		new SetCounterSample ().Process (new BillCustomer ());  	if (commandIndex == 3)  		new SetCounterSample ().Process (new MakeInvoice ());  	if (commandIndex == 4)  		new SetCounterSample ().Process (new MarkAsPreffered ());  }  
Magic Number,Metrics.Samples,SetCounterSample,F:\newReposMay17\etishor_Metrics.NET\Samples\Metrics.Samples\SetCounterSample.cs,RunSomeRequests,The following statement contains a magic number: for (int i = 0; i < 30; i++) {  	var commandIndex = ThreadLocalRandom.NextLong () % 5;  	if (commandIndex == 0)  		new SetCounterSample ().Process (new SendEmail ());  	if (commandIndex == 1)  		new SetCounterSample ().Process (new ShipProduct ());  	if (commandIndex == 2)  		new SetCounterSample ().Process (new BillCustomer ());  	if (commandIndex == 3)  		new SetCounterSample ().Process (new MakeInvoice ());  	if (commandIndex == 4)  		new SetCounterSample ().Process (new MarkAsPreffered ());  }  
Magic Number,Metrics.Samples,SetCounterSample,F:\newReposMay17\etishor_Metrics.NET\Samples\Metrics.Samples\SetCounterSample.cs,RunSomeRequests,The following statement contains a magic number: for (int i = 0; i < 30; i++) {  	var commandIndex = ThreadLocalRandom.NextLong () % 5;  	if (commandIndex == 0)  		new SetCounterSample ().Process (new SendEmail ());  	if (commandIndex == 1)  		new SetCounterSample ().Process (new ShipProduct ());  	if (commandIndex == 2)  		new SetCounterSample ().Process (new BillCustomer ());  	if (commandIndex == 3)  		new SetCounterSample ().Process (new MakeInvoice ());  	if (commandIndex == 4)  		new SetCounterSample ().Process (new MarkAsPreffered ());  }  
Magic Number,Metrics.Samples,SetCounterSample,F:\newReposMay17\etishor_Metrics.NET\Samples\Metrics.Samples\SetCounterSample.cs,RunSomeRequests,The following statement contains a magic number: for (int i = 0; i < 30; i++) {  	var commandIndex = ThreadLocalRandom.NextLong () % 5;  	if (commandIndex == 0)  		new SetCounterSample ().Process (new SendEmail ());  	if (commandIndex == 1)  		new SetCounterSample ().Process (new ShipProduct ());  	if (commandIndex == 2)  		new SetCounterSample ().Process (new BillCustomer ());  	if (commandIndex == 3)  		new SetCounterSample ().Process (new MakeInvoice ());  	if (commandIndex == 4)  		new SetCounterSample ().Process (new MarkAsPreffered ());  }  
Magic Number,Metrics.Samples,SetCounterSample,F:\newReposMay17\etishor_Metrics.NET\Samples\Metrics.Samples\SetCounterSample.cs,RunSomeRequests,The following statement contains a magic number: for (int i = 0; i < 30; i++) {  	var commandIndex = ThreadLocalRandom.NextLong () % 5;  	if (commandIndex == 0)  		new SetCounterSample ().Process (new SendEmail ());  	if (commandIndex == 1)  		new SetCounterSample ().Process (new ShipProduct ());  	if (commandIndex == 2)  		new SetCounterSample ().Process (new BillCustomer ());  	if (commandIndex == 3)  		new SetCounterSample ().Process (new MakeInvoice ());  	if (commandIndex == 4)  		new SetCounterSample ().Process (new MarkAsPreffered ());  }  
Magic Number,Metrics.Samples,SetCounterSample,F:\newReposMay17\etishor_Metrics.NET\Samples\Metrics.Samples\SetCounterSample.cs,RunSomeRequests,The following statement contains a magic number: if (commandIndex == 2)  	new SetCounterSample ().Process (new BillCustomer ());  
Magic Number,Metrics.Samples,SetCounterSample,F:\newReposMay17\etishor_Metrics.NET\Samples\Metrics.Samples\SetCounterSample.cs,RunSomeRequests,The following statement contains a magic number: if (commandIndex == 3)  	new SetCounterSample ().Process (new MakeInvoice ());  
Magic Number,Metrics.Samples,SetCounterSample,F:\newReposMay17\etishor_Metrics.NET\Samples\Metrics.Samples\SetCounterSample.cs,RunSomeRequests,The following statement contains a magic number: if (commandIndex == 4)  	new SetCounterSample ().Process (new MarkAsPreffered ());  
