Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Metrics.Samples,SampleMetrics,D:\research\architectureSmells\repos\etishor_Metrics.NET\Samples\Metrics.Samples\SampleMetrics.cs,Request,The length of the statement  "                this.histogramOfData.Update(ThreadLocalRandom.NextLong() % 5000' i.ToString()); // update the histogram with the input data " is 123.
Magic Number,Metrics.Samples,UserValueTimerSample,D:\research\architectureSmells\repos\etishor_Metrics.NET\Samples\Metrics.Samples\UserValueTimerSample.cs,ActualProcessingOfTheRequest,The following statement contains a magic number: Thread.Sleep((int)ThreadLocalRandom.NextLong() % 1000);
Magic Number,Metrics.Samples,UserValueTimerSample,D:\research\architectureSmells\repos\etishor_Metrics.NET\Samples\Metrics.Samples\UserValueTimerSample.cs,RunSomeRequests,The following statement contains a magic number: var documentId = ThreadLocalRandom.NextLong() % 10;
Magic Number,Metrics.Samples,UserValueTimerSample,D:\research\architectureSmells\repos\etishor_Metrics.NET\Samples\Metrics.Samples\UserValueTimerSample.cs,RunSomeRequests,The following statement contains a magic number: i < 30
Magic Number,Metrics.Samples,UserValueHistogramSample,D:\research\architectureSmells\repos\etishor_Metrics.NET\Samples\Metrics.Samples\UserValueHistogramSample.cs,GetResultsForDocument,The following statement contains a magic number: return new int[ThreadLocalRandom.NextLong() % 100];
Magic Number,Metrics.Samples,UserValueHistogramSample,D:\research\architectureSmells\repos\etishor_Metrics.NET\Samples\Metrics.Samples\UserValueHistogramSample.cs,RunSomeRequests,The following statement contains a magic number: var documentId = ThreadLocalRandom.NextLong() % 10;
Magic Number,Metrics.Samples,UserValueHistogramSample,D:\research\architectureSmells\repos\etishor_Metrics.NET\Samples\Metrics.Samples\UserValueHistogramSample.cs,RunSomeRequests,The following statement contains a magic number: i < 30
Magic Number,Metrics.Samples,SetMeterSample,D:\research\architectureSmells\repos\etishor_Metrics.NET\Samples\Metrics.Samples\SetMeterSample.cs,RunSomeRequests,The following statement contains a magic number: var commandIndex = ThreadLocalRandom.NextLong() % 5;
Magic Number,Metrics.Samples,SetMeterSample,D:\research\architectureSmells\repos\etishor_Metrics.NET\Samples\Metrics.Samples\SetMeterSample.cs,RunSomeRequests,The following statement contains a magic number: commandIndex == 2
Magic Number,Metrics.Samples,SetMeterSample,D:\research\architectureSmells\repos\etishor_Metrics.NET\Samples\Metrics.Samples\SetMeterSample.cs,RunSomeRequests,The following statement contains a magic number: commandIndex == 3
Magic Number,Metrics.Samples,SetMeterSample,D:\research\architectureSmells\repos\etishor_Metrics.NET\Samples\Metrics.Samples\SetMeterSample.cs,RunSomeRequests,The following statement contains a magic number: commandIndex == 4
Magic Number,Metrics.Samples,SetMeterSample,D:\research\architectureSmells\repos\etishor_Metrics.NET\Samples\Metrics.Samples\SetMeterSample.cs,RunSomeRequests,The following statement contains a magic number: i < 30
Magic Number,Metrics.Samples,HealthChecksSample,D:\research\architectureSmells\repos\etishor_Metrics.NET\Samples\Metrics.Samples\HealthChecksSample.cs,RegisterHealthChecks,The following statement contains a magic number: HealthChecks.RegisterHealthCheck("DiskSpace"' () =>              {                  int freeDiskSpace = GetFreeDiskSpace();                    if (freeDiskSpace <= 512)                  {                      return HealthCheckResult.Unhealthy("Not enough disk space: {0}"' freeDiskSpace);                  }                  else                  {                      return HealthCheckResult.Unhealthy("Disk space ok: {0}"' freeDiskSpace);                  }              });
Magic Number,Metrics.Samples,HealthChecksSample,D:\research\architectureSmells\repos\etishor_Metrics.NET\Samples\Metrics.Samples\HealthChecksSample.cs,GetFreeDiskSpace,The following statement contains a magic number: return 1024;
Magic Number,Metrics.Samples,MultiContextInstanceMetrics,D:\research\architectureSmells\repos\etishor_Metrics.NET\Samples\Metrics.Samples\MultiContextMetrics.cs,RunSample,The following statement contains a magic number: i < 5
Magic Number,Metrics.Samples,SampleMetrics,D:\research\architectureSmells\repos\etishor_Metrics.NET\Samples\Metrics.Samples\SampleMetrics.cs,Request,The following statement contains a magic number: this.histogramOfData.Update(ThreadLocalRandom.NextLong() % 5000' i.ToString());
Magic Number,Metrics.Samples,SampleMetrics,D:\research\architectureSmells\repos\etishor_Metrics.NET\Samples\Metrics.Samples\SampleMetrics.cs,Request,The following statement contains a magic number: var item = "Item " + ThreadLocalRandom.NextLong() % 5;
Magic Number,Metrics.Samples,SampleMetrics,D:\research\architectureSmells\repos\etishor_Metrics.NET\Samples\Metrics.Samples\SampleMetrics.cs,Request,The following statement contains a magic number: int ms = Math.Abs((int)(ThreadLocalRandom.NextLong() % 3000L));
Magic Number,Metrics.Samples,SampleMetrics,D:\research\architectureSmells\repos\etishor_Metrics.NET\Samples\Metrics.Samples\SampleMetrics.cs,RunSomeRequests,The following statement contains a magic number: i < 10
Magic Number,Metrics.Samples,SetCounterSample,D:\research\architectureSmells\repos\etishor_Metrics.NET\Samples\Metrics.Samples\SetCounterSample.cs,RunSomeRequests,The following statement contains a magic number: var commandIndex = ThreadLocalRandom.NextLong() % 5;
Magic Number,Metrics.Samples,SetCounterSample,D:\research\architectureSmells\repos\etishor_Metrics.NET\Samples\Metrics.Samples\SetCounterSample.cs,RunSomeRequests,The following statement contains a magic number: commandIndex == 2
Magic Number,Metrics.Samples,SetCounterSample,D:\research\architectureSmells\repos\etishor_Metrics.NET\Samples\Metrics.Samples\SetCounterSample.cs,RunSomeRequests,The following statement contains a magic number: commandIndex == 3
Magic Number,Metrics.Samples,SetCounterSample,D:\research\architectureSmells\repos\etishor_Metrics.NET\Samples\Metrics.Samples\SetCounterSample.cs,RunSomeRequests,The following statement contains a magic number: commandIndex == 4
Magic Number,Metrics.Samples,SetCounterSample,D:\research\architectureSmells\repos\etishor_Metrics.NET\Samples\Metrics.Samples\SetCounterSample.cs,RunSomeRequests,The following statement contains a magic number: i < 30
