Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Navigateur,Navigue,C:\repos\mbatest_Binhed\Navigateur\Navigue.cs,repertoire_AfterSelect,Cyclomatic complexity of the method is 17
Empty Catch Block,Navigateur,Navigue,C:\repos\mbatest_Binhed\Navigateur\Navigue.cs,repertoire_AfterSelect,The method has an empty catch block.
Magic Number,Navigateur,Navigue,C:\repos\mbatest_Binhed\Navigateur\Navigue.cs,repertoire_AfterSelect,The following statement contains a magic number: if (tn.Nodes.Count == 0) {  	Type tp = tn.Tag.GetType ();  	string path = "";  	switch (tp.Name) {  	case "DriveInfo":  		DriveInfo dr = (DriveInfo)tn.Tag;  		path = dr.Name;  		break;  	case "String":  		path = (string)tn.Tag;  		break;  	}  	if (Directory.Exists (path)) {  		try {  			DirectoryInfo di = new DirectoryInfo (path);  			FileInfo fi = new FileInfo (path);  			string[] files = Directory.GetFiles (path);  			foreach (string s in files) {  				string a = Path.GetFileName (s);  				TreeNode ttn = new TreeNode (a' 2' 2);  				ttn.Tag = s;  				if (tn.Checked)  					ttn.Checked = true;  				tn.Nodes.Add (ttn);  			}  			string[] nodes = Directory.GetDirectories (path);  			foreach (string s in nodes) {  				string a = Path.GetFileName (s);  				TreeNode ttn = new TreeNode (a' 0' 1);  				ttn.Tag = s;  				if (tn.Checked)  					ttn.Checked = true;  				tn.Nodes.Add (ttn);  			}  			tn.Expand ();  		}  		catch {  		}  	}  	#region un fichier est sélectionné  	if (tn.Nodes.Count == 0) {  		if (File.Exists (path))  			if (NavIndexChanged != null) {  				NavIndexChanged (new SelectedIndexEventArg (path));  			}  	}  	#endregion  }  
Magic Number,Navigateur,Navigue,C:\repos\mbatest_Binhed\Navigateur\Navigue.cs,repertoire_AfterSelect,The following statement contains a magic number: if (tn.Nodes.Count == 0) {  	Type tp = tn.Tag.GetType ();  	string path = "";  	switch (tp.Name) {  	case "DriveInfo":  		DriveInfo dr = (DriveInfo)tn.Tag;  		path = dr.Name;  		break;  	case "String":  		path = (string)tn.Tag;  		break;  	}  	if (Directory.Exists (path)) {  		try {  			DirectoryInfo di = new DirectoryInfo (path);  			FileInfo fi = new FileInfo (path);  			string[] files = Directory.GetFiles (path);  			foreach (string s in files) {  				string a = Path.GetFileName (s);  				TreeNode ttn = new TreeNode (a' 2' 2);  				ttn.Tag = s;  				if (tn.Checked)  					ttn.Checked = true;  				tn.Nodes.Add (ttn);  			}  			string[] nodes = Directory.GetDirectories (path);  			foreach (string s in nodes) {  				string a = Path.GetFileName (s);  				TreeNode ttn = new TreeNode (a' 0' 1);  				ttn.Tag = s;  				if (tn.Checked)  					ttn.Checked = true;  				tn.Nodes.Add (ttn);  			}  			tn.Expand ();  		}  		catch {  		}  	}  	#region un fichier est sélectionné  	if (tn.Nodes.Count == 0) {  		if (File.Exists (path))  			if (NavIndexChanged != null) {  				NavIndexChanged (new SelectedIndexEventArg (path));  			}  	}  	#endregion  }  
Magic Number,Navigateur,Navigue,C:\repos\mbatest_Binhed\Navigateur\Navigue.cs,repertoire_AfterSelect,The following statement contains a magic number: if (Directory.Exists (path)) {  	try {  		DirectoryInfo di = new DirectoryInfo (path);  		FileInfo fi = new FileInfo (path);  		string[] files = Directory.GetFiles (path);  		foreach (string s in files) {  			string a = Path.GetFileName (s);  			TreeNode ttn = new TreeNode (a' 2' 2);  			ttn.Tag = s;  			if (tn.Checked)  				ttn.Checked = true;  			tn.Nodes.Add (ttn);  		}  		string[] nodes = Directory.GetDirectories (path);  		foreach (string s in nodes) {  			string a = Path.GetFileName (s);  			TreeNode ttn = new TreeNode (a' 0' 1);  			ttn.Tag = s;  			if (tn.Checked)  				ttn.Checked = true;  			tn.Nodes.Add (ttn);  		}  		tn.Expand ();  	}  	catch {  	}  }  
Magic Number,Navigateur,Navigue,C:\repos\mbatest_Binhed\Navigateur\Navigue.cs,repertoire_AfterSelect,The following statement contains a magic number: if (Directory.Exists (path)) {  	try {  		DirectoryInfo di = new DirectoryInfo (path);  		FileInfo fi = new FileInfo (path);  		string[] files = Directory.GetFiles (path);  		foreach (string s in files) {  			string a = Path.GetFileName (s);  			TreeNode ttn = new TreeNode (a' 2' 2);  			ttn.Tag = s;  			if (tn.Checked)  				ttn.Checked = true;  			tn.Nodes.Add (ttn);  		}  		string[] nodes = Directory.GetDirectories (path);  		foreach (string s in nodes) {  			string a = Path.GetFileName (s);  			TreeNode ttn = new TreeNode (a' 0' 1);  			ttn.Tag = s;  			if (tn.Checked)  				ttn.Checked = true;  			tn.Nodes.Add (ttn);  		}  		tn.Expand ();  	}  	catch {  	}  }  
Magic Number,Navigateur,Navigue,C:\repos\mbatest_Binhed\Navigateur\Navigue.cs,repertoire_AfterSelect,The following statement contains a magic number: try {  	DirectoryInfo di = new DirectoryInfo (path);  	FileInfo fi = new FileInfo (path);  	string[] files = Directory.GetFiles (path);  	foreach (string s in files) {  		string a = Path.GetFileName (s);  		TreeNode ttn = new TreeNode (a' 2' 2);  		ttn.Tag = s;  		if (tn.Checked)  			ttn.Checked = true;  		tn.Nodes.Add (ttn);  	}  	string[] nodes = Directory.GetDirectories (path);  	foreach (string s in nodes) {  		string a = Path.GetFileName (s);  		TreeNode ttn = new TreeNode (a' 0' 1);  		ttn.Tag = s;  		if (tn.Checked)  			ttn.Checked = true;  		tn.Nodes.Add (ttn);  	}  	tn.Expand ();  }  catch {  }  
Magic Number,Navigateur,Navigue,C:\repos\mbatest_Binhed\Navigateur\Navigue.cs,repertoire_AfterSelect,The following statement contains a magic number: try {  	DirectoryInfo di = new DirectoryInfo (path);  	FileInfo fi = new FileInfo (path);  	string[] files = Directory.GetFiles (path);  	foreach (string s in files) {  		string a = Path.GetFileName (s);  		TreeNode ttn = new TreeNode (a' 2' 2);  		ttn.Tag = s;  		if (tn.Checked)  			ttn.Checked = true;  		tn.Nodes.Add (ttn);  	}  	string[] nodes = Directory.GetDirectories (path);  	foreach (string s in nodes) {  		string a = Path.GetFileName (s);  		TreeNode ttn = new TreeNode (a' 0' 1);  		ttn.Tag = s;  		if (tn.Checked)  			ttn.Checked = true;  		tn.Nodes.Add (ttn);  	}  	tn.Expand ();  }  catch {  }  
Magic Number,Navigateur,Navigue,C:\repos\mbatest_Binhed\Navigateur\Navigue.cs,repertoire_AfterSelect,The following statement contains a magic number: foreach (string s in files) {  	string a = Path.GetFileName (s);  	TreeNode ttn = new TreeNode (a' 2' 2);  	ttn.Tag = s;  	if (tn.Checked)  		ttn.Checked = true;  	tn.Nodes.Add (ttn);  }  
Magic Number,Navigateur,Navigue,C:\repos\mbatest_Binhed\Navigateur\Navigue.cs,repertoire_AfterSelect,The following statement contains a magic number: foreach (string s in files) {  	string a = Path.GetFileName (s);  	TreeNode ttn = new TreeNode (a' 2' 2);  	ttn.Tag = s;  	if (tn.Checked)  		ttn.Checked = true;  	tn.Nodes.Add (ttn);  }  
Missing Default,Navigateur,Navigue,C:\repos\mbatest_Binhed\Navigateur\Navigue.cs,repertoire_AfterSelect,The following switch statement is missing a default case: switch (tp.Name) {  case "DriveInfo":  	DriveInfo dr = (DriveInfo)tn.Tag;  	path = dr.Name;  	break;  case "String":  	path = (string)tn.Tag;  	break;  }  
