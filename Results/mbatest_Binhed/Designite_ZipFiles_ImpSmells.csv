Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ZipFiles,ZipHeader,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,ZipHeader,Cyclomatic complexity of the method is 9
Complex Method,ZipFiles,ZipHeader,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,ToString,Cyclomatic complexity of the method is 10
Complex Method,ZipFiles,Extra_field,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,ToString,Cyclomatic complexity of the method is 42
Complex Method,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,Cyclomatic complexity of the method is 48
Magic Number,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following statement contains a magic number: while (sw.Position < sw.Length) {  	sw.Read (buffer' 0' 2);  	//header  	sw.Read (buffer' 0' 1);  	//Compression  	switch (buffer [0]) {  	case 0x08:  		compression = "Deflate";  		break;  	}  	sw.Read (buffer' 0' 1);  	//Flags  	sw.Read (buffer' 0' 4);  	//Datetime  	sw.Read (buffer' 0' 1);  	//XLEN  	sw.Read (buffer' 0' 1);  	//Operating system                 	switch (buffer [0]) {  	case 0:  		os = " FAT filesystem (MS-DOS' OS/2' NT/Win32)";  		break;  	case 1:  		os = "Amiga";  		break;  	case 2:  		os = "VMS (or OpenVMS)";  		break;  	case 3:  		os = "Unix";  		break;  	case 4:  		os = "VM/CMS";  		break;  	case 5:  		os = "Atari TOS";  		break;  	case 6:  		os = "HPFS filesystem (OS/2' NT)";  		break;  	case 7:  		os = "Macintosh";  		break;  	case 8:  		os = "Z-System";  		break;  	case 9:  		os = "CP/M";  		break;  	case 10:  		os = "TOPS-20";  		break;  	case 11:  		os = "NTFS filesystem (NT)";  		break;  	case 12:  		os = "QDOS";  		break;  	case 13:  		os = "Acorn RISCOS";  		break;  	case 255:  		os = "unknown";  		break;  	}  	sw.Read (buffer' 0' 1);  	//CRC  }  
Magic Number,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following statement contains a magic number: while (sw.Position < sw.Length) {  	sw.Read (buffer' 0' 2);  	//header  	sw.Read (buffer' 0' 1);  	//Compression  	switch (buffer [0]) {  	case 0x08:  		compression = "Deflate";  		break;  	}  	sw.Read (buffer' 0' 1);  	//Flags  	sw.Read (buffer' 0' 4);  	//Datetime  	sw.Read (buffer' 0' 1);  	//XLEN  	sw.Read (buffer' 0' 1);  	//Operating system                 	switch (buffer [0]) {  	case 0:  		os = " FAT filesystem (MS-DOS' OS/2' NT/Win32)";  		break;  	case 1:  		os = "Amiga";  		break;  	case 2:  		os = "VMS (or OpenVMS)";  		break;  	case 3:  		os = "Unix";  		break;  	case 4:  		os = "VM/CMS";  		break;  	case 5:  		os = "Atari TOS";  		break;  	case 6:  		os = "HPFS filesystem (OS/2' NT)";  		break;  	case 7:  		os = "Macintosh";  		break;  	case 8:  		os = "Z-System";  		break;  	case 9:  		os = "CP/M";  		break;  	case 10:  		os = "TOPS-20";  		break;  	case 11:  		os = "NTFS filesystem (NT)";  		break;  	case 12:  		os = "QDOS";  		break;  	case 13:  		os = "Acorn RISCOS";  		break;  	case 255:  		os = "unknown";  		break;  	}  	sw.Read (buffer' 0' 1);  	//CRC  }  
Magic Number,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following statement contains a magic number: while (sw.Position < sw.Length) {  	sw.Read (buffer' 0' 2);  	//header  	sw.Read (buffer' 0' 1);  	//Compression  	switch (buffer [0]) {  	case 0x08:  		compression = "Deflate";  		break;  	}  	sw.Read (buffer' 0' 1);  	//Flags  	sw.Read (buffer' 0' 4);  	//Datetime  	sw.Read (buffer' 0' 1);  	//XLEN  	sw.Read (buffer' 0' 1);  	//Operating system                 	switch (buffer [0]) {  	case 0:  		os = " FAT filesystem (MS-DOS' OS/2' NT/Win32)";  		break;  	case 1:  		os = "Amiga";  		break;  	case 2:  		os = "VMS (or OpenVMS)";  		break;  	case 3:  		os = "Unix";  		break;  	case 4:  		os = "VM/CMS";  		break;  	case 5:  		os = "Atari TOS";  		break;  	case 6:  		os = "HPFS filesystem (OS/2' NT)";  		break;  	case 7:  		os = "Macintosh";  		break;  	case 8:  		os = "Z-System";  		break;  	case 9:  		os = "CP/M";  		break;  	case 10:  		os = "TOPS-20";  		break;  	case 11:  		os = "NTFS filesystem (NT)";  		break;  	case 12:  		os = "QDOS";  		break;  	case 13:  		os = "Acorn RISCOS";  		break;  	case 255:  		os = "unknown";  		break;  	}  	sw.Read (buffer' 0' 1);  	//CRC  }  
Magic Number,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following statement contains a magic number: while (sw.Position < sw.Length) {  	sw.Read (buffer' 0' 2);  	//header  	sw.Read (buffer' 0' 1);  	//Compression  	switch (buffer [0]) {  	case 0x08:  		compression = "Deflate";  		break;  	}  	sw.Read (buffer' 0' 1);  	//Flags  	sw.Read (buffer' 0' 4);  	//Datetime  	sw.Read (buffer' 0' 1);  	//XLEN  	sw.Read (buffer' 0' 1);  	//Operating system                 	switch (buffer [0]) {  	case 0:  		os = " FAT filesystem (MS-DOS' OS/2' NT/Win32)";  		break;  	case 1:  		os = "Amiga";  		break;  	case 2:  		os = "VMS (or OpenVMS)";  		break;  	case 3:  		os = "Unix";  		break;  	case 4:  		os = "VM/CMS";  		break;  	case 5:  		os = "Atari TOS";  		break;  	case 6:  		os = "HPFS filesystem (OS/2' NT)";  		break;  	case 7:  		os = "Macintosh";  		break;  	case 8:  		os = "Z-System";  		break;  	case 9:  		os = "CP/M";  		break;  	case 10:  		os = "TOPS-20";  		break;  	case 11:  		os = "NTFS filesystem (NT)";  		break;  	case 12:  		os = "QDOS";  		break;  	case 13:  		os = "Acorn RISCOS";  		break;  	case 255:  		os = "unknown";  		break;  	}  	sw.Read (buffer' 0' 1);  	//CRC  }  
Magic Number,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following statement contains a magic number: while (sw.Position < sw.Length) {  	sw.Read (buffer' 0' 2);  	//header  	sw.Read (buffer' 0' 1);  	//Compression  	switch (buffer [0]) {  	case 0x08:  		compression = "Deflate";  		break;  	}  	sw.Read (buffer' 0' 1);  	//Flags  	sw.Read (buffer' 0' 4);  	//Datetime  	sw.Read (buffer' 0' 1);  	//XLEN  	sw.Read (buffer' 0' 1);  	//Operating system                 	switch (buffer [0]) {  	case 0:  		os = " FAT filesystem (MS-DOS' OS/2' NT/Win32)";  		break;  	case 1:  		os = "Amiga";  		break;  	case 2:  		os = "VMS (or OpenVMS)";  		break;  	case 3:  		os = "Unix";  		break;  	case 4:  		os = "VM/CMS";  		break;  	case 5:  		os = "Atari TOS";  		break;  	case 6:  		os = "HPFS filesystem (OS/2' NT)";  		break;  	case 7:  		os = "Macintosh";  		break;  	case 8:  		os = "Z-System";  		break;  	case 9:  		os = "CP/M";  		break;  	case 10:  		os = "TOPS-20";  		break;  	case 11:  		os = "NTFS filesystem (NT)";  		break;  	case 12:  		os = "QDOS";  		break;  	case 13:  		os = "Acorn RISCOS";  		break;  	case 255:  		os = "unknown";  		break;  	}  	sw.Read (buffer' 0' 1);  	//CRC  }  
Magic Number,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following statement contains a magic number: while (sw.Position < sw.Length) {  	sw.Read (buffer' 0' 2);  	//header  	sw.Read (buffer' 0' 1);  	//Compression  	switch (buffer [0]) {  	case 0x08:  		compression = "Deflate";  		break;  	}  	sw.Read (buffer' 0' 1);  	//Flags  	sw.Read (buffer' 0' 4);  	//Datetime  	sw.Read (buffer' 0' 1);  	//XLEN  	sw.Read (buffer' 0' 1);  	//Operating system                 	switch (buffer [0]) {  	case 0:  		os = " FAT filesystem (MS-DOS' OS/2' NT/Win32)";  		break;  	case 1:  		os = "Amiga";  		break;  	case 2:  		os = "VMS (or OpenVMS)";  		break;  	case 3:  		os = "Unix";  		break;  	case 4:  		os = "VM/CMS";  		break;  	case 5:  		os = "Atari TOS";  		break;  	case 6:  		os = "HPFS filesystem (OS/2' NT)";  		break;  	case 7:  		os = "Macintosh";  		break;  	case 8:  		os = "Z-System";  		break;  	case 9:  		os = "CP/M";  		break;  	case 10:  		os = "TOPS-20";  		break;  	case 11:  		os = "NTFS filesystem (NT)";  		break;  	case 12:  		os = "QDOS";  		break;  	case 13:  		os = "Acorn RISCOS";  		break;  	case 255:  		os = "unknown";  		break;  	}  	sw.Read (buffer' 0' 1);  	//CRC  }  
Magic Number,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following statement contains a magic number: while (sw.Position < sw.Length) {  	sw.Read (buffer' 0' 2);  	//header  	sw.Read (buffer' 0' 1);  	//Compression  	switch (buffer [0]) {  	case 0x08:  		compression = "Deflate";  		break;  	}  	sw.Read (buffer' 0' 1);  	//Flags  	sw.Read (buffer' 0' 4);  	//Datetime  	sw.Read (buffer' 0' 1);  	//XLEN  	sw.Read (buffer' 0' 1);  	//Operating system                 	switch (buffer [0]) {  	case 0:  		os = " FAT filesystem (MS-DOS' OS/2' NT/Win32)";  		break;  	case 1:  		os = "Amiga";  		break;  	case 2:  		os = "VMS (or OpenVMS)";  		break;  	case 3:  		os = "Unix";  		break;  	case 4:  		os = "VM/CMS";  		break;  	case 5:  		os = "Atari TOS";  		break;  	case 6:  		os = "HPFS filesystem (OS/2' NT)";  		break;  	case 7:  		os = "Macintosh";  		break;  	case 8:  		os = "Z-System";  		break;  	case 9:  		os = "CP/M";  		break;  	case 10:  		os = "TOPS-20";  		break;  	case 11:  		os = "NTFS filesystem (NT)";  		break;  	case 12:  		os = "QDOS";  		break;  	case 13:  		os = "Acorn RISCOS";  		break;  	case 255:  		os = "unknown";  		break;  	}  	sw.Read (buffer' 0' 1);  	//CRC  }  
Magic Number,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following statement contains a magic number: while (sw.Position < sw.Length) {  	sw.Read (buffer' 0' 2);  	//header  	sw.Read (buffer' 0' 1);  	//Compression  	switch (buffer [0]) {  	case 0x08:  		compression = "Deflate";  		break;  	}  	sw.Read (buffer' 0' 1);  	//Flags  	sw.Read (buffer' 0' 4);  	//Datetime  	sw.Read (buffer' 0' 1);  	//XLEN  	sw.Read (buffer' 0' 1);  	//Operating system                 	switch (buffer [0]) {  	case 0:  		os = " FAT filesystem (MS-DOS' OS/2' NT/Win32)";  		break;  	case 1:  		os = "Amiga";  		break;  	case 2:  		os = "VMS (or OpenVMS)";  		break;  	case 3:  		os = "Unix";  		break;  	case 4:  		os = "VM/CMS";  		break;  	case 5:  		os = "Atari TOS";  		break;  	case 6:  		os = "HPFS filesystem (OS/2' NT)";  		break;  	case 7:  		os = "Macintosh";  		break;  	case 8:  		os = "Z-System";  		break;  	case 9:  		os = "CP/M";  		break;  	case 10:  		os = "TOPS-20";  		break;  	case 11:  		os = "NTFS filesystem (NT)";  		break;  	case 12:  		os = "QDOS";  		break;  	case 13:  		os = "Acorn RISCOS";  		break;  	case 255:  		os = "unknown";  		break;  	}  	sw.Read (buffer' 0' 1);  	//CRC  }  
Magic Number,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following statement contains a magic number: while (sw.Position < sw.Length) {  	sw.Read (buffer' 0' 2);  	//header  	sw.Read (buffer' 0' 1);  	//Compression  	switch (buffer [0]) {  	case 0x08:  		compression = "Deflate";  		break;  	}  	sw.Read (buffer' 0' 1);  	//Flags  	sw.Read (buffer' 0' 4);  	//Datetime  	sw.Read (buffer' 0' 1);  	//XLEN  	sw.Read (buffer' 0' 1);  	//Operating system                 	switch (buffer [0]) {  	case 0:  		os = " FAT filesystem (MS-DOS' OS/2' NT/Win32)";  		break;  	case 1:  		os = "Amiga";  		break;  	case 2:  		os = "VMS (or OpenVMS)";  		break;  	case 3:  		os = "Unix";  		break;  	case 4:  		os = "VM/CMS";  		break;  	case 5:  		os = "Atari TOS";  		break;  	case 6:  		os = "HPFS filesystem (OS/2' NT)";  		break;  	case 7:  		os = "Macintosh";  		break;  	case 8:  		os = "Z-System";  		break;  	case 9:  		os = "CP/M";  		break;  	case 10:  		os = "TOPS-20";  		break;  	case 11:  		os = "NTFS filesystem (NT)";  		break;  	case 12:  		os = "QDOS";  		break;  	case 13:  		os = "Acorn RISCOS";  		break;  	case 255:  		os = "unknown";  		break;  	}  	sw.Read (buffer' 0' 1);  	//CRC  }  
Magic Number,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following statement contains a magic number: while (sw.Position < sw.Length) {  	sw.Read (buffer' 0' 2);  	//header  	sw.Read (buffer' 0' 1);  	//Compression  	switch (buffer [0]) {  	case 0x08:  		compression = "Deflate";  		break;  	}  	sw.Read (buffer' 0' 1);  	//Flags  	sw.Read (buffer' 0' 4);  	//Datetime  	sw.Read (buffer' 0' 1);  	//XLEN  	sw.Read (buffer' 0' 1);  	//Operating system                 	switch (buffer [0]) {  	case 0:  		os = " FAT filesystem (MS-DOS' OS/2' NT/Win32)";  		break;  	case 1:  		os = "Amiga";  		break;  	case 2:  		os = "VMS (or OpenVMS)";  		break;  	case 3:  		os = "Unix";  		break;  	case 4:  		os = "VM/CMS";  		break;  	case 5:  		os = "Atari TOS";  		break;  	case 6:  		os = "HPFS filesystem (OS/2' NT)";  		break;  	case 7:  		os = "Macintosh";  		break;  	case 8:  		os = "Z-System";  		break;  	case 9:  		os = "CP/M";  		break;  	case 10:  		os = "TOPS-20";  		break;  	case 11:  		os = "NTFS filesystem (NT)";  		break;  	case 12:  		os = "QDOS";  		break;  	case 13:  		os = "Acorn RISCOS";  		break;  	case 255:  		os = "unknown";  		break;  	}  	sw.Read (buffer' 0' 1);  	//CRC  }  
Magic Number,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following statement contains a magic number: while (sw.Position < sw.Length) {  	sw.Read (buffer' 0' 2);  	//header  	sw.Read (buffer' 0' 1);  	//Compression  	switch (buffer [0]) {  	case 0x08:  		compression = "Deflate";  		break;  	}  	sw.Read (buffer' 0' 1);  	//Flags  	sw.Read (buffer' 0' 4);  	//Datetime  	sw.Read (buffer' 0' 1);  	//XLEN  	sw.Read (buffer' 0' 1);  	//Operating system                 	switch (buffer [0]) {  	case 0:  		os = " FAT filesystem (MS-DOS' OS/2' NT/Win32)";  		break;  	case 1:  		os = "Amiga";  		break;  	case 2:  		os = "VMS (or OpenVMS)";  		break;  	case 3:  		os = "Unix";  		break;  	case 4:  		os = "VM/CMS";  		break;  	case 5:  		os = "Atari TOS";  		break;  	case 6:  		os = "HPFS filesystem (OS/2' NT)";  		break;  	case 7:  		os = "Macintosh";  		break;  	case 8:  		os = "Z-System";  		break;  	case 9:  		os = "CP/M";  		break;  	case 10:  		os = "TOPS-20";  		break;  	case 11:  		os = "NTFS filesystem (NT)";  		break;  	case 12:  		os = "QDOS";  		break;  	case 13:  		os = "Acorn RISCOS";  		break;  	case 255:  		os = "unknown";  		break;  	}  	sw.Read (buffer' 0' 1);  	//CRC  }  
Magic Number,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following statement contains a magic number: while (sw.Position < sw.Length) {  	sw.Read (buffer' 0' 2);  	//header  	sw.Read (buffer' 0' 1);  	//Compression  	switch (buffer [0]) {  	case 0x08:  		compression = "Deflate";  		break;  	}  	sw.Read (buffer' 0' 1);  	//Flags  	sw.Read (buffer' 0' 4);  	//Datetime  	sw.Read (buffer' 0' 1);  	//XLEN  	sw.Read (buffer' 0' 1);  	//Operating system                 	switch (buffer [0]) {  	case 0:  		os = " FAT filesystem (MS-DOS' OS/2' NT/Win32)";  		break;  	case 1:  		os = "Amiga";  		break;  	case 2:  		os = "VMS (or OpenVMS)";  		break;  	case 3:  		os = "Unix";  		break;  	case 4:  		os = "VM/CMS";  		break;  	case 5:  		os = "Atari TOS";  		break;  	case 6:  		os = "HPFS filesystem (OS/2' NT)";  		break;  	case 7:  		os = "Macintosh";  		break;  	case 8:  		os = "Z-System";  		break;  	case 9:  		os = "CP/M";  		break;  	case 10:  		os = "TOPS-20";  		break;  	case 11:  		os = "NTFS filesystem (NT)";  		break;  	case 12:  		os = "QDOS";  		break;  	case 13:  		os = "Acorn RISCOS";  		break;  	case 255:  		os = "unknown";  		break;  	}  	sw.Read (buffer' 0' 1);  	//CRC  }  
Magic Number,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following statement contains a magic number: while (sw.Position < sw.Length) {  	sw.Read (buffer' 0' 2);  	//header  	sw.Read (buffer' 0' 1);  	//Compression  	switch (buffer [0]) {  	case 0x08:  		compression = "Deflate";  		break;  	}  	sw.Read (buffer' 0' 1);  	//Flags  	sw.Read (buffer' 0' 4);  	//Datetime  	sw.Read (buffer' 0' 1);  	//XLEN  	sw.Read (buffer' 0' 1);  	//Operating system                 	switch (buffer [0]) {  	case 0:  		os = " FAT filesystem (MS-DOS' OS/2' NT/Win32)";  		break;  	case 1:  		os = "Amiga";  		break;  	case 2:  		os = "VMS (or OpenVMS)";  		break;  	case 3:  		os = "Unix";  		break;  	case 4:  		os = "VM/CMS";  		break;  	case 5:  		os = "Atari TOS";  		break;  	case 6:  		os = "HPFS filesystem (OS/2' NT)";  		break;  	case 7:  		os = "Macintosh";  		break;  	case 8:  		os = "Z-System";  		break;  	case 9:  		os = "CP/M";  		break;  	case 10:  		os = "TOPS-20";  		break;  	case 11:  		os = "NTFS filesystem (NT)";  		break;  	case 12:  		os = "QDOS";  		break;  	case 13:  		os = "Acorn RISCOS";  		break;  	case 255:  		os = "unknown";  		break;  	}  	sw.Read (buffer' 0' 1);  	//CRC  }  
Magic Number,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following statement contains a magic number: while (sw.Position < sw.Length) {  	sw.Read (buffer' 0' 2);  	//header  	sw.Read (buffer' 0' 1);  	//Compression  	switch (buffer [0]) {  	case 0x08:  		compression = "Deflate";  		break;  	}  	sw.Read (buffer' 0' 1);  	//Flags  	sw.Read (buffer' 0' 4);  	//Datetime  	sw.Read (buffer' 0' 1);  	//XLEN  	sw.Read (buffer' 0' 1);  	//Operating system                 	switch (buffer [0]) {  	case 0:  		os = " FAT filesystem (MS-DOS' OS/2' NT/Win32)";  		break;  	case 1:  		os = "Amiga";  		break;  	case 2:  		os = "VMS (or OpenVMS)";  		break;  	case 3:  		os = "Unix";  		break;  	case 4:  		os = "VM/CMS";  		break;  	case 5:  		os = "Atari TOS";  		break;  	case 6:  		os = "HPFS filesystem (OS/2' NT)";  		break;  	case 7:  		os = "Macintosh";  		break;  	case 8:  		os = "Z-System";  		break;  	case 9:  		os = "CP/M";  		break;  	case 10:  		os = "TOPS-20";  		break;  	case 11:  		os = "NTFS filesystem (NT)";  		break;  	case 12:  		os = "QDOS";  		break;  	case 13:  		os = "Acorn RISCOS";  		break;  	case 255:  		os = "unknown";  		break;  	}  	sw.Read (buffer' 0' 1);  	//CRC  }  
Magic Number,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following statement contains a magic number: while (sw.Position < sw.Length) {  	sw.Read (buffer' 0' 2);  	//header  	sw.Read (buffer' 0' 1);  	//Compression  	switch (buffer [0]) {  	case 0x08:  		compression = "Deflate";  		break;  	}  	sw.Read (buffer' 0' 1);  	//Flags  	sw.Read (buffer' 0' 4);  	//Datetime  	sw.Read (buffer' 0' 1);  	//XLEN  	sw.Read (buffer' 0' 1);  	//Operating system                 	switch (buffer [0]) {  	case 0:  		os = " FAT filesystem (MS-DOS' OS/2' NT/Win32)";  		break;  	case 1:  		os = "Amiga";  		break;  	case 2:  		os = "VMS (or OpenVMS)";  		break;  	case 3:  		os = "Unix";  		break;  	case 4:  		os = "VM/CMS";  		break;  	case 5:  		os = "Atari TOS";  		break;  	case 6:  		os = "HPFS filesystem (OS/2' NT)";  		break;  	case 7:  		os = "Macintosh";  		break;  	case 8:  		os = "Z-System";  		break;  	case 9:  		os = "CP/M";  		break;  	case 10:  		os = "TOPS-20";  		break;  	case 11:  		os = "NTFS filesystem (NT)";  		break;  	case 12:  		os = "QDOS";  		break;  	case 13:  		os = "Acorn RISCOS";  		break;  	case 255:  		os = "unknown";  		break;  	}  	sw.Read (buffer' 0' 1);  	//CRC  }  
Magic Number,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following statement contains a magic number: sw.Read (buffer' 0' 2);  
Magic Number,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following statement contains a magic number: sw.Read (buffer' 0' 4);  
Magic Number,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following statement contains a magic number: switch (buffer [0]) {  case 0:  	os = " FAT filesystem (MS-DOS' OS/2' NT/Win32)";  	break;  case 1:  	os = "Amiga";  	break;  case 2:  	os = "VMS (or OpenVMS)";  	break;  case 3:  	os = "Unix";  	break;  case 4:  	os = "VM/CMS";  	break;  case 5:  	os = "Atari TOS";  	break;  case 6:  	os = "HPFS filesystem (OS/2' NT)";  	break;  case 7:  	os = "Macintosh";  	break;  case 8:  	os = "Z-System";  	break;  case 9:  	os = "CP/M";  	break;  case 10:  	os = "TOPS-20";  	break;  case 11:  	os = "NTFS filesystem (NT)";  	break;  case 12:  	os = "QDOS";  	break;  case 13:  	os = "Acorn RISCOS";  	break;  case 255:  	os = "unknown";  	break;  }  
Magic Number,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following statement contains a magic number: switch (buffer [0]) {  case 0:  	os = " FAT filesystem (MS-DOS' OS/2' NT/Win32)";  	break;  case 1:  	os = "Amiga";  	break;  case 2:  	os = "VMS (or OpenVMS)";  	break;  case 3:  	os = "Unix";  	break;  case 4:  	os = "VM/CMS";  	break;  case 5:  	os = "Atari TOS";  	break;  case 6:  	os = "HPFS filesystem (OS/2' NT)";  	break;  case 7:  	os = "Macintosh";  	break;  case 8:  	os = "Z-System";  	break;  case 9:  	os = "CP/M";  	break;  case 10:  	os = "TOPS-20";  	break;  case 11:  	os = "NTFS filesystem (NT)";  	break;  case 12:  	os = "QDOS";  	break;  case 13:  	os = "Acorn RISCOS";  	break;  case 255:  	os = "unknown";  	break;  }  
Magic Number,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following statement contains a magic number: switch (buffer [0]) {  case 0:  	os = " FAT filesystem (MS-DOS' OS/2' NT/Win32)";  	break;  case 1:  	os = "Amiga";  	break;  case 2:  	os = "VMS (or OpenVMS)";  	break;  case 3:  	os = "Unix";  	break;  case 4:  	os = "VM/CMS";  	break;  case 5:  	os = "Atari TOS";  	break;  case 6:  	os = "HPFS filesystem (OS/2' NT)";  	break;  case 7:  	os = "Macintosh";  	break;  case 8:  	os = "Z-System";  	break;  case 9:  	os = "CP/M";  	break;  case 10:  	os = "TOPS-20";  	break;  case 11:  	os = "NTFS filesystem (NT)";  	break;  case 12:  	os = "QDOS";  	break;  case 13:  	os = "Acorn RISCOS";  	break;  case 255:  	os = "unknown";  	break;  }  
Magic Number,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following statement contains a magic number: switch (buffer [0]) {  case 0:  	os = " FAT filesystem (MS-DOS' OS/2' NT/Win32)";  	break;  case 1:  	os = "Amiga";  	break;  case 2:  	os = "VMS (or OpenVMS)";  	break;  case 3:  	os = "Unix";  	break;  case 4:  	os = "VM/CMS";  	break;  case 5:  	os = "Atari TOS";  	break;  case 6:  	os = "HPFS filesystem (OS/2' NT)";  	break;  case 7:  	os = "Macintosh";  	break;  case 8:  	os = "Z-System";  	break;  case 9:  	os = "CP/M";  	break;  case 10:  	os = "TOPS-20";  	break;  case 11:  	os = "NTFS filesystem (NT)";  	break;  case 12:  	os = "QDOS";  	break;  case 13:  	os = "Acorn RISCOS";  	break;  case 255:  	os = "unknown";  	break;  }  
Magic Number,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following statement contains a magic number: switch (buffer [0]) {  case 0:  	os = " FAT filesystem (MS-DOS' OS/2' NT/Win32)";  	break;  case 1:  	os = "Amiga";  	break;  case 2:  	os = "VMS (or OpenVMS)";  	break;  case 3:  	os = "Unix";  	break;  case 4:  	os = "VM/CMS";  	break;  case 5:  	os = "Atari TOS";  	break;  case 6:  	os = "HPFS filesystem (OS/2' NT)";  	break;  case 7:  	os = "Macintosh";  	break;  case 8:  	os = "Z-System";  	break;  case 9:  	os = "CP/M";  	break;  case 10:  	os = "TOPS-20";  	break;  case 11:  	os = "NTFS filesystem (NT)";  	break;  case 12:  	os = "QDOS";  	break;  case 13:  	os = "Acorn RISCOS";  	break;  case 255:  	os = "unknown";  	break;  }  
Magic Number,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following statement contains a magic number: switch (buffer [0]) {  case 0:  	os = " FAT filesystem (MS-DOS' OS/2' NT/Win32)";  	break;  case 1:  	os = "Amiga";  	break;  case 2:  	os = "VMS (or OpenVMS)";  	break;  case 3:  	os = "Unix";  	break;  case 4:  	os = "VM/CMS";  	break;  case 5:  	os = "Atari TOS";  	break;  case 6:  	os = "HPFS filesystem (OS/2' NT)";  	break;  case 7:  	os = "Macintosh";  	break;  case 8:  	os = "Z-System";  	break;  case 9:  	os = "CP/M";  	break;  case 10:  	os = "TOPS-20";  	break;  case 11:  	os = "NTFS filesystem (NT)";  	break;  case 12:  	os = "QDOS";  	break;  case 13:  	os = "Acorn RISCOS";  	break;  case 255:  	os = "unknown";  	break;  }  
Magic Number,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following statement contains a magic number: switch (buffer [0]) {  case 0:  	os = " FAT filesystem (MS-DOS' OS/2' NT/Win32)";  	break;  case 1:  	os = "Amiga";  	break;  case 2:  	os = "VMS (or OpenVMS)";  	break;  case 3:  	os = "Unix";  	break;  case 4:  	os = "VM/CMS";  	break;  case 5:  	os = "Atari TOS";  	break;  case 6:  	os = "HPFS filesystem (OS/2' NT)";  	break;  case 7:  	os = "Macintosh";  	break;  case 8:  	os = "Z-System";  	break;  case 9:  	os = "CP/M";  	break;  case 10:  	os = "TOPS-20";  	break;  case 11:  	os = "NTFS filesystem (NT)";  	break;  case 12:  	os = "QDOS";  	break;  case 13:  	os = "Acorn RISCOS";  	break;  case 255:  	os = "unknown";  	break;  }  
Magic Number,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following statement contains a magic number: switch (buffer [0]) {  case 0:  	os = " FAT filesystem (MS-DOS' OS/2' NT/Win32)";  	break;  case 1:  	os = "Amiga";  	break;  case 2:  	os = "VMS (or OpenVMS)";  	break;  case 3:  	os = "Unix";  	break;  case 4:  	os = "VM/CMS";  	break;  case 5:  	os = "Atari TOS";  	break;  case 6:  	os = "HPFS filesystem (OS/2' NT)";  	break;  case 7:  	os = "Macintosh";  	break;  case 8:  	os = "Z-System";  	break;  case 9:  	os = "CP/M";  	break;  case 10:  	os = "TOPS-20";  	break;  case 11:  	os = "NTFS filesystem (NT)";  	break;  case 12:  	os = "QDOS";  	break;  case 13:  	os = "Acorn RISCOS";  	break;  case 255:  	os = "unknown";  	break;  }  
Magic Number,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following statement contains a magic number: switch (buffer [0]) {  case 0:  	os = " FAT filesystem (MS-DOS' OS/2' NT/Win32)";  	break;  case 1:  	os = "Amiga";  	break;  case 2:  	os = "VMS (or OpenVMS)";  	break;  case 3:  	os = "Unix";  	break;  case 4:  	os = "VM/CMS";  	break;  case 5:  	os = "Atari TOS";  	break;  case 6:  	os = "HPFS filesystem (OS/2' NT)";  	break;  case 7:  	os = "Macintosh";  	break;  case 8:  	os = "Z-System";  	break;  case 9:  	os = "CP/M";  	break;  case 10:  	os = "TOPS-20";  	break;  case 11:  	os = "NTFS filesystem (NT)";  	break;  case 12:  	os = "QDOS";  	break;  case 13:  	os = "Acorn RISCOS";  	break;  case 255:  	os = "unknown";  	break;  }  
Magic Number,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following statement contains a magic number: switch (buffer [0]) {  case 0:  	os = " FAT filesystem (MS-DOS' OS/2' NT/Win32)";  	break;  case 1:  	os = "Amiga";  	break;  case 2:  	os = "VMS (or OpenVMS)";  	break;  case 3:  	os = "Unix";  	break;  case 4:  	os = "VM/CMS";  	break;  case 5:  	os = "Atari TOS";  	break;  case 6:  	os = "HPFS filesystem (OS/2' NT)";  	break;  case 7:  	os = "Macintosh";  	break;  case 8:  	os = "Z-System";  	break;  case 9:  	os = "CP/M";  	break;  case 10:  	os = "TOPS-20";  	break;  case 11:  	os = "NTFS filesystem (NT)";  	break;  case 12:  	os = "QDOS";  	break;  case 13:  	os = "Acorn RISCOS";  	break;  case 255:  	os = "unknown";  	break;  }  
Magic Number,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following statement contains a magic number: switch (buffer [0]) {  case 0:  	os = " FAT filesystem (MS-DOS' OS/2' NT/Win32)";  	break;  case 1:  	os = "Amiga";  	break;  case 2:  	os = "VMS (or OpenVMS)";  	break;  case 3:  	os = "Unix";  	break;  case 4:  	os = "VM/CMS";  	break;  case 5:  	os = "Atari TOS";  	break;  case 6:  	os = "HPFS filesystem (OS/2' NT)";  	break;  case 7:  	os = "Macintosh";  	break;  case 8:  	os = "Z-System";  	break;  case 9:  	os = "CP/M";  	break;  case 10:  	os = "TOPS-20";  	break;  case 11:  	os = "NTFS filesystem (NT)";  	break;  case 12:  	os = "QDOS";  	break;  case 13:  	os = "Acorn RISCOS";  	break;  case 255:  	os = "unknown";  	break;  }  
Magic Number,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following statement contains a magic number: switch (buffer [0]) {  case 0:  	os = " FAT filesystem (MS-DOS' OS/2' NT/Win32)";  	break;  case 1:  	os = "Amiga";  	break;  case 2:  	os = "VMS (or OpenVMS)";  	break;  case 3:  	os = "Unix";  	break;  case 4:  	os = "VM/CMS";  	break;  case 5:  	os = "Atari TOS";  	break;  case 6:  	os = "HPFS filesystem (OS/2' NT)";  	break;  case 7:  	os = "Macintosh";  	break;  case 8:  	os = "Z-System";  	break;  case 9:  	os = "CP/M";  	break;  case 10:  	os = "TOPS-20";  	break;  case 11:  	os = "NTFS filesystem (NT)";  	break;  case 12:  	os = "QDOS";  	break;  case 13:  	os = "Acorn RISCOS";  	break;  case 255:  	os = "unknown";  	break;  }  
Magic Number,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following statement contains a magic number: switch (buffer [0]) {  case 0:  	os = " FAT filesystem (MS-DOS' OS/2' NT/Win32)";  	break;  case 1:  	os = "Amiga";  	break;  case 2:  	os = "VMS (or OpenVMS)";  	break;  case 3:  	os = "Unix";  	break;  case 4:  	os = "VM/CMS";  	break;  case 5:  	os = "Atari TOS";  	break;  case 6:  	os = "HPFS filesystem (OS/2' NT)";  	break;  case 7:  	os = "Macintosh";  	break;  case 8:  	os = "Z-System";  	break;  case 9:  	os = "CP/M";  	break;  case 10:  	os = "TOPS-20";  	break;  case 11:  	os = "NTFS filesystem (NT)";  	break;  case 12:  	os = "QDOS";  	break;  case 13:  	os = "Acorn RISCOS";  	break;  case 255:  	os = "unknown";  	break;  }  
Missing Default,ZipFiles,ZipHeader,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,ToString,The following switch statement is missing a default case: switch ((int)header_signature.Value) {  case 0x04034b50:  	s = "File : ";  	break;  case 0x02014b50:  	s = "Central directory";  	break;  case 0x06054b50:  	s = "End directory";  	break;  }  
Missing Default,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following switch statement is missing a default case: switch (buffer [0]) {  case 0x08:  	compression = "Deflate";  	break;  }  
Missing Default,ZipFiles,Gzip,C:\repos\mbatest_Binhed\ZipFiles\Zip.cs,Gzip,The following switch statement is missing a default case: switch (buffer [0]) {  case 0:  	os = " FAT filesystem (MS-DOS' OS/2' NT/Win32)";  	break;  case 1:  	os = "Amiga";  	break;  case 2:  	os = "VMS (or OpenVMS)";  	break;  case 3:  	os = "Unix";  	break;  case 4:  	os = "VM/CMS";  	break;  case 5:  	os = "Atari TOS";  	break;  case 6:  	os = "HPFS filesystem (OS/2' NT)";  	break;  case 7:  	os = "Macintosh";  	break;  case 8:  	os = "Z-System";  	break;  case 9:  	os = "CP/M";  	break;  case 10:  	os = "TOPS-20";  	break;  case 11:  	os = "NTFS filesystem (NT)";  	break;  case 12:  	os = "QDOS";  	break;  case 13:  	os = "Acorn RISCOS";  	break;  case 255:  	os = "unknown";  	break;  }  
