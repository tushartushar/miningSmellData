Implementation smell,Namespace,Class,File,Method,Description
Long Method,NiceGuySharp,FileHandler,C:\repos\imsosharp_LeagueSharp\NiceGuySharp\NiceGuySharp\FileHandler.cs,DoChecks,The method has 156 lines of code.
Long Method,NiceGuySharp,Program,C:\repos\imsosharp_LeagueSharp\NiceGuySharp\NiceGuySharp\Program.cs,Game_OnGameUpdate,The method has 112 lines of code.
Complex Method,NiceGuySharp,FileHandler,C:\repos\imsosharp_LeagueSharp\NiceGuySharp\NiceGuySharp\FileHandler.cs,DoChecks,Cyclomatic complexity of the method is 21
Complex Method,NiceGuySharp,Program,C:\repos\imsosharp_LeagueSharp\NiceGuySharp\NiceGuySharp\Program.cs,Game_OnGameUpdate,Cyclomatic complexity of the method is 23
Long Statement,NiceGuySharp,FileHandler,C:\repos\imsosharp_LeagueSharp\NiceGuySharp\NiceGuySharp\FileHandler.cs,DoChecks,The length of the statement  "                const string content = "oups\nwhat\nwhat the\nomg\nthat damage\nfuck\nfml\ndamn I suck\nsorry\nlag\nlagg\nlaggg\nomg\npls\nhelp me\nhelp me pls\nteam where we at?\nmeh"; " is 169.
Magic Number,NiceGuySharp,Program,C:\repos\imsosharp_LeagueSharp\NiceGuySharp\NiceGuySharp\Program.cs,TryToSay,The following statement contains a magic number: try              {                  if (Menu.Item("enabled").GetValue<bool>())                  {                      if (Environment.TickCount - LastSentMessage > MinTimeBeforeNewMessage)                      {                          if (message != null)                          {                              Utility.DelayAction.Add(message.Length * (new Random(Environment.TickCount).Next(100' 300))' () => Game.Say(message));                          }                      }                  }              }              catch (Exception e)              {                  Console.WriteLine(e);                  Game.OnGameUpdate -= Game_OnGameUpdate;              }
Magic Number,NiceGuySharp,Program,C:\repos\imsosharp_LeagueSharp\NiceGuySharp\NiceGuySharp\Program.cs,TryToSay,The following statement contains a magic number: try              {                  if (Menu.Item("enabled").GetValue<bool>())                  {                      if (Environment.TickCount - LastSentMessage > MinTimeBeforeNewMessage)                      {                          if (message != null)                          {                              Utility.DelayAction.Add(message.Length * (new Random(Environment.TickCount).Next(100' 300))' () => Game.Say(message));                          }                      }                  }              }              catch (Exception e)              {                  Console.WriteLine(e);                  Game.OnGameUpdate -= Game_OnGameUpdate;              }
