Implementation smell,Namespace,Class,File,Method,Description
Long Statement,soundcloud_sync,App,C:\repos\digital-steez_soundcloud-sync\soundcloud-sync\App.cs,Download,The length of the statement  "	/* Get User Content based on passed type using GetUserId to determine userid based on username */Collection = GetUserContent (GetUserID (username)' type); " is 154.
Long Statement,soundcloud_sync,Downloader,C:\repos\digital-steez_soundcloud-sync\soundcloud-sync\Downloader.cs,DownloadCollection,The length of the statement  "	/* For each track as key value pair in the passed collection */Collection.ToList<KeyValuePair<Guid' Tuple<SCAPI.DownloadType' String' String>>> ().ForEach (t =>  { " is 163.
Long Statement,soundcloud_sync,Downloader,C:\repos\digital-steez_soundcloud-sync\soundcloud-sync\Downloader.cs,DownloadCollection,The length of the statement  "				/* Async grab the data as a byte array. We need our client ID here again... */fileContents = DownloadItem (new Uri (t.Value.Item3 + "?client_id=65466a9abd127b6123e9415731d67e3d")' t.Value.Item2).Result; " is 202.
Long Statement,soundcloud_sync,SCSync,C:\repos\digital-steez_soundcloud-sync\soundcloud-sync\Program.cs,MainAppBehavior,The length of the statement  "	String HelpContent = "Welcome to Soundcloud Sync! \nPlease use the following syntax: \nsoundcloud-sync.exe username type (favorites or tracks) path (optional)"; " is 160.
Long Statement,soundcloud_sync,SCAPI,C:\repos\digital-steez_soundcloud-sync\soundcloud-sync\SCAPI.cs,GetUserID,The length of the statement  "	/* Load the xml from the web service once it has loaded */UserResolution user = JsonConvert.DeserializeObject<UserResolution> (api.Result); " is 139.
Long Statement,soundcloud_sync,SCAPI,C:\repos\digital-steez_soundcloud-sync\soundcloud-sync\SCAPI.cs,FetchDirectURL,The length of the statement  "		return JsonConvert.DeserializeObject<mp3direct> (wc.DownloadString (@"https://api.sndcdn.com/i1/tracks/" + id + "/streams?client_id=65466a9abd127b6123e9415731d67e3d")).http_mp3_128_url; " is 185.
Long Statement,soundcloud_sync,SCAPI,C:\repos\digital-steez_soundcloud-sync\soundcloud-sync\SCAPI.cs,GetUserContent,The length of the statement  "	/* Iterate through each entry and store URL and ID to make list */Dictionary<Guid' Tuple<DownloadType' String' String>> songs = new Dictionary<Guid' Tuple<DownloadType' String' String>> (); " is 189.
Long Statement,soundcloud_sync,SCAPI,C:\repos\digital-steez_soundcloud-sync\soundcloud-sync\SCAPI.cs,GetUserContent,The length of the statement  "			songs.Add (Guid.NewGuid ()' new Tuple<DownloadType' String' String> (DownloadType.Native' t.id.ToString ()' t.download_url.ToString ())); " is 137.
Magic Number,soundcloud_sync,Downloader,C:\repos\digital-steez_soundcloud-sync\soundcloud-sync\Downloader.cs,DownloadItem,The following statement contains a magic number: using (HttpClient client = new HttpClient ()) {  	Console.WriteLine ("Downloading {0}..."' SCID);  	bool _success = false;  	int failCounter = 0;  	while (_success == false && failCounter < 10) {  		try {  			HttpResponseMessage actualURL = await client.GetAsync (uri);  			var result = await client.GetByteArrayAsync (uri);  			_success = true;  			return result;  		}  		catch {  			failCounter++;  			Console.WriteLine ("Download failed' trying again...");  			Thread.Sleep (1000);  			continue;  		}  	}  	return null;  }  
Magic Number,soundcloud_sync,Downloader,C:\repos\digital-steez_soundcloud-sync\soundcloud-sync\Downloader.cs,DownloadItem,The following statement contains a magic number: using (HttpClient client = new HttpClient ()) {  	Console.WriteLine ("Downloading {0}..."' SCID);  	bool _success = false;  	int failCounter = 0;  	while (_success == false && failCounter < 10) {  		try {  			HttpResponseMessage actualURL = await client.GetAsync (uri);  			var result = await client.GetByteArrayAsync (uri);  			_success = true;  			return result;  		}  		catch {  			failCounter++;  			Console.WriteLine ("Download failed' trying again...");  			Thread.Sleep (1000);  			continue;  		}  	}  	return null;  }  
Magic Number,soundcloud_sync,Downloader,C:\repos\digital-steez_soundcloud-sync\soundcloud-sync\Downloader.cs,DownloadItem,The following statement contains a magic number: while (_success == false && failCounter < 10) {  	try {  		HttpResponseMessage actualURL = await client.GetAsync (uri);  		var result = await client.GetByteArrayAsync (uri);  		_success = true;  		return result;  	}  	catch {  		failCounter++;  		Console.WriteLine ("Download failed' trying again...");  		Thread.Sleep (1000);  		continue;  	}  }  
Magic Number,soundcloud_sync,Downloader,C:\repos\digital-steez_soundcloud-sync\soundcloud-sync\Downloader.cs,DownloadItem,The following statement contains a magic number: while (_success == false && failCounter < 10) {  	try {  		HttpResponseMessage actualURL = await client.GetAsync (uri);  		var result = await client.GetByteArrayAsync (uri);  		_success = true;  		return result;  	}  	catch {  		failCounter++;  		Console.WriteLine ("Download failed' trying again...");  		Thread.Sleep (1000);  		continue;  	}  }  
Magic Number,soundcloud_sync,Downloader,C:\repos\digital-steez_soundcloud-sync\soundcloud-sync\Downloader.cs,DownloadItem,The following statement contains a magic number: try {  	HttpResponseMessage actualURL = await client.GetAsync (uri);  	var result = await client.GetByteArrayAsync (uri);  	_success = true;  	return result;  }  catch {  	failCounter++;  	Console.WriteLine ("Download failed' trying again...");  	Thread.Sleep (1000);  	continue;  }  
Magic Number,soundcloud_sync,Downloader,C:\repos\digital-steez_soundcloud-sync\soundcloud-sync\Downloader.cs,DownloadItem,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,soundcloud_sync,SCSync,C:\repos\digital-steez_soundcloud-sync\soundcloud-sync\Program.cs,MainAppBehavior,The following statement contains a magic number: if (args.Length < 2) {  	System.Console.WriteLine (HelpContent);  }  else {  	/* Instantiate the app and download the expected content */App app = new App ();  	/* Capture our command line arguments */String username = args [0];  	String type = args [1];  	String path = null;  	/* If there is no third argument' set path to null so we don't throw a nullsetexception */if (2 < args.Length) {  		path = args [2];  	}  	/* Download the requested content to the requested path! */app.Download (username' type' @path);  	//app.Download("digitalsteez"' "favorites"' @"C:\Test");  }  
Magic Number,soundcloud_sync,SCSync,C:\repos\digital-steez_soundcloud-sync\soundcloud-sync\Program.cs,MainAppBehavior,The following statement contains a magic number: if (args.Length < 2) {  	System.Console.WriteLine (HelpContent);  }  else {  	/* Instantiate the app and download the expected content */App app = new App ();  	/* Capture our command line arguments */String username = args [0];  	String type = args [1];  	String path = null;  	/* If there is no third argument' set path to null so we don't throw a nullsetexception */if (2 < args.Length) {  		path = args [2];  	}  	/* Download the requested content to the requested path! */app.Download (username' type' @path);  	//app.Download("digitalsteez"' "favorites"' @"C:\Test");  }  
Magic Number,soundcloud_sync,SCSync,C:\repos\digital-steez_soundcloud-sync\soundcloud-sync\Program.cs,MainAppBehavior,The following statement contains a magic number: if (args.Length < 2) {  	System.Console.WriteLine (HelpContent);  }  else {  	/* Instantiate the app and download the expected content */App app = new App ();  	/* Capture our command line arguments */String username = args [0];  	String type = args [1];  	String path = null;  	/* If there is no third argument' set path to null so we don't throw a nullsetexception */if (2 < args.Length) {  		path = args [2];  	}  	/* Download the requested content to the requested path! */app.Download (username' type' @path);  	//app.Download("digitalsteez"' "favorites"' @"C:\Test");  }  
Magic Number,soundcloud_sync,SCSync,C:\repos\digital-steez_soundcloud-sync\soundcloud-sync\Program.cs,MainAppBehavior,The following statement contains a magic number: if (2 < args.Length) {  	path = args [2];  }  
Magic Number,soundcloud_sync,SCSync,C:\repos\digital-steez_soundcloud-sync\soundcloud-sync\Program.cs,MainAppBehavior,The following statement contains a magic number: if (2 < args.Length) {  	path = args [2];  }  
Magic Number,soundcloud_sync,SCSync,C:\repos\digital-steez_soundcloud-sync\soundcloud-sync\Program.cs,MainAppBehavior,The following statement contains a magic number: path = args [2];  
Missing Default,soundcloud_sync,Downloader,C:\repos\digital-steez_soundcloud-sync\soundcloud-sync\Downloader.cs,DownloadCollection,The following switch statement is missing a default case: switch (File.Exists (file)) {  case true:  	Console.WriteLine ("File already present' skipping.");  	break;  case false:  	switch (t.Value.Item1) {  	case SCAPI.DownloadType.Custom:  		fileContents = DownloadItem (new Uri (t.Value.Item3)' t.Value.Item2).Result;  		File.WriteAllBytes (file' fileContents);  		break;  	case SCAPI.DownloadType.Native:  		/* Async grab the data as a byte array. We need our client ID here again... */fileContents = DownloadItem (new Uri (t.Value.Item3 + "?client_id=65466a9abd127b6123e9415731d67e3d")' t.Value.Item2).Result;  		/* Write all the bytes to a file that is the root path + the id as file name */File.WriteAllBytes (file' fileContents);  		break;  	}  	break;  }  
Missing Default,soundcloud_sync,Downloader,C:\repos\digital-steez_soundcloud-sync\soundcloud-sync\Downloader.cs,DownloadCollection,The following switch statement is missing a default case: switch (t.Value.Item1) {  case SCAPI.DownloadType.Custom:  	fileContents = DownloadItem (new Uri (t.Value.Item3)' t.Value.Item2).Result;  	File.WriteAllBytes (file' fileContents);  	break;  case SCAPI.DownloadType.Native:  	/* Async grab the data as a byte array. We need our client ID here again... */fileContents = DownloadItem (new Uri (t.Value.Item3 + "?client_id=65466a9abd127b6123e9415731d67e3d")' t.Value.Item2).Result;  	/* Write all the bytes to a file that is the root path + the id as file name */File.WriteAllBytes (file' fileContents);  	break;  }  
Missing Default,soundcloud_sync,SCAPI,C:\repos\digital-steez_soundcloud-sync\soundcloud-sync\SCAPI.cs,GetUserContent,The following switch statement is missing a default case: switch (string.IsNullOrWhiteSpace (url)) {  case true:  	Console.WriteLine ("Error with ID: {0} -- playlist or protected file?"' t.id.ToString ());  	break;  case false:  	Console.WriteLine ("ID: {0} -- Ready!"' t.id.ToString ());  	songs.Add (Guid.NewGuid ()' new Tuple<DownloadType' String' String> (DownloadType.Custom' t.id.ToString ()' url));  	break;  }  
