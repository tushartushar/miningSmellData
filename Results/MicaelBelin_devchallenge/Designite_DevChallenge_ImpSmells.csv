Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DevChallenge.Connection,Tcp,C:\repos\MicaelBelin_devchallenge\DevChallenge\Connection\Tcp.cs,ReadXmlItems,Cyclomatic complexity of the method is 26
Long Parameter List,DevChallenge,Client,C:\repos\MicaelBelin_devchallenge\DevChallenge\Client.cs,Login,The method has 5 parameters.
Long Statement,DevChallenge,Client,C:\repos\MicaelBelin_devchallenge\DevChallenge\Client.cs,RegisterUser,The length of the statement  "	var ret = c.SendRequest (new XElement ("user.register"' new XElement ("login"' username)' new XElement ("password"' password)' new XElement ("fullname"' fullname)' new XElement ("email"' email))); " is 196.
Long Statement,DevChallenge,Client,C:\repos\MicaelBelin_devchallenge\DevChallenge\Client.cs,Login,The length of the statement  "	var response = c.SendRequest (new XElement ("devchallenge.login"' new XElement ("login"' username)' new XElement ("password"' password)' new XElement ("agentname"' agentname)' new XElement ("agentrevision"' agentrevision))); " is 224.
Empty Catch Block,DevChallenge.Connection,Abstract,C:\repos\MicaelBelin_devchallenge\DevChallenge\Connection\Abstract.cs,DispatchMessage,The method has an empty catch block.
Missing Default,DevChallenge.Connection,Tcp,C:\repos\MicaelBelin_devchallenge\DevChallenge\Connection\Tcp.cs,ReadXmlItems,The following switch statement is missing a default case: switch (value) {  case '<':  	comment = false;  	endtag = false;  	if (level == 0)  		ret = "<";  	//remove unnecessary characters  	break;  case '?':  	if (prevvalue == '<')  		comment = true;  	break;  case '/':  	if (prevvalue == '<')  		endtag = true;  	break;  case '>':  	if (prevvalue == '/')//empty tag  	 {  		if (level == 0)  			yield return XElement.Parse (ret);  	}  	else if (!comment) {  		if (endtag)  			level--;  		else  			level++;  		if (level == 0) {  			yield return XElement.Parse (ret);  		}  	}  	break;  }  
