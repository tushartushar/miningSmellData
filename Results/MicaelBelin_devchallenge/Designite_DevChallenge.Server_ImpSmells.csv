Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,DevChallenge.Server.Implementation,UserManager,C:\repos\MicaelBelin_devchallenge\DevChallenge.Server\Implementation\UserManager.cs,Create,The method has 5 parameters.
Long Statement,DevChallenge.Server.Implementation,ScenarioManager,C:\repos\MicaelBelin_devchallenge\DevChallenge.Server\Implementation\ScenarioManager.cs,LoadFromDb,The length of the statement  "	//                    compilerParams.ReferencedAssemblies.Add(System.Reflection.Assembly.GetAssembly(typeof(Scenario)).Location); " is 129.
Long Statement,DevChallenge.Server.Implementation,ScenarioManager,C:\repos\MicaelBelin_devchallenge\DevChallenge.Server\Implementation\ScenarioManager.cs,LoadFromDb,The length of the statement  "	//                    compilerParams.ReferencedAssemblies.Add(System.Reflection.Assembly.GetAssembly(typeof(ScenarioFactory)).Location); " is 136.
Long Statement,DevChallenge.Server.Implementation,ScenarioManager,C:\repos\MicaelBelin_devchallenge\DevChallenge.Server\Implementation\ScenarioManager.cs,LoadFromDb,The length of the statement  "	//                    compilerParams.ReferencedAssemblies.Add(System.Reflection.Assembly.GetAssembly(typeof(IConnection)).Location); " is 132.
Long Statement,DevChallenge.Server.Implementation,ScenarioManager,C:\repos\MicaelBelin_devchallenge\DevChallenge.Server\Implementation\ScenarioManager.cs,LoadFromDb,The length of the statement  "	//                    CompilerResults results = provider.CompileAssemblyFromSource(compilerParams' headerdata + s.Code); " is 120.
Long Statement,DevChallenge.Server.Implementation,ScenarioManager,C:\repos\MicaelBelin_devchallenge\DevChallenge.Server\Implementation\ScenarioManager.cs,LoadFromDb,The length of the statement  "	//                        foreach (var classtype in (from x in assembly.GetTypes() where x.IsSubclassOf(typeof(IScenario)) select x)) " is 133.
Long Statement,DevChallenge.Server.Implementation,ScenarioManager,C:\repos\MicaelBelin_devchallenge\DevChallenge.Server\Implementation\ScenarioManager.cs,AddAgent,The length of the statement  "	eventlog.Add (EventLogType.Message' String.Format ("Owner: {0} ({1} {2})"' agent.Owner.UserName' agent.Owner.FullName' agent.Owner.Email)); " is 139.
Long Statement,DevChallenge.Server.Implementation,ScenarioManager,C:\repos\MicaelBelin_devchallenge\DevChallenge.Server\Implementation\ScenarioManager.cs,AddAgent,The length of the statement  "	var response = agent.Connection.SendRequest (new XElement ("scenario.select"' new XElement ("scenarios"' Scenarios.Select (x => new XElement ("scenario"' new XAttribute ("name"' x.Name)))))); " is 191.
Long Statement,DevChallenge.Server.Implementation,ScenarioManager,C:\repos\MicaelBelin_devchallenge\DevChallenge.Server\Implementation\ScenarioManager.cs,AddAgent,The length of the statement  "		eventlog.Add (EventLogType.Message' string.Format ("Agent \"{0}\" selected invalid scenario: \"{1}\""' agent.Name' scenarioname)); " is 130.
Long Statement,DevChallenge.Server.Implementation,ScenarioManager,C:\repos\MicaelBelin_devchallenge\DevChallenge.Server\Implementation\ScenarioManager.cs,AddAgent,The length of the statement  "		eventlog.Add (EventLogType.Message' string.Format ("Agent \"{0}\" selected scenario: \"{1}\""' agent.Name' scenarioname)); " is 122.
Long Statement,DevChallenge.Server.Implementation,User,C:\repos\MicaelBelin_devchallenge\DevChallenge.Server\Implementation\User.cs,ChangePassword,The length of the statement  "	user.Salt = Convert.ToBase64String (crypto.ComputeHash (System.Text.Encoding.UTF8.GetBytes (rand.Next ().ToString ()))); " is 120.
Long Statement,DevChallenge.Server.Implementation,User,C:\repos\MicaelBelin_devchallenge\DevChallenge.Server\Implementation\User.cs,ChangePassword,The length of the statement  "	user.PwDigest = Convert.ToBase64String (crypto.ComputeHash (System.Text.Encoding.UTF8.GetBytes (user.Salt + pw ?? ""))); " is 120.
Long Statement,DevChallenge.Server,Program,C:\repos\MicaelBelin_devchallenge\DevChallenge.Server\Program.cs,LoadInternalChallenges,The length of the statement  "		var typestoload = assembly.GetTypes ().Where (x => x.GetInterfaces ().Contains (typeof(DevChallenge.Server.Model.IScenarioFactory))); " is 133.
Long Statement,DevChallenge.Server,Program,C:\repos\MicaelBelin_devchallenge\DevChallenge.Server\Program.cs,LoadChallenges,The length of the statement  "		eventlog.Add (Model.EventLogType.Error' String.Format ("Directory \"{0}\" was not found. Skipping load."' path.FullName)); " is 122.
Long Statement,DevChallenge.Server,Program,C:\repos\MicaelBelin_devchallenge\DevChallenge.Server\Program.cs,LoadChallenges,The length of the statement  "		var typestoload = assembly.GetTypes ().Where (x => x.GetInterfaces ().Contains (typeof(DevChallenge.Server.Model.IScenarioFactory))); " is 133.
Empty Catch Block,DevChallenge.Server.Implementation,TcpServer,C:\repos\MicaelBelin_devchallenge\DevChallenge.Server\Implementation\TcpServer.cs,HandleClient,The method has an empty catch block.
Empty Catch Block,DevChallenge.Server.Implementation,TcpServer,C:\repos\MicaelBelin_devchallenge\DevChallenge.Server\Implementation\TcpServer.cs,HandleClient,The method has an empty catch block.
