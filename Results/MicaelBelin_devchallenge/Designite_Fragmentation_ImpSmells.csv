Implementation smell,Namespace,Class,File,Method,Description
Magic Number,DevChallenge.Server.Scenarios.Fragmentation,ClientFramework,C:\repos\MicaelBelin_devchallenge\Challenges\Fragmentation\ClientFramework.cs,DrawStatus,The following statement contains a magic number: using (var g = Graphics.FromImage (bm)) {  	g.FillRectangle (Brushes.White' new Rectangle (0' 0' bm.Width' bm.Height));  	double scale = (double)Capacity / (double)bm.Width;  	for (int x = 0; x < bm.Width; ++x) {  		int startpos = (int)(scale * (double)x);  		int endpos = (int)(scale * (double)(x + 1));  		int fillratio = Enumerable.Range (startpos' endpos - startpos).Count (index => fillstatus [index]);  		double alpha = (double)fillratio / (double)(endpos - startpos);  		g.DrawLine (new Pen (Color.FromArgb ((int)(alpha * 255.0)' 0' 200' 0)' 1)' x' 0' x' bm.Height);  	}  	g.DrawRectangle (Pens.Black' new Rectangle (0' 0' bm.Width - 1' bm.Height - 1));  }  
Magic Number,DevChallenge.Server.Scenarios.Fragmentation,ClientFramework,C:\repos\MicaelBelin_devchallenge\Challenges\Fragmentation\ClientFramework.cs,DrawStatus,The following statement contains a magic number: using (var g = Graphics.FromImage (bm)) {  	g.FillRectangle (Brushes.White' new Rectangle (0' 0' bm.Width' bm.Height));  	double scale = (double)Capacity / (double)bm.Width;  	for (int x = 0; x < bm.Width; ++x) {  		int startpos = (int)(scale * (double)x);  		int endpos = (int)(scale * (double)(x + 1));  		int fillratio = Enumerable.Range (startpos' endpos - startpos).Count (index => fillstatus [index]);  		double alpha = (double)fillratio / (double)(endpos - startpos);  		g.DrawLine (new Pen (Color.FromArgb ((int)(alpha * 255.0)' 0' 200' 0)' 1)' x' 0' x' bm.Height);  	}  	g.DrawRectangle (Pens.Black' new Rectangle (0' 0' bm.Width - 1' bm.Height - 1));  }  
Magic Number,DevChallenge.Server.Scenarios.Fragmentation,ClientFramework,C:\repos\MicaelBelin_devchallenge\Challenges\Fragmentation\ClientFramework.cs,DrawStatus,The following statement contains a magic number: for (int x = 0; x < bm.Width; ++x) {  	int startpos = (int)(scale * (double)x);  	int endpos = (int)(scale * (double)(x + 1));  	int fillratio = Enumerable.Range (startpos' endpos - startpos).Count (index => fillstatus [index]);  	double alpha = (double)fillratio / (double)(endpos - startpos);  	g.DrawLine (new Pen (Color.FromArgb ((int)(alpha * 255.0)' 0' 200' 0)' 1)' x' 0' x' bm.Height);  }  
Magic Number,DevChallenge.Server.Scenarios.Fragmentation,ClientFramework,C:\repos\MicaelBelin_devchallenge\Challenges\Fragmentation\ClientFramework.cs,DrawStatus,The following statement contains a magic number: for (int x = 0; x < bm.Width; ++x) {  	int startpos = (int)(scale * (double)x);  	int endpos = (int)(scale * (double)(x + 1));  	int fillratio = Enumerable.Range (startpos' endpos - startpos).Count (index => fillstatus [index]);  	double alpha = (double)fillratio / (double)(endpos - startpos);  	g.DrawLine (new Pen (Color.FromArgb ((int)(alpha * 255.0)' 0' 200' 0)' 1)' x' 0' x' bm.Height);  }  
Magic Number,DevChallenge.Server.Scenarios.Fragmentation,ClientFramework,C:\repos\MicaelBelin_devchallenge\Challenges\Fragmentation\ClientFramework.cs,DrawStatus,The following statement contains a magic number: g.DrawLine (new Pen (Color.FromArgb ((int)(alpha * 255.0)' 0' 200' 0)' 1)' x' 0' x' bm.Height);  
Magic Number,DevChallenge.Server.Scenarios.Fragmentation,ClientFramework,C:\repos\MicaelBelin_devchallenge\Challenges\Fragmentation\ClientFramework.cs,DrawStatus,The following statement contains a magic number: g.DrawLine (new Pen (Color.FromArgb ((int)(alpha * 255.0)' 0' 200' 0)' 1)' x' 0' x' bm.Height);  
