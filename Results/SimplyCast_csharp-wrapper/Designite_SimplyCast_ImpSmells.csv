Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SimplyCast.ContactManager.Responses,MetadataFieldEntity,C:\repos\SimplyCast_csharp-wrapper\ContactManager\Responses\MetadataFieldEntity.cs,ReadXml,Cyclomatic complexity of the method is 38
Complex Method,SimplyCast.ContactManager.Responses,MetadataColumnEntity,C:\repos\SimplyCast_csharp-wrapper\ContactManager\Responses\MetadataColumnEntity.cs,ReadXml,Cyclomatic complexity of the method is 31
Complex Method,SimplyCast,SimplyCastAPIConnector,C:\repos\SimplyCast_csharp-wrapper\SimplyCastAPIConnector.cs,Call,Cyclomatic complexity of the method is 11
Complex Method,SimplyCast.ContactManager,ContactManagerAPI,C:\repos\SimplyCast_csharp-wrapper\ContactManager\ContactManager.cs,UpsertContact,Cyclomatic complexity of the method is 8
Complex Method,SimplyCast.ContactManager,ContactManagerAPI,C:\repos\SimplyCast_csharp-wrapper\ContactManager\ContactManager.cs,CreateMetadataColumn,Cyclomatic complexity of the method is 15
Complex Method,SimplyCast.ContactManager,ContactManagerAPI,C:\repos\SimplyCast_csharp-wrapper\ContactManager\ContactManager.cs,SuppressionTypeToString,Cyclomatic complexity of the method is 12
Long Parameter List,SimplyCast.ContactManager,ContactManagerAPI,C:\repos\SimplyCast_csharp-wrapper\ContactManager\ContactManager.cs,GetContacts,The method has 5 parameters.
Long Statement,SimplyCast,Examples,C:\repos\SimplyCast_csharp-wrapper\Examples.cs,ContactManagementExample,The length of the statement  "	ContactManager.Responses.ContactCollection contacts = api.ContactManager.UpsertContact (fields' columns.GetByName ("email").ID); " is 128.
Long Statement,SimplyCast,Examples,C:\repos\SimplyCast_csharp-wrapper\Examples.cs,ContactManagementExample,The length of the statement  "		Console.WriteLine ("Updated contact " + c.ID + " (email address: " + c.GetFieldsByName ("email") [0].Value + ") to have name '" + c.GetFieldsByName ("name") [0].Value + "'."); " is 175.
Long Statement,SimplyCast,Examples,C:\repos\SimplyCast_csharp-wrapper\Examples.cs,ContactManagementExample,The length of the statement  "	string query = "`" + columns.GetByName ("email").ID + "` = \"test@example.com\" AND `" + columns.GetByName ("name").ID + "` = \"Updated Test Contact\""; " is 152.
Long Statement,SimplyCast,Examples,C:\repos\SimplyCast_csharp-wrapper\Examples.cs,ContactManagementExample,The length of the statement  "	ContactManager.Responses.MetadataFieldEntity metadataField = api.ContactManager.GetContactMetadataFieldByName (contact.ID' "Tags").MetadataFields [0]; " is 150.
Long Statement,SimplyCast,Examples,C:\repos\SimplyCast_csharp-wrapper\Examples.cs,ContactBatchExample,The length of the statement  "	Console.WriteLine ("Created inital contact (ID: " + contact.ID + ") with name '" + contact.GetFieldsByName ("name") [0].Value + "'."); " is 134.
Long Statement,SimplyCast,Examples,C:\repos\SimplyCast_csharp-wrapper\Examples.cs,ContactBatchExample,The length of the statement  "	ContactManager.Responses.ContactBatchResponse response = api.ContactManager.BatchCreateContacts (contacts.ToArray ()' emailColumnID); " is 133.
Long Statement,SimplyCast,Examples,C:\repos\SimplyCast_csharp-wrapper\Examples.cs,ContactBatchExample,The length of the statement  "		Console.WriteLine ("[" + System.DateTime.Now.ToLongTimeString () + "] Current status is: " + response.Status.ToString ()); " is 122.
Long Statement,SimplyCast,Examples,C:\repos\SimplyCast_csharp-wrapper\Examples.cs,ContactBatchExample,The length of the statement  "	while (response.Status != ContactManager.Responses.ContactBatchResponse.BatchStatus.Complete && response.Status != ContactManager.Responses.ContactBatchResponse.BatchStatus.Error); " is 180.
Long Statement,SimplyCast,Examples,C:\repos\SimplyCast_csharp-wrapper\Examples.cs,ContactBatchExample,The length of the statement  "		Console.WriteLine ("Created / updated contact " + result.ContactCollection.Contacts [0].ID + " (" + result.ContactCollection.Contacts [0].GetFieldsByName ("email") [0].Value + " / " + result.ContactCollection.Contacts [0].GetFieldsByName ("name") [0].Value + ")."); " is 265.
Long Statement,SimplyCast,Examples,C:\repos\SimplyCast_csharp-wrapper\Examples.cs,MetadataColumnManagementExample,The length of the statement  "		api.ContactManager.CreateMetadataColumn ("Test Single Column"' ContactManager.ContactManagerAPI.MetadataColumnType.SingleNumber); " is 129.
Long Statement,SimplyCast,Examples,C:\repos\SimplyCast_csharp-wrapper\Examples.cs,MetadataColumnManagementExample,The length of the statement  "		api.ContactManager.CreateMetadataColumn ("Test Multi Column"' ContactManager.ContactManagerAPI.MetadataColumnType.MultiString); " is 127.
Long Statement,SimplyCast,Examples,C:\repos\SimplyCast_csharp-wrapper\Examples.cs,MetadataColumnManagementExample,The length of the statement  "		api.ContactManager.CreateMetadataColumn ("Test Sum Column"' ContactManager.ContactManagerAPI.MetadataColumnType.SumNumber); " is 123.
Long Statement,SimplyCast,Examples,C:\repos\SimplyCast_csharp-wrapper\Examples.cs,MetadataColumnManagementExample,The length of the statement  "	ContactManager.Responses.MetadataFieldEntity singleColumn = api.ContactManager.UpdateContactMetadataField (contact.ID' metadataColumns.GetByName ("Test Single Column").ID' new string[] { " is 186.
Long Statement,SimplyCast,Examples,C:\repos\SimplyCast_csharp-wrapper\Examples.cs,MetadataColumnManagementExample,The length of the statement  "	ContactManager.Responses.MetadataFieldEntity multiColumn = api.ContactManager.UpdateContactMetadataField (contact.ID' metadataColumns.GetByName ("Test Multi Column").ID' new string[] { " is 184.
Long Statement,SimplyCast,Examples,C:\repos\SimplyCast_csharp-wrapper\Examples.cs,MetadataColumnManagementExample,The length of the statement  "		sumColumn = api.ContactManager.UpdateContactMetadataField (contact.ID' metadataColumns.GetByName ("Test Sum Column").ID' new string[] { " is 135.
Long Statement,SimplyCast,Examples,C:\repos\SimplyCast_csharp-wrapper\Examples.cs,SimplyCast360Example,The length of the statement  "	SimplyCast360.Responses.ContactCollection contacts = api.SimplyCast360.GetOutboundContacts (projectID' outboundConnectionID); " is 125.
Long Statement,SimplyCast,SimplyCastAPIConnector,C:\repos\SimplyCast_csharp-wrapper\SimplyCastAPIConnector.cs,Call,The length of the statement  "		requestBodyHash = System.Convert.ToBase64String (Encoding.UTF8.GetBytes (SimplyCastAPIConnector.BytesToHex (System.Security.Cryptography.MD5.Create ().ComputeHash (Encoding.UTF8.GetBytes (requestBodyString.Trim ()))))); " is 219.
Long Statement,SimplyCast,SimplyCastAPIConnector,C:\repos\SimplyCast_csharp-wrapper\SimplyCastAPIConnector.cs,_GenerateAuthHeader,The length of the statement  "	string authStr = this.publicKey + ':' + SimplyCastAPIConnector.BytesToHex (hmac.ComputeHash (Encoding.UTF8.GetBytes (signature))); " is 130.
Long Statement,SimplyCast.ContactManager,ContactManagerAPI,C:\repos\SimplyCast_csharp-wrapper\ContactManager\ContactManager.cs,GetContactsFromList,The length of the statement  "	return this.connection.Call<Responses.ContactCollection> (SimplyCastAPI.GET' "contactmanager/lists/" + listID + "/contacts"' queryParameters' null); " is 148.
Long Statement,SimplyCast.ContactManager,ContactManagerAPI,C:\repos\SimplyCast_csharp-wrapper\ContactManager\ContactManager.cs,AddContactsToList,The length of the statement  "	return this.connection.Call<Responses.ContactCollection> ("POST"' "contactmanager/lists/" + listID + "/contacts"' queryParams' contacts); " is 137.
Long Statement,SimplyCast.ContactManager,ContactManagerAPI,C:\repos\SimplyCast_csharp-wrapper\ContactManager\ContactManager.cs,UpsertContact,The length of the statement  "		System.Xml.Serialization.XmlSerializer serializer = new System.Xml.Serialization.XmlSerializer (typeof(Responses.ContactCollection)); " is 133.
Long Statement,SimplyCast.ContactManager,ContactManagerAPI,C:\repos\SimplyCast_csharp-wrapper\ContactManager\ContactManager.cs,GetContactMetadata,The length of the statement  "	return this.connection.Call<Responses.MetadataFieldCollection> ("GET"' "contactmanager/contacts/" + contactID + "/metadata"' queryParameters' null); " is 148.
Long Statement,SimplyCast.ContactManager,ContactManagerAPI,C:\repos\SimplyCast_csharp-wrapper\ContactManager\ContactManager.cs,GetContactMetadataField,The length of the statement  "	return this.connection.Call<Responses.MetadataFieldEntity> ("GET"' "contactmanager/contacts/" + contactID + "/metadata/" + metadataFieldID' null' null); " is 152.
Long Statement,SimplyCast.ContactManager,ContactManagerAPI,C:\repos\SimplyCast_csharp-wrapper\ContactManager\ContactManager.cs,GetContactMetadataFieldByName,The length of the statement  "	return this.connection.Call<Responses.MetadataFieldCollection> ("GET"' "contactmanager/contacts/" + contactID + "/metadata"' queryParameters' null); " is 148.
Long Statement,SimplyCast.ContactManager,ContactManagerAPI,C:\repos\SimplyCast_csharp-wrapper\ContactManager\ContactManager.cs,UpdateContactMetadataField,The length of the statement  "	return this.connection.Call<Responses.MetadataFieldEntity> ("POST"' "contactmanager/contacts/" + contactID + "/metadata/" + metadataFieldID' queryParameters' body); " is 164.
Long Statement,SimplyCast.ContactManager,ContactManagerAPI,C:\repos\SimplyCast_csharp-wrapper\ContactManager\ContactManager.cs,BatchCreateContacts,The length of the statement  "	return this.connection.Call<Responses.ContactBatchResponse> ("POST"' "contactmanager/contacts/batch"' queryParameters' batch); " is 126.
Long Statement,SimplyCast.ContactManager,ContactManagerAPI,C:\repos\SimplyCast_csharp-wrapper\ContactManager\ContactManager.cs,GetBatchStatus,The length of the statement  "	return this.connection.Call<Responses.ContactBatchResponse> ("GET"' "contactmanager/contacts/batch/" + batchID.ToString ()' null' null); " is 136.
Long Statement,SimplyCast.ContactManager,ContactManagerAPI,C:\repos\SimplyCast_csharp-wrapper\ContactManager\ContactManager.cs,GetBatchResult,The length of the statement  "	return this.connection.Call<Responses.ContactBatchResultCollection> ("GET"' "contactmanager/contacts/batch/" + batchID.ToString () + "/result"' null' null); " is 156.
Long Statement,SimplyCast.ContactManager,ContactManagerAPI,C:\repos\SimplyCast_csharp-wrapper\ContactManager\ContactManager.cs,GetMetadataColumns,The length of the statement  "	return this.connection.Call<Responses.MetadataColumnCollection> ("GET"' "contactmanager/metadata"' queryParameters' null); " is 122.
Long Statement,SimplyCast.ContactManager,ContactManagerAPI,C:\repos\SimplyCast_csharp-wrapper\ContactManager\ContactManager.cs,GetMetadataColumnByName,The length of the statement  "	return this.connection.Call<Responses.MetadataColumnCollection> ("GET"' "contactmanager/metadata"' queryParameters' null); " is 122.
Long Statement,SimplyCast.ContactManager,ContactManagerAPI,C:\repos\SimplyCast_csharp-wrapper\ContactManager\ContactManager.cs,RenameMetadataColumn,The length of the statement  "	return this.connection.Call<Responses.MetadataColumnEntity> ("POST"' "contactmanager/metadata/" + columnID' null' requestBody); " is 127.
Long Statement,SimplyCast.ContactManager,ContactManagerAPI,C:\repos\SimplyCast_csharp-wrapper\ContactManager\ContactManager.cs,UpdateMergeTags,The length of the statement  "	return this.connection.Call<Responses.ColumnEntity> ("POST"' "contactmanager/columns/" + columnID' queryParameters' column); " is 124.
Long Statement,SimplyCast.SimplyCast360,SimplyCast360API,C:\repos\SimplyCast_csharp-wrapper\SimplyCast360\SimplyCast360.cs,GetConnection,The length of the statement  "	return this.connection.Call<Responses.ConnectionEntity> ("GET"' "crossmarketer/" + projectID + "/" + path + "/" + connectionID' null' null); " is 140.
Long Statement,SimplyCast.SimplyCast360,SimplyCast360API,C:\repos\SimplyCast_csharp-wrapper\SimplyCast360\SimplyCast360.cs,GetOutboundContacts,The length of the statement  "	return this.connection.Call<Responses.ContactCollection> ("GET"' "crossmarketer/" + projectID + "/outbound/" + connectionID' queryParameters' null); " is 148.
Long Statement,SimplyCast.SimplyCast360,SimplyCast360API,C:\repos\SimplyCast_csharp-wrapper\SimplyCast360\SimplyCast360.cs,GetOutboundContact,The length of the statement  "	return this.connection.Call<Responses.ContactEntity> ("GET"' "crossmarketer/" + projectID + "/outbound/" + connectionID + "/" + contactID' null' null); " is 151.
Long Statement,SimplyCast.SimplyCast360,SimplyCast360API,C:\repos\SimplyCast_csharp-wrapper\SimplyCast360\SimplyCast360.cs,DeleteContact,The length of the statement  "	this.connection.Call<object> ("DELETE"' "crossmarketer/" + projectID + "/outbound/" + connectionID + "/" + contactID' null' null); " is 130.
Magic Number,SimplyCast,Examples,C:\repos\SimplyCast_csharp-wrapper\Examples.cs,ContactBatchExample,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	ContactManager.Requests.ContactEntity c = new ContactManager.Requests.ContactEntity ();  	c.Fields = new ContactManager.Requests.FieldEntity[] {  		new ContactManager.Requests.FieldEntity (emailColumnID' "example+" + i + "@example.com")'  		new ContactManager.Requests.FieldEntity (nameColumnID' "Jane Doe")  	};  	contacts.Add (c);  }  
Magic Number,SimplyCast,Examples,C:\repos\SimplyCast_csharp-wrapper\Examples.cs,ContactBatchExample,The following statement contains a magic number: do {  	response = api.ContactManager.GetBatchStatus (response.ID);  	Console.WriteLine ("[" + System.DateTime.Now.ToLongTimeString () + "] Current status is: " + response.Status.ToString ());  	System.Threading.Thread.Sleep (5000);  }  while (response.Status != ContactManager.Responses.ContactBatchResponse.BatchStatus.Complete && response.Status != ContactManager.Responses.ContactBatchResponse.BatchStatus.Error);  
Magic Number,SimplyCast,Examples,C:\repos\SimplyCast_csharp-wrapper\Examples.cs,ContactBatchExample,The following statement contains a magic number: System.Threading.Thread.Sleep (5000);  
Magic Number,SimplyCast,Examples,C:\repos\SimplyCast_csharp-wrapper\Examples.cs,MetadataColumnManagementExample,The following statement contains a magic number: for (int i = 0; i < 4; i++) {  	sumColumn = api.ContactManager.UpdateContactMetadataField (contact.ID' metadataColumns.GetByName ("Test Sum Column").ID' new string[] {  		"1"  	});  	Console.WriteLine ("Incremented sum number field by 1");  	Console.WriteLine ("Value: " + sumColumn.Values [0]);  }  
Magic Number,SimplyCast,SimplyCastAPIConnector,C:\repos\SimplyCast_csharp-wrapper\SimplyCastAPIConnector.cs,Call,The following statement contains a magic number: if ((int)webResponse.StatusCode >= 400) {  	APIException exception;  	try {  		Error error = this._Deserialize<Error> (responseData);  		exception = new APIException (error.Message);  		exception.StatusCode = webResponse.StatusCode;  		exception.StatusDescription = webResponse.StatusDescription;  	}  	catch (Exception e) {  		exception = new APIException ("An error condition occurred from the API' but could not be deserialized."' e);  		exception.StatusCode = webResponse.StatusCode;  		exception.StatusDescription = webResponse.StatusDescription;  	}  	throw exception;  }  else if (webResponse.StatusCode == HttpStatusCode.NoContent) {  	return default(T);  }  
Magic Number,SimplyCast.ContactManager,ContactManagerAPI,C:\repos\SimplyCast_csharp-wrapper\ContactManager\ContactManager.cs,GetLists,The following statement contains a magic number: return this.GetLists (0' 100' "");  
Magic Number,SimplyCast.ContactManager,ContactManagerAPI,C:\repos\SimplyCast_csharp-wrapper\ContactManager\ContactManager.cs,GetListsByName,The following statement contains a magic number: return this.GetLists (0' 100' name);  
Magic Number,SimplyCast.ContactManager,ContactManagerAPI,C:\repos\SimplyCast_csharp-wrapper\ContactManager\ContactManager.cs,GetContactsFromList,The following statement contains a magic number: return this.GetContactsFromList (listID' 0' 100' "");  
Magic Number,SimplyCast.ContactManager,ContactManagerAPI,C:\repos\SimplyCast_csharp-wrapper\ContactManager\ContactManager.cs,GetContacts,The following statement contains a magic number: return this.GetContacts (0' 100' ""' false' false);  
Magic Number,SimplyCast.ContactManager,ContactManagerAPI,C:\repos\SimplyCast_csharp-wrapper\ContactManager\ContactManager.cs,GetContactMetadata,The following statement contains a magic number: return this.GetContactMetadata (contactID' 0' 100);  
Magic Number,SimplyCast.ContactManager,ContactManagerAPI,C:\repos\SimplyCast_csharp-wrapper\ContactManager\ContactManager.cs,GetMetadataColumns,The following statement contains a magic number: return this.GetMetadataColumns (0' 100);  
Magic Number,SimplyCast.ContactManager,ContactManagerAPI,C:\repos\SimplyCast_csharp-wrapper\ContactManager\ContactManager.cs,GetColumns,The following statement contains a magic number: return this.GetColumns (0' 100);  
Magic Number,SimplyCast.ContactManager,ContactManagerAPI,C:\repos\SimplyCast_csharp-wrapper\ContactManager\ContactManager.cs,GetSuppressionListEntries,The following statement contains a magic number: return this.GetSuppressionListEntries (listType' 0' 100' "");  
Missing Default,SimplyCast.ContactManager.Responses,MetadataFieldEntity,C:\repos\SimplyCast_csharp-wrapper\ContactManager\Responses\MetadataFieldEntity.cs,ReadXml,The following switch statement is missing a default case: switch (reader.Name) {  case "id":  	this.id = reader.ReadContentAsString ();  	break;  case "type":  	this.type = reader.ReadContentAsString ();  	break;  case "userDefined":  	this.userDefined = reader.ReadContentAsBoolean ();  	break;  case "visible":  	this.visible = reader.ReadContentAsBoolean ();  	break;  case "editable":  	this.editable = reader.ReadContentAsBoolean ();  	break;  }  
Missing Default,SimplyCast.ContactManager.Responses,MetadataFieldEntity,C:\repos\SimplyCast_csharp-wrapper\ContactManager\Responses\MetadataFieldEntity.cs,ReadXml,The following switch statement is missing a default case: switch (reader.Name) {  case "values":  	reader.ReadToDescendant ("value");  	values.Add (reader.ReadString ());  	break;  case "value":  	values.Add (reader.ReadString ());  	break;  case "name":  	this.name = reader.ReadString ();  	break;  case "link":  case "links":  	if (reader.Name == "links") {  		reader.ReadToDescendant ("link");  	}  	RelationLink link = new RelationLink ();  	reader.MoveToFirstAttribute ();  	link.Rel = "self";  	while (reader.MoveToNextAttribute ()) {  		if (reader.Name == "href") {  			link.URL = reader.ReadContentAsString ();  		}  		else if (reader.Name == "rel") {  			link.Rel = reader.ReadContentAsString ();  		}  	}  	links.Add (link);  	break;  }  
Missing Default,SimplyCast.ContactManager.Responses,MetadataColumnEntity,C:\repos\SimplyCast_csharp-wrapper\ContactManager\Responses\MetadataColumnEntity.cs,ReadXml,The following switch statement is missing a default case: switch (reader.Name) {  case "id":  	this.id = reader.ReadContentAsString ();  	break;  case "type":  	this.type = reader.ReadContentAsString ();  	break;  case "userDefined":  	this.userDefined = reader.ReadContentAsBoolean ();  	break;  case "visible":  	this.visible = reader.ReadContentAsBoolean ();  	break;  case "editable":  	this.editable = reader.ReadContentAsBoolean ();  	break;  }  
Missing Default,SimplyCast.ContactManager.Responses,MetadataColumnEntity,C:\repos\SimplyCast_csharp-wrapper\ContactManager\Responses\MetadataColumnEntity.cs,ReadXml,The following switch statement is missing a default case: switch (reader.Name) {  case "name":  	this.name = reader.ReadString ();  	break;  case "link":  case "links":  	if (reader.Name == "links") {  		reader.ReadToDescendant ("link");  	}  	RelationLink link = new RelationLink ();  	reader.MoveToFirstAttribute ();  	link.Rel = "self";  	while (reader.MoveToNextAttribute ()) {  		if (reader.Name == "href") {  			link.URL = reader.ReadContentAsString ();  		}  		else if (reader.Name == "rel") {  			link.Rel = reader.ReadContentAsString ();  		}  	}  	links.Add (link);  	break;  }  
Missing Default,SimplyCast.ContactManager,ContactManagerAPI,C:\repos\SimplyCast_csharp-wrapper\ContactManager\ContactManager.cs,CreateMetadataColumn,The following switch statement is missing a default case: switch (type) {  case MetadataColumnType.MultiNumber:  	requestBody.Type = "multi number";  	break;  case MetadataColumnType.MultiString:  	requestBody.Type = "multi string";  	break;  case MetadataColumnType.SingleNumber:  	requestBody.Type = "single number";  	break;  case MetadataColumnType.SingleString:  	requestBody.Type = "single string";  	break;  case MetadataColumnType.SumNumber:  	requestBody.Type = "sum number";  	break;  }  
Missing Default,SimplyCast.ContactManager,ContactManagerAPI,C:\repos\SimplyCast_csharp-wrapper\ContactManager\ContactManager.cs,SuppressionTypeToString,The following switch statement is missing a default case: switch (type) {  case SuppressionType.Email:  	list = "email";  	break;  case SuppressionType.Fax:  	list = "fax";  	break;  case SuppressionType.Mobile:  	list = "mobile";  	break;  case SuppressionType.Phone:  	list = "phone";  	break;  }  
