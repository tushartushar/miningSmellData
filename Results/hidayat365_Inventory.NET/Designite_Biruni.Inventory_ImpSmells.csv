Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Biruni.Inventory.Entry,frmDeliveryOrderEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmDeliveryOrderEntry.cs,InitializeData,The length of the statement  "		RibbonMessageBox.Show ("ERROR Loading Data: " + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 135.
Long Statement,Biruni.Inventory.Entry,frmDeliveryOrderEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmDeliveryOrderEntry.cs,_grid_CellButtonClick,The length of the statement  "		RibbonMessageBox.Show ("ERROR Adding Detail Items: " + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 142.
Long Statement,Biruni.Inventory.Entry,frmDeliveryOrderEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmDeliveryOrderEntry.cs,_grid_AfterEdit,The length of the statement  "			//_grid.SetData(e.Row' "ExtendedPrice"' (double)_grid.GetData(e.Row' "Quantity") * (double)_grid.GetData(e.Row' "UnitPrice")); " is 126.
Long Statement,Biruni.Inventory.Entry,frmDeliveryOrderEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmDeliveryOrderEntry.cs,btnSave_Click,The length of the statement  "			DialogResult dr = RibbonMessageBox.Show ("Data SUCCESFULLY saved to database\n" + "Do you want to print this document?\n"' Application.ProductName' MessageBoxButtons.YesNo' MessageBoxIcon.Question); " is 198.
Long Statement,Biruni.Inventory.Entry,frmDeliveryOrderEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmDeliveryOrderEntry.cs,btnSave_Click,The length of the statement  "			RibbonMessageBox.Show ("Changes SUCCESFULLY saved to database"' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Information); " is 139.
Long Statement,Biruni.Inventory.Entry,frmDeliveryOrderEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmDeliveryOrderEntry.cs,btnSave_Click,The length of the statement  "			RibbonMessageBox.Show ("ERROR Saving Data: \n" + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 136.
Long Statement,Biruni.Inventory.Entry,frmDeliveryOrderEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmDeliveryOrderEntry.cs,btnSave_Click,The length of the statement  "			RibbonMessageBox.Show ("ERROR Saving Data:\n" + "Document number [" + c1TextBox1.Text + "]already existed in database\n" + "Please change this document number and try saving again."' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 258.
Long Statement,Biruni.Inventory.Entry,frmDeliveryOrderEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmDeliveryOrderEntry.cs,btnSave_Click,The length of the statement  "		RibbonMessageBox.Show ("ERROR Saving Data: \n" + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 136.
Long Statement,Biruni.Inventory.Entry,frmDeliveryOrderEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmDeliveryOrderEntry.cs,c1Combo2_SelectedValueChanged,The length of the statement  "			RibbonMessageBox.Show ("ERROR Retrieving Detail Data: \n" + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 147.
Long Statement,Biruni.Inventory.Entry,frmInventoryAdjustmentEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmInventoryAdjustmentEntry.cs,InitializeData,The length of the statement  "		RibbonMessageBox.Show ("ERROR Loading Data: " + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 135.
Long Statement,Biruni.Inventory.Entry,frmInventoryAdjustmentEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmInventoryAdjustmentEntry.cs,_grid_CellButtonClick,The length of the statement  "		RibbonMessageBox.Show ("ERROR Adding Detail Items: " + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 142.
Long Statement,Biruni.Inventory.Entry,frmInventoryAdjustmentEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmInventoryAdjustmentEntry.cs,_grid_AfterEdit,The length of the statement  "			//_grid.SetData(e.Row' "ExtendedPrice"' (double)_grid.GetData(e.Row' "Quantity") * (double)_grid.GetData(e.Row' "UnitPrice")); " is 126.
Long Statement,Biruni.Inventory.Entry,frmInventoryAdjustmentEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmInventoryAdjustmentEntry.cs,btnSave_Click,The length of the statement  "			DialogResult dr = RibbonMessageBox.Show ("Data SUCCESFULLY saved to database\n" + "Do you want to print this document?\n"' Application.ProductName' MessageBoxButtons.YesNo' MessageBoxIcon.Question); " is 198.
Long Statement,Biruni.Inventory.Entry,frmInventoryAdjustmentEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmInventoryAdjustmentEntry.cs,btnSave_Click,The length of the statement  "			RibbonMessageBox.Show ("Changes SUCCESFULLY saved to database"' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Information); " is 139.
Long Statement,Biruni.Inventory.Entry,frmInventoryAdjustmentEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmInventoryAdjustmentEntry.cs,btnSave_Click,The length of the statement  "			RibbonMessageBox.Show ("ERROR Saving Data: \n" + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 136.
Long Statement,Biruni.Inventory.Entry,frmInventoryAdjustmentEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmInventoryAdjustmentEntry.cs,btnSave_Click,The length of the statement  "			RibbonMessageBox.Show ("ERROR Saving Data:\n" + "Document number [" + c1TextBox1.Text + "]already existed in database\n" + "Please change this document number and try saving again."' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 258.
Long Statement,Biruni.Inventory.Entry,frmInventoryAdjustmentEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmInventoryAdjustmentEntry.cs,btnSave_Click,The length of the statement  "		RibbonMessageBox.Show ("ERROR Saving Data: \n" + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 136.
Long Statement,Biruni.Inventory.Entry,frmReceivingReportEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmReceivingReportEntry.cs,InitializeData,The length of the statement  "		RibbonMessageBox.Show ("ERROR Loading Data: " + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 135.
Long Statement,Biruni.Inventory.Entry,frmReceivingReportEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmReceivingReportEntry.cs,_grid_CellButtonClick,The length of the statement  "		RibbonMessageBox.Show ("ERROR Adding Detail Items: " + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 142.
Long Statement,Biruni.Inventory.Entry,frmReceivingReportEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmReceivingReportEntry.cs,_grid_AfterEdit,The length of the statement  "			//_grid.SetData(e.Row' "ExtendedPrice"' (double)_grid.GetData(e.Row' "Quantity") * (double)_grid.GetData(e.Row' "UnitPrice")); " is 126.
Long Statement,Biruni.Inventory.Entry,frmReceivingReportEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmReceivingReportEntry.cs,btnSave_Click,The length of the statement  "			DialogResult dr = RibbonMessageBox.Show ("Data SUCCESFULLY saved to database\n" + "Do you want to print this document?\n"' Application.ProductName' MessageBoxButtons.YesNo' MessageBoxIcon.Question); " is 198.
Long Statement,Biruni.Inventory.Entry,frmReceivingReportEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmReceivingReportEntry.cs,btnSave_Click,The length of the statement  "			RibbonMessageBox.Show ("Changes SUCCESFULLY saved to database"' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Information); " is 139.
Long Statement,Biruni.Inventory.Entry,frmReceivingReportEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmReceivingReportEntry.cs,btnSave_Click,The length of the statement  "			RibbonMessageBox.Show ("ERROR Saving Data: \n" + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 136.
Long Statement,Biruni.Inventory.Entry,frmReceivingReportEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmReceivingReportEntry.cs,btnSave_Click,The length of the statement  "			RibbonMessageBox.Show ("ERROR Saving Data:\n" + "Document number [" + c1TextBox1.Text + "]already existed in database\n" + "Please change this document number and try saving again."' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 258.
Long Statement,Biruni.Inventory.Entry,frmReceivingReportEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmReceivingReportEntry.cs,btnSave_Click,The length of the statement  "		RibbonMessageBox.Show ("ERROR Saving Data: \n" + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 136.
Long Statement,Biruni.Inventory.Entry,frmReceivingReportEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmReceivingReportEntry.cs,c1Combo2_SelectedValueChanged,The length of the statement  "			RibbonMessageBox.Show ("ERROR Retrieving Detail Data: \n" + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 147.
Long Statement,Biruni.Inventory.List,frmDeliveryOrderList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmDeliveryOrderList.cs,btnEdit_Click,The length of the statement  "		RibbonMessageBox.Show ("No data selected for editing\n"' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 132.
Long Statement,Biruni.Inventory.List,frmDeliveryOrderList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmDeliveryOrderList.cs,btnDelete_Click,The length of the statement  "			dr = RibbonMessageBox.Show ("Do you really want to delete data " + deleted' Application.ProductName' MessageBoxButtons.YesNo' MessageBoxIcon.Question); " is 151.
Long Statement,Biruni.Inventory.List,frmDeliveryOrderList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmDeliveryOrderList.cs,btnDelete_Click,The length of the statement  "				RibbonMessageBox.Show ("Data " + deleted + " can't be deleted because it's already used as reference"' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 178.
Long Statement,Biruni.Inventory.List,frmDeliveryOrderList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmDeliveryOrderList.cs,btnDelete_Click,The length of the statement  "				RibbonMessageBox.Show ("Error deleting data\nDetails: " + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 145.
Long Statement,Biruni.Inventory.List,frmDeliveryOrderList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmDeliveryOrderList.cs,btnDelete_Click,The length of the statement  "			RibbonMessageBox.Show ("Error deleting data\n" + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 136.
Long Statement,Biruni.Inventory.List,frmDeliveryOrderList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmDeliveryOrderList.cs,btnDelete_Click,The length of the statement  "		RibbonMessageBox.Show ("No data selected for deletion\n"' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 133.
Long Statement,Biruni.Inventory.List,frmDeliveryOrderList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmDeliveryOrderList.cs,btnPrint_Click,The length of the statement  "	Form fx = new frmReportViewer1 (ReportHelper1.LoadDeliveryOrderList ((DateTime)dtpBegin.Value' ((DateTime)dtpEnd.Value).AddDays (1))); " is 134.
Long Statement,Biruni.Inventory.List,frmDeliveryOrderList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmDeliveryOrderList.cs,btnPrint_Click,The length of the statement  "            this._grid.PreviewInfo.Size = new System.Drawing.Size(Screen.PrimaryScreen.WorkingArea.Width' Screen.PrimaryScreen.WorkingArea.Height);" is 135.
Long Statement,Biruni.Inventory.List,frmInventoryAdjustmentList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmInventoryAdjustmentList.cs,btnEdit_Click,The length of the statement  "		RibbonMessageBox.Show ("No data selected for editing\n"' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 132.
Long Statement,Biruni.Inventory.List,frmInventoryAdjustmentList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmInventoryAdjustmentList.cs,btnDelete_Click,The length of the statement  "			dr = RibbonMessageBox.Show ("Do you really want to delete data " + deleted' Application.ProductName' MessageBoxButtons.YesNo' MessageBoxIcon.Question); " is 151.
Long Statement,Biruni.Inventory.List,frmInventoryAdjustmentList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmInventoryAdjustmentList.cs,btnDelete_Click,The length of the statement  "				RibbonMessageBox.Show ("Data " + deleted + " can't be deleted because it's already used as reference"' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 178.
Long Statement,Biruni.Inventory.List,frmInventoryAdjustmentList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmInventoryAdjustmentList.cs,btnDelete_Click,The length of the statement  "				RibbonMessageBox.Show ("Error deleting data\nDetails: " + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 145.
Long Statement,Biruni.Inventory.List,frmInventoryAdjustmentList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmInventoryAdjustmentList.cs,btnDelete_Click,The length of the statement  "			RibbonMessageBox.Show ("Error deleting data\n" + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 136.
Long Statement,Biruni.Inventory.List,frmInventoryAdjustmentList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmInventoryAdjustmentList.cs,btnDelete_Click,The length of the statement  "		RibbonMessageBox.Show ("No data selected for deletion\n"' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 133.
Long Statement,Biruni.Inventory.List,frmInventoryAdjustmentList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmInventoryAdjustmentList.cs,btnPrint_Click,The length of the statement  "	Form fx = new frmReportViewer1 (ReportHelper1.LoadInventoryAdjustmentList ((DateTime)dtpBegin.Value' ((DateTime)dtpEnd.Value).AddDays (1))); " is 140.
Long Statement,Biruni.Inventory.List,frmInventoryAdjustmentList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmInventoryAdjustmentList.cs,btnPrint_Click,The length of the statement  "            this._grid.PreviewInfo.Size = new System.Drawing.Size(Screen.PrimaryScreen.WorkingArea.Width' Screen.PrimaryScreen.WorkingArea.Height);" is 135.
Long Statement,Biruni.Inventory.List,frmInventoryStatus,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmInventoryStatus.cs,_grid_OwnerDrawCell,The length of the statement  "		RectangleF rt = new RectangleF (e.CellRect.X' e.CellRect.Y' Convert.ToInt32 (e.CellRect.Width * .7)' e.CellRect.Height); " is 120.
Long Statement,Biruni.Inventory.List,frmReceivingReportList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmReceivingReportList.cs,InitializeData,The length of the statement  "		daOrders1.FillReceivingReports (dsCore1.Orders' (DateTime)dtpBegin.Value' ((DateTime)dtpEnd.Value).AddDays (1).AddSeconds (-1)); " is 128.
Long Statement,Biruni.Inventory.List,frmReceivingReportList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmReceivingReportList.cs,btnEdit_Click,The length of the statement  "		RibbonMessageBox.Show ("No data selected for editing\n"' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 132.
Long Statement,Biruni.Inventory.List,frmReceivingReportList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmReceivingReportList.cs,btnDelete_Click,The length of the statement  "			dr = RibbonMessageBox.Show ("Do you really want to delete data " + deleted' Application.ProductName' MessageBoxButtons.YesNo' MessageBoxIcon.Question); " is 151.
Long Statement,Biruni.Inventory.List,frmReceivingReportList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmReceivingReportList.cs,btnDelete_Click,The length of the statement  "				RibbonMessageBox.Show ("Data " + deleted + " can't be deleted because it's already used as reference"' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 178.
Long Statement,Biruni.Inventory.List,frmReceivingReportList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmReceivingReportList.cs,btnDelete_Click,The length of the statement  "				RibbonMessageBox.Show ("Error deleting data\nDetails: " + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 145.
Long Statement,Biruni.Inventory.List,frmReceivingReportList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmReceivingReportList.cs,btnDelete_Click,The length of the statement  "			RibbonMessageBox.Show ("Error deleting data\n" + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 136.
Long Statement,Biruni.Inventory.List,frmReceivingReportList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmReceivingReportList.cs,btnDelete_Click,The length of the statement  "		RibbonMessageBox.Show ("No data selected for deletion\n"' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 133.
Long Statement,Biruni.Inventory.List,frmReceivingReportList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmReceivingReportList.cs,btnPrint_Click,The length of the statement  "	Form fx = new frmReportViewer1 (ReportHelper1.LoadReceivingReportList ((DateTime)dtpBegin.Value' ((DateTime)dtpEnd.Value).AddDays (1))); " is 136.
Long Statement,Biruni.Inventory.List,frmReceivingReportList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmReceivingReportList.cs,btnPrint_Click,The length of the statement  "            this._grid.PreviewInfo.Size = new System.Drawing.Size(Screen.PrimaryScreen.WorkingArea.Width' Screen.PrimaryScreen.WorkingArea.Height);" is 135.
Magic Number,Biruni.Inventory.Entry,frmDeliveryOrderEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmDeliveryOrderEntry.cs,InitializeData,The following statement contains a magic number: try {  	dsCore1.EnforceConstraints = false;  	dsCore2.EnforceConstraints = false;  	// set database connection  	daCurrencies1.Connection = AppHelper.GetDbConnection ();  	daCompanies1.Connection = AppHelper.GetDbConnection ();  	daItems1.Connection = AppHelper.GetDbConnection ();  	daWarehouses1.Connection = AppHelper.GetDbConnection ();  	daOrders1.Connection = AppHelper.GetDbConnection ();  	daOrderDetails1.Connection = AppHelper.GetDbConnection ();  	// lookup table  	daCompanies1.FillCustomerActive (dsCore1.Companies);  	daCurrencies1.FillActive (dsCore1.Currencies);  	daOrders1.FillSalesBackOrders (dsCore2.Orders);  	daWarehouses1.FillActive (dsCore1.Warehouses);  	// get data  	if (id < 0) {  		// mode  		txMode = DataEntryModes.Add;  		// add new row to master table  		BindingContext [dsCore1' "Orders"].AddNew ();  		// default values for master table  		DataRowView dr = (DataRowView)this.BindingContext [dsCore1' "Orders"].Current;  		//dr["OrderNo"] = Orders.GenerateNewID(DateTime.Today.Year' ModulePrefix);  		dr ["OrderNo"] = DbHelper.GenerateNewOrderID (ModulePrefix' DateTime.Today.Year);  		dr ["OrderValue"] = 0;  		dr ["OrderType"] = ModulePrefix;  		dr ["OrderDate"] = DateTime.Today;  		dr ["RequiredDate"] = DateTime.Today.AddDays (30);  	}  	else {  		// mode  		txMode = DataEntryModes.Edit;  		// get data  		daOrders1.ClearBeforeFill = true;  		daOrders1.FillByID (dsCore1.Orders' id);  		// get details  		daOrderDetails1.ClearBeforeFill = true;  		daOrderDetails1.FillByOrderID (dsCore1.OrderDetails' id);  	}  }  catch (Exception ex) {  	Logger.ErrorRoutine (ex);  	RibbonMessageBox.Show ("ERROR Loading Data: " + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  }  
Magic Number,Biruni.Inventory.Entry,frmDeliveryOrderEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmDeliveryOrderEntry.cs,InitializeData,The following statement contains a magic number: if (id < 0) {  	// mode  	txMode = DataEntryModes.Add;  	// add new row to master table  	BindingContext [dsCore1' "Orders"].AddNew ();  	// default values for master table  	DataRowView dr = (DataRowView)this.BindingContext [dsCore1' "Orders"].Current;  	//dr["OrderNo"] = Orders.GenerateNewID(DateTime.Today.Year' ModulePrefix);  	dr ["OrderNo"] = DbHelper.GenerateNewOrderID (ModulePrefix' DateTime.Today.Year);  	dr ["OrderValue"] = 0;  	dr ["OrderType"] = ModulePrefix;  	dr ["OrderDate"] = DateTime.Today;  	dr ["RequiredDate"] = DateTime.Today.AddDays (30);  }  else {  	// mode  	txMode = DataEntryModes.Edit;  	// get data  	daOrders1.ClearBeforeFill = true;  	daOrders1.FillByID (dsCore1.Orders' id);  	// get details  	daOrderDetails1.ClearBeforeFill = true;  	daOrderDetails1.FillByOrderID (dsCore1.OrderDetails' id);  }  
Magic Number,Biruni.Inventory.Entry,frmDeliveryOrderEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmDeliveryOrderEntry.cs,InitializeData,The following statement contains a magic number: dr ["RequiredDate"] = DateTime.Today.AddDays (30);  
Magic Number,Biruni.Inventory.Entry,frmDeliveryOrderEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmDeliveryOrderEntry.cs,InitializeForm,The following statement contains a magic number: try {  	// column headers  	_grid.Cols ["ID"].Caption = "ID";  	_grid.Cols ["OrderID"].Caption = "Order ID";  	_grid.Cols ["ItemID"].Caption = "Item ID";  	_grid.Cols ["ItemCode"].Caption = "Item Code";  	_grid.Cols ["ItemName"].Caption = "Item Name";  	_grid.Cols ["Quantity"].Caption = "Quantity";  	_grid.Cols ["MeasureCode"].Caption = "UoM";  	_grid.Cols ["MeasureName"].Caption = "Measure Name";  	_grid.Cols ["UnitPrice"].Caption = "Unit Price";  	_grid.Cols ["TrxType"].Caption = "Trx Type";  	_grid.Cols ["TaxPct"].Caption = "Tax (%)";  	// read only columns  	_grid.Cols ["ID"].AllowEditing = false;  	_grid.Cols ["OrderID"].AllowEditing = false;  	_grid.Cols ["ItemID"].AllowEditing = false;  	_grid.Cols ["ItemName"].AllowEditing = false;  	_grid.Cols ["MeasureCode"].AllowEditing = false;  	_grid.Cols ["MeasureName"].AllowEditing = false;  	_grid.Cols ["Quantity"].AllowEditing = true;  	_grid.Cols ["UnitPrice"].AllowEditing = false;  	_grid.Cols ["TaxPct"].AllowEditing = false;  	// hide columns  	_grid.Cols ["ID"].Visible = false;  	_grid.Cols ["ItemID"].Visible = false;  	_grid.Cols ["OrderID"].Visible = false;  	_grid.Cols ["MeasureName"].Visible = false;  	_grid.Cols ["Quantity"].Visible = true;  	_grid.Cols ["UnitPrice"].Visible = true;  	_grid.Cols ["TaxPct"].Visible = true;  	_grid.Cols ["TrxType"].Visible = true;  	_grid.Cols ["ReferenceID"].Visible = false;  	_grid.Cols ["ReferenceNo"].Visible = false;  	_grid.Cols ["ReferenceDate"].Visible = false;  	_grid.Cols ["ReferenceValue"].Visible = false;  	// number format  	_grid.Cols ["ID"].Format = "N2";  	_grid.Cols ["OrderID"].Format = "N2";  	_grid.Cols ["ItemID"].Format = "N2";  	_grid.Cols ["Quantity"].Format = "N2";  	_grid.Cols ["UnitPrice"].Format = "N2";  	_grid.Cols ["TaxPct"].Format = "N2";  	// COmbo option  	_grid.Cols ["ItemCode"].ComboList = "|...";  	// column width  	_grid.Cols ["ID"].Width = -1;  	_grid.Cols ["OrderID"].Width = -1;  	_grid.Cols ["ItemID"].Width = -1;  	_grid.Cols ["ItemCode"].Width = 120;  	_grid.Cols ["ItemName"].Width = 150;  	_grid.Cols ["Quantity"].Width = 70;  	_grid.Cols ["MeasureCode"].Width = 50;  	_grid.Cols ["MeasureName"].Width = -1;  	_grid.Cols ["UnitPrice"].Width = 80;  	_grid.Cols ["TrxType"].Width = 70;  	_grid.Cols ["TaxPct"].Width = 50;  	// transaction type  	_grid.Cols ["TrxType"].DataMap = AppHelper.TransactionTypeDataMap ();  }  catch (Exception ex) {  	Logger.ErrorRoutine (ex);  	RibbonMessageBox.Show ("ERROR Loading Data!\n" + ex.Message);  }  
Magic Number,Biruni.Inventory.Entry,frmDeliveryOrderEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmDeliveryOrderEntry.cs,InitializeForm,The following statement contains a magic number: try {  	// column headers  	_grid.Cols ["ID"].Caption = "ID";  	_grid.Cols ["OrderID"].Caption = "Order ID";  	_grid.Cols ["ItemID"].Caption = "Item ID";  	_grid.Cols ["ItemCode"].Caption = "Item Code";  	_grid.Cols ["ItemName"].Caption = "Item Name";  	_grid.Cols ["Quantity"].Caption = "Quantity";  	_grid.Cols ["MeasureCode"].Caption = "UoM";  	_grid.Cols ["MeasureName"].Caption = "Measure Name";  	_grid.Cols ["UnitPrice"].Caption = "Unit Price";  	_grid.Cols ["TrxType"].Caption = "Trx Type";  	_grid.Cols ["TaxPct"].Caption = "Tax (%)";  	// read only columns  	_grid.Cols ["ID"].AllowEditing = false;  	_grid.Cols ["OrderID"].AllowEditing = false;  	_grid.Cols ["ItemID"].AllowEditing = false;  	_grid.Cols ["ItemName"].AllowEditing = false;  	_grid.Cols ["MeasureCode"].AllowEditing = false;  	_grid.Cols ["MeasureName"].AllowEditing = false;  	_grid.Cols ["Quantity"].AllowEditing = true;  	_grid.Cols ["UnitPrice"].AllowEditing = false;  	_grid.Cols ["TaxPct"].AllowEditing = false;  	// hide columns  	_grid.Cols ["ID"].Visible = false;  	_grid.Cols ["ItemID"].Visible = false;  	_grid.Cols ["OrderID"].Visible = false;  	_grid.Cols ["MeasureName"].Visible = false;  	_grid.Cols ["Quantity"].Visible = true;  	_grid.Cols ["UnitPrice"].Visible = true;  	_grid.Cols ["TaxPct"].Visible = true;  	_grid.Cols ["TrxType"].Visible = true;  	_grid.Cols ["ReferenceID"].Visible = false;  	_grid.Cols ["ReferenceNo"].Visible = false;  	_grid.Cols ["ReferenceDate"].Visible = false;  	_grid.Cols ["ReferenceValue"].Visible = false;  	// number format  	_grid.Cols ["ID"].Format = "N2";  	_grid.Cols ["OrderID"].Format = "N2";  	_grid.Cols ["ItemID"].Format = "N2";  	_grid.Cols ["Quantity"].Format = "N2";  	_grid.Cols ["UnitPrice"].Format = "N2";  	_grid.Cols ["TaxPct"].Format = "N2";  	// COmbo option  	_grid.Cols ["ItemCode"].ComboList = "|...";  	// column width  	_grid.Cols ["ID"].Width = -1;  	_grid.Cols ["OrderID"].Width = -1;  	_grid.Cols ["ItemID"].Width = -1;  	_grid.Cols ["ItemCode"].Width = 120;  	_grid.Cols ["ItemName"].Width = 150;  	_grid.Cols ["Quantity"].Width = 70;  	_grid.Cols ["MeasureCode"].Width = 50;  	_grid.Cols ["MeasureName"].Width = -1;  	_grid.Cols ["UnitPrice"].Width = 80;  	_grid.Cols ["TrxType"].Width = 70;  	_grid.Cols ["TaxPct"].Width = 50;  	// transaction type  	_grid.Cols ["TrxType"].DataMap = AppHelper.TransactionTypeDataMap ();  }  catch (Exception ex) {  	Logger.ErrorRoutine (ex);  	RibbonMessageBox.Show ("ERROR Loading Data!\n" + ex.Message);  }  
Magic Number,Biruni.Inventory.Entry,frmDeliveryOrderEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmDeliveryOrderEntry.cs,InitializeForm,The following statement contains a magic number: try {  	// column headers  	_grid.Cols ["ID"].Caption = "ID";  	_grid.Cols ["OrderID"].Caption = "Order ID";  	_grid.Cols ["ItemID"].Caption = "Item ID";  	_grid.Cols ["ItemCode"].Caption = "Item Code";  	_grid.Cols ["ItemName"].Caption = "Item Name";  	_grid.Cols ["Quantity"].Caption = "Quantity";  	_grid.Cols ["MeasureCode"].Caption = "UoM";  	_grid.Cols ["MeasureName"].Caption = "Measure Name";  	_grid.Cols ["UnitPrice"].Caption = "Unit Price";  	_grid.Cols ["TrxType"].Caption = "Trx Type";  	_grid.Cols ["TaxPct"].Caption = "Tax (%)";  	// read only columns  	_grid.Cols ["ID"].AllowEditing = false;  	_grid.Cols ["OrderID"].AllowEditing = false;  	_grid.Cols ["ItemID"].AllowEditing = false;  	_grid.Cols ["ItemName"].AllowEditing = false;  	_grid.Cols ["MeasureCode"].AllowEditing = false;  	_grid.Cols ["MeasureName"].AllowEditing = false;  	_grid.Cols ["Quantity"].AllowEditing = true;  	_grid.Cols ["UnitPrice"].AllowEditing = false;  	_grid.Cols ["TaxPct"].AllowEditing = false;  	// hide columns  	_grid.Cols ["ID"].Visible = false;  	_grid.Cols ["ItemID"].Visible = false;  	_grid.Cols ["OrderID"].Visible = false;  	_grid.Cols ["MeasureName"].Visible = false;  	_grid.Cols ["Quantity"].Visible = true;  	_grid.Cols ["UnitPrice"].Visible = true;  	_grid.Cols ["TaxPct"].Visible = true;  	_grid.Cols ["TrxType"].Visible = true;  	_grid.Cols ["ReferenceID"].Visible = false;  	_grid.Cols ["ReferenceNo"].Visible = false;  	_grid.Cols ["ReferenceDate"].Visible = false;  	_grid.Cols ["ReferenceValue"].Visible = false;  	// number format  	_grid.Cols ["ID"].Format = "N2";  	_grid.Cols ["OrderID"].Format = "N2";  	_grid.Cols ["ItemID"].Format = "N2";  	_grid.Cols ["Quantity"].Format = "N2";  	_grid.Cols ["UnitPrice"].Format = "N2";  	_grid.Cols ["TaxPct"].Format = "N2";  	// COmbo option  	_grid.Cols ["ItemCode"].ComboList = "|...";  	// column width  	_grid.Cols ["ID"].Width = -1;  	_grid.Cols ["OrderID"].Width = -1;  	_grid.Cols ["ItemID"].Width = -1;  	_grid.Cols ["ItemCode"].Width = 120;  	_grid.Cols ["ItemName"].Width = 150;  	_grid.Cols ["Quantity"].Width = 70;  	_grid.Cols ["MeasureCode"].Width = 50;  	_grid.Cols ["MeasureName"].Width = -1;  	_grid.Cols ["UnitPrice"].Width = 80;  	_grid.Cols ["TrxType"].Width = 70;  	_grid.Cols ["TaxPct"].Width = 50;  	// transaction type  	_grid.Cols ["TrxType"].DataMap = AppHelper.TransactionTypeDataMap ();  }  catch (Exception ex) {  	Logger.ErrorRoutine (ex);  	RibbonMessageBox.Show ("ERROR Loading Data!\n" + ex.Message);  }  
Magic Number,Biruni.Inventory.Entry,frmDeliveryOrderEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmDeliveryOrderEntry.cs,InitializeForm,The following statement contains a magic number: try {  	// column headers  	_grid.Cols ["ID"].Caption = "ID";  	_grid.Cols ["OrderID"].Caption = "Order ID";  	_grid.Cols ["ItemID"].Caption = "Item ID";  	_grid.Cols ["ItemCode"].Caption = "Item Code";  	_grid.Cols ["ItemName"].Caption = "Item Name";  	_grid.Cols ["Quantity"].Caption = "Quantity";  	_grid.Cols ["MeasureCode"].Caption = "UoM";  	_grid.Cols ["MeasureName"].Caption = "Measure Name";  	_grid.Cols ["UnitPrice"].Caption = "Unit Price";  	_grid.Cols ["TrxType"].Caption = "Trx Type";  	_grid.Cols ["TaxPct"].Caption = "Tax (%)";  	// read only columns  	_grid.Cols ["ID"].AllowEditing = false;  	_grid.Cols ["OrderID"].AllowEditing = false;  	_grid.Cols ["ItemID"].AllowEditing = false;  	_grid.Cols ["ItemName"].AllowEditing = false;  	_grid.Cols ["MeasureCode"].AllowEditing = false;  	_grid.Cols ["MeasureName"].AllowEditing = false;  	_grid.Cols ["Quantity"].AllowEditing = true;  	_grid.Cols ["UnitPrice"].AllowEditing = false;  	_grid.Cols ["TaxPct"].AllowEditing = false;  	// hide columns  	_grid.Cols ["ID"].Visible = false;  	_grid.Cols ["ItemID"].Visible = false;  	_grid.Cols ["OrderID"].Visible = false;  	_grid.Cols ["MeasureName"].Visible = false;  	_grid.Cols ["Quantity"].Visible = true;  	_grid.Cols ["UnitPrice"].Visible = true;  	_grid.Cols ["TaxPct"].Visible = true;  	_grid.Cols ["TrxType"].Visible = true;  	_grid.Cols ["ReferenceID"].Visible = false;  	_grid.Cols ["ReferenceNo"].Visible = false;  	_grid.Cols ["ReferenceDate"].Visible = false;  	_grid.Cols ["ReferenceValue"].Visible = false;  	// number format  	_grid.Cols ["ID"].Format = "N2";  	_grid.Cols ["OrderID"].Format = "N2";  	_grid.Cols ["ItemID"].Format = "N2";  	_grid.Cols ["Quantity"].Format = "N2";  	_grid.Cols ["UnitPrice"].Format = "N2";  	_grid.Cols ["TaxPct"].Format = "N2";  	// COmbo option  	_grid.Cols ["ItemCode"].ComboList = "|...";  	// column width  	_grid.Cols ["ID"].Width = -1;  	_grid.Cols ["OrderID"].Width = -1;  	_grid.Cols ["ItemID"].Width = -1;  	_grid.Cols ["ItemCode"].Width = 120;  	_grid.Cols ["ItemName"].Width = 150;  	_grid.Cols ["Quantity"].Width = 70;  	_grid.Cols ["MeasureCode"].Width = 50;  	_grid.Cols ["MeasureName"].Width = -1;  	_grid.Cols ["UnitPrice"].Width = 80;  	_grid.Cols ["TrxType"].Width = 70;  	_grid.Cols ["TaxPct"].Width = 50;  	// transaction type  	_grid.Cols ["TrxType"].DataMap = AppHelper.TransactionTypeDataMap ();  }  catch (Exception ex) {  	Logger.ErrorRoutine (ex);  	RibbonMessageBox.Show ("ERROR Loading Data!\n" + ex.Message);  }  
Magic Number,Biruni.Inventory.Entry,frmDeliveryOrderEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmDeliveryOrderEntry.cs,InitializeForm,The following statement contains a magic number: try {  	// column headers  	_grid.Cols ["ID"].Caption = "ID";  	_grid.Cols ["OrderID"].Caption = "Order ID";  	_grid.Cols ["ItemID"].Caption = "Item ID";  	_grid.Cols ["ItemCode"].Caption = "Item Code";  	_grid.Cols ["ItemName"].Caption = "Item Name";  	_grid.Cols ["Quantity"].Caption = "Quantity";  	_grid.Cols ["MeasureCode"].Caption = "UoM";  	_grid.Cols ["MeasureName"].Caption = "Measure Name";  	_grid.Cols ["UnitPrice"].Caption = "Unit Price";  	_grid.Cols ["TrxType"].Caption = "Trx Type";  	_grid.Cols ["TaxPct"].Caption = "Tax (%)";  	// read only columns  	_grid.Cols ["ID"].AllowEditing = false;  	_grid.Cols ["OrderID"].AllowEditing = false;  	_grid.Cols ["ItemID"].AllowEditing = false;  	_grid.Cols ["ItemName"].AllowEditing = false;  	_grid.Cols ["MeasureCode"].AllowEditing = false;  	_grid.Cols ["MeasureName"].AllowEditing = false;  	_grid.Cols ["Quantity"].AllowEditing = true;  	_grid.Cols ["UnitPrice"].AllowEditing = false;  	_grid.Cols ["TaxPct"].AllowEditing = false;  	// hide columns  	_grid.Cols ["ID"].Visible = false;  	_grid.Cols ["ItemID"].Visible = false;  	_grid.Cols ["OrderID"].Visible = false;  	_grid.Cols ["MeasureName"].Visible = false;  	_grid.Cols ["Quantity"].Visible = true;  	_grid.Cols ["UnitPrice"].Visible = true;  	_grid.Cols ["TaxPct"].Visible = true;  	_grid.Cols ["TrxType"].Visible = true;  	_grid.Cols ["ReferenceID"].Visible = false;  	_grid.Cols ["ReferenceNo"].Visible = false;  	_grid.Cols ["ReferenceDate"].Visible = false;  	_grid.Cols ["ReferenceValue"].Visible = false;  	// number format  	_grid.Cols ["ID"].Format = "N2";  	_grid.Cols ["OrderID"].Format = "N2";  	_grid.Cols ["ItemID"].Format = "N2";  	_grid.Cols ["Quantity"].Format = "N2";  	_grid.Cols ["UnitPrice"].Format = "N2";  	_grid.Cols ["TaxPct"].Format = "N2";  	// COmbo option  	_grid.Cols ["ItemCode"].ComboList = "|...";  	// column width  	_grid.Cols ["ID"].Width = -1;  	_grid.Cols ["OrderID"].Width = -1;  	_grid.Cols ["ItemID"].Width = -1;  	_grid.Cols ["ItemCode"].Width = 120;  	_grid.Cols ["ItemName"].Width = 150;  	_grid.Cols ["Quantity"].Width = 70;  	_grid.Cols ["MeasureCode"].Width = 50;  	_grid.Cols ["MeasureName"].Width = -1;  	_grid.Cols ["UnitPrice"].Width = 80;  	_grid.Cols ["TrxType"].Width = 70;  	_grid.Cols ["TaxPct"].Width = 50;  	// transaction type  	_grid.Cols ["TrxType"].DataMap = AppHelper.TransactionTypeDataMap ();  }  catch (Exception ex) {  	Logger.ErrorRoutine (ex);  	RibbonMessageBox.Show ("ERROR Loading Data!\n" + ex.Message);  }  
Magic Number,Biruni.Inventory.Entry,frmDeliveryOrderEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmDeliveryOrderEntry.cs,InitializeForm,The following statement contains a magic number: try {  	// column headers  	_grid.Cols ["ID"].Caption = "ID";  	_grid.Cols ["OrderID"].Caption = "Order ID";  	_grid.Cols ["ItemID"].Caption = "Item ID";  	_grid.Cols ["ItemCode"].Caption = "Item Code";  	_grid.Cols ["ItemName"].Caption = "Item Name";  	_grid.Cols ["Quantity"].Caption = "Quantity";  	_grid.Cols ["MeasureCode"].Caption = "UoM";  	_grid.Cols ["MeasureName"].Caption = "Measure Name";  	_grid.Cols ["UnitPrice"].Caption = "Unit Price";  	_grid.Cols ["TrxType"].Caption = "Trx Type";  	_grid.Cols ["TaxPct"].Caption = "Tax (%)";  	// read only columns  	_grid.Cols ["ID"].AllowEditing = false;  	_grid.Cols ["OrderID"].AllowEditing = false;  	_grid.Cols ["ItemID"].AllowEditing = false;  	_grid.Cols ["ItemName"].AllowEditing = false;  	_grid.Cols ["MeasureCode"].AllowEditing = false;  	_grid.Cols ["MeasureName"].AllowEditing = false;  	_grid.Cols ["Quantity"].AllowEditing = true;  	_grid.Cols ["UnitPrice"].AllowEditing = false;  	_grid.Cols ["TaxPct"].AllowEditing = false;  	// hide columns  	_grid.Cols ["ID"].Visible = false;  	_grid.Cols ["ItemID"].Visible = false;  	_grid.Cols ["OrderID"].Visible = false;  	_grid.Cols ["MeasureName"].Visible = false;  	_grid.Cols ["Quantity"].Visible = true;  	_grid.Cols ["UnitPrice"].Visible = true;  	_grid.Cols ["TaxPct"].Visible = true;  	_grid.Cols ["TrxType"].Visible = true;  	_grid.Cols ["ReferenceID"].Visible = false;  	_grid.Cols ["ReferenceNo"].Visible = false;  	_grid.Cols ["ReferenceDate"].Visible = false;  	_grid.Cols ["ReferenceValue"].Visible = false;  	// number format  	_grid.Cols ["ID"].Format = "N2";  	_grid.Cols ["OrderID"].Format = "N2";  	_grid.Cols ["ItemID"].Format = "N2";  	_grid.Cols ["Quantity"].Format = "N2";  	_grid.Cols ["UnitPrice"].Format = "N2";  	_grid.Cols ["TaxPct"].Format = "N2";  	// COmbo option  	_grid.Cols ["ItemCode"].ComboList = "|...";  	// column width  	_grid.Cols ["ID"].Width = -1;  	_grid.Cols ["OrderID"].Width = -1;  	_grid.Cols ["ItemID"].Width = -1;  	_grid.Cols ["ItemCode"].Width = 120;  	_grid.Cols ["ItemName"].Width = 150;  	_grid.Cols ["Quantity"].Width = 70;  	_grid.Cols ["MeasureCode"].Width = 50;  	_grid.Cols ["MeasureName"].Width = -1;  	_grid.Cols ["UnitPrice"].Width = 80;  	_grid.Cols ["TrxType"].Width = 70;  	_grid.Cols ["TaxPct"].Width = 50;  	// transaction type  	_grid.Cols ["TrxType"].DataMap = AppHelper.TransactionTypeDataMap ();  }  catch (Exception ex) {  	Logger.ErrorRoutine (ex);  	RibbonMessageBox.Show ("ERROR Loading Data!\n" + ex.Message);  }  
Magic Number,Biruni.Inventory.Entry,frmDeliveryOrderEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmDeliveryOrderEntry.cs,InitializeForm,The following statement contains a magic number: try {  	// column headers  	_grid.Cols ["ID"].Caption = "ID";  	_grid.Cols ["OrderID"].Caption = "Order ID";  	_grid.Cols ["ItemID"].Caption = "Item ID";  	_grid.Cols ["ItemCode"].Caption = "Item Code";  	_grid.Cols ["ItemName"].Caption = "Item Name";  	_grid.Cols ["Quantity"].Caption = "Quantity";  	_grid.Cols ["MeasureCode"].Caption = "UoM";  	_grid.Cols ["MeasureName"].Caption = "Measure Name";  	_grid.Cols ["UnitPrice"].Caption = "Unit Price";  	_grid.Cols ["TrxType"].Caption = "Trx Type";  	_grid.Cols ["TaxPct"].Caption = "Tax (%)";  	// read only columns  	_grid.Cols ["ID"].AllowEditing = false;  	_grid.Cols ["OrderID"].AllowEditing = false;  	_grid.Cols ["ItemID"].AllowEditing = false;  	_grid.Cols ["ItemName"].AllowEditing = false;  	_grid.Cols ["MeasureCode"].AllowEditing = false;  	_grid.Cols ["MeasureName"].AllowEditing = false;  	_grid.Cols ["Quantity"].AllowEditing = true;  	_grid.Cols ["UnitPrice"].AllowEditing = false;  	_grid.Cols ["TaxPct"].AllowEditing = false;  	// hide columns  	_grid.Cols ["ID"].Visible = false;  	_grid.Cols ["ItemID"].Visible = false;  	_grid.Cols ["OrderID"].Visible = false;  	_grid.Cols ["MeasureName"].Visible = false;  	_grid.Cols ["Quantity"].Visible = true;  	_grid.Cols ["UnitPrice"].Visible = true;  	_grid.Cols ["TaxPct"].Visible = true;  	_grid.Cols ["TrxType"].Visible = true;  	_grid.Cols ["ReferenceID"].Visible = false;  	_grid.Cols ["ReferenceNo"].Visible = false;  	_grid.Cols ["ReferenceDate"].Visible = false;  	_grid.Cols ["ReferenceValue"].Visible = false;  	// number format  	_grid.Cols ["ID"].Format = "N2";  	_grid.Cols ["OrderID"].Format = "N2";  	_grid.Cols ["ItemID"].Format = "N2";  	_grid.Cols ["Quantity"].Format = "N2";  	_grid.Cols ["UnitPrice"].Format = "N2";  	_grid.Cols ["TaxPct"].Format = "N2";  	// COmbo option  	_grid.Cols ["ItemCode"].ComboList = "|...";  	// column width  	_grid.Cols ["ID"].Width = -1;  	_grid.Cols ["OrderID"].Width = -1;  	_grid.Cols ["ItemID"].Width = -1;  	_grid.Cols ["ItemCode"].Width = 120;  	_grid.Cols ["ItemName"].Width = 150;  	_grid.Cols ["Quantity"].Width = 70;  	_grid.Cols ["MeasureCode"].Width = 50;  	_grid.Cols ["MeasureName"].Width = -1;  	_grid.Cols ["UnitPrice"].Width = 80;  	_grid.Cols ["TrxType"].Width = 70;  	_grid.Cols ["TaxPct"].Width = 50;  	// transaction type  	_grid.Cols ["TrxType"].DataMap = AppHelper.TransactionTypeDataMap ();  }  catch (Exception ex) {  	Logger.ErrorRoutine (ex);  	RibbonMessageBox.Show ("ERROR Loading Data!\n" + ex.Message);  }  
Magic Number,Biruni.Inventory.Entry,frmDeliveryOrderEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmDeliveryOrderEntry.cs,InitializeForm,The following statement contains a magic number: _grid.Cols ["ItemCode"].Width = 120;  
Magic Number,Biruni.Inventory.Entry,frmDeliveryOrderEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmDeliveryOrderEntry.cs,InitializeForm,The following statement contains a magic number: _grid.Cols ["ItemName"].Width = 150;  
Magic Number,Biruni.Inventory.Entry,frmDeliveryOrderEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmDeliveryOrderEntry.cs,InitializeForm,The following statement contains a magic number: _grid.Cols ["Quantity"].Width = 70;  
Magic Number,Biruni.Inventory.Entry,frmDeliveryOrderEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmDeliveryOrderEntry.cs,InitializeForm,The following statement contains a magic number: _grid.Cols ["MeasureCode"].Width = 50;  
Magic Number,Biruni.Inventory.Entry,frmDeliveryOrderEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmDeliveryOrderEntry.cs,InitializeForm,The following statement contains a magic number: _grid.Cols ["UnitPrice"].Width = 80;  
Magic Number,Biruni.Inventory.Entry,frmDeliveryOrderEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmDeliveryOrderEntry.cs,InitializeForm,The following statement contains a magic number: _grid.Cols ["TrxType"].Width = 70;  
Magic Number,Biruni.Inventory.Entry,frmDeliveryOrderEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmDeliveryOrderEntry.cs,InitializeForm,The following statement contains a magic number: _grid.Cols ["TaxPct"].Width = 50;  
Magic Number,Biruni.Inventory.Entry,frmDeliveryOrderEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmDeliveryOrderEntry.cs,btnSave_Click,The following statement contains a magic number: try {  	// End editing  	BindingContext [dsCore1' "Orders"].EndCurrentEdit ();  	BindingContext [dsCore1' "OrderDetails"].EndCurrentEdit ();  	// There are changes that need to be made' so attempt to update the datasource by  	// calling the update method and passing the dataset and any parameters.  	if (txMode == DataEntryModes.Add) {  		// copy master record dari main dataset  		// harus dilakukan krena main dataset sebelumnya sudah   		// AcceptChanges padahal belum diupdate ke database   		dsChanges = new dsCore ();  		dsChanges.EnforceConstraints = false;  		dsChanges.Orders.Rows.Add (((DataRowView)this.BindingContext [dsCore1' "Orders"].Current).Row.ItemArray);  		// copy juga detail record dari main dataset  		for (int i = 0; i < dsCore1.OrderDetails.Rows.Count; i++)  			dsChanges.OrderDetails.Rows.Add (dsCore1.OrderDetails.Rows [i].ItemArray);  		// persist changes to database  		daOrders1.Update (dsChanges.Orders);  		daOrderDetails1.Update (dsChanges.OrderDetails);  		// inform user' successful  		DialogResult dr = RibbonMessageBox.Show ("Data SUCCESFULLY saved to database\n" + "Do you want to print this document?\n"' Application.ProductName' MessageBoxButtons.YesNo' MessageBoxIcon.Question);  		// ask user for voucher print  		if (dr == DialogResult.Yes) {  			Cursor = Cursors.AppStarting;  			Form fx = new frmReportViewer1 (ReportHelper1.LoadDeliveryOrderForm (c1TextBox1.Text));  			fx.WindowState = FormWindowState.Maximized;  			fx.ShowDialog ();  			Cursor = Cursors.Default;  		}  	}  	else {  		// persist changes to database  		daOrders1.Update (dsCore1.Orders);  		daOrderDetails1.Update (dsCore1.OrderDetails);  		// inform user for successful update  		RibbonMessageBox.Show ("Changes SUCCESFULLY saved to database"' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Information);  	}  	// success' close form  	btnClose.PerformClick ();  }  catch (SqlException ex) {  	// textfile logging  	Logger.ErrorRoutine (ex);  	// screen logging  	if (ex.Number != 2601)  		RibbonMessageBox.Show ("ERROR Saving Data: \n" + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  	else  		RibbonMessageBox.Show ("ERROR Saving Data:\n" + "Document number [" + c1TextBox1.Text + "]already existed in database\n" + "Please change this document number and try saving again."' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  }  catch (Exception ex) {  	// textfile logging  	Logger.ErrorRoutine (ex);  	// screen logging  	RibbonMessageBox.Show ("ERROR Saving Data: \n" + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  }  
Magic Number,Biruni.Inventory.Entry,frmDeliveryOrderEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmDeliveryOrderEntry.cs,btnSave_Click,The following statement contains a magic number: if (ex.Number != 2601)  	RibbonMessageBox.Show ("ERROR Saving Data: \n" + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  else  	RibbonMessageBox.Show ("ERROR Saving Data:\n" + "Document number [" + c1TextBox1.Text + "]already existed in database\n" + "Please change this document number and try saving again."' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  
Magic Number,Biruni.Inventory.Entry,frmInventoryAdjustmentEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmInventoryAdjustmentEntry.cs,InitializeData,The following statement contains a magic number: try {  	// set database connection  	dsCore1.EnforceConstraints = false;  	daItems1.Connection = AppHelper.GetDbConnection ();  	daWarehouses1.Connection = AppHelper.GetDbConnection ();  	daOrders1.Connection = AppHelper.GetDbConnection ();  	daOrderDetails1.Connection = AppHelper.GetDbConnection ();  	// lookup table  	daWarehouses1.FillActive (dsCore1.Warehouses);  	// get data  	if (id < 0) {  		// mode  		txMode = DataEntryModes.Add;  		// add new row to master table  		BindingContext [dsCore1' "Orders"].AddNew ();  		// default values for master table  		DataRowView dr = (DataRowView)this.BindingContext [dsCore1' "Orders"].Current;  		//dr["OrderNo"] = Orders.GenerateNewID(DateTime.Today.Year' ModulePrefix);  		dr ["OrderNo"] = DbHelper.GenerateNewOrderID (ModulePrefix' DateTime.Today.Year);  		dr ["OrderValue"] = 0;  		dr ["OrderType"] = ModulePrefix;  		dr ["OrderDate"] = DateTime.Today;  		dr ["RequiredDate"] = DateTime.Today.AddDays (30);  	}  	else {  		// mode  		txMode = DataEntryModes.Edit;  		// get data  		daOrders1.ClearBeforeFill = true;  		daOrders1.FillByID (dsCore1.Orders' id);  		// get details  		daOrderDetails1.ClearBeforeFill = true;  		daOrderDetails1.FillByOrderID (dsCore1.OrderDetails' id);  	}  }  catch (Exception ex) {  	Logger.ErrorRoutine (ex);  	RibbonMessageBox.Show ("ERROR Loading Data: " + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  }  
Magic Number,Biruni.Inventory.Entry,frmInventoryAdjustmentEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmInventoryAdjustmentEntry.cs,InitializeData,The following statement contains a magic number: if (id < 0) {  	// mode  	txMode = DataEntryModes.Add;  	// add new row to master table  	BindingContext [dsCore1' "Orders"].AddNew ();  	// default values for master table  	DataRowView dr = (DataRowView)this.BindingContext [dsCore1' "Orders"].Current;  	//dr["OrderNo"] = Orders.GenerateNewID(DateTime.Today.Year' ModulePrefix);  	dr ["OrderNo"] = DbHelper.GenerateNewOrderID (ModulePrefix' DateTime.Today.Year);  	dr ["OrderValue"] = 0;  	dr ["OrderType"] = ModulePrefix;  	dr ["OrderDate"] = DateTime.Today;  	dr ["RequiredDate"] = DateTime.Today.AddDays (30);  }  else {  	// mode  	txMode = DataEntryModes.Edit;  	// get data  	daOrders1.ClearBeforeFill = true;  	daOrders1.FillByID (dsCore1.Orders' id);  	// get details  	daOrderDetails1.ClearBeforeFill = true;  	daOrderDetails1.FillByOrderID (dsCore1.OrderDetails' id);  }  
Magic Number,Biruni.Inventory.Entry,frmInventoryAdjustmentEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmInventoryAdjustmentEntry.cs,InitializeData,The following statement contains a magic number: dr ["RequiredDate"] = DateTime.Today.AddDays (30);  
Magic Number,Biruni.Inventory.Entry,frmInventoryAdjustmentEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmInventoryAdjustmentEntry.cs,InitializeForm,The following statement contains a magic number: try {  	// column headers  	_grid.Cols ["ID"].Caption = "ID";  	_grid.Cols ["OrderID"].Caption = "Order ID";  	_grid.Cols ["ItemID"].Caption = "Item ID";  	_grid.Cols ["ItemCode"].Caption = "Item Code";  	_grid.Cols ["ItemName"].Caption = "Item Name";  	_grid.Cols ["Quantity"].Caption = "Quantity";  	_grid.Cols ["MeasureCode"].Caption = "UoM";  	_grid.Cols ["MeasureName"].Caption = "Measure Name";  	_grid.Cols ["UnitPrice"].Caption = "Unit Price";  	_grid.Cols ["TrxType"].Caption = "Trx Type";  	_grid.Cols ["TaxPct"].Caption = "Tax (%)";  	// read only columns  	_grid.Cols ["ID"].AllowEditing = false;  	_grid.Cols ["OrderID"].AllowEditing = false;  	_grid.Cols ["ItemID"].AllowEditing = false;  	_grid.Cols ["ItemName"].AllowEditing = false;  	_grid.Cols ["MeasureCode"].AllowEditing = false;  	_grid.Cols ["MeasureName"].AllowEditing = false;  	// hide columns  	_grid.Cols ["ID"].Visible = false;  	_grid.Cols ["ItemID"].Visible = false;  	_grid.Cols ["OrderID"].Visible = false;  	_grid.Cols ["MeasureName"].Visible = false;  	_grid.Cols ["UnitPrice"].Visible = false;  	_grid.Cols ["TaxPct"].Visible = false;  	_grid.Cols ["TrxType"].Visible = true;  	_grid.Cols ["ReferenceID"].Visible = false;  	_grid.Cols ["ReferenceNo"].Visible = false;  	_grid.Cols ["ReferenceDate"].Visible = false;  	_grid.Cols ["ReferenceValue"].Visible = false;  	// number format  	_grid.Cols ["ID"].Format = "N2";  	_grid.Cols ["OrderID"].Format = "N2";  	_grid.Cols ["ItemID"].Format = "N2";  	_grid.Cols ["Quantity"].Format = "N2";  	_grid.Cols ["UnitPrice"].Format = "N2";  	_grid.Cols ["TaxPct"].Format = "N2";  	// COmbo option  	_grid.Cols ["ItemCode"].ComboList = "|...";  	// column width  	_grid.Cols ["ID"].Width = -1;  	_grid.Cols ["OrderID"].Width = -1;  	_grid.Cols ["ItemID"].Width = -1;  	_grid.Cols ["ItemCode"].Width = 120;  	_grid.Cols ["ItemName"].Width = 150;  	_grid.Cols ["Quantity"].Width = 70;  	_grid.Cols ["MeasureCode"].Width = 50;  	_grid.Cols ["MeasureName"].Width = -1;  	_grid.Cols ["UnitPrice"].Width = 80;  	_grid.Cols ["TrxType"].Width = 70;  	_grid.Cols ["TaxPct"].Width = 50;  	// transaction type  	_grid.Cols ["TrxType"].DataMap = AppHelper.TransactionTypeDataMap ();  }  catch (Exception ex) {  	Logger.ErrorRoutine (ex);  	RibbonMessageBox.Show ("ERROR Loading Data!\n" + ex.Message);  }  
Magic Number,Biruni.Inventory.Entry,frmInventoryAdjustmentEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmInventoryAdjustmentEntry.cs,InitializeForm,The following statement contains a magic number: try {  	// column headers  	_grid.Cols ["ID"].Caption = "ID";  	_grid.Cols ["OrderID"].Caption = "Order ID";  	_grid.Cols ["ItemID"].Caption = "Item ID";  	_grid.Cols ["ItemCode"].Caption = "Item Code";  	_grid.Cols ["ItemName"].Caption = "Item Name";  	_grid.Cols ["Quantity"].Caption = "Quantity";  	_grid.Cols ["MeasureCode"].Caption = "UoM";  	_grid.Cols ["MeasureName"].Caption = "Measure Name";  	_grid.Cols ["UnitPrice"].Caption = "Unit Price";  	_grid.Cols ["TrxType"].Caption = "Trx Type";  	_grid.Cols ["TaxPct"].Caption = "Tax (%)";  	// read only columns  	_grid.Cols ["ID"].AllowEditing = false;  	_grid.Cols ["OrderID"].AllowEditing = false;  	_grid.Cols ["ItemID"].AllowEditing = false;  	_grid.Cols ["ItemName"].AllowEditing = false;  	_grid.Cols ["MeasureCode"].AllowEditing = false;  	_grid.Cols ["MeasureName"].AllowEditing = false;  	// hide columns  	_grid.Cols ["ID"].Visible = false;  	_grid.Cols ["ItemID"].Visible = false;  	_grid.Cols ["OrderID"].Visible = false;  	_grid.Cols ["MeasureName"].Visible = false;  	_grid.Cols ["UnitPrice"].Visible = false;  	_grid.Cols ["TaxPct"].Visible = false;  	_grid.Cols ["TrxType"].Visible = true;  	_grid.Cols ["ReferenceID"].Visible = false;  	_grid.Cols ["ReferenceNo"].Visible = false;  	_grid.Cols ["ReferenceDate"].Visible = false;  	_grid.Cols ["ReferenceValue"].Visible = false;  	// number format  	_grid.Cols ["ID"].Format = "N2";  	_grid.Cols ["OrderID"].Format = "N2";  	_grid.Cols ["ItemID"].Format = "N2";  	_grid.Cols ["Quantity"].Format = "N2";  	_grid.Cols ["UnitPrice"].Format = "N2";  	_grid.Cols ["TaxPct"].Format = "N2";  	// COmbo option  	_grid.Cols ["ItemCode"].ComboList = "|...";  	// column width  	_grid.Cols ["ID"].Width = -1;  	_grid.Cols ["OrderID"].Width = -1;  	_grid.Cols ["ItemID"].Width = -1;  	_grid.Cols ["ItemCode"].Width = 120;  	_grid.Cols ["ItemName"].Width = 150;  	_grid.Cols ["Quantity"].Width = 70;  	_grid.Cols ["MeasureCode"].Width = 50;  	_grid.Cols ["MeasureName"].Width = -1;  	_grid.Cols ["UnitPrice"].Width = 80;  	_grid.Cols ["TrxType"].Width = 70;  	_grid.Cols ["TaxPct"].Width = 50;  	// transaction type  	_grid.Cols ["TrxType"].DataMap = AppHelper.TransactionTypeDataMap ();  }  catch (Exception ex) {  	Logger.ErrorRoutine (ex);  	RibbonMessageBox.Show ("ERROR Loading Data!\n" + ex.Message);  }  
Magic Number,Biruni.Inventory.Entry,frmInventoryAdjustmentEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmInventoryAdjustmentEntry.cs,InitializeForm,The following statement contains a magic number: try {  	// column headers  	_grid.Cols ["ID"].Caption = "ID";  	_grid.Cols ["OrderID"].Caption = "Order ID";  	_grid.Cols ["ItemID"].Caption = "Item ID";  	_grid.Cols ["ItemCode"].Caption = "Item Code";  	_grid.Cols ["ItemName"].Caption = "Item Name";  	_grid.Cols ["Quantity"].Caption = "Quantity";  	_grid.Cols ["MeasureCode"].Caption = "UoM";  	_grid.Cols ["MeasureName"].Caption = "Measure Name";  	_grid.Cols ["UnitPrice"].Caption = "Unit Price";  	_grid.Cols ["TrxType"].Caption = "Trx Type";  	_grid.Cols ["TaxPct"].Caption = "Tax (%)";  	// read only columns  	_grid.Cols ["ID"].AllowEditing = false;  	_grid.Cols ["OrderID"].AllowEditing = false;  	_grid.Cols ["ItemID"].AllowEditing = false;  	_grid.Cols ["ItemName"].AllowEditing = false;  	_grid.Cols ["MeasureCode"].AllowEditing = false;  	_grid.Cols ["MeasureName"].AllowEditing = false;  	// hide columns  	_grid.Cols ["ID"].Visible = false;  	_grid.Cols ["ItemID"].Visible = false;  	_grid.Cols ["OrderID"].Visible = false;  	_grid.Cols ["MeasureName"].Visible = false;  	_grid.Cols ["UnitPrice"].Visible = false;  	_grid.Cols ["TaxPct"].Visible = false;  	_grid.Cols ["TrxType"].Visible = true;  	_grid.Cols ["ReferenceID"].Visible = false;  	_grid.Cols ["ReferenceNo"].Visible = false;  	_grid.Cols ["ReferenceDate"].Visible = false;  	_grid.Cols ["ReferenceValue"].Visible = false;  	// number format  	_grid.Cols ["ID"].Format = "N2";  	_grid.Cols ["OrderID"].Format = "N2";  	_grid.Cols ["ItemID"].Format = "N2";  	_grid.Cols ["Quantity"].Format = "N2";  	_grid.Cols ["UnitPrice"].Format = "N2";  	_grid.Cols ["TaxPct"].Format = "N2";  	// COmbo option  	_grid.Cols ["ItemCode"].ComboList = "|...";  	// column width  	_grid.Cols ["ID"].Width = -1;  	_grid.Cols ["OrderID"].Width = -1;  	_grid.Cols ["ItemID"].Width = -1;  	_grid.Cols ["ItemCode"].Width = 120;  	_grid.Cols ["ItemName"].Width = 150;  	_grid.Cols ["Quantity"].Width = 70;  	_grid.Cols ["MeasureCode"].Width = 50;  	_grid.Cols ["MeasureName"].Width = -1;  	_grid.Cols ["UnitPrice"].Width = 80;  	_grid.Cols ["TrxType"].Width = 70;  	_grid.Cols ["TaxPct"].Width = 50;  	// transaction type  	_grid.Cols ["TrxType"].DataMap = AppHelper.TransactionTypeDataMap ();  }  catch (Exception ex) {  	Logger.ErrorRoutine (ex);  	RibbonMessageBox.Show ("ERROR Loading Data!\n" + ex.Message);  }  
Magic Number,Biruni.Inventory.Entry,frmInventoryAdjustmentEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmInventoryAdjustmentEntry.cs,InitializeForm,The following statement contains a magic number: try {  	// column headers  	_grid.Cols ["ID"].Caption = "ID";  	_grid.Cols ["OrderID"].Caption = "Order ID";  	_grid.Cols ["ItemID"].Caption = "Item ID";  	_grid.Cols ["ItemCode"].Caption = "Item Code";  	_grid.Cols ["ItemName"].Caption = "Item Name";  	_grid.Cols ["Quantity"].Caption = "Quantity";  	_grid.Cols ["MeasureCode"].Caption = "UoM";  	_grid.Cols ["MeasureName"].Caption = "Measure Name";  	_grid.Cols ["UnitPrice"].Caption = "Unit Price";  	_grid.Cols ["TrxType"].Caption = "Trx Type";  	_grid.Cols ["TaxPct"].Caption = "Tax (%)";  	// read only columns  	_grid.Cols ["ID"].AllowEditing = false;  	_grid.Cols ["OrderID"].AllowEditing = false;  	_grid.Cols ["ItemID"].AllowEditing = false;  	_grid.Cols ["ItemName"].AllowEditing = false;  	_grid.Cols ["MeasureCode"].AllowEditing = false;  	_grid.Cols ["MeasureName"].AllowEditing = false;  	// hide columns  	_grid.Cols ["ID"].Visible = false;  	_grid.Cols ["ItemID"].Visible = false;  	_grid.Cols ["OrderID"].Visible = false;  	_grid.Cols ["MeasureName"].Visible = false;  	_grid.Cols ["UnitPrice"].Visible = false;  	_grid.Cols ["TaxPct"].Visible = false;  	_grid.Cols ["TrxType"].Visible = true;  	_grid.Cols ["ReferenceID"].Visible = false;  	_grid.Cols ["ReferenceNo"].Visible = false;  	_grid.Cols ["ReferenceDate"].Visible = false;  	_grid.Cols ["ReferenceValue"].Visible = false;  	// number format  	_grid.Cols ["ID"].Format = "N2";  	_grid.Cols ["OrderID"].Format = "N2";  	_grid.Cols ["ItemID"].Format = "N2";  	_grid.Cols ["Quantity"].Format = "N2";  	_grid.Cols ["UnitPrice"].Format = "N2";  	_grid.Cols ["TaxPct"].Format = "N2";  	// COmbo option  	_grid.Cols ["ItemCode"].ComboList = "|...";  	// column width  	_grid.Cols ["ID"].Width = -1;  	_grid.Cols ["OrderID"].Width = -1;  	_grid.Cols ["ItemID"].Width = -1;  	_grid.Cols ["ItemCode"].Width = 120;  	_grid.Cols ["ItemName"].Width = 150;  	_grid.Cols ["Quantity"].Width = 70;  	_grid.Cols ["MeasureCode"].Width = 50;  	_grid.Cols ["MeasureName"].Width = -1;  	_grid.Cols ["UnitPrice"].Width = 80;  	_grid.Cols ["TrxType"].Width = 70;  	_grid.Cols ["TaxPct"].Width = 50;  	// transaction type  	_grid.Cols ["TrxType"].DataMap = AppHelper.TransactionTypeDataMap ();  }  catch (Exception ex) {  	Logger.ErrorRoutine (ex);  	RibbonMessageBox.Show ("ERROR Loading Data!\n" + ex.Message);  }  
Magic Number,Biruni.Inventory.Entry,frmInventoryAdjustmentEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmInventoryAdjustmentEntry.cs,InitializeForm,The following statement contains a magic number: try {  	// column headers  	_grid.Cols ["ID"].Caption = "ID";  	_grid.Cols ["OrderID"].Caption = "Order ID";  	_grid.Cols ["ItemID"].Caption = "Item ID";  	_grid.Cols ["ItemCode"].Caption = "Item Code";  	_grid.Cols ["ItemName"].Caption = "Item Name";  	_grid.Cols ["Quantity"].Caption = "Quantity";  	_grid.Cols ["MeasureCode"].Caption = "UoM";  	_grid.Cols ["MeasureName"].Caption = "Measure Name";  	_grid.Cols ["UnitPrice"].Caption = "Unit Price";  	_grid.Cols ["TrxType"].Caption = "Trx Type";  	_grid.Cols ["TaxPct"].Caption = "Tax (%)";  	// read only columns  	_grid.Cols ["ID"].AllowEditing = false;  	_grid.Cols ["OrderID"].AllowEditing = false;  	_grid.Cols ["ItemID"].AllowEditing = false;  	_grid.Cols ["ItemName"].AllowEditing = false;  	_grid.Cols ["MeasureCode"].AllowEditing = false;  	_grid.Cols ["MeasureName"].AllowEditing = false;  	// hide columns  	_grid.Cols ["ID"].Visible = false;  	_grid.Cols ["ItemID"].Visible = false;  	_grid.Cols ["OrderID"].Visible = false;  	_grid.Cols ["MeasureName"].Visible = false;  	_grid.Cols ["UnitPrice"].Visible = false;  	_grid.Cols ["TaxPct"].Visible = false;  	_grid.Cols ["TrxType"].Visible = true;  	_grid.Cols ["ReferenceID"].Visible = false;  	_grid.Cols ["ReferenceNo"].Visible = false;  	_grid.Cols ["ReferenceDate"].Visible = false;  	_grid.Cols ["ReferenceValue"].Visible = false;  	// number format  	_grid.Cols ["ID"].Format = "N2";  	_grid.Cols ["OrderID"].Format = "N2";  	_grid.Cols ["ItemID"].Format = "N2";  	_grid.Cols ["Quantity"].Format = "N2";  	_grid.Cols ["UnitPrice"].Format = "N2";  	_grid.Cols ["TaxPct"].Format = "N2";  	// COmbo option  	_grid.Cols ["ItemCode"].ComboList = "|...";  	// column width  	_grid.Cols ["ID"].Width = -1;  	_grid.Cols ["OrderID"].Width = -1;  	_grid.Cols ["ItemID"].Width = -1;  	_grid.Cols ["ItemCode"].Width = 120;  	_grid.Cols ["ItemName"].Width = 150;  	_grid.Cols ["Quantity"].Width = 70;  	_grid.Cols ["MeasureCode"].Width = 50;  	_grid.Cols ["MeasureName"].Width = -1;  	_grid.Cols ["UnitPrice"].Width = 80;  	_grid.Cols ["TrxType"].Width = 70;  	_grid.Cols ["TaxPct"].Width = 50;  	// transaction type  	_grid.Cols ["TrxType"].DataMap = AppHelper.TransactionTypeDataMap ();  }  catch (Exception ex) {  	Logger.ErrorRoutine (ex);  	RibbonMessageBox.Show ("ERROR Loading Data!\n" + ex.Message);  }  
Magic Number,Biruni.Inventory.Entry,frmInventoryAdjustmentEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmInventoryAdjustmentEntry.cs,InitializeForm,The following statement contains a magic number: try {  	// column headers  	_grid.Cols ["ID"].Caption = "ID";  	_grid.Cols ["OrderID"].Caption = "Order ID";  	_grid.Cols ["ItemID"].Caption = "Item ID";  	_grid.Cols ["ItemCode"].Caption = "Item Code";  	_grid.Cols ["ItemName"].Caption = "Item Name";  	_grid.Cols ["Quantity"].Caption = "Quantity";  	_grid.Cols ["MeasureCode"].Caption = "UoM";  	_grid.Cols ["MeasureName"].Caption = "Measure Name";  	_grid.Cols ["UnitPrice"].Caption = "Unit Price";  	_grid.Cols ["TrxType"].Caption = "Trx Type";  	_grid.Cols ["TaxPct"].Caption = "Tax (%)";  	// read only columns  	_grid.Cols ["ID"].AllowEditing = false;  	_grid.Cols ["OrderID"].AllowEditing = false;  	_grid.Cols ["ItemID"].AllowEditing = false;  	_grid.Cols ["ItemName"].AllowEditing = false;  	_grid.Cols ["MeasureCode"].AllowEditing = false;  	_grid.Cols ["MeasureName"].AllowEditing = false;  	// hide columns  	_grid.Cols ["ID"].Visible = false;  	_grid.Cols ["ItemID"].Visible = false;  	_grid.Cols ["OrderID"].Visible = false;  	_grid.Cols ["MeasureName"].Visible = false;  	_grid.Cols ["UnitPrice"].Visible = false;  	_grid.Cols ["TaxPct"].Visible = false;  	_grid.Cols ["TrxType"].Visible = true;  	_grid.Cols ["ReferenceID"].Visible = false;  	_grid.Cols ["ReferenceNo"].Visible = false;  	_grid.Cols ["ReferenceDate"].Visible = false;  	_grid.Cols ["ReferenceValue"].Visible = false;  	// number format  	_grid.Cols ["ID"].Format = "N2";  	_grid.Cols ["OrderID"].Format = "N2";  	_grid.Cols ["ItemID"].Format = "N2";  	_grid.Cols ["Quantity"].Format = "N2";  	_grid.Cols ["UnitPrice"].Format = "N2";  	_grid.Cols ["TaxPct"].Format = "N2";  	// COmbo option  	_grid.Cols ["ItemCode"].ComboList = "|...";  	// column width  	_grid.Cols ["ID"].Width = -1;  	_grid.Cols ["OrderID"].Width = -1;  	_grid.Cols ["ItemID"].Width = -1;  	_grid.Cols ["ItemCode"].Width = 120;  	_grid.Cols ["ItemName"].Width = 150;  	_grid.Cols ["Quantity"].Width = 70;  	_grid.Cols ["MeasureCode"].Width = 50;  	_grid.Cols ["MeasureName"].Width = -1;  	_grid.Cols ["UnitPrice"].Width = 80;  	_grid.Cols ["TrxType"].Width = 70;  	_grid.Cols ["TaxPct"].Width = 50;  	// transaction type  	_grid.Cols ["TrxType"].DataMap = AppHelper.TransactionTypeDataMap ();  }  catch (Exception ex) {  	Logger.ErrorRoutine (ex);  	RibbonMessageBox.Show ("ERROR Loading Data!\n" + ex.Message);  }  
Magic Number,Biruni.Inventory.Entry,frmInventoryAdjustmentEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmInventoryAdjustmentEntry.cs,InitializeForm,The following statement contains a magic number: try {  	// column headers  	_grid.Cols ["ID"].Caption = "ID";  	_grid.Cols ["OrderID"].Caption = "Order ID";  	_grid.Cols ["ItemID"].Caption = "Item ID";  	_grid.Cols ["ItemCode"].Caption = "Item Code";  	_grid.Cols ["ItemName"].Caption = "Item Name";  	_grid.Cols ["Quantity"].Caption = "Quantity";  	_grid.Cols ["MeasureCode"].Caption = "UoM";  	_grid.Cols ["MeasureName"].Caption = "Measure Name";  	_grid.Cols ["UnitPrice"].Caption = "Unit Price";  	_grid.Cols ["TrxType"].Caption = "Trx Type";  	_grid.Cols ["TaxPct"].Caption = "Tax (%)";  	// read only columns  	_grid.Cols ["ID"].AllowEditing = false;  	_grid.Cols ["OrderID"].AllowEditing = false;  	_grid.Cols ["ItemID"].AllowEditing = false;  	_grid.Cols ["ItemName"].AllowEditing = false;  	_grid.Cols ["MeasureCode"].AllowEditing = false;  	_grid.Cols ["MeasureName"].AllowEditing = false;  	// hide columns  	_grid.Cols ["ID"].Visible = false;  	_grid.Cols ["ItemID"].Visible = false;  	_grid.Cols ["OrderID"].Visible = false;  	_grid.Cols ["MeasureName"].Visible = false;  	_grid.Cols ["UnitPrice"].Visible = false;  	_grid.Cols ["TaxPct"].Visible = false;  	_grid.Cols ["TrxType"].Visible = true;  	_grid.Cols ["ReferenceID"].Visible = false;  	_grid.Cols ["ReferenceNo"].Visible = false;  	_grid.Cols ["ReferenceDate"].Visible = false;  	_grid.Cols ["ReferenceValue"].Visible = false;  	// number format  	_grid.Cols ["ID"].Format = "N2";  	_grid.Cols ["OrderID"].Format = "N2";  	_grid.Cols ["ItemID"].Format = "N2";  	_grid.Cols ["Quantity"].Format = "N2";  	_grid.Cols ["UnitPrice"].Format = "N2";  	_grid.Cols ["TaxPct"].Format = "N2";  	// COmbo option  	_grid.Cols ["ItemCode"].ComboList = "|...";  	// column width  	_grid.Cols ["ID"].Width = -1;  	_grid.Cols ["OrderID"].Width = -1;  	_grid.Cols ["ItemID"].Width = -1;  	_grid.Cols ["ItemCode"].Width = 120;  	_grid.Cols ["ItemName"].Width = 150;  	_grid.Cols ["Quantity"].Width = 70;  	_grid.Cols ["MeasureCode"].Width = 50;  	_grid.Cols ["MeasureName"].Width = -1;  	_grid.Cols ["UnitPrice"].Width = 80;  	_grid.Cols ["TrxType"].Width = 70;  	_grid.Cols ["TaxPct"].Width = 50;  	// transaction type  	_grid.Cols ["TrxType"].DataMap = AppHelper.TransactionTypeDataMap ();  }  catch (Exception ex) {  	Logger.ErrorRoutine (ex);  	RibbonMessageBox.Show ("ERROR Loading Data!\n" + ex.Message);  }  
Magic Number,Biruni.Inventory.Entry,frmInventoryAdjustmentEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmInventoryAdjustmentEntry.cs,InitializeForm,The following statement contains a magic number: _grid.Cols ["ItemCode"].Width = 120;  
Magic Number,Biruni.Inventory.Entry,frmInventoryAdjustmentEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmInventoryAdjustmentEntry.cs,InitializeForm,The following statement contains a magic number: _grid.Cols ["ItemName"].Width = 150;  
Magic Number,Biruni.Inventory.Entry,frmInventoryAdjustmentEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmInventoryAdjustmentEntry.cs,InitializeForm,The following statement contains a magic number: _grid.Cols ["Quantity"].Width = 70;  
Magic Number,Biruni.Inventory.Entry,frmInventoryAdjustmentEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmInventoryAdjustmentEntry.cs,InitializeForm,The following statement contains a magic number: _grid.Cols ["MeasureCode"].Width = 50;  
Magic Number,Biruni.Inventory.Entry,frmInventoryAdjustmentEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmInventoryAdjustmentEntry.cs,InitializeForm,The following statement contains a magic number: _grid.Cols ["UnitPrice"].Width = 80;  
Magic Number,Biruni.Inventory.Entry,frmInventoryAdjustmentEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmInventoryAdjustmentEntry.cs,InitializeForm,The following statement contains a magic number: _grid.Cols ["TrxType"].Width = 70;  
Magic Number,Biruni.Inventory.Entry,frmInventoryAdjustmentEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmInventoryAdjustmentEntry.cs,InitializeForm,The following statement contains a magic number: _grid.Cols ["TaxPct"].Width = 50;  
Magic Number,Biruni.Inventory.Entry,frmInventoryAdjustmentEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmInventoryAdjustmentEntry.cs,btnSave_Click,The following statement contains a magic number: try {  	// End editing  	BindingContext [dsCore1' "Orders"].EndCurrentEdit ();  	BindingContext [dsCore1' "OrderDetails"].EndCurrentEdit ();  	// There are changes that need to be made' so attempt to update the datasource by  	// calling the update method and passing the dataset and any parameters.  	if (txMode == DataEntryModes.Add) {  		// copy master record dari main dataset  		// harus dilakukan krena main dataset sebelumnya sudah   		// AcceptChanges padahal belum diupdate ke database   		dsChanges = new dsCore ();  		dsChanges.EnforceConstraints = false;  		dsChanges.Orders.Rows.Add (((DataRowView)this.BindingContext [dsCore1' "Orders"].Current).Row.ItemArray);  		// copy juga detail record dari main dataset  		for (int i = 0; i < dsCore1.OrderDetails.Rows.Count; i++)  			dsChanges.OrderDetails.Rows.Add (dsCore1.OrderDetails.Rows [i].ItemArray);  		// persist changes to database  		daOrders1.Update (dsChanges.Orders);  		daOrderDetails1.Update (dsChanges.OrderDetails);  		// inform user' successful  		DialogResult dr = RibbonMessageBox.Show ("Data SUCCESFULLY saved to database\n" + "Do you want to print this document?\n"' Application.ProductName' MessageBoxButtons.YesNo' MessageBoxIcon.Question);  		// ask user for voucher print  		if (dr == DialogResult.Yes) {  			Cursor = Cursors.AppStarting;  			Form fx = new frmReportViewer1 (ReportHelper1.LoadInventoryAdjustmentForm (c1TextBox1.Text));  			fx.WindowState = FormWindowState.Maximized;  			fx.ShowDialog ();  			Cursor = Cursors.Default;  		}  	}  	else {  		// persist changes to database  		daOrders1.Update (dsCore1.Orders);  		daOrderDetails1.Update (dsCore1.OrderDetails);  		// inform user for successful update  		RibbonMessageBox.Show ("Changes SUCCESFULLY saved to database"' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Information);  	}  	// success' close form  	btnClose.PerformClick ();  }  catch (SqlException ex) {  	// textfile logging  	Logger.ErrorRoutine (ex);  	// screen logging  	if (ex.Number != 2601)  		RibbonMessageBox.Show ("ERROR Saving Data: \n" + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  	else  		RibbonMessageBox.Show ("ERROR Saving Data:\n" + "Document number [" + c1TextBox1.Text + "]already existed in database\n" + "Please change this document number and try saving again."' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  }  catch (Exception ex) {  	// textfile logging  	Logger.ErrorRoutine (ex);  	// screen logging  	RibbonMessageBox.Show ("ERROR Saving Data: \n" + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  }  
Magic Number,Biruni.Inventory.Entry,frmInventoryAdjustmentEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmInventoryAdjustmentEntry.cs,btnSave_Click,The following statement contains a magic number: if (ex.Number != 2601)  	RibbonMessageBox.Show ("ERROR Saving Data: \n" + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  else  	RibbonMessageBox.Show ("ERROR Saving Data:\n" + "Document number [" + c1TextBox1.Text + "]already existed in database\n" + "Please change this document number and try saving again."' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  
Magic Number,Biruni.Inventory.Entry,frmReceivingReportEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmReceivingReportEntry.cs,InitializeData,The following statement contains a magic number: try {  	dsCore1.EnforceConstraints = false;  	dsCore2.EnforceConstraints = false;  	// set database connection  	daCurrencies1.Connection = AppHelper.GetDbConnection ();  	daCompanies1.Connection = AppHelper.GetDbConnection ();  	daItems1.Connection = AppHelper.GetDbConnection ();  	daWarehouses1.Connection = AppHelper.GetDbConnection ();  	daOrders1.Connection = AppHelper.GetDbConnection ();  	daOrderDetails1.Connection = AppHelper.GetDbConnection ();  	// lookup table  	daCompanies1.FillVendorActive (dsCore1.Companies);  	daCurrencies1.FillActive (dsCore1.Currencies);  	daOrders1.FillPurchaseBackOrders (dsCore2.Orders);  	daWarehouses1.FillActive (dsCore1.Warehouses);  	// get data  	if (id < 0) {  		// mode  		txMode = DataEntryModes.Add;  		// add new row to master table  		BindingContext [dsCore1' "Orders"].AddNew ();  		// default values for master table  		DataRowView dr = (DataRowView)this.BindingContext [dsCore1' "Orders"].Current;  		//dr["OrderNo"] = Orders.GenerateNewID(DateTime.Today.Year' ModulePrefix);  		dr ["OrderNo"] = DbHelper.GenerateNewOrderID (ModulePrefix' DateTime.Today.Year);  		dr ["OrderValue"] = 0;  		dr ["OrderType"] = ModulePrefix;  		dr ["OrderDate"] = DateTime.Today;  		dr ["RequiredDate"] = DateTime.Today.AddDays (30);  	}  	else {  		// mode  		txMode = DataEntryModes.Edit;  		// get data  		daOrders1.ClearBeforeFill = true;  		daOrders1.FillByID (dsCore1.Orders' id);  		// get details  		daOrderDetails1.ClearBeforeFill = true;  		daOrderDetails1.FillByOrderID (dsCore1.OrderDetails' id);  	}  }  catch (Exception ex) {  	Logger.ErrorRoutine (ex);  	RibbonMessageBox.Show ("ERROR Loading Data: " + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  }  
Magic Number,Biruni.Inventory.Entry,frmReceivingReportEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmReceivingReportEntry.cs,InitializeData,The following statement contains a magic number: if (id < 0) {  	// mode  	txMode = DataEntryModes.Add;  	// add new row to master table  	BindingContext [dsCore1' "Orders"].AddNew ();  	// default values for master table  	DataRowView dr = (DataRowView)this.BindingContext [dsCore1' "Orders"].Current;  	//dr["OrderNo"] = Orders.GenerateNewID(DateTime.Today.Year' ModulePrefix);  	dr ["OrderNo"] = DbHelper.GenerateNewOrderID (ModulePrefix' DateTime.Today.Year);  	dr ["OrderValue"] = 0;  	dr ["OrderType"] = ModulePrefix;  	dr ["OrderDate"] = DateTime.Today;  	dr ["RequiredDate"] = DateTime.Today.AddDays (30);  }  else {  	// mode  	txMode = DataEntryModes.Edit;  	// get data  	daOrders1.ClearBeforeFill = true;  	daOrders1.FillByID (dsCore1.Orders' id);  	// get details  	daOrderDetails1.ClearBeforeFill = true;  	daOrderDetails1.FillByOrderID (dsCore1.OrderDetails' id);  }  
Magic Number,Biruni.Inventory.Entry,frmReceivingReportEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmReceivingReportEntry.cs,InitializeData,The following statement contains a magic number: dr ["RequiredDate"] = DateTime.Today.AddDays (30);  
Magic Number,Biruni.Inventory.Entry,frmReceivingReportEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmReceivingReportEntry.cs,InitializeForm,The following statement contains a magic number: try {  	// column headers  	_grid.Cols ["ID"].Caption = "ID";  	_grid.Cols ["OrderID"].Caption = "Order ID";  	_grid.Cols ["ItemID"].Caption = "Item ID";  	_grid.Cols ["ItemCode"].Caption = "Item Code";  	_grid.Cols ["ItemName"].Caption = "Item Name";  	_grid.Cols ["Quantity"].Caption = "Quantity";  	_grid.Cols ["MeasureCode"].Caption = "UoM";  	_grid.Cols ["MeasureName"].Caption = "Measure Name";  	_grid.Cols ["UnitPrice"].Caption = "Unit Price";  	_grid.Cols ["TrxType"].Caption = "Trx Type";  	_grid.Cols ["TaxPct"].Caption = "Tax (%)";  	// read only columns  	_grid.Cols ["ID"].AllowEditing = false;  	_grid.Cols ["OrderID"].AllowEditing = false;  	_grid.Cols ["ItemID"].AllowEditing = false;  	_grid.Cols ["ItemName"].AllowEditing = false;  	_grid.Cols ["MeasureCode"].AllowEditing = false;  	_grid.Cols ["MeasureName"].AllowEditing = false;  	_grid.Cols ["Quantity"].AllowEditing = true;  	_grid.Cols ["UnitPrice"].AllowEditing = false;  	_grid.Cols ["TaxPct"].AllowEditing = false;  	// hide columns  	_grid.Cols ["ID"].Visible = false;  	_grid.Cols ["ItemID"].Visible = false;  	_grid.Cols ["OrderID"].Visible = false;  	_grid.Cols ["MeasureName"].Visible = false;  	_grid.Cols ["Quantity"].Visible = true;  	_grid.Cols ["UnitPrice"].Visible = true;  	_grid.Cols ["TaxPct"].Visible = true;  	_grid.Cols ["TrxType"].Visible = true;  	_grid.Cols ["ReferenceID"].Visible = false;  	_grid.Cols ["ReferenceNo"].Visible = false;  	_grid.Cols ["ReferenceDate"].Visible = false;  	_grid.Cols ["ReferenceValue"].Visible = false;  	// number format  	_grid.Cols ["ID"].Format = "N2";  	_grid.Cols ["OrderID"].Format = "N2";  	_grid.Cols ["ItemID"].Format = "N2";  	_grid.Cols ["Quantity"].Format = "N2";  	_grid.Cols ["UnitPrice"].Format = "N2";  	_grid.Cols ["TaxPct"].Format = "N2";  	// COmbo option  	_grid.Cols ["ItemCode"].ComboList = "|...";  	// column width  	_grid.Cols ["ID"].Width = -1;  	_grid.Cols ["OrderID"].Width = -1;  	_grid.Cols ["ItemID"].Width = -1;  	_grid.Cols ["ItemCode"].Width = 120;  	_grid.Cols ["ItemName"].Width = 150;  	_grid.Cols ["Quantity"].Width = 70;  	_grid.Cols ["MeasureCode"].Width = 50;  	_grid.Cols ["MeasureName"].Width = -1;  	_grid.Cols ["UnitPrice"].Width = 80;  	_grid.Cols ["TrxType"].Width = 70;  	_grid.Cols ["TaxPct"].Width = 50;  	// transaction type  	_grid.Cols ["TrxType"].DataMap = AppHelper.TransactionTypeDataMap ();  }  catch (Exception ex) {  	Logger.ErrorRoutine (ex);  	RibbonMessageBox.Show ("ERROR Loading Data!\n" + ex.Message);  }  
Magic Number,Biruni.Inventory.Entry,frmReceivingReportEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmReceivingReportEntry.cs,InitializeForm,The following statement contains a magic number: try {  	// column headers  	_grid.Cols ["ID"].Caption = "ID";  	_grid.Cols ["OrderID"].Caption = "Order ID";  	_grid.Cols ["ItemID"].Caption = "Item ID";  	_grid.Cols ["ItemCode"].Caption = "Item Code";  	_grid.Cols ["ItemName"].Caption = "Item Name";  	_grid.Cols ["Quantity"].Caption = "Quantity";  	_grid.Cols ["MeasureCode"].Caption = "UoM";  	_grid.Cols ["MeasureName"].Caption = "Measure Name";  	_grid.Cols ["UnitPrice"].Caption = "Unit Price";  	_grid.Cols ["TrxType"].Caption = "Trx Type";  	_grid.Cols ["TaxPct"].Caption = "Tax (%)";  	// read only columns  	_grid.Cols ["ID"].AllowEditing = false;  	_grid.Cols ["OrderID"].AllowEditing = false;  	_grid.Cols ["ItemID"].AllowEditing = false;  	_grid.Cols ["ItemName"].AllowEditing = false;  	_grid.Cols ["MeasureCode"].AllowEditing = false;  	_grid.Cols ["MeasureName"].AllowEditing = false;  	_grid.Cols ["Quantity"].AllowEditing = true;  	_grid.Cols ["UnitPrice"].AllowEditing = false;  	_grid.Cols ["TaxPct"].AllowEditing = false;  	// hide columns  	_grid.Cols ["ID"].Visible = false;  	_grid.Cols ["ItemID"].Visible = false;  	_grid.Cols ["OrderID"].Visible = false;  	_grid.Cols ["MeasureName"].Visible = false;  	_grid.Cols ["Quantity"].Visible = true;  	_grid.Cols ["UnitPrice"].Visible = true;  	_grid.Cols ["TaxPct"].Visible = true;  	_grid.Cols ["TrxType"].Visible = true;  	_grid.Cols ["ReferenceID"].Visible = false;  	_grid.Cols ["ReferenceNo"].Visible = false;  	_grid.Cols ["ReferenceDate"].Visible = false;  	_grid.Cols ["ReferenceValue"].Visible = false;  	// number format  	_grid.Cols ["ID"].Format = "N2";  	_grid.Cols ["OrderID"].Format = "N2";  	_grid.Cols ["ItemID"].Format = "N2";  	_grid.Cols ["Quantity"].Format = "N2";  	_grid.Cols ["UnitPrice"].Format = "N2";  	_grid.Cols ["TaxPct"].Format = "N2";  	// COmbo option  	_grid.Cols ["ItemCode"].ComboList = "|...";  	// column width  	_grid.Cols ["ID"].Width = -1;  	_grid.Cols ["OrderID"].Width = -1;  	_grid.Cols ["ItemID"].Width = -1;  	_grid.Cols ["ItemCode"].Width = 120;  	_grid.Cols ["ItemName"].Width = 150;  	_grid.Cols ["Quantity"].Width = 70;  	_grid.Cols ["MeasureCode"].Width = 50;  	_grid.Cols ["MeasureName"].Width = -1;  	_grid.Cols ["UnitPrice"].Width = 80;  	_grid.Cols ["TrxType"].Width = 70;  	_grid.Cols ["TaxPct"].Width = 50;  	// transaction type  	_grid.Cols ["TrxType"].DataMap = AppHelper.TransactionTypeDataMap ();  }  catch (Exception ex) {  	Logger.ErrorRoutine (ex);  	RibbonMessageBox.Show ("ERROR Loading Data!\n" + ex.Message);  }  
Magic Number,Biruni.Inventory.Entry,frmReceivingReportEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmReceivingReportEntry.cs,InitializeForm,The following statement contains a magic number: try {  	// column headers  	_grid.Cols ["ID"].Caption = "ID";  	_grid.Cols ["OrderID"].Caption = "Order ID";  	_grid.Cols ["ItemID"].Caption = "Item ID";  	_grid.Cols ["ItemCode"].Caption = "Item Code";  	_grid.Cols ["ItemName"].Caption = "Item Name";  	_grid.Cols ["Quantity"].Caption = "Quantity";  	_grid.Cols ["MeasureCode"].Caption = "UoM";  	_grid.Cols ["MeasureName"].Caption = "Measure Name";  	_grid.Cols ["UnitPrice"].Caption = "Unit Price";  	_grid.Cols ["TrxType"].Caption = "Trx Type";  	_grid.Cols ["TaxPct"].Caption = "Tax (%)";  	// read only columns  	_grid.Cols ["ID"].AllowEditing = false;  	_grid.Cols ["OrderID"].AllowEditing = false;  	_grid.Cols ["ItemID"].AllowEditing = false;  	_grid.Cols ["ItemName"].AllowEditing = false;  	_grid.Cols ["MeasureCode"].AllowEditing = false;  	_grid.Cols ["MeasureName"].AllowEditing = false;  	_grid.Cols ["Quantity"].AllowEditing = true;  	_grid.Cols ["UnitPrice"].AllowEditing = false;  	_grid.Cols ["TaxPct"].AllowEditing = false;  	// hide columns  	_grid.Cols ["ID"].Visible = false;  	_grid.Cols ["ItemID"].Visible = false;  	_grid.Cols ["OrderID"].Visible = false;  	_grid.Cols ["MeasureName"].Visible = false;  	_grid.Cols ["Quantity"].Visible = true;  	_grid.Cols ["UnitPrice"].Visible = true;  	_grid.Cols ["TaxPct"].Visible = true;  	_grid.Cols ["TrxType"].Visible = true;  	_grid.Cols ["ReferenceID"].Visible = false;  	_grid.Cols ["ReferenceNo"].Visible = false;  	_grid.Cols ["ReferenceDate"].Visible = false;  	_grid.Cols ["ReferenceValue"].Visible = false;  	// number format  	_grid.Cols ["ID"].Format = "N2";  	_grid.Cols ["OrderID"].Format = "N2";  	_grid.Cols ["ItemID"].Format = "N2";  	_grid.Cols ["Quantity"].Format = "N2";  	_grid.Cols ["UnitPrice"].Format = "N2";  	_grid.Cols ["TaxPct"].Format = "N2";  	// COmbo option  	_grid.Cols ["ItemCode"].ComboList = "|...";  	// column width  	_grid.Cols ["ID"].Width = -1;  	_grid.Cols ["OrderID"].Width = -1;  	_grid.Cols ["ItemID"].Width = -1;  	_grid.Cols ["ItemCode"].Width = 120;  	_grid.Cols ["ItemName"].Width = 150;  	_grid.Cols ["Quantity"].Width = 70;  	_grid.Cols ["MeasureCode"].Width = 50;  	_grid.Cols ["MeasureName"].Width = -1;  	_grid.Cols ["UnitPrice"].Width = 80;  	_grid.Cols ["TrxType"].Width = 70;  	_grid.Cols ["TaxPct"].Width = 50;  	// transaction type  	_grid.Cols ["TrxType"].DataMap = AppHelper.TransactionTypeDataMap ();  }  catch (Exception ex) {  	Logger.ErrorRoutine (ex);  	RibbonMessageBox.Show ("ERROR Loading Data!\n" + ex.Message);  }  
Magic Number,Biruni.Inventory.Entry,frmReceivingReportEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmReceivingReportEntry.cs,InitializeForm,The following statement contains a magic number: try {  	// column headers  	_grid.Cols ["ID"].Caption = "ID";  	_grid.Cols ["OrderID"].Caption = "Order ID";  	_grid.Cols ["ItemID"].Caption = "Item ID";  	_grid.Cols ["ItemCode"].Caption = "Item Code";  	_grid.Cols ["ItemName"].Caption = "Item Name";  	_grid.Cols ["Quantity"].Caption = "Quantity";  	_grid.Cols ["MeasureCode"].Caption = "UoM";  	_grid.Cols ["MeasureName"].Caption = "Measure Name";  	_grid.Cols ["UnitPrice"].Caption = "Unit Price";  	_grid.Cols ["TrxType"].Caption = "Trx Type";  	_grid.Cols ["TaxPct"].Caption = "Tax (%)";  	// read only columns  	_grid.Cols ["ID"].AllowEditing = false;  	_grid.Cols ["OrderID"].AllowEditing = false;  	_grid.Cols ["ItemID"].AllowEditing = false;  	_grid.Cols ["ItemName"].AllowEditing = false;  	_grid.Cols ["MeasureCode"].AllowEditing = false;  	_grid.Cols ["MeasureName"].AllowEditing = false;  	_grid.Cols ["Quantity"].AllowEditing = true;  	_grid.Cols ["UnitPrice"].AllowEditing = false;  	_grid.Cols ["TaxPct"].AllowEditing = false;  	// hide columns  	_grid.Cols ["ID"].Visible = false;  	_grid.Cols ["ItemID"].Visible = false;  	_grid.Cols ["OrderID"].Visible = false;  	_grid.Cols ["MeasureName"].Visible = false;  	_grid.Cols ["Quantity"].Visible = true;  	_grid.Cols ["UnitPrice"].Visible = true;  	_grid.Cols ["TaxPct"].Visible = true;  	_grid.Cols ["TrxType"].Visible = true;  	_grid.Cols ["ReferenceID"].Visible = false;  	_grid.Cols ["ReferenceNo"].Visible = false;  	_grid.Cols ["ReferenceDate"].Visible = false;  	_grid.Cols ["ReferenceValue"].Visible = false;  	// number format  	_grid.Cols ["ID"].Format = "N2";  	_grid.Cols ["OrderID"].Format = "N2";  	_grid.Cols ["ItemID"].Format = "N2";  	_grid.Cols ["Quantity"].Format = "N2";  	_grid.Cols ["UnitPrice"].Format = "N2";  	_grid.Cols ["TaxPct"].Format = "N2";  	// COmbo option  	_grid.Cols ["ItemCode"].ComboList = "|...";  	// column width  	_grid.Cols ["ID"].Width = -1;  	_grid.Cols ["OrderID"].Width = -1;  	_grid.Cols ["ItemID"].Width = -1;  	_grid.Cols ["ItemCode"].Width = 120;  	_grid.Cols ["ItemName"].Width = 150;  	_grid.Cols ["Quantity"].Width = 70;  	_grid.Cols ["MeasureCode"].Width = 50;  	_grid.Cols ["MeasureName"].Width = -1;  	_grid.Cols ["UnitPrice"].Width = 80;  	_grid.Cols ["TrxType"].Width = 70;  	_grid.Cols ["TaxPct"].Width = 50;  	// transaction type  	_grid.Cols ["TrxType"].DataMap = AppHelper.TransactionTypeDataMap ();  }  catch (Exception ex) {  	Logger.ErrorRoutine (ex);  	RibbonMessageBox.Show ("ERROR Loading Data!\n" + ex.Message);  }  
Magic Number,Biruni.Inventory.Entry,frmReceivingReportEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmReceivingReportEntry.cs,InitializeForm,The following statement contains a magic number: try {  	// column headers  	_grid.Cols ["ID"].Caption = "ID";  	_grid.Cols ["OrderID"].Caption = "Order ID";  	_grid.Cols ["ItemID"].Caption = "Item ID";  	_grid.Cols ["ItemCode"].Caption = "Item Code";  	_grid.Cols ["ItemName"].Caption = "Item Name";  	_grid.Cols ["Quantity"].Caption = "Quantity";  	_grid.Cols ["MeasureCode"].Caption = "UoM";  	_grid.Cols ["MeasureName"].Caption = "Measure Name";  	_grid.Cols ["UnitPrice"].Caption = "Unit Price";  	_grid.Cols ["TrxType"].Caption = "Trx Type";  	_grid.Cols ["TaxPct"].Caption = "Tax (%)";  	// read only columns  	_grid.Cols ["ID"].AllowEditing = false;  	_grid.Cols ["OrderID"].AllowEditing = false;  	_grid.Cols ["ItemID"].AllowEditing = false;  	_grid.Cols ["ItemName"].AllowEditing = false;  	_grid.Cols ["MeasureCode"].AllowEditing = false;  	_grid.Cols ["MeasureName"].AllowEditing = false;  	_grid.Cols ["Quantity"].AllowEditing = true;  	_grid.Cols ["UnitPrice"].AllowEditing = false;  	_grid.Cols ["TaxPct"].AllowEditing = false;  	// hide columns  	_grid.Cols ["ID"].Visible = false;  	_grid.Cols ["ItemID"].Visible = false;  	_grid.Cols ["OrderID"].Visible = false;  	_grid.Cols ["MeasureName"].Visible = false;  	_grid.Cols ["Quantity"].Visible = true;  	_grid.Cols ["UnitPrice"].Visible = true;  	_grid.Cols ["TaxPct"].Visible = true;  	_grid.Cols ["TrxType"].Visible = true;  	_grid.Cols ["ReferenceID"].Visible = false;  	_grid.Cols ["ReferenceNo"].Visible = false;  	_grid.Cols ["ReferenceDate"].Visible = false;  	_grid.Cols ["ReferenceValue"].Visible = false;  	// number format  	_grid.Cols ["ID"].Format = "N2";  	_grid.Cols ["OrderID"].Format = "N2";  	_grid.Cols ["ItemID"].Format = "N2";  	_grid.Cols ["Quantity"].Format = "N2";  	_grid.Cols ["UnitPrice"].Format = "N2";  	_grid.Cols ["TaxPct"].Format = "N2";  	// COmbo option  	_grid.Cols ["ItemCode"].ComboList = "|...";  	// column width  	_grid.Cols ["ID"].Width = -1;  	_grid.Cols ["OrderID"].Width = -1;  	_grid.Cols ["ItemID"].Width = -1;  	_grid.Cols ["ItemCode"].Width = 120;  	_grid.Cols ["ItemName"].Width = 150;  	_grid.Cols ["Quantity"].Width = 70;  	_grid.Cols ["MeasureCode"].Width = 50;  	_grid.Cols ["MeasureName"].Width = -1;  	_grid.Cols ["UnitPrice"].Width = 80;  	_grid.Cols ["TrxType"].Width = 70;  	_grid.Cols ["TaxPct"].Width = 50;  	// transaction type  	_grid.Cols ["TrxType"].DataMap = AppHelper.TransactionTypeDataMap ();  }  catch (Exception ex) {  	Logger.ErrorRoutine (ex);  	RibbonMessageBox.Show ("ERROR Loading Data!\n" + ex.Message);  }  
Magic Number,Biruni.Inventory.Entry,frmReceivingReportEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmReceivingReportEntry.cs,InitializeForm,The following statement contains a magic number: try {  	// column headers  	_grid.Cols ["ID"].Caption = "ID";  	_grid.Cols ["OrderID"].Caption = "Order ID";  	_grid.Cols ["ItemID"].Caption = "Item ID";  	_grid.Cols ["ItemCode"].Caption = "Item Code";  	_grid.Cols ["ItemName"].Caption = "Item Name";  	_grid.Cols ["Quantity"].Caption = "Quantity";  	_grid.Cols ["MeasureCode"].Caption = "UoM";  	_grid.Cols ["MeasureName"].Caption = "Measure Name";  	_grid.Cols ["UnitPrice"].Caption = "Unit Price";  	_grid.Cols ["TrxType"].Caption = "Trx Type";  	_grid.Cols ["TaxPct"].Caption = "Tax (%)";  	// read only columns  	_grid.Cols ["ID"].AllowEditing = false;  	_grid.Cols ["OrderID"].AllowEditing = false;  	_grid.Cols ["ItemID"].AllowEditing = false;  	_grid.Cols ["ItemName"].AllowEditing = false;  	_grid.Cols ["MeasureCode"].AllowEditing = false;  	_grid.Cols ["MeasureName"].AllowEditing = false;  	_grid.Cols ["Quantity"].AllowEditing = true;  	_grid.Cols ["UnitPrice"].AllowEditing = false;  	_grid.Cols ["TaxPct"].AllowEditing = false;  	// hide columns  	_grid.Cols ["ID"].Visible = false;  	_grid.Cols ["ItemID"].Visible = false;  	_grid.Cols ["OrderID"].Visible = false;  	_grid.Cols ["MeasureName"].Visible = false;  	_grid.Cols ["Quantity"].Visible = true;  	_grid.Cols ["UnitPrice"].Visible = true;  	_grid.Cols ["TaxPct"].Visible = true;  	_grid.Cols ["TrxType"].Visible = true;  	_grid.Cols ["ReferenceID"].Visible = false;  	_grid.Cols ["ReferenceNo"].Visible = false;  	_grid.Cols ["ReferenceDate"].Visible = false;  	_grid.Cols ["ReferenceValue"].Visible = false;  	// number format  	_grid.Cols ["ID"].Format = "N2";  	_grid.Cols ["OrderID"].Format = "N2";  	_grid.Cols ["ItemID"].Format = "N2";  	_grid.Cols ["Quantity"].Format = "N2";  	_grid.Cols ["UnitPrice"].Format = "N2";  	_grid.Cols ["TaxPct"].Format = "N2";  	// COmbo option  	_grid.Cols ["ItemCode"].ComboList = "|...";  	// column width  	_grid.Cols ["ID"].Width = -1;  	_grid.Cols ["OrderID"].Width = -1;  	_grid.Cols ["ItemID"].Width = -1;  	_grid.Cols ["ItemCode"].Width = 120;  	_grid.Cols ["ItemName"].Width = 150;  	_grid.Cols ["Quantity"].Width = 70;  	_grid.Cols ["MeasureCode"].Width = 50;  	_grid.Cols ["MeasureName"].Width = -1;  	_grid.Cols ["UnitPrice"].Width = 80;  	_grid.Cols ["TrxType"].Width = 70;  	_grid.Cols ["TaxPct"].Width = 50;  	// transaction type  	_grid.Cols ["TrxType"].DataMap = AppHelper.TransactionTypeDataMap ();  }  catch (Exception ex) {  	Logger.ErrorRoutine (ex);  	RibbonMessageBox.Show ("ERROR Loading Data!\n" + ex.Message);  }  
Magic Number,Biruni.Inventory.Entry,frmReceivingReportEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmReceivingReportEntry.cs,InitializeForm,The following statement contains a magic number: try {  	// column headers  	_grid.Cols ["ID"].Caption = "ID";  	_grid.Cols ["OrderID"].Caption = "Order ID";  	_grid.Cols ["ItemID"].Caption = "Item ID";  	_grid.Cols ["ItemCode"].Caption = "Item Code";  	_grid.Cols ["ItemName"].Caption = "Item Name";  	_grid.Cols ["Quantity"].Caption = "Quantity";  	_grid.Cols ["MeasureCode"].Caption = "UoM";  	_grid.Cols ["MeasureName"].Caption = "Measure Name";  	_grid.Cols ["UnitPrice"].Caption = "Unit Price";  	_grid.Cols ["TrxType"].Caption = "Trx Type";  	_grid.Cols ["TaxPct"].Caption = "Tax (%)";  	// read only columns  	_grid.Cols ["ID"].AllowEditing = false;  	_grid.Cols ["OrderID"].AllowEditing = false;  	_grid.Cols ["ItemID"].AllowEditing = false;  	_grid.Cols ["ItemName"].AllowEditing = false;  	_grid.Cols ["MeasureCode"].AllowEditing = false;  	_grid.Cols ["MeasureName"].AllowEditing = false;  	_grid.Cols ["Quantity"].AllowEditing = true;  	_grid.Cols ["UnitPrice"].AllowEditing = false;  	_grid.Cols ["TaxPct"].AllowEditing = false;  	// hide columns  	_grid.Cols ["ID"].Visible = false;  	_grid.Cols ["ItemID"].Visible = false;  	_grid.Cols ["OrderID"].Visible = false;  	_grid.Cols ["MeasureName"].Visible = false;  	_grid.Cols ["Quantity"].Visible = true;  	_grid.Cols ["UnitPrice"].Visible = true;  	_grid.Cols ["TaxPct"].Visible = true;  	_grid.Cols ["TrxType"].Visible = true;  	_grid.Cols ["ReferenceID"].Visible = false;  	_grid.Cols ["ReferenceNo"].Visible = false;  	_grid.Cols ["ReferenceDate"].Visible = false;  	_grid.Cols ["ReferenceValue"].Visible = false;  	// number format  	_grid.Cols ["ID"].Format = "N2";  	_grid.Cols ["OrderID"].Format = "N2";  	_grid.Cols ["ItemID"].Format = "N2";  	_grid.Cols ["Quantity"].Format = "N2";  	_grid.Cols ["UnitPrice"].Format = "N2";  	_grid.Cols ["TaxPct"].Format = "N2";  	// COmbo option  	_grid.Cols ["ItemCode"].ComboList = "|...";  	// column width  	_grid.Cols ["ID"].Width = -1;  	_grid.Cols ["OrderID"].Width = -1;  	_grid.Cols ["ItemID"].Width = -1;  	_grid.Cols ["ItemCode"].Width = 120;  	_grid.Cols ["ItemName"].Width = 150;  	_grid.Cols ["Quantity"].Width = 70;  	_grid.Cols ["MeasureCode"].Width = 50;  	_grid.Cols ["MeasureName"].Width = -1;  	_grid.Cols ["UnitPrice"].Width = 80;  	_grid.Cols ["TrxType"].Width = 70;  	_grid.Cols ["TaxPct"].Width = 50;  	// transaction type  	_grid.Cols ["TrxType"].DataMap = AppHelper.TransactionTypeDataMap ();  }  catch (Exception ex) {  	Logger.ErrorRoutine (ex);  	RibbonMessageBox.Show ("ERROR Loading Data!\n" + ex.Message);  }  
Magic Number,Biruni.Inventory.Entry,frmReceivingReportEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmReceivingReportEntry.cs,InitializeForm,The following statement contains a magic number: _grid.Cols ["ItemCode"].Width = 120;  
Magic Number,Biruni.Inventory.Entry,frmReceivingReportEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmReceivingReportEntry.cs,InitializeForm,The following statement contains a magic number: _grid.Cols ["ItemName"].Width = 150;  
Magic Number,Biruni.Inventory.Entry,frmReceivingReportEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmReceivingReportEntry.cs,InitializeForm,The following statement contains a magic number: _grid.Cols ["Quantity"].Width = 70;  
Magic Number,Biruni.Inventory.Entry,frmReceivingReportEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmReceivingReportEntry.cs,InitializeForm,The following statement contains a magic number: _grid.Cols ["MeasureCode"].Width = 50;  
Magic Number,Biruni.Inventory.Entry,frmReceivingReportEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmReceivingReportEntry.cs,InitializeForm,The following statement contains a magic number: _grid.Cols ["UnitPrice"].Width = 80;  
Magic Number,Biruni.Inventory.Entry,frmReceivingReportEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmReceivingReportEntry.cs,InitializeForm,The following statement contains a magic number: _grid.Cols ["TrxType"].Width = 70;  
Magic Number,Biruni.Inventory.Entry,frmReceivingReportEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmReceivingReportEntry.cs,InitializeForm,The following statement contains a magic number: _grid.Cols ["TaxPct"].Width = 50;  
Magic Number,Biruni.Inventory.Entry,frmReceivingReportEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmReceivingReportEntry.cs,btnSave_Click,The following statement contains a magic number: try {  	// End editing  	BindingContext [dsCore1' "Orders"].EndCurrentEdit ();  	BindingContext [dsCore1' "OrderDetails"].EndCurrentEdit ();  	// There are changes that need to be made' so attempt to update the datasource by  	// calling the update method and passing the dataset and any parameters.  	if (txMode == DataEntryModes.Add) {  		// copy master record dari main dataset  		// harus dilakukan krena main dataset sebelumnya sudah   		// AcceptChanges padahal belum diupdate ke database   		dsChanges = new dsCore ();  		dsChanges.EnforceConstraints = false;  		dsChanges.Orders.Rows.Add (((DataRowView)this.BindingContext [dsCore1' "Orders"].Current).Row.ItemArray);  		// copy juga detail record dari main dataset  		for (int i = 0; i < dsCore1.OrderDetails.Rows.Count; i++)  			dsChanges.OrderDetails.Rows.Add (dsCore1.OrderDetails.Rows [i].ItemArray);  		// persist changes to database  		daOrders1.Update (dsChanges.Orders);  		daOrderDetails1.Update (dsChanges.OrderDetails);  		// inform user' successful  		DialogResult dr = RibbonMessageBox.Show ("Data SUCCESFULLY saved to database\n" + "Do you want to print this document?\n"' Application.ProductName' MessageBoxButtons.YesNo' MessageBoxIcon.Question);  		// ask user for voucher print  		if (dr == DialogResult.Yes) {  			Cursor = Cursors.AppStarting;  			Form fx = new frmReportViewer1 (ReportHelper1.LoadReceivingReportForm (c1TextBox1.Text));  			fx.WindowState = FormWindowState.Maximized;  			fx.ShowDialog ();  			Cursor = Cursors.Default;  		}  	}  	else {  		// persist changes to database  		daOrders1.Update (dsCore1.Orders);  		daOrderDetails1.Update (dsCore1.OrderDetails);  		// inform user for successful update  		RibbonMessageBox.Show ("Changes SUCCESFULLY saved to database"' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Information);  	}  	// success' close form  	btnClose.PerformClick ();  }  catch (SqlException ex) {  	// textfile logging  	Logger.ErrorRoutine (ex);  	// screen logging  	if (ex.Number != 2601)  		RibbonMessageBox.Show ("ERROR Saving Data: \n" + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  	else  		RibbonMessageBox.Show ("ERROR Saving Data:\n" + "Document number [" + c1TextBox1.Text + "]already existed in database\n" + "Please change this document number and try saving again."' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  }  catch (Exception ex) {  	// textfile logging  	Logger.ErrorRoutine (ex);  	// screen logging  	RibbonMessageBox.Show ("ERROR Saving Data: \n" + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  }  
Magic Number,Biruni.Inventory.Entry,frmReceivingReportEntry,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\Entry\frmReceivingReportEntry.cs,btnSave_Click,The following statement contains a magic number: if (ex.Number != 2601)  	RibbonMessageBox.Show ("ERROR Saving Data: \n" + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  else  	RibbonMessageBox.Show ("ERROR Saving Data:\n" + "Document number [" + c1TextBox1.Text + "]already existed in database\n" + "Please change this document number and try saving again."' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  
Magic Number,Biruni.Inventory.List,frmDeliveryOrderList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmDeliveryOrderList.cs,btnDelete_Click,The following statement contains a magic number: try {  	string deleted = "[" + this._grid.Columns ["OrderNo"].Text + "] ";  	try {  		dr = RibbonMessageBox.Show ("Do you really want to delete data " + deleted' Application.ProductName' MessageBoxButtons.YesNo' MessageBoxIcon.Question);  		if (dr == DialogResult.Yes) {  			// delete detail record first  			// this step is necessary' or otherwise   			// trigger which update iteminventories will fail  			DataRowView dv = (DataRowView)this.BindingContext [this.dsCore1' "Orders"].Current;  			this.daOrders1.DeleteDetails ((int)dv ["ID"]);  			this.daOrders1.DeleteMaster ((int)dv ["ID"]);  			this.btnRefresh.PerformClick ();  		}  	}  	catch (SqlException ex) {  		if (ex.Number == 547)  			RibbonMessageBox.Show ("Data " + deleted + " can't be deleted because it's already used as reference"' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  		else  			RibbonMessageBox.Show ("Error deleting data\nDetails: " + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  		dsCore1.RejectChanges ();  		btnRefresh.PerformClick ();  	}  	catch (System.Exception ex) {  		RibbonMessageBox.Show ("Error deleting data\n" + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  		dsCore1.RejectChanges ();  		btnRefresh.PerformClick ();  	}  }  catch {  	RibbonMessageBox.Show ("No data selected for deletion\n"' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  }  
Magic Number,Biruni.Inventory.List,frmDeliveryOrderList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmDeliveryOrderList.cs,btnDelete_Click,The following statement contains a magic number: try {  	dr = RibbonMessageBox.Show ("Do you really want to delete data " + deleted' Application.ProductName' MessageBoxButtons.YesNo' MessageBoxIcon.Question);  	if (dr == DialogResult.Yes) {  		// delete detail record first  		// this step is necessary' or otherwise   		// trigger which update iteminventories will fail  		DataRowView dv = (DataRowView)this.BindingContext [this.dsCore1' "Orders"].Current;  		this.daOrders1.DeleteDetails ((int)dv ["ID"]);  		this.daOrders1.DeleteMaster ((int)dv ["ID"]);  		this.btnRefresh.PerformClick ();  	}  }  catch (SqlException ex) {  	if (ex.Number == 547)  		RibbonMessageBox.Show ("Data " + deleted + " can't be deleted because it's already used as reference"' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  	else  		RibbonMessageBox.Show ("Error deleting data\nDetails: " + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  	dsCore1.RejectChanges ();  	btnRefresh.PerformClick ();  }  catch (System.Exception ex) {  	RibbonMessageBox.Show ("Error deleting data\n" + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  	dsCore1.RejectChanges ();  	btnRefresh.PerformClick ();  }  
Magic Number,Biruni.Inventory.List,frmDeliveryOrderList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmDeliveryOrderList.cs,btnDelete_Click,The following statement contains a magic number: if (ex.Number == 547)  	RibbonMessageBox.Show ("Data " + deleted + " can't be deleted because it's already used as reference"' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  else  	RibbonMessageBox.Show ("Error deleting data\nDetails: " + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  
Magic Number,Biruni.Inventory.List,frmInventoryAdjustmentList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmInventoryAdjustmentList.cs,btnDelete_Click,The following statement contains a magic number: try {  	string deleted = "[" + this._grid.Columns ["OrderNo"].Text + "] ";  	try {  		dr = RibbonMessageBox.Show ("Do you really want to delete data " + deleted' Application.ProductName' MessageBoxButtons.YesNo' MessageBoxIcon.Question);  		if (dr == DialogResult.Yes) {  			// delete detail record first  			// this step is necessary' or otherwise   			// trigger which update iteminventories will fail  			DataRowView dv = (DataRowView)this.BindingContext [this.dsCore1' "Orders"].Current;  			this.daOrders1.DeleteDetails ((int)dv ["ID"]);  			this.daOrders1.DeleteMaster ((int)dv ["ID"]);  			this.btnRefresh.PerformClick ();  		}  	}  	catch (SqlException ex) {  		if (ex.Number == 547)  			RibbonMessageBox.Show ("Data " + deleted + " can't be deleted because it's already used as reference"' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  		else  			RibbonMessageBox.Show ("Error deleting data\nDetails: " + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  		dsCore1.RejectChanges ();  		btnRefresh.PerformClick ();  	}  	catch (System.Exception ex) {  		RibbonMessageBox.Show ("Error deleting data\n" + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  		dsCore1.RejectChanges ();  		btnRefresh.PerformClick ();  	}  }  catch {  	RibbonMessageBox.Show ("No data selected for deletion\n"' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  }  
Magic Number,Biruni.Inventory.List,frmInventoryAdjustmentList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmInventoryAdjustmentList.cs,btnDelete_Click,The following statement contains a magic number: try {  	dr = RibbonMessageBox.Show ("Do you really want to delete data " + deleted' Application.ProductName' MessageBoxButtons.YesNo' MessageBoxIcon.Question);  	if (dr == DialogResult.Yes) {  		// delete detail record first  		// this step is necessary' or otherwise   		// trigger which update iteminventories will fail  		DataRowView dv = (DataRowView)this.BindingContext [this.dsCore1' "Orders"].Current;  		this.daOrders1.DeleteDetails ((int)dv ["ID"]);  		this.daOrders1.DeleteMaster ((int)dv ["ID"]);  		this.btnRefresh.PerformClick ();  	}  }  catch (SqlException ex) {  	if (ex.Number == 547)  		RibbonMessageBox.Show ("Data " + deleted + " can't be deleted because it's already used as reference"' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  	else  		RibbonMessageBox.Show ("Error deleting data\nDetails: " + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  	dsCore1.RejectChanges ();  	btnRefresh.PerformClick ();  }  catch (System.Exception ex) {  	RibbonMessageBox.Show ("Error deleting data\n" + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  	dsCore1.RejectChanges ();  	btnRefresh.PerformClick ();  }  
Magic Number,Biruni.Inventory.List,frmInventoryAdjustmentList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmInventoryAdjustmentList.cs,btnDelete_Click,The following statement contains a magic number: if (ex.Number == 547)  	RibbonMessageBox.Show ("Data " + deleted + " can't be deleted because it's already used as reference"' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  else  	RibbonMessageBox.Show ("Error deleting data\nDetails: " + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  
Magic Number,Biruni.Inventory.List,frmInventoryStatus,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmInventoryStatus.cs,_grid_OwnerDrawCell,The following statement contains a magic number: if (e.Column.Name == "Progress") {  	// Create a gradient brush  	Point pt1' pt2;  	pt1 = new Point (e.CellRect.X' e.CellRect.Y);  	pt2 = new Point (e.CellRect.Right' e.CellRect.Y);  	SolidBrush solidBrush = new SolidBrush (e.Row % 2 == 0 ? _grid.EvenRowStyle.BackColor : _grid.OddRowStyle.BackColor);  	LinearGradientBrush linGrBrush = new LinearGradientBrush (pt1' pt2' Color.Cyan' Color.DarkBlue);  	RectangleF rt = new RectangleF (e.CellRect.X' e.CellRect.Y' Convert.ToInt32 (e.CellRect.Width * .7)' e.CellRect.Height);  	// Fill solid brackground  	e.Graphics.FillRectangle (solidBrush' e.CellRect);  	// Fill the cell rectangle with the gradient.   	e.Graphics.FillRectangle (linGrBrush' e.Row % 2 == 0 ? rt : e.CellRect);  	Brush whiteBR = new SolidBrush (Color.White);  	C1DisplayColumn dispCol = this._grid.Splits [0].DisplayColumns [e.Col];  	// Center the text horizontally.   	StringFormat sfmt = new StringFormat ();  	sfmt.Alignment = StringAlignment.Far;  	// Draw the text.   	e.Graphics.DrawString (dispCol.DataColumn.CellText (e.Row)' dispCol.Style.Font' whiteBR' rt' sfmt);  	whiteBR.Dispose ();  	// Let the grid know the event was handled.   	e.Handled = true;  }  
Magic Number,Biruni.Inventory.List,frmInventoryStatus,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmInventoryStatus.cs,_grid_OwnerDrawCell,The following statement contains a magic number: if (e.Column.Name == "Progress") {  	// Create a gradient brush  	Point pt1' pt2;  	pt1 = new Point (e.CellRect.X' e.CellRect.Y);  	pt2 = new Point (e.CellRect.Right' e.CellRect.Y);  	SolidBrush solidBrush = new SolidBrush (e.Row % 2 == 0 ? _grid.EvenRowStyle.BackColor : _grid.OddRowStyle.BackColor);  	LinearGradientBrush linGrBrush = new LinearGradientBrush (pt1' pt2' Color.Cyan' Color.DarkBlue);  	RectangleF rt = new RectangleF (e.CellRect.X' e.CellRect.Y' Convert.ToInt32 (e.CellRect.Width * .7)' e.CellRect.Height);  	// Fill solid brackground  	e.Graphics.FillRectangle (solidBrush' e.CellRect);  	// Fill the cell rectangle with the gradient.   	e.Graphics.FillRectangle (linGrBrush' e.Row % 2 == 0 ? rt : e.CellRect);  	Brush whiteBR = new SolidBrush (Color.White);  	C1DisplayColumn dispCol = this._grid.Splits [0].DisplayColumns [e.Col];  	// Center the text horizontally.   	StringFormat sfmt = new StringFormat ();  	sfmt.Alignment = StringAlignment.Far;  	// Draw the text.   	e.Graphics.DrawString (dispCol.DataColumn.CellText (e.Row)' dispCol.Style.Font' whiteBR' rt' sfmt);  	whiteBR.Dispose ();  	// Let the grid know the event was handled.   	e.Handled = true;  }  
Magic Number,Biruni.Inventory.List,frmInventoryStatus,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmInventoryStatus.cs,_grid_OwnerDrawCell,The following statement contains a magic number: if (e.Column.Name == "Progress") {  	// Create a gradient brush  	Point pt1' pt2;  	pt1 = new Point (e.CellRect.X' e.CellRect.Y);  	pt2 = new Point (e.CellRect.Right' e.CellRect.Y);  	SolidBrush solidBrush = new SolidBrush (e.Row % 2 == 0 ? _grid.EvenRowStyle.BackColor : _grid.OddRowStyle.BackColor);  	LinearGradientBrush linGrBrush = new LinearGradientBrush (pt1' pt2' Color.Cyan' Color.DarkBlue);  	RectangleF rt = new RectangleF (e.CellRect.X' e.CellRect.Y' Convert.ToInt32 (e.CellRect.Width * .7)' e.CellRect.Height);  	// Fill solid brackground  	e.Graphics.FillRectangle (solidBrush' e.CellRect);  	// Fill the cell rectangle with the gradient.   	e.Graphics.FillRectangle (linGrBrush' e.Row % 2 == 0 ? rt : e.CellRect);  	Brush whiteBR = new SolidBrush (Color.White);  	C1DisplayColumn dispCol = this._grid.Splits [0].DisplayColumns [e.Col];  	// Center the text horizontally.   	StringFormat sfmt = new StringFormat ();  	sfmt.Alignment = StringAlignment.Far;  	// Draw the text.   	e.Graphics.DrawString (dispCol.DataColumn.CellText (e.Row)' dispCol.Style.Font' whiteBR' rt' sfmt);  	whiteBR.Dispose ();  	// Let the grid know the event was handled.   	e.Handled = true;  }  
Magic Number,Biruni.Inventory.List,frmInventoryStatus,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmInventoryStatus.cs,_grid_OwnerDrawCell,The following statement contains a magic number: e.Graphics.FillRectangle (linGrBrush' e.Row % 2 == 0 ? rt : e.CellRect);  
Magic Number,Biruni.Inventory.List,frmReceivingReportList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmReceivingReportList.cs,btnDelete_Click,The following statement contains a magic number: try {  	string deleted = "[" + this._grid.Columns ["OrderNo"].Text + "] ";  	try {  		dr = RibbonMessageBox.Show ("Do you really want to delete data " + deleted' Application.ProductName' MessageBoxButtons.YesNo' MessageBoxIcon.Question);  		if (dr == DialogResult.Yes) {  			// delete detail record first  			// this step is necessary' or otherwise   			// trigger which update iteminventories will fail  			DataRowView dv = (DataRowView)this.BindingContext [this.dsCore1' "Orders"].Current;  			this.daOrders1.DeleteDetails ((int)dv ["ID"]);  			this.daOrders1.DeleteMaster ((int)dv ["ID"]);  			this.btnRefresh.PerformClick ();  		}  	}  	catch (SqlException ex) {  		if (ex.Number == 547)  			RibbonMessageBox.Show ("Data " + deleted + " can't be deleted because it's already used as reference"' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  		else  			RibbonMessageBox.Show ("Error deleting data\nDetails: " + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  		dsCore1.RejectChanges ();  		btnRefresh.PerformClick ();  	}  	catch (System.Exception ex) {  		RibbonMessageBox.Show ("Error deleting data\n" + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  		dsCore1.RejectChanges ();  		btnRefresh.PerformClick ();  	}  }  catch {  	RibbonMessageBox.Show ("No data selected for deletion\n"' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  }  
Magic Number,Biruni.Inventory.List,frmReceivingReportList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmReceivingReportList.cs,btnDelete_Click,The following statement contains a magic number: try {  	dr = RibbonMessageBox.Show ("Do you really want to delete data " + deleted' Application.ProductName' MessageBoxButtons.YesNo' MessageBoxIcon.Question);  	if (dr == DialogResult.Yes) {  		// delete detail record first  		// this step is necessary' or otherwise   		// trigger which update iteminventories will fail  		DataRowView dv = (DataRowView)this.BindingContext [this.dsCore1' "Orders"].Current;  		this.daOrders1.DeleteDetails ((int)dv ["ID"]);  		this.daOrders1.DeleteMaster ((int)dv ["ID"]);  		this.btnRefresh.PerformClick ();  	}  }  catch (SqlException ex) {  	if (ex.Number == 547)  		RibbonMessageBox.Show ("Data " + deleted + " can't be deleted because it's already used as reference"' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  	else  		RibbonMessageBox.Show ("Error deleting data\nDetails: " + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  	dsCore1.RejectChanges ();  	btnRefresh.PerformClick ();  }  catch (System.Exception ex) {  	RibbonMessageBox.Show ("Error deleting data\n" + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  	dsCore1.RejectChanges ();  	btnRefresh.PerformClick ();  }  
Magic Number,Biruni.Inventory.List,frmReceivingReportList,C:\repos\hidayat365_Inventory.NET\Biruni.Inventory\List\frmReceivingReportList.cs,btnDelete_Click,The following statement contains a magic number: if (ex.Number == 547)  	RibbonMessageBox.Show ("Data " + deleted + " can't be deleted because it's already used as reference"' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  else  	RibbonMessageBox.Show ("Error deleting data\nDetails: " + ex.Message' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Exclamation);  
