Implementation smell,Namespace,Class,File,Method,Description
Long Statement,DeltaEngine.Multimedia.SharpDX,SharpDXVideo,C:\repos\DeltaEngine_DeltaEngine.SharpDX\Multimedia\SharpDX\SharpDXVideo.cs,LoadData,The length of the statement  "		source = new SourceVoice ((device as XAudioDevice).XAudio' new WaveFormat (video.Samplerate' 16' video.Channels)' false); " is 121.
Long Statement,DeltaEngine.Multimedia.SharpDX,XAudioMusic,C:\repos\DeltaEngine_DeltaEngine.SharpDX\Multimedia\SharpDX\XAudioMusic.cs,TryLoadData,The length of the statement  "	source = new SourceVoice ((device as XAudioDevice).XAudio' new WaveFormat (musicStream.Samplerate' 16' musicStream.Channels)' false); " is 133.
Magic Number,DeltaEngine.Multimedia.SharpDX,SharpDXVideo,C:\repos\DeltaEngine_DeltaEngine.SharpDX\Multimedia\SharpDX\SharpDXVideo.cs,LoadData,The following statement contains a magic number: try {  	video = new VideoStreamFactory ().Load (fileData' "Content/" + Name);  	source = new SourceVoice ((device as XAudioDevice).XAudio' new WaveFormat (video.Samplerate' 16' video.Channels)' false);  }  catch (Exception ex) {  	if (Debugger.IsAttached)  		throw new VideoNotFoundOrAccessible (Name' ex);  }  
Magic Number,DeltaEngine.Multimedia.SharpDX,SharpDXVideo,C:\repos\DeltaEngine_DeltaEngine.SharpDX\Multimedia\SharpDX\SharpDXVideo.cs,LoadData,The following statement contains a magic number: source = new SourceVoice ((device as XAudioDevice).XAudio' new WaveFormat (video.Samplerate' 16' video.Channels)' false);  
Magic Number,DeltaEngine.Multimedia.SharpDX,SharpDXVideo,C:\repos\DeltaEngine_DeltaEngine.SharpDX\Multimedia\SharpDX\SharpDXVideo.cs,PutInStreamIfDataAvailable,The following statement contains a magic number: try {  	var bufferData = new byte[4096];  	video.ReadMusicBytes (bufferData' bufferData.Length);  	fixed (byte* ptr = &bufferData [0])  		currentBuffer.AudioDataPointer = (IntPtr)ptr;  	currentBuffer.AudioBytes = bufferData.Length;  	int blockAlign = video.Channels * 2;  	currentBuffer.PlayLength = bufferData.Length / blockAlign;  }  catch {  	isAbleToStream = false;  	return;  }  
Magic Number,DeltaEngine.Multimedia.SharpDX,SharpDXVideo,C:\repos\DeltaEngine_DeltaEngine.SharpDX\Multimedia\SharpDX\SharpDXVideo.cs,PutInStreamIfDataAvailable,The following statement contains a magic number: try {  	var bufferData = new byte[4096];  	video.ReadMusicBytes (bufferData' bufferData.Length);  	fixed (byte* ptr = &bufferData [0])  		currentBuffer.AudioDataPointer = (IntPtr)ptr;  	currentBuffer.AudioBytes = bufferData.Length;  	int blockAlign = video.Channels * 2;  	currentBuffer.PlayLength = bufferData.Length / blockAlign;  }  catch {  	isAbleToStream = false;  	return;  }  
Magic Number,DeltaEngine.Multimedia.SharpDX,XAudioMusic,C:\repos\DeltaEngine_DeltaEngine.SharpDX\Multimedia\SharpDX\XAudioMusic.cs,TryLoadData,The following statement contains a magic number: source = new SourceVoice ((device as XAudioDevice).XAudio' new WaveFormat (musicStream.Samplerate' 16' musicStream.Channels)' false);  
Magic Number,DeltaEngine.Multimedia.SharpDX,XAudioSound,C:\repos\DeltaEngine_DeltaEngine.SharpDX\Multimedia\SharpDX\XAudioSound.cs,PlayInstance,The following statement contains a magic number: soundInstance.SetOutputMatrix (1' 2' new[] {  	left'  	right  });  
