Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DeltaEngine.Graphics.SharpDX,SharpDXShader,C:\repos\DeltaEngine_DeltaEngine.SharpDX\Graphics\SharpDX\SharpDXShader.cs,CreateVertexDeclaration,Cyclomatic complexity of the method is 11
Complex Method,DeltaEngine.Graphics.SharpDX,SharpDXStates,C:\repos\DeltaEngine_DeltaEngine.SharpDX\Graphics\SharpDX\SharpDXStates.cs,SetupRenderTargetBlendDescriptionAccordingToTheMode,Cyclomatic complexity of the method is 15
Long Parameter List,DeltaEngine.Graphics.SharpDX,SharpDXCircularBuffer,C:\repos\DeltaEngine_DeltaEngine.SharpDX\Graphics\SharpDX\SharpDXCircularBuffer.cs,AddDataNative,The method has 5 parameters.
Long Statement,DeltaEngine.Graphics.SharpDX,SharpDXCircularBuffer,C:\repos\DeltaEngine_DeltaEngine.SharpDX\Graphics\SharpDX\SharpDXCircularBuffer.cs,DrawChunkWithoutIndices,The length of the statement  "	deviceContext.InputAssembler.SetVertexBuffers (0' new VertexBufferBinding (nativeVertexBuffer' vertexSize' chunk.FirstVertexOffsetInBytes)); " is 140.
Long Statement,DeltaEngine.Graphics.SharpDX,SharpDXShader,C:\repos\DeltaEngine_DeltaEngine.SharpDX\Graphics\SharpDX\SharpDXShader.cs,GetSamplerState,The length of the statement  "	return linearFiltering ? (tiling ? linearWrapSamplerState : linearClampSamplerState) : (tiling ? pointWrapSamplerState : pointClampSamplerState); " is 145.
Long Statement,DeltaEngine.Graphics.SharpDX,SharpDXScreenshotCapturer,C:\repos\DeltaEngine_DeltaEngine.SharpDX\Graphics\SharpDX\SharpDXScreenshotCapturer.cs,MakeScreenshot,The length of the statement  "	var rect = new Rectangle ((int)window.ViewportPixelPosition.X' (int)window.ViewportPixelPosition.Y' (int)window.ViewportPixelSize.Width' (int)window.ViewportPixelSize.Height); " is 175.
Long Statement,DeltaEngine.Graphics.SharpDX,SharpDXDevice,C:\repos\DeltaEngine_DeltaEngine.SharpDX\Graphics\SharpDX\SharpDXDevice.cs,ResizeBackBufferIfItExistedBefore,The length of the statement  "	swapChain.ResizeBuffers (SharpDXStates.BackBufferCount' Width' Height' SharpDXStates.BackBufferFormat' SharpDXStates.BackBufferFlags); " is 134.
Magic Number,DeltaEngine.Graphics.SharpDX,SharpDXShader,C:\repos\DeltaEngine_DeltaEngine.SharpDX\Graphics\SharpDX\SharpDXShader.cs,CreateShaderValuesWithBufferMustAlwaysBe16BytesAligned,The following statement contains a magic number: shaderBuffer = new SharpDXBuffer (nativeDevice' 2240' BindFlags.ConstantBuffer);  
Magic Number,DeltaEngine.Graphics.SharpDX,SharpDXShader,C:\repos\DeltaEngine_DeltaEngine.SharpDX\Graphics\SharpDX\SharpDXShader.cs,WriteMatrixToShaderBufferStream,The following statement contains a magic number: shaderStream.WriteRange (Matrix.Transpose (value).GetValues' 0' 16);  
Magic Number,DeltaEngine.Graphics.SharpDX,SharpDXShader,C:\repos\DeltaEngine_DeltaEngine.SharpDX\Graphics\SharpDX\SharpDXShader.cs,WriteJointMatricesToShaderBufferStream,The following statement contains a magic number: for (int i = 0; i < 32; i++) {  	Matrix m = i < jointMatrices.Length ? jointMatrices [i] : Matrix.Identity;  	WriteMatrixToShaderBufferStream (shaderStream' m);  }  
Magic Number,DeltaEngine.Graphics.SharpDX,SharpDXStates,C:\repos\DeltaEngine_DeltaEngine.SharpDX\Graphics\SharpDX\SharpDXStates.cs,CreateSwapChainDescription,The following statement contains a magic number: return new SwapChainDescription {  	BufferCount = BackBufferCount'  	ModeDescription = new ModeDescription (width' height' new Rational (60' 1)' BackBufferFormat)'  	IsWindowed = !settings.StartInFullscreen'  	OutputHandle = handle'  	SampleDescription = new SampleDescription (1' 0)'  	//makes some GPUs crash CreateWithSwapChain with E_INVALIDARG  	//settings.AntiAliasingSamples' settings.AntiAliasingSamples > 1 ? 1 : 0)'  	SwapEffect = SwapEffect.Discard'  	Usage = Usage.RenderTargetOutput  };  
Magic Number,DeltaEngine.Graphics.SharpDX,SharpDXImage,C:\repos\DeltaEngine_DeltaEngine.SharpDX\Graphics\SharpDX\SharpDXImage.cs,FillRgbaData,The following statement contains a magic number: if (PixelSize.Width * PixelSize.Height * 4 != rgbaColors.Length)  	throw new InvalidNumberOfBytes (PixelSize);  
