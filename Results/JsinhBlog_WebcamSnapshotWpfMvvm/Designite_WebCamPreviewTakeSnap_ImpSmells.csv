Implementation smell,Namespace,Class,File,Method,Description
Complex Method,TakeSnapsWithWebcamUsingWpfMvvm.CmdBehavior,CommandBehaviorCollection,C:\repos\JsinhBlog_WebcamSnapshotWpfMvvm\webcam-preview-takesnap\CmdBehavior\CommandBehaviorCollection.cs,OnCollectionChanged,Cyclomatic complexity of the method is 25
Complex Method,TakeSnapsWithWebcamUsingWpfMvvm.Video,WebcamDevice,C:\repos\JsinhBlog_WebcamSnapshotWpfMvvm\webcam-preview-takesnap\Video\WebcamDevice.xaml.cs,TakeSnapshotCallback,Cyclomatic complexity of the method is 12
Complex Method,TakeSnapsWithWebcamUsingWpfMvvm.Video,WebcamDevice,C:\repos\JsinhBlog_WebcamSnapshotWpfMvvm\webcam-preview-takesnap\Video\WebcamDevice.xaml.cs,InitializeVideoDevice,Cyclomatic complexity of the method is 8
Long Identifier,TakeSnapsWithWebcamUsingWpfMvvm.CmdBehavior,CommandBehaviorCollection,C:\repos\JsinhBlog_WebcamSnapshotWpfMvvm\webcam-preview-takesnap\CmdBehavior\CommandBehaviorCollection.cs,SetBehaviors,The length of the parameter behaviorBindingCollectionCasted is 31.
Long Statement,TakeSnapsWithWebcamUsingWpfMvvm.CmdBehavior,CommandBehaviorBinding,C:\repos\JsinhBlog_WebcamSnapshotWpfMvvm\webcam-preview-takesnap\CmdBehavior\CommandBehaviorBinding.cs,BindEvent,The length of the statement  "		throw new InvalidOperationException (string.Format (CultureInfo.InvariantCulture' "Could not resolve event name {0}"' this.EventName)); " is 135.
Long Statement,TakeSnapsWithWebcamUsingWpfMvvm.CmdBehavior,CommandBehaviorBinding,C:\repos\JsinhBlog_WebcamSnapshotWpfMvvm\webcam-preview-takesnap\CmdBehavior\CommandBehaviorBinding.cs,BindEvent,The length of the statement  "	this.EventHandler = EventHandlerGenerator.CreateDelegate (this.Event.EventHandlerType' typeof(CommandBehaviorBinding).GetMethod ("Execute"' BindingFlags.Public | BindingFlags.Instance)' this); " is 192.
Long Statement,TakeSnapsWithWebcamUsingWpfMvvm.Video,WebcamDevice,C:\repos\JsinhBlog_WebcamSnapshotWpfMvvm\webcam-preview-takesnap\Video\WebcamDevice.xaml.cs,TakeSnapshotCallback,The length of the statement  "			playerPoint = this.VideoSourcePlayer.PointToScreen (new Drawing.Point (this.VideoSourcePlayer.ClientRectangle.X' this.VideoSourcePlayer.ClientRectangle.Y)); " is 156.
Long Statement,TakeSnapsWithWebcamUsingWpfMvvm.Video,WebcamDevice,C:\repos\JsinhBlog_WebcamSnapshotWpfMvvm\webcam-preview-takesnap\Video\WebcamDevice.xaml.cs,TakeSnapshotCallback,The length of the statement  "			using (var bitmap = new Bitmap ((int)this.VideoSourceWindowsFormsHost.ActualWidth' (int)this.VideoSourceWindowsFormsHost.ActualHeight)) { " is 137.
Long Statement,TakeSnapsWithWebcamUsingWpfMvvm.Video,WebcamDevice,C:\repos\JsinhBlog_WebcamSnapshotWpfMvvm\webcam-preview-takesnap\Video\WebcamDevice.xaml.cs,TakeSnapshotCallback,The length of the statement  "					graphicsFromImage.CopyFromScreen (playerPoint' Drawing.Point.Empty' new Drawing.Size ((int)this.VideoSourceWindowsFormsHost.ActualWidth' (int)this.VideoSourceWindowsFormsHost.ActualHeight)); " is 190.
Long Statement,TakeSnapsWithWebcamUsingWpfMvvm.Video,WebcamDevice,C:\repos\JsinhBlog_WebcamSnapshotWpfMvvm\webcam-preview-takesnap\Video\WebcamDevice.xaml.cs,TakeSnapshotCallback,The length of the statement  "					graphicsFromImage.CopyFromScreen (playerPoint' Drawing.Point.Empty' new Drawing.Size ((int)this.VideoPreviewWidth' (int)this.VideoPreviewHeight)); " is 146.
Long Statement,TakeSnapsWithWebcamUsingWpfMvvm.Video,WebcamDevice,C:\repos\JsinhBlog_WebcamSnapshotWpfMvvm\webcam-preview-takesnap\Video\WebcamDevice.xaml.cs,TakeSnapshotCallback,The length of the statement  "		throw new InvalidOperationException ("Error occurred while trying to take snapshot from currently selected source video device"' exception); " is 140.
Long Statement,TakeSnapsWithWebcamUsingWpfMvvm.Video,WebcamDevice,C:\repos\JsinhBlog_WebcamSnapshotWpfMvvm\webcam-preview-takesnap\Video\WebcamDevice.xaml.cs,SetVideoPlayer,The length of the statement  "		this.NoVideoSourceMessage.Text = string.IsNullOrWhiteSpace (noVideoSourceMessage) ? "No video source device found" : noVideoSourceMessage; " is 138.
Magic Number,TakeSnapsWithWebcamUsingWpfMvvm.Video,WebcamDevice,C:\repos\JsinhBlog_WebcamSnapshotWpfMvvm\webcam-preview-takesnap\Video\WebcamDevice.xaml.cs,InitializeVideoDevice,The following statement contains a magic number: if (videoDeviceSourceId.StartsWith ("Message:"' StringComparison.OrdinalIgnoreCase)) {  	var splitString = videoDeviceSourceId.Split (new[] {  		':'  	}' StringSplitOptions.RemoveEmptyEntries);  	if (splitString.Length == 2) {  		this.SetVideoPlayer (false' splitString [1]);  	}  	else {  		this.SetVideoPlayer (false);  	}  }  else {  	try {  		if (!GetVideoDevices.Any (item => item.UsbId.Equals (videoDeviceSourceId))) {  			return;  		}  		this.videoCaptureDevice = new VideoCaptureDevice (videoDeviceSourceId);  		this.VideoSourcePlayer.VideoSource = this.videoCaptureDevice;  		this.VideoSourcePlayer.Start ();  		this.isVideoSourceInitialized = true;  		this.SetVideoPlayer (true);  	}  	catch (ArgumentNullException) {  		errorAction ();  	}  	catch (ArgumentException) {  		errorAction ();  	}  }  
Magic Number,TakeSnapsWithWebcamUsingWpfMvvm.Video,WebcamDevice,C:\repos\JsinhBlog_WebcamSnapshotWpfMvvm\webcam-preview-takesnap\Video\WebcamDevice.xaml.cs,InitializeVideoDevice,The following statement contains a magic number: if (splitString.Length == 2) {  	this.SetVideoPlayer (false' splitString [1]);  }  else {  	this.SetVideoPlayer (false);  }  
Magic Number,TakeSnapsWithWebcamUsingWpfMvvm.ViewModel,MainViewModel,C:\repos\JsinhBlog_WebcamSnapshotWpfMvvm\webcam-preview-takesnap\ViewModel\MainViewModel.cs,OnWindowLoaded,The following statement contains a magic number: this.VideoPreviewWidth = 320;  
Magic Number,TakeSnapsWithWebcamUsingWpfMvvm.ViewModel,MainViewModel,C:\repos\JsinhBlog_WebcamSnapshotWpfMvvm\webcam-preview-takesnap\ViewModel\MainViewModel.cs,OnWindowLoaded,The following statement contains a magic number: this.VideoPreviewHeight = 240;  
Missing Default,TakeSnapsWithWebcamUsingWpfMvvm.CmdBehavior,CommandBehaviorCollection,C:\repos\JsinhBlog_WebcamSnapshotWpfMvvm\webcam-preview-takesnap\CmdBehavior\CommandBehaviorCollection.cs,OnCollectionChanged,The following switch statement is missing a default case: switch (eventArgs.Action) {  case NotifyCollectionChangedAction.Add:  	if (eventArgs.NewItems != null) {  		foreach (BehaviorBinding item in eventArgs.NewItems) {  			item.Owner = sourceCollection.Owner;  		}  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (eventArgs.OldItems != null) {  		foreach (BehaviorBinding item in eventArgs.OldItems) {  			if (item.Behavior != null) {  				item.Behavior.Dispose ();  			}  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (eventArgs.NewItems != null) {  		foreach (BehaviorBinding item in eventArgs.NewItems) {  			item.Owner = sourceCollection.Owner;  		}  	}  	if (eventArgs.OldItems != null) {  		foreach (BehaviorBinding item in eventArgs.OldItems) {  			item.Behavior.Dispose ();  		}  	}  	break;  case NotifyCollectionChangedAction.Reset:  	if (eventArgs.OldItems != null) {  		foreach (BehaviorBinding item in eventArgs.OldItems) {  			item.Behavior.Dispose ();  		}  	}  	break;  }  
