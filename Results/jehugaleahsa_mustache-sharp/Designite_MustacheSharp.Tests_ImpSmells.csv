Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Mustache.Test,FormatCompilerTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\FormatCompilerTester.cs,TestCompile_KeyWithFormat_AppliesFormatting,The following statement contains a magic number: string result = generator.Render(new { When = new DateTime(2012' 01' 31) });
Magic Number,Mustache.Test,FormatCompilerTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\FormatCompilerTester.cs,TestCompile_KeyWithFormat_AppliesFormatting,The following statement contains a magic number: string result = generator.Render(new { When = new DateTime(2012' 01' 31) });
Magic Number,Mustache.Test,FormatCompilerTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\FormatCompilerTester.cs,TestCompile_KeyWithAlignmentAndFormat_AppliesBoth,The following statement contains a magic number: string result = generator.Render(new { When = new DateTime(2012' 01' 31) });
Magic Number,Mustache.Test,FormatCompilerTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\FormatCompilerTester.cs,TestCompile_KeyWithAlignmentAndFormat_AppliesBoth,The following statement contains a magic number: string result = generator.Render(new { When = new DateTime(2012' 01' 31) });
Magic Number,Mustache.Test,FormatCompilerTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\FormatCompilerTester.cs,TestCompile_FindsPlaceholders_ProvidesContext,The following statement contains a magic number: Assert.AreEqual(2' context.Length' "The context did not contain the right number of items.");
Magic Number,Mustache.Test,FormatCompilerTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\FormatCompilerTester.cs,TestCompile_Each_PopulatedCollection_PrintsContentForEach,The following statement contains a magic number: string result = generator.Render(new int[] { 1' 2' 3 });
Magic Number,Mustache.Test,FormatCompilerTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\FormatCompilerTester.cs,TestCompile_Each_PopulatedCollection_PrintsContentForEach,The following statement contains a magic number: string result = generator.Render(new int[] { 1' 2' 3 });
Magic Number,Mustache.Test,FormatCompilerTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\FormatCompilerTester.cs,TestCompile_Each_Index_PrintsIndexOfItem,The following statement contains a magic number: string result = generator.Render(new int[] { 1' 2' 3 });
Magic Number,Mustache.Test,FormatCompilerTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\FormatCompilerTester.cs,TestCompile_Each_Index_PrintsIndexOfItem,The following statement contains a magic number: string result = generator.Render(new int[] { 1' 2' 3 });
Magic Number,Mustache.Test,FormatCompilerTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\FormatCompilerTester.cs,TestCompile_MultipleTags,The following statement contains a magic number: string result = generator.Render(CultureInfo.GetCultureInfo("en-US")' new              {                  Customer = new { FirstName = "Bob" }'                  Order = new                  {                      Total = 7.50m'                      LineItems = new object[]                       {                          new { Name = "Banana"' UnitPrice = 2.50m' Quantity = 1 }'                          new { Name = "Orange"' UnitPrice = .50m' Quantity = 5 }'                          new { Name = "Apple"' UnitPrice = .25m' Quantity = 10 }'                      }                  }              });
Magic Number,Mustache.Test,FormatCompilerTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\FormatCompilerTester.cs,TestCompile_MultipleTags,The following statement contains a magic number: string result = generator.Render(CultureInfo.GetCultureInfo("en-US")' new              {                  Customer = new { FirstName = "Bob" }'                  Order = new                  {                      Total = 7.50m'                      LineItems = new object[]                       {                          new { Name = "Banana"' UnitPrice = 2.50m' Quantity = 1 }'                          new { Name = "Orange"' UnitPrice = .50m' Quantity = 5 }'                          new { Name = "Apple"' UnitPrice = .25m' Quantity = 10 }'                      }                  }              });
Magic Number,Mustache.Test,FormatCompilerTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\FormatCompilerTester.cs,TestCompile_MultipleTags,The following statement contains a magic number: string result = generator.Render(CultureInfo.GetCultureInfo("en-US")' new              {                  Customer = new { FirstName = "Bob" }'                  Order = new                  {                      Total = 7.50m'                      LineItems = new object[]                       {                          new { Name = "Banana"' UnitPrice = 2.50m' Quantity = 1 }'                          new { Name = "Orange"' UnitPrice = .50m' Quantity = 5 }'                          new { Name = "Apple"' UnitPrice = .25m' Quantity = 10 }'                      }                  }              });
Magic Number,Mustache.Test,FormatCompilerTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\FormatCompilerTester.cs,TestCompile_MultipleTags,The following statement contains a magic number: string result = generator.Render(CultureInfo.GetCultureInfo("en-US")' new              {                  Customer = new { FirstName = "Bob" }'                  Order = new                  {                      Total = 7.50m'                      LineItems = new object[]                       {                          new { Name = "Banana"' UnitPrice = 2.50m' Quantity = 1 }'                          new { Name = "Orange"' UnitPrice = .50m' Quantity = 5 }'                          new { Name = "Apple"' UnitPrice = .25m' Quantity = 10 }'                      }                  }              });
Magic Number,Mustache.Test,FormatCompilerTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\FormatCompilerTester.cs,TestCompile_MultipleTags,The following statement contains a magic number: string result = generator.Render(CultureInfo.GetCultureInfo("en-US")' new              {                  Customer = new { FirstName = "Bob" }'                  Order = new                  {                      Total = 7.50m'                      LineItems = new object[]                       {                          new { Name = "Banana"' UnitPrice = 2.50m' Quantity = 1 }'                          new { Name = "Orange"' UnitPrice = .50m' Quantity = 5 }'                          new { Name = "Apple"' UnitPrice = .25m' Quantity = 10 }'                      }                  }              });
Magic Number,Mustache.Test,FormatCompilerTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\FormatCompilerTester.cs,TestCompile_MultipleTags,The following statement contains a magic number: string result = generator.Render(CultureInfo.GetCultureInfo("en-US")' new              {                  Customer = new { FirstName = "Bob" }'                  Order = new                  {                      Total = 7.50m'                      LineItems = new object[]                       {                          new { Name = "Banana"' UnitPrice = 2.50m' Quantity = 1 }'                          new { Name = "Orange"' UnitPrice = .50m' Quantity = 5 }'                          new { Name = "Apple"' UnitPrice = .25m' Quantity = 10 }'                      }                  }              });
Magic Number,Mustache.Test,DefaultTagDefinition,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\FormatCompilerTester.cs,GetParameters,The following statement contains a magic number: return new TagParameter[] { new TagParameter("param") { IsRequired = false' DefaultValue = 123 } };
Magic Number,Mustache.Test,UpcastDictionaryTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\UpcastDictionaryTester.cs,ShouldNotFindKeyIfNotInWrappedDictionary_TryGetValue,The following statement contains a magic number: var source = new Dictionary<string' int>() { { "Age"' 100 } };
Magic Number,Mustache.Test,UpcastDictionaryTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\UpcastDictionaryTester.cs,ShouldReturnValuesAsObjects,The following statement contains a magic number: var source = new Dictionary<string' int>() { { "Age"' 100 }' { "Weight"' 500 } };
Magic Number,Mustache.Test,UpcastDictionaryTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\UpcastDictionaryTester.cs,ShouldReturnValuesAsObjects,The following statement contains a magic number: var source = new Dictionary<string' int>() { { "Age"' 100 }' { "Weight"' 500 } };
Magic Number,Mustache.Test,UpcastDictionaryTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\UpcastDictionaryTester.cs,ShouldNotFindKeyIfNotInWrappedDictionary_Indexer,The following statement contains a magic number: var source = new Dictionary<string' int>() { { "Age"' 100 } };
Magic Number,Mustache.Test,UpcastDictionaryTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\UpcastDictionaryTester.cs,ShouldNotFindPairIfValueWrongType,The following statement contains a magic number: var source = new Dictionary<string' int>() { { "Age"' 100 } };
Magic Number,Mustache.Test,UpcastDictionaryTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\UpcastDictionaryTester.cs,ShouldFindPairInWrappedDictionary,The following statement contains a magic number: var source = new Dictionary<string' int>() { { "Age"' 100 } };
Magic Number,Mustache.Test,UpcastDictionaryTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\UpcastDictionaryTester.cs,ShouldFindPairInWrappedDictionary,The following statement contains a magic number: bool contains = result.Contains(new KeyValuePair<string' object>("Age"' 100));
Magic Number,Mustache.Test,UpcastDictionaryTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\UpcastDictionaryTester.cs,ShouldCopyPairsToArray,The following statement contains a magic number: var source = new Dictionary<string' int>() { { "Age"' 100 }' { "Weight"' 45 } };
Magic Number,Mustache.Test,UpcastDictionaryTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\UpcastDictionaryTester.cs,ShouldCopyPairsToArray,The following statement contains a magic number: var source = new Dictionary<string' int>() { { "Age"' 100 }' { "Weight"' 45 } };
Magic Number,Mustache.Test,UpcastDictionaryTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\UpcastDictionaryTester.cs,ShouldCopyPairsToArray,The following statement contains a magic number: var array = new KeyValuePair<string' object>[2];
Magic Number,Mustache.Test,UpcastDictionaryTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\UpcastDictionaryTester.cs,ShouldCopyPairsToArray,The following statement contains a magic number: var expected = new KeyValuePair<string' object>[]              {                  new KeyValuePair<string' object>("Age"' 100)'                  new KeyValuePair<string' object>("Weight"' 45)              };
Magic Number,Mustache.Test,UpcastDictionaryTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\UpcastDictionaryTester.cs,ShouldCopyPairsToArray,The following statement contains a magic number: var expected = new KeyValuePair<string' object>[]              {                  new KeyValuePair<string' object>("Age"' 100)'                  new KeyValuePair<string' object>("Weight"' 45)              };
Magic Number,Mustache.Test,UpcastDictionaryTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\UpcastDictionaryTester.cs,ShouldGetCount,The following statement contains a magic number: var source = new Dictionary<string' int>() { { "Age"' 100 }' { "Weight"' 45 } };
Magic Number,Mustache.Test,UpcastDictionaryTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\UpcastDictionaryTester.cs,ShouldGetCount,The following statement contains a magic number: var source = new Dictionary<string' int>() { { "Age"' 100 }' { "Weight"' 45 } };
Magic Number,Mustache.Test,UpcastDictionaryTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\UpcastDictionaryTester.cs,ShouldGetEnumerator,The following statement contains a magic number: var source = new Dictionary<string' int>() { { "Age"' 100 }' { "Weight"' 45 } };
Magic Number,Mustache.Test,UpcastDictionaryTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\UpcastDictionaryTester.cs,ShouldGetEnumerator,The following statement contains a magic number: var source = new Dictionary<string' int>() { { "Age"' 100 }' { "Weight"' 45 } };
Magic Number,Mustache.Test,UpcastDictionaryTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\UpcastDictionaryTester.cs,ShouldGetEnumerator,The following statement contains a magic number: var expected = new KeyValuePair<string' object>[]              {                  new KeyValuePair<string' object>("Age"' 100)'                  new KeyValuePair<string' object>("Weight"' 45)              };
Magic Number,Mustache.Test,UpcastDictionaryTester,D:\research\architectureSmells\repos\jehugaleahsa_mustache-sharp\MustacheSharp.Tests\UpcastDictionaryTester.cs,ShouldGetEnumerator,The following statement contains a magic number: var expected = new KeyValuePair<string' object>[]              {                  new KeyValuePair<string' object>("Age"' 100)'                  new KeyValuePair<string' object>("Weight"' 45)              };
