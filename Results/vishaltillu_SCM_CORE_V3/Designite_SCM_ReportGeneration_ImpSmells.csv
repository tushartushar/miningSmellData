Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,QID_SCM_Alert_winSrcModified,ReportBAL,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportBAL.cs,GetStationWiseAWBSummary,The method has 8 parameters.
Long Parameter List,QID_SCM_Alert_winSrcModified,ReportBAL,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportBAL.cs,GetAgentWiseAWBSummary,The method has 8 parameters.
Long Statement,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,AgentPerformanceReport_Load,The length of the statement  "		string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All"; " is 150.
Long Statement,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,AgentPerformanceReport_Load,The length of the statement  "		dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus); " is 128.
Long Statement,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,AgentPerformanceReport_Load,The length of the statement  "				//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler); " is 128.
Long Statement,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,AgentPerformanceReport_Load,The length of the statement  "				string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls"; " is 176.
Long Statement,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,AgentPerformanceReport_Load,The length of the statement  "				//string filepath = "D:\\Reports\\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xls"; " is 131.
Long Statement,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,AgentPerformanceReport_Load,The length of the statement  "					bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings); " is 127.
Long Statement,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,AgentPerformanceReport_Load,The length of the statement  "					bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings); " is 125.
Long Statement,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,AgentPerformanceReport_Load,The length of the statement  "				//string  destfilepath = ConfigurationManager.AppSettings["FileLoc"].ToString() + " \\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xlsx"; " is 184.
Long Statement,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,AgentPerformanceReport_Load,The length of the statement  "                        bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);" is 120.
Long Statement,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadReport,The length of the statement  "		string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All"; " is 150.
Long Statement,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadReport,The length of the statement  "		dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus); " is 128.
Long Statement,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadReport,The length of the statement  "				//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler); " is 128.
Long Statement,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadReport,The length of the statement  "				// string filepath = "D://" + "AgentReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls"; " is 206.
Long Statement,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadReport,The length of the statement  "				string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls"; " is 176.
Long Statement,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadReport,The length of the statement  "				//string filepath = "D:\\Reports\\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xls"; " is 131.
Long Statement,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadReport,The length of the statement  "					bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings); " is 127.
Long Statement,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadReport,The length of the statement  "					bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings); " is 125.
Long Statement,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadReport,The length of the statement  "                        bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);" is 120.
Long Statement,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadCurrentDayReport,The length of the statement  "		string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All"; " is 150.
Long Statement,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadCurrentDayReport,The length of the statement  "		dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus); " is 128.
Long Statement,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadCurrentDayReport,The length of the statement  "				//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler); " is 128.
Long Statement,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadCurrentDayReport,The length of the statement  "				//  string filepath = "D://" + "AgentReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls"; " is 207.
Long Statement,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadCurrentDayReport,The length of the statement  "				string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls"; " is 176.
Long Statement,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadCurrentDayReport,The length of the statement  "					bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings); " is 127.
Long Statement,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadCurrentDayReport,The length of the statement  "					bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings); " is 125.
Long Statement,QID_SCM_Alert_winSrcModified,clsLog,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\clsLog.cs,WriteLog,The length of the statement  "	string APP_PATH = Path.GetDirectoryName (Assembly.GetExecutingAssembly ().GetModules () [0].FullyQualifiedName) + "\\" + "Alert_Log.txt"; " is 137.
Long Statement,QID_SCM_Alert_winSrcModified,ReportStation,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStation.Designer.cs,GetTypedDataSetSchema,The length of the statement  "			for (global::System.Collections.IEnumerator schemas = xs.Schemas (dsSchema.TargetNamespace).GetEnumerator (); schemas.MoveNext ();) { " is 133.
Long Statement,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,ReportStationwise_Load,The length of the statement  "		string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All"; " is 150.
Long Statement,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,ReportStationwise_Load,The length of the statement  "		dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus); " is 130.
Long Statement,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,ReportStationwise_Load,The length of the statement  "				// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler); " is 126.
Long Statement,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,ReportStationwise_Load,The length of the statement  "				string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + DateTime.Now.AddDays (-1).ToString ("dd-MM-yyyy") + "." + "xls"; " is 167.
Long Statement,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,ReportStationwise_Load,The length of the statement  "					bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings); " is 127.
Long Statement,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,ReportStationwise_Load,The length of the statement  "					bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings); " is 125.
Long Statement,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,ReportStationwise_Load,The length of the statement  "                        bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);" is 120.
Long Statement,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadStationReport,The length of the statement  "		string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All"; " is 150.
Long Statement,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadStationReport,The length of the statement  "		dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus); " is 130.
Long Statement,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadStationReport,The length of the statement  "				// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler); " is 126.
Long Statement,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadStationReport,The length of the statement  "				//  string filepath = "D://" + "Station" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls"; " is 203.
Long Statement,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadStationReport,The length of the statement  "				string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls"; " is 178.
Long Statement,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadStationReport,The length of the statement  "					bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings); " is 127.
Long Statement,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadStationReport,The length of the statement  "					bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings); " is 125.
Long Statement,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadStationReport,The length of the statement  "                        bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);" is 120.
Long Statement,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadCurrentDayStationReport,The length of the statement  "		string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All"; " is 150.
Long Statement,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadCurrentDayStationReport,The length of the statement  "		dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus); " is 130.
Long Statement,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadCurrentDayStationReport,The length of the statement  "				// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler); " is 126.
Long Statement,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadCurrentDayStationReport,The length of the statement  "				string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls"; " is 178.
Long Statement,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadCurrentDayStationReport,The length of the statement  "					bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings); " is 127.
Long Statement,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadCurrentDayStationReport,The length of the statement  "					bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings); " is 125.
Long Statement,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadCurrentDayStationReport,The length of the statement  "                        bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);" is 120.
Long Statement,QID_SCM_Alert_winSrcModified,rptAgentwiseData,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\rptAgentwiseData.Designer.cs,GetTypedDataSetSchema,The length of the statement  "			for (global::System.Collections.IEnumerator schemas = xs.Schemas (dsSchema.TargetNamespace).GetEnumerator (); schemas.MoveNext ();) { " is 133.
Long Statement,QID_SCM_Alert_winSrcModified,rptStationwiseDataset,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\rptStationwiseDataset.Designer.cs,GetTypedDataSetSchema,The length of the statement  "			for (global::System.Collections.IEnumerator schemas = xs.Schemas (dsSchema.TargetNamespace).GetEnumerator (); schemas.MoveNext ();) { " is 133.
Long Statement,QID_SCM_Alert_winSrcModified,StationwiseReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\StationwiseReport.cs,StationwiseReport_Load,The length of the statement  "		string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All"; " is 150.
Long Statement,QID_SCM_Alert_winSrcModified,StationwiseReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\StationwiseReport.cs,StationwiseReport_Load,The length of the statement  "		dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus); " is 130.
Long Statement,QID_SCM_Alert_winSrcModified,StationwiseReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\StationwiseReport.cs,StationwiseReport_Load,The length of the statement  "				reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler (ItemsSubreportProcessingEventHandler); " is 124.
Long Statement,QID_SCM_Alert_winSrcModified,StationwiseReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\StationwiseReport.cs,StationwiseReport_Load,The length of the statement  "				// string filepath = "D://" +"StationReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//"D://carreport_25-10-2010.xls"; " is 148.
Long Statement,QID_SCM_Alert_winSrcModified,StationwiseReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\StationwiseReport.cs,StationwiseReport_Load,The length of the statement  "					bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings); " is 127.
Long Statement,QID_SCM_Alert_winSrcModified,StationwiseReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\StationwiseReport.cs,StationwiseReport_Load,The length of the statement  "					bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings); " is 125.
Long Statement,QID_SCM_Alert_winSrcModified,StationwiseReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\StationwiseReport.cs,StationwiseReport_Load,The length of the statement  "                        bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);" is 120.
Empty Catch Block,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,AgentPerformanceReport_Load,The method has an empty catch block.
Empty Catch Block,QID_SCM_Alert_winSrcModified,ReportBAL,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportBAL.cs,GetStationWiseAWBSummary,The method has an empty catch block.
Empty Catch Block,QID_SCM_Alert_winSrcModified,ReportBAL,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportBAL.cs,GetAgentWiseAWBSummary,The method has an empty catch block.
Magic Number,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,AgentPerformanceReport_Load,The following statement contains a magic number: try {  	string fromdt = "01/11/2012";  	string todt = "29/11/2012";  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	//firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	//DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	AgentCode = "All";  	PaymentType = "All";  	contrLocatorCode = "All";  	level = "All";  	levelCode = "All";  	dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptAgentwiseDataset.rdlc";  			rds1.Name = "rptAgentwiseData_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			//DataSet dsShowData = showSearchCriteria(dtfrom.ToShortDateString()' dtTo.ToShortDateString());  			//dtTable2 = dsShowData.Tables[0];  			//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			//string filepath = "D:\\Reports\\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			//string  destfilepath = ConfigurationManager.AppSettings["FileLoc"].ToString() + " \\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xlsx";  			//File.re(filepath' destfilepath);  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  }  
Magic Number,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,AgentPerformanceReport_Load,The following statement contains a magic number: try {  	string fromdt = "01/11/2012";  	string todt = "29/11/2012";  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	//firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	//DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	AgentCode = "All";  	PaymentType = "All";  	contrLocatorCode = "All";  	level = "All";  	levelCode = "All";  	dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptAgentwiseDataset.rdlc";  			rds1.Name = "rptAgentwiseData_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			//DataSet dsShowData = showSearchCriteria(dtfrom.ToShortDateString()' dtTo.ToShortDateString());  			//dtTable2 = dsShowData.Tables[0];  			//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			//string filepath = "D:\\Reports\\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			//string  destfilepath = ConfigurationManager.AppSettings["FileLoc"].ToString() + " \\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xlsx";  			//File.re(filepath' destfilepath);  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  }  
Magic Number,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,AgentPerformanceReport_Load,The following statement contains a magic number: try {  	string fromdt = "01/11/2012";  	string todt = "29/11/2012";  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	//firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	//DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	AgentCode = "All";  	PaymentType = "All";  	contrLocatorCode = "All";  	level = "All";  	levelCode = "All";  	dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptAgentwiseDataset.rdlc";  			rds1.Name = "rptAgentwiseData_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			//DataSet dsShowData = showSearchCriteria(dtfrom.ToShortDateString()' dtTo.ToShortDateString());  			//dtTable2 = dsShowData.Tables[0];  			//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			//string filepath = "D:\\Reports\\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			//string  destfilepath = ConfigurationManager.AppSettings["FileLoc"].ToString() + " \\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xlsx";  			//File.re(filepath' destfilepath);  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  }  
Magic Number,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,AgentPerformanceReport_Load,The following statement contains a magic number: try {  	string fromdt = "01/11/2012";  	string todt = "29/11/2012";  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	//firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	//DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	AgentCode = "All";  	PaymentType = "All";  	contrLocatorCode = "All";  	level = "All";  	levelCode = "All";  	dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptAgentwiseDataset.rdlc";  			rds1.Name = "rptAgentwiseData_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			//DataSet dsShowData = showSearchCriteria(dtfrom.ToShortDateString()' dtTo.ToShortDateString());  			//dtTable2 = dsShowData.Tables[0];  			//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			//string filepath = "D:\\Reports\\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			//string  destfilepath = ConfigurationManager.AppSettings["FileLoc"].ToString() + " \\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xlsx";  			//File.re(filepath' destfilepath);  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  }  
Magic Number,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,AgentPerformanceReport_Load,The following statement contains a magic number: try {  	string fromdt = "01/11/2012";  	string todt = "29/11/2012";  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	//firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	//DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	AgentCode = "All";  	PaymentType = "All";  	contrLocatorCode = "All";  	level = "All";  	levelCode = "All";  	dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptAgentwiseDataset.rdlc";  			rds1.Name = "rptAgentwiseData_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			//DataSet dsShowData = showSearchCriteria(dtfrom.ToShortDateString()' dtTo.ToShortDateString());  			//dtTable2 = dsShowData.Tables[0];  			//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			//string filepath = "D:\\Reports\\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			//string  destfilepath = ConfigurationManager.AppSettings["FileLoc"].ToString() + " \\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xlsx";  			//File.re(filepath' destfilepath);  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  }  
Magic Number,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,AgentPerformanceReport_Load,The following statement contains a magic number: try {  	string fromdt = "01/11/2012";  	string todt = "29/11/2012";  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	//firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	//DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	AgentCode = "All";  	PaymentType = "All";  	contrLocatorCode = "All";  	level = "All";  	levelCode = "All";  	dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptAgentwiseDataset.rdlc";  			rds1.Name = "rptAgentwiseData_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			//DataSet dsShowData = showSearchCriteria(dtfrom.ToShortDateString()' dtTo.ToShortDateString());  			//dtTable2 = dsShowData.Tables[0];  			//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			//string filepath = "D:\\Reports\\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			//string  destfilepath = ConfigurationManager.AppSettings["FileLoc"].ToString() + " \\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xlsx";  			//File.re(filepath' destfilepath);  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  }  
Magic Number,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,AgentPerformanceReport_Load,The following statement contains a magic number: try {  	string fromdt = "01/11/2012";  	string todt = "29/11/2012";  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	//firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	//DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	AgentCode = "All";  	PaymentType = "All";  	contrLocatorCode = "All";  	level = "All";  	levelCode = "All";  	dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptAgentwiseDataset.rdlc";  			rds1.Name = "rptAgentwiseData_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			//DataSet dsShowData = showSearchCriteria(dtfrom.ToShortDateString()' dtTo.ToShortDateString());  			//dtTable2 = dsShowData.Tables[0];  			//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			//string filepath = "D:\\Reports\\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			//string  destfilepath = ConfigurationManager.AppSettings["FileLoc"].ToString() + " \\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xlsx";  			//File.re(filepath' destfilepath);  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  }  
Magic Number,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,AgentPerformanceReport_Load,The following statement contains a magic number: try {  	string fromdt = "01/11/2012";  	string todt = "29/11/2012";  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	//firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	//DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	AgentCode = "All";  	PaymentType = "All";  	contrLocatorCode = "All";  	level = "All";  	levelCode = "All";  	dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptAgentwiseDataset.rdlc";  			rds1.Name = "rptAgentwiseData_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			//DataSet dsShowData = showSearchCriteria(dtfrom.ToShortDateString()' dtTo.ToShortDateString());  			//dtTable2 = dsShowData.Tables[0];  			//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			//string filepath = "D:\\Reports\\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			//string  destfilepath = ConfigurationManager.AppSettings["FileLoc"].ToString() + " \\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xlsx";  			//File.re(filepath' destfilepath);  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  }  
Magic Number,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,AgentPerformanceReport_Load,The following statement contains a magic number: try {  	string fromdt = "01/11/2012";  	string todt = "29/11/2012";  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	//firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	//DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	AgentCode = "All";  	PaymentType = "All";  	contrLocatorCode = "All";  	level = "All";  	levelCode = "All";  	dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptAgentwiseDataset.rdlc";  			rds1.Name = "rptAgentwiseData_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			//DataSet dsShowData = showSearchCriteria(dtfrom.ToShortDateString()' dtTo.ToShortDateString());  			//dtTable2 = dsShowData.Tables[0];  			//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			//string filepath = "D:\\Reports\\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			//string  destfilepath = ConfigurationManager.AppSettings["FileLoc"].ToString() + " \\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xlsx";  			//File.re(filepath' destfilepath);  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  }  
Magic Number,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,AgentPerformanceReport_Load,The following statement contains a magic number: try {  	string fromdt = "01/11/2012";  	string todt = "29/11/2012";  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	//firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	//DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	AgentCode = "All";  	PaymentType = "All";  	contrLocatorCode = "All";  	level = "All";  	levelCode = "All";  	dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptAgentwiseDataset.rdlc";  			rds1.Name = "rptAgentwiseData_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			//DataSet dsShowData = showSearchCriteria(dtfrom.ToShortDateString()' dtTo.ToShortDateString());  			//dtTable2 = dsShowData.Tables[0];  			//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			//string filepath = "D:\\Reports\\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			//string  destfilepath = ConfigurationManager.AppSettings["FileLoc"].ToString() + " \\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xlsx";  			//File.re(filepath' destfilepath);  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  }  
Magic Number,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	//firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	//DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	AgentCode = "All";  	PaymentType = "All";  	contrLocatorCode = "All";  	level = "All";  	levelCode = "All";  	dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptAgentwiseDataset.rdlc";  			rds1.Name = "rptAgentwiseData_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			//DataSet dsShowData = showSearchCriteria(dtfrom.ToShortDateString()' dtTo.ToShortDateString());  			//dtTable2 = dsShowData.Tables[0];  			//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			// string filepath = "D://" + "AgentReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			//+ConfigurationManager.AppSettings["totime"].ToString()  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			//string filepath = "D:\\Reports\\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	//firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	//DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	AgentCode = "All";  	PaymentType = "All";  	contrLocatorCode = "All";  	level = "All";  	levelCode = "All";  	dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptAgentwiseDataset.rdlc";  			rds1.Name = "rptAgentwiseData_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			//DataSet dsShowData = showSearchCriteria(dtfrom.ToShortDateString()' dtTo.ToShortDateString());  			//dtTable2 = dsShowData.Tables[0];  			//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			// string filepath = "D://" + "AgentReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			//+ConfigurationManager.AppSettings["totime"].ToString()  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			//string filepath = "D:\\Reports\\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	//firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	//DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	AgentCode = "All";  	PaymentType = "All";  	contrLocatorCode = "All";  	level = "All";  	levelCode = "All";  	dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptAgentwiseDataset.rdlc";  			rds1.Name = "rptAgentwiseData_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			//DataSet dsShowData = showSearchCriteria(dtfrom.ToShortDateString()' dtTo.ToShortDateString());  			//dtTable2 = dsShowData.Tables[0];  			//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			// string filepath = "D://" + "AgentReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			//+ConfigurationManager.AppSettings["totime"].ToString()  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			//string filepath = "D:\\Reports\\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	//firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	//DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	AgentCode = "All";  	PaymentType = "All";  	contrLocatorCode = "All";  	level = "All";  	levelCode = "All";  	dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptAgentwiseDataset.rdlc";  			rds1.Name = "rptAgentwiseData_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			//DataSet dsShowData = showSearchCriteria(dtfrom.ToShortDateString()' dtTo.ToShortDateString());  			//dtTable2 = dsShowData.Tables[0];  			//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			// string filepath = "D://" + "AgentReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			//+ConfigurationManager.AppSettings["totime"].ToString()  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			//string filepath = "D:\\Reports\\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	//firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	//DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	AgentCode = "All";  	PaymentType = "All";  	contrLocatorCode = "All";  	level = "All";  	levelCode = "All";  	dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptAgentwiseDataset.rdlc";  			rds1.Name = "rptAgentwiseData_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			//DataSet dsShowData = showSearchCriteria(dtfrom.ToShortDateString()' dtTo.ToShortDateString());  			//dtTable2 = dsShowData.Tables[0];  			//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			// string filepath = "D://" + "AgentReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			//+ConfigurationManager.AppSettings["totime"].ToString()  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			//string filepath = "D:\\Reports\\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	//firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	//DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	AgentCode = "All";  	PaymentType = "All";  	contrLocatorCode = "All";  	level = "All";  	levelCode = "All";  	dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptAgentwiseDataset.rdlc";  			rds1.Name = "rptAgentwiseData_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			//DataSet dsShowData = showSearchCriteria(dtfrom.ToShortDateString()' dtTo.ToShortDateString());  			//dtTable2 = dsShowData.Tables[0];  			//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			// string filepath = "D://" + "AgentReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			//+ConfigurationManager.AppSettings["totime"].ToString()  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			//string filepath = "D:\\Reports\\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	//firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	//DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	AgentCode = "All";  	PaymentType = "All";  	contrLocatorCode = "All";  	level = "All";  	levelCode = "All";  	dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptAgentwiseDataset.rdlc";  			rds1.Name = "rptAgentwiseData_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			//DataSet dsShowData = showSearchCriteria(dtfrom.ToShortDateString()' dtTo.ToShortDateString());  			//dtTable2 = dsShowData.Tables[0];  			//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			// string filepath = "D://" + "AgentReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			//+ConfigurationManager.AppSettings["totime"].ToString()  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			//string filepath = "D:\\Reports\\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	//firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	//DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	AgentCode = "All";  	PaymentType = "All";  	contrLocatorCode = "All";  	level = "All";  	levelCode = "All";  	dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptAgentwiseDataset.rdlc";  			rds1.Name = "rptAgentwiseData_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			//DataSet dsShowData = showSearchCriteria(dtfrom.ToShortDateString()' dtTo.ToShortDateString());  			//dtTable2 = dsShowData.Tables[0];  			//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			// string filepath = "D://" + "AgentReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			//+ConfigurationManager.AppSettings["totime"].ToString()  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			//string filepath = "D:\\Reports\\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	//firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	//DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	AgentCode = "All";  	PaymentType = "All";  	contrLocatorCode = "All";  	level = "All";  	levelCode = "All";  	dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptAgentwiseDataset.rdlc";  			rds1.Name = "rptAgentwiseData_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			//DataSet dsShowData = showSearchCriteria(dtfrom.ToShortDateString()' dtTo.ToShortDateString());  			//dtTable2 = dsShowData.Tables[0];  			//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			// string filepath = "D://" + "AgentReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			//+ConfigurationManager.AppSettings["totime"].ToString()  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			//string filepath = "D:\\Reports\\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	//firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	//DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	AgentCode = "All";  	PaymentType = "All";  	contrLocatorCode = "All";  	level = "All";  	levelCode = "All";  	dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptAgentwiseDataset.rdlc";  			rds1.Name = "rptAgentwiseData_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			//DataSet dsShowData = showSearchCriteria(dtfrom.ToShortDateString()' dtTo.ToShortDateString());  			//dtTable2 = dsShowData.Tables[0];  			//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			// string filepath = "D://" + "AgentReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			//+ConfigurationManager.AppSettings["totime"].ToString()  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			//string filepath = "D:\\Reports\\" + "AgentReport" + "_" + fromdt.Replace('/'' '-') + "To" + todt.Replace('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadCurrentDayReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	//firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	//DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	AgentCode = "All";  	PaymentType = "All";  	contrLocatorCode = "All";  	level = "All";  	levelCode = "All";  	dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptAgentwiseDataset.rdlc";  			rds1.Name = "rptAgentwiseData_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			//DataSet dsShowData = showSearchCriteria(dtfrom.ToShortDateString()' dtTo.ToShortDateString());  			//dtTable2 = dsShowData.Tables[0];  			//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			//  string filepath = "D://" + "AgentReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadCurrentDayReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	//firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	//DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	AgentCode = "All";  	PaymentType = "All";  	contrLocatorCode = "All";  	level = "All";  	levelCode = "All";  	dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptAgentwiseDataset.rdlc";  			rds1.Name = "rptAgentwiseData_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			//DataSet dsShowData = showSearchCriteria(dtfrom.ToShortDateString()' dtTo.ToShortDateString());  			//dtTable2 = dsShowData.Tables[0];  			//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			//  string filepath = "D://" + "AgentReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadCurrentDayReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	//firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	//DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	AgentCode = "All";  	PaymentType = "All";  	contrLocatorCode = "All";  	level = "All";  	levelCode = "All";  	dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptAgentwiseDataset.rdlc";  			rds1.Name = "rptAgentwiseData_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			//DataSet dsShowData = showSearchCriteria(dtfrom.ToShortDateString()' dtTo.ToShortDateString());  			//dtTable2 = dsShowData.Tables[0];  			//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			//  string filepath = "D://" + "AgentReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadCurrentDayReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	//firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	//DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	AgentCode = "All";  	PaymentType = "All";  	contrLocatorCode = "All";  	level = "All";  	levelCode = "All";  	dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptAgentwiseDataset.rdlc";  			rds1.Name = "rptAgentwiseData_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			//DataSet dsShowData = showSearchCriteria(dtfrom.ToShortDateString()' dtTo.ToShortDateString());  			//dtTable2 = dsShowData.Tables[0];  			//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			//  string filepath = "D://" + "AgentReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadCurrentDayReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	//firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	//DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	AgentCode = "All";  	PaymentType = "All";  	contrLocatorCode = "All";  	level = "All";  	levelCode = "All";  	dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptAgentwiseDataset.rdlc";  			rds1.Name = "rptAgentwiseData_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			//DataSet dsShowData = showSearchCriteria(dtfrom.ToShortDateString()' dtTo.ToShortDateString());  			//dtTable2 = dsShowData.Tables[0];  			//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			//  string filepath = "D://" + "AgentReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadCurrentDayReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	//firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	//DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	AgentCode = "All";  	PaymentType = "All";  	contrLocatorCode = "All";  	level = "All";  	levelCode = "All";  	dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptAgentwiseDataset.rdlc";  			rds1.Name = "rptAgentwiseData_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			//DataSet dsShowData = showSearchCriteria(dtfrom.ToShortDateString()' dtTo.ToShortDateString());  			//dtTable2 = dsShowData.Tables[0];  			//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			//  string filepath = "D://" + "AgentReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadCurrentDayReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	//firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	//DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	AgentCode = "All";  	PaymentType = "All";  	contrLocatorCode = "All";  	level = "All";  	levelCode = "All";  	dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptAgentwiseDataset.rdlc";  			rds1.Name = "rptAgentwiseData_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			//DataSet dsShowData = showSearchCriteria(dtfrom.ToShortDateString()' dtTo.ToShortDateString());  			//dtTable2 = dsShowData.Tables[0];  			//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			//  string filepath = "D://" + "AgentReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadCurrentDayReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	//firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	//DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	AgentCode = "All";  	PaymentType = "All";  	contrLocatorCode = "All";  	level = "All";  	levelCode = "All";  	dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptAgentwiseDataset.rdlc";  			rds1.Name = "rptAgentwiseData_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			//DataSet dsShowData = showSearchCriteria(dtfrom.ToShortDateString()' dtTo.ToShortDateString());  			//dtTable2 = dsShowData.Tables[0];  			//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			//  string filepath = "D://" + "AgentReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadCurrentDayReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	//firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	//DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	AgentCode = "All";  	PaymentType = "All";  	contrLocatorCode = "All";  	level = "All";  	levelCode = "All";  	dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptAgentwiseDataset.rdlc";  			rds1.Name = "rptAgentwiseData_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			//DataSet dsShowData = showSearchCriteria(dtfrom.ToShortDateString()' dtTo.ToShortDateString());  			//dtTable2 = dsShowData.Tables[0];  			//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			//  string filepath = "D://" + "AgentReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,AgentPerformanceReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\AgentPerformanceReport.cs,LoadCurrentDayReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	//firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	//DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	AgentCode = "All";  	PaymentType = "All";  	contrLocatorCode = "All";  	level = "All";  	levelCode = "All";  	dsData = objReport.GetAgentWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptAgentwiseDataset.rdlc";  			rds1.Name = "rptAgentwiseData_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			//DataSet dsShowData = showSearchCriteria(dtfrom.ToShortDateString()' dtTo.ToShortDateString());  			//dtTable2 = dsShowData.Tables[0];  			//   reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			//  string filepath = "D://" + "AgentReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Agent" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportBAL,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportBAL.cs,GetStationWiseAWBSummary,The following statement contains a magic number: try {  	string[] colNames = new string[8];  	object[] values = new object[8];  	SqlDbType[] dataTypes = new SqlDbType[8];  	int i = 0;  	colNames.SetValue ("agentCode"' i);  	values.SetValue (AgentCode' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	i++;  	colNames.SetValue ("paymentType"' i);  	values.SetValue (PaymentType' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	i++;  	colNames.SetValue ("contrLocatorCode"' i);  	values.SetValue (contrLocatorCode' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	i++;  	colNames.SetValue ("level"' i);  	values.SetValue (level' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	i++;  	colNames.SetValue ("lveleCode"' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	values.SetValue (levelCode' i);  	i++;  	colNames.SetValue ("frmDate"' i);  	dataTypes.SetValue (SqlDbType.DateTime' i);  	values.SetValue (frmDate' i);  	i++;  	colNames.SetValue ("toDate"' i);  	dataTypes.SetValue (SqlDbType.DateTime' i);  	values.SetValue (ToDt' i);  	i++;  	colNames.SetValue ("AWBStatus"' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	values.SetValue (AWBstatus' i);  	DataSet ds = db.SelectRecords ("Sp_rptGetAWBStationwiseReport"' colNames' values' dataTypes);  	if (ds != null) {  		if (ds.Tables != null) {  			if (ds.Tables.Count > 0) {  				return (ds);  			}  		}  	}  }  catch (Exception) {  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportBAL,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportBAL.cs,GetStationWiseAWBSummary,The following statement contains a magic number: try {  	string[] colNames = new string[8];  	object[] values = new object[8];  	SqlDbType[] dataTypes = new SqlDbType[8];  	int i = 0;  	colNames.SetValue ("agentCode"' i);  	values.SetValue (AgentCode' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	i++;  	colNames.SetValue ("paymentType"' i);  	values.SetValue (PaymentType' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	i++;  	colNames.SetValue ("contrLocatorCode"' i);  	values.SetValue (contrLocatorCode' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	i++;  	colNames.SetValue ("level"' i);  	values.SetValue (level' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	i++;  	colNames.SetValue ("lveleCode"' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	values.SetValue (levelCode' i);  	i++;  	colNames.SetValue ("frmDate"' i);  	dataTypes.SetValue (SqlDbType.DateTime' i);  	values.SetValue (frmDate' i);  	i++;  	colNames.SetValue ("toDate"' i);  	dataTypes.SetValue (SqlDbType.DateTime' i);  	values.SetValue (ToDt' i);  	i++;  	colNames.SetValue ("AWBStatus"' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	values.SetValue (AWBstatus' i);  	DataSet ds = db.SelectRecords ("Sp_rptGetAWBStationwiseReport"' colNames' values' dataTypes);  	if (ds != null) {  		if (ds.Tables != null) {  			if (ds.Tables.Count > 0) {  				return (ds);  			}  		}  	}  }  catch (Exception) {  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportBAL,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportBAL.cs,GetStationWiseAWBSummary,The following statement contains a magic number: try {  	string[] colNames = new string[8];  	object[] values = new object[8];  	SqlDbType[] dataTypes = new SqlDbType[8];  	int i = 0;  	colNames.SetValue ("agentCode"' i);  	values.SetValue (AgentCode' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	i++;  	colNames.SetValue ("paymentType"' i);  	values.SetValue (PaymentType' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	i++;  	colNames.SetValue ("contrLocatorCode"' i);  	values.SetValue (contrLocatorCode' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	i++;  	colNames.SetValue ("level"' i);  	values.SetValue (level' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	i++;  	colNames.SetValue ("lveleCode"' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	values.SetValue (levelCode' i);  	i++;  	colNames.SetValue ("frmDate"' i);  	dataTypes.SetValue (SqlDbType.DateTime' i);  	values.SetValue (frmDate' i);  	i++;  	colNames.SetValue ("toDate"' i);  	dataTypes.SetValue (SqlDbType.DateTime' i);  	values.SetValue (ToDt' i);  	i++;  	colNames.SetValue ("AWBStatus"' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	values.SetValue (AWBstatus' i);  	DataSet ds = db.SelectRecords ("Sp_rptGetAWBStationwiseReport"' colNames' values' dataTypes);  	if (ds != null) {  		if (ds.Tables != null) {  			if (ds.Tables.Count > 0) {  				return (ds);  			}  		}  	}  }  catch (Exception) {  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportBAL,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportBAL.cs,GetAgentWiseAWBSummary,The following statement contains a magic number: try {  	string[] colNames = new string[8];  	object[] values = new object[8];  	SqlDbType[] dataTypes = new SqlDbType[8];  	int i = 0;  	colNames.SetValue ("agentCode"' i);  	values.SetValue (AgentCode' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	i++;  	colNames.SetValue ("paymentType"' i);  	values.SetValue (PaymentType' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	i++;  	colNames.SetValue ("contrLocatorCode"' i);  	values.SetValue (contrLocatorCode' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	i++;  	colNames.SetValue ("level"' i);  	values.SetValue (level' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	i++;  	colNames.SetValue ("lveleCode"' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	values.SetValue (levelCode' i);  	i++;  	colNames.SetValue ("frmDate"' i);  	dataTypes.SetValue (SqlDbType.DateTime' i);  	values.SetValue (frmDate' i);  	i++;  	colNames.SetValue ("toDate"' i);  	dataTypes.SetValue (SqlDbType.DateTime' i);  	values.SetValue (ToDt' i);  	i++;  	colNames.SetValue ("AWBStatus"' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	values.SetValue (AWBstatus' i);  	DataSet ds = db.SelectRecords ("Sp_rptGetAWBAgentwiseReport"' colNames' values' dataTypes);  	if (ds != null) {  		if (ds.Tables != null) {  			if (ds.Tables.Count > 0) {  				return (ds);  			}  		}  	}  }  catch (Exception) {  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportBAL,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportBAL.cs,GetAgentWiseAWBSummary,The following statement contains a magic number: try {  	string[] colNames = new string[8];  	object[] values = new object[8];  	SqlDbType[] dataTypes = new SqlDbType[8];  	int i = 0;  	colNames.SetValue ("agentCode"' i);  	values.SetValue (AgentCode' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	i++;  	colNames.SetValue ("paymentType"' i);  	values.SetValue (PaymentType' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	i++;  	colNames.SetValue ("contrLocatorCode"' i);  	values.SetValue (contrLocatorCode' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	i++;  	colNames.SetValue ("level"' i);  	values.SetValue (level' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	i++;  	colNames.SetValue ("lveleCode"' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	values.SetValue (levelCode' i);  	i++;  	colNames.SetValue ("frmDate"' i);  	dataTypes.SetValue (SqlDbType.DateTime' i);  	values.SetValue (frmDate' i);  	i++;  	colNames.SetValue ("toDate"' i);  	dataTypes.SetValue (SqlDbType.DateTime' i);  	values.SetValue (ToDt' i);  	i++;  	colNames.SetValue ("AWBStatus"' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	values.SetValue (AWBstatus' i);  	DataSet ds = db.SelectRecords ("Sp_rptGetAWBAgentwiseReport"' colNames' values' dataTypes);  	if (ds != null) {  		if (ds.Tables != null) {  			if (ds.Tables.Count > 0) {  				return (ds);  			}  		}  	}  }  catch (Exception) {  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportBAL,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportBAL.cs,GetAgentWiseAWBSummary,The following statement contains a magic number: try {  	string[] colNames = new string[8];  	object[] values = new object[8];  	SqlDbType[] dataTypes = new SqlDbType[8];  	int i = 0;  	colNames.SetValue ("agentCode"' i);  	values.SetValue (AgentCode' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	i++;  	colNames.SetValue ("paymentType"' i);  	values.SetValue (PaymentType' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	i++;  	colNames.SetValue ("contrLocatorCode"' i);  	values.SetValue (contrLocatorCode' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	i++;  	colNames.SetValue ("level"' i);  	values.SetValue (level' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	i++;  	colNames.SetValue ("lveleCode"' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	values.SetValue (levelCode' i);  	i++;  	colNames.SetValue ("frmDate"' i);  	dataTypes.SetValue (SqlDbType.DateTime' i);  	values.SetValue (frmDate' i);  	i++;  	colNames.SetValue ("toDate"' i);  	dataTypes.SetValue (SqlDbType.DateTime' i);  	values.SetValue (ToDt' i);  	i++;  	colNames.SetValue ("AWBStatus"' i);  	dataTypes.SetValue (SqlDbType.VarChar' i);  	values.SetValue (AWBstatus' i);  	DataSet ds = db.SelectRecords ("Sp_rptGetAWBAgentwiseReport"' colNames' values' dataTypes);  	if (ds != null) {  		if (ds.Tables != null) {  			if (ds.Tables.Count > 0) {  				return (ds);  			}  		}  	}  }  catch (Exception) {  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,ReportStationwise_Load,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	//strfromdate = "01/10/2012"; //strfrom;  	//strtodate = "15/10/2012";  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = firstDay.ToString ("dd/MM/yyyy");  	//strfrom;  	strtodate = DateTime.Now.AddDays (-1).ToString ("dd/MM/yyyy");  	ToDt = strtodate;  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "rptStationwiseDataset_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			DataSet ds = new DataSet ();  			ds = showSearchCriteria (dtfrom.ToShortDateString ()' dtTo.ToShortDateString ());  			dtTable2 = ds.Tables [0];  			// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + DateTime.Now.AddDays (-1).ToString ("dd-MM-yyyy") + "." + "xls";  			//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,ReportStationwise_Load,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	//strfromdate = "01/10/2012"; //strfrom;  	//strtodate = "15/10/2012";  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = firstDay.ToString ("dd/MM/yyyy");  	//strfrom;  	strtodate = DateTime.Now.AddDays (-1).ToString ("dd/MM/yyyy");  	ToDt = strtodate;  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "rptStationwiseDataset_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			DataSet ds = new DataSet ();  			ds = showSearchCriteria (dtfrom.ToShortDateString ()' dtTo.ToShortDateString ());  			dtTable2 = ds.Tables [0];  			// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + DateTime.Now.AddDays (-1).ToString ("dd-MM-yyyy") + "." + "xls";  			//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,ReportStationwise_Load,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	//strfromdate = "01/10/2012"; //strfrom;  	//strtodate = "15/10/2012";  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = firstDay.ToString ("dd/MM/yyyy");  	//strfrom;  	strtodate = DateTime.Now.AddDays (-1).ToString ("dd/MM/yyyy");  	ToDt = strtodate;  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "rptStationwiseDataset_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			DataSet ds = new DataSet ();  			ds = showSearchCriteria (dtfrom.ToShortDateString ()' dtTo.ToShortDateString ());  			dtTable2 = ds.Tables [0];  			// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + DateTime.Now.AddDays (-1).ToString ("dd-MM-yyyy") + "." + "xls";  			//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,ReportStationwise_Load,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	//strfromdate = "01/10/2012"; //strfrom;  	//strtodate = "15/10/2012";  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = firstDay.ToString ("dd/MM/yyyy");  	//strfrom;  	strtodate = DateTime.Now.AddDays (-1).ToString ("dd/MM/yyyy");  	ToDt = strtodate;  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "rptStationwiseDataset_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			DataSet ds = new DataSet ();  			ds = showSearchCriteria (dtfrom.ToShortDateString ()' dtTo.ToShortDateString ());  			dtTable2 = ds.Tables [0];  			// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + DateTime.Now.AddDays (-1).ToString ("dd-MM-yyyy") + "." + "xls";  			//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,ReportStationwise_Load,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	//strfromdate = "01/10/2012"; //strfrom;  	//strtodate = "15/10/2012";  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = firstDay.ToString ("dd/MM/yyyy");  	//strfrom;  	strtodate = DateTime.Now.AddDays (-1).ToString ("dd/MM/yyyy");  	ToDt = strtodate;  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "rptStationwiseDataset_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			DataSet ds = new DataSet ();  			ds = showSearchCriteria (dtfrom.ToShortDateString ()' dtTo.ToShortDateString ());  			dtTable2 = ds.Tables [0];  			// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + DateTime.Now.AddDays (-1).ToString ("dd-MM-yyyy") + "." + "xls";  			//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,ReportStationwise_Load,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	//strfromdate = "01/10/2012"; //strfrom;  	//strtodate = "15/10/2012";  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = firstDay.ToString ("dd/MM/yyyy");  	//strfrom;  	strtodate = DateTime.Now.AddDays (-1).ToString ("dd/MM/yyyy");  	ToDt = strtodate;  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "rptStationwiseDataset_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			DataSet ds = new DataSet ();  			ds = showSearchCriteria (dtfrom.ToShortDateString ()' dtTo.ToShortDateString ());  			dtTable2 = ds.Tables [0];  			// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + DateTime.Now.AddDays (-1).ToString ("dd-MM-yyyy") + "." + "xls";  			//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,ReportStationwise_Load,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	//strfromdate = "01/10/2012"; //strfrom;  	//strtodate = "15/10/2012";  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = firstDay.ToString ("dd/MM/yyyy");  	//strfrom;  	strtodate = DateTime.Now.AddDays (-1).ToString ("dd/MM/yyyy");  	ToDt = strtodate;  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "rptStationwiseDataset_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			DataSet ds = new DataSet ();  			ds = showSearchCriteria (dtfrom.ToShortDateString ()' dtTo.ToShortDateString ());  			dtTable2 = ds.Tables [0];  			// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + DateTime.Now.AddDays (-1).ToString ("dd-MM-yyyy") + "." + "xls";  			//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,ReportStationwise_Load,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	//strfromdate = "01/10/2012"; //strfrom;  	//strtodate = "15/10/2012";  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = firstDay.ToString ("dd/MM/yyyy");  	//strfrom;  	strtodate = DateTime.Now.AddDays (-1).ToString ("dd/MM/yyyy");  	ToDt = strtodate;  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "rptStationwiseDataset_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			DataSet ds = new DataSet ();  			ds = showSearchCriteria (dtfrom.ToShortDateString ()' dtTo.ToShortDateString ());  			dtTable2 = ds.Tables [0];  			// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + DateTime.Now.AddDays (-1).ToString ("dd-MM-yyyy") + "." + "xls";  			//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,ReportStationwise_Load,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	//strfromdate = "01/10/2012"; //strfrom;  	//strtodate = "15/10/2012";  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = firstDay.ToString ("dd/MM/yyyy");  	//strfrom;  	strtodate = DateTime.Now.AddDays (-1).ToString ("dd/MM/yyyy");  	ToDt = strtodate;  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "rptStationwiseDataset_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			DataSet ds = new DataSet ();  			ds = showSearchCriteria (dtfrom.ToShortDateString ()' dtTo.ToShortDateString ());  			dtTable2 = ds.Tables [0];  			// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + DateTime.Now.AddDays (-1).ToString ("dd-MM-yyyy") + "." + "xls";  			//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,ReportStationwise_Load,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	//strfromdate = "01/10/2012"; //strfrom;  	//strtodate = "15/10/2012";  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = firstDay.ToString ("dd/MM/yyyy");  	//strfrom;  	strtodate = DateTime.Now.AddDays (-1).ToString ("dd/MM/yyyy");  	ToDt = strtodate;  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "rptStationwiseDataset_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			DataSet ds = new DataSet ();  			ds = showSearchCriteria (dtfrom.ToShortDateString ()' dtTo.ToShortDateString ());  			dtTable2 = ds.Tables [0];  			// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + DateTime.Now.AddDays (-1).ToString ("dd-MM-yyyy") + "." + "xls";  			//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadStationReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	//strfromdate = "01/10/2012"; //strfrom;  	//strtodate = "15/10/2012";  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	// firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	// DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	ToDt = strtodate;  	//DateTime dtTo = new DateTime(); DateTime dtfrom = new DateTime();  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "rptStationwiseDataset_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			DataSet ds = new DataSet ();  			ds = showSearchCriteria (dtfrom.ToShortDateString ()' dtTo.ToShortDateString ());  			dtTable2 = ds.Tables [0];  			// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			//  string filepath = "D://" + "Station" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadStationReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	//strfromdate = "01/10/2012"; //strfrom;  	//strtodate = "15/10/2012";  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	// firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	// DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	ToDt = strtodate;  	//DateTime dtTo = new DateTime(); DateTime dtfrom = new DateTime();  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "rptStationwiseDataset_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			DataSet ds = new DataSet ();  			ds = showSearchCriteria (dtfrom.ToShortDateString ()' dtTo.ToShortDateString ());  			dtTable2 = ds.Tables [0];  			// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			//  string filepath = "D://" + "Station" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadStationReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	//strfromdate = "01/10/2012"; //strfrom;  	//strtodate = "15/10/2012";  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	// firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	// DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	ToDt = strtodate;  	//DateTime dtTo = new DateTime(); DateTime dtfrom = new DateTime();  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "rptStationwiseDataset_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			DataSet ds = new DataSet ();  			ds = showSearchCriteria (dtfrom.ToShortDateString ()' dtTo.ToShortDateString ());  			dtTable2 = ds.Tables [0];  			// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			//  string filepath = "D://" + "Station" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadStationReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	//strfromdate = "01/10/2012"; //strfrom;  	//strtodate = "15/10/2012";  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	// firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	// DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	ToDt = strtodate;  	//DateTime dtTo = new DateTime(); DateTime dtfrom = new DateTime();  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "rptStationwiseDataset_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			DataSet ds = new DataSet ();  			ds = showSearchCriteria (dtfrom.ToShortDateString ()' dtTo.ToShortDateString ());  			dtTable2 = ds.Tables [0];  			// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			//  string filepath = "D://" + "Station" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadStationReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	//strfromdate = "01/10/2012"; //strfrom;  	//strtodate = "15/10/2012";  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	// firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	// DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	ToDt = strtodate;  	//DateTime dtTo = new DateTime(); DateTime dtfrom = new DateTime();  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "rptStationwiseDataset_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			DataSet ds = new DataSet ();  			ds = showSearchCriteria (dtfrom.ToShortDateString ()' dtTo.ToShortDateString ());  			dtTable2 = ds.Tables [0];  			// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			//  string filepath = "D://" + "Station" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadStationReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	//strfromdate = "01/10/2012"; //strfrom;  	//strtodate = "15/10/2012";  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	// firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	// DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	ToDt = strtodate;  	//DateTime dtTo = new DateTime(); DateTime dtfrom = new DateTime();  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "rptStationwiseDataset_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			DataSet ds = new DataSet ();  			ds = showSearchCriteria (dtfrom.ToShortDateString ()' dtTo.ToShortDateString ());  			dtTable2 = ds.Tables [0];  			// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			//  string filepath = "D://" + "Station" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadStationReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	//strfromdate = "01/10/2012"; //strfrom;  	//strtodate = "15/10/2012";  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	// firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	// DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	ToDt = strtodate;  	//DateTime dtTo = new DateTime(); DateTime dtfrom = new DateTime();  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "rptStationwiseDataset_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			DataSet ds = new DataSet ();  			ds = showSearchCriteria (dtfrom.ToShortDateString ()' dtTo.ToShortDateString ());  			dtTable2 = ds.Tables [0];  			// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			//  string filepath = "D://" + "Station" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadStationReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	//strfromdate = "01/10/2012"; //strfrom;  	//strtodate = "15/10/2012";  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	// firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	// DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	ToDt = strtodate;  	//DateTime dtTo = new DateTime(); DateTime dtfrom = new DateTime();  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "rptStationwiseDataset_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			DataSet ds = new DataSet ();  			ds = showSearchCriteria (dtfrom.ToShortDateString ()' dtTo.ToShortDateString ());  			dtTable2 = ds.Tables [0];  			// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			//  string filepath = "D://" + "Station" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadStationReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	//strfromdate = "01/10/2012"; //strfrom;  	//strtodate = "15/10/2012";  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	// firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	// DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	ToDt = strtodate;  	//DateTime dtTo = new DateTime(); DateTime dtfrom = new DateTime();  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "rptStationwiseDataset_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			DataSet ds = new DataSet ();  			ds = showSearchCriteria (dtfrom.ToShortDateString ()' dtTo.ToShortDateString ());  			dtTable2 = ds.Tables [0];  			// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			//  string filepath = "D://" + "Station" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadStationReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	//strfromdate = "01/10/2012"; //strfrom;  	//strtodate = "15/10/2012";  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	// firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	// DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	ToDt = strtodate;  	//DateTime dtTo = new DateTime(); DateTime dtfrom = new DateTime();  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "rptStationwiseDataset_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			DataSet ds = new DataSet ();  			ds = showSearchCriteria (dtfrom.ToShortDateString ()' dtTo.ToShortDateString ());  			dtTable2 = ds.Tables [0];  			// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			//  string filepath = "D://" + "Station" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadCurrentDayStationReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	//strfromdate = "01/10/2012"; //strfrom;  	//strtodate = "15/10/2012";  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	// firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	// DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	ToDt = strtodate;  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "rptStationwiseDataset_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			DataSet ds = new DataSet ();  			ds = showSearchCriteria (dtfrom.ToShortDateString ()' dtTo.ToShortDateString ());  			dtTable2 = ds.Tables [0];  			// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadCurrentDayStationReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	//strfromdate = "01/10/2012"; //strfrom;  	//strtodate = "15/10/2012";  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	// firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	// DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	ToDt = strtodate;  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "rptStationwiseDataset_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			DataSet ds = new DataSet ();  			ds = showSearchCriteria (dtfrom.ToShortDateString ()' dtTo.ToShortDateString ());  			dtTable2 = ds.Tables [0];  			// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadCurrentDayStationReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	//strfromdate = "01/10/2012"; //strfrom;  	//strtodate = "15/10/2012";  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	// firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	// DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	ToDt = strtodate;  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "rptStationwiseDataset_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			DataSet ds = new DataSet ();  			ds = showSearchCriteria (dtfrom.ToShortDateString ()' dtTo.ToShortDateString ());  			dtTable2 = ds.Tables [0];  			// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadCurrentDayStationReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	//strfromdate = "01/10/2012"; //strfrom;  	//strtodate = "15/10/2012";  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	// firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	// DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	ToDt = strtodate;  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "rptStationwiseDataset_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			DataSet ds = new DataSet ();  			ds = showSearchCriteria (dtfrom.ToShortDateString ()' dtTo.ToShortDateString ());  			dtTable2 = ds.Tables [0];  			// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadCurrentDayStationReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	//strfromdate = "01/10/2012"; //strfrom;  	//strtodate = "15/10/2012";  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	// firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	// DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	ToDt = strtodate;  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "rptStationwiseDataset_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			DataSet ds = new DataSet ();  			ds = showSearchCriteria (dtfrom.ToShortDateString ()' dtTo.ToShortDateString ());  			dtTable2 = ds.Tables [0];  			// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadCurrentDayStationReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	//strfromdate = "01/10/2012"; //strfrom;  	//strtodate = "15/10/2012";  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	// firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	// DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	ToDt = strtodate;  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "rptStationwiseDataset_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			DataSet ds = new DataSet ();  			ds = showSearchCriteria (dtfrom.ToShortDateString ()' dtTo.ToShortDateString ());  			dtTable2 = ds.Tables [0];  			// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadCurrentDayStationReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	//strfromdate = "01/10/2012"; //strfrom;  	//strtodate = "15/10/2012";  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	// firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	// DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	ToDt = strtodate;  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "rptStationwiseDataset_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			DataSet ds = new DataSet ();  			ds = showSearchCriteria (dtfrom.ToShortDateString ()' dtTo.ToShortDateString ());  			dtTable2 = ds.Tables [0];  			// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadCurrentDayStationReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	//strfromdate = "01/10/2012"; //strfrom;  	//strtodate = "15/10/2012";  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	// firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	// DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	ToDt = strtodate;  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "rptStationwiseDataset_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			DataSet ds = new DataSet ();  			ds = showSearchCriteria (dtfrom.ToShortDateString ()' dtTo.ToShortDateString ());  			dtTable2 = ds.Tables [0];  			// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadCurrentDayStationReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	//strfromdate = "01/10/2012"; //strfrom;  	//strtodate = "15/10/2012";  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	// firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	// DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	ToDt = strtodate;  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "rptStationwiseDataset_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			DataSet ds = new DataSet ();  			ds = showSearchCriteria (dtfrom.ToShortDateString ()' dtTo.ToShortDateString ());  			dtTable2 = ds.Tables [0];  			// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,ReportStationwise,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\ReportStationwise.cs,LoadCurrentDayStationReport,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	//strfromdate = "01/10/2012"; //strfrom;  	//strtodate = "15/10/2012";  	DateTime firstDay = new DateTime (DateTime.Now.Year' DateTime.Now.Month' 1);  	firstDay = firstDay.AddDays (-(firstDay.Day - 1));  	strfromdate = fromdt;  	// firstDay.ToString("dd/MM/yyyy"); //strfrom;  	strtodate = todt;  	// DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy");  	ToDt = strtodate;  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "rptStationwiseDataset_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			DataSet ds = new DataSet ();  			ds = showSearchCriteria (dtfrom.ToShortDateString ()' dtTo.ToShortDateString ());  			dtTable2 = ds.Tables [0];  			// reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			string filepath = ConfigurationManager.AppSettings ["FileLoc"].ToString () + " \\" + "Station" + "_" + fromdt.Replace ('/'' '-') + " To " + todt.Replace ('/'' '-') + "." + "xls";  			//ConfigurationManager.AppSettings["extention"].ToString();//"D://carreport_25-10-2010.xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,StationwiseReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\StationwiseReport.cs,StationwiseReport_Load,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	strfromdate = "01/10/2012";  	//strfrom;  	strtodate = "15/10/2012";  	ToDt = strtodate;  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "dsStationwisedata_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler (ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			//+ConfigurationManager.AppSettings["totime"].ToString()  			string filepath = "D://" + "StationReport" + "_" + DateTime.Now.AddDays (-1).ToString ("dd-MM-yyyy") + "." + "xls";  			//"D://carreport_25-10-2010.xls";  			// string filepath = "D://" +"StationReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//"D://carreport_25-10-2010.xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,StationwiseReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\StationwiseReport.cs,StationwiseReport_Load,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	strfromdate = "01/10/2012";  	//strfrom;  	strtodate = "15/10/2012";  	ToDt = strtodate;  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "dsStationwisedata_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler (ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			//+ConfigurationManager.AppSettings["totime"].ToString()  			string filepath = "D://" + "StationReport" + "_" + DateTime.Now.AddDays (-1).ToString ("dd-MM-yyyy") + "." + "xls";  			//"D://carreport_25-10-2010.xls";  			// string filepath = "D://" +"StationReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//"D://carreport_25-10-2010.xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,StationwiseReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\StationwiseReport.cs,StationwiseReport_Load,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	strfromdate = "01/10/2012";  	//strfrom;  	strtodate = "15/10/2012";  	ToDt = strtodate;  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "dsStationwisedata_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler (ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			//+ConfigurationManager.AppSettings["totime"].ToString()  			string filepath = "D://" + "StationReport" + "_" + DateTime.Now.AddDays (-1).ToString ("dd-MM-yyyy") + "." + "xls";  			//"D://carreport_25-10-2010.xls";  			// string filepath = "D://" +"StationReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//"D://carreport_25-10-2010.xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,StationwiseReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\StationwiseReport.cs,StationwiseReport_Load,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	strfromdate = "01/10/2012";  	//strfrom;  	strtodate = "15/10/2012";  	ToDt = strtodate;  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "dsStationwisedata_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler (ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			//+ConfigurationManager.AppSettings["totime"].ToString()  			string filepath = "D://" + "StationReport" + "_" + DateTime.Now.AddDays (-1).ToString ("dd-MM-yyyy") + "." + "xls";  			//"D://carreport_25-10-2010.xls";  			// string filepath = "D://" +"StationReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//"D://carreport_25-10-2010.xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,StationwiseReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\StationwiseReport.cs,StationwiseReport_Load,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	strfromdate = "01/10/2012";  	//strfrom;  	strtodate = "15/10/2012";  	ToDt = strtodate;  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "dsStationwisedata_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler (ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			//+ConfigurationManager.AppSettings["totime"].ToString()  			string filepath = "D://" + "StationReport" + "_" + DateTime.Now.AddDays (-1).ToString ("dd-MM-yyyy") + "." + "xls";  			//"D://carreport_25-10-2010.xls";  			// string filepath = "D://" +"StationReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//"D://carreport_25-10-2010.xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,StationwiseReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\StationwiseReport.cs,StationwiseReport_Load,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	strfromdate = "01/10/2012";  	//strfrom;  	strtodate = "15/10/2012";  	ToDt = strtodate;  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "dsStationwisedata_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler (ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			//+ConfigurationManager.AppSettings["totime"].ToString()  			string filepath = "D://" + "StationReport" + "_" + DateTime.Now.AddDays (-1).ToString ("dd-MM-yyyy") + "." + "xls";  			//"D://carreport_25-10-2010.xls";  			// string filepath = "D://" +"StationReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//"D://carreport_25-10-2010.xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,StationwiseReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\StationwiseReport.cs,StationwiseReport_Load,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	strfromdate = "01/10/2012";  	//strfrom;  	strtodate = "15/10/2012";  	ToDt = strtodate;  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "dsStationwisedata_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler (ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			//+ConfigurationManager.AppSettings["totime"].ToString()  			string filepath = "D://" + "StationReport" + "_" + DateTime.Now.AddDays (-1).ToString ("dd-MM-yyyy") + "." + "xls";  			//"D://carreport_25-10-2010.xls";  			// string filepath = "D://" +"StationReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//"D://carreport_25-10-2010.xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,StationwiseReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\StationwiseReport.cs,StationwiseReport_Load,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	strfromdate = "01/10/2012";  	//strfrom;  	strtodate = "15/10/2012";  	ToDt = strtodate;  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "dsStationwisedata_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler (ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			//+ConfigurationManager.AppSettings["totime"].ToString()  			string filepath = "D://" + "StationReport" + "_" + DateTime.Now.AddDays (-1).ToString ("dd-MM-yyyy") + "." + "xls";  			//"D://carreport_25-10-2010.xls";  			// string filepath = "D://" +"StationReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//"D://carreport_25-10-2010.xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,StationwiseReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\StationwiseReport.cs,StationwiseReport_Load,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	strfromdate = "01/10/2012";  	//strfrom;  	strtodate = "15/10/2012";  	ToDt = strtodate;  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "dsStationwisedata_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler (ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			//+ConfigurationManager.AppSettings["totime"].ToString()  			string filepath = "D://" + "StationReport" + "_" + DateTime.Now.AddDays (-1).ToString ("dd-MM-yyyy") + "." + "xls";  			//"D://carreport_25-10-2010.xls";  			// string filepath = "D://" +"StationReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//"D://carreport_25-10-2010.xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
Magic Number,QID_SCM_Alert_winSrcModified,StationwiseReport,C:\repos\vishaltillu_SCM_CORE_V3\SCM Automailer\QID_SCM_Alert_winSrcModified\StationwiseReport.cs,StationwiseReport_Load,The following statement contains a magic number: try {  	string AgentCode = "All"' PaymentType = "All"' contrLocatorCode = "All"' level = "All"' levelCode = "All"' frmDate = ""' ToDt = ""' AWBStatus = "All";  	DateTime dtTo = new DateTime ();  	DateTime dtfrom = new DateTime ();  	strfromdate = "01/10/2012";  	//strfrom;  	strtodate = "15/10/2012";  	ToDt = strtodate;  	string day = strfromdate.Substring (0' 2);  	string mon = strfromdate.Substring (3' 2);  	string yr = strfromdate.Substring (6' 4);  	frmDate = yr + "-" + mon + "-" + day;  	dtfrom = Convert.ToDateTime (frmDate);  	frmDate = dtfrom.ToString ();  	string dayTo = strtodate.Substring (0' 2);  	string monTo = strtodate.Substring (3' 2);  	string yrTo = strtodate.Substring (6' 4);  	ToDt = yrTo + "-" + monTo + "-" + dayTo;  	dtTo = Convert.ToDateTime (ToDt);  	ToDt = dtTo.ToString ();  	//AgentCode = "All"; PaymentType = "All"; contrLocatorCode = "All";   	//level = "All"; levelCode = "All";  	dsData = objReport.GetStationWiseAWBSummary (AgentCode' PaymentType' contrLocatorCode' level' levelCode' dtfrom' dtTo' AWBStatus);  	if (dsData != null) {  		if (dsData.Tables [0].Rows.Count > 0) {  			strfromdate = dtfrom.ToString ();  			reportViewer1.ProcessingMode = ProcessingMode.Local;  			LocalReport rep2 = reportViewer1.LocalReport;  			// rep1.ReportPath = "D:/";//Server.MapPath("/Reports/AWB.rdlc");  			rep2.ReportPath = System.Configuration.ConfigurationManager.AppSettings ["ReportPath"] + "rptStationwiseReport.rdlc";  			rds1.Name = "dsStationwisedata_DataTable1";  			// "dsShowEAWB";// "EMULDAWB_dtManifest";  			rds1.Value = dsData.Tables [0];  			rep2.DataSources.Add (rds1);  			reportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler (ItemsSubreportProcessingEventHandler);  			Warning[] warnings = null;  			//+ConfigurationManager.AppSettings["totime"].ToString()  			string filepath = "D://" + "StationReport" + "_" + DateTime.Now.AddDays (-1).ToString ("dd-MM-yyyy") + "." + "xls";  			//"D://carreport_25-10-2010.xls";  			// string filepath = "D://" +"StationReport" + "_" + DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy") + "." + "xls";//"D://carreport_25-10-2010.xls";  			File.Delete (filepath);  			byte[] bytes;  			string mimeType = "";  			string encoding = "";  			string extension = "";  			string[] streamids =  {  				""  			};  			if (filepath.Contains ("xls"))  				bytes = reportViewer1.LocalReport.Render ("EXCEL"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			else  				bytes = reportViewer1.LocalReport.Render ("PDF"' ""' out mimeType' out encoding' out extension' out streamids' out warnings);  			FileStream fls = new FileStream (filepath' FileMode.Create);  			fls.Write (bytes' 0' bytes.Length);  			fls.Close ();  			#region Comment  			/*                                             Warning[] warnings = null;                         string filepath = "D://carreport.xls";                         File.Delete(filepath);                         byte[] bytes;                         string mimeType = "";                         string encoding = "";                         string extension = "";                         string[] streamids = {""};                                                  bytes = reportViewer1.LocalReport.Render("EXCEL"'""'out mimeType'out encoding'out extension'out streamids'out warnings);                          FileStream fls = new FileStream(filepath' FileMode.Create);                         fls.Write(bytes'0'bytes.Length);                          fls.Close();                  */  			#endregion  		}  	}  }  catch (Exception ex) {  	clsLog.WriteLog ("Exception Occured in Sending Mail : " + ex.Message.ToString () + " @ " + DateTime.Now.ToString ());  }  
