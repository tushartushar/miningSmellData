Implementation smell,Namespace,Class,File,Method,Description
Long Method,Tavis,LinkFactory,D:\newReposJune17\tavis-software_Link\src\Link\MediaTypes\LinkFactory.cs,RegisterIANALinks,The method has 68 lines of code.
Complex Method,Tavis,LinkExtensions,D:\newReposJune17\tavis-software_Link\src\Link\LinkExtensions.cs,AsLinkHeader,Cyclomatic complexity of the method is 10
Complex Method,Tavis,LinkHeaderParser,D:\newReposJune17\tavis-software_Link\src\Link\LinkHeaders\LinkHeaderParser.cs,Parse,Cyclomatic complexity of the method is 7
Complex Method,Tavis,LinkHeaderParser,D:\newReposJune17\tavis-software_Link\src\Link\LinkHeaders\LinkHeaderParser.cs,ParseLink,Cyclomatic complexity of the method is 10
Complex Method,Tavis,HeaderEncodingParser,D:\newReposJune17\tavis-software_Link\src\Link\LinkHeaders\LinkHeaderParser.cs,UriDecode,Cyclomatic complexity of the method is 7
Complex Method,Tavis,HeaderEncodingParser,D:\newReposJune17\tavis-software_Link\src\Link\LinkHeaders\LinkHeaderParser.cs,HexToInt,Cyclomatic complexity of the method is 24
Complex Method,Tavis,HeaderEncodingParser,D:\newReposJune17\tavis-software_Link\src\Link\LinkHeaders\LinkHeaderParser.cs,IsHex,Cyclomatic complexity of the method is 23
Long Parameter List,Tavis,ILinkExtractor,D:\newReposJune17\tavis-software_Link\src\Link\MediaTypes\ILinkExtractor.cs,GetLink,The method has 4 parameters.
Long Parameter List,Tavis,ILinkExtractor,D:\newReposJune17\tavis-software_Link\src\Link\MediaTypes\ILinkExtractor.cs,GetLinks,The method has 4 parameters.
Long Parameter List,Tavis,HttpResponseMachine,D:\newReposJune17\tavis-software_Link\src\Link\ResponseHandlers\HttpResponseMachine.cs,AddResponseHandler,The method has 5 parameters.
Long Parameter List,Tavis,HttpResponseMachine,D:\newReposJune17\tavis-software_Link\src\Link\ResponseHandlers\HttpResponseMachine.cs,AddResponseHandler,The method has 5 parameters.
Long Identifier,Tavis,UriExtensions,D:\newReposJune17\tavis-software_Link\src\Link\UriExtensions.cs,GetResolvedTarget,The length of the parameter addNonTemplatedParametersToQueryString is 38.
Long Statement,Tavis,DefaultRequestBuilder,D:\newReposJune17\tavis-software_Link\src\Link\RequestBuilders\DefaultRequestBuilder.cs,ApplyChanges,The length of the statement  "			var matchingProps = GetBindingProperties (link).Where (p => link.Template.GetParameterNames ().Any (n => String.Compare (n' p.Key' StringComparison.OrdinalIgnoreCase) == 0)).ToList (); " is 184.
Long Statement,Tavis,LinkHeaderParser,D:\newReposJune17\tavis-software_Link\src\Link\LinkHeaders\LinkHeaderParser.cs,ReadRelType,The length of the statement  "	while (Char.IsLetterOrDigit (InputString [InputPos]) || InputString [InputPos] == '.' || InputString [InputPos] == '-') { " is 121.
Long Statement,Tavis,LinkHeaderParser,D:\newReposJune17\tavis-software_Link\src\Link\LinkHeaders\LinkHeaderParser.cs,Error,The length of the statement  "	throw new FormatException (string.Format ("Invalid HTTP Web Link. {0} in '{1}' (around pos {2})."' msg' InputString' InputPos)); " is 128.
Long Statement,Tavis,HttpResponseMachine,D:\newReposJune17\tavis-software_Link\src\Link\ResponseHandlers\HttpResponseMachine.cs,AddResponseHandler,The length of the statement  "	this.AddResponseHandler ((m' l' r) => responseHandler (l' r)' statusCode' linkRelation: linkRelation' contentType: contentType' profile: profile); " is 146.
Long Statement,Tavis,HttpResponseMachine,D:\newReposJune17\tavis-software_Link\src\Link\ResponseHandlers\HttpResponseMachine.cs,FindHandler,The length of the statement  "	var handlerResults = statusHandlers.Where (h => h.StatusCode == responseHandlerKey.StatusCode && (h.ContentType == null || h.ContentType.Equals (responseHandlerKey.ContentType)) && (h.Profile == null || h.Profile == responseHandlerKey.Profile) && (String.IsNullOrEmpty (h.LinkRelation) || h.LinkRelation == responseHandlerKey.LinkRelation)).Select (h => new HandlerResult () { " is 376.
Long Statement,Tavis,UriExtensions,D:\newReposJune17\tavis-software_Link\src\Link\UriExtensions.cs,AddParametersToQueryString,The length of the statement  "	var queryTokens = String.Join ("'"' linkParameters.Where (k => !target.OriginalString.Contains ("{" + k + "}")).Select (p => p).ToArray ()); " is 140.
Complex Conditional,Tavis,HeaderEncodingParser,D:\newReposJune17\tavis-software_Link\src\Link\LinkHeaders\LinkHeaderParser.cs,UriDecode,The conditional expression  "value [i] == '%' && i < value.Length - 2 && IsHex (value [i + 1]) && IsHex (value [i + 2])"  is complex.
Empty Catch Block,Tavis,LinkHeaderParser,D:\newReposJune17\tavis-software_Link\src\Link\LinkHeaders\LinkHeaderParser.cs,Parse,The method has an empty catch block.
Empty Catch Block,Tavis,LinkHeaderParser,D:\newReposJune17\tavis-software_Link\src\Link\LinkHeaders\LinkHeaderParser.cs,ParseLink,The method has an empty catch block.
Magic Number,Tavis,HttpHeaderExtensions,D:\newReposJune17\tavis-software_Link\src\Link\LinkHeaders\HttpHeaderExtensions.cs,AddLinkHeaders,The following statement contains a magic number: headerValue = headerValue.Substring (0' headerValue.Length - 2);  
Magic Number,Tavis,HeaderEncodingParser,D:\newReposJune17\tavis-software_Link\src\Link\LinkHeaders\LinkHeaderParser.cs,UriDecode,The following statement contains a magic number: for (int i = 0; i < value.Length; i++) {  	if (value [i] == '%' && i < value.Length - 2 && IsHex (value [i + 1]) && IsHex (value [i + 2])) {  		result [length++] = (byte)(HexToInt (value [i + 1]) * 16 + HexToInt (value [i + 2]));  		i += 2;  	} else if (value [i] == '+') {  		result [length++] = (byte)' ';  	} else {  		int c = value [i];  		if (c > byte.MaxValue)  			throw new InvalidOperationException ("URI contained unexpected character");  		result [length++] = (byte)c;  	}  }  
Magic Number,Tavis,HeaderEncodingParser,D:\newReposJune17\tavis-software_Link\src\Link\LinkHeaders\LinkHeaderParser.cs,UriDecode,The following statement contains a magic number: for (int i = 0; i < value.Length; i++) {  	if (value [i] == '%' && i < value.Length - 2 && IsHex (value [i + 1]) && IsHex (value [i + 2])) {  		result [length++] = (byte)(HexToInt (value [i + 1]) * 16 + HexToInt (value [i + 2]));  		i += 2;  	} else if (value [i] == '+') {  		result [length++] = (byte)' ';  	} else {  		int c = value [i];  		if (c > byte.MaxValue)  			throw new InvalidOperationException ("URI contained unexpected character");  		result [length++] = (byte)c;  	}  }  
Magic Number,Tavis,HeaderEncodingParser,D:\newReposJune17\tavis-software_Link\src\Link\LinkHeaders\LinkHeaderParser.cs,UriDecode,The following statement contains a magic number: for (int i = 0; i < value.Length; i++) {  	if (value [i] == '%' && i < value.Length - 2 && IsHex (value [i + 1]) && IsHex (value [i + 2])) {  		result [length++] = (byte)(HexToInt (value [i + 1]) * 16 + HexToInt (value [i + 2]));  		i += 2;  	} else if (value [i] == '+') {  		result [length++] = (byte)' ';  	} else {  		int c = value [i];  		if (c > byte.MaxValue)  			throw new InvalidOperationException ("URI contained unexpected character");  		result [length++] = (byte)c;  	}  }  
Magic Number,Tavis,HeaderEncodingParser,D:\newReposJune17\tavis-software_Link\src\Link\LinkHeaders\LinkHeaderParser.cs,UriDecode,The following statement contains a magic number: for (int i = 0; i < value.Length; i++) {  	if (value [i] == '%' && i < value.Length - 2 && IsHex (value [i + 1]) && IsHex (value [i + 2])) {  		result [length++] = (byte)(HexToInt (value [i + 1]) * 16 + HexToInt (value [i + 2]));  		i += 2;  	} else if (value [i] == '+') {  		result [length++] = (byte)' ';  	} else {  		int c = value [i];  		if (c > byte.MaxValue)  			throw new InvalidOperationException ("URI contained unexpected character");  		result [length++] = (byte)c;  	}  }  
Magic Number,Tavis,HeaderEncodingParser,D:\newReposJune17\tavis-software_Link\src\Link\LinkHeaders\LinkHeaderParser.cs,UriDecode,The following statement contains a magic number: for (int i = 0; i < value.Length; i++) {  	if (value [i] == '%' && i < value.Length - 2 && IsHex (value [i + 1]) && IsHex (value [i + 2])) {  		result [length++] = (byte)(HexToInt (value [i + 1]) * 16 + HexToInt (value [i + 2]));  		i += 2;  	} else if (value [i] == '+') {  		result [length++] = (byte)' ';  	} else {  		int c = value [i];  		if (c > byte.MaxValue)  			throw new InvalidOperationException ("URI contained unexpected character");  		result [length++] = (byte)c;  	}  }  
Magic Number,Tavis,HeaderEncodingParser,D:\newReposJune17\tavis-software_Link\src\Link\LinkHeaders\LinkHeaderParser.cs,UriDecode,The following statement contains a magic number: if (value [i] == '%' && i < value.Length - 2 && IsHex (value [i + 1]) && IsHex (value [i + 2])) {  	result [length++] = (byte)(HexToInt (value [i + 1]) * 16 + HexToInt (value [i + 2]));  	i += 2;  } else if (value [i] == '+') {  	result [length++] = (byte)' ';  } else {  	int c = value [i];  	if (c > byte.MaxValue)  		throw new InvalidOperationException ("URI contained unexpected character");  	result [length++] = (byte)c;  }  
Magic Number,Tavis,HeaderEncodingParser,D:\newReposJune17\tavis-software_Link\src\Link\LinkHeaders\LinkHeaderParser.cs,UriDecode,The following statement contains a magic number: if (value [i] == '%' && i < value.Length - 2 && IsHex (value [i + 1]) && IsHex (value [i + 2])) {  	result [length++] = (byte)(HexToInt (value [i + 1]) * 16 + HexToInt (value [i + 2]));  	i += 2;  } else if (value [i] == '+') {  	result [length++] = (byte)' ';  } else {  	int c = value [i];  	if (c > byte.MaxValue)  		throw new InvalidOperationException ("URI contained unexpected character");  	result [length++] = (byte)c;  }  
Magic Number,Tavis,HeaderEncodingParser,D:\newReposJune17\tavis-software_Link\src\Link\LinkHeaders\LinkHeaderParser.cs,UriDecode,The following statement contains a magic number: if (value [i] == '%' && i < value.Length - 2 && IsHex (value [i + 1]) && IsHex (value [i + 2])) {  	result [length++] = (byte)(HexToInt (value [i + 1]) * 16 + HexToInt (value [i + 2]));  	i += 2;  } else if (value [i] == '+') {  	result [length++] = (byte)' ';  } else {  	int c = value [i];  	if (c > byte.MaxValue)  		throw new InvalidOperationException ("URI contained unexpected character");  	result [length++] = (byte)c;  }  
Magic Number,Tavis,HeaderEncodingParser,D:\newReposJune17\tavis-software_Link\src\Link\LinkHeaders\LinkHeaderParser.cs,UriDecode,The following statement contains a magic number: if (value [i] == '%' && i < value.Length - 2 && IsHex (value [i + 1]) && IsHex (value [i + 2])) {  	result [length++] = (byte)(HexToInt (value [i + 1]) * 16 + HexToInt (value [i + 2]));  	i += 2;  } else if (value [i] == '+') {  	result [length++] = (byte)' ';  } else {  	int c = value [i];  	if (c > byte.MaxValue)  		throw new InvalidOperationException ("URI contained unexpected character");  	result [length++] = (byte)c;  }  
Magic Number,Tavis,HeaderEncodingParser,D:\newReposJune17\tavis-software_Link\src\Link\LinkHeaders\LinkHeaderParser.cs,UriDecode,The following statement contains a magic number: if (value [i] == '%' && i < value.Length - 2 && IsHex (value [i + 1]) && IsHex (value [i + 2])) {  	result [length++] = (byte)(HexToInt (value [i + 1]) * 16 + HexToInt (value [i + 2]));  	i += 2;  } else if (value [i] == '+') {  	result [length++] = (byte)' ';  } else {  	int c = value [i];  	if (c > byte.MaxValue)  		throw new InvalidOperationException ("URI contained unexpected character");  	result [length++] = (byte)c;  }  
Magic Number,Tavis,HeaderEncodingParser,D:\newReposJune17\tavis-software_Link\src\Link\LinkHeaders\LinkHeaderParser.cs,UriDecode,The following statement contains a magic number: result [length++] = (byte)(HexToInt (value [i + 1]) * 16 + HexToInt (value [i + 2]));  
Magic Number,Tavis,HeaderEncodingParser,D:\newReposJune17\tavis-software_Link\src\Link\LinkHeaders\LinkHeaderParser.cs,UriDecode,The following statement contains a magic number: result [length++] = (byte)(HexToInt (value [i + 1]) * 16 + HexToInt (value [i + 2]));  
Magic Number,Tavis,HeaderEncodingParser,D:\newReposJune17\tavis-software_Link\src\Link\LinkHeaders\LinkHeaderParser.cs,UriDecode,The following statement contains a magic number: i += 2;  
Magic Number,Tavis,HeaderEncodingParser,D:\newReposJune17\tavis-software_Link\src\Link\LinkHeaders\LinkHeaderParser.cs,HexToInt,The following statement contains a magic number: switch (value) {  case '0':  case '1':  case '2':  case '3':  case '4':  case '5':  case '6':  case '7':  case '8':  case '9':  	return value - '0';  case 'a':  case 'b':  case 'c':  case 'd':  case 'e':  case 'f':  	return (value - 'a') + 10;  case 'A':  case 'B':  case 'C':  case 'D':  case 'E':  case 'F':  	return (value - 'A') + 10;  default:  	throw new ArgumentOutOfRangeException ("value");  }  
Magic Number,Tavis,HeaderEncodingParser,D:\newReposJune17\tavis-software_Link\src\Link\LinkHeaders\LinkHeaderParser.cs,HexToInt,The following statement contains a magic number: switch (value) {  case '0':  case '1':  case '2':  case '3':  case '4':  case '5':  case '6':  case '7':  case '8':  case '9':  	return value - '0';  case 'a':  case 'b':  case 'c':  case 'd':  case 'e':  case 'f':  	return (value - 'a') + 10;  case 'A':  case 'B':  case 'C':  case 'D':  case 'E':  case 'F':  	return (value - 'A') + 10;  default:  	throw new ArgumentOutOfRangeException ("value");  }  
Magic Number,Tavis,HeaderEncodingParser,D:\newReposJune17\tavis-software_Link\src\Link\LinkHeaders\LinkHeaderParser.cs,HexToInt,The following statement contains a magic number: return (value - 'a') + 10;  
Magic Number,Tavis,HeaderEncodingParser,D:\newReposJune17\tavis-software_Link\src\Link\LinkHeaders\LinkHeaderParser.cs,HexToInt,The following statement contains a magic number: return (value - 'A') + 10;  
Magic Number,Tavis,HttpResponseMachine,D:\newReposJune17\tavis-software_Link\src\Link\ResponseHandlers\HttpResponseMachine.cs,GetDefaultStatusCode,The following statement contains a magic number: if ((int)httpStatusCode < 200) {  	return HttpStatusCode.Continue;  	// 100  } else if ((int)httpStatusCode < 300) {  	return HttpStatusCode.OK;  	//200  } else if ((int)httpStatusCode < 400) {  	return HttpStatusCode.MultipleChoices;  	// 300  } else if ((int)httpStatusCode < 500) {  	return HttpStatusCode.BadRequest;  	// 400  } else {  	return HttpStatusCode.InternalServerError;  	// 500  }  
Magic Number,Tavis,HttpResponseMachine,D:\newReposJune17\tavis-software_Link\src\Link\ResponseHandlers\HttpResponseMachine.cs,GetDefaultStatusCode,The following statement contains a magic number: if ((int)httpStatusCode < 200) {  	return HttpStatusCode.Continue;  	// 100  } else if ((int)httpStatusCode < 300) {  	return HttpStatusCode.OK;  	//200  } else if ((int)httpStatusCode < 400) {  	return HttpStatusCode.MultipleChoices;  	// 300  } else if ((int)httpStatusCode < 500) {  	return HttpStatusCode.BadRequest;  	// 400  } else {  	return HttpStatusCode.InternalServerError;  	// 500  }  
Magic Number,Tavis,HttpResponseMachine,D:\newReposJune17\tavis-software_Link\src\Link\ResponseHandlers\HttpResponseMachine.cs,GetDefaultStatusCode,The following statement contains a magic number: if ((int)httpStatusCode < 200) {  	return HttpStatusCode.Continue;  	// 100  } else if ((int)httpStatusCode < 300) {  	return HttpStatusCode.OK;  	//200  } else if ((int)httpStatusCode < 400) {  	return HttpStatusCode.MultipleChoices;  	// 300  } else if ((int)httpStatusCode < 500) {  	return HttpStatusCode.BadRequest;  	// 400  } else {  	return HttpStatusCode.InternalServerError;  	// 500  }  
Magic Number,Tavis,HttpResponseMachine,D:\newReposJune17\tavis-software_Link\src\Link\ResponseHandlers\HttpResponseMachine.cs,GetDefaultStatusCode,The following statement contains a magic number: if ((int)httpStatusCode < 200) {  	return HttpStatusCode.Continue;  	// 100  } else if ((int)httpStatusCode < 300) {  	return HttpStatusCode.OK;  	//200  } else if ((int)httpStatusCode < 400) {  	return HttpStatusCode.MultipleChoices;  	// 300  } else if ((int)httpStatusCode < 500) {  	return HttpStatusCode.BadRequest;  	// 400  } else {  	return HttpStatusCode.InternalServerError;  	// 500  }  
Magic Number,Tavis,HttpResponseMachine,D:\newReposJune17\tavis-software_Link\src\Link\ResponseHandlers\HttpResponseMachine.cs,GetDefaultStatusCode,The following statement contains a magic number: if ((int)httpStatusCode < 300) {  	return HttpStatusCode.OK;  	//200  } else if ((int)httpStatusCode < 400) {  	return HttpStatusCode.MultipleChoices;  	// 300  } else if ((int)httpStatusCode < 500) {  	return HttpStatusCode.BadRequest;  	// 400  } else {  	return HttpStatusCode.InternalServerError;  	// 500  }  
Magic Number,Tavis,HttpResponseMachine,D:\newReposJune17\tavis-software_Link\src\Link\ResponseHandlers\HttpResponseMachine.cs,GetDefaultStatusCode,The following statement contains a magic number: if ((int)httpStatusCode < 300) {  	return HttpStatusCode.OK;  	//200  } else if ((int)httpStatusCode < 400) {  	return HttpStatusCode.MultipleChoices;  	// 300  } else if ((int)httpStatusCode < 500) {  	return HttpStatusCode.BadRequest;  	// 400  } else {  	return HttpStatusCode.InternalServerError;  	// 500  }  
Magic Number,Tavis,HttpResponseMachine,D:\newReposJune17\tavis-software_Link\src\Link\ResponseHandlers\HttpResponseMachine.cs,GetDefaultStatusCode,The following statement contains a magic number: if ((int)httpStatusCode < 300) {  	return HttpStatusCode.OK;  	//200  } else if ((int)httpStatusCode < 400) {  	return HttpStatusCode.MultipleChoices;  	// 300  } else if ((int)httpStatusCode < 500) {  	return HttpStatusCode.BadRequest;  	// 400  } else {  	return HttpStatusCode.InternalServerError;  	// 500  }  
Magic Number,Tavis,HttpResponseMachine,D:\newReposJune17\tavis-software_Link\src\Link\ResponseHandlers\HttpResponseMachine.cs,GetDefaultStatusCode,The following statement contains a magic number: if ((int)httpStatusCode < 400) {  	return HttpStatusCode.MultipleChoices;  	// 300  } else if ((int)httpStatusCode < 500) {  	return HttpStatusCode.BadRequest;  	// 400  } else {  	return HttpStatusCode.InternalServerError;  	// 500  }  
Magic Number,Tavis,HttpResponseMachine,D:\newReposJune17\tavis-software_Link\src\Link\ResponseHandlers\HttpResponseMachine.cs,GetDefaultStatusCode,The following statement contains a magic number: if ((int)httpStatusCode < 400) {  	return HttpStatusCode.MultipleChoices;  	// 300  } else if ((int)httpStatusCode < 500) {  	return HttpStatusCode.BadRequest;  	// 400  } else {  	return HttpStatusCode.InternalServerError;  	// 500  }  
Magic Number,Tavis,HttpResponseMachine,D:\newReposJune17\tavis-software_Link\src\Link\ResponseHandlers\HttpResponseMachine.cs,GetDefaultStatusCode,The following statement contains a magic number: if ((int)httpStatusCode < 500) {  	return HttpStatusCode.BadRequest;  	// 400  } else {  	return HttpStatusCode.InternalServerError;  	// 500  }  
Magic Number,Tavis,UriExtensions,D:\newReposJune17\tavis-software_Link\src\Link\UriExtensions.cs,GetQueryStringParameters,The following statement contains a magic number: foreach (Match m in reg.Matches (uri.Query)) {  	string key = m.Groups [1].Value.ToLowerInvariant ();  	string value = m.Groups [2].Value;  	parameters.Add (key' value);  }  
