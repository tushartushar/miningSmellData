Implementation smell,Namespace,Class,File,Method,Description
Long Statement,PCLCache.SampleApi.Flickr,LoadFromCacheThenRefreshFlickrRecentPhotos,C:\repos\davidturneruk_PCLCache\PCLCache\PCLCache.SampleApi\Flickr\LoadFromCacheThenRefreshLoader.cs,CalculateHash,The length of the statement  "		throw new InvalidOperationException ("ComputeHash is null' you must initialize ComputeHash with your desired hash function before call this method.  e.g. FlickrRecentPhotos.HashFunction = /* your computeHash code */"); " is 218.
Long Statement,PCLCache.SampleApi.Flickr,CachedFlickrRecentPhotos,C:\repos\davidturneruk_PCLCache\PCLCache\PCLCache.SampleApi\Flickr\CachedFlickrRecentPhotos.cs,CalculateHash,The length of the statement  "		throw new InvalidOperationException ("ComputeHash is null' you must initialize ComputeHash with your desired hash function before call this method.  e.g. BaseFlickrRecentPhotosLoader.HashFunction = /* your computeHash code */"); " is 228.
Empty Catch Block,PCLCache.SampleApi.Flickr,FlickrRecentPhotos,C:\repos\davidturneruk_PCLCache\PCLCache\PCLCache.SampleApi\Flickr\FlickrRecentPhotos.cs,GetRecentPhotos,The method has an empty catch block.
Magic Number,PCLCache.SampleApi.Flickr,FlickrRecentPhotos,C:\repos\davidturneruk_PCLCache\PCLCache\PCLCache.SampleApi\Flickr\FlickrRecentPhotos.cs,GetRecentPhotos,The following statement contains a magic number: try {  	var request = new HttpRequestMessage (HttpMethod.Get' new Uri (RecentPhotosUrl' UriKind.Absolute));  	if (forceRefresh)  		request.Headers.IfModifiedSince = lastRequested;  	var response = await client.SendAsync (request);  	if (response.StatusCode == System.Net.HttpStatusCode.OK) {  		var content = await response.Content.ReadAsStringAsync ();  		var contentJson = content.Substring (14' content.Length - 15);  		var photos = await Task.Factory.StartNew (() => JsonConvert.DeserializeObject<RootObject> (contentJson));  		lastRequested = DateTime.Now;  		return photos;  	}  }  catch (Exception) {  }  
Magic Number,PCLCache.SampleApi.Flickr,FlickrRecentPhotos,C:\repos\davidturneruk_PCLCache\PCLCache\PCLCache.SampleApi\Flickr\FlickrRecentPhotos.cs,GetRecentPhotos,The following statement contains a magic number: try {  	var request = new HttpRequestMessage (HttpMethod.Get' new Uri (RecentPhotosUrl' UriKind.Absolute));  	if (forceRefresh)  		request.Headers.IfModifiedSince = lastRequested;  	var response = await client.SendAsync (request);  	if (response.StatusCode == System.Net.HttpStatusCode.OK) {  		var content = await response.Content.ReadAsStringAsync ();  		var contentJson = content.Substring (14' content.Length - 15);  		var photos = await Task.Factory.StartNew (() => JsonConvert.DeserializeObject<RootObject> (contentJson));  		lastRequested = DateTime.Now;  		return photos;  	}  }  catch (Exception) {  }  
Magic Number,PCLCache.SampleApi.Flickr,FlickrRecentPhotos,C:\repos\davidturneruk_PCLCache\PCLCache\PCLCache.SampleApi\Flickr\FlickrRecentPhotos.cs,GetRecentPhotos,The following statement contains a magic number: if (response.StatusCode == System.Net.HttpStatusCode.OK) {  	var content = await response.Content.ReadAsStringAsync ();  	var contentJson = content.Substring (14' content.Length - 15);  	var photos = await Task.Factory.StartNew (() => JsonConvert.DeserializeObject<RootObject> (contentJson));  	lastRequested = DateTime.Now;  	return photos;  }  
Magic Number,PCLCache.SampleApi.Flickr,FlickrRecentPhotos,C:\repos\davidturneruk_PCLCache\PCLCache\PCLCache.SampleApi\Flickr\FlickrRecentPhotos.cs,GetRecentPhotos,The following statement contains a magic number: if (response.StatusCode == System.Net.HttpStatusCode.OK) {  	var content = await response.Content.ReadAsStringAsync ();  	var contentJson = content.Substring (14' content.Length - 15);  	var photos = await Task.Factory.StartNew (() => JsonConvert.DeserializeObject<RootObject> (contentJson));  	lastRequested = DateTime.Now;  	return photos;  }  
