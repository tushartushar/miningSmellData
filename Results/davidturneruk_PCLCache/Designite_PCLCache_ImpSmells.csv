Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PCLCache,StorageHelper,C:\repos\davidturneruk_PCLCache\PCLCache\PCLCache\Storage\StorageHelper.cs,SaveAsync,Cyclomatic complexity of the method is 9
Complex Method,PCLCache,StorageHelper,C:\repos\davidturneruk_PCLCache\PCLCache\PCLCache\Storage\StorageHelper.cs,LoadAsync,Cyclomatic complexity of the method is 9
Complex Method,PCLCache,StorageHelper,C:\repos\davidturneruk_PCLCache\PCLCache\PCLCache\Storage\StorageHelper.cs,GetFolderAsync,Cyclomatic complexity of the method is 9
Long Parameter List,PCLCache,DataCache,C:\repos\davidturneruk_PCLCache\PCLCache\PCLCache\DataCache.cs,GetAsync,The method has 5 parameters.
Long Statement,PCLCache,DataCache,C:\repos\davidturneruk_PCLCache\PCLCache\PCLCache\DataCache.cs,GetFromCache,The length of the statement  "	IStorageHelper<CacheObject<T>> storage = new StorageHelper<CacheObject<T>> (StorageType.Local' CacheFolder' serializerType); " is 124.
Long Statement,PCLCache,DataCache,C:\repos\davidturneruk_PCLCache\PCLCache\PCLCache\DataCache.cs,Set,The length of the statement  "	IStorageHelper<CacheObject<T>> storage = new StorageHelper<CacheObject<T>> (StorageType.Local' CacheFolder' serializerType); " is 124.
Empty Catch Block,PCLCache,StorageHelper,C:\repos\davidturneruk_PCLCache\PCLCache\PCLCache\Storage\StorageHelper.cs,DeleteAllFiles,The method has an empty catch block.
Empty Catch Block,PCLCache,StorageHelper,C:\repos\davidturneruk_PCLCache\PCLCache\PCLCache\Storage\StorageHelper.cs,ClearLocalAll,The method has an empty catch block.
Empty Catch Block,PCLCache,StorageHelper,C:\repos\davidturneruk_PCLCache\PCLCache\PCLCache\Storage\StorageHelper.cs,ClearLocalAll,The method has an empty catch block.
Empty Catch Block,PCLCache,WebDataCache,C:\repos\davidturneruk_PCLCache\PCLCache\PCLCache\WebDataCache.cs,ClearAll,The method has an empty catch block.
Missing Default,PCLCache,StorageHelper,C:\repos\davidturneruk_PCLCache\PCLCache\PCLCache\Storage\StorageHelper.cs,GetFileExtension,The following switch statement is missing a default case: switch (_serializerType) {  case StorageSerializer.JSON:  	return ".json";  case StorageSerializer.XML:  	return ".xml";  }  
Missing Default,PCLCache,StorageHelper,C:\repos\davidturneruk_PCLCache\PCLCache\PCLCache\Storage\StorageHelper.cs,SaveAsync,The following switch statement is missing a default case: switch (_serializerType) {  case StorageSerializer.JSON:  	var text = JsonConvert.SerializeObject (obj);  	//Write content to file  	using (Stream stream = await file.OpenAsync (FileAccess.ReadAndWrite)) {  		stream.Seek (0' SeekOrigin.Begin);  		byte[] content = Encoding.UTF8.GetBytes (text);  		await stream.WriteAsync (content' 0' content.Length);  		await stream.FlushAsync ();  	}  	break;  case StorageSerializer.XML:  	using (Stream stream = await file.OpenAsync (FileAccess.ReadAndWrite)) {  		stream.Seek (0' SeekOrigin.Begin);  		XmlSerializer serializer = new XmlSerializer (typeof(T));  		serializer.Serialize (stream' obj);  		await stream.FlushAsync ();  	}  	break;  }  
Missing Default,PCLCache,StorageHelper,C:\repos\davidturneruk_PCLCache\PCLCache\PCLCache\Storage\StorageHelper.cs,LoadAsync,The following switch statement is missing a default case: switch (_serializerType) {  case StorageSerializer.JSON:  	using (Stream stream = await file.OpenAsync (FileAccess.Read)) {  		byte[] content = new byte[stream.Length];  		await stream.ReadAsync (content' 0' (int)stream.Length);  		var data = Encoding.UTF8.GetString (content' 0' content.Length);  		result = JsonConvert.DeserializeObject<T> (data);  	}  	break;  case StorageSerializer.XML:  	XmlSerializer serializer = new XmlSerializer (typeof(T));  	using (Stream stream = await file.OpenAsync (FileAccess.Read)) {  		result = (T)serializer.Deserialize (stream);  		stream.Dispose ();  	}  	break;  }  
