Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Geocoding.Tests,BingMapsTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\BingMapsTest.cs,ApplyUserMapView,The method has 6 parameters. Parameters: address' userLatitude1' userLongitude1' userLatitude2' userLongitude2' country
Long Parameter List,Geocoding.Tests,GoogleGeocoderTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\GoogleGeocoderTest.cs,ApplyBoundsBias,The method has 6 parameters. Parameters: address' biasLatitude1' biasLongitude1' biasLatitude2' biasLongitude2' result
Long Statement,Geocoding.Tests,GeocoderTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\GeocoderTest.cs,CanGeocodeNormalizedAddress,The length of the statement  "			Address[] addresses = (await geocoder.GeocodeAsync("1600 pennsylvania ave nw"' "washington"' "dc"' null' null)).ToArray(); " is 122.
Long Statement,Geocoding.Tests,GoogleBusinessKeyTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\GoogleBusinessKeyTest.cs,Should_generate_signature_from_url,The length of the statement  "			string signedUrl = key.GenerateSignature("http://maps.googleapis.com/maps/api/geocode/json?address=New+York&sensor=false&client=clientID"); " is 139.
Long Statement,Geocoding.Tests,GoogleBusinessKeyTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\GoogleBusinessKeyTest.cs,Should_generate_signature_from_url,The length of the statement  "			Assert.Equal("http://maps.googleapis.com/maps/api/geocode/json?address=New+York&sensor=false&client=clientID&signature=KrU1TzVQM7Ur0i8i7K3huiw3MsA="' signedUrl); " is 161.
Virtual Method Call from Constructor,Geocoding.Tests,AsyncGeocoderTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\AsyncGeocoderTest.cs,AsyncGeocoderTest,The constructor "AsyncGeocoderTest" calls a virtual method "CreateAsyncGeocoder".
Virtual Method Call from Constructor,Geocoding.Tests,BatchGeocoderTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\BatchGeocoderTest.cs,BatchGeocoderTest,The constructor "BatchGeocoderTest" calls a virtual method "CreateBatchGeocoder".
Virtual Method Call from Constructor,Geocoding.Tests,GeocoderTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\GeocoderTest.cs,GeocoderTest,The constructor "GeocoderTest" calls a virtual method "CreateGeocoder".
Magic Number,Geocoding.Tests,AddressAssertionExtensions,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\AddressAssertionExtensions.cs,AssertWhiteHouseArea,The following statement contains a magic number: double lat = Math.Round(address.Coordinates.Latitude' 2);
Magic Number,Geocoding.Tests,AddressAssertionExtensions,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\AddressAssertionExtensions.cs,AssertWhiteHouseArea,The following statement contains a magic number: Assert.Equal(38.90' lat);
Magic Number,Geocoding.Tests,AddressAssertionExtensions,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\AddressAssertionExtensions.cs,AssertWhiteHouseArea,The following statement contains a magic number: double lng = Math.Round(address.Coordinates.Longitude' 2);
Magic Number,Geocoding.Tests,AddressAssertionExtensions,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\AddressAssertionExtensions.cs,AssertWhiteHouseArea,The following statement contains a magic number: Assert.Equal(-77.04' lng);
Magic Number,Geocoding.Tests,AsyncGeocoderTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\AsyncGeocoderTest.cs,CanReverseGeocodeAddressUnderDifferentCultures,The following statement contains a magic number: var addresses = await asyncGeocoder.ReverseGeocodeAsync(38.8976777' -77.036517);
Magic Number,Geocoding.Tests,AsyncGeocoderTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\AsyncGeocoderTest.cs,CanReverseGeocodeAddressUnderDifferentCultures,The following statement contains a magic number: var addresses = await asyncGeocoder.ReverseGeocodeAsync(38.8976777' -77.036517);
Magic Number,Geocoding.Tests,AsyncGeocoderTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\AsyncGeocoderTest.cs,CanReverseGeocodeAsync,The following statement contains a magic number: var addresses = await asyncGeocoder.ReverseGeocodeAsync(38.8976777' -77.036517);
Magic Number,Geocoding.Tests,AsyncGeocoderTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\AsyncGeocoderTest.cs,CanReverseGeocodeAsync,The following statement contains a magic number: var addresses = await asyncGeocoder.ReverseGeocodeAsync(38.8976777' -77.036517);
Magic Number,Geocoding.Tests,BingMapsTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\BingMapsTest.cs,ApplyUserMapView,The following statement contains a magic number: geoCoder.MaxResults = 20;
Magic Number,Geocoding.Tests,BingMapsTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\BingMapsTest.cs,CanReverseGeocodeIssue8,The following statement contains a magic number: BingAddress[] addresses = (await geoCoder.ReverseGeocodeAsync(38.8976777' -77.036517)).ToArray();
Magic Number,Geocoding.Tests,BingMapsTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\BingMapsTest.cs,CanReverseGeocodeIssue8,The following statement contains a magic number: BingAddress[] addresses = (await geoCoder.ReverseGeocodeAsync(38.8976777' -77.036517)).ToArray();
Magic Number,Geocoding.Tests,DistanceTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\DistanceTest.cs,CanCreate,The following statement contains a magic number: Distance distance = new Distance(5.7' DistanceUnits.Miles);
Magic Number,Geocoding.Tests,DistanceTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\DistanceTest.cs,CanCreate,The following statement contains a magic number: Assert.Equal(5.7' distance.Value);
Magic Number,Geocoding.Tests,DistanceTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\DistanceTest.cs,CanRoundValueToEightDecimalPlaces,The following statement contains a magic number: Distance distance = new Distance(0.123456789101112131415' DistanceUnits.Miles);
Magic Number,Geocoding.Tests,DistanceTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\DistanceTest.cs,CanRoundValueToEightDecimalPlaces,The following statement contains a magic number: Assert.Equal(0.12345679' distance.Value);
Magic Number,Geocoding.Tests,DistanceTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\DistanceTest.cs,CanCompareForEquality,The following statement contains a magic number: Distance distance1 = new Distance(5' DistanceUnits.Miles);
Magic Number,Geocoding.Tests,DistanceTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\DistanceTest.cs,CanCompareForEquality,The following statement contains a magic number: Distance distance2 = new Distance(5' DistanceUnits.Miles);
Magic Number,Geocoding.Tests,DistanceTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\DistanceTest.cs,CanImplicitlyConvertToDouble,The following statement contains a magic number: Distance distance = Distance.FromMiles(56);
Magic Number,Geocoding.Tests,GeocoderTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\GeocoderTest.cs,CanReverseGeocodeAddressUnderDifferentCultures,The following statement contains a magic number: Address[] addresses = (await geocoder.ReverseGeocodeAsync(38.8976777' -77.036517)).ToArray();
Magic Number,Geocoding.Tests,GeocoderTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\GeocoderTest.cs,CanReverseGeocodeAddressUnderDifferentCultures,The following statement contains a magic number: Address[] addresses = (await geocoder.ReverseGeocodeAsync(38.8976777' -77.036517)).ToArray();
Magic Number,Geocoding.Tests,GeocoderTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\GeocoderTest.cs,CanReverseGeocodeAsync,The following statement contains a magic number: Address[] addresses = (await geocoder.ReverseGeocodeAsync(38.8976777' -77.036517)).ToArray();
Magic Number,Geocoding.Tests,GeocoderTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\GeocoderTest.cs,CanReverseGeocodeAsync,The following statement contains a magic number: Address[] addresses = (await geocoder.ReverseGeocodeAsync(38.8976777' -77.036517)).ToArray();
Magic Number,Geocoding.Tests,LocationTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\LocationTest.cs,CanCreate,The following statement contains a magic number: const double lat = 85.6789;
Magic Number,Geocoding.Tests,LocationTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\LocationTest.cs,CanCreate,The following statement contains a magic number: const double lon = 92.4517;
Magic Number,Geocoding.Tests,LocationTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\LocationTest.cs,CanCompareForEquality,The following statement contains a magic number: Location loc1 = new Location(85.6789' 92.4517);
Magic Number,Geocoding.Tests,LocationTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\LocationTest.cs,CanCompareForEquality,The following statement contains a magic number: Location loc1 = new Location(85.6789' 92.4517);
Magic Number,Geocoding.Tests,LocationTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\LocationTest.cs,CanCompareForEquality,The following statement contains a magic number: Location loc2 = new Location(85.6789' 92.4517);
Magic Number,Geocoding.Tests,LocationTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\LocationTest.cs,CanCompareForEquality,The following statement contains a magic number: Location loc2 = new Location(85.6789' 92.4517);
Magic Number,Geocoding.Tests,LocationTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\LocationTest.cs,CanCalculateHaversineDistanceBetweenTwoAddresses,The following statement contains a magic number: Location loc2 = new Location(40' 20);
Magic Number,Geocoding.Tests,LocationTest,D:\research\architectureSmells\repos\chadly_Geocoding.net\test\Geocoding.Tests\LocationTest.cs,CanCalculateHaversineDistanceBetweenTwoAddresses,The following statement contains a magic number: Location loc2 = new Location(40' 20);
