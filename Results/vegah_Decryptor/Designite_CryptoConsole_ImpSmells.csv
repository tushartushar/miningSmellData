Implementation smell,Namespace,Class,File,Method,Description
Long Statement,CryptoConsole,Program,C:\repos\vegah_Decryptor\CryptoConsole\Program.cs,Main,The length of the statement  "				Console.WriteLine ("First 200 characters of solution is:\n {0}"' cracker.BestTry.Substring (0' cracker.BestTry.Length > 200 ? 200 : cracker.BestTry.Length)); " is 157.
Magic Number,CryptoConsole,Program,C:\repos\vegah_Decryptor\CryptoConsole\Program.cs,Main,The following statement contains a magic number: if (args.Length != 2) {  	Console.WriteLine ("Less or more than 2 arguments supplied");  }  else {  	Console.WriteLine ("Running......");  	QuadGramCollection collection = new QuadGramCollection ();  	collection.GenerateFromFile (args [0]);  	// Test random string generation and mutation...  	String fileContent;  	using (TextReader reader = new StreamReader (args [1])) {  		fileContent = reader.ReadToEnd ();  		// From wikipedia  	}  	Cracker cracker = new Cracker (fileContent' collection' 2' 1000);  	DateTime oldTime = DateTime.Now;  	DateTime started = oldTime;  	while (true) {  		cracker.Try ();  		DateTime newTime = DateTime.Now;  		if ((newTime - oldTime).TotalMilliseconds > 1000) {  			Console.SetCursorPosition (0' 4);  			Console.WriteLine ("Running for {0} ms     "' (newTime - started).TotalMilliseconds);  			Console.WriteLine ("Best score is {0}"' cracker.Bestscore);  			Console.WriteLine ("Best key is {0}"' cracker.BestKey);  			Console.WriteLine ("First 200 characters of solution is:\n {0}"' cracker.BestTry.Substring (0' cracker.BestTry.Length > 200 ? 200 : cracker.BestTry.Length));  			oldTime = newTime;  		}  	}  }  
Magic Number,CryptoConsole,Program,C:\repos\vegah_Decryptor\CryptoConsole\Program.cs,Main,The following statement contains a magic number: if (args.Length != 2) {  	Console.WriteLine ("Less or more than 2 arguments supplied");  }  else {  	Console.WriteLine ("Running......");  	QuadGramCollection collection = new QuadGramCollection ();  	collection.GenerateFromFile (args [0]);  	// Test random string generation and mutation...  	String fileContent;  	using (TextReader reader = new StreamReader (args [1])) {  		fileContent = reader.ReadToEnd ();  		// From wikipedia  	}  	Cracker cracker = new Cracker (fileContent' collection' 2' 1000);  	DateTime oldTime = DateTime.Now;  	DateTime started = oldTime;  	while (true) {  		cracker.Try ();  		DateTime newTime = DateTime.Now;  		if ((newTime - oldTime).TotalMilliseconds > 1000) {  			Console.SetCursorPosition (0' 4);  			Console.WriteLine ("Running for {0} ms     "' (newTime - started).TotalMilliseconds);  			Console.WriteLine ("Best score is {0}"' cracker.Bestscore);  			Console.WriteLine ("Best key is {0}"' cracker.BestKey);  			Console.WriteLine ("First 200 characters of solution is:\n {0}"' cracker.BestTry.Substring (0' cracker.BestTry.Length > 200 ? 200 : cracker.BestTry.Length));  			oldTime = newTime;  		}  	}  }  
Magic Number,CryptoConsole,Program,C:\repos\vegah_Decryptor\CryptoConsole\Program.cs,Main,The following statement contains a magic number: if (args.Length != 2) {  	Console.WriteLine ("Less or more than 2 arguments supplied");  }  else {  	Console.WriteLine ("Running......");  	QuadGramCollection collection = new QuadGramCollection ();  	collection.GenerateFromFile (args [0]);  	// Test random string generation and mutation...  	String fileContent;  	using (TextReader reader = new StreamReader (args [1])) {  		fileContent = reader.ReadToEnd ();  		// From wikipedia  	}  	Cracker cracker = new Cracker (fileContent' collection' 2' 1000);  	DateTime oldTime = DateTime.Now;  	DateTime started = oldTime;  	while (true) {  		cracker.Try ();  		DateTime newTime = DateTime.Now;  		if ((newTime - oldTime).TotalMilliseconds > 1000) {  			Console.SetCursorPosition (0' 4);  			Console.WriteLine ("Running for {0} ms     "' (newTime - started).TotalMilliseconds);  			Console.WriteLine ("Best score is {0}"' cracker.Bestscore);  			Console.WriteLine ("Best key is {0}"' cracker.BestKey);  			Console.WriteLine ("First 200 characters of solution is:\n {0}"' cracker.BestTry.Substring (0' cracker.BestTry.Length > 200 ? 200 : cracker.BestTry.Length));  			oldTime = newTime;  		}  	}  }  
Magic Number,CryptoConsole,Program,C:\repos\vegah_Decryptor\CryptoConsole\Program.cs,Main,The following statement contains a magic number: if (args.Length != 2) {  	Console.WriteLine ("Less or more than 2 arguments supplied");  }  else {  	Console.WriteLine ("Running......");  	QuadGramCollection collection = new QuadGramCollection ();  	collection.GenerateFromFile (args [0]);  	// Test random string generation and mutation...  	String fileContent;  	using (TextReader reader = new StreamReader (args [1])) {  		fileContent = reader.ReadToEnd ();  		// From wikipedia  	}  	Cracker cracker = new Cracker (fileContent' collection' 2' 1000);  	DateTime oldTime = DateTime.Now;  	DateTime started = oldTime;  	while (true) {  		cracker.Try ();  		DateTime newTime = DateTime.Now;  		if ((newTime - oldTime).TotalMilliseconds > 1000) {  			Console.SetCursorPosition (0' 4);  			Console.WriteLine ("Running for {0} ms     "' (newTime - started).TotalMilliseconds);  			Console.WriteLine ("Best score is {0}"' cracker.Bestscore);  			Console.WriteLine ("Best key is {0}"' cracker.BestKey);  			Console.WriteLine ("First 200 characters of solution is:\n {0}"' cracker.BestTry.Substring (0' cracker.BestTry.Length > 200 ? 200 : cracker.BestTry.Length));  			oldTime = newTime;  		}  	}  }  
Magic Number,CryptoConsole,Program,C:\repos\vegah_Decryptor\CryptoConsole\Program.cs,Main,The following statement contains a magic number: if (args.Length != 2) {  	Console.WriteLine ("Less or more than 2 arguments supplied");  }  else {  	Console.WriteLine ("Running......");  	QuadGramCollection collection = new QuadGramCollection ();  	collection.GenerateFromFile (args [0]);  	// Test random string generation and mutation...  	String fileContent;  	using (TextReader reader = new StreamReader (args [1])) {  		fileContent = reader.ReadToEnd ();  		// From wikipedia  	}  	Cracker cracker = new Cracker (fileContent' collection' 2' 1000);  	DateTime oldTime = DateTime.Now;  	DateTime started = oldTime;  	while (true) {  		cracker.Try ();  		DateTime newTime = DateTime.Now;  		if ((newTime - oldTime).TotalMilliseconds > 1000) {  			Console.SetCursorPosition (0' 4);  			Console.WriteLine ("Running for {0} ms     "' (newTime - started).TotalMilliseconds);  			Console.WriteLine ("Best score is {0}"' cracker.Bestscore);  			Console.WriteLine ("Best key is {0}"' cracker.BestKey);  			Console.WriteLine ("First 200 characters of solution is:\n {0}"' cracker.BestTry.Substring (0' cracker.BestTry.Length > 200 ? 200 : cracker.BestTry.Length));  			oldTime = newTime;  		}  	}  }  
Magic Number,CryptoConsole,Program,C:\repos\vegah_Decryptor\CryptoConsole\Program.cs,Main,The following statement contains a magic number: if (args.Length != 2) {  	Console.WriteLine ("Less or more than 2 arguments supplied");  }  else {  	Console.WriteLine ("Running......");  	QuadGramCollection collection = new QuadGramCollection ();  	collection.GenerateFromFile (args [0]);  	// Test random string generation and mutation...  	String fileContent;  	using (TextReader reader = new StreamReader (args [1])) {  		fileContent = reader.ReadToEnd ();  		// From wikipedia  	}  	Cracker cracker = new Cracker (fileContent' collection' 2' 1000);  	DateTime oldTime = DateTime.Now;  	DateTime started = oldTime;  	while (true) {  		cracker.Try ();  		DateTime newTime = DateTime.Now;  		if ((newTime - oldTime).TotalMilliseconds > 1000) {  			Console.SetCursorPosition (0' 4);  			Console.WriteLine ("Running for {0} ms     "' (newTime - started).TotalMilliseconds);  			Console.WriteLine ("Best score is {0}"' cracker.Bestscore);  			Console.WriteLine ("Best key is {0}"' cracker.BestKey);  			Console.WriteLine ("First 200 characters of solution is:\n {0}"' cracker.BestTry.Substring (0' cracker.BestTry.Length > 200 ? 200 : cracker.BestTry.Length));  			oldTime = newTime;  		}  	}  }  
Magic Number,CryptoConsole,Program,C:\repos\vegah_Decryptor\CryptoConsole\Program.cs,Main,The following statement contains a magic number: if (args.Length != 2) {  	Console.WriteLine ("Less or more than 2 arguments supplied");  }  else {  	Console.WriteLine ("Running......");  	QuadGramCollection collection = new QuadGramCollection ();  	collection.GenerateFromFile (args [0]);  	// Test random string generation and mutation...  	String fileContent;  	using (TextReader reader = new StreamReader (args [1])) {  		fileContent = reader.ReadToEnd ();  		// From wikipedia  	}  	Cracker cracker = new Cracker (fileContent' collection' 2' 1000);  	DateTime oldTime = DateTime.Now;  	DateTime started = oldTime;  	while (true) {  		cracker.Try ();  		DateTime newTime = DateTime.Now;  		if ((newTime - oldTime).TotalMilliseconds > 1000) {  			Console.SetCursorPosition (0' 4);  			Console.WriteLine ("Running for {0} ms     "' (newTime - started).TotalMilliseconds);  			Console.WriteLine ("Best score is {0}"' cracker.Bestscore);  			Console.WriteLine ("Best key is {0}"' cracker.BestKey);  			Console.WriteLine ("First 200 characters of solution is:\n {0}"' cracker.BestTry.Substring (0' cracker.BestTry.Length > 200 ? 200 : cracker.BestTry.Length));  			oldTime = newTime;  		}  	}  }  
Magic Number,CryptoConsole,Program,C:\repos\vegah_Decryptor\CryptoConsole\Program.cs,Main,The following statement contains a magic number: while (true) {  	cracker.Try ();  	DateTime newTime = DateTime.Now;  	if ((newTime - oldTime).TotalMilliseconds > 1000) {  		Console.SetCursorPosition (0' 4);  		Console.WriteLine ("Running for {0} ms     "' (newTime - started).TotalMilliseconds);  		Console.WriteLine ("Best score is {0}"' cracker.Bestscore);  		Console.WriteLine ("Best key is {0}"' cracker.BestKey);  		Console.WriteLine ("First 200 characters of solution is:\n {0}"' cracker.BestTry.Substring (0' cracker.BestTry.Length > 200 ? 200 : cracker.BestTry.Length));  		oldTime = newTime;  	}  }  
Magic Number,CryptoConsole,Program,C:\repos\vegah_Decryptor\CryptoConsole\Program.cs,Main,The following statement contains a magic number: while (true) {  	cracker.Try ();  	DateTime newTime = DateTime.Now;  	if ((newTime - oldTime).TotalMilliseconds > 1000) {  		Console.SetCursorPosition (0' 4);  		Console.WriteLine ("Running for {0} ms     "' (newTime - started).TotalMilliseconds);  		Console.WriteLine ("Best score is {0}"' cracker.Bestscore);  		Console.WriteLine ("Best key is {0}"' cracker.BestKey);  		Console.WriteLine ("First 200 characters of solution is:\n {0}"' cracker.BestTry.Substring (0' cracker.BestTry.Length > 200 ? 200 : cracker.BestTry.Length));  		oldTime = newTime;  	}  }  
Magic Number,CryptoConsole,Program,C:\repos\vegah_Decryptor\CryptoConsole\Program.cs,Main,The following statement contains a magic number: while (true) {  	cracker.Try ();  	DateTime newTime = DateTime.Now;  	if ((newTime - oldTime).TotalMilliseconds > 1000) {  		Console.SetCursorPosition (0' 4);  		Console.WriteLine ("Running for {0} ms     "' (newTime - started).TotalMilliseconds);  		Console.WriteLine ("Best score is {0}"' cracker.Bestscore);  		Console.WriteLine ("Best key is {0}"' cracker.BestKey);  		Console.WriteLine ("First 200 characters of solution is:\n {0}"' cracker.BestTry.Substring (0' cracker.BestTry.Length > 200 ? 200 : cracker.BestTry.Length));  		oldTime = newTime;  	}  }  
Magic Number,CryptoConsole,Program,C:\repos\vegah_Decryptor\CryptoConsole\Program.cs,Main,The following statement contains a magic number: while (true) {  	cracker.Try ();  	DateTime newTime = DateTime.Now;  	if ((newTime - oldTime).TotalMilliseconds > 1000) {  		Console.SetCursorPosition (0' 4);  		Console.WriteLine ("Running for {0} ms     "' (newTime - started).TotalMilliseconds);  		Console.WriteLine ("Best score is {0}"' cracker.Bestscore);  		Console.WriteLine ("Best key is {0}"' cracker.BestKey);  		Console.WriteLine ("First 200 characters of solution is:\n {0}"' cracker.BestTry.Substring (0' cracker.BestTry.Length > 200 ? 200 : cracker.BestTry.Length));  		oldTime = newTime;  	}  }  
Magic Number,CryptoConsole,Program,C:\repos\vegah_Decryptor\CryptoConsole\Program.cs,Main,The following statement contains a magic number: if ((newTime - oldTime).TotalMilliseconds > 1000) {  	Console.SetCursorPosition (0' 4);  	Console.WriteLine ("Running for {0} ms     "' (newTime - started).TotalMilliseconds);  	Console.WriteLine ("Best score is {0}"' cracker.Bestscore);  	Console.WriteLine ("Best key is {0}"' cracker.BestKey);  	Console.WriteLine ("First 200 characters of solution is:\n {0}"' cracker.BestTry.Substring (0' cracker.BestTry.Length > 200 ? 200 : cracker.BestTry.Length));  	oldTime = newTime;  }  
Magic Number,CryptoConsole,Program,C:\repos\vegah_Decryptor\CryptoConsole\Program.cs,Main,The following statement contains a magic number: if ((newTime - oldTime).TotalMilliseconds > 1000) {  	Console.SetCursorPosition (0' 4);  	Console.WriteLine ("Running for {0} ms     "' (newTime - started).TotalMilliseconds);  	Console.WriteLine ("Best score is {0}"' cracker.Bestscore);  	Console.WriteLine ("Best key is {0}"' cracker.BestKey);  	Console.WriteLine ("First 200 characters of solution is:\n {0}"' cracker.BestTry.Substring (0' cracker.BestTry.Length > 200 ? 200 : cracker.BestTry.Length));  	oldTime = newTime;  }  
Magic Number,CryptoConsole,Program,C:\repos\vegah_Decryptor\CryptoConsole\Program.cs,Main,The following statement contains a magic number: if ((newTime - oldTime).TotalMilliseconds > 1000) {  	Console.SetCursorPosition (0' 4);  	Console.WriteLine ("Running for {0} ms     "' (newTime - started).TotalMilliseconds);  	Console.WriteLine ("Best score is {0}"' cracker.Bestscore);  	Console.WriteLine ("Best key is {0}"' cracker.BestKey);  	Console.WriteLine ("First 200 characters of solution is:\n {0}"' cracker.BestTry.Substring (0' cracker.BestTry.Length > 200 ? 200 : cracker.BestTry.Length));  	oldTime = newTime;  }  
Magic Number,CryptoConsole,Program,C:\repos\vegah_Decryptor\CryptoConsole\Program.cs,Main,The following statement contains a magic number: if ((newTime - oldTime).TotalMilliseconds > 1000) {  	Console.SetCursorPosition (0' 4);  	Console.WriteLine ("Running for {0} ms     "' (newTime - started).TotalMilliseconds);  	Console.WriteLine ("Best score is {0}"' cracker.Bestscore);  	Console.WriteLine ("Best key is {0}"' cracker.BestKey);  	Console.WriteLine ("First 200 characters of solution is:\n {0}"' cracker.BestTry.Substring (0' cracker.BestTry.Length > 200 ? 200 : cracker.BestTry.Length));  	oldTime = newTime;  }  
Magic Number,CryptoConsole,Program,C:\repos\vegah_Decryptor\CryptoConsole\Program.cs,Main,The following statement contains a magic number: Console.SetCursorPosition (0' 4);  
Magic Number,CryptoConsole,Program,C:\repos\vegah_Decryptor\CryptoConsole\Program.cs,Main,The following statement contains a magic number: Console.WriteLine ("First 200 characters of solution is:\n {0}"' cracker.BestTry.Substring (0' cracker.BestTry.Length > 200 ? 200 : cracker.BestTry.Length));  
Magic Number,CryptoConsole,Program,C:\repos\vegah_Decryptor\CryptoConsole\Program.cs,Main,The following statement contains a magic number: Console.WriteLine ("First 200 characters of solution is:\n {0}"' cracker.BestTry.Substring (0' cracker.BestTry.Length > 200 ? 200 : cracker.BestTry.Length));  
