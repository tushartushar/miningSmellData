Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PowerStudio.LanguageServices.PowerShell.Intellisense.Completion,CompletionCommandHandler,C:\repos\IntelliTect_PowerStudio\source\PowerStudio.LanguageServices.PowerShell\Intellisense\Completion\CompletionCommandHandler.cs,Exec,Cyclomatic complexity of the method is 8
Long Parameter List,PowerStudio.LanguageServices.PowerShell.Formatting,ParagraphPropertiesFactoryService,C:\repos\IntelliTect_PowerStudio\source\PowerStudio.LanguageServices.PowerShell\Formatting\ParagraphPropertiesFactoryService.cs,Create,The method has 5 parameters. Parameters: formattedLineSource' textProperties' line' lineStart' lineSegment
Long Parameter List,PowerStudio.LanguageServices.PowerShell.Intellisense.Completion,CompletionCommandHandler,C:\repos\IntelliTect_PowerStudio\source\PowerStudio.LanguageServices.PowerShell\Intellisense\Completion\CompletionCommandHandler.cs,Exec,The method has 5 parameters. Parameters: pguidCmdGroup' nCmdID' nCmdexecopt' pvaIn' pvaOut
Long Parameter List,PowerStudio.LanguageServices.PowerShell,PowerShellPackageBase,C:\repos\IntelliTect_PowerStudio\source\PowerStudio.LanguageServices.PowerShell\PowerShellPackageBase.cs,OnActivationChange,The method has 6 parameters. Parameters: pic' fSameComponent' pcrinfo' fHostIsActivating' pchostinfo' dwReserved
Long Identifier,PowerStudio.LanguageServices.PowerShell,LanguageConfiguration,C:\repos\IntelliTect_PowerStudio\source\PowerStudio.LanguageServices.PowerShell\LanguageConfiguration.cs,,The length of the parameter PowerShellContentTypeDefinition is 31.
Long Identifier,PowerStudio.LanguageServices.PowerShell,LanguageConfiguration,C:\repos\IntelliTect_PowerStudio\source\PowerStudio.LanguageServices.PowerShell\LanguageConfiguration.cs,,The length of the parameter PowerShellFileExtensionDefinition is 33.
Long Identifier,PowerStudio.LanguageServices.PowerShell,LanguageConfiguration,C:\repos\IntelliTect_PowerStudio\source\PowerStudio.LanguageServices.PowerShell\LanguageConfiguration.cs,,The length of the parameter PowerShellModuleFileExtensionDefinition is 39.
Long Identifier,PowerStudio.LanguageServices.PowerShell,LanguageConfiguration,C:\repos\IntelliTect_PowerStudio\source\PowerStudio.LanguageServices.PowerShell\LanguageConfiguration.cs,,The length of the parameter PowerShellConsoleFileExtensionDefinition is 40.
Long Identifier,PowerStudio.LanguageServices.PowerShell,LanguageConfiguration,C:\repos\IntelliTect_PowerStudio\source\PowerStudio.LanguageServices.PowerShell\LanguageConfiguration.cs,,The length of the parameter PowerShellDataFileExtensionDefinition is 37.
Long Identifier,PowerStudio.LanguageServices.PowerShell,LanguageConfiguration,C:\repos\IntelliTect_PowerStudio\source\PowerStudio.LanguageServices.PowerShell\LanguageConfiguration.cs,,The length of the parameter PowerShellXmlFileExtensionDefinition is 36.
Long Identifier,PowerStudio.LanguageServices.PowerShell,LanguageConfiguration,C:\repos\IntelliTect_PowerStudio\source\PowerStudio.LanguageServices.PowerShell\LanguageConfiguration.cs,,The length of the parameter ChewieNugetFileExtensionDefinition is 34.
Complex Conditional,PowerStudio.LanguageServices.PowerShell.Intellisense.Completion,CompletionCommandHandler,C:\repos\IntelliTect_PowerStudio\source\PowerStudio.LanguageServices.PowerShell\Intellisense\Completion\CompletionCommandHandler.cs,Exec,The conditional expression  "nCmdID == (uint) VSConstants.VSStd2KCmdID.RETURN                   || nCmdID == (uint) VSConstants.VSStd2KCmdID.TAB                   ||                   ( char.IsWhiteSpace( typedChar ) || ( char.IsPunctuation( typedChar ) && typedChar != '-' ) )"  is complex.
Complex Conditional,PowerStudio.LanguageServices.PowerShell.Intellisense.Completion,CompletionCommandHandler,C:\repos\IntelliTect_PowerStudio\source\PowerStudio.LanguageServices.PowerShell\Intellisense\Completion\CompletionCommandHandler.cs,Exec,The conditional expression  "!typedChar.Equals( char.MinValue ) &&                   ( char.IsLetterOrDigit( typedChar ) || typedChar == '$' || typedChar == '-' )"  is complex.
Magic Number,PowerStudio.LanguageServices.PowerShell.Editor,MethodGlyphFactory,C:\repos\IntelliTect_PowerStudio\source\PowerStudio.LanguageServices.PowerShell\Editor\MethodGlyphFactory.cs,CreateGlyph,The following statement contains a magic number: const double size = 15.0;
Magic Number,PowerStudio.LanguageServices.PowerShell.Editor,MethodGlyphFactory,C:\repos\IntelliTect_PowerStudio\source\PowerStudio.LanguageServices.PowerShell\Editor\MethodGlyphFactory.cs,CreateGlyph,The following statement contains a magic number: var ellipse =                      new Ellipse                      {                              Fill = Brushes.LightBlue'                              StrokeThickness = 1'                              Stroke = Brushes.DarkBlue'                              Height = size'                              Width = size'                              Opacity = 0.44                      };
Magic Number,PowerStudio.LanguageServices.PowerShell.Formatting,PowerShellTextFormattingParagraphProperties,C:\repos\IntelliTect_PowerStudio\source\PowerStudio.LanguageServices.PowerShell\Formatting\PowerShellTextFormattingParagraphProperties.cs,UpdateProperties,The following statement contains a magic number: if ( properties == null )              {                  InitialTabSize = 4;                  _DefaultIncrementalTab = formattedLineSource.ColumnWidth * formattedLineSource.TabSize;                  return;              }
Magic Number,PowerStudio.LanguageServices.PowerShell.Project,GeneralSettingsPage,C:\repos\IntelliTect_PowerStudio\source\PowerStudio.LanguageServices.PowerShell\Project\GeneralSettingsPage.cs,GeneralSettingsPage,The following statement contains a magic number: InitialTabSize = 4;
Magic Number,PowerStudio.LanguageServices.PowerShell.Project,GeneralSettingsPage,C:\repos\IntelliTect_PowerStudio\source\PowerStudio.LanguageServices.PowerShell\Project\GeneralSettingsPage.cs,GeneralSettingsPage,The following statement contains a magic number: NormalTabSize = 4;
Magic Number,PowerStudio.LanguageServices.PowerShell.Tagging,TokenClassifier,C:\repos\IntelliTect_PowerStudio\source\PowerStudio.LanguageServices.PowerShell\Tagging\TokenClassifier.cs,GetTokenTypeClassification,The following statement contains a magic number: if ( ( index < 0 ) ||                   ( index >= _TokenClassifications.Length ) )              {                  index = 10;              }
