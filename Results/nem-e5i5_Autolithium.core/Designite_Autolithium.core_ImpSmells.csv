Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Autolithium.core,Scope,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\LiBeam\0 - Scope.cs,CallFuncSmartly,Cyclomatic complexity of the method is 8
Complex Method,Autolithium.core,LiParser,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\LiParser\1 - LiParser.ParseBoolean.cs,ParseBoolean,Cyclomatic complexity of the method is 10
Complex Method,Autolithium.core,AutoitErrorMSG,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\AutoitExceptionType.cs,of,Cyclomatic complexity of the method is 20
Long Parameter List,Autolithium.core,ClrScope,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\LiBeam\5 - ClrScope.cs,ClrScope,The method has 5 parameters.
Long Parameter List,Autolithium.core,Scope,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\LiBeam\0 - Scope.cs,CallFuncSmartly,The method has 12 parameters.
Long Parameter List,Autolithium.core,Autcorlib,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\Autcorlib.cs,STRINGINSTR,The method has 6 parameters.
Long Parameter List,Autolithium.core,Autcorlib,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\Autcorlib.cs,STRINGREGEXPMATCHES,The method has 5 parameters.
Long Statement,Autolithium.core,AutExpression,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\AutExpression.cs,VariableAccess,The length of the statement  "		ExpressionType = (IsGlobal == null) ? AutExpressionType.Variable : IsGlobal ?? true ? AutExpressionType.GlobalVariable : AutExpressionType.LocalVariable' " is 153.
Long Statement,Autolithium.core,AutExpression,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\AutExpression.cs,VariableAccess,The length of the statement  "		ExpressionType = (IsGlobal == null) ? AutExpressionType.Variable : IsGlobal ?? true ? AutExpressionType.GlobalVariable : AutExpressionType.LocalVariable' " is 153.
Long Statement,Autolithium.core,ExpressionTypeBeam,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\LiBeam\ConstantExpressionBeam.cs,ConvertTo,The length of the statement  "		return Expression.Constant (E.Type == typeof(string) ? (string)E.Value != "" : NumericType.Contains (E.Value) ? (dynamic)E.Value > 0 : E.Value != null' T); " is 155.
Long Statement,Autolithium.core,LocalScope,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\LiBeam\3 - LocalScope.cs,GetVar,The length of the statement  "		return this.ScopeVariables.Cast<ParameterExpression> ().First (x => x.Name == Name && this.OnDateType [x.Name].Contains (x.Type)); " is 130.
Long Statement,Autolithium.core,LocalScope,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\LiBeam\3 - LocalScope.cs,HasVar,The length of the statement  "	return this.ScopeVariables.Cast<ParameterExpression> ().Any (x => x.Name == Name && x.Type == T && OnDateType [Name].Contains (T)); " is 131.
Long Statement,Autolithium.core,Scope,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\LiBeam\0 - Scope.cs,CallFuncSmartly,The length of the statement  "				Expression.NewArrayBounds (Selected.Parameters.Last ().ArgType.GetElementType ()' Arguments.Skip (Selected.Parameters.Count () - 1)) " is 132.
Long Statement,Autolithium.core,Scope,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\LiBeam\0 - Scope.cs,CallFuncSmartly,The length of the statement  "	throw new AutoitException (AutoitExceptionType.NOFUNCMATCH' -1' -1' Name + "(" + string.Join ("' "' Arguments.Select (x => x.Type.ToString ()) + ")")); " is 151.
Long Statement,Autolithium.core,Autcorlib,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\Autcorlib.cs,STRINGINSTR,The length of the statement  "			pos = str.LastIndexOf (substr' (int)pos + 1' (int)count' casesence != 1 ? StringComparison.OrdinalIgnoreCase : StringComparison.Ordinal); " is 137.
Long Statement,Autolithium.core,Autcorlib,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\Autcorlib.cs,STRINGINSTR,The length of the statement  "		pos = str.IndexOf (substr' (int)pos - 1' (int)count' casesence != 1 ? StringComparison.OrdinalIgnoreCase : StringComparison.Ordinal); " is 133.
Long Statement,Autolithium.core,Autcorlib,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\Autcorlib.cs,STRINGREGEXPMATCHES,The length of the statement  "	return Enumerable.Select<Match' string> (Regex.Matches (str.Substring ((offset ?? 1) - 1)' Pattern).Cast<Match> ()' x => x.Value).ToArray (); " is 141.
Magic Number,Autolithium.core,LiParser,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\LiParser\1 - LiParser.ParseBoolean.cs,ParseBoolean,The following statement contains a magic number: do {  	ConsumeWS ();  	ch = char.ToUpper (Read () [0]);  	switch (ch) {  	case 'A':  		if (Peek (3).ToUpper () == "ND ") {  			Consume (3);  			C1 = Expression.AndAlso (C1.ConvertTo (typeof(bool))' ParseRelationnal (ExpectAssign).ConvertTo (typeof(bool)));  		}  		else  			break;  		continue;  	case 'O':  		if (Peek (2).ToUpper () == "R ") {  			Consume (2);  			C1 = Expression.OrElse (C1.ConvertTo (typeof(bool))' ParseRelationnal (ExpectAssign).ConvertTo (typeof(bool)));  		}  		else  			break;  		continue;  	}  	SeekRelative (-1);  	break;  }  while (!EOL);  
Magic Number,Autolithium.core,LiParser,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\LiParser\1 - LiParser.ParseBoolean.cs,ParseBoolean,The following statement contains a magic number: do {  	ConsumeWS ();  	ch = char.ToUpper (Read () [0]);  	switch (ch) {  	case 'A':  		if (Peek (3).ToUpper () == "ND ") {  			Consume (3);  			C1 = Expression.AndAlso (C1.ConvertTo (typeof(bool))' ParseRelationnal (ExpectAssign).ConvertTo (typeof(bool)));  		}  		else  			break;  		continue;  	case 'O':  		if (Peek (2).ToUpper () == "R ") {  			Consume (2);  			C1 = Expression.OrElse (C1.ConvertTo (typeof(bool))' ParseRelationnal (ExpectAssign).ConvertTo (typeof(bool)));  		}  		else  			break;  		continue;  	}  	SeekRelative (-1);  	break;  }  while (!EOL);  
Magic Number,Autolithium.core,LiParser,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\LiParser\1 - LiParser.ParseBoolean.cs,ParseBoolean,The following statement contains a magic number: do {  	ConsumeWS ();  	ch = char.ToUpper (Read () [0]);  	switch (ch) {  	case 'A':  		if (Peek (3).ToUpper () == "ND ") {  			Consume (3);  			C1 = Expression.AndAlso (C1.ConvertTo (typeof(bool))' ParseRelationnal (ExpectAssign).ConvertTo (typeof(bool)));  		}  		else  			break;  		continue;  	case 'O':  		if (Peek (2).ToUpper () == "R ") {  			Consume (2);  			C1 = Expression.OrElse (C1.ConvertTo (typeof(bool))' ParseRelationnal (ExpectAssign).ConvertTo (typeof(bool)));  		}  		else  			break;  		continue;  	}  	SeekRelative (-1);  	break;  }  while (!EOL);  
Magic Number,Autolithium.core,LiParser,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\LiParser\1 - LiParser.ParseBoolean.cs,ParseBoolean,The following statement contains a magic number: do {  	ConsumeWS ();  	ch = char.ToUpper (Read () [0]);  	switch (ch) {  	case 'A':  		if (Peek (3).ToUpper () == "ND ") {  			Consume (3);  			C1 = Expression.AndAlso (C1.ConvertTo (typeof(bool))' ParseRelationnal (ExpectAssign).ConvertTo (typeof(bool)));  		}  		else  			break;  		continue;  	case 'O':  		if (Peek (2).ToUpper () == "R ") {  			Consume (2);  			C1 = Expression.OrElse (C1.ConvertTo (typeof(bool))' ParseRelationnal (ExpectAssign).ConvertTo (typeof(bool)));  		}  		else  			break;  		continue;  	}  	SeekRelative (-1);  	break;  }  while (!EOL);  
Magic Number,Autolithium.core,LiParser,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\LiParser\1 - LiParser.ParseBoolean.cs,ParseBoolean,The following statement contains a magic number: switch (ch) {  case 'A':  	if (Peek (3).ToUpper () == "ND ") {  		Consume (3);  		C1 = Expression.AndAlso (C1.ConvertTo (typeof(bool))' ParseRelationnal (ExpectAssign).ConvertTo (typeof(bool)));  	}  	else  		break;  	continue;  case 'O':  	if (Peek (2).ToUpper () == "R ") {  		Consume (2);  		C1 = Expression.OrElse (C1.ConvertTo (typeof(bool))' ParseRelationnal (ExpectAssign).ConvertTo (typeof(bool)));  	}  	else  		break;  	continue;  }  
Magic Number,Autolithium.core,LiParser,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\LiParser\1 - LiParser.ParseBoolean.cs,ParseBoolean,The following statement contains a magic number: switch (ch) {  case 'A':  	if (Peek (3).ToUpper () == "ND ") {  		Consume (3);  		C1 = Expression.AndAlso (C1.ConvertTo (typeof(bool))' ParseRelationnal (ExpectAssign).ConvertTo (typeof(bool)));  	}  	else  		break;  	continue;  case 'O':  	if (Peek (2).ToUpper () == "R ") {  		Consume (2);  		C1 = Expression.OrElse (C1.ConvertTo (typeof(bool))' ParseRelationnal (ExpectAssign).ConvertTo (typeof(bool)));  	}  	else  		break;  	continue;  }  
Magic Number,Autolithium.core,LiParser,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\LiParser\1 - LiParser.ParseBoolean.cs,ParseBoolean,The following statement contains a magic number: switch (ch) {  case 'A':  	if (Peek (3).ToUpper () == "ND ") {  		Consume (3);  		C1 = Expression.AndAlso (C1.ConvertTo (typeof(bool))' ParseRelationnal (ExpectAssign).ConvertTo (typeof(bool)));  	}  	else  		break;  	continue;  case 'O':  	if (Peek (2).ToUpper () == "R ") {  		Consume (2);  		C1 = Expression.OrElse (C1.ConvertTo (typeof(bool))' ParseRelationnal (ExpectAssign).ConvertTo (typeof(bool)));  	}  	else  		break;  	continue;  }  
Magic Number,Autolithium.core,LiParser,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\LiParser\1 - LiParser.ParseBoolean.cs,ParseBoolean,The following statement contains a magic number: switch (ch) {  case 'A':  	if (Peek (3).ToUpper () == "ND ") {  		Consume (3);  		C1 = Expression.AndAlso (C1.ConvertTo (typeof(bool))' ParseRelationnal (ExpectAssign).ConvertTo (typeof(bool)));  	}  	else  		break;  	continue;  case 'O':  	if (Peek (2).ToUpper () == "R ") {  		Consume (2);  		C1 = Expression.OrElse (C1.ConvertTo (typeof(bool))' ParseRelationnal (ExpectAssign).ConvertTo (typeof(bool)));  	}  	else  		break;  	continue;  }  
Magic Number,Autolithium.core,LiParser,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\LiParser\1 - LiParser.ParseBoolean.cs,ParseBoolean,The following statement contains a magic number: if (Peek (3).ToUpper () == "ND ") {  	Consume (3);  	C1 = Expression.AndAlso (C1.ConvertTo (typeof(bool))' ParseRelationnal (ExpectAssign).ConvertTo (typeof(bool)));  }  else  	break;  
Magic Number,Autolithium.core,LiParser,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\LiParser\1 - LiParser.ParseBoolean.cs,ParseBoolean,The following statement contains a magic number: if (Peek (3).ToUpper () == "ND ") {  	Consume (3);  	C1 = Expression.AndAlso (C1.ConvertTo (typeof(bool))' ParseRelationnal (ExpectAssign).ConvertTo (typeof(bool)));  }  else  	break;  
Magic Number,Autolithium.core,LiParser,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\LiParser\1 - LiParser.ParseBoolean.cs,ParseBoolean,The following statement contains a magic number: Consume (3);  
Magic Number,Autolithium.core,LiParser,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\LiParser\1 - LiParser.ParseBoolean.cs,ParseBoolean,The following statement contains a magic number: if (Peek (2).ToUpper () == "R ") {  	Consume (2);  	C1 = Expression.OrElse (C1.ConvertTo (typeof(bool))' ParseRelationnal (ExpectAssign).ConvertTo (typeof(bool)));  }  else  	break;  
Magic Number,Autolithium.core,LiParser,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\LiParser\1 - LiParser.ParseBoolean.cs,ParseBoolean,The following statement contains a magic number: if (Peek (2).ToUpper () == "R ") {  	Consume (2);  	C1 = Expression.OrElse (C1.ConvertTo (typeof(bool))' ParseRelationnal (ExpectAssign).ConvertTo (typeof(bool)));  }  else  	break;  
Magic Number,Autolithium.core,LiParser,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\LiParser\1 - LiParser.ParseBoolean.cs,ParseBoolean,The following statement contains a magic number: Consume (2);  
Magic Number,Autolithium.core,Autcorlib,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\Autcorlib.cs,INT,The following statement contains a magic number: return Convert.ToInt64 (n1' 10);  
Magic Number,Autolithium.core,Autcorlib,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\Autcorlib.cs,RANDOMI,The following statement contains a magic number: return RandGenerator.Next (0' 2);  
Magic Number,Autolithium.core,Autcorlib,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\Autcorlib.cs,DEC,The following statement contains a magic number: if (n1 [0] == '0')  	if (char.ToLower (n1 [1]) == 'x')  		return Convert.ToInt64 (n1.Substring (2)' 16);  	else if (char.ToLower (n1 [1]) == 'b')  		return Convert.ToInt64 (n1.Substring (2)' 2);  
Magic Number,Autolithium.core,Autcorlib,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\Autcorlib.cs,DEC,The following statement contains a magic number: if (n1 [0] == '0')  	if (char.ToLower (n1 [1]) == 'x')  		return Convert.ToInt64 (n1.Substring (2)' 16);  	else if (char.ToLower (n1 [1]) == 'b')  		return Convert.ToInt64 (n1.Substring (2)' 2);  
Magic Number,Autolithium.core,Autcorlib,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\Autcorlib.cs,DEC,The following statement contains a magic number: if (n1 [0] == '0')  	if (char.ToLower (n1 [1]) == 'x')  		return Convert.ToInt64 (n1.Substring (2)' 16);  	else if (char.ToLower (n1 [1]) == 'b')  		return Convert.ToInt64 (n1.Substring (2)' 2);  
Magic Number,Autolithium.core,Autcorlib,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\Autcorlib.cs,DEC,The following statement contains a magic number: if (n1 [0] == '0')  	if (char.ToLower (n1 [1]) == 'x')  		return Convert.ToInt64 (n1.Substring (2)' 16);  	else if (char.ToLower (n1 [1]) == 'b')  		return Convert.ToInt64 (n1.Substring (2)' 2);  
Magic Number,Autolithium.core,Autcorlib,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\Autcorlib.cs,DEC,The following statement contains a magic number: if (char.ToLower (n1 [1]) == 'x')  	return Convert.ToInt64 (n1.Substring (2)' 16);  else if (char.ToLower (n1 [1]) == 'b')  	return Convert.ToInt64 (n1.Substring (2)' 2);  
Magic Number,Autolithium.core,Autcorlib,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\Autcorlib.cs,DEC,The following statement contains a magic number: if (char.ToLower (n1 [1]) == 'x')  	return Convert.ToInt64 (n1.Substring (2)' 16);  else if (char.ToLower (n1 [1]) == 'b')  	return Convert.ToInt64 (n1.Substring (2)' 2);  
Magic Number,Autolithium.core,Autcorlib,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\Autcorlib.cs,DEC,The following statement contains a magic number: if (char.ToLower (n1 [1]) == 'x')  	return Convert.ToInt64 (n1.Substring (2)' 16);  else if (char.ToLower (n1 [1]) == 'b')  	return Convert.ToInt64 (n1.Substring (2)' 2);  
Magic Number,Autolithium.core,Autcorlib,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\Autcorlib.cs,DEC,The following statement contains a magic number: if (char.ToLower (n1 [1]) == 'x')  	return Convert.ToInt64 (n1.Substring (2)' 16);  else if (char.ToLower (n1 [1]) == 'b')  	return Convert.ToInt64 (n1.Substring (2)' 2);  
Magic Number,Autolithium.core,Autcorlib,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\Autcorlib.cs,DEC,The following statement contains a magic number: return Convert.ToInt64 (n1.Substring (2)' 16);  
Magic Number,Autolithium.core,Autcorlib,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\Autcorlib.cs,DEC,The following statement contains a magic number: return Convert.ToInt64 (n1.Substring (2)' 16);  
Magic Number,Autolithium.core,Autcorlib,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\Autcorlib.cs,DEC,The following statement contains a magic number: if (char.ToLower (n1 [1]) == 'b')  	return Convert.ToInt64 (n1.Substring (2)' 2);  
Magic Number,Autolithium.core,Autcorlib,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\Autcorlib.cs,DEC,The following statement contains a magic number: if (char.ToLower (n1 [1]) == 'b')  	return Convert.ToInt64 (n1.Substring (2)' 2);  
Magic Number,Autolithium.core,Autcorlib,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\Autcorlib.cs,DEC,The following statement contains a magic number: return Convert.ToInt64 (n1.Substring (2)' 2);  
Magic Number,Autolithium.core,Autcorlib,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\Autcorlib.cs,DEC,The following statement contains a magic number: return Convert.ToInt64 (n1.Substring (2)' 2);  
Magic Number,Autolithium.core,Autcorlib,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\Autcorlib.cs,DEC,The following statement contains a magic number: return Convert.ToInt64 (n1' 16);  
Magic Number,Autolithium.core,Autcorlib,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\Autcorlib.cs,HEX,The following statement contains a magic number: return string.Join (""' BitConverter.GetBytes (n1).Select (x => Convert.ToString (x' 16)));  
Magic Number,Autolithium.core,Autcorlib,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\Autcorlib.cs,HEX,The following statement contains a magic number: return string.Join (""' BitConverter.GetBytes (n1).Select (x => Convert.ToString (x' 16)));  
Magic Number,Autolithium.core,Autcorlib,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\Autcorlib.cs,HEX,The following statement contains a magic number: return string.Join (""' BitConverter.GetBytes (n1).Select (x => Convert.ToString (x' 16)));  
Magic Number,Autolithium.core,Autcorlib,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\Autcorlib.cs,STRINGISSPACE,The following statement contains a magic number: return s.ToCharArray ().All (x => (x <= 13 && x >= 9) || x == 32);  
Magic Number,Autolithium.core,Autcorlib,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\Autcorlib.cs,STRINGISSPACE,The following statement contains a magic number: return s.ToCharArray ().All (x => (x <= 13 && x >= 9) || x == 32);  
Magic Number,Autolithium.core,Autcorlib,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\Autcorlib.cs,STRINGISSPACE,The following statement contains a magic number: return s.ToCharArray ().All (x => (x <= 13 && x >= 9) || x == 32);  
Missing Default,Autolithium.core,LiParser,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\LiParser\1 - LiParser.ParseBoolean.cs,ParseBoolean,The following switch statement is missing a default case: switch (ch) {  case 'A':  	if (Peek (3).ToUpper () == "ND ") {  		Consume (3);  		C1 = Expression.AndAlso (C1.ConvertTo (typeof(bool))' ParseRelationnal (ExpectAssign).ConvertTo (typeof(bool)));  	}  	else  		break;  	continue;  case 'O':  	if (Peek (2).ToUpper () == "R ") {  		Consume (2);  		C1 = Expression.OrElse (C1.ConvertTo (typeof(bool))' ParseRelationnal (ExpectAssign).ConvertTo (typeof(bool)));  	}  	else  		break;  	continue;  }  
Missing Default,Autolithium.core,AutoitErrorMSG,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\AutoitExceptionType.cs,of,The following switch statement is missing a default case: switch (e) {  case AutoitExceptionType.LEXER_NOTRECOGNISED:  	return "The symbol {2} at ({0}' {1}) is unknown to me";  case AutoitExceptionType.LEXER_BADFORMAT:  	return "({0}' {1}) Badly formated variable or macro : {2}";  case AutoitExceptionType.TOOMANYELSE:  	return "({0}' {1}) Too many \"Else\" statements for matching \"If\" statement.";  case AutoitExceptionType.UNBALANCEDPAREN:  	return "({0}' {1}) Unbalanced brackets in expression.";  case AutoitExceptionType.UNBALANCEDSUBSCRIPT:  	return "({0}' {1}) Unbalanced subscript in expression.";  case AutoitExceptionType.MISSINGIFBEFORETHEN:  	return "({0}' {1}) This then is not preceded by any keyword' previous keyword : {2}.";  case AutoitExceptionType.ELSENOMATCHINGIF:  	return "({0}' {1}) \"Else\" statement with no matching \"If\" statement.";  case AutoitExceptionType.MULTILINEININTERACTIVE:  	return "({0}' {1}) You cannot use a multiline statement ({2}) in interactive mode.";  case AutoitExceptionType.MISSINGTHEN:  	return "({0}' {1}) \"If\" is not followed by \"Then\" in : {2}.";  case AutoitExceptionType.ASSIGNTONOTVARIABLE:  	return "({0}' {1}) You try to assign something to {2} which is not a variable.";  case AutoitExceptionType.UNASSIGNEDVARIABLE:  	return "AutoItVarCompiler: The variable \"{2}\" is used before being assigned";  case AutoitExceptionType.MISSINGVAR:  	return "AutoItVarCompiler: The variable \"{2}\" does not exists";  case AutoitExceptionType.EXITLLOOPOUTSIDELOOP:  	return "({0}' {1}) You try to exit or continue a loop outside a loop";  case AutoitExceptionType.FORWITHOUTTO:  	return "({0}' {1}) A for loop must be 'for $var = first_value to last_value [step number_to_add]'";  case AutoitExceptionType.NOFUNCMATCH:  	return "({0}' {1}) There is no function to match {2}";  case AutoitExceptionType.EXPECTUNTIL:  	return "({0}' {1}) The keyword \"until\" is expected' got {2}";  case AutoitExceptionType.CLASSDOESNOTEXIXTS:  	return "({0}' {1}) The class \"{2}\" does not exists";  case AutoitExceptionType.CONSTRUCTORMISMATCH:  	return "({0}' {1}) Constructor mismatch : unable to get a good one";  case AutoitExceptionType.EXPECTVAR:  	return "({0}' {1}) Expect a variable after {2}";  case AutoitExceptionType.EXPECTSYMBOL:  	return "({0}' {1}) The symbol \"{2}\" is expected";  }  
Missing Default,Autolithium.core,BasicMacro,C:\repos\nem-e5i5_Autolithium.core\Autolithium.core\BasicMacro.cs,GetMacro,The following switch statement is missing a default case: switch (Name) {  case "ERROR":  	return @ERROR;  case "EXTENDED":  	return @EXTENDED;  //case "LF": return "\n";  }  
