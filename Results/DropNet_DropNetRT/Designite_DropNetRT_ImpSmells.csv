Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,DropNetRT.Authentication,OAuthMessageHandler,C:\repos\DropNet_DropNetRT\DropNetRT\Authentication\OAuthMessageHandler.cs,OAuthMessageHandler,The method has 5 parameters. Parameters: innerHandler' apiKey' apiSecret' userToken' userSecret
Long Parameter List,DropNetRT,DropNetClient,C:\repos\DropNet_DropNetRT\DropNetRT\Client.Files.cs,GetMetaData,The method has 5 parameters. Parameters: path' hash' rev' list' includeDeleted
Long Parameter List,DropNetRT,DropNetClient,C:\repos\DropNet_DropNetRT\DropNetRT\Client.Files.cs,GetMetaData,The method has 7 parameters. Parameters: path' hash' rev' list' includeDeleted' includeMembership' cancellationToken
Long Parameter List,DropNetRT,DropNetClient,C:\repos\DropNet_DropNetRT\DropNetRT\Client.Files.cs,Upload,The method has 5 parameters. Parameters: path' filename' fileData' parentRevision' cancellationToken
Long Parameter List,DropNetRT,DropNetClient,C:\repos\DropNet_DropNetRT\DropNetRT\Client.Files.cs,Upload,The method has 5 parameters. Parameters: path' filename' stream' parentRevision' cancellationToken
Long Parameter List,DropNetRT,DropNetClient,C:\repos\DropNet_DropNetRT\DropNetRT\Client.Files.cs,UploadChunked,The method has 5 parameters. Parameters: path' filename' stream' cancellationToken' progress
Long Parameter List,DropNetRT,DropNetClient,C:\repos\DropNet_DropNetRT\DropNetRT\Client.Files.cs,CommitChunkedUpload,The method has 5 parameters. Parameters: path' filename' parentRevision' uploadId' cancellationToken
Long Parameter List,DropNetRT,DropNetClient,C:\repos\DropNet_DropNetRT\DropNetRT\Client.Files.cs,DropNetClient,The method has 5 parameters. Parameters: apiKey' apiSecret' userToken' userSecret' proxy
Long Statement,DropNetRT,DropNetClient,C:\repos\DropNet_DropNetRT\DropNetRT\Client.Files.cs,MakeUploadPutRequest,The length of the statement  "            var requestUrl = MakeRequestString(string.Format("1/files_put/{0}/{1}/{2}"' Root' path.CleanPath()' filename)' ApiType.Content); " is 128.
Long Statement,DropNetRT,DropNetClient,C:\repos\DropNet_DropNetRT\DropNetRT\Client.Files.cs,MakeChunkedUploadCommitRequest,The length of the statement  "            var requestUrl = MakeRequestString(string.Format("1/commit_chunked_upload/auto/{0}{2}{1}"' path.CleanPath()' filename' path.CleanPath().Length > 0 ? "/" : "")' ApiType.Content); " is 177.
Long Statement,DropNetRT,DropNetClient,C:\repos\DropNet_DropNetRT\DropNetRT\Client.Files.cs,SendAsync,The length of the statement  "                // Expiration (cancellation) of the longpoll call is a normal situation' it happens regularly if longpoll set to higher values (480 is the max) and as a part of an expected workflow. Seen from this angle it is not an 'exception'. " is 229.
Long Statement,DropNetRT,DropNetClient,C:\repos\DropNet_DropNetRT\DropNetRT\Client.Files.cs,SendAsync,The length of the statement  "                // For that reason (and the possibility of a simpler consumer code) we simulate "no changes" reply from the server in this very particular case instead of throwing a generic DropBoxException. " is 191.
Magic Number,DropNetRT,DropNetClient,C:\repos\DropNet_DropNetRT\DropNetRT\Client.Files.cs,GetLongpollDelta,The following statement contains a magic number: if (timeout < 30)                  timeout = 30;
Magic Number,DropNetRT,DropNetClient,C:\repos\DropNet_DropNetRT\DropNetRT\Client.Files.cs,GetLongpollDelta,The following statement contains a magic number: if (timeout < 30)                  timeout = 30;
Magic Number,DropNetRT,DropNetClient,C:\repos\DropNet_DropNetRT\DropNetRT\Client.Files.cs,GetLongpollDelta,The following statement contains a magic number: if (timeout > 480)                  timeout = 480;
Magic Number,DropNetRT,DropNetClient,C:\repos\DropNet_DropNetRT\DropNetRT\Client.Files.cs,GetLongpollDelta,The following statement contains a magic number: if (timeout > 480)                  timeout = 480;
Magic Number,DropNetRT.Models,Metadata,C:\repos\DropNet_DropNetRT\DropNetRT\Models\Metadata.cs,GetUTCDateTimeFromString,The following statement contains a magic number: if (str.EndsWith(" +0000")) str = str.Substring(0' str.Length - 6);
Missing Default,DropNetRT,DropNetClient,C:\repos\DropNet_DropNetRT\DropNetRT\Client.Files.cs,ThumbnailSizeString,The following switch statement is missing a default case: switch (size)              {                  case ThumbnailSize.Small:                      return "small";                  case ThumbnailSize.Medium:                      return "medium";                  case ThumbnailSize.Large:                      return "large";                  case ThumbnailSize.ExtraLarge:                      return "l";                  case ThumbnailSize.ExtraLarge2:                      return "xl";              }
