Implementation smell,Namespace,Class,File,Method,Description
Long Statement,CSRedis.Tests,HashTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\HashTests.cs,TestHScan,The length of the statement  "                Assert.AreEqual("*5\r\n$5\r\nHSCAN\r\n$4\r\ntest\r\n$1\r\n0\r\n$5\r\nMATCH\r\n$1\r\n*\r\n"' mock.GetMessage()' "Pattern test"); " is 127.
Long Statement,CSRedis.Tests,HashTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\HashTests.cs,TestHScan,The length of the statement  "                Assert.AreEqual("*5\r\n$5\r\nHSCAN\r\n$4\r\ntest\r\n$1\r\n0\r\n$5\r\nCOUNT\r\n$1\r\n5\r\n"' mock.GetMessage()' "Count test"); " is 125.
Long Statement,CSRedis.Tests,HashTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\HashTests.cs,TestHScan,The length of the statement  "                Assert.AreEqual("*7\r\n$5\r\nHSCAN\r\n$4\r\ntest\r\n$1\r\n0\r\n$5\r\nMATCH\r\n$1\r\n*\r\n$5\r\nCOUNT\r\n$1\r\n5\r\n"' mock.GetMessage()' "Pattern + Count test"); " is 161.
Long Statement,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestMigrate,The length of the statement  "                Assert.AreEqual("*6\r\n$7\r\nMIGRATE\r\n$6\r\nmyhost\r\n$4\r\n1234\r\n$5\r\nmykey\r\n$1\r\n3\r\n$4\r\n1000\r\n"' mock.GetMessage()); " is 132.
Long Statement,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestMigrate,The length of the statement  "                Assert.AreEqual("*6\r\n$7\r\nMIGRATE\r\n$7\r\nmyhost2\r\n$4\r\n1235\r\n$6\r\nmykey2\r\n$1\r\n6\r\n$3\r\n100\r\n"' mock.GetMessage()); " is 133.
Long Statement,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestSort,The length of the statement  "            using (var mock = new FakeRedisSocket("*2\r\n$2\r\nab\r\n$2\r\ncd\r\n"' "*0\r\n"' "*0\r\n"' "*0\r\n"' "*0\r\n"' "*0\r\n"' "*0\r\n"' "*0\r\n")) " is 142.
Long Statement,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestSort,The length of the statement  "                Assert.AreEqual("*6\r\n$4\r\nSORT\r\n$5\r\ntest7\r\n$3\r\nGET\r\n$4\r\nget1\r\n$3\r\nGET\r\n$4\r\nget2\r\n"' mock.GetMessage()); " is 128.
Long Statement,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestSort,The length of the statement  "                var resp8 = redis.Sort("test8"' offset: 0' count: 2' by: "xyz"' dir: RedisSortDir.Asc' isAlpha: true' get: new[] { "a"' "b" }); " is 127.
Long Statement,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestSort,The length of the statement  "                Assert.AreEqual("*13\r\n$4\r\nSORT\r\n$5\r\ntest8\r\n$2\r\nBY\r\n$3\r\nxyz\r\n$5\r\nLIMIT\r\n$1\r\n0\r\n$1\r\n2\r\n$3\r\nGET\r\n$1\r\na\r\n$3\r\nGET\r\n$1\r\nb\r\n$3\r\nASC\r\n$5\r\nALPHA\r\n"' mock.GetMessage()); " is 213.
Long Statement,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestSortAndStore,The length of the statement  "                Assert.AreEqual("*7\r\n$4\r\nSORT\r\n$5\r\ntest2\r\n$5\r\nLIMIT\r\n$1\r\n0\r\n$1\r\n2\r\n$5\r\nSTORE\r\n$5\r\ntest3\r\n"' mock.GetMessage()); " is 141.
Long Statement,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestSortAndStore,The length of the statement  "                Assert.AreEqual("*6\r\n$4\r\nSORT\r\n$5\r\ntest3\r\n$2\r\nBY\r\n$3\r\nxyz\r\n$5\r\nSTORE\r\n$5\r\ntest4\r\n"' mock.GetMessage()); " is 129.
Long Statement,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestSortAndStore,The length of the statement  "                Assert.AreEqual("*5\r\n$4\r\nSORT\r\n$5\r\ntest9\r\n$5\r\nALPHA\r\n$5\r\nSTORE\r\n$6\r\ntest10\r\n"' mock.GetMessage()); " is 120.
Long Statement,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestSortAndStore,The length of the statement  "                Assert.AreEqual("*8\r\n$4\r\nSORT\r\n$6\r\ntest11\r\n$3\r\nGET\r\n$4\r\nget1\r\n$3\r\nGET\r\n$4\r\nget2\r\n$5\r\nSTORE\r\n$6\r\ntest12\r\n"' mock.GetMessage()); " is 160.
Long Statement,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestSortAndStore,The length of the statement  "                Assert.AreEqual(1' redis.SortAndStore("test13"' "test14"' offset: 0' count: 2' by: "xyz"' dir: RedisSortDir.Asc' isAlpha: true' get: new[] { "a"' "b" })); " is 154.
Long Statement,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestSortAndStore,The length of the statement  "                Assert.AreEqual("*15\r\n$4\r\nSORT\r\n$6\r\ntest13\r\n$2\r\nBY\r\n$3\r\nxyz\r\n$5\r\nLIMIT\r\n$1\r\n0\r\n$1\r\n2\r\n$3\r\nGET\r\n$1\r\na\r\n$3\r\nGET\r\n$1\r\nb\r\n$3\r\nASC\r\n$5\r\nALPHA\r\n$5\r\nSTORE\r\n$6\r\ntest14\r\n"' mock.GetMessage()); " is 245.
Long Statement,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestScan,The length of the statement  "                Assert.AreEqual("*6\r\n$4\r\nSCAN\r\n$1\r\n3\r\n$5\r\nMATCH\r\n$7\r\npattern\r\n$5\r\nCOUNT\r\n$1\r\n5\r\n"' mock.GetMessage()); " is 128.
Long Statement,CSRedis.Tests,ListTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ListTests.cs,TestLInsert,The length of the statement  "                Assert.AreEqual("*5\r\n$7\r\nLINSERT\r\n$4\r\ntest\r\n$6\r\nBEFORE\r\n$6\r\nfield1\r\n$5\r\ntest1\r\n"' mock.GetMessage()); " is 123.
Long Statement,CSRedis.Tests,ListTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ListTests.cs,TestLInsert,The length of the statement  "                Assert.AreEqual("*5\r\n$7\r\nLINSERT\r\n$4\r\ntest\r\n$5\r\nAFTER\r\n$6\r\nfield1\r\n$5\r\ntest1\r\n"' mock.GetMessage()); " is 122.
Long Statement,CSRedis.Tests,ScriptingTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ScriptingTests.cs,EvalTest,The length of the statement  "                Assert.AreEqual("*7\r\n$4\r\nEVAL\r\n$40\r\nreturn {KEYS[1]'KEYS[2]'ARGV[1]'ARGV[2]}\r\n$1\r\n2\r\n$4\r\nkey1\r\n$4\r\nkey2\r\n$5\r\nfirst\r\n$6\r\nsecond\r\n"' mock.GetMessage()); " is 180.
Long Statement,CSRedis.Tests,ScriptingTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ScriptingTests.cs,EvalSHATest,The length of the statement  "                Assert.AreEqual("*7\r\n$7\r\nEVALSHA\r\n$8\r\nchecksum\r\n$1\r\n2\r\n$4\r\nkey1\r\n$4\r\nkey2\r\n$5\r\nfirst\r\n$6\r\nsecond\r\n"' mock.GetMessage()); " is 150.
Long Statement,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,ClientListTest,The length of the statement  "            using (var mock = new FakeRedisSocket("$291\r\nid=3 addr=127.0.0.1:57656 fd=6 name= age=97 idle=81 flags=N db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=0 obl=0 oll=0 omem=0 events=r cmd=client\nid=4 addr=127.0.0.1:57663 fd=7 name= age=5 idle=0 flags=N db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=32768 obl=0 oll=0 omem=0 events=r cmd=client\r\n")) " is 346.
Long Statement,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,ClientListTest,The length of the statement  "                Assert.AreEqual("id=3 addr=127.0.0.1:57656 fd=6 name= age=97 idle=81 flags=N db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=0 obl=0 oll=0 omem=0 events=r cmd=client\nid=4 addr=127.0.0.1:57663 fd=7 name= age=5 idle=0 flags=N db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=32768 obl=0 oll=0 omem=0 events=r cmd=client"' redis.ClientList()); " is 332.
Long Statement,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,ConfigGetTest,The length of the statement  "            using (var mock = new FakeRedisSocket("*4\r\n$10\r\nmasterauth\r\n$-1\r\n$7\r\nlogfile\r\n$18\r\n/var/log/redis.log\r\n")) " is 122.
Long Statement,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,InfoTest,The length of the statement  "            var reply1 = "$1774\r\n# Server\r\nredis_version:2.8.12\r\nredis_git_sha1:00000000\r\nredis_git_dirty:0\r\nredis_build_id:15bba638a3b1acf9\r\nredis_mode:standalone\r\nos:Linux 2.6.32-220.17.1.el6.x86_64 x86_64\r\narch_bits:64\r\nmultiplexing_api:epoll\r\ngcc_version:4.4.6\r\nprocess_id:16533\r\nrun_id:76e33834f46f97e0acf1c2749245bc25758afe41\r\ntcp_port:6379\r\nuptime_in_seconds:183775\r\nuptime_in_days:2\r\nhz:10\r\nlru_clock:12351741\r\nconfig_file:/etc/redis.conf\r\n\r\n# Clients\r\nconnected_clients:2\r\nclient_longest_output_list:0\r\nclient_biggest_input_buf:0\r\nblocked_clients:0\r\n\r\n# Memory\r\nused_memory:365208\r\nused_memory_human:356.65K\r\nused_memory_rss:7626752\r\nused_memory_peak:386120\r\nused_memory_peak_human:377.07K\r\nused_memory_lua:33792\r\nmem_fragmentation_ratio:20.88\r\nmem_allocator:jemalloc-3.6.0\r\n\r\n# Persistence\r\nloading:0\r\nrdb_changes_since_last_save:0\r\nrdb_bgsave_in_progress:0\r\nrdb_last_save_time:1404676894\r\nrdb_last_bgsave_status:ok\r\nrdb_last_bgsave_time_sec:-1\r\nrdb_current_bgsave_time_sec:-1\r\naof_enabled:0\r\naof_rewrite_in_progress:0\r\naof_rewrite_scheduled:0\r\naof_last_rewrite_time_sec:-1\r\naof_current_rewrite_time_sec:-1\r\naof_last_bgrewrite_status:ok\r\naof_last_write_status:ok\r\n\r\n# Stats\r\ntotal_connections_received:9\r\ntotal_commands_processed:23\r\ninstantaneous_ops_per_sec:0\r\nrejected_connections:0\r\nsync_full:0\r\nsync_partial_ok:0\r\nsync_partial_err:0\r\nexpired_keys:0\r\nevicted_keys:0\r\nkeyspace_hits:0\r\nkeyspace_misses:0\r\npubsub_channels:0\r\npubsub_patterns:0\r\nlatest_fork_usec:0\r\n\r\n# Replication\r\nrole:master\r\nconnected_slaves:0\r\nmaster_repl_offset:0\r\nrepl_backlog_active:0\r\nrepl_backlog_size:1048576\r\nrepl_backlog_first_byte_offset:0\r\nrepl_backlog_histlen:0\r\n\r\n# CPU\r\nused_cpu_sys:139.97\r\nused_cpu_user:43.93\r\nused_cpu_sys_children:0.00\r\nused_cpu_user_children:0.00\r\n\r\n# Keyspace\r\ndb0:keys=6'expires=0'avg_ttl=0\r\n"; " is 1969.
Long Statement,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,InfoTest,The length of the statement  "            var reply2 = "$104\r\n# CPU\r\nused_cpu_sys:140.26\r\nused_cpu_user:43.95\r\nused_cpu_sys_children:0.00\r\nused_cpu_user_children:0.00\r\n"; " is 140.
Long Statement,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,InfoTest,The length of the statement  "                Assert.AreEqual("# Server\r\nredis_version:2.8.12\r\nredis_git_sha1:00000000\r\nredis_git_dirty:0\r\nredis_build_id:15bba638a3b1acf9\r\nredis_mode:standalone\r\nos:Linux 2.6.32-220.17.1.el6.x86_64 x86_64\r\narch_bits:64\r\nmultiplexing_api:epoll\r\ngcc_version:4.4.6\r\nprocess_id:16533\r\nrun_id:76e33834f46f97e0acf1c2749245bc25758afe41\r\ntcp_port:6379\r\nuptime_in_seconds:183775\r\nuptime_in_days:2\r\nhz:10\r\nlru_clock:12351741\r\nconfig_file:/etc/redis.conf\r\n\r\n# Clients\r\nconnected_clients:2\r\nclient_longest_output_list:0\r\nclient_biggest_input_buf:0\r\nblocked_clients:0\r\n\r\n# Memory\r\nused_memory:365208\r\nused_memory_human:356.65K\r\nused_memory_rss:7626752\r\nused_memory_peak:386120\r\nused_memory_peak_human:377.07K\r\nused_memory_lua:33792\r\nmem_fragmentation_ratio:20.88\r\nmem_allocator:jemalloc-3.6.0\r\n\r\n# Persistence\r\nloading:0\r\nrdb_changes_since_last_save:0\r\nrdb_bgsave_in_progress:0\r\nrdb_last_save_time:1404676894\r\nrdb_last_bgsave_status:ok\r\nrdb_last_bgsave_time_sec:-1\r\nrdb_current_bgsave_time_sec:-1\r\naof_enabled:0\r\naof_rewrite_in_progress:0\r\naof_rewrite_scheduled:0\r\naof_last_rewrite_time_sec:-1\r\naof_current_rewrite_time_sec:-1\r\naof_last_bgrewrite_status:ok\r\naof_last_write_status:ok\r\n\r\n# Stats\r\ntotal_connections_received:9\r\ntotal_commands_processed:23\r\ninstantaneous_ops_per_sec:0\r\nrejected_connections:0\r\nsync_full:0\r\nsync_partial_ok:0\r\nsync_partial_err:0\r\nexpired_keys:0\r\nevicted_keys:0\r\nkeyspace_hits:0\r\nkeyspace_misses:0\r\npubsub_channels:0\r\npubsub_patterns:0\r\nlatest_fork_usec:0\r\n\r\n# Replication\r\nrole:master\r\nconnected_slaves:0\r\nmaster_repl_offset:0\r\nrepl_backlog_active:0\r\nrepl_backlog_size:1048576\r\nrepl_backlog_first_byte_offset:0\r\nrepl_backlog_histlen:0\r\n\r\n# CPU\r\nused_cpu_sys:139.97\r\nused_cpu_user:43.93\r\nused_cpu_sys_children:0.00\r\nused_cpu_user_children:0.00\r\n\r\n# Keyspace\r\ndb0:keys=6'expires=0'avg_ttl=0"' redis.Info()); " is 1974.
Long Statement,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,RoleTest,The length of the statement  "            var reply1 = "*3\r\n$6\r\nmaster\r\n:3129659\r\n*2\r\n*3\r\n$9\r\n127.0.0.1\r\n$4\r\n9001\r\n$7\r\n3129242\r\n*3\r\n$9\r\n127.0.0.1\r\n$4\r\n9002\r\n$7\r\n3129543\r\n"; " is 168.
Long Statement,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,RoleTest,The length of the statement  "            var reply3 = "*2\r\n$8\r\nsentinel\r\n*4\r\n$13\r\nresque-master\r\n$21\r\nhtml-fragments-master\r\n$12\r\nstats-master\r\n$15\r\nmetadata-master\r\n"; " is 151.
Long Statement,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,SlowLogGetTest,The length of the statement  "            string reply = "*2\r\n*4\r\n:14\r\n:1309448221\r\n:15\r\n*1\r\n$4\r\nping\r\n*4\r\n:13\r\n:1309448128\r\n:30\r\n*3\r\n$7\r\nslowlog\r\n$3\r\nget\r\n$3\r\n100\r\n"; " is 163.
Long Statement,CSRedis.Tests,SetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SetTests.cs,TestSScan,The length of the statement  "                Assert.AreEqual("*5\r\n$5\r\nSSCAN\r\n$4\r\ntest\r\n$1\r\n0\r\n$5\r\nMATCH\r\n$1\r\n*\r\n"' mock.GetMessage()' "Pattern test"); " is 127.
Long Statement,CSRedis.Tests,SetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SetTests.cs,TestSScan,The length of the statement  "                Assert.AreEqual("*5\r\n$5\r\nSSCAN\r\n$4\r\ntest\r\n$1\r\n0\r\n$5\r\nCOUNT\r\n$1\r\n5\r\n"' mock.GetMessage()' "Count test"); " is 125.
Long Statement,CSRedis.Tests,SetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SetTests.cs,TestSScan,The length of the statement  "                Assert.AreEqual("*7\r\n$5\r\nSSCAN\r\n$4\r\ntest\r\n$1\r\n0\r\n$5\r\nMATCH\r\n$1\r\n*\r\n$5\r\nCOUNT\r\n$1\r\n5\r\n"' mock.GetMessage()' "Pattern + Count test"); " is 161.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZAdd_Array,The length of the statement  "                Assert.AreEqual("*6\r\n$4\r\nZADD\r\n$4\r\ntest\r\n$3\r\n1.1\r\n$5\r\ntest1\r\n$3\r\n2.2\r\n$5\r\ntest2\r\n"' mock.GetMessage()); " is 129.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZAdd_Tuple,The length of the statement  "                Assert.AreEqual("*6\r\n$4\r\nZADD\r\n$4\r\ntest\r\n$3\r\n1.1\r\n$5\r\ntest1\r\n$3\r\n2.2\r\n$5\r\ntest2\r\n"' mock.GetMessage()); " is 129.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZInterStore,The length of the statement  "                Assert.AreEqual("*5\r\n$11\r\nZINTERSTORE\r\n$11\r\ndestination\r\n$1\r\n2\r\n$4\r\nkey1\r\n$4\r\nkey2\r\n"' mock.GetMessage()); " is 128.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZInterStore,The length of the statement  "                Assert.AreEqual("*8\r\n$11\r\nZINTERSTORE\r\n$11\r\ndestination\r\n$1\r\n2\r\n$4\r\nkey1\r\n$4\r\nkey2\r\n$7\r\nWEIGHTS\r\n$1\r\n1\r\n$1\r\n2\r\n"' mock.GetMessage()); " is 167.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZInterStore,The length of the statement  "                Assert.AreEqual(2' redis.ZInterStore("destination"' weights: new[] { 1D' 2D }' aggregate:RedisAggregate.Max' keys: new[] { "key1"' "key2" })); " is 142.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZInterStore,The length of the statement  "                Assert.AreEqual("*10\r\n$11\r\nZINTERSTORE\r\n$11\r\ndestination\r\n$1\r\n2\r\n$4\r\nkey1\r\n$4\r\nkey2\r\n$7\r\nWEIGHTS\r\n$1\r\n1\r\n$1\r\n2\r\n$9\r\nAGGREGATE\r\n$3\r\nMAX\r\n"' mock.GetMessage()); " is 200.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZInterStore,The length of the statement  "                Assert.AreEqual(2' redis.ZInterStore("destination"' weights: new[] { 1D' 2D }' aggregate: RedisAggregate.Min' keys: new[] { "key1"' "key2" })); " is 143.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZInterStore,The length of the statement  "                Assert.AreEqual("*10\r\n$11\r\nZINTERSTORE\r\n$11\r\ndestination\r\n$1\r\n2\r\n$4\r\nkey1\r\n$4\r\nkey2\r\n$7\r\nWEIGHTS\r\n$1\r\n1\r\n$1\r\n2\r\n$9\r\nAGGREGATE\r\n$3\r\nMIN\r\n"' mock.GetMessage()); " is 200.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZInterStore,The length of the statement  "                Assert.AreEqual(2' redis.ZInterStore("destination"' weights: new[] { 1D' 2D }' aggregate: RedisAggregate.Sum' keys: new[] { "key1"' "key2" })); " is 143.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZInterStore,The length of the statement  "                Assert.AreEqual("*10\r\n$11\r\nZINTERSTORE\r\n$11\r\ndestination\r\n$1\r\n2\r\n$4\r\nkey1\r\n$4\r\nkey2\r\n$7\r\nWEIGHTS\r\n$1\r\n1\r\n$1\r\n2\r\n$9\r\nAGGREGATE\r\n$3\r\nSUM\r\n"' mock.GetMessage()); " is 200.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRangeByLex,The length of the statement  "                Assert.AreEqual("*7\r\n$11\r\nZRANGEBYLEX\r\n$4\r\ntest\r\n$1\r\n-\r\n$2\r\n[c\r\n$5\r\nLIMIT\r\n$2\r\n10\r\n$1\r\n5\r\n"' mock.GetMessage()); " is 142.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRangeByScore,The length of the statement  "                Assert.AreEqual("*5\r\n$13\r\nZRANGEBYSCORE\r\n$4\r\ntest\r\n$1\r\n0\r\n$2\r\n10\r\n$10\r\nWITHSCORES\r\n"' mock.GetMessage()); " is 127.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRangeByScore,The length of the statement  "                Assert.AreEqual("*5\r\n$13\r\nZRANGEBYSCORE\r\n$4\r\ntest\r\n$2\r\n(0\r\n$3\r\n(10\r\n$10\r\nWITHSCORES\r\n"' mock.GetMessage()); " is 129.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRangeByScore,The length of the statement  "                var response5 = redis.ZRangeByScore("test"' 0' 10' withScores: true' exclusiveMin: true' exclusiveMax: true' offset: 1' count: 5); " is 130.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRangeByScore,The length of the statement  "                Assert.AreEqual("*8\r\n$13\r\nZRANGEBYSCORE\r\n$4\r\ntest\r\n$2\r\n(0\r\n$3\r\n(10\r\n$10\r\nWITHSCORES\r\n$5\r\nLIMIT\r\n$1\r\n1\r\n$1\r\n5\r\n"' mock.GetMessage()); " is 166.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRangeByScoreWithScores,The length of the statement  "                Assert.AreEqual("*5\r\n$13\r\nZRANGEBYSCORE\r\n$4\r\ntest\r\n$1\r\n0\r\n$2\r\n10\r\n$10\r\nWITHSCORES\r\n"' mock.GetMessage()); " is 127.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRangeByScoreWithScores,The length of the statement  "                Assert.AreEqual("*5\r\n$13\r\nZRANGEBYSCORE\r\n$4\r\ntest\r\n$2\r\n(0\r\n$3\r\n(10\r\n$10\r\nWITHSCORES\r\n"' mock.GetMessage()); " is 129.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRangeByScoreWithScores,The length of the statement  "                Assert.AreEqual("*5\r\n$13\r\nZRANGEBYSCORE\r\n$4\r\ntest\r\n$2\r\n(0\r\n$3\r\n(10\r\n$10\r\nWITHSCORES\r\n"' mock.GetMessage()); " is 129.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRangeByScoreWithScores,The length of the statement  "                var response4 = redis.ZRangeByScoreWithScores("test"' 0' 10' exclusiveMin: true' exclusiveMax: true' offset: 1' count: 5); " is 122.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRangeByScoreWithScores,The length of the statement  "                Assert.AreEqual("*8\r\n$13\r\nZRANGEBYSCORE\r\n$4\r\ntest\r\n$2\r\n(0\r\n$3\r\n(10\r\n$10\r\nWITHSCORES\r\n$5\r\nLIMIT\r\n$1\r\n1\r\n$1\r\n5\r\n"' mock.GetMessage()); " is 166.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRange,The length of the statement  "                Assert.AreEqual("*5\r\n$9\r\nZREVRANGE\r\n$4\r\ntest\r\n$1\r\n0\r\n$2\r\n-1\r\n$10\r\nWITHSCORES\r\n"' mock.GetMessage()); " is 122.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRange,The length of the statement  "                Assert.AreEqual("*5\r\n$9\r\nZREVRANGE\r\n$4\r\ntest\r\n$1\r\n0\r\n$2\r\n-1\r\n$10\r\nWITHSCORES\r\n"' mock.GetMessage()); " is 122.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRangeByScore,The length of the statement  "                Assert.AreEqual("*5\r\n$16\r\nZREVRANGEBYSCORE\r\n$4\r\ntest\r\n$1\r\n0\r\n$2\r\n10\r\n$10\r\nWITHSCORES\r\n"' mock.GetMessage()); " is 130.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRangeByScore,The length of the statement  "                Assert.AreEqual("*5\r\n$16\r\nZREVRANGEBYSCORE\r\n$4\r\ntest\r\n$2\r\n(0\r\n$3\r\n(10\r\n$10\r\nWITHSCORES\r\n"' mock.GetMessage()); " is 132.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRangeByScore,The length of the statement  "                var response5 = redis.ZRevRangeByScore("test"' 0' 10' withScores: true' exclusiveMin: true' exclusiveMax: true' offset: 1' count: 5); " is 133.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRangeByScore,The length of the statement  "                Assert.AreEqual("*8\r\n$16\r\nZREVRANGEBYSCORE\r\n$4\r\ntest\r\n$2\r\n(0\r\n$3\r\n(10\r\n$10\r\nWITHSCORES\r\n$5\r\nLIMIT\r\n$1\r\n1\r\n$1\r\n5\r\n"' mock.GetMessage()); " is 169.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRangeByScoreWithScores,The length of the statement  "                Assert.AreEqual("*5\r\n$16\r\nZREVRANGEBYSCORE\r\n$4\r\ntest\r\n$1\r\n0\r\n$2\r\n10\r\n$10\r\nWITHSCORES\r\n"' mock.GetMessage()); " is 130.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRangeByScoreWithScores,The length of the statement  "                Assert.AreEqual("*5\r\n$16\r\nZREVRANGEBYSCORE\r\n$4\r\ntest\r\n$2\r\n(0\r\n$3\r\n(10\r\n$10\r\nWITHSCORES\r\n"' mock.GetMessage()); " is 132.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRangeByScoreWithScores,The length of the statement  "                Assert.AreEqual("*5\r\n$16\r\nZREVRANGEBYSCORE\r\n$4\r\ntest\r\n$2\r\n(0\r\n$3\r\n(10\r\n$10\r\nWITHSCORES\r\n"' mock.GetMessage()); " is 132.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRangeByScoreWithScores,The length of the statement  "                var response4 = redis.ZRevRangeByScoreWithScores("test"' 0' 10' exclusiveMin: true' exclusiveMax: true' offset: 1' count: 5); " is 125.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRangeByScoreWithScores,The length of the statement  "                Assert.AreEqual("*8\r\n$16\r\nZREVRANGEBYSCORE\r\n$4\r\ntest\r\n$2\r\n(0\r\n$3\r\n(10\r\n$10\r\nWITHSCORES\r\n$5\r\nLIMIT\r\n$1\r\n1\r\n$1\r\n5\r\n"' mock.GetMessage()); " is 169.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZScan,The length of the statement  "                Assert.AreEqual("*5\r\n$5\r\nZSCAN\r\n$4\r\ntest\r\n$1\r\n0\r\n$5\r\nMATCH\r\n$1\r\n*\r\n"' mock.GetMessage()' "Pattern test"); " is 127.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZScan,The length of the statement  "                Assert.AreEqual("*5\r\n$5\r\nZSCAN\r\n$4\r\ntest\r\n$1\r\n0\r\n$5\r\nCOUNT\r\n$1\r\n5\r\n"' mock.GetMessage()' "Count test"); " is 125.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZScan,The length of the statement  "                Assert.AreEqual("*7\r\n$5\r\nZSCAN\r\n$4\r\ntest\r\n$1\r\n0\r\n$5\r\nMATCH\r\n$1\r\n*\r\n$5\r\nCOUNT\r\n$1\r\n5\r\n"' mock.GetMessage()' "Pattern + Count test"); " is 161.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZUnionStore,The length of the statement  "                Assert.AreEqual("*5\r\n$11\r\nZUNIONSTORE\r\n$11\r\ndestination\r\n$1\r\n2\r\n$4\r\nkey1\r\n$4\r\nkey2\r\n"' mock.GetMessage()); " is 128.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZUnionStore,The length of the statement  "                Assert.AreEqual("*8\r\n$11\r\nZUNIONSTORE\r\n$11\r\ndestination\r\n$1\r\n2\r\n$4\r\nkey1\r\n$4\r\nkey2\r\n$7\r\nWEIGHTS\r\n$1\r\n1\r\n$1\r\n2\r\n"' mock.GetMessage()); " is 167.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZUnionStore,The length of the statement  "                Assert.AreEqual(2' redis.ZUnionStore("destination"' weights: new[] { 1D' 2D }' aggregate: RedisAggregate.Max' keys: new[] { "key1"' "key2" })); " is 143.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZUnionStore,The length of the statement  "                Assert.AreEqual("*10\r\n$11\r\nZUNIONSTORE\r\n$11\r\ndestination\r\n$1\r\n2\r\n$4\r\nkey1\r\n$4\r\nkey2\r\n$7\r\nWEIGHTS\r\n$1\r\n1\r\n$1\r\n2\r\n$9\r\nAGGREGATE\r\n$3\r\nMAX\r\n"' mock.GetMessage()); " is 200.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZUnionStore,The length of the statement  "                Assert.AreEqual(2' redis.ZUnionStore("destination"' weights: new[] { 1D' 2D }' aggregate: RedisAggregate.Min' keys: new[] { "key1"' "key2" })); " is 143.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZUnionStore,The length of the statement  "                Assert.AreEqual("*10\r\n$11\r\nZUNIONSTORE\r\n$11\r\ndestination\r\n$1\r\n2\r\n$4\r\nkey1\r\n$4\r\nkey2\r\n$7\r\nWEIGHTS\r\n$1\r\n1\r\n$1\r\n2\r\n$9\r\nAGGREGATE\r\n$3\r\nMIN\r\n"' mock.GetMessage()); " is 200.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZUnionStore,The length of the statement  "                Assert.AreEqual(2' redis.ZUnionStore("destination"' weights: new[] { 1D' 2D }' aggregate: RedisAggregate.Sum' keys: new[] { "key1"' "key2" })); " is 143.
Long Statement,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZUnionStore,The length of the statement  "                Assert.AreEqual("*10\r\n$11\r\nZUNIONSTORE\r\n$11\r\ndestination\r\n$1\r\n2\r\n$4\r\nkey1\r\n$4\r\nkey2\r\n$7\r\nWEIGHTS\r\n$1\r\n1\r\n$1\r\n2\r\n$9\r\nAGGREGATE\r\n$3\r\nSUM\r\n"' mock.GetMessage()); " is 200.
Long Statement,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,SetTest,The length of the statement  "                Assert.AreEqual("*6\r\n$3\r\nSET\r\n$3\r\nkey\r\n$5\r\nvalue\r\n$2\r\nEX\r\n$1\r\n1\r\n$2\r\nNX\r\n"' mock.GetMessage()); " is 121.
Long Statement,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,SetTest,The length of the statement  "                Assert.AreEqual("*6\r\n$3\r\nSET\r\n$3\r\nkey\r\n$5\r\nvalue\r\n$2\r\nEX\r\n$1\r\n1\r\n$2\r\nXX\r\n"' mock.GetMessage()); " is 121.
Long Statement,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,SetTest,The length of the statement  "                Assert.AreEqual("*6\r\n$3\r\nSET\r\n$3\r\nkey\r\n$5\r\nvalue\r\n$2\r\nPX\r\n$1\r\n1\r\n$2\r\nNX\r\n"' mock.GetMessage()); " is 121.
Long Statement,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,SetTest,The length of the statement  "                Assert.AreEqual("*6\r\n$3\r\nSET\r\n$3\r\nkey\r\n$5\r\nvalue\r\n$2\r\nPX\r\n$1\r\n1\r\n$2\r\nXX\r\n"' mock.GetMessage()); " is 121.
Magic Number,CSRedis.Tests,ConnectionTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ConnectionTests.cs,SelectTest,The following statement contains a magic number: TestHelper.Test(                  "+OK\r\n"'                  x => x.Select(2)'                  x => x.SelectAsync(2)'                  (x' r) =>                  {                      Assert.AreEqual("OK"' r);                      Assert.AreEqual("*2\r\n$6\r\nSELECT\r\n$1\r\n2\r\n"' x.GetMessage());                  });
Magic Number,CSRedis.Tests,ConnectionTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ConnectionTests.cs,SelectTest,The following statement contains a magic number: TestHelper.Test(                  "+OK\r\n"'                  x => x.Select(2)'                  x => x.SelectAsync(2)'                  (x' r) =>                  {                      Assert.AreEqual("OK"' r);                      Assert.AreEqual("*2\r\n$6\r\nSELECT\r\n$1\r\n2\r\n"' x.GetMessage());                  });
Magic Number,CSRedis.Tests,HashTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\HashTests.cs,TestHDel,The following statement contains a magic number: Assert.AreEqual(2' redis.HDel("test"' "test1"' "test2"));
Magic Number,CSRedis.Tests,HashTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\HashTests.cs,TestHIncrBy,The following statement contains a magic number: Assert.AreEqual(5' redis.HIncrBy("test"' "field"' 1));
Magic Number,CSRedis.Tests,HashTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\HashTests.cs,TestHIncrByFloat,The following statement contains a magic number: Assert.AreEqual(3.14' redis.HIncrByFloat("test"' "field"' 1.14));
Magic Number,CSRedis.Tests,HashTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\HashTests.cs,TestHIncrByFloat,The following statement contains a magic number: Assert.AreEqual(3.14' redis.HIncrByFloat("test"' "field"' 1.14));
Magic Number,CSRedis.Tests,HashTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\HashTests.cs,TestHKeys,The following statement contains a magic number: Assert.AreEqual(2' response.Length);
Magic Number,CSRedis.Tests,HashTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\HashTests.cs,TestHLen,The following statement contains a magic number: Assert.AreEqual(5' redis.HLen("test"));
Magic Number,CSRedis.Tests,HashTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\HashTests.cs,TestHMGet,The following statement contains a magic number: Assert.AreEqual(2' response.Length);
Magic Number,CSRedis.Tests,HashTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\HashTests.cs,TestHVals,The following statement contains a magic number: Assert.AreEqual(2' response.Length);
Magic Number,CSRedis.Tests,HashTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\HashTests.cs,TestHScan,The following statement contains a magic number: Assert.AreEqual(23' response1.Cursor);
Magic Number,CSRedis.Tests,HashTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\HashTests.cs,TestHScan,The following statement contains a magic number: var response3 = redis.HScan("test"' 0' count: 5);
Magic Number,CSRedis.Tests,HashTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\HashTests.cs,TestHScan,The following statement contains a magic number: var response4 = redis.HScan("test"' 0' "*"' 5);
Magic Number,CSRedis.Tests,HyperLogLogTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\HyperLogLogTests.cs,PfCountTest,The following statement contains a magic number: Assert.AreEqual(2' redis.PfCount("test1"' "test2"));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestDel,The following statement contains a magic number: Assert.AreEqual(3' redis.Del("test"));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestExpire,The following statement contains a magic number: Assert.IsTrue(redis.Expire("test1"' TimeSpan.FromSeconds(10)));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestExpire,The following statement contains a magic number: Assert.IsFalse(redis.Expire("test2"' 20));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestExpireAt,The following statement contains a magic number: Assert.IsTrue(redis.ExpireAt("test1"' new DateTime(2014' 6' 13' 7' 6' 48)));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestExpireAt,The following statement contains a magic number: Assert.IsTrue(redis.ExpireAt("test1"' new DateTime(2014' 6' 13' 7' 6' 48)));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestExpireAt,The following statement contains a magic number: Assert.IsTrue(redis.ExpireAt("test1"' new DateTime(2014' 6' 13' 7' 6' 48)));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestExpireAt,The following statement contains a magic number: Assert.IsTrue(redis.ExpireAt("test1"' new DateTime(2014' 6' 13' 7' 6' 48)));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestExpireAt,The following statement contains a magic number: Assert.IsTrue(redis.ExpireAt("test1"' new DateTime(2014' 6' 13' 7' 6' 48)));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestExpireAt,The following statement contains a magic number: Assert.IsTrue(redis.ExpireAt("test1"' new DateTime(2014' 6' 13' 7' 6' 48)));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestExpireAt,The following statement contains a magic number: Assert.IsFalse(redis.ExpireAt("test2"' 1402643208));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestKeys,The following statement contains a magic number: Assert.AreEqual(3' response.Length);
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestMigrate,The following statement contains a magic number: Assert.AreEqual("OK"' redis.Migrate("myhost"' 1234' "mykey"' 3' 1000));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestMigrate,The following statement contains a magic number: Assert.AreEqual("OK"' redis.Migrate("myhost"' 1234' "mykey"' 3' 1000));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestMigrate,The following statement contains a magic number: Assert.AreEqual("OK"' redis.Migrate("myhost"' 1234' "mykey"' 3' 1000));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestMigrate,The following statement contains a magic number: Assert.AreEqual("OK"' redis.Migrate("myhost2"' 1235' "mykey2"' 6' TimeSpan.FromMilliseconds(100)));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestMigrate,The following statement contains a magic number: Assert.AreEqual("OK"' redis.Migrate("myhost2"' 1235' "mykey2"' 6' TimeSpan.FromMilliseconds(100)));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestMigrate,The following statement contains a magic number: Assert.AreEqual("OK"' redis.Migrate("myhost2"' 1235' "mykey2"' 6' TimeSpan.FromMilliseconds(100)));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestMove,The following statement contains a magic number: Assert.IsTrue(redis.Move("test"' 5));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestObject,The following statement contains a magic number: Assert.AreEqual(5555' redis.Object(RedisObjectSubCommand.RefCount' "test1"));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestObject,The following statement contains a magic number: Assert.AreEqual(9999' redis.Object(RedisObjectSubCommand.IdleTime' "test2"));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,PExpire,The following statement contains a magic number: Assert.IsTrue(redis.PExpire("test1"' TimeSpan.FromMilliseconds(5000)));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,PExpire,The following statement contains a magic number: Assert.IsFalse(redis.PExpire("test2"' 6000));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,PExpireAt,The following statement contains a magic number: Assert.IsTrue(redis.PExpireAt("test1"' new DateTime(2014' 6' 13' 7' 6' 48' 123)));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,PExpireAt,The following statement contains a magic number: Assert.IsTrue(redis.PExpireAt("test1"' new DateTime(2014' 6' 13' 7' 6' 48' 123)));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,PExpireAt,The following statement contains a magic number: Assert.IsTrue(redis.PExpireAt("test1"' new DateTime(2014' 6' 13' 7' 6' 48' 123)));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,PExpireAt,The following statement contains a magic number: Assert.IsTrue(redis.PExpireAt("test1"' new DateTime(2014' 6' 13' 7' 6' 48' 123)));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,PExpireAt,The following statement contains a magic number: Assert.IsTrue(redis.PExpireAt("test1"' new DateTime(2014' 6' 13' 7' 6' 48' 123)));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,PExpireAt,The following statement contains a magic number: Assert.IsTrue(redis.PExpireAt("test1"' new DateTime(2014' 6' 13' 7' 6' 48' 123)));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,PExpireAt,The following statement contains a magic number: Assert.IsTrue(redis.PExpireAt("test1"' new DateTime(2014' 6' 13' 7' 6' 48' 123)));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,PExpireAt,The following statement contains a magic number: Assert.IsFalse(redis.PExpireAt("test2"' 1402643208123));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestPttl,The following statement contains a magic number: Assert.AreEqual(123' redis.PTtl("test"));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestRestore,The following statement contains a magic number: Assert.AreEqual("OK"' redis.Restore("test"' 123' "abc"));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestSort,The following statement contains a magic number: Assert.AreEqual(2' resp1.Length);
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestSort,The following statement contains a magic number: var resp2 = redis.Sort("test2"' offset: 0' count: 2);
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestSort,The following statement contains a magic number: var resp8 = redis.Sort("test8"' offset: 0' count: 2' by: "xyz"' dir: RedisSortDir.Asc' isAlpha: true' get: new[] { "a"' "b" });
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestSortAndStore,The following statement contains a magic number: Assert.AreEqual(1' redis.SortAndStore("test2"' "test3"' offset:0' count:2));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestSortAndStore,The following statement contains a magic number: Assert.AreEqual(1' redis.SortAndStore("test13"' "test14"' offset: 0' count: 2' by: "xyz"' dir: RedisSortDir.Asc' isAlpha: true' get: new[] { "a"' "b" }));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestTtl,The following statement contains a magic number: Assert.AreEqual(123' redis.Ttl("test"));
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestScan,The following statement contains a magic number: Assert.AreEqual(3' resp.Items.Length);
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestScan,The following statement contains a magic number: redis.Scan(2' count: 5);
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestScan,The following statement contains a magic number: redis.Scan(2' count: 5);
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestScan,The following statement contains a magic number: redis.Scan(3' pattern: "pattern"' count: 5);
Magic Number,CSRedis.Tests,KeyTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\KeyTests.cs,TestScan,The following statement contains a magic number: redis.Scan(3' pattern: "pattern"' count: 5);
Magic Number,CSRedis.Tests,ListTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ListTests.cs,TestBLPopWithKey,The following statement contains a magic number: var response1 = redis.BLPopWithKey(60' "test");
Magic Number,CSRedis.Tests,ListTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ListTests.cs,TestBLPop,The following statement contains a magic number: Assert.AreEqual("test1"' redis.BLPop(60' "test"));
Magic Number,CSRedis.Tests,ListTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ListTests.cs,TestBRPopWithKey,The following statement contains a magic number: var response1 = redis.BRPopWithKey(60' "test");
Magic Number,CSRedis.Tests,ListTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ListTests.cs,TestBRPop,The following statement contains a magic number: Assert.AreEqual("test1"' redis.BRPop(60' "test"));
Magic Number,CSRedis.Tests,ListTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ListTests.cs,TestBRPopLPush,The following statement contains a magic number: Assert.AreEqual("test1"' redis.BRPopLPush("test"' "new"' 60));
Magic Number,CSRedis.Tests,ListTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ListTests.cs,TestLInsert,The following statement contains a magic number: Assert.AreEqual(2' redis.LInsert("test"' RedisInsert.Before' "field1"' "test1"));
Magic Number,CSRedis.Tests,ListTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ListTests.cs,TestLInsert,The following statement contains a magic number: Assert.AreEqual(2' redis.LInsert("test"' RedisInsert.After' "field1"' "test1"));
Magic Number,CSRedis.Tests,ListTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ListTests.cs,TestLLen,The following statement contains a magic number: Assert.AreEqual(3' redis.LLen("test"));
Magic Number,CSRedis.Tests,ListTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ListTests.cs,TestLPush,The following statement contains a magic number: Assert.AreEqual(2' redis.LPush("test"' "test1"' "test2"));
Magic Number,CSRedis.Tests,ListTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ListTests.cs,TestLPushX,The following statement contains a magic number: Assert.AreEqual(2' redis.LPushX("test"' "test1"));
Magic Number,CSRedis.Tests,ListTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ListTests.cs,TestLRange,The following statement contains a magic number: var response = redis.LRange("test"' -10' 10);
Magic Number,CSRedis.Tests,ListTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ListTests.cs,TestLRange,The following statement contains a magic number: var response = redis.LRange("test"' -10' 10);
Magic Number,CSRedis.Tests,ListTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ListTests.cs,TestLRange,The following statement contains a magic number: Assert.AreEqual(2' response.Length);
Magic Number,CSRedis.Tests,ListTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ListTests.cs,TestLRem,The following statement contains a magic number: Assert.AreEqual(2' redis.LRem("test"' -2' "test1"));
Magic Number,CSRedis.Tests,ListTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ListTests.cs,TestLRem,The following statement contains a magic number: Assert.AreEqual(2' redis.LRem("test"' -2' "test1"));
Magic Number,CSRedis.Tests,ListTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ListTests.cs,TestLTrim,The following statement contains a magic number: Assert.AreEqual("OK"' redis.LTrim("test"' 0' 3));
Magic Number,CSRedis.Tests,ListTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ListTests.cs,TestRPush,The following statement contains a magic number: Assert.AreEqual(3' redis.RPush("test"' "test1"));
Magic Number,CSRedis.Tests,ListTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ListTests.cs,TestRPushX,The following statement contains a magic number: Assert.AreEqual(3' redis.RPushX("test"' "test1"));
Magic Number,CSRedis.Tests,PubSubTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\PubSubTests.cs,PublishTest,The following statement contains a magic number: Assert.AreEqual(3' redis.Publish("test"' "message"));
Magic Number,CSRedis.Tests,PubSubTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\PubSubTests.cs,PubSubChannelsTest,The following statement contains a magic number: Assert.AreEqual(2' response.Length);
Magic Number,CSRedis.Tests,PubSubTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\PubSubTests.cs,PubSubNumSubTest,The following statement contains a magic number: Assert.AreEqual(2' response.Length);
Magic Number,CSRedis.Tests,PubSubTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\PubSubTests.cs,PubSubNumSubTest,The following statement contains a magic number: Assert.AreEqual(5' response[1].Item2);
Magic Number,CSRedis.Tests,PubSubTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\PubSubTests.cs,PubSubNumPatTest,The following statement contains a magic number: Assert.AreEqual(3' redis.PubSubNumPat());
Magic Number,CSRedis.Tests,ScriptingTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ScriptingTests.cs,EvalTest,The following statement contains a magic number: Assert.AreEqual(4' (response as object[]).Length);
Magic Number,CSRedis.Tests,ScriptingTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ScriptingTests.cs,EvalTest,The following statement contains a magic number: Assert.AreEqual("first"' (response as object[])[2]);
Magic Number,CSRedis.Tests,ScriptingTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ScriptingTests.cs,EvalTest,The following statement contains a magic number: Assert.AreEqual("second"' (response as object[])[3]);
Magic Number,CSRedis.Tests,ScriptingTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ScriptingTests.cs,EvalSHATest,The following statement contains a magic number: Assert.AreEqual(4' (response as object[]).Length);
Magic Number,CSRedis.Tests,ScriptingTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ScriptingTests.cs,EvalSHATest,The following statement contains a magic number: Assert.AreEqual("first"' (response as object[])[2]);
Magic Number,CSRedis.Tests,ScriptingTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ScriptingTests.cs,EvalSHATest,The following statement contains a magic number: Assert.AreEqual("second"' (response as object[])[3]);
Magic Number,CSRedis.Tests,ScriptingTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ScriptingTests.cs,ScriptExistsTests,The following statement contains a magic number: Assert.AreEqual(2' response.Length);
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,MastersTest,The following statement contains a magic number: TestSentinel(                  "*1\r\n" + Compile(                      "name"' "mymaster"'                      "ip"' "127.0.0.1"'                      "port"' "6379"'                      "runid"' "0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"'                      "flags"' "master"'                      "pending-commands"' "0"'                      "last-ping-sent"' "0"'                      "last-ping-reply"' "50"'                      "last-ok-ping-reply"' "50"'                      "down-after-milliseconds"' "30000"'                      "info-refresh"' "1913"'                      "role-reported"' "master"'                      "role-reported-time"' "1838781"'                      "config-epoch"' "0"'                      "num-slaves"' "2"'                      "num-other-sentinels"' "1"'                      "quorum"' "2"'                      "failover-timeout"' "180000"'                      "parallel-syncs"' "1")'                  x => x.Masters()'                  x => x.MastersAsync()'                  (m' r) =>                  {                      Assert.AreEqual(1' r.Length);                      Assert.AreEqual("mymaster"' r[0].Name);                      Assert.AreEqual("127.0.0.1"' r[0].Ip);                      Assert.AreEqual(6379' r[0].Port);                      Assert.AreEqual("0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"' r[0].RunId);                      Assert.AreEqual(1' r[0].Flags.Length);                      Assert.AreEqual("master"' r[0].Flags[0]);                      Assert.AreEqual(0' r[0].PendingCommands);                      Assert.AreEqual(0' r[0].LastPingSent);                      Assert.AreEqual(50' r[0].LastPingReply);                      Assert.AreEqual(50' r[0].LastOkPingReply);                      Assert.AreEqual(30000' r[0].DownAfterMilliseconds);                      Assert.AreEqual(1913' r[0].InfoRefresh);                      Assert.AreEqual("master"' r[0].RoleReported);                      Assert.AreEqual(1838781' r[0].RoleReportedTime);                      Assert.AreEqual(0' r[0].ConfigEpoch);                      Assert.AreEqual(2' r[0].NumSlaves);                      Assert.AreEqual(1' r[0].NumOtherSentinels);                      Assert.AreEqual(2' r[0].Quorum);                      Assert.AreEqual(180000' r[0].FailoverTimeout);                      Assert.AreEqual(1' r[0].ParallelSyncs);                      Assert.AreEqual(Compile("SENTINEL"' "masters")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,MastersTest,The following statement contains a magic number: TestSentinel(                  "*1\r\n" + Compile(                      "name"' "mymaster"'                      "ip"' "127.0.0.1"'                      "port"' "6379"'                      "runid"' "0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"'                      "flags"' "master"'                      "pending-commands"' "0"'                      "last-ping-sent"' "0"'                      "last-ping-reply"' "50"'                      "last-ok-ping-reply"' "50"'                      "down-after-milliseconds"' "30000"'                      "info-refresh"' "1913"'                      "role-reported"' "master"'                      "role-reported-time"' "1838781"'                      "config-epoch"' "0"'                      "num-slaves"' "2"'                      "num-other-sentinels"' "1"'                      "quorum"' "2"'                      "failover-timeout"' "180000"'                      "parallel-syncs"' "1")'                  x => x.Masters()'                  x => x.MastersAsync()'                  (m' r) =>                  {                      Assert.AreEqual(1' r.Length);                      Assert.AreEqual("mymaster"' r[0].Name);                      Assert.AreEqual("127.0.0.1"' r[0].Ip);                      Assert.AreEqual(6379' r[0].Port);                      Assert.AreEqual("0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"' r[0].RunId);                      Assert.AreEqual(1' r[0].Flags.Length);                      Assert.AreEqual("master"' r[0].Flags[0]);                      Assert.AreEqual(0' r[0].PendingCommands);                      Assert.AreEqual(0' r[0].LastPingSent);                      Assert.AreEqual(50' r[0].LastPingReply);                      Assert.AreEqual(50' r[0].LastOkPingReply);                      Assert.AreEqual(30000' r[0].DownAfterMilliseconds);                      Assert.AreEqual(1913' r[0].InfoRefresh);                      Assert.AreEqual("master"' r[0].RoleReported);                      Assert.AreEqual(1838781' r[0].RoleReportedTime);                      Assert.AreEqual(0' r[0].ConfigEpoch);                      Assert.AreEqual(2' r[0].NumSlaves);                      Assert.AreEqual(1' r[0].NumOtherSentinels);                      Assert.AreEqual(2' r[0].Quorum);                      Assert.AreEqual(180000' r[0].FailoverTimeout);                      Assert.AreEqual(1' r[0].ParallelSyncs);                      Assert.AreEqual(Compile("SENTINEL"' "masters")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,MastersTest,The following statement contains a magic number: TestSentinel(                  "*1\r\n" + Compile(                      "name"' "mymaster"'                      "ip"' "127.0.0.1"'                      "port"' "6379"'                      "runid"' "0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"'                      "flags"' "master"'                      "pending-commands"' "0"'                      "last-ping-sent"' "0"'                      "last-ping-reply"' "50"'                      "last-ok-ping-reply"' "50"'                      "down-after-milliseconds"' "30000"'                      "info-refresh"' "1913"'                      "role-reported"' "master"'                      "role-reported-time"' "1838781"'                      "config-epoch"' "0"'                      "num-slaves"' "2"'                      "num-other-sentinels"' "1"'                      "quorum"' "2"'                      "failover-timeout"' "180000"'                      "parallel-syncs"' "1")'                  x => x.Masters()'                  x => x.MastersAsync()'                  (m' r) =>                  {                      Assert.AreEqual(1' r.Length);                      Assert.AreEqual("mymaster"' r[0].Name);                      Assert.AreEqual("127.0.0.1"' r[0].Ip);                      Assert.AreEqual(6379' r[0].Port);                      Assert.AreEqual("0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"' r[0].RunId);                      Assert.AreEqual(1' r[0].Flags.Length);                      Assert.AreEqual("master"' r[0].Flags[0]);                      Assert.AreEqual(0' r[0].PendingCommands);                      Assert.AreEqual(0' r[0].LastPingSent);                      Assert.AreEqual(50' r[0].LastPingReply);                      Assert.AreEqual(50' r[0].LastOkPingReply);                      Assert.AreEqual(30000' r[0].DownAfterMilliseconds);                      Assert.AreEqual(1913' r[0].InfoRefresh);                      Assert.AreEqual("master"' r[0].RoleReported);                      Assert.AreEqual(1838781' r[0].RoleReportedTime);                      Assert.AreEqual(0' r[0].ConfigEpoch);                      Assert.AreEqual(2' r[0].NumSlaves);                      Assert.AreEqual(1' r[0].NumOtherSentinels);                      Assert.AreEqual(2' r[0].Quorum);                      Assert.AreEqual(180000' r[0].FailoverTimeout);                      Assert.AreEqual(1' r[0].ParallelSyncs);                      Assert.AreEqual(Compile("SENTINEL"' "masters")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,MastersTest,The following statement contains a magic number: TestSentinel(                  "*1\r\n" + Compile(                      "name"' "mymaster"'                      "ip"' "127.0.0.1"'                      "port"' "6379"'                      "runid"' "0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"'                      "flags"' "master"'                      "pending-commands"' "0"'                      "last-ping-sent"' "0"'                      "last-ping-reply"' "50"'                      "last-ok-ping-reply"' "50"'                      "down-after-milliseconds"' "30000"'                      "info-refresh"' "1913"'                      "role-reported"' "master"'                      "role-reported-time"' "1838781"'                      "config-epoch"' "0"'                      "num-slaves"' "2"'                      "num-other-sentinels"' "1"'                      "quorum"' "2"'                      "failover-timeout"' "180000"'                      "parallel-syncs"' "1")'                  x => x.Masters()'                  x => x.MastersAsync()'                  (m' r) =>                  {                      Assert.AreEqual(1' r.Length);                      Assert.AreEqual("mymaster"' r[0].Name);                      Assert.AreEqual("127.0.0.1"' r[0].Ip);                      Assert.AreEqual(6379' r[0].Port);                      Assert.AreEqual("0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"' r[0].RunId);                      Assert.AreEqual(1' r[0].Flags.Length);                      Assert.AreEqual("master"' r[0].Flags[0]);                      Assert.AreEqual(0' r[0].PendingCommands);                      Assert.AreEqual(0' r[0].LastPingSent);                      Assert.AreEqual(50' r[0].LastPingReply);                      Assert.AreEqual(50' r[0].LastOkPingReply);                      Assert.AreEqual(30000' r[0].DownAfterMilliseconds);                      Assert.AreEqual(1913' r[0].InfoRefresh);                      Assert.AreEqual("master"' r[0].RoleReported);                      Assert.AreEqual(1838781' r[0].RoleReportedTime);                      Assert.AreEqual(0' r[0].ConfigEpoch);                      Assert.AreEqual(2' r[0].NumSlaves);                      Assert.AreEqual(1' r[0].NumOtherSentinels);                      Assert.AreEqual(2' r[0].Quorum);                      Assert.AreEqual(180000' r[0].FailoverTimeout);                      Assert.AreEqual(1' r[0].ParallelSyncs);                      Assert.AreEqual(Compile("SENTINEL"' "masters")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,MastersTest,The following statement contains a magic number: TestSentinel(                  "*1\r\n" + Compile(                      "name"' "mymaster"'                      "ip"' "127.0.0.1"'                      "port"' "6379"'                      "runid"' "0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"'                      "flags"' "master"'                      "pending-commands"' "0"'                      "last-ping-sent"' "0"'                      "last-ping-reply"' "50"'                      "last-ok-ping-reply"' "50"'                      "down-after-milliseconds"' "30000"'                      "info-refresh"' "1913"'                      "role-reported"' "master"'                      "role-reported-time"' "1838781"'                      "config-epoch"' "0"'                      "num-slaves"' "2"'                      "num-other-sentinels"' "1"'                      "quorum"' "2"'                      "failover-timeout"' "180000"'                      "parallel-syncs"' "1")'                  x => x.Masters()'                  x => x.MastersAsync()'                  (m' r) =>                  {                      Assert.AreEqual(1' r.Length);                      Assert.AreEqual("mymaster"' r[0].Name);                      Assert.AreEqual("127.0.0.1"' r[0].Ip);                      Assert.AreEqual(6379' r[0].Port);                      Assert.AreEqual("0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"' r[0].RunId);                      Assert.AreEqual(1' r[0].Flags.Length);                      Assert.AreEqual("master"' r[0].Flags[0]);                      Assert.AreEqual(0' r[0].PendingCommands);                      Assert.AreEqual(0' r[0].LastPingSent);                      Assert.AreEqual(50' r[0].LastPingReply);                      Assert.AreEqual(50' r[0].LastOkPingReply);                      Assert.AreEqual(30000' r[0].DownAfterMilliseconds);                      Assert.AreEqual(1913' r[0].InfoRefresh);                      Assert.AreEqual("master"' r[0].RoleReported);                      Assert.AreEqual(1838781' r[0].RoleReportedTime);                      Assert.AreEqual(0' r[0].ConfigEpoch);                      Assert.AreEqual(2' r[0].NumSlaves);                      Assert.AreEqual(1' r[0].NumOtherSentinels);                      Assert.AreEqual(2' r[0].Quorum);                      Assert.AreEqual(180000' r[0].FailoverTimeout);                      Assert.AreEqual(1' r[0].ParallelSyncs);                      Assert.AreEqual(Compile("SENTINEL"' "masters")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,MastersTest,The following statement contains a magic number: TestSentinel(                  "*1\r\n" + Compile(                      "name"' "mymaster"'                      "ip"' "127.0.0.1"'                      "port"' "6379"'                      "runid"' "0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"'                      "flags"' "master"'                      "pending-commands"' "0"'                      "last-ping-sent"' "0"'                      "last-ping-reply"' "50"'                      "last-ok-ping-reply"' "50"'                      "down-after-milliseconds"' "30000"'                      "info-refresh"' "1913"'                      "role-reported"' "master"'                      "role-reported-time"' "1838781"'                      "config-epoch"' "0"'                      "num-slaves"' "2"'                      "num-other-sentinels"' "1"'                      "quorum"' "2"'                      "failover-timeout"' "180000"'                      "parallel-syncs"' "1")'                  x => x.Masters()'                  x => x.MastersAsync()'                  (m' r) =>                  {                      Assert.AreEqual(1' r.Length);                      Assert.AreEqual("mymaster"' r[0].Name);                      Assert.AreEqual("127.0.0.1"' r[0].Ip);                      Assert.AreEqual(6379' r[0].Port);                      Assert.AreEqual("0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"' r[0].RunId);                      Assert.AreEqual(1' r[0].Flags.Length);                      Assert.AreEqual("master"' r[0].Flags[0]);                      Assert.AreEqual(0' r[0].PendingCommands);                      Assert.AreEqual(0' r[0].LastPingSent);                      Assert.AreEqual(50' r[0].LastPingReply);                      Assert.AreEqual(50' r[0].LastOkPingReply);                      Assert.AreEqual(30000' r[0].DownAfterMilliseconds);                      Assert.AreEqual(1913' r[0].InfoRefresh);                      Assert.AreEqual("master"' r[0].RoleReported);                      Assert.AreEqual(1838781' r[0].RoleReportedTime);                      Assert.AreEqual(0' r[0].ConfigEpoch);                      Assert.AreEqual(2' r[0].NumSlaves);                      Assert.AreEqual(1' r[0].NumOtherSentinels);                      Assert.AreEqual(2' r[0].Quorum);                      Assert.AreEqual(180000' r[0].FailoverTimeout);                      Assert.AreEqual(1' r[0].ParallelSyncs);                      Assert.AreEqual(Compile("SENTINEL"' "masters")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,MastersTest,The following statement contains a magic number: TestSentinel(                  "*1\r\n" + Compile(                      "name"' "mymaster"'                      "ip"' "127.0.0.1"'                      "port"' "6379"'                      "runid"' "0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"'                      "flags"' "master"'                      "pending-commands"' "0"'                      "last-ping-sent"' "0"'                      "last-ping-reply"' "50"'                      "last-ok-ping-reply"' "50"'                      "down-after-milliseconds"' "30000"'                      "info-refresh"' "1913"'                      "role-reported"' "master"'                      "role-reported-time"' "1838781"'                      "config-epoch"' "0"'                      "num-slaves"' "2"'                      "num-other-sentinels"' "1"'                      "quorum"' "2"'                      "failover-timeout"' "180000"'                      "parallel-syncs"' "1")'                  x => x.Masters()'                  x => x.MastersAsync()'                  (m' r) =>                  {                      Assert.AreEqual(1' r.Length);                      Assert.AreEqual("mymaster"' r[0].Name);                      Assert.AreEqual("127.0.0.1"' r[0].Ip);                      Assert.AreEqual(6379' r[0].Port);                      Assert.AreEqual("0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"' r[0].RunId);                      Assert.AreEqual(1' r[0].Flags.Length);                      Assert.AreEqual("master"' r[0].Flags[0]);                      Assert.AreEqual(0' r[0].PendingCommands);                      Assert.AreEqual(0' r[0].LastPingSent);                      Assert.AreEqual(50' r[0].LastPingReply);                      Assert.AreEqual(50' r[0].LastOkPingReply);                      Assert.AreEqual(30000' r[0].DownAfterMilliseconds);                      Assert.AreEqual(1913' r[0].InfoRefresh);                      Assert.AreEqual("master"' r[0].RoleReported);                      Assert.AreEqual(1838781' r[0].RoleReportedTime);                      Assert.AreEqual(0' r[0].ConfigEpoch);                      Assert.AreEqual(2' r[0].NumSlaves);                      Assert.AreEqual(1' r[0].NumOtherSentinels);                      Assert.AreEqual(2' r[0].Quorum);                      Assert.AreEqual(180000' r[0].FailoverTimeout);                      Assert.AreEqual(1' r[0].ParallelSyncs);                      Assert.AreEqual(Compile("SENTINEL"' "masters")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,MastersTest,The following statement contains a magic number: TestSentinel(                  "*1\r\n" + Compile(                      "name"' "mymaster"'                      "ip"' "127.0.0.1"'                      "port"' "6379"'                      "runid"' "0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"'                      "flags"' "master"'                      "pending-commands"' "0"'                      "last-ping-sent"' "0"'                      "last-ping-reply"' "50"'                      "last-ok-ping-reply"' "50"'                      "down-after-milliseconds"' "30000"'                      "info-refresh"' "1913"'                      "role-reported"' "master"'                      "role-reported-time"' "1838781"'                      "config-epoch"' "0"'                      "num-slaves"' "2"'                      "num-other-sentinels"' "1"'                      "quorum"' "2"'                      "failover-timeout"' "180000"'                      "parallel-syncs"' "1")'                  x => x.Masters()'                  x => x.MastersAsync()'                  (m' r) =>                  {                      Assert.AreEqual(1' r.Length);                      Assert.AreEqual("mymaster"' r[0].Name);                      Assert.AreEqual("127.0.0.1"' r[0].Ip);                      Assert.AreEqual(6379' r[0].Port);                      Assert.AreEqual("0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"' r[0].RunId);                      Assert.AreEqual(1' r[0].Flags.Length);                      Assert.AreEqual("master"' r[0].Flags[0]);                      Assert.AreEqual(0' r[0].PendingCommands);                      Assert.AreEqual(0' r[0].LastPingSent);                      Assert.AreEqual(50' r[0].LastPingReply);                      Assert.AreEqual(50' r[0].LastOkPingReply);                      Assert.AreEqual(30000' r[0].DownAfterMilliseconds);                      Assert.AreEqual(1913' r[0].InfoRefresh);                      Assert.AreEqual("master"' r[0].RoleReported);                      Assert.AreEqual(1838781' r[0].RoleReportedTime);                      Assert.AreEqual(0' r[0].ConfigEpoch);                      Assert.AreEqual(2' r[0].NumSlaves);                      Assert.AreEqual(1' r[0].NumOtherSentinels);                      Assert.AreEqual(2' r[0].Quorum);                      Assert.AreEqual(180000' r[0].FailoverTimeout);                      Assert.AreEqual(1' r[0].ParallelSyncs);                      Assert.AreEqual(Compile("SENTINEL"' "masters")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,MastersTest,The following statement contains a magic number: TestSentinel(                  "*1\r\n" + Compile(                      "name"' "mymaster"'                      "ip"' "127.0.0.1"'                      "port"' "6379"'                      "runid"' "0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"'                      "flags"' "master"'                      "pending-commands"' "0"'                      "last-ping-sent"' "0"'                      "last-ping-reply"' "50"'                      "last-ok-ping-reply"' "50"'                      "down-after-milliseconds"' "30000"'                      "info-refresh"' "1913"'                      "role-reported"' "master"'                      "role-reported-time"' "1838781"'                      "config-epoch"' "0"'                      "num-slaves"' "2"'                      "num-other-sentinels"' "1"'                      "quorum"' "2"'                      "failover-timeout"' "180000"'                      "parallel-syncs"' "1")'                  x => x.Masters()'                  x => x.MastersAsync()'                  (m' r) =>                  {                      Assert.AreEqual(1' r.Length);                      Assert.AreEqual("mymaster"' r[0].Name);                      Assert.AreEqual("127.0.0.1"' r[0].Ip);                      Assert.AreEqual(6379' r[0].Port);                      Assert.AreEqual("0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"' r[0].RunId);                      Assert.AreEqual(1' r[0].Flags.Length);                      Assert.AreEqual("master"' r[0].Flags[0]);                      Assert.AreEqual(0' r[0].PendingCommands);                      Assert.AreEqual(0' r[0].LastPingSent);                      Assert.AreEqual(50' r[0].LastPingReply);                      Assert.AreEqual(50' r[0].LastOkPingReply);                      Assert.AreEqual(30000' r[0].DownAfterMilliseconds);                      Assert.AreEqual(1913' r[0].InfoRefresh);                      Assert.AreEqual("master"' r[0].RoleReported);                      Assert.AreEqual(1838781' r[0].RoleReportedTime);                      Assert.AreEqual(0' r[0].ConfigEpoch);                      Assert.AreEqual(2' r[0].NumSlaves);                      Assert.AreEqual(1' r[0].NumOtherSentinels);                      Assert.AreEqual(2' r[0].Quorum);                      Assert.AreEqual(180000' r[0].FailoverTimeout);                      Assert.AreEqual(1' r[0].ParallelSyncs);                      Assert.AreEqual(Compile("SENTINEL"' "masters")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,MasterTest,The following statement contains a magic number: TestSentinel(                  Compile(                      "name"' "mymaster"'                      "ip"' "127.0.0.1"'                      "port"' "6379"'                      "runid"' "0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"'                      "flags"' "master"'                      "pending-commands"' "0"'                      "last-ping-sent"' "0"'                      "last-ping-reply"' "50"'                      "last-ok-ping-reply"' "50"'                      "down-after-milliseconds"' "30000"'                      "info-refresh"' "1913"'                      "role-reported"' "master"'                      "role-reported-time"' "1838781"'                      "config-epoch"' "0"'                      "num-slaves"' "2"'                      "num-other-sentinels"' "1"'                      "quorum"' "2"'                      "failover-timeout"' "180000"'                      "parallel-syncs"' "1")'                  x => x.Master("mymaster")'                  x => x.MasterAsync("mymaster")'                  (m' r) =>                  {                      Assert.AreEqual("mymaster"' r.Name);                      Assert.AreEqual("127.0.0.1"' r.Ip);                      Assert.AreEqual(6379' r.Port);                      Assert.AreEqual("0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"' r.RunId);                      Assert.AreEqual(1' r.Flags.Length);                      Assert.AreEqual("master"' r.Flags[0]);                      Assert.AreEqual(0' r.PendingCommands);                      Assert.AreEqual(0' r.LastPingSent);                      Assert.AreEqual(50' r.LastPingReply);                      Assert.AreEqual(50' r.LastOkPingReply);                      Assert.AreEqual(30000' r.DownAfterMilliseconds);                      Assert.AreEqual(1913' r.InfoRefresh);                      Assert.AreEqual("master"' r.RoleReported);                      Assert.AreEqual(1838781' r.RoleReportedTime);                      Assert.AreEqual(0' r.ConfigEpoch);                      Assert.AreEqual(2' r.NumSlaves);                      Assert.AreEqual(1' r.NumOtherSentinels);                      Assert.AreEqual(2' r.Quorum);                      Assert.AreEqual(180000' r.FailoverTimeout);                      Assert.AreEqual(1' r.ParallelSyncs);                      Assert.AreEqual(Compile("SENTINEL"' "master"' "mymaster")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,MasterTest,The following statement contains a magic number: TestSentinel(                  Compile(                      "name"' "mymaster"'                      "ip"' "127.0.0.1"'                      "port"' "6379"'                      "runid"' "0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"'                      "flags"' "master"'                      "pending-commands"' "0"'                      "last-ping-sent"' "0"'                      "last-ping-reply"' "50"'                      "last-ok-ping-reply"' "50"'                      "down-after-milliseconds"' "30000"'                      "info-refresh"' "1913"'                      "role-reported"' "master"'                      "role-reported-time"' "1838781"'                      "config-epoch"' "0"'                      "num-slaves"' "2"'                      "num-other-sentinels"' "1"'                      "quorum"' "2"'                      "failover-timeout"' "180000"'                      "parallel-syncs"' "1")'                  x => x.Master("mymaster")'                  x => x.MasterAsync("mymaster")'                  (m' r) =>                  {                      Assert.AreEqual("mymaster"' r.Name);                      Assert.AreEqual("127.0.0.1"' r.Ip);                      Assert.AreEqual(6379' r.Port);                      Assert.AreEqual("0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"' r.RunId);                      Assert.AreEqual(1' r.Flags.Length);                      Assert.AreEqual("master"' r.Flags[0]);                      Assert.AreEqual(0' r.PendingCommands);                      Assert.AreEqual(0' r.LastPingSent);                      Assert.AreEqual(50' r.LastPingReply);                      Assert.AreEqual(50' r.LastOkPingReply);                      Assert.AreEqual(30000' r.DownAfterMilliseconds);                      Assert.AreEqual(1913' r.InfoRefresh);                      Assert.AreEqual("master"' r.RoleReported);                      Assert.AreEqual(1838781' r.RoleReportedTime);                      Assert.AreEqual(0' r.ConfigEpoch);                      Assert.AreEqual(2' r.NumSlaves);                      Assert.AreEqual(1' r.NumOtherSentinels);                      Assert.AreEqual(2' r.Quorum);                      Assert.AreEqual(180000' r.FailoverTimeout);                      Assert.AreEqual(1' r.ParallelSyncs);                      Assert.AreEqual(Compile("SENTINEL"' "master"' "mymaster")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,MasterTest,The following statement contains a magic number: TestSentinel(                  Compile(                      "name"' "mymaster"'                      "ip"' "127.0.0.1"'                      "port"' "6379"'                      "runid"' "0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"'                      "flags"' "master"'                      "pending-commands"' "0"'                      "last-ping-sent"' "0"'                      "last-ping-reply"' "50"'                      "last-ok-ping-reply"' "50"'                      "down-after-milliseconds"' "30000"'                      "info-refresh"' "1913"'                      "role-reported"' "master"'                      "role-reported-time"' "1838781"'                      "config-epoch"' "0"'                      "num-slaves"' "2"'                      "num-other-sentinels"' "1"'                      "quorum"' "2"'                      "failover-timeout"' "180000"'                      "parallel-syncs"' "1")'                  x => x.Master("mymaster")'                  x => x.MasterAsync("mymaster")'                  (m' r) =>                  {                      Assert.AreEqual("mymaster"' r.Name);                      Assert.AreEqual("127.0.0.1"' r.Ip);                      Assert.AreEqual(6379' r.Port);                      Assert.AreEqual("0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"' r.RunId);                      Assert.AreEqual(1' r.Flags.Length);                      Assert.AreEqual("master"' r.Flags[0]);                      Assert.AreEqual(0' r.PendingCommands);                      Assert.AreEqual(0' r.LastPingSent);                      Assert.AreEqual(50' r.LastPingReply);                      Assert.AreEqual(50' r.LastOkPingReply);                      Assert.AreEqual(30000' r.DownAfterMilliseconds);                      Assert.AreEqual(1913' r.InfoRefresh);                      Assert.AreEqual("master"' r.RoleReported);                      Assert.AreEqual(1838781' r.RoleReportedTime);                      Assert.AreEqual(0' r.ConfigEpoch);                      Assert.AreEqual(2' r.NumSlaves);                      Assert.AreEqual(1' r.NumOtherSentinels);                      Assert.AreEqual(2' r.Quorum);                      Assert.AreEqual(180000' r.FailoverTimeout);                      Assert.AreEqual(1' r.ParallelSyncs);                      Assert.AreEqual(Compile("SENTINEL"' "master"' "mymaster")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,MasterTest,The following statement contains a magic number: TestSentinel(                  Compile(                      "name"' "mymaster"'                      "ip"' "127.0.0.1"'                      "port"' "6379"'                      "runid"' "0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"'                      "flags"' "master"'                      "pending-commands"' "0"'                      "last-ping-sent"' "0"'                      "last-ping-reply"' "50"'                      "last-ok-ping-reply"' "50"'                      "down-after-milliseconds"' "30000"'                      "info-refresh"' "1913"'                      "role-reported"' "master"'                      "role-reported-time"' "1838781"'                      "config-epoch"' "0"'                      "num-slaves"' "2"'                      "num-other-sentinels"' "1"'                      "quorum"' "2"'                      "failover-timeout"' "180000"'                      "parallel-syncs"' "1")'                  x => x.Master("mymaster")'                  x => x.MasterAsync("mymaster")'                  (m' r) =>                  {                      Assert.AreEqual("mymaster"' r.Name);                      Assert.AreEqual("127.0.0.1"' r.Ip);                      Assert.AreEqual(6379' r.Port);                      Assert.AreEqual("0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"' r.RunId);                      Assert.AreEqual(1' r.Flags.Length);                      Assert.AreEqual("master"' r.Flags[0]);                      Assert.AreEqual(0' r.PendingCommands);                      Assert.AreEqual(0' r.LastPingSent);                      Assert.AreEqual(50' r.LastPingReply);                      Assert.AreEqual(50' r.LastOkPingReply);                      Assert.AreEqual(30000' r.DownAfterMilliseconds);                      Assert.AreEqual(1913' r.InfoRefresh);                      Assert.AreEqual("master"' r.RoleReported);                      Assert.AreEqual(1838781' r.RoleReportedTime);                      Assert.AreEqual(0' r.ConfigEpoch);                      Assert.AreEqual(2' r.NumSlaves);                      Assert.AreEqual(1' r.NumOtherSentinels);                      Assert.AreEqual(2' r.Quorum);                      Assert.AreEqual(180000' r.FailoverTimeout);                      Assert.AreEqual(1' r.ParallelSyncs);                      Assert.AreEqual(Compile("SENTINEL"' "master"' "mymaster")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,MasterTest,The following statement contains a magic number: TestSentinel(                  Compile(                      "name"' "mymaster"'                      "ip"' "127.0.0.1"'                      "port"' "6379"'                      "runid"' "0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"'                      "flags"' "master"'                      "pending-commands"' "0"'                      "last-ping-sent"' "0"'                      "last-ping-reply"' "50"'                      "last-ok-ping-reply"' "50"'                      "down-after-milliseconds"' "30000"'                      "info-refresh"' "1913"'                      "role-reported"' "master"'                      "role-reported-time"' "1838781"'                      "config-epoch"' "0"'                      "num-slaves"' "2"'                      "num-other-sentinels"' "1"'                      "quorum"' "2"'                      "failover-timeout"' "180000"'                      "parallel-syncs"' "1")'                  x => x.Master("mymaster")'                  x => x.MasterAsync("mymaster")'                  (m' r) =>                  {                      Assert.AreEqual("mymaster"' r.Name);                      Assert.AreEqual("127.0.0.1"' r.Ip);                      Assert.AreEqual(6379' r.Port);                      Assert.AreEqual("0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"' r.RunId);                      Assert.AreEqual(1' r.Flags.Length);                      Assert.AreEqual("master"' r.Flags[0]);                      Assert.AreEqual(0' r.PendingCommands);                      Assert.AreEqual(0' r.LastPingSent);                      Assert.AreEqual(50' r.LastPingReply);                      Assert.AreEqual(50' r.LastOkPingReply);                      Assert.AreEqual(30000' r.DownAfterMilliseconds);                      Assert.AreEqual(1913' r.InfoRefresh);                      Assert.AreEqual("master"' r.RoleReported);                      Assert.AreEqual(1838781' r.RoleReportedTime);                      Assert.AreEqual(0' r.ConfigEpoch);                      Assert.AreEqual(2' r.NumSlaves);                      Assert.AreEqual(1' r.NumOtherSentinels);                      Assert.AreEqual(2' r.Quorum);                      Assert.AreEqual(180000' r.FailoverTimeout);                      Assert.AreEqual(1' r.ParallelSyncs);                      Assert.AreEqual(Compile("SENTINEL"' "master"' "mymaster")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,MasterTest,The following statement contains a magic number: TestSentinel(                  Compile(                      "name"' "mymaster"'                      "ip"' "127.0.0.1"'                      "port"' "6379"'                      "runid"' "0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"'                      "flags"' "master"'                      "pending-commands"' "0"'                      "last-ping-sent"' "0"'                      "last-ping-reply"' "50"'                      "last-ok-ping-reply"' "50"'                      "down-after-milliseconds"' "30000"'                      "info-refresh"' "1913"'                      "role-reported"' "master"'                      "role-reported-time"' "1838781"'                      "config-epoch"' "0"'                      "num-slaves"' "2"'                      "num-other-sentinels"' "1"'                      "quorum"' "2"'                      "failover-timeout"' "180000"'                      "parallel-syncs"' "1")'                  x => x.Master("mymaster")'                  x => x.MasterAsync("mymaster")'                  (m' r) =>                  {                      Assert.AreEqual("mymaster"' r.Name);                      Assert.AreEqual("127.0.0.1"' r.Ip);                      Assert.AreEqual(6379' r.Port);                      Assert.AreEqual("0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"' r.RunId);                      Assert.AreEqual(1' r.Flags.Length);                      Assert.AreEqual("master"' r.Flags[0]);                      Assert.AreEqual(0' r.PendingCommands);                      Assert.AreEqual(0' r.LastPingSent);                      Assert.AreEqual(50' r.LastPingReply);                      Assert.AreEqual(50' r.LastOkPingReply);                      Assert.AreEqual(30000' r.DownAfterMilliseconds);                      Assert.AreEqual(1913' r.InfoRefresh);                      Assert.AreEqual("master"' r.RoleReported);                      Assert.AreEqual(1838781' r.RoleReportedTime);                      Assert.AreEqual(0' r.ConfigEpoch);                      Assert.AreEqual(2' r.NumSlaves);                      Assert.AreEqual(1' r.NumOtherSentinels);                      Assert.AreEqual(2' r.Quorum);                      Assert.AreEqual(180000' r.FailoverTimeout);                      Assert.AreEqual(1' r.ParallelSyncs);                      Assert.AreEqual(Compile("SENTINEL"' "master"' "mymaster")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,MasterTest,The following statement contains a magic number: TestSentinel(                  Compile(                      "name"' "mymaster"'                      "ip"' "127.0.0.1"'                      "port"' "6379"'                      "runid"' "0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"'                      "flags"' "master"'                      "pending-commands"' "0"'                      "last-ping-sent"' "0"'                      "last-ping-reply"' "50"'                      "last-ok-ping-reply"' "50"'                      "down-after-milliseconds"' "30000"'                      "info-refresh"' "1913"'                      "role-reported"' "master"'                      "role-reported-time"' "1838781"'                      "config-epoch"' "0"'                      "num-slaves"' "2"'                      "num-other-sentinels"' "1"'                      "quorum"' "2"'                      "failover-timeout"' "180000"'                      "parallel-syncs"' "1")'                  x => x.Master("mymaster")'                  x => x.MasterAsync("mymaster")'                  (m' r) =>                  {                      Assert.AreEqual("mymaster"' r.Name);                      Assert.AreEqual("127.0.0.1"' r.Ip);                      Assert.AreEqual(6379' r.Port);                      Assert.AreEqual("0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"' r.RunId);                      Assert.AreEqual(1' r.Flags.Length);                      Assert.AreEqual("master"' r.Flags[0]);                      Assert.AreEqual(0' r.PendingCommands);                      Assert.AreEqual(0' r.LastPingSent);                      Assert.AreEqual(50' r.LastPingReply);                      Assert.AreEqual(50' r.LastOkPingReply);                      Assert.AreEqual(30000' r.DownAfterMilliseconds);                      Assert.AreEqual(1913' r.InfoRefresh);                      Assert.AreEqual("master"' r.RoleReported);                      Assert.AreEqual(1838781' r.RoleReportedTime);                      Assert.AreEqual(0' r.ConfigEpoch);                      Assert.AreEqual(2' r.NumSlaves);                      Assert.AreEqual(1' r.NumOtherSentinels);                      Assert.AreEqual(2' r.Quorum);                      Assert.AreEqual(180000' r.FailoverTimeout);                      Assert.AreEqual(1' r.ParallelSyncs);                      Assert.AreEqual(Compile("SENTINEL"' "master"' "mymaster")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,MasterTest,The following statement contains a magic number: TestSentinel(                  Compile(                      "name"' "mymaster"'                      "ip"' "127.0.0.1"'                      "port"' "6379"'                      "runid"' "0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"'                      "flags"' "master"'                      "pending-commands"' "0"'                      "last-ping-sent"' "0"'                      "last-ping-reply"' "50"'                      "last-ok-ping-reply"' "50"'                      "down-after-milliseconds"' "30000"'                      "info-refresh"' "1913"'                      "role-reported"' "master"'                      "role-reported-time"' "1838781"'                      "config-epoch"' "0"'                      "num-slaves"' "2"'                      "num-other-sentinels"' "1"'                      "quorum"' "2"'                      "failover-timeout"' "180000"'                      "parallel-syncs"' "1")'                  x => x.Master("mymaster")'                  x => x.MasterAsync("mymaster")'                  (m' r) =>                  {                      Assert.AreEqual("mymaster"' r.Name);                      Assert.AreEqual("127.0.0.1"' r.Ip);                      Assert.AreEqual(6379' r.Port);                      Assert.AreEqual("0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"' r.RunId);                      Assert.AreEqual(1' r.Flags.Length);                      Assert.AreEqual("master"' r.Flags[0]);                      Assert.AreEqual(0' r.PendingCommands);                      Assert.AreEqual(0' r.LastPingSent);                      Assert.AreEqual(50' r.LastPingReply);                      Assert.AreEqual(50' r.LastOkPingReply);                      Assert.AreEqual(30000' r.DownAfterMilliseconds);                      Assert.AreEqual(1913' r.InfoRefresh);                      Assert.AreEqual("master"' r.RoleReported);                      Assert.AreEqual(1838781' r.RoleReportedTime);                      Assert.AreEqual(0' r.ConfigEpoch);                      Assert.AreEqual(2' r.NumSlaves);                      Assert.AreEqual(1' r.NumOtherSentinels);                      Assert.AreEqual(2' r.Quorum);                      Assert.AreEqual(180000' r.FailoverTimeout);                      Assert.AreEqual(1' r.ParallelSyncs);                      Assert.AreEqual(Compile("SENTINEL"' "master"' "mymaster")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,MasterTest,The following statement contains a magic number: TestSentinel(                  Compile(                      "name"' "mymaster"'                      "ip"' "127.0.0.1"'                      "port"' "6379"'                      "runid"' "0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"'                      "flags"' "master"'                      "pending-commands"' "0"'                      "last-ping-sent"' "0"'                      "last-ping-reply"' "50"'                      "last-ok-ping-reply"' "50"'                      "down-after-milliseconds"' "30000"'                      "info-refresh"' "1913"'                      "role-reported"' "master"'                      "role-reported-time"' "1838781"'                      "config-epoch"' "0"'                      "num-slaves"' "2"'                      "num-other-sentinels"' "1"'                      "quorum"' "2"'                      "failover-timeout"' "180000"'                      "parallel-syncs"' "1")'                  x => x.Master("mymaster")'                  x => x.MasterAsync("mymaster")'                  (m' r) =>                  {                      Assert.AreEqual("mymaster"' r.Name);                      Assert.AreEqual("127.0.0.1"' r.Ip);                      Assert.AreEqual(6379' r.Port);                      Assert.AreEqual("0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"' r.RunId);                      Assert.AreEqual(1' r.Flags.Length);                      Assert.AreEqual("master"' r.Flags[0]);                      Assert.AreEqual(0' r.PendingCommands);                      Assert.AreEqual(0' r.LastPingSent);                      Assert.AreEqual(50' r.LastPingReply);                      Assert.AreEqual(50' r.LastOkPingReply);                      Assert.AreEqual(30000' r.DownAfterMilliseconds);                      Assert.AreEqual(1913' r.InfoRefresh);                      Assert.AreEqual("master"' r.RoleReported);                      Assert.AreEqual(1838781' r.RoleReportedTime);                      Assert.AreEqual(0' r.ConfigEpoch);                      Assert.AreEqual(2' r.NumSlaves);                      Assert.AreEqual(1' r.NumOtherSentinels);                      Assert.AreEqual(2' r.Quorum);                      Assert.AreEqual(180000' r.FailoverTimeout);                      Assert.AreEqual(1' r.ParallelSyncs);                      Assert.AreEqual(Compile("SENTINEL"' "master"' "mymaster")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,SlavesTest,The following statement contains a magic number: TestSentinel(                  "*1\r\n" + Compile(                      "name"' "127.0.0.1:7379"'                      "ip"' "127.0.0.1"'                      "port"' "7379"'                      "runid"' "0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"'                      "flags"' "slave"'                      "pending-commands"' "0"'                      "last-ping-sent"' "0"'                      "last-ok-ping-reply"' "50"'                      "last-ping-reply"' "50"'                      "down-after-milliseconds"' "1000"'                      "info-refresh"' "9036"'                      "role-reported"' "slave"'                      "role-reported-time"' "4396444"'                      "master-link-down-time"' "0"'                      "master-link-status"' "ok"'                      "master-host"' "127.0.0.1"'                      "master-port"' "6379"'                      "slave-priority"' "100"'                      "slave-repl-offset"' "509813")'                  x => x.Slaves("mymaster")'                  x => x.SlavesAsync("mymaster")'                  (m' r) =>                  {                      Assert.AreEqual(1' r.Length);                      Assert.AreEqual("127.0.0.1:7379"' r[0].Name);                      Assert.AreEqual("127.0.0.1"' r[0].Ip);                      Assert.AreEqual(7379' r[0].Port);                      Assert.AreEqual("0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"' r[0].RunId);                      Assert.AreEqual(1' r[0].Flags.Length);                      Assert.AreEqual("slave"' r[0].Flags[0]);                      Assert.AreEqual(0' r[0].PendingCommands);                      Assert.AreEqual(50' r[0].LastPingReply);                      Assert.AreEqual(50' r[0].LastOkPingReply);                      Assert.AreEqual(1000' r[0].DownAfterMilliseconds);                      Assert.AreEqual(9036' r[0].InfoRefresh);                      Assert.AreEqual("slave"' r[0].RoleReported);                      Assert.AreEqual(4396444' r[0].RoleReportedTime);                      Assert.AreEqual(0' r[0].MasterLinkDownTime);                      Assert.AreEqual("ok"' r[0].MasterLinkStatus);                      Assert.AreEqual("127.0.0.1"' r[0].MasterHost);                      Assert.AreEqual(6379' r[0].MasterPort);                      Assert.AreEqual(100' r[0].SlavePriority);                      Assert.AreEqual(509813' r[0].SlaveReplOffset);                      Assert.AreEqual(Compile("SENTINEL"' "slaves"' "mymaster")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,SlavesTest,The following statement contains a magic number: TestSentinel(                  "*1\r\n" + Compile(                      "name"' "127.0.0.1:7379"'                      "ip"' "127.0.0.1"'                      "port"' "7379"'                      "runid"' "0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"'                      "flags"' "slave"'                      "pending-commands"' "0"'                      "last-ping-sent"' "0"'                      "last-ok-ping-reply"' "50"'                      "last-ping-reply"' "50"'                      "down-after-milliseconds"' "1000"'                      "info-refresh"' "9036"'                      "role-reported"' "slave"'                      "role-reported-time"' "4396444"'                      "master-link-down-time"' "0"'                      "master-link-status"' "ok"'                      "master-host"' "127.0.0.1"'                      "master-port"' "6379"'                      "slave-priority"' "100"'                      "slave-repl-offset"' "509813")'                  x => x.Slaves("mymaster")'                  x => x.SlavesAsync("mymaster")'                  (m' r) =>                  {                      Assert.AreEqual(1' r.Length);                      Assert.AreEqual("127.0.0.1:7379"' r[0].Name);                      Assert.AreEqual("127.0.0.1"' r[0].Ip);                      Assert.AreEqual(7379' r[0].Port);                      Assert.AreEqual("0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"' r[0].RunId);                      Assert.AreEqual(1' r[0].Flags.Length);                      Assert.AreEqual("slave"' r[0].Flags[0]);                      Assert.AreEqual(0' r[0].PendingCommands);                      Assert.AreEqual(50' r[0].LastPingReply);                      Assert.AreEqual(50' r[0].LastOkPingReply);                      Assert.AreEqual(1000' r[0].DownAfterMilliseconds);                      Assert.AreEqual(9036' r[0].InfoRefresh);                      Assert.AreEqual("slave"' r[0].RoleReported);                      Assert.AreEqual(4396444' r[0].RoleReportedTime);                      Assert.AreEqual(0' r[0].MasterLinkDownTime);                      Assert.AreEqual("ok"' r[0].MasterLinkStatus);                      Assert.AreEqual("127.0.0.1"' r[0].MasterHost);                      Assert.AreEqual(6379' r[0].MasterPort);                      Assert.AreEqual(100' r[0].SlavePriority);                      Assert.AreEqual(509813' r[0].SlaveReplOffset);                      Assert.AreEqual(Compile("SENTINEL"' "slaves"' "mymaster")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,SlavesTest,The following statement contains a magic number: TestSentinel(                  "*1\r\n" + Compile(                      "name"' "127.0.0.1:7379"'                      "ip"' "127.0.0.1"'                      "port"' "7379"'                      "runid"' "0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"'                      "flags"' "slave"'                      "pending-commands"' "0"'                      "last-ping-sent"' "0"'                      "last-ok-ping-reply"' "50"'                      "last-ping-reply"' "50"'                      "down-after-milliseconds"' "1000"'                      "info-refresh"' "9036"'                      "role-reported"' "slave"'                      "role-reported-time"' "4396444"'                      "master-link-down-time"' "0"'                      "master-link-status"' "ok"'                      "master-host"' "127.0.0.1"'                      "master-port"' "6379"'                      "slave-priority"' "100"'                      "slave-repl-offset"' "509813")'                  x => x.Slaves("mymaster")'                  x => x.SlavesAsync("mymaster")'                  (m' r) =>                  {                      Assert.AreEqual(1' r.Length);                      Assert.AreEqual("127.0.0.1:7379"' r[0].Name);                      Assert.AreEqual("127.0.0.1"' r[0].Ip);                      Assert.AreEqual(7379' r[0].Port);                      Assert.AreEqual("0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"' r[0].RunId);                      Assert.AreEqual(1' r[0].Flags.Length);                      Assert.AreEqual("slave"' r[0].Flags[0]);                      Assert.AreEqual(0' r[0].PendingCommands);                      Assert.AreEqual(50' r[0].LastPingReply);                      Assert.AreEqual(50' r[0].LastOkPingReply);                      Assert.AreEqual(1000' r[0].DownAfterMilliseconds);                      Assert.AreEqual(9036' r[0].InfoRefresh);                      Assert.AreEqual("slave"' r[0].RoleReported);                      Assert.AreEqual(4396444' r[0].RoleReportedTime);                      Assert.AreEqual(0' r[0].MasterLinkDownTime);                      Assert.AreEqual("ok"' r[0].MasterLinkStatus);                      Assert.AreEqual("127.0.0.1"' r[0].MasterHost);                      Assert.AreEqual(6379' r[0].MasterPort);                      Assert.AreEqual(100' r[0].SlavePriority);                      Assert.AreEqual(509813' r[0].SlaveReplOffset);                      Assert.AreEqual(Compile("SENTINEL"' "slaves"' "mymaster")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,SlavesTest,The following statement contains a magic number: TestSentinel(                  "*1\r\n" + Compile(                      "name"' "127.0.0.1:7379"'                      "ip"' "127.0.0.1"'                      "port"' "7379"'                      "runid"' "0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"'                      "flags"' "slave"'                      "pending-commands"' "0"'                      "last-ping-sent"' "0"'                      "last-ok-ping-reply"' "50"'                      "last-ping-reply"' "50"'                      "down-after-milliseconds"' "1000"'                      "info-refresh"' "9036"'                      "role-reported"' "slave"'                      "role-reported-time"' "4396444"'                      "master-link-down-time"' "0"'                      "master-link-status"' "ok"'                      "master-host"' "127.0.0.1"'                      "master-port"' "6379"'                      "slave-priority"' "100"'                      "slave-repl-offset"' "509813")'                  x => x.Slaves("mymaster")'                  x => x.SlavesAsync("mymaster")'                  (m' r) =>                  {                      Assert.AreEqual(1' r.Length);                      Assert.AreEqual("127.0.0.1:7379"' r[0].Name);                      Assert.AreEqual("127.0.0.1"' r[0].Ip);                      Assert.AreEqual(7379' r[0].Port);                      Assert.AreEqual("0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"' r[0].RunId);                      Assert.AreEqual(1' r[0].Flags.Length);                      Assert.AreEqual("slave"' r[0].Flags[0]);                      Assert.AreEqual(0' r[0].PendingCommands);                      Assert.AreEqual(50' r[0].LastPingReply);                      Assert.AreEqual(50' r[0].LastOkPingReply);                      Assert.AreEqual(1000' r[0].DownAfterMilliseconds);                      Assert.AreEqual(9036' r[0].InfoRefresh);                      Assert.AreEqual("slave"' r[0].RoleReported);                      Assert.AreEqual(4396444' r[0].RoleReportedTime);                      Assert.AreEqual(0' r[0].MasterLinkDownTime);                      Assert.AreEqual("ok"' r[0].MasterLinkStatus);                      Assert.AreEqual("127.0.0.1"' r[0].MasterHost);                      Assert.AreEqual(6379' r[0].MasterPort);                      Assert.AreEqual(100' r[0].SlavePriority);                      Assert.AreEqual(509813' r[0].SlaveReplOffset);                      Assert.AreEqual(Compile("SENTINEL"' "slaves"' "mymaster")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,SlavesTest,The following statement contains a magic number: TestSentinel(                  "*1\r\n" + Compile(                      "name"' "127.0.0.1:7379"'                      "ip"' "127.0.0.1"'                      "port"' "7379"'                      "runid"' "0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"'                      "flags"' "slave"'                      "pending-commands"' "0"'                      "last-ping-sent"' "0"'                      "last-ok-ping-reply"' "50"'                      "last-ping-reply"' "50"'                      "down-after-milliseconds"' "1000"'                      "info-refresh"' "9036"'                      "role-reported"' "slave"'                      "role-reported-time"' "4396444"'                      "master-link-down-time"' "0"'                      "master-link-status"' "ok"'                      "master-host"' "127.0.0.1"'                      "master-port"' "6379"'                      "slave-priority"' "100"'                      "slave-repl-offset"' "509813")'                  x => x.Slaves("mymaster")'                  x => x.SlavesAsync("mymaster")'                  (m' r) =>                  {                      Assert.AreEqual(1' r.Length);                      Assert.AreEqual("127.0.0.1:7379"' r[0].Name);                      Assert.AreEqual("127.0.0.1"' r[0].Ip);                      Assert.AreEqual(7379' r[0].Port);                      Assert.AreEqual("0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"' r[0].RunId);                      Assert.AreEqual(1' r[0].Flags.Length);                      Assert.AreEqual("slave"' r[0].Flags[0]);                      Assert.AreEqual(0' r[0].PendingCommands);                      Assert.AreEqual(50' r[0].LastPingReply);                      Assert.AreEqual(50' r[0].LastOkPingReply);                      Assert.AreEqual(1000' r[0].DownAfterMilliseconds);                      Assert.AreEqual(9036' r[0].InfoRefresh);                      Assert.AreEqual("slave"' r[0].RoleReported);                      Assert.AreEqual(4396444' r[0].RoleReportedTime);                      Assert.AreEqual(0' r[0].MasterLinkDownTime);                      Assert.AreEqual("ok"' r[0].MasterLinkStatus);                      Assert.AreEqual("127.0.0.1"' r[0].MasterHost);                      Assert.AreEqual(6379' r[0].MasterPort);                      Assert.AreEqual(100' r[0].SlavePriority);                      Assert.AreEqual(509813' r[0].SlaveReplOffset);                      Assert.AreEqual(Compile("SENTINEL"' "slaves"' "mymaster")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,SlavesTest,The following statement contains a magic number: TestSentinel(                  "*1\r\n" + Compile(                      "name"' "127.0.0.1:7379"'                      "ip"' "127.0.0.1"'                      "port"' "7379"'                      "runid"' "0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"'                      "flags"' "slave"'                      "pending-commands"' "0"'                      "last-ping-sent"' "0"'                      "last-ok-ping-reply"' "50"'                      "last-ping-reply"' "50"'                      "down-after-milliseconds"' "1000"'                      "info-refresh"' "9036"'                      "role-reported"' "slave"'                      "role-reported-time"' "4396444"'                      "master-link-down-time"' "0"'                      "master-link-status"' "ok"'                      "master-host"' "127.0.0.1"'                      "master-port"' "6379"'                      "slave-priority"' "100"'                      "slave-repl-offset"' "509813")'                  x => x.Slaves("mymaster")'                  x => x.SlavesAsync("mymaster")'                  (m' r) =>                  {                      Assert.AreEqual(1' r.Length);                      Assert.AreEqual("127.0.0.1:7379"' r[0].Name);                      Assert.AreEqual("127.0.0.1"' r[0].Ip);                      Assert.AreEqual(7379' r[0].Port);                      Assert.AreEqual("0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"' r[0].RunId);                      Assert.AreEqual(1' r[0].Flags.Length);                      Assert.AreEqual("slave"' r[0].Flags[0]);                      Assert.AreEqual(0' r[0].PendingCommands);                      Assert.AreEqual(50' r[0].LastPingReply);                      Assert.AreEqual(50' r[0].LastOkPingReply);                      Assert.AreEqual(1000' r[0].DownAfterMilliseconds);                      Assert.AreEqual(9036' r[0].InfoRefresh);                      Assert.AreEqual("slave"' r[0].RoleReported);                      Assert.AreEqual(4396444' r[0].RoleReportedTime);                      Assert.AreEqual(0' r[0].MasterLinkDownTime);                      Assert.AreEqual("ok"' r[0].MasterLinkStatus);                      Assert.AreEqual("127.0.0.1"' r[0].MasterHost);                      Assert.AreEqual(6379' r[0].MasterPort);                      Assert.AreEqual(100' r[0].SlavePriority);                      Assert.AreEqual(509813' r[0].SlaveReplOffset);                      Assert.AreEqual(Compile("SENTINEL"' "slaves"' "mymaster")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,SlavesTest,The following statement contains a magic number: TestSentinel(                  "*1\r\n" + Compile(                      "name"' "127.0.0.1:7379"'                      "ip"' "127.0.0.1"'                      "port"' "7379"'                      "runid"' "0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"'                      "flags"' "slave"'                      "pending-commands"' "0"'                      "last-ping-sent"' "0"'                      "last-ok-ping-reply"' "50"'                      "last-ping-reply"' "50"'                      "down-after-milliseconds"' "1000"'                      "info-refresh"' "9036"'                      "role-reported"' "slave"'                      "role-reported-time"' "4396444"'                      "master-link-down-time"' "0"'                      "master-link-status"' "ok"'                      "master-host"' "127.0.0.1"'                      "master-port"' "6379"'                      "slave-priority"' "100"'                      "slave-repl-offset"' "509813")'                  x => x.Slaves("mymaster")'                  x => x.SlavesAsync("mymaster")'                  (m' r) =>                  {                      Assert.AreEqual(1' r.Length);                      Assert.AreEqual("127.0.0.1:7379"' r[0].Name);                      Assert.AreEqual("127.0.0.1"' r[0].Ip);                      Assert.AreEqual(7379' r[0].Port);                      Assert.AreEqual("0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"' r[0].RunId);                      Assert.AreEqual(1' r[0].Flags.Length);                      Assert.AreEqual("slave"' r[0].Flags[0]);                      Assert.AreEqual(0' r[0].PendingCommands);                      Assert.AreEqual(50' r[0].LastPingReply);                      Assert.AreEqual(50' r[0].LastOkPingReply);                      Assert.AreEqual(1000' r[0].DownAfterMilliseconds);                      Assert.AreEqual(9036' r[0].InfoRefresh);                      Assert.AreEqual("slave"' r[0].RoleReported);                      Assert.AreEqual(4396444' r[0].RoleReportedTime);                      Assert.AreEqual(0' r[0].MasterLinkDownTime);                      Assert.AreEqual("ok"' r[0].MasterLinkStatus);                      Assert.AreEqual("127.0.0.1"' r[0].MasterHost);                      Assert.AreEqual(6379' r[0].MasterPort);                      Assert.AreEqual(100' r[0].SlavePriority);                      Assert.AreEqual(509813' r[0].SlaveReplOffset);                      Assert.AreEqual(Compile("SENTINEL"' "slaves"' "mymaster")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,SlavesTest,The following statement contains a magic number: TestSentinel(                  "*1\r\n" + Compile(                      "name"' "127.0.0.1:7379"'                      "ip"' "127.0.0.1"'                      "port"' "7379"'                      "runid"' "0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"'                      "flags"' "slave"'                      "pending-commands"' "0"'                      "last-ping-sent"' "0"'                      "last-ok-ping-reply"' "50"'                      "last-ping-reply"' "50"'                      "down-after-milliseconds"' "1000"'                      "info-refresh"' "9036"'                      "role-reported"' "slave"'                      "role-reported-time"' "4396444"'                      "master-link-down-time"' "0"'                      "master-link-status"' "ok"'                      "master-host"' "127.0.0.1"'                      "master-port"' "6379"'                      "slave-priority"' "100"'                      "slave-repl-offset"' "509813")'                  x => x.Slaves("mymaster")'                  x => x.SlavesAsync("mymaster")'                  (m' r) =>                  {                      Assert.AreEqual(1' r.Length);                      Assert.AreEqual("127.0.0.1:7379"' r[0].Name);                      Assert.AreEqual("127.0.0.1"' r[0].Ip);                      Assert.AreEqual(7379' r[0].Port);                      Assert.AreEqual("0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"' r[0].RunId);                      Assert.AreEqual(1' r[0].Flags.Length);                      Assert.AreEqual("slave"' r[0].Flags[0]);                      Assert.AreEqual(0' r[0].PendingCommands);                      Assert.AreEqual(50' r[0].LastPingReply);                      Assert.AreEqual(50' r[0].LastOkPingReply);                      Assert.AreEqual(1000' r[0].DownAfterMilliseconds);                      Assert.AreEqual(9036' r[0].InfoRefresh);                      Assert.AreEqual("slave"' r[0].RoleReported);                      Assert.AreEqual(4396444' r[0].RoleReportedTime);                      Assert.AreEqual(0' r[0].MasterLinkDownTime);                      Assert.AreEqual("ok"' r[0].MasterLinkStatus);                      Assert.AreEqual("127.0.0.1"' r[0].MasterHost);                      Assert.AreEqual(6379' r[0].MasterPort);                      Assert.AreEqual(100' r[0].SlavePriority);                      Assert.AreEqual(509813' r[0].SlaveReplOffset);                      Assert.AreEqual(Compile("SENTINEL"' "slaves"' "mymaster")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,SlavesTest,The following statement contains a magic number: TestSentinel(                  "*1\r\n" + Compile(                      "name"' "127.0.0.1:7379"'                      "ip"' "127.0.0.1"'                      "port"' "7379"'                      "runid"' "0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"'                      "flags"' "slave"'                      "pending-commands"' "0"'                      "last-ping-sent"' "0"'                      "last-ok-ping-reply"' "50"'                      "last-ping-reply"' "50"'                      "down-after-milliseconds"' "1000"'                      "info-refresh"' "9036"'                      "role-reported"' "slave"'                      "role-reported-time"' "4396444"'                      "master-link-down-time"' "0"'                      "master-link-status"' "ok"'                      "master-host"' "127.0.0.1"'                      "master-port"' "6379"'                      "slave-priority"' "100"'                      "slave-repl-offset"' "509813")'                  x => x.Slaves("mymaster")'                  x => x.SlavesAsync("mymaster")'                  (m' r) =>                  {                      Assert.AreEqual(1' r.Length);                      Assert.AreEqual("127.0.0.1:7379"' r[0].Name);                      Assert.AreEqual("127.0.0.1"' r[0].Ip);                      Assert.AreEqual(7379' r[0].Port);                      Assert.AreEqual("0e4c05a7b29fdb5dffa054f151bca9ed6a113c38"' r[0].RunId);                      Assert.AreEqual(1' r[0].Flags.Length);                      Assert.AreEqual("slave"' r[0].Flags[0]);                      Assert.AreEqual(0' r[0].PendingCommands);                      Assert.AreEqual(50' r[0].LastPingReply);                      Assert.AreEqual(50' r[0].LastOkPingReply);                      Assert.AreEqual(1000' r[0].DownAfterMilliseconds);                      Assert.AreEqual(9036' r[0].InfoRefresh);                      Assert.AreEqual("slave"' r[0].RoleReported);                      Assert.AreEqual(4396444' r[0].RoleReportedTime);                      Assert.AreEqual(0' r[0].MasterLinkDownTime);                      Assert.AreEqual("ok"' r[0].MasterLinkStatus);                      Assert.AreEqual("127.0.0.1"' r[0].MasterHost);                      Assert.AreEqual(6379' r[0].MasterPort);                      Assert.AreEqual(100' r[0].SlavePriority);                      Assert.AreEqual(509813' r[0].SlaveReplOffset);                      Assert.AreEqual(Compile("SENTINEL"' "slaves"' "mymaster")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,GetMasterAddrByNameTest,The following statement contains a magic number: TestSentinel(                  Compile("127.0.0.1"' "6379")'                  x => x.GetMasterAddrByName("mymaster")'                  x => x.GetMasterAddrByNameAsync("mymaster")'                  (m' r) =>                  {                      Assert.AreEqual("127.0.0.1"' r.Item1);                      Assert.AreEqual(6379' r.Item2);                      Assert.AreEqual(Compile("SENTINEL"' "get-master-addr-by-name"' "mymaster")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,IsMasterDownByAddrTest,The following statement contains a magic number: TestSentinel(                  Compile(0' "*"' 0)'                  x => x.IsMasterDownByAddr("127.0.0.1"' 6379' 123' "abc")'                  x => x.IsMasterDownByAddrAsync("127.0.0.1"' 6379' 123' "abc")'                  (m' r) =>                  {                      Assert.AreEqual(0' r.DownState);                      Assert.AreEqual("*"' r.Leader);                      Assert.AreEqual(0' r.VoteEpoch);                      Assert.AreEqual(Compile("SENTINEL"' "is-master-down-by-addr"' "127.0.0.1"' "6379"' "123"' "abc")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,IsMasterDownByAddrTest,The following statement contains a magic number: TestSentinel(                  Compile(0' "*"' 0)'                  x => x.IsMasterDownByAddr("127.0.0.1"' 6379' 123' "abc")'                  x => x.IsMasterDownByAddrAsync("127.0.0.1"' 6379' 123' "abc")'                  (m' r) =>                  {                      Assert.AreEqual(0' r.DownState);                      Assert.AreEqual("*"' r.Leader);                      Assert.AreEqual(0' r.VoteEpoch);                      Assert.AreEqual(Compile("SENTINEL"' "is-master-down-by-addr"' "127.0.0.1"' "6379"' "123"' "abc")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,IsMasterDownByAddrTest,The following statement contains a magic number: TestSentinel(                  Compile(0' "*"' 0)'                  x => x.IsMasterDownByAddr("127.0.0.1"' 6379' 123' "abc")'                  x => x.IsMasterDownByAddrAsync("127.0.0.1"' 6379' 123' "abc")'                  (m' r) =>                  {                      Assert.AreEqual(0' r.DownState);                      Assert.AreEqual("*"' r.Leader);                      Assert.AreEqual(0' r.VoteEpoch);                      Assert.AreEqual(Compile("SENTINEL"' "is-master-down-by-addr"' "127.0.0.1"' "6379"' "123"' "abc")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,IsMasterDownByAddrTest,The following statement contains a magic number: TestSentinel(                  Compile(0' "*"' 0)'                  x => x.IsMasterDownByAddr("127.0.0.1"' 6379' 123' "abc")'                  x => x.IsMasterDownByAddrAsync("127.0.0.1"' 6379' 123' "abc")'                  (m' r) =>                  {                      Assert.AreEqual(0' r.DownState);                      Assert.AreEqual("*"' r.Leader);                      Assert.AreEqual(0' r.VoteEpoch);                      Assert.AreEqual(Compile("SENTINEL"' "is-master-down-by-addr"' "127.0.0.1"' "6379"' "123"' "abc")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,ResetTest,The following statement contains a magic number: TestSentinel(                  ":10\r\n"'                  x => x.Reset("pattern*")'                  x => x.ResetAsync("pattern*")'                  (m' r) =>                  {                      Assert.AreEqual(10' r);                      Assert.AreEqual(Compile("SENTINEL"' "reset"' "pattern*")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,MonitorTest,The following statement contains a magic number: TestSentinel(                  "+OK\r\n"'                  x => x.Monitor("mymaster"' 6379' 2)'                  x => x.MonitorAsync("mymaster"' 6379' 2)'                  (m' r) =>                  {                      Assert.AreEqual("OK"' r);                      Assert.AreEqual(Compile("SENTINEL"' "MONITOR"' "mymaster"' "6379"' "2")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,MonitorTest,The following statement contains a magic number: TestSentinel(                  "+OK\r\n"'                  x => x.Monitor("mymaster"' 6379' 2)'                  x => x.MonitorAsync("mymaster"' 6379' 2)'                  (m' r) =>                  {                      Assert.AreEqual("OK"' r);                      Assert.AreEqual(Compile("SENTINEL"' "MONITOR"' "mymaster"' "6379"' "2")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,MonitorTest,The following statement contains a magic number: TestSentinel(                  "+OK\r\n"'                  x => x.Monitor("mymaster"' 6379' 2)'                  x => x.MonitorAsync("mymaster"' 6379' 2)'                  (m' r) =>                  {                      Assert.AreEqual("OK"' r);                      Assert.AreEqual(Compile("SENTINEL"' "MONITOR"' "mymaster"' "6379"' "2")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,SentinelTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SentinelTests.cs,MonitorTest,The following statement contains a magic number: TestSentinel(                  "+OK\r\n"'                  x => x.Monitor("mymaster"' 6379' 2)'                  x => x.MonitorAsync("mymaster"' 6379' 2)'                  (m' r) =>                  {                      Assert.AreEqual("OK"' r);                      Assert.AreEqual(Compile("SENTINEL"' "MONITOR"' "mymaster"' "6379"' "2")' m.GetMessage());                  });
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,ClientKillTest,The following statement contains a magic number: Assert.AreEqual("OK"' redis.ClientKill("1.1.1.1"' 9999));
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,ClientPauseTest,The following statement contains a magic number: Assert.AreEqual("OK"' redis.ClientPause(1000));
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,ClientPauseTest,The following statement contains a magic number: Assert.AreEqual("OK"' redis.ClientPause(TimeSpan.FromMilliseconds(1000)));
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,ConfigGetTest,The following statement contains a magic number: Assert.AreEqual(2' response.Length);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,DbSizeTest,The following statement contains a magic number: Assert.AreEqual(5' redis.DbSize());
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,LastSaveTest,The following statement contains a magic number: Assert.AreEqual(new DateTime(2014' 7' 8' 23' 11' 04' DateTimeKind.Utc)' redis.LastSave());
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,LastSaveTest,The following statement contains a magic number: Assert.AreEqual(new DateTime(2014' 7' 8' 23' 11' 04' DateTimeKind.Utc)' redis.LastSave());
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,LastSaveTest,The following statement contains a magic number: Assert.AreEqual(new DateTime(2014' 7' 8' 23' 11' 04' DateTimeKind.Utc)' redis.LastSave());
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,LastSaveTest,The following statement contains a magic number: Assert.AreEqual(new DateTime(2014' 7' 8' 23' 11' 04' DateTimeKind.Utc)' redis.LastSave());
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,LastSaveTest,The following statement contains a magic number: Assert.AreEqual(new DateTime(2014' 7' 8' 23' 11' 04' DateTimeKind.Utc)' redis.LastSave());
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,LastSaveTest,The following statement contains a magic number: Assert.AreEqual(new DateTime(2014' 7' 8' 23' 11' 04' DateTimeKind.Utc)' redis.LastSave());
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,RoleTest,The following statement contains a magic number: Assert.AreEqual(3129659' response1.ReplicationOffset);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,RoleTest,The following statement contains a magic number: Assert.AreEqual(2' response1.Slaves.Length);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,RoleTest,The following statement contains a magic number: Assert.AreEqual(9001' response1.Slaves[0].Item2);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,RoleTest,The following statement contains a magic number: Assert.AreEqual(3129242' response1.Slaves[0].Item3);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,RoleTest,The following statement contains a magic number: Assert.AreEqual(9002' response1.Slaves[1].Item2);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,RoleTest,The following statement contains a magic number: Assert.AreEqual(3129543' response1.Slaves[1].Item3);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,RoleTest,The following statement contains a magic number: Assert.AreEqual(9000' response2.MasterPort);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,RoleTest,The following statement contains a magic number: Assert.AreEqual(3167038' response2.DataReceived);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,RoleTest,The following statement contains a magic number: Assert.AreEqual(4' response3.Masters.Length);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,RoleTest,The following statement contains a magic number: Assert.AreEqual("stats-master"' response3.Masters[2]);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,RoleTest,The following statement contains a magic number: Assert.AreEqual("metadata-master"' response3.Masters[3]);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,SlaveOfTest,The following statement contains a magic number: Assert.AreEqual("OK"' redis.SlaveOf("1.1.1.1"' 9999));
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,SlowLogGetTest,The following statement contains a magic number: Assert.AreEqual(2' response.Length);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,SlowLogGetTest,The following statement contains a magic number: Assert.AreEqual(14' response[0].Id);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,SlowLogGetTest,The following statement contains a magic number: Assert.AreEqual(new DateTime(2011' 6' 30' 15' 37' 1' DateTimeKind.Utc)' response[0].Date);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,SlowLogGetTest,The following statement contains a magic number: Assert.AreEqual(new DateTime(2011' 6' 30' 15' 37' 1' DateTimeKind.Utc)' response[0].Date);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,SlowLogGetTest,The following statement contains a magic number: Assert.AreEqual(new DateTime(2011' 6' 30' 15' 37' 1' DateTimeKind.Utc)' response[0].Date);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,SlowLogGetTest,The following statement contains a magic number: Assert.AreEqual(new DateTime(2011' 6' 30' 15' 37' 1' DateTimeKind.Utc)' response[0].Date);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,SlowLogGetTest,The following statement contains a magic number: Assert.AreEqual(new DateTime(2011' 6' 30' 15' 37' 1' DateTimeKind.Utc)' response[0].Date);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,SlowLogGetTest,The following statement contains a magic number: Assert.AreEqual(15' RedisDate.Micro.ToMicroseconds(response[0].Latency));
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,SlowLogGetTest,The following statement contains a magic number: Assert.AreEqual(13' response[1].Id);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,SlowLogGetTest,The following statement contains a magic number: Assert.AreEqual(new DateTime(2011' 6' 30' 15' 35' 28' DateTimeKind.Utc)' response[1].Date);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,SlowLogGetTest,The following statement contains a magic number: Assert.AreEqual(new DateTime(2011' 6' 30' 15' 35' 28' DateTimeKind.Utc)' response[1].Date);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,SlowLogGetTest,The following statement contains a magic number: Assert.AreEqual(new DateTime(2011' 6' 30' 15' 35' 28' DateTimeKind.Utc)' response[1].Date);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,SlowLogGetTest,The following statement contains a magic number: Assert.AreEqual(new DateTime(2011' 6' 30' 15' 35' 28' DateTimeKind.Utc)' response[1].Date);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,SlowLogGetTest,The following statement contains a magic number: Assert.AreEqual(new DateTime(2011' 6' 30' 15' 35' 28' DateTimeKind.Utc)' response[1].Date);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,SlowLogGetTest,The following statement contains a magic number: Assert.AreEqual(new DateTime(2011' 6' 30' 15' 35' 28' DateTimeKind.Utc)' response[1].Date);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,SlowLogGetTest,The following statement contains a magic number: Assert.AreEqual(30' RedisDate.Micro.ToMicroseconds(response[1].Latency));
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,SlowLogGetTest,The following statement contains a magic number: Assert.AreEqual(3' response[1].Arguments.Length);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,SlowLogGetTest,The following statement contains a magic number: Assert.AreEqual("100"' response[1].Arguments[2]);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,SlowLogGetTest,The following statement contains a magic number: redis.SlowLogGet(5);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,SlowLogLenTest,The following statement contains a magic number: Assert.AreEqual(5' redis.SlowLogLen());
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,SyncTest,The following statement contains a magic number: Assert.AreEqual(3' response.Length);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,SyncTest,The following statement contains a magic number: Assert.AreEqual(0x3' response[2]);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,TimeTest,The following statement contains a magic number: Assert.AreEqual(2014' response.Year);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,TimeTest,The following statement contains a magic number: Assert.AreEqual(7' response.Month);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,TimeTest,The following statement contains a magic number: Assert.AreEqual(10' response.Day);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,TimeTest,The following statement contains a magic number: Assert.AreEqual(16' response.Hour);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,TimeTest,The following statement contains a magic number: Assert.AreEqual(15' response.Minute);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,TimeTest,The following statement contains a magic number: Assert.AreEqual(52' response.Second);
Magic Number,CSRedis.Tests,ServerTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\ServerTests.cs,TimeTest,The following statement contains a magic number: Assert.AreEqual(438' response.Millisecond);
Magic Number,CSRedis.Tests,SetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SetTests.cs,TestSAdd,The following statement contains a magic number: Assert.AreEqual(3' redis.SAdd("test"' "test1"));
Magic Number,CSRedis.Tests,SetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SetTests.cs,TestSCard,The following statement contains a magic number: Assert.AreEqual(3' redis.SCard("test"));
Magic Number,CSRedis.Tests,SetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SetTests.cs,TestSDiff,The following statement contains a magic number: Assert.AreEqual(2' response.Length);
Magic Number,CSRedis.Tests,SetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SetTests.cs,TestSDiffStore,The following statement contains a magic number: Assert.AreEqual(3' redis.SDiffStore("destination"' "key1"' "key2"));
Magic Number,CSRedis.Tests,SetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SetTests.cs,TestInter,The following statement contains a magic number: Assert.AreEqual(2' response.Length);
Magic Number,CSRedis.Tests,SetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SetTests.cs,TestSInterStore,The following statement contains a magic number: Assert.AreEqual(3' redis.SInterStore("destination"' "key1"' "key2"));
Magic Number,CSRedis.Tests,SetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SetTests.cs,TestSMembers,The following statement contains a magic number: Assert.AreEqual(2' response.Length);
Magic Number,CSRedis.Tests,SetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SetTests.cs,TestSRandMember,The following statement contains a magic number: var response = redis.SRandMember("test"' 2);
Magic Number,CSRedis.Tests,SetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SetTests.cs,TestSRandMember,The following statement contains a magic number: Assert.AreEqual(2' response.Length);
Magic Number,CSRedis.Tests,SetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SetTests.cs,TestSRem,The following statement contains a magic number: Assert.AreEqual(2' redis.SRem("test"' "test1"' "test2"));
Magic Number,CSRedis.Tests,SetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SetTests.cs,TestSScan,The following statement contains a magic number: Assert.AreEqual(23' response1.Cursor);
Magic Number,CSRedis.Tests,SetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SetTests.cs,TestSScan,The following statement contains a magic number: Assert.AreEqual(2' response1.Items.Length);
Magic Number,CSRedis.Tests,SetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SetTests.cs,TestSScan,The following statement contains a magic number: var response3 = redis.SScan("test"' 0' count: 5);
Magic Number,CSRedis.Tests,SetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SetTests.cs,TestSScan,The following statement contains a magic number: var response4 = redis.SScan("test"' 0' "*"' 5);
Magic Number,CSRedis.Tests,SetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SetTests.cs,TestSUnion,The following statement contains a magic number: Assert.AreEqual(2' response.Length);
Magic Number,CSRedis.Tests,SetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SetTests.cs,TestSUnionStore,The following statement contains a magic number: Assert.AreEqual(3' redis.SUnionStore("destination"' "key1"' "key2"));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZAdd_Array,The following statement contains a magic number: Assert.AreEqual(2' redis.ZAdd("test"' "1.1"' "test1"' "2.2"' "test2"));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZAdd_Tuple,The following statement contains a magic number: Assert.AreEqual(2' redis.ZAdd("test"' Tuple.Create(1.1' "test1")' Tuple.Create(2.2' "test2")));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZAdd_Tuple,The following statement contains a magic number: Assert.AreEqual(2' redis.ZAdd("test"' Tuple.Create(1.1' "test1")' Tuple.Create(2.2' "test2")));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZAdd_Tuple,The following statement contains a magic number: Assert.AreEqual(2' redis.ZAdd("test"' Tuple.Create(1.1' "test1")' Tuple.Create(2.2' "test2")));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZCard,The following statement contains a magic number: Assert.AreEqual(2' redis.ZCard("test"));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZCount,The following statement contains a magic number: Assert.AreEqual(2' redis.ZCount("test"' 1' 3));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZCount,The following statement contains a magic number: Assert.AreEqual(2' redis.ZCount("test"' 1' 3));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZCount,The following statement contains a magic number: Assert.AreEqual(2' redis.ZCount("test"' Double.NegativeInfinity' Double.PositiveInfinity));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZCount,The following statement contains a magic number: Assert.AreEqual(2' redis.ZCount("test"' 1' 3' exclusiveMin: true' exclusiveMax: true));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZCount,The following statement contains a magic number: Assert.AreEqual(2' redis.ZCount("test"' 1' 3' exclusiveMin: true' exclusiveMax: true));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZCount,The following statement contains a magic number: Assert.AreEqual(2' redis.ZCount("test"' "-inf"' "+inf"));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZCount,The following statement contains a magic number: Assert.AreEqual(2' redis.ZCount("test"' "(1"' "(3"));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZIncrby,The following statement contains a magic number: Assert.AreEqual(3.14' redis.ZIncrBy("test"' 1.5' "test1"));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZIncrby,The following statement contains a magic number: Assert.AreEqual(3.14' redis.ZIncrBy("test"' 1.5' "test1"));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZInterStore,The following statement contains a magic number: Assert.AreEqual(2' redis.ZInterStore("destination"' "key1"' "key2" ));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZInterStore,The following statement contains a magic number: Assert.AreEqual(2' redis.ZInterStore("destination"' weights: new[] { 1D' 2D }' keys: new[] { "key1"' "key2" }));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZInterStore,The following statement contains a magic number: Assert.AreEqual(2' redis.ZInterStore("destination"' weights: new[] { 1D' 2D }' keys: new[] { "key1"' "key2" }));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZInterStore,The following statement contains a magic number: Assert.AreEqual(2' redis.ZInterStore("destination"' weights: new[] { 1D' 2D }' aggregate:RedisAggregate.Max' keys: new[] { "key1"' "key2" }));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZInterStore,The following statement contains a magic number: Assert.AreEqual(2' redis.ZInterStore("destination"' weights: new[] { 1D' 2D }' aggregate:RedisAggregate.Max' keys: new[] { "key1"' "key2" }));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZInterStore,The following statement contains a magic number: Assert.AreEqual(2' redis.ZInterStore("destination"' weights: new[] { 1D' 2D }' aggregate: RedisAggregate.Min' keys: new[] { "key1"' "key2" }));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZInterStore,The following statement contains a magic number: Assert.AreEqual(2' redis.ZInterStore("destination"' weights: new[] { 1D' 2D }' aggregate: RedisAggregate.Min' keys: new[] { "key1"' "key2" }));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZInterStore,The following statement contains a magic number: Assert.AreEqual(2' redis.ZInterStore("destination"' weights: new[] { 1D' 2D }' aggregate: RedisAggregate.Sum' keys: new[] { "key1"' "key2" }));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZInterStore,The following statement contains a magic number: Assert.AreEqual(2' redis.ZInterStore("destination"' weights: new[] { 1D' 2D }' aggregate: RedisAggregate.Sum' keys: new[] { "key1"' "key2" }));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZLexCount,The following statement contains a magic number: Assert.AreEqual(3' redis.ZLexCount("test"' "-"' "+"));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRange,The following statement contains a magic number: Assert.AreEqual(2' response1.Length);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRange,The following statement contains a magic number: Assert.AreEqual(4' response2.Length);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRange,The following statement contains a magic number: Assert.AreEqual("test2"' response2[2]);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRange,The following statement contains a magic number: Assert.AreEqual("2.2"' response2[3]);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRange,The following statement contains a magic number: Assert.AreEqual(2' response3.Length);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRange,The following statement contains a magic number: Assert.AreEqual(1.1' response3[0].Item2);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRange,The following statement contains a magic number: Assert.AreEqual(2.2' response3[1].Item2);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRangeByLex,The following statement contains a magic number: Assert.AreEqual(2' response1.Length);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRangeByLex,The following statement contains a magic number: var response2 = redis.ZRangeByLex("test"' "-"' "[c"' offset: 10' count: 5);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRangeByLex,The following statement contains a magic number: var response2 = redis.ZRangeByLex("test"' "-"' "[c"' offset: 10' count: 5);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRangeByScore,The following statement contains a magic number: var response1 = redis.ZRangeByScore("test"' 0' 10);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRangeByScore,The following statement contains a magic number: Assert.AreEqual(2' response1.Length);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRangeByScore,The following statement contains a magic number: var response3 = redis.ZRangeByScore("test"' 0' 10' withScores: true);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRangeByScore,The following statement contains a magic number: Assert.AreEqual(4' response3.Length);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRangeByScore,The following statement contains a magic number: Assert.AreEqual("test2"' response3[2]);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRangeByScore,The following statement contains a magic number: Assert.AreEqual("2.2"' response3[3]);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRangeByScore,The following statement contains a magic number: var response4 = redis.ZRangeByScore("test"' 0' 10' withScores: true' exclusiveMin: true' exclusiveMax: true);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRangeByScore,The following statement contains a magic number: var response5 = redis.ZRangeByScore("test"' 0' 10' withScores: true' exclusiveMin: true' exclusiveMax: true' offset: 1' count: 5);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRangeByScore,The following statement contains a magic number: var response5 = redis.ZRangeByScore("test"' 0' 10' withScores: true' exclusiveMin: true' exclusiveMax: true' offset: 1' count: 5);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRangeByScoreWithScores,The following statement contains a magic number: var response1 = redis.ZRangeByScoreWithScores("test"' 0' 10);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRangeByScoreWithScores,The following statement contains a magic number: Assert.AreEqual(2' response1.Length);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRangeByScoreWithScores,The following statement contains a magic number: Assert.AreEqual(1.1' response1[0].Item2);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRangeByScoreWithScores,The following statement contains a magic number: Assert.AreEqual(2.2' response1[1].Item2);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRangeByScoreWithScores,The following statement contains a magic number: var response3 = redis.ZRangeByScoreWithScores("test"' 0' 10' exclusiveMin: true' exclusiveMax: true);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRangeByScoreWithScores,The following statement contains a magic number: var response4 = redis.ZRangeByScoreWithScores("test"' 0' 10' exclusiveMin: true' exclusiveMax: true' offset: 1' count: 5);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRangeByScoreWithScores,The following statement contains a magic number: var response4 = redis.ZRangeByScoreWithScores("test"' 0' 10' exclusiveMin: true' exclusiveMax: true' offset: 1' count: 5);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRank,The following statement contains a magic number: Assert.AreEqual(3' redis.ZRank("test"' "member"));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRem,The following statement contains a magic number: Assert.AreEqual(2' redis.ZRem("test"' "m1"' "m2"));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRemRangeByLex,The following statement contains a magic number: Assert.AreEqual(2' redis.ZRemRangeByLex("test"' "[a"' "[z"));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRemRangeByRank,The following statement contains a magic number: Assert.AreEqual(2' redis.ZRemRangeByRank("test"' 0' 10));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRemRangeByRank,The following statement contains a magic number: Assert.AreEqual(2' redis.ZRemRangeByRank("test"' 0' 10));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRemRangeByScore,The following statement contains a magic number: Assert.AreEqual(2' redis.ZRemRangeByScore("test"' 0' 10));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRemRangeByScore,The following statement contains a magic number: Assert.AreEqual(2' redis.ZRemRangeByScore("test"' 0' 10));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRange,The following statement contains a magic number: Assert.AreEqual(2' response1.Length);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRange,The following statement contains a magic number: Assert.AreEqual(4' response2.Length);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRange,The following statement contains a magic number: Assert.AreEqual("test2"' response2[2]);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRange,The following statement contains a magic number: Assert.AreEqual("2.2"' response2[3]);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRange,The following statement contains a magic number: Assert.AreEqual(2' response3.Length);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRange,The following statement contains a magic number: Assert.AreEqual(1.1' response3[0].Item2);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRange,The following statement contains a magic number: Assert.AreEqual(2.2' response3[1].Item2);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRangeByScore,The following statement contains a magic number: var response1 = redis.ZRevRangeByScore("test"' 0' 10);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRangeByScore,The following statement contains a magic number: Assert.AreEqual(2' response1.Length);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRangeByScore,The following statement contains a magic number: var response3 = redis.ZRevRangeByScore("test"' 0' 10' withScores: true);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRangeByScore,The following statement contains a magic number: Assert.AreEqual(4' response3.Length);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRangeByScore,The following statement contains a magic number: Assert.AreEqual("test2"' response3[2]);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRangeByScore,The following statement contains a magic number: Assert.AreEqual("2.2"' response3[3]);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRangeByScore,The following statement contains a magic number: var response4 = redis.ZRevRangeByScore("test"' 0' 10' withScores: true' exclusiveMin: true' exclusiveMax: true);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRangeByScore,The following statement contains a magic number: var response5 = redis.ZRevRangeByScore("test"' 0' 10' withScores: true' exclusiveMin: true' exclusiveMax: true' offset: 1' count: 5);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRangeByScore,The following statement contains a magic number: var response5 = redis.ZRevRangeByScore("test"' 0' 10' withScores: true' exclusiveMin: true' exclusiveMax: true' offset: 1' count: 5);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRangeByScoreWithScores,The following statement contains a magic number: var response1 = redis.ZRevRangeByScoreWithScores("test"' 0' 10);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRangeByScoreWithScores,The following statement contains a magic number: Assert.AreEqual(2' response1.Length);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRangeByScoreWithScores,The following statement contains a magic number: Assert.AreEqual(1.1' response1[0].Item2);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRangeByScoreWithScores,The following statement contains a magic number: Assert.AreEqual(2.2' response1[1].Item2);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRangeByScoreWithScores,The following statement contains a magic number: var response3 = redis.ZRevRangeByScoreWithScores("test"' 0' 10' exclusiveMin: true' exclusiveMax: true);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRangeByScoreWithScores,The following statement contains a magic number: var response4 = redis.ZRevRangeByScoreWithScores("test"' 0' 10' exclusiveMin: true' exclusiveMax: true' offset: 1' count: 5);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRangeByScoreWithScores,The following statement contains a magic number: var response4 = redis.ZRevRangeByScoreWithScores("test"' 0' 10' exclusiveMin: true' exclusiveMax: true' offset: 1' count: 5);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZRevRank,The following statement contains a magic number: Assert.AreEqual(2' redis.ZRevRank("test"' "test1"));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZScan,The following statement contains a magic number: Assert.AreEqual(23' response1.Cursor);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZScan,The following statement contains a magic number: Assert.AreEqual(2' response1.Items.Length);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZScan,The following statement contains a magic number: Assert.AreEqual(1.1' response1.Items[0].Item2);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZScan,The following statement contains a magic number: var response3 = redis.ZScan("test"' 0' count: 5);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZScan,The following statement contains a magic number: var response4 = redis.ZScan("test"' 0' "*"' 5);
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZScore,The following statement contains a magic number: Assert.AreEqual(1.1' redis.ZScore("test"' "member1"));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZUnionStore,The following statement contains a magic number: Assert.AreEqual(2' redis.ZUnionStore("destination"' "key1"' "key2"));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZUnionStore,The following statement contains a magic number: Assert.AreEqual(2' redis.ZUnionStore("destination"' weights: new[] { 1D' 2D }' keys: new[] { "key1"' "key2" }));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZUnionStore,The following statement contains a magic number: Assert.AreEqual(2' redis.ZUnionStore("destination"' weights: new[] { 1D' 2D }' keys: new[] { "key1"' "key2" }));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZUnionStore,The following statement contains a magic number: Assert.AreEqual(2' redis.ZUnionStore("destination"' weights: new[] { 1D' 2D }' aggregate: RedisAggregate.Max' keys: new[] { "key1"' "key2" }));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZUnionStore,The following statement contains a magic number: Assert.AreEqual(2' redis.ZUnionStore("destination"' weights: new[] { 1D' 2D }' aggregate: RedisAggregate.Max' keys: new[] { "key1"' "key2" }));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZUnionStore,The following statement contains a magic number: Assert.AreEqual(2' redis.ZUnionStore("destination"' weights: new[] { 1D' 2D }' aggregate: RedisAggregate.Min' keys: new[] { "key1"' "key2" }));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZUnionStore,The following statement contains a magic number: Assert.AreEqual(2' redis.ZUnionStore("destination"' weights: new[] { 1D' 2D }' aggregate: RedisAggregate.Min' keys: new[] { "key1"' "key2" }));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZUnionStore,The following statement contains a magic number: Assert.AreEqual(2' redis.ZUnionStore("destination"' weights: new[] { 1D' 2D }' aggregate: RedisAggregate.Sum' keys: new[] { "key1"' "key2" }));
Magic Number,CSRedis.Tests,SortedSetTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\SortedSetTests.cs,TestZUnionStore,The following statement contains a magic number: Assert.AreEqual(2' redis.ZUnionStore("destination"' weights: new[] { 1D' 2D }' aggregate: RedisAggregate.Sum' keys: new[] { "key1"' "key2" }));
Magic Number,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,AppendTest,The following statement contains a magic number: Assert.AreEqual(10' redis.Append("key"' "x"));
Magic Number,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,BitCountTest,The following statement contains a magic number: Assert.AreEqual(10' redis.BitCount("key"));
Magic Number,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,BitCountTest,The following statement contains a magic number: Assert.AreEqual(4' redis.BitCount("key"' 0' 1));
Magic Number,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,BitOpTest,The following statement contains a magic number: Assert.AreEqual(10' redis.BitOp(RedisBitOp.And' "dest"' "key1"' "key2"));
Magic Number,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,BitOpTest,The following statement contains a magic number: Assert.AreEqual(10' redis.BitOp(RedisBitOp.Or' "dest"' "key1"' "key2"));
Magic Number,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,BitOpTest,The following statement contains a magic number: Assert.AreEqual(10' redis.BitOp(RedisBitOp.XOr' "dest"' "key1"' "key2"));
Magic Number,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,BitOpTest,The following statement contains a magic number: Assert.AreEqual(10' redis.BitOp(RedisBitOp.Not' "dest"' "key1"' "key2"));
Magic Number,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,BitPosTest,The following statement contains a magic number: Assert.AreEqual(10' redis.BitPos("key"' true));
Magic Number,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,BitPosTest,The following statement contains a magic number: Assert.AreEqual(10' redis.BitPos("key"' true' start: 0));
Magic Number,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,BitPosTest,The following statement contains a magic number: Assert.AreEqual(10' redis.BitPos("key"' true' start: 0' end: 1));
Magic Number,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,DecrTest,The following statement contains a magic number: Assert.AreEqual(10' redis.Decr("key"));
Magic Number,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,DecrByTest,The following statement contains a magic number: Assert.AreEqual(10' redis.DecrBy("key"' 5));
Magic Number,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,DecrByTest,The following statement contains a magic number: Assert.AreEqual(10' redis.DecrBy("key"' 5));
Magic Number,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,GetBitTest,The following statement contains a magic number: Assert.IsTrue(redis.GetBit("key"' 10));
Magic Number,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,GetRangeTest,The following statement contains a magic number: Assert.AreEqual("hello"' redis.GetRange("key"' 0' 10));
Magic Number,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,IncrTest,The following statement contains a magic number: Assert.AreEqual(5' redis.Incr("key"));
Magic Number,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,IncrByTest,The following statement contains a magic number: Assert.AreEqual(5' redis.IncrBy("key"' 2));
Magic Number,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,IncrByTest,The following statement contains a magic number: Assert.AreEqual(5' redis.IncrBy("key"' 2));
Magic Number,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,IncrByFloatTest,The following statement contains a magic number: Assert.AreEqual(4.14' redis.IncrByFloat("key"' 3.14));
Magic Number,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,IncrByFloatTest,The following statement contains a magic number: Assert.AreEqual(4.14' redis.IncrByFloat("key"' 3.14));
Magic Number,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,MGetTest,The following statement contains a magic number: Assert.AreEqual(2' response.Length);
Magic Number,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,PSetExTest,The following statement contains a magic number: Assert.AreEqual("OK"' redis.PSetEx("key"' 1000' "value"));
Magic Number,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,SetBitTest,The following statement contains a magic number: Assert.IsTrue(redis.SetBit("key"' 5' true));
Magic Number,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,SetBitTest,The following statement contains a magic number: Assert.IsFalse(redis.SetBit("key"' 5' false));
Magic Number,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,SetExTest,The following statement contains a magic number: Assert.AreEqual("OK"' redis.SetEx("key"' 100' "value"));
Magic Number,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,SetRangeTest,The following statement contains a magic number: Assert.AreEqual(10' redis.SetRange("key"' 4' "value"));
Magic Number,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,SetRangeTest,The following statement contains a magic number: Assert.AreEqual(10' redis.SetRange("key"' 4' "value"));
Magic Number,CSRedis.Tests,StringTests,D:\research\architectureSmells\repos\ctstone_csredis\CSRedis.Tests\StringTests.cs,StrLenTest,The following statement contains a magic number: Assert.AreEqual(10' redis.StrLen("key"));
