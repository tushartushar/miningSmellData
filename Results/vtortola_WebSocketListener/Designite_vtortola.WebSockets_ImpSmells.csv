Implementation smell,Namespace,Class,File,Method,Description
Complex Method,vtortola.WebSockets,WebSocketHandshaker,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Http\WebSocketHandshaker.cs,WriteHandshakeCookies,Cyclomatic complexity of the method is 8
Complex Method,vtortola.WebSockets,WebSocketListenerOptions,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\WebSocketListenerOptions.cs,CheckCoherence,Cyclomatic complexity of the method is 9
Long Parameter List,vtortola.WebSockets,WebSocketMessageReadStream,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Streams\WebSocketMessageReadStream.cs,BeginRead,The method has 5 parameters. Parameters: buffer' offset' count' callback' state
Long Parameter List,vtortola.WebSockets,WebSocketMessageStream,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Streams\WebSocketMessageStream.cs,BeginRead,The method has 5 parameters. Parameters: buffer' offset' count' callback' state
Long Parameter List,vtortola.WebSockets,WebSocketMessageStream,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Streams\WebSocketMessageStream.cs,BeginWrite,The method has 5 parameters. Parameters: buffer' offset' count' callback' state
Long Parameter List,vtortola.WebSockets,WebSocketMessageWriteStream,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Streams\WebSocketMessageWriteStream.cs,BeginWrite,The method has 5 parameters. Parameters: buffer' offset' count' callback' state
Long Parameter List,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,TryParse,The method has 5 parameters. Parameters: frameStart' offset' headerLength' keySegment' header
Long Parameter List,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,Create,The method has 5 parameters. Parameters: count' isComplete' headerSent' option' extensionFlags
Long Parameter List,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WriteInternal,The method has 6 parameters. Parameters: buffer' count' isCompleted' headerSent' type' extensionFlags
Long Parameter List,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WriteInternalAsync,The method has 7 parameters. Parameters: buffer' count' isCompleted' headerSent' type' extensionFlags' cancel
Long Parameter List,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WriteInternal,The method has 6 parameters. Parameters: buffer' count' isCompleted' headerSent' option' extensionFlags
Long Parameter List,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WriteInternalAsync,The method has 7 parameters. Parameters: buffer' count' isCompleted' headerSent' option' extensionFlags' cancel
Long Parameter List,vtortola.WebSockets.Rfc6455,WebSocketRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketRfc6455.cs,WebSocketRfc6455,The method has 7 parameters. Parameters: clientStream' options' local' remote' httpRequest' httpResponse' extensions
Long Statement,vtortola.WebSockets,WebSocketSecureConnectionExtension,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Extensibility\WebSocketSecureConnectionExtension.cs,ExtendConnectionAsync,The length of the statement  "            await ssl.AuthenticateAsServerAsync(_certificate' _validation != null' SslProtocols.Default' false).ConfigureAwait(false); " is 122.
Long Statement,vtortola.WebSockets,WebSocketHandshake,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Http\WebSocketHandshake.cs,GenerateHandshake,The length of the statement  "            return Convert.ToBase64String(sha1.ComputeHash(Encoding.UTF8.GetBytes(Request.Headers[WebSocketHeaders.Key] + "258EAFA5-E914-47DA-95CA-C5AB0DC85B11"))); " is 152.
Long Statement,vtortola.WebSockets,WebSocketHandshaker,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Http\WebSocketHandshaker.cs,SelectExtensions,The length of the statement  "                    if (extension.TryNegotiate(handshake.Request' out WebSocketExtension extensionResponse' out IWebSocketMessageExtensionContext context)) " is 135.
Long Statement,vtortola.WebSockets,WebSocketHandshaker,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Http\WebSocketHandshaker.cs,WriteResponseInternal,The length of the statement  "                handshake.Response.Status = handshake.Response.Status != HttpStatusCode.SwitchingProtocols ? handshake.Response.Status : HttpStatusCode.BadRequest; " is 147.
Long Statement,vtortola.WebSockets,WebSocketFactoryRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketFactoryRfc6455.cs,CreateWebSocket,The length of the statement  "            return new WebSocketRfc6455(stream' options' (IPEndPoint)client.LocalEndPoint' (IPEndPoint)client.RemoteEndPoint' handshake.Request' handshake.Response' handshake.NegotiatedMessageExtensions); " is 192.
Long Statement,vtortola.WebSockets,WebSocketListener,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\WebSocketListener.cs,StartAsync,The length of the statement  "                throw new WebSocketException("There are no WebSocket standards. Please' register standards using WebSocketListener.Standards"); " is 127.
Long Statement,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,TryParse,The length of the statement  "                    throw new WebSocketException("The maximum supported frame length is 9223372036854775807' current frame is " + length.ToString()); " is 129.
Long Statement,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,Create,The length of the statement  "            var flags = new WebSocketFrameHeaderFlags(isComplete' headerSent ? WebSocketFrameOption.Continuation : option' extensionFlags); " is 127.
Long Statement,vtortola.WebSockets.Rfc6455,WebSocketFrameOptionExtensions,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameOption.cs,IsData,The length of the statement  "            return option == WebSocketFrameOption.Binary || option == WebSocketFrameOption.Text || option == WebSocketFrameOption.Continuation; " is 131.
Long Statement,vtortola.WebSockets.Rfc6455,BandwidthSavingPing,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Ping\BandwidthSavingPing.cs,StartPing,The length of the statement  "                        await _connection.WriteInternalAsync(_pingBuffer' 0' true' false' WebSocketFrameOption.Ping' WebSocketExtensionFlags.None' CancellationToken.None).ConfigureAwait(false); " is 169.
Long Statement,vtortola.WebSockets.Rfc6455,LatencyControlPing,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Ping\LatencyControlPing.cs,StartPing,The length of the statement  "                        await _connection.WriteInternalAsync(_pingBuffer' 8' true' false' WebSocketFrameOption.Ping' WebSocketExtensionFlags.None' CancellationToken.None).ConfigureAwait(false); " is 169.
Long Statement,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,BeginWritting,The length of the statement  "                throw new WebSocketException("There is an ongoing message that is being written from somewhere else. Only a single write is allowed at the time."); " is 147.
Long Statement,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,ProcessHeaderFrame,The length of the statement  "            if (!WebSocketFrameHeader.TryParse(_headerBuffer.Array' _headerBuffer.Offset' headerlength' _keyBuffer' out WebSocketFrameHeader header)) " is 137.
Long Statement,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,ProcessHeaderFrameAsync,The length of the statement  "            if (!WebSocketFrameHeader.TryParse(_headerBuffer.Array' _headerBuffer.Offset' headerlength' _keyBuffer' out WebSocketFrameHeader header)) " is 137.
Long Statement,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,TryReadHeaderUntilAsync,The length of the statement  "                r = await _clientStream.ReadAsync(_headerBuffer.Array' _headerBuffer.Offset + readed' until - readed).ConfigureAwait(false); " is 124.
Long Statement,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,CheckForDoubleRead,The length of the statement  "                throw new WebSocketException("There is an ongoing message await from somewhere else. Only a single write is allowed at the time."); " is 131.
Long Statement,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,ProcessPingPongAsync,The length of the statement  "                readed = await _clientStream.ReadAsync(_pongBuffer.Array' _pongBuffer.Offset + readed' contentLength - readed).ConfigureAwait(false); " is 133.
Long Statement,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,ProcessPingPongAsync,The length of the statement  "                await WriteInternalAsync(_pongBuffer' readed' true' false' WebSocketFrameOption.Pong' WebSocketExtensionFlags.None' CancellationToken.None).ConfigureAwait(false); " is 162.
Long Statement,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WriteInternalAsync,The length of the statement  "                await _clientStream.WriteAsync(buffer.Array' buffer.Offset - header.HeaderLength' count + header.HeaderLength' cancel).ConfigureAwait(false); " is 141.
Long Statement,vtortola.WebSockets.Rfc6455,WebSocketMessageWriteRfc6455Stream,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketMessageWriteRfc6455Stream.cs,BufferData,The length of the statement  "            Array.Copy(buffer' offset' _webSocket.SendBuffer.Array' _webSocket.SendBuffer.Offset + _internalUsedBufferLength' read); " is 120.
Long Statement,vtortola.WebSockets.Rfc6455,WebSocketMessageWriteRfc6455Stream,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketMessageWriteRfc6455Stream.cs,Write,The length of the statement  "                    _webSocket.WriteInternal(_webSocket.SendBuffer' _internalUsedBufferLength' false' _isHeaderSent' _messageType' ExtensionFlags); " is 127.
Long Statement,vtortola.WebSockets.Rfc6455,WebSocketMessageWriteRfc6455Stream,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketMessageWriteRfc6455Stream.cs,WriteAsync,The length of the statement  "                    await _webSocket.WriteInternalAsync(_webSocket.SendBuffer' _internalUsedBufferLength' false' _isHeaderSent' _messageType' ExtensionFlags' cancel).ConfigureAwait(false); " is 168.
Long Statement,vtortola.WebSockets.Rfc6455,WebSocketMessageWriteRfc6455Stream,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketMessageWriteRfc6455Stream.cs,FlushAsync,The length of the statement  "            await _webSocket.WriteInternalAsync(_webSocket.SendBuffer' _internalUsedBufferLength' false' _isHeaderSent' _messageType' ExtensionFlags' cancel).ConfigureAwait(false); " is 168.
Long Statement,vtortola.WebSockets.Rfc6455,WebSocketMessageWriteRfc6455Stream,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketMessageWriteRfc6455Stream.cs,Close,The length of the statement  "                _webSocket.WriteInternal(_webSocket.SendBuffer' _internalUsedBufferLength' true' _isHeaderSent' _messageType' ExtensionFlags); " is 126.
Long Statement,vtortola.WebSockets.Rfc6455,WebSocketMessageWriteRfc6455Stream,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketMessageWriteRfc6455Stream.cs,CloseAsync,The length of the statement  "                await _webSocket.WriteInternalAsync(_webSocket.SendBuffer' _internalUsedBufferLength' true' _isHeaderSent' _messageType' ExtensionFlags' cancel).ConfigureAwait(false); " is 167.
Complex Conditional,vtortola.WebSockets,WebSocketHandshaker,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Http\WebSocketHandshaker.cs,SplitBy,The conditional expression  "c == limit && (!firstOnly || (firstOnly && !found))"  is complex.
Complex Conditional,vtortola.WebSockets,WebSocketMessageWriteStream,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Streams\WebSocketMessageWriteStream.cs,RemoveUTF8BOM,The conditional expression  "buffer.Length >= 3 && buffer[0] == 239 && buffer[1] == 187 && buffer[2] == 191"  is complex.
Empty Catch Block,vtortola.WebSockets,SafeEnd,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Tools\SafeEnd.cs,ReleaseSemaphore,The method has an empty catch block.
Empty Catch Block,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,Dispose,The method has an empty catch block.
Empty Catch Block,vtortola.WebSockets.Http,HttpNegotiationQueue,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Http\HttpNegotiationQueue.cs,WorkAsync,The method has an empty catch block.
Magic Number,vtortola.WebSockets,WebSocketMessageWriteStream,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Streams\WebSocketMessageWriteStream.cs,RemoveUTF8BOM,The following statement contains a magic number: if (buffer.Length >= 3 && buffer[0] == 239 && buffer[1] == 187 && buffer[2] == 191)              {                  count -= 3;                    if (count <= 0)                      return;                    offset += 3;              }
Magic Number,vtortola.WebSockets,WebSocketMessageWriteStream,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Streams\WebSocketMessageWriteStream.cs,RemoveUTF8BOM,The following statement contains a magic number: if (buffer.Length >= 3 && buffer[0] == 239 && buffer[1] == 187 && buffer[2] == 191)              {                  count -= 3;                    if (count <= 0)                      return;                    offset += 3;              }
Magic Number,vtortola.WebSockets,WebSocketMessageWriteStream,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Streams\WebSocketMessageWriteStream.cs,RemoveUTF8BOM,The following statement contains a magic number: if (buffer.Length >= 3 && buffer[0] == 239 && buffer[1] == 187 && buffer[2] == 191)              {                  count -= 3;                    if (count <= 0)                      return;                    offset += 3;              }
Magic Number,vtortola.WebSockets,WebSocketMessageWriteStream,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Streams\WebSocketMessageWriteStream.cs,RemoveUTF8BOM,The following statement contains a magic number: if (buffer.Length >= 3 && buffer[0] == 239 && buffer[1] == 187 && buffer[2] == 191)              {                  count -= 3;                    if (count <= 0)                      return;                    offset += 3;              }
Magic Number,vtortola.WebSockets,WebSocketMessageWriteStream,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Streams\WebSocketMessageWriteStream.cs,RemoveUTF8BOM,The following statement contains a magic number: if (buffer.Length >= 3 && buffer[0] == 239 && buffer[1] == 187 && buffer[2] == 191)              {                  count -= 3;                    if (count <= 0)                      return;                    offset += 3;              }
Magic Number,vtortola.WebSockets,WebSocketMessageWriteStream,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Streams\WebSocketMessageWriteStream.cs,RemoveUTF8BOM,The following statement contains a magic number: if (buffer.Length >= 3 && buffer[0] == 239 && buffer[1] == 187 && buffer[2] == 191)              {                  count -= 3;                    if (count <= 0)                      return;                    offset += 3;              }
Magic Number,vtortola.WebSockets,WebSocketMessageWriteStream,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Streams\WebSocketMessageWriteStream.cs,RemoveUTF8BOM,The following statement contains a magic number: if (buffer.Length >= 3 && buffer[0] == 239 && buffer[1] == 187 && buffer[2] == 191)              {                  count -= 3;                    if (count <= 0)                      return;                    offset += 3;              }
Magic Number,vtortola.WebSockets,WebSocketListenerOptions,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\WebSocketListenerOptions.cs,WebSocketListenerOptions,The following statement contains a magic number: PingTimeout = TimeSpan.FromSeconds(5);
Magic Number,vtortola.WebSockets,WebSocketListenerOptions,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\WebSocketListenerOptions.cs,WebSocketListenerOptions,The following statement contains a magic number: NegotiationQueueCapacity = Environment.ProcessorCount * 1024;
Magic Number,vtortola.WebSockets,WebSocketListenerOptions,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\WebSocketListenerOptions.cs,WebSocketListenerOptions,The following statement contains a magic number: ParallelNegotiations = Environment.ProcessorCount * 128;
Magic Number,vtortola.WebSockets,WebSocketListenerOptions,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\WebSocketListenerOptions.cs,WebSocketListenerOptions,The following statement contains a magic number: NegotiationTimeout = TimeSpan.FromSeconds(5);
Magic Number,vtortola.WebSockets,WebSocketListenerOptions,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\WebSocketListenerOptions.cs,WebSocketListenerOptions,The following statement contains a magic number: WebSocketSendTimeout = TimeSpan.FromSeconds(5);
Magic Number,vtortola.WebSockets,WebSocketListenerOptions,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\WebSocketListenerOptions.cs,WebSocketListenerOptions,The following statement contains a magic number: WebSocketReceiveTimeout = TimeSpan.FromSeconds(5);
Magic Number,vtortola.WebSockets,WebSocketListenerOptions,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\WebSocketListenerOptions.cs,WebSocketListenerOptions,The following statement contains a magic number: SendBufferSize = 8192;
Magic Number,vtortola.WebSockets.Rfc6455,ByteArrayExtensions,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\ByteArrayExtensions.cs,ToBytes,The following statement contains a magic number: for (int i = 0; i < 2; i++)              {                  buffer[offset + i] = (byte)value;                  value >>= 8;              }
Magic Number,vtortola.WebSockets.Rfc6455,ByteArrayExtensions,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\ByteArrayExtensions.cs,ToBytes,The following statement contains a magic number: for (int i = 0; i < 2; i++)              {                  buffer[offset + i] = (byte)value;                  value >>= 8;              }
Magic Number,vtortola.WebSockets.Rfc6455,ByteArrayExtensions,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\ByteArrayExtensions.cs,ToBytes,The following statement contains a magic number: for (int i = 0; i < 8; i++)              {                  buffer[offset + i] = (byte)value;                  value >>= 8;              }
Magic Number,vtortola.WebSockets.Rfc6455,ByteArrayExtensions,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\ByteArrayExtensions.cs,ToBytes,The following statement contains a magic number: for (int i = 0; i < 8; i++)              {                  buffer[offset + i] = (byte)value;                  value >>= 8;              }
Magic Number,vtortola.WebSockets.Rfc6455,ByteArrayExtensions,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\ByteArrayExtensions.cs,ToBytesBackwards,The following statement contains a magic number: for (int i = offset + 1; i >= offset; i--)              {                  buffer[i] = (byte)value;                  value >>= 8;              }
Magic Number,vtortola.WebSockets.Rfc6455,ByteArrayExtensions,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\ByteArrayExtensions.cs,ToBytesBackwards,The following statement contains a magic number: for (int i = offset + 7; i >= offset; i--)              {                  buffer[i] = (byte)value;                  value >>= 8;              }
Magic Number,vtortola.WebSockets.Rfc6455,ByteArrayExtensions,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\ByteArrayExtensions.cs,ToBytesBackwards,The following statement contains a magic number: for (int i = offset + 7; i >= offset; i--)              {                  buffer[i] = (byte)value;                  value >>= 8;              }
Magic Number,vtortola.WebSockets.Rfc6455,ByteArrayExtensions,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\ByteArrayExtensions.cs,ToUInt16Left2Right,The following statement contains a magic number: checked              {                  ushort value = 0;                  int pos = 0;                  for (int b = from; b < from + 2; b++)                  {                      for (int p = 0; p < 8; p++)                      {                          if (GetBit(array[b]' p))                          {                              value += (ushort)Math.Pow(2' pos);                          }                          pos++;                      }                  }                  return value;              }
Magic Number,vtortola.WebSockets.Rfc6455,ByteArrayExtensions,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\ByteArrayExtensions.cs,ToUInt16Left2Right,The following statement contains a magic number: checked              {                  ushort value = 0;                  int pos = 0;                  for (int b = from; b < from + 2; b++)                  {                      for (int p = 0; p < 8; p++)                      {                          if (GetBit(array[b]' p))                          {                              value += (ushort)Math.Pow(2' pos);                          }                          pos++;                      }                  }                  return value;              }
Magic Number,vtortola.WebSockets.Rfc6455,ByteArrayExtensions,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\ByteArrayExtensions.cs,ToUInt16Left2Right,The following statement contains a magic number: checked              {                  ushort value = 0;                  int pos = 0;                  for (int b = from; b < from + 2; b++)                  {                      for (int p = 0; p < 8; p++)                      {                          if (GetBit(array[b]' p))                          {                              value += (ushort)Math.Pow(2' pos);                          }                          pos++;                      }                  }                  return value;              }
Magic Number,vtortola.WebSockets.Rfc6455,ByteArrayExtensions,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\ByteArrayExtensions.cs,ToUInt16RightToLeft,The following statement contains a magic number: checked              {                  ushort value = 0;                  int pos = 0;                  for (int b = from + 1; b >= from; b--)                  {                      for (int p = 0; p < 8; p++)                      {                          if (GetBit(array[b]' p))                          {                              value += (ushort)Math.Pow(2' pos);                          }                          pos++;                      }                  }                  return value;              }
Magic Number,vtortola.WebSockets.Rfc6455,ByteArrayExtensions,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\ByteArrayExtensions.cs,ToUInt16RightToLeft,The following statement contains a magic number: checked              {                  ushort value = 0;                  int pos = 0;                  for (int b = from + 1; b >= from; b--)                  {                      for (int p = 0; p < 8; p++)                      {                          if (GetBit(array[b]' p))                          {                              value += (ushort)Math.Pow(2' pos);                          }                          pos++;                      }                  }                  return value;              }
Magic Number,vtortola.WebSockets.Rfc6455,ByteArrayExtensions,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\ByteArrayExtensions.cs,ToUInt64LeftToRight,The following statement contains a magic number: checked              {                  ulong value = 0;                  int pos = 0;                  for (int b = from; b < from + 8; b++)                  {                      for (int p = 0; p < 8; p++)                      {                          if (GetBit(array[b]' p))                          {                              value += (ulong)Math.Pow(2' pos);                          }                          pos++;                      }                  }                  return value;              }
Magic Number,vtortola.WebSockets.Rfc6455,ByteArrayExtensions,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\ByteArrayExtensions.cs,ToUInt64LeftToRight,The following statement contains a magic number: checked              {                  ulong value = 0;                  int pos = 0;                  for (int b = from; b < from + 8; b++)                  {                      for (int p = 0; p < 8; p++)                      {                          if (GetBit(array[b]' p))                          {                              value += (ulong)Math.Pow(2' pos);                          }                          pos++;                      }                  }                  return value;              }
Magic Number,vtortola.WebSockets.Rfc6455,ByteArrayExtensions,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\ByteArrayExtensions.cs,ToUInt64LeftToRight,The following statement contains a magic number: checked              {                  ulong value = 0;                  int pos = 0;                  for (int b = from; b < from + 8; b++)                  {                      for (int p = 0; p < 8; p++)                      {                          if (GetBit(array[b]' p))                          {                              value += (ulong)Math.Pow(2' pos);                          }                          pos++;                      }                  }                  return value;              }
Magic Number,vtortola.WebSockets.Rfc6455,ByteArrayExtensions,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\ByteArrayExtensions.cs,ToUInt64RightToLeft,The following statement contains a magic number: checked              {                  ulong value = 0;                  int pos = 0;                  for (int b = from + 7; b >= from; b--)                  {                      for (int p = 0; p < 8; p++)                      {                          if (GetBit(array[b]' p))                          {                              value += (ulong)Math.Pow(2' pos);                          }                          pos++;                      }                  }                  return value;              }
Magic Number,vtortola.WebSockets.Rfc6455,ByteArrayExtensions,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\ByteArrayExtensions.cs,ToUInt64RightToLeft,The following statement contains a magic number: checked              {                  ulong value = 0;                  int pos = 0;                  for (int b = from + 7; b >= from; b--)                  {                      for (int p = 0; p < 8; p++)                      {                          if (GetBit(array[b]' p))                          {                              value += (ulong)Math.Pow(2' pos);                          }                          pos++;                      }                  }                  return value;              }
Magic Number,vtortola.WebSockets.Rfc6455,ByteArrayExtensions,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\ByteArrayExtensions.cs,ToUInt64RightToLeft,The following statement contains a magic number: checked              {                  ulong value = 0;                  int pos = 0;                  for (int b = from + 7; b >= from; b--)                  {                      for (int p = 0; p < 8; p++)                      {                          if (GetBit(array[b]' p))                          {                              value += (ulong)Math.Pow(2' pos);                          }                          pos++;                      }                  }                  return value;              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,WebSocketFrameHeader,The following statement contains a magic number: if (keySegment.Count != 4)                  throw new WebSocketException("The frame key must have a length of 4");
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,DecodeBytes,The following statement contains a magic number: if (Flags.MASK)              {                  if (_key == null)                      throw new WebSocketException("There is no key to decode the data");                    for (int i = bufferOffset; i < bufferOffset + readed; i++)                  {                      buffer[i] = (Byte)(buffer[i] ^ _key.Array[_key.Offset + cursor++]);                      if (cursor >= 4)                          cursor = 0;                  }              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,ToBytes,The following statement contains a magic number: if (ContentLength <= 125)              { // header length is included in the 2b header              }              else if (ContentLength <= ushort.MaxValue)              {                  ((ushort)ContentLength).ToBytesBackwards(segment' offset + 2);              }              else if ((ulong)this.ContentLength <= ulong.MaxValue)              {                  ((ulong)ContentLength).ToBytesBackwards(segment' offset + 2);              }              else              {                  throw new WebSocketException("Invalid frame header length " + ContentLength);              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,ToBytes,The following statement contains a magic number: if (ContentLength <= 125)              { // header length is included in the 2b header              }              else if (ContentLength <= ushort.MaxValue)              {                  ((ushort)ContentLength).ToBytesBackwards(segment' offset + 2);              }              else if ((ulong)this.ContentLength <= ulong.MaxValue)              {                  ((ulong)ContentLength).ToBytesBackwards(segment' offset + 2);              }              else              {                  throw new WebSocketException("Invalid frame header length " + ContentLength);              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,ToBytes,The following statement contains a magic number: if (ContentLength <= 125)              { // header length is included in the 2b header              }              else if (ContentLength <= ushort.MaxValue)              {                  ((ushort)ContentLength).ToBytesBackwards(segment' offset + 2);              }              else if ((ulong)this.ContentLength <= ulong.MaxValue)              {                  ((ulong)ContentLength).ToBytesBackwards(segment' offset + 2);              }              else              {                  throw new WebSocketException("Invalid frame header length " + ContentLength);              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,GetHeaderLength,The following statement contains a magic number: if (frameStart == null || frameStart.Length < offset + 2)                  throw new WebSocketException("The first two bytes of a header are required to understand the header length");
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,GetHeaderLength,The following statement contains a magic number: var isMasked = value >= 128;
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,GetHeaderLength,The following statement contains a magic number: var contentLength = isMasked ? value - 128 : value;
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,GetHeaderLength,The following statement contains a magic number: if (contentLength <= 125)              {                  return isMasked ? 6 : 2;              }              else if (contentLength == 126)              {                  return (isMasked ? 6 : 2) + 2;              }              else if (contentLength == 127)              {                  return (isMasked ? 6 : 2) + 8;              }              else              {                  throw new WebSocketException("Cannot understand a length field of " + contentLength);              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,GetHeaderLength,The following statement contains a magic number: if (contentLength <= 125)              {                  return isMasked ? 6 : 2;              }              else if (contentLength == 126)              {                  return (isMasked ? 6 : 2) + 2;              }              else if (contentLength == 127)              {                  return (isMasked ? 6 : 2) + 8;              }              else              {                  throw new WebSocketException("Cannot understand a length field of " + contentLength);              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,GetHeaderLength,The following statement contains a magic number: if (contentLength <= 125)              {                  return isMasked ? 6 : 2;              }              else if (contentLength == 126)              {                  return (isMasked ? 6 : 2) + 2;              }              else if (contentLength == 127)              {                  return (isMasked ? 6 : 2) + 8;              }              else              {                  throw new WebSocketException("Cannot understand a length field of " + contentLength);              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,GetHeaderLength,The following statement contains a magic number: if (contentLength <= 125)              {                  return isMasked ? 6 : 2;              }              else if (contentLength == 126)              {                  return (isMasked ? 6 : 2) + 2;              }              else if (contentLength == 127)              {                  return (isMasked ? 6 : 2) + 8;              }              else              {                  throw new WebSocketException("Cannot understand a length field of " + contentLength);              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,GetHeaderLength,The following statement contains a magic number: if (contentLength <= 125)              {                  return isMasked ? 6 : 2;              }              else if (contentLength == 126)              {                  return (isMasked ? 6 : 2) + 2;              }              else if (contentLength == 127)              {                  return (isMasked ? 6 : 2) + 8;              }              else              {                  throw new WebSocketException("Cannot understand a length field of " + contentLength);              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,GetHeaderLength,The following statement contains a magic number: if (contentLength <= 125)              {                  return isMasked ? 6 : 2;              }              else if (contentLength == 126)              {                  return (isMasked ? 6 : 2) + 2;              }              else if (contentLength == 127)              {                  return (isMasked ? 6 : 2) + 8;              }              else              {                  throw new WebSocketException("Cannot understand a length field of " + contentLength);              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,GetHeaderLength,The following statement contains a magic number: if (contentLength <= 125)              {                  return isMasked ? 6 : 2;              }              else if (contentLength == 126)              {                  return (isMasked ? 6 : 2) + 2;              }              else if (contentLength == 127)              {                  return (isMasked ? 6 : 2) + 8;              }              else              {                  throw new WebSocketException("Cannot understand a length field of " + contentLength);              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,GetHeaderLength,The following statement contains a magic number: if (contentLength <= 125)              {                  return isMasked ? 6 : 2;              }              else if (contentLength == 126)              {                  return (isMasked ? 6 : 2) + 2;              }              else if (contentLength == 127)              {                  return (isMasked ? 6 : 2) + 8;              }              else              {                  throw new WebSocketException("Cannot understand a length field of " + contentLength);              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,GetHeaderLength,The following statement contains a magic number: if (contentLength <= 125)              {                  return isMasked ? 6 : 2;              }              else if (contentLength == 126)              {                  return (isMasked ? 6 : 2) + 2;              }              else if (contentLength == 127)              {                  return (isMasked ? 6 : 2) + 8;              }              else              {                  throw new WebSocketException("Cannot understand a length field of " + contentLength);              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,GetHeaderLength,The following statement contains a magic number: if (contentLength <= 125)              {                  return isMasked ? 6 : 2;              }              else if (contentLength == 126)              {                  return (isMasked ? 6 : 2) + 2;              }              else if (contentLength == 127)              {                  return (isMasked ? 6 : 2) + 8;              }              else              {                  throw new WebSocketException("Cannot understand a length field of " + contentLength);              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,GetHeaderLength,The following statement contains a magic number: if (contentLength <= 125)              {                  return isMasked ? 6 : 2;              }              else if (contentLength == 126)              {                  return (isMasked ? 6 : 2) + 2;              }              else if (contentLength == 127)              {                  return (isMasked ? 6 : 2) + 8;              }              else              {                  throw new WebSocketException("Cannot understand a length field of " + contentLength);              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,TryParse,The following statement contains a magic number: if (frameStart == null || frameStart.Length < 6 || frameStart.Length < (offset + headerLength))                  return false;
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,TryParse,The following statement contains a magic number: long contentLength = value >= 128 ? value - 128 : value;
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,TryParse,The following statement contains a magic number: long contentLength = value >= 128 ? value - 128 : value;
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,TryParse,The following statement contains a magic number: if (contentLength <= 125)              {                  // small frame              }              else if (contentLength == 126)              {                  if (frameStart.Length < headerLength)                      return false;                                    contentLength = frameStart.ToUInt16(2' BitConverter.IsLittleEndian);              }              else if (contentLength == 127)              {                  if (frameStart.Length < headerLength)                      return false;                    var length = frameStart.ToUInt64(2' BitConverter.IsLittleEndian);                  if (length > long.MaxValue)                  {                      throw new WebSocketException("The maximum supported frame length is 9223372036854775807' current frame is " + length.ToString());                  }                    contentLength = (long)length;              }              else              {                  return false;              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,TryParse,The following statement contains a magic number: if (contentLength <= 125)              {                  // small frame              }              else if (contentLength == 126)              {                  if (frameStart.Length < headerLength)                      return false;                                    contentLength = frameStart.ToUInt16(2' BitConverter.IsLittleEndian);              }              else if (contentLength == 127)              {                  if (frameStart.Length < headerLength)                      return false;                    var length = frameStart.ToUInt64(2' BitConverter.IsLittleEndian);                  if (length > long.MaxValue)                  {                      throw new WebSocketException("The maximum supported frame length is 9223372036854775807' current frame is " + length.ToString());                  }                    contentLength = (long)length;              }              else              {                  return false;              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,TryParse,The following statement contains a magic number: if (contentLength <= 125)              {                  // small frame              }              else if (contentLength == 126)              {                  if (frameStart.Length < headerLength)                      return false;                                    contentLength = frameStart.ToUInt16(2' BitConverter.IsLittleEndian);              }              else if (contentLength == 127)              {                  if (frameStart.Length < headerLength)                      return false;                    var length = frameStart.ToUInt64(2' BitConverter.IsLittleEndian);                  if (length > long.MaxValue)                  {                      throw new WebSocketException("The maximum supported frame length is 9223372036854775807' current frame is " + length.ToString());                  }                    contentLength = (long)length;              }              else              {                  return false;              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,TryParse,The following statement contains a magic number: if (contentLength <= 125)              {                  // small frame              }              else if (contentLength == 126)              {                  if (frameStart.Length < headerLength)                      return false;                                    contentLength = frameStart.ToUInt16(2' BitConverter.IsLittleEndian);              }              else if (contentLength == 127)              {                  if (frameStart.Length < headerLength)                      return false;                    var length = frameStart.ToUInt64(2' BitConverter.IsLittleEndian);                  if (length > long.MaxValue)                  {                      throw new WebSocketException("The maximum supported frame length is 9223372036854775807' current frame is " + length.ToString());                  }                    contentLength = (long)length;              }              else              {                  return false;              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,TryParse,The following statement contains a magic number: if (contentLength <= 125)              {                  // small frame              }              else if (contentLength == 126)              {                  if (frameStart.Length < headerLength)                      return false;                                    contentLength = frameStart.ToUInt16(2' BitConverter.IsLittleEndian);              }              else if (contentLength == 127)              {                  if (frameStart.Length < headerLength)                      return false;                    var length = frameStart.ToUInt64(2' BitConverter.IsLittleEndian);                  if (length > long.MaxValue)                  {                      throw new WebSocketException("The maximum supported frame length is 9223372036854775807' current frame is " + length.ToString());                  }                    contentLength = (long)length;              }              else              {                  return false;              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,TryParse,The following statement contains a magic number: if (WebSocketFrameHeaderFlags.TryParse(frameStart' offset' out flags))              {                  header = new WebSocketFrameHeader(keySegment)                  {                      ContentLength = contentLength'                      HeaderLength = headerLength'                      Flags = flags'                      RemainingBytes = contentLength                  };                    if (flags.MASK)                  {                      headerLength -= 4;                      for (int i = 0; i < 4; i++)                          header._key.Array[header._key.Offset + i] = frameStart[offset + i + headerLength];                  }                    return true;              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,TryParse,The following statement contains a magic number: if (WebSocketFrameHeaderFlags.TryParse(frameStart' offset' out flags))              {                  header = new WebSocketFrameHeader(keySegment)                  {                      ContentLength = contentLength'                      HeaderLength = headerLength'                      Flags = flags'                      RemainingBytes = contentLength                  };                    if (flags.MASK)                  {                      headerLength -= 4;                      for (int i = 0; i < 4; i++)                          header._key.Array[header._key.Offset + i] = frameStart[offset + i + headerLength];                  }                    return true;              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,Create,The following statement contains a magic number: if (count <= 125)              {                  headerLength = 2;              }              else if (count <= ushort.MaxValue)              {                  headerLength = 4;              }              else if ((ulong)count < ulong.MaxValue)              {                  headerLength = 10;              }              else              {                  throw new WebSocketException("Cannot create a header with a length of " + count);              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,Create,The following statement contains a magic number: if (count <= 125)              {                  headerLength = 2;              }              else if (count <= ushort.MaxValue)              {                  headerLength = 4;              }              else if ((ulong)count < ulong.MaxValue)              {                  headerLength = 10;              }              else              {                  throw new WebSocketException("Cannot create a header with a length of " + count);              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,Create,The following statement contains a magic number: if (count <= 125)              {                  headerLength = 2;              }              else if (count <= ushort.MaxValue)              {                  headerLength = 4;              }              else if ((ulong)count < ulong.MaxValue)              {                  headerLength = 10;              }              else              {                  throw new WebSocketException("Cannot create a header with a length of " + count);              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeader,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeader.cs,Create,The following statement contains a magic number: if (count <= 125)              {                  headerLength = 2;              }              else if (count <= ushort.MaxValue)              {                  headerLength = 4;              }              else if ((ulong)count < ulong.MaxValue)              {                  headerLength = 10;              }              else              {                  throw new WebSocketException("Cannot create a header with a length of " + count);              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeaderFlags,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeaderFlags.cs,TryParse,The following statement contains a magic number: if (buffer == null || buffer.Length - offset < 2)                  return false;
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeaderFlags,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeaderFlags.cs,TryParse,The following statement contains a magic number: SetBit(ref optionByte' 7' false);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeaderFlags,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeaderFlags.cs,TryParse,The following statement contains a magic number: SetBit(ref optionByte' 6' false);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeaderFlags,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeaderFlags.cs,TryParse,The following statement contains a magic number: SetBit(ref optionByte' 5' false);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeaderFlags,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeaderFlags.cs,TryParse,The following statement contains a magic number: SetBit(ref optionByte' 4' false);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeaderFlags,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeaderFlags.cs,TryParse,The following statement contains a magic number: value = value > 128 ? value - 128 : value;
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeaderFlags,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeaderFlags.cs,TryParse,The following statement contains a magic number: value = value > 128 ? value - 128 : value;
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeaderFlags,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeaderFlags.cs,WebSocketFrameHeaderFlags,The following statement contains a magic number: SetBit(ref _byte1' 7' isComplete);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeaderFlags,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeaderFlags.cs,ToBytes,The following statement contains a magic number: if (length <= 125)              {                  headerLength = (int)length;              }              else if (length <= ushort.MaxValue)              {                  headerLength = 126;              }              else if ((ulong)length < ulong.MaxValue)              {                  headerLength = 127;              }              else              {                  throw new WebSocketException("Cannot create a header with a length of " + length);              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeaderFlags,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeaderFlags.cs,ToBytes,The following statement contains a magic number: if (length <= 125)              {                  headerLength = (int)length;              }              else if (length <= ushort.MaxValue)              {                  headerLength = 126;              }              else if ((ulong)length < ulong.MaxValue)              {                  headerLength = 127;              }              else              {                  throw new WebSocketException("Cannot create a header with a length of " + length);              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketFrameHeaderFlags,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeaderFlags.cs,ToBytes,The following statement contains a magic number: if (length <= 125)              {                  headerLength = (int)length;              }              else if (length <= ushort.MaxValue)              {                  headerLength = 126;              }              else if ((ulong)length < ulong.MaxValue)              {                  headerLength = 127;              }              else              {                  throw new WebSocketException("Cannot create a header with a length of " + length);              }
Magic Number,vtortola.WebSockets.Rfc6455,BandwidthSavingPing,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Ping\BandwidthSavingPing.cs,StartPing,The following statement contains a magic number: var pingInterval = TimeSpan.FromMilliseconds(Math.Max(500' _pingTimeout.TotalMilliseconds / 3));
Magic Number,vtortola.WebSockets.Rfc6455,BandwidthSavingPing,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Ping\BandwidthSavingPing.cs,StartPing,The following statement contains a magic number: var pingInterval = TimeSpan.FromMilliseconds(Math.Max(500' _pingTimeout.TotalMilliseconds / 3));
Magic Number,vtortola.WebSockets.Rfc6455,BandwidthSavingPing,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Ping\BandwidthSavingPing.cs,StartPing,The following statement contains a magic number: var skipInterval = TimeSpan.FromMilliseconds(Math.Max(250' _pingTimeout.TotalMilliseconds / 2));
Magic Number,vtortola.WebSockets.Rfc6455,BandwidthSavingPing,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Ping\BandwidthSavingPing.cs,StartPing,The following statement contains a magic number: var skipInterval = TimeSpan.FromMilliseconds(Math.Max(250' _pingTimeout.TotalMilliseconds / 2));
Magic Number,vtortola.WebSockets.Rfc6455,LatencyControlPing,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Ping\LatencyControlPing.cs,StartPing,The following statement contains a magic number: _pingInterval = TimeSpan.FromMilliseconds(Math.Max(500' _pingTimeout.TotalMilliseconds / 2));
Magic Number,vtortola.WebSockets.Rfc6455,LatencyControlPing,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Ping\LatencyControlPing.cs,StartPing,The following statement contains a magic number: _pingInterval = TimeSpan.FromMilliseconds(Math.Max(500' _pingTimeout.TotalMilliseconds / 2));
Magic Number,vtortola.WebSockets.Rfc6455,LatencyControlPing,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Ping\LatencyControlPing.cs,StartPing,The following statement contains a magic number: while (_connection.IsConnected)              {                  await Task.Delay(_pingInterval).ConfigureAwait(false);                    try                  {                      var now = DateTime.Now;                        if (_lastActivity.Add(_pingTimeout) < now)                      {                           _connection.Close(WebSocketCloseReasons.GoingAway);                      }                      else                      {                          ((UInt64)now.Ticks).ToBytes(_pingBuffer.Array' _pingBuffer.Offset);                          await _connection.WriteInternalAsync(_pingBuffer' 8' true' false' WebSocketFrameOption.Ping' WebSocketExtensionFlags.None' CancellationToken.None).ConfigureAwait(false);                      }                  }                  catch(Exception ex)                  {                      Debug.Fail("LatencyControlPing.StartPing " + ex.Message);                      _connection.Close(WebSocketCloseReasons.ProtocolError);                  }              }
Magic Number,vtortola.WebSockets.Rfc6455,LatencyControlPing,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Ping\LatencyControlPing.cs,NotifyPong,The following statement contains a magic number: _connection.Latency = TimeSpan.FromTicks((now.Ticks - timestamp) / 2);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: if (options.BufferManager != null)                  _buffer = options.BufferManager.TakeBuffer(14 + 125 + 125 + 8 + 10 + _options.SendBufferSize + 4 + 2);              else                  _buffer = new byte[14 + 125 + 125 + 8 + 10 + _options.SendBufferSize  + 4 + 2];
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: if (options.BufferManager != null)                  _buffer = options.BufferManager.TakeBuffer(14 + 125 + 125 + 8 + 10 + _options.SendBufferSize + 4 + 2);              else                  _buffer = new byte[14 + 125 + 125 + 8 + 10 + _options.SendBufferSize  + 4 + 2];
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: if (options.BufferManager != null)                  _buffer = options.BufferManager.TakeBuffer(14 + 125 + 125 + 8 + 10 + _options.SendBufferSize + 4 + 2);              else                  _buffer = new byte[14 + 125 + 125 + 8 + 10 + _options.SendBufferSize  + 4 + 2];
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: if (options.BufferManager != null)                  _buffer = options.BufferManager.TakeBuffer(14 + 125 + 125 + 8 + 10 + _options.SendBufferSize + 4 + 2);              else                  _buffer = new byte[14 + 125 + 125 + 8 + 10 + _options.SendBufferSize  + 4 + 2];
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: if (options.BufferManager != null)                  _buffer = options.BufferManager.TakeBuffer(14 + 125 + 125 + 8 + 10 + _options.SendBufferSize + 4 + 2);              else                  _buffer = new byte[14 + 125 + 125 + 8 + 10 + _options.SendBufferSize  + 4 + 2];
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: if (options.BufferManager != null)                  _buffer = options.BufferManager.TakeBuffer(14 + 125 + 125 + 8 + 10 + _options.SendBufferSize + 4 + 2);              else                  _buffer = new byte[14 + 125 + 125 + 8 + 10 + _options.SendBufferSize  + 4 + 2];
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: if (options.BufferManager != null)                  _buffer = options.BufferManager.TakeBuffer(14 + 125 + 125 + 8 + 10 + _options.SendBufferSize + 4 + 2);              else                  _buffer = new byte[14 + 125 + 125 + 8 + 10 + _options.SendBufferSize  + 4 + 2];
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: if (options.BufferManager != null)                  _buffer = options.BufferManager.TakeBuffer(14 + 125 + 125 + 8 + 10 + _options.SendBufferSize + 4 + 2);              else                  _buffer = new byte[14 + 125 + 125 + 8 + 10 + _options.SendBufferSize  + 4 + 2];
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: if (options.BufferManager != null)                  _buffer = options.BufferManager.TakeBuffer(14 + 125 + 125 + 8 + 10 + _options.SendBufferSize + 4 + 2);              else                  _buffer = new byte[14 + 125 + 125 + 8 + 10 + _options.SendBufferSize  + 4 + 2];
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: if (options.BufferManager != null)                  _buffer = options.BufferManager.TakeBuffer(14 + 125 + 125 + 8 + 10 + _options.SendBufferSize + 4 + 2);              else                  _buffer = new byte[14 + 125 + 125 + 8 + 10 + _options.SendBufferSize  + 4 + 2];
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: if (options.BufferManager != null)                  _buffer = options.BufferManager.TakeBuffer(14 + 125 + 125 + 8 + 10 + _options.SendBufferSize + 4 + 2);              else                  _buffer = new byte[14 + 125 + 125 + 8 + 10 + _options.SendBufferSize  + 4 + 2];
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: if (options.BufferManager != null)                  _buffer = options.BufferManager.TakeBuffer(14 + 125 + 125 + 8 + 10 + _options.SendBufferSize + 4 + 2);              else                  _buffer = new byte[14 + 125 + 125 + 8 + 10 + _options.SendBufferSize  + 4 + 2];
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: if (options.BufferManager != null)                  _buffer = options.BufferManager.TakeBuffer(14 + 125 + 125 + 8 + 10 + _options.SendBufferSize + 4 + 2);              else                  _buffer = new byte[14 + 125 + 125 + 8 + 10 + _options.SendBufferSize  + 4 + 2];
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: if (options.BufferManager != null)                  _buffer = options.BufferManager.TakeBuffer(14 + 125 + 125 + 8 + 10 + _options.SendBufferSize + 4 + 2);              else                  _buffer = new byte[14 + 125 + 125 + 8 + 10 + _options.SendBufferSize  + 4 + 2];
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: _headerBuffer = new ArraySegment<byte>(_buffer' 0' 14);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: _controlBuffer = new ArraySegment<byte>(_buffer' 14' 125);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: _controlBuffer = new ArraySegment<byte>(_buffer' 14' 125);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: _pongBuffer = new ArraySegment<byte>(_buffer' 14 + 125' 125);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: _pongBuffer = new ArraySegment<byte>(_buffer' 14 + 125' 125);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: _pongBuffer = new ArraySegment<byte>(_buffer' 14 + 125' 125);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: _pingBuffer = new ArraySegment<byte>(_buffer' 14 + 125 + 125' 8);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: _pingBuffer = new ArraySegment<byte>(_buffer' 14 + 125 + 125' 8);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: _pingBuffer = new ArraySegment<byte>(_buffer' 14 + 125 + 125' 8);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: _pingBuffer = new ArraySegment<byte>(_buffer' 14 + 125 + 125' 8);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: SendBuffer = new ArraySegment<byte>(_buffer' 14 + 125 + 125 + 8 + 10' _options.SendBufferSize);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: SendBuffer = new ArraySegment<byte>(_buffer' 14 + 125 + 125 + 8 + 10' _options.SendBufferSize);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: SendBuffer = new ArraySegment<byte>(_buffer' 14 + 125 + 125 + 8 + 10' _options.SendBufferSize);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: SendBuffer = new ArraySegment<byte>(_buffer' 14 + 125 + 125 + 8 + 10' _options.SendBufferSize);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: SendBuffer = new ArraySegment<byte>(_buffer' 14 + 125 + 125 + 8 + 10' _options.SendBufferSize);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: _keyBuffer = new ArraySegment<byte>(_buffer' 14 + 125 + 125 + 8 + 10 + _options.SendBufferSize' 4);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: _keyBuffer = new ArraySegment<byte>(_buffer' 14 + 125 + 125 + 8 + 10 + _options.SendBufferSize' 4);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: _keyBuffer = new ArraySegment<byte>(_buffer' 14 + 125 + 125 + 8 + 10 + _options.SendBufferSize' 4);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: _keyBuffer = new ArraySegment<byte>(_buffer' 14 + 125 + 125 + 8 + 10 + _options.SendBufferSize' 4);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: _keyBuffer = new ArraySegment<byte>(_buffer' 14 + 125 + 125 + 8 + 10 + _options.SendBufferSize' 4);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: _keyBuffer = new ArraySegment<byte>(_buffer' 14 + 125 + 125 + 8 + 10 + _options.SendBufferSize' 4);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: _closeBuffer = new ArraySegment<byte>(_buffer' 14 + 125 + 125 + 8 + 10 + _options.SendBufferSize + 4' 2);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: _closeBuffer = new ArraySegment<byte>(_buffer' 14 + 125 + 125 + 8 + 10 + _options.SendBufferSize + 4' 2);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: _closeBuffer = new ArraySegment<byte>(_buffer' 14 + 125 + 125 + 8 + 10 + _options.SendBufferSize + 4' 2);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: _closeBuffer = new ArraySegment<byte>(_buffer' 14 + 125 + 125 + 8 + 10 + _options.SendBufferSize + 4' 2);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: _closeBuffer = new ArraySegment<byte>(_buffer' 14 + 125 + 125 + 8 + 10 + _options.SendBufferSize + 4' 2);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: _closeBuffer = new ArraySegment<byte>(_buffer' 14 + 125 + 125 + 8 + 10 + _options.SendBufferSize + 4' 2);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,WebSocketConnectionRfc6455,The following statement contains a magic number: _closeBuffer = new ArraySegment<byte>(_buffer' 14 + 125 + 125 + 8 + 10 + _options.SendBufferSize + 4' 2);
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,AwaitHeader,The following statement contains a magic number: try              {                  while (IsConnected && CurrentHeader == null)                  {                      // try read minimal frame first                      var readed =  _clientStream.Read(_headerBuffer.Array'_headerBuffer.Offset' 6);                      if (readed == 0 )                      {                          Close(WebSocketCloseReasons.ProtocolError);                          return;                      }                        ParseHeader(readed);                  }              }              catch (InvalidOperationException)              {                  Close(WebSocketCloseReasons.ProtocolError);              }              catch (IOException)              {                  Close(WebSocketCloseReasons.ProtocolError);              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,AwaitHeaderAsync,The following statement contains a magic number: try              {                  while (IsConnected && CurrentHeader == null)                  {                      // try read minimal frame first                      var readed = await _clientStream.ReadAsync(_headerBuffer.Array' _headerBuffer.Offset' 6' cancel).ConfigureAwait(false);                      if (readed == 0 || cancel.IsCancellationRequested)                      {                          Close(WebSocketCloseReasons.ProtocolError);                          return;                      }                        await ParseHeaderAsync(readed).ConfigureAwait(false);                  }              }              catch (InvalidOperationException)              {                  Close(WebSocketCloseReasons.ProtocolError);              }              catch (IOException)              {                  Close(WebSocketCloseReasons.ProtocolError);              }              catch              {                  Close(WebSocketCloseReasons.ProtocolError);                  throw;              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,ParseHeader,The following statement contains a magic number: if (!TryReadHeaderUntil(ref readed' 6))              {                  Close(WebSocketCloseReasons.ProtocolError);                  return;              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,ParseHeaderAsync,The following statement contains a magic number: if (await TryReadHeaderUntilAsync(readed' 6).ConfigureAwait(false) == -1)              {                  Close(WebSocketCloseReasons.ProtocolError);                  return;              }
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,ProcessPingPong,The following statement contains a magic number: if (CurrentHeader.ContentLength < 125)                  contentLength = (int)CurrentHeader.ContentLength;
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,ProcessPingPongAsync,The following statement contains a magic number: if (CurrentHeader.ContentLength < 125)                  contentLength = (int)CurrentHeader.ContentLength;
Magic Number,vtortola.WebSockets.Rfc6455,WebSocketConnectionRfc6455,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Rfc6455\WebSocketConnectionRfc6455.cs,Close,The following statement contains a magic number: try              {                  if (Interlocked.CompareExchange(ref _isClosed' 1' 0) == 1)                      return;                    ((ushort)reason).ToBytesBackwards(_closeBuffer.Array' _closeBuffer.Offset);                  WriteInternal(_closeBuffer' 2' true' false' WebSocketFrameOption.ConnectionClose' WebSocketExtensionFlags.None);                  _clientStream.Close();              }              catch (Exception ex)              {                  Debug.Fail("WebSocketConnectionRfc6455.Close: " + ex.Message);              }
Missing Default,vtortola.WebSockets,HttpHeadersCollection,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Http\HttpHeadersCollection.cs,Add,The following switch statement is missing a default case: switch (name)              {                  case WebSocketHeaders.Origin:                      if (String.Equals(value' "null"' StringComparison.OrdinalIgnoreCase))                          uri = null;                      else if (!Uri.TryCreate(value' UriKind.Absolute' out uri))                          throw new WebSocketException("Cannot parse '" + value + "' as Origin header Uri");                      Origin = uri;                      break;                    case WebSocketHeaders.Host:                      Host = value;                      break;                    case WebSocketHeaders.Version:                      WebSocketVersion = Int16.Parse(value);                      break;              }
Missing Default,vtortola.WebSockets.Rfc6455,WebSocketFrameHeaderFlags,C:\repos\vtortola_WebSocketListener\vtortola.WebSockets\Header\WebSocketFrameHeaderFlags.cs,WebSocketFrameHeaderFlags,The following switch statement is missing a default case: switch (option)              {                  case WebSocketFrameOption.Text:                      OPT1 = true;                      break;                  case WebSocketFrameOption.Binary:                      OPT2 = true;                      break;                  case WebSocketFrameOption.ConnectionClose:                      OPT4 = true;                      break;                  case WebSocketFrameOption.Ping:                      OPT1 = OPT4 = true;                      break;                  case WebSocketFrameOption.Pong:                      OPT4 = OPT2 = true;                      break;                  case WebSocketFrameOption.Continuation:                      RSV1 = RSV2 = RSV3 = false;                      break;              }
