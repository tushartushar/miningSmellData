Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Kinect.Server,Program,C:\repos\LightBuzz_Kinect-HTML5\Kinect.Server\Program.cs,Sensor_AllFramesReady,Cyclomatic complexity of the method is 16
Complex Method,Kinect.Server,SkeletonSerializer,C:\repos\LightBuzz_Kinect-HTML5\Kinect.Server\SkeletonSerializer.cs,Serialize,Cyclomatic complexity of the method is 14
Long Statement,Kinect.Server,ColorSerializer,C:\repos\LightBuzz_Kinect-HTML5\Kinect.Server\ColorSerializer.cs,Serialize,The length of the statement  "		_colorBitmap = new WriteableBitmap (_colorWidth' _colorHeight' Constants.DPI' Constants.DPI' Constants.PIXEL_FORMAT' null); " is 123.
Long Statement,Kinect.Server,DepthSerializer,C:\repos\LightBuzz_Kinect-HTML5\Kinect.Server\DepthSerializer.cs,Serialize,The length of the statement  "		_depthBitmap = new WriteableBitmap (_depthWidth' _depthHeight' Constants.DPI' Constants.DPI' Constants.PIXEL_FORMAT' null); " is 123.
Long Statement,Kinect.Server,DepthSerializer,C:\repos\LightBuzz_Kinect-HTML5\Kinect.Server\DepthSerializer.cs,Serialize,The length of the statement  "	for (int depthIndex = 0' colorIndex = 0; depthIndex < _depthData.Length && colorIndex < _depthPixels.Length; depthIndex++' colorIndex += 4) { " is 141.
Long Statement,Kinect.Server,DepthSerializer,C:\repos\LightBuzz_Kinect-HTML5\Kinect.Server\DepthSerializer.cs,Serialize,The length of the statement  "		byte intensity = (byte)(255 - (255 * Math.Max (depth - Constants.MIN_DEPTH_DISTANCE' 0) / (Constants.MAX_DEPTH_DISTANCE_OFFSET))); " is 130.
Long Statement,Kinect.Server,SkeletonSerializer,C:\repos\LightBuzz_Kinect-HTML5\Kinect.Server\SkeletonSerializer.cs,Serialize,The length of the statement  "				ColorImagePoint colorPoint = mapper.MapSkeletonPointToColorPoint (joint.Position' ColorImageFormat.RgbResolution640x480Fps30); " is 126.
Long Statement,Kinect.Server,SkeletonSerializer,C:\repos\LightBuzz_Kinect-HTML5\Kinect.Server\SkeletonSerializer.cs,Serialize,The length of the statement  "				DepthImagePoint depthPoint = mapper.MapSkeletonPointToDepthPoint (joint.Position' DepthImageFormat.Resolution640x480Fps30); " is 123.
Magic Number,Kinect.Server,ColorSerializer,C:\repos\LightBuzz_Kinect-HTML5\Kinect.Server\ColorSerializer.cs,Serialize,The following statement contains a magic number: if (_colorBitmap == null) {  	_colorWidth = frame.Width;  	_colorHeight = frame.Height;  	_colorStride = _colorWidth * Constants.PIXEL_FORMAT.BitsPerPixel / 8;  	_colorPixels = new byte[frame.PixelDataLength];  	_colorBitmap = new WriteableBitmap (_colorWidth' _colorHeight' Constants.DPI' Constants.DPI' Constants.PIXEL_FORMAT' null);  }  
Magic Number,Kinect.Server,ColorSerializer,C:\repos\LightBuzz_Kinect-HTML5\Kinect.Server\ColorSerializer.cs,Serialize,The following statement contains a magic number: _colorStride = _colorWidth * Constants.PIXEL_FORMAT.BitsPerPixel / 8;  
Magic Number,Kinect.Server,DepthSerializer,C:\repos\LightBuzz_Kinect-HTML5\Kinect.Server\DepthSerializer.cs,Serialize,The following statement contains a magic number: if (_depthBitmap == null) {  	_depthWidth = frame.Width;  	_depthHeight = frame.Height;  	_depthStride = _depthWidth * Constants.PIXEL_FORMAT.BitsPerPixel / 8;  	_depthData = new short[frame.PixelDataLength];  	_depthPixels = new byte[_depthHeight * _depthWidth * 4];  	_depthBitmap = new WriteableBitmap (_depthWidth' _depthHeight' Constants.DPI' Constants.DPI' Constants.PIXEL_FORMAT' null);  }  
Magic Number,Kinect.Server,DepthSerializer,C:\repos\LightBuzz_Kinect-HTML5\Kinect.Server\DepthSerializer.cs,Serialize,The following statement contains a magic number: if (_depthBitmap == null) {  	_depthWidth = frame.Width;  	_depthHeight = frame.Height;  	_depthStride = _depthWidth * Constants.PIXEL_FORMAT.BitsPerPixel / 8;  	_depthData = new short[frame.PixelDataLength];  	_depthPixels = new byte[_depthHeight * _depthWidth * 4];  	_depthBitmap = new WriteableBitmap (_depthWidth' _depthHeight' Constants.DPI' Constants.DPI' Constants.PIXEL_FORMAT' null);  }  
Magic Number,Kinect.Server,DepthSerializer,C:\repos\LightBuzz_Kinect-HTML5\Kinect.Server\DepthSerializer.cs,Serialize,The following statement contains a magic number: _depthStride = _depthWidth * Constants.PIXEL_FORMAT.BitsPerPixel / 8;  
Magic Number,Kinect.Server,DepthSerializer,C:\repos\LightBuzz_Kinect-HTML5\Kinect.Server\DepthSerializer.cs,Serialize,The following statement contains a magic number: _depthPixels = new byte[_depthHeight * _depthWidth * 4];  
Magic Number,Kinect.Server,DepthSerializer,C:\repos\LightBuzz_Kinect-HTML5\Kinect.Server\DepthSerializer.cs,Serialize,The following statement contains a magic number: for (int depthIndex = 0' colorIndex = 0; depthIndex < _depthData.Length && colorIndex < _depthPixels.Length; depthIndex++' colorIndex += 4) {  	// Get the depth value.  	int depth = _depthData [depthIndex] >> DepthImageFrame.PlayerIndexBitmaskWidth;  	// Equal coloring for monochromatic histogram.  	byte intensity = (byte)(255 - (255 * Math.Max (depth - Constants.MIN_DEPTH_DISTANCE' 0) / (Constants.MAX_DEPTH_DISTANCE_OFFSET)));  	_depthPixels [colorIndex + 0] = intensity;  	_depthPixels [colorIndex + 1] = intensity;  	_depthPixels [colorIndex + 2] = intensity;  }  
Magic Number,Kinect.Server,DepthSerializer,C:\repos\LightBuzz_Kinect-HTML5\Kinect.Server\DepthSerializer.cs,Serialize,The following statement contains a magic number: for (int depthIndex = 0' colorIndex = 0; depthIndex < _depthData.Length && colorIndex < _depthPixels.Length; depthIndex++' colorIndex += 4) {  	// Get the depth value.  	int depth = _depthData [depthIndex] >> DepthImageFrame.PlayerIndexBitmaskWidth;  	// Equal coloring for monochromatic histogram.  	byte intensity = (byte)(255 - (255 * Math.Max (depth - Constants.MIN_DEPTH_DISTANCE' 0) / (Constants.MAX_DEPTH_DISTANCE_OFFSET)));  	_depthPixels [colorIndex + 0] = intensity;  	_depthPixels [colorIndex + 1] = intensity;  	_depthPixels [colorIndex + 2] = intensity;  }  
Magic Number,Kinect.Server,DepthSerializer,C:\repos\LightBuzz_Kinect-HTML5\Kinect.Server\DepthSerializer.cs,Serialize,The following statement contains a magic number: for (int depthIndex = 0' colorIndex = 0; depthIndex < _depthData.Length && colorIndex < _depthPixels.Length; depthIndex++' colorIndex += 4) {  	// Get the depth value.  	int depth = _depthData [depthIndex] >> DepthImageFrame.PlayerIndexBitmaskWidth;  	// Equal coloring for monochromatic histogram.  	byte intensity = (byte)(255 - (255 * Math.Max (depth - Constants.MIN_DEPTH_DISTANCE' 0) / (Constants.MAX_DEPTH_DISTANCE_OFFSET)));  	_depthPixels [colorIndex + 0] = intensity;  	_depthPixels [colorIndex + 1] = intensity;  	_depthPixels [colorIndex + 2] = intensity;  }  
Magic Number,Kinect.Server,DepthSerializer,C:\repos\LightBuzz_Kinect-HTML5\Kinect.Server\DepthSerializer.cs,Serialize,The following statement contains a magic number: for (int depthIndex = 0' colorIndex = 0; depthIndex < _depthData.Length && colorIndex < _depthPixels.Length; depthIndex++' colorIndex += 4) {  	// Get the depth value.  	int depth = _depthData [depthIndex] >> DepthImageFrame.PlayerIndexBitmaskWidth;  	// Equal coloring for monochromatic histogram.  	byte intensity = (byte)(255 - (255 * Math.Max (depth - Constants.MIN_DEPTH_DISTANCE' 0) / (Constants.MAX_DEPTH_DISTANCE_OFFSET)));  	_depthPixels [colorIndex + 0] = intensity;  	_depthPixels [colorIndex + 1] = intensity;  	_depthPixels [colorIndex + 2] = intensity;  }  
Magic Number,Kinect.Server,DepthSerializer,C:\repos\LightBuzz_Kinect-HTML5\Kinect.Server\DepthSerializer.cs,Serialize,The following statement contains a magic number: colorIndex += 4
Magic Number,Kinect.Server,DepthSerializer,C:\repos\LightBuzz_Kinect-HTML5\Kinect.Server\DepthSerializer.cs,Serialize,The following statement contains a magic number: _depthPixels [colorIndex + 2] = intensity;  
