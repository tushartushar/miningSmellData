Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ByteCarrot.Masslog.Core.Rules,RuleCodeGenerator,C:\repos\ByteCarrot_Masslog\src\Core\Rules\RuleCodeGenerator.cs,Constructor,Cyclomatic complexity of the method is 27
Complex Method,ByteCarrot.Masslog.Core.Rules,RuleCodeGenerator,C:\repos\ByteCarrot_Masslog\src\Core\Rules\RuleCodeGenerator.cs,Generate,Cyclomatic complexity of the method is 11
Complex Method,ByteCarrot.Masslog.Core.Rules,RuleCodeGenerator,C:\repos\ByteCarrot_Masslog\src\Core\Rules\RuleCodeGenerator.cs,NumberOperation,Cyclomatic complexity of the method is 8
Complex Method,ByteCarrot.Masslog.Core.Rules,RuleCodeGenerator,C:\repos\ByteCarrot_Masslog\src\Core\Rules\RuleCodeGenerator.cs,StringOperation,Cyclomatic complexity of the method is 14
Long Parameter List,ByteCarrot.Masslog.Core.DataAccess,ActivityRepository,C:\repos\ByteCarrot_Masslog\src\Core\DataAccess\ActivityRepository.cs,Search,The method has 11 parameters.
Long Parameter List,ByteCarrot.Masslog.Core.Logging.Behaviors,MonitorBehaviorFactory,C:\repos\ByteCarrot_Masslog\src\Core\Logging\Behaviors\MonitorBehaviorFactory.cs,GetBehaviorFor,The method has 6 parameters.
Long Parameter List,ByteCarrot.Masslog.Core.Rules,RuleCodeGenerator,C:\repos\ByteCarrot_Masslog\src\Core\Rules\RuleCodeGenerator.cs,Constructor,The method has 13 parameters.
Long Parameter List,ByteCarrot.Masslog.Core.Rules,RuleCodeGenerator,C:\repos\ByteCarrot_Masslog\src\Core\Rules\RuleCodeGenerator.cs,Generate,The method has 8 parameters.
Long Statement,ByteCarrot.Masslog.Core.DataAccess,ActivityRepository,C:\repos\ByteCarrot_Masslog\src\Core\DataAccess\ActivityRepository.cs,Search,The length of the statement  "	var linq = Queryable ().Where (query.DateFrom != null' x => x.StartedAt.Date >= query.DateFrom.Value).Where (query.DateTo != null' x => x.StartedAt.Date <= query.DateTo.Value).Where (query.ApplicationId.NotEmpty ()' x => x.ApplicationId == query.ApplicationId).Where (query.Machine.NotEmpty ()' x => x.Machine.ToLower ().Contains (query.Machine.Trim ())).Where (query.User.NotEmpty ()' x => x.User.ToLower ().Contains (query.User.Trim ())).Where (query.HostName.NotEmpty ()' x => x.HostName.ToLower ().Contains (query.HostName.Trim ())).Where (query.Url.NotEmpty ()' x => x.Url.ToLower ().Contains (query.Url.Trim ())).Where (query.StatusCode.HasValue' x => x.StatusCode == query.StatusCode).Where (query.Status.HasValue' x => x.Status == query.Status.Value).Where (query.FailureDeterminedBy.HasValue' x => x.FailureDeterminedBy == query.FailureDeterminedBy); " is 859.
Long Statement,ByteCarrot.Masslog.Core.DataAccess,Repository,C:\repos\ByteCarrot_Masslog\src\Core\DataAccess\Repository.cs,ApplySortingAndPaging,The length of the statement  "	cursor.SetSortOrder (query.SortDirection == SortDirection.Ascending ? SortBy.Ascending (query.SortColumn) : SortBy.Descending (query.SortColumn)); " is 146.
Long Statement,ByteCarrot.Masslog.Core.Infrastructure.Configuration,ConfigurationBase,C:\repos\ByteCarrot_Masslog\src\Core\Infrastructure\Configuration\ConfigurationBase.cs,CreateException,The length of the statement  "	return new ConfigurationErrorsException ("Setting '{0}' does not exist in '{1}' configuration section.".Args (key' sectionName)); " is 129.
Long Statement,ByteCarrot.Masslog.Core.Logging,ApplicationRepositoryExtensions,C:\repos\ByteCarrot_Masslog\src\Core\Logging\ApplicationRepositoryExtensions.cs,FindByIdOrThrowException,The length of the statement  "		throw new ConfigurationErrorsException ("Application ID ({0}) specified in configuration is invalid.".Args (applicationId)); " is 124.
Long Statement,ByteCarrot.Masslog.Core.Logging.Updaters,RouteDataActivityUpdater,C:\repos\ByteCarrot_Masslog\src\Core\Logging\Updaters\RouteDataActivityUpdater.cs,ToList,The length of the statement  "	return dict == null ? new List<NameValue> () : dict.Select (kvp => new NameValue (kvp.Key' kvp.Value as string ?? "<null>")).ToList (); " is 135.
Long Statement,ByteCarrot.Masslog.Core.Logging.Updaters,ServerVariablesActivityUpdater,C:\repos\ByteCarrot_Masslog\src\Core\Logging\Updaters\ServerVariablesActivityUpdater.cs,Update,The length of the statement  "	context.Activity.Variables = request.ServerVariables.AllKeys.Select (x => new NameValue (x' request.ServerVariables [x])).ToList (); " is 132.
Long Statement,ByteCarrot.Masslog.Core.Rules,RuleCodeGenerator,C:\repos\ByteCarrot_Masslog\src\Core\Rules\RuleCodeGenerator.cs,NumberCondition,The length of the statement  "	var property = new CodeFieldReferenceExpression (new CodeVariableReferenceExpression ("context")' Name.Of (expression)); " is 120.
Long Statement,ByteCarrot.Masslog.Core.Rules,RuleCodeGenerator,C:\repos\ByteCarrot_Masslog\src\Core\Rules\RuleCodeGenerator.cs,StringCondition,The length of the statement  "	var property = new CodeFieldReferenceExpression (new CodeVariableReferenceExpression ("context")' Name.Of (expression)); " is 120.
Long Statement,ByteCarrot.Masslog.Core.Rules,RuleCodeGenerator,C:\repos\ByteCarrot_Masslog\src\Core\Rules\RuleCodeGenerator.cs,HeaderCondition,The length of the statement  "	var property = new CodeFieldReferenceExpression (new CodeVariableReferenceExpression ("context")' Name.Of (expression)); " is 120.
Long Statement,ByteCarrot.Masslog.Core.Rules,RuleCodeGenerator,C:\repos\ByteCarrot_Masslog\src\Core\Rules\RuleCodeGenerator.cs,StringOperation,The length of the statement  "	var operation = right.StartsWith ("%") ? (right.EndsWith ("%") ? StringOperationType.Contains : StringOperationType.EndsWith) : (right.EndsWith ("%") ? StringOperationType.StartsWith : StringOperationType.Equals); " is 213.
Long Statement,ByteCarrot.Masslog.Core.Rules,RulesCompiler,C:\repos\ByteCarrot_Masslog\src\Core\Rules\RulesCompiler.cs,Compile,The length of the statement  "	var list = assembly.GetExportedTypes ().Where (x => x.IsClass && x.GetInterfaces ().Any (i => i.Name == interfaceName)).Select (x => (IRule)assembly.CreateInstance (x.ToString ())).ToList (); " is 191.
Long Statement,ByteCarrot.Masslog.Core.Rules,RulesCompiler,C:\repos\ByteCarrot_Masslog\src\Core\Rules\RulesCompiler.cs,Compile,The length of the statement  "	var lib = HttpContext.Current == null ? GetType ().Assembly.GetName ().CodeBase : HttpContext.Current.Server.MapPath ("~/bin"); " is 127.
Long Statement,ByteCarrot.Masslog.Core.Rules,RulesGrammar,C:\repos\ByteCarrot_Masslog\src\Core\Rules\RulesGrammar.cs,WhenGrammar,The length of the statement  "	var responseSizeCondition = _ ("ResponseSizeCondition"' ToTerm ("RESPONSE") + "SIZE" + numberOperator + responseSizeValue); " is 123.
Long Statement,ByteCarrot.Masslog.Core.Rules,RulesGrammar,C:\repos\ByteCarrot_Masslog\src\Core\Rules\RulesGrammar.cs,WhenGrammar,The length of the statement  "	_ (expression' responseSizeCondition | requestSizeCondition | statusCodeCondition | requestHeaderCondition | responseHeaderCondition | urlCondition | machineCondition | logicalOperation | parentheses); " is 201.
Long Statement,ByteCarrot.Masslog.Core.Rules,RulesGrammar,C:\repos\ByteCarrot_Masslog\src\Core\Rules\RulesGrammar.cs,ThenGrammar,The length of the statement  "	var @switch = _ ("Switch"' ignoreRequestBody | ignoreResponseBody | ignoreServerVariables | ignoreRouteData | logRequestBody | logResponseBody | logServerVariables | logRouteData); " is 180.
Long Statement,ByteCarrot.Masslog.Core.Rules,RulesGrammar,C:\repos\ByteCarrot_Masslog\src\Core\Rules\RulesGrammar.cs,ThenGrammar,The length of the statement  "	var switches = _ ("Switches"' MakeListRule (_ ("SwitchesList")' ToTerm ("'")' @switch' TermListOptions.StarList) | ignoreActivity | logActivity); " is 145.
Empty Catch Block,ByteCarrot.Masslog.Core.Logging,OutputFilterStream,C:\repos\ByteCarrot_Masslog\src\Core\Logging\OutputFilterStream.cs,ToString,The method has an empty catch block.
Magic Number,ByteCarrot.Masslog.Core.DomainModel.Repositories,ActivityQuery,C:\repos\ByteCarrot_Masslog\src\Core\DomainModel\Repositories\ActivityQuery.cs,Default,The following statement contains a magic number: return new ActivityQuery {  	DateFrom = DateTime.Now.AddDays (-1)'  	PageNumber = 1'  	PageSize = 25'  	SortColumn = "StartedAt"'  	SortDirection = SortDirection.Descending  };  
Magic Number,ByteCarrot.Masslog.Core.Logging.Updaters,ResponseActivityUpdater,C:\repos\ByteCarrot_Masslog\src\Core\Logging\Updaters\ResponseActivityUpdater.cs,Update,The following statement contains a magic number: if (application.Response.StatusCode < 400) {  	activity.SetStatusToSuccess ();  	return;  }  
Missing Default,ByteCarrot.Masslog.Core.Rules,RuleCodeGenerator,C:\repos\ByteCarrot_Masslog\src\Core\Rules\RuleCodeGenerator.cs,Constructor,The following switch statement is missing a default case: switch (skip.Term.Name) {  case "IgnoreRequestBody":  	constructor.Statements.Add (AssignValueTo (x => x.IgnoreRequestBody' true));  	continue;  case "IgnoreResponseBody":  	constructor.Statements.Add (AssignValueTo (x => x.IgnoreResponseBody' true));  	continue;  case "IgnoreServerVariables":  	constructor.Statements.Add (AssignValueTo (x => x.IgnoreServerVariables' true));  	continue;  case "IgnoreRouteData":  	constructor.Statements.Add (AssignValueTo (x => x.IgnoreRouteData' true));  	continue;  case "LogRequestBody":  	constructor.Statements.Add (AssignValueTo (x => x.IgnoreRequestBody' false));  	continue;  case "LogResponseBody":  	constructor.Statements.Add (AssignValueTo (x => x.IgnoreResponseBody' false));  	continue;  case "LogServerVariables":  	constructor.Statements.Add (AssignValueTo (x => x.IgnoreServerVariables' false));  	continue;  case "LogRouteData":  	constructor.Statements.Add (AssignValueTo (x => x.IgnoreRouteData' false));  	continue;  }  
Missing Default,ByteCarrot.Masslog.Core.Rules,RuleCodeGenerator,C:\repos\ByteCarrot_Masslog\src\Core\Rules\RuleCodeGenerator.cs,Generate,The following switch statement is missing a default case: switch (node.Term.Name) {  case "Expression":  	return Generate (node.ChildNodes [0]);  case "Parentheses":  	return LogicalOperation (node.ChildNodes [1]);  case "LogicalOperation":  	return LogicalOperation (node);  case "UrlCondition":  	return StringCondition (node' x => x.Url);  case "MachineCondition":  	return StringCondition (node' x => x.Machine);  case "RequestHeaderCondition":  	return HeaderCondition (node.ChildNodes [1]' x => x.RequestHeaders);  case "ResponseHeaderCondition":  	return HeaderCondition (node.ChildNodes [1]' x => x.ResponseHeaders);  case "StatusCodeCondition":  	return NumberCondition (node' x => x.StatusCode);  case "RequestSizeCondition":  	return NumberCondition (node' x => x.RequestSize);  case "ResponseSizeCondition":  	return NumberCondition (node' x => x.ResponseSize);  case "StarOperator":  	return _ (true);  }  
Missing Default,ByteCarrot.Masslog.Core.Rules,RuleCodeGenerator,C:\repos\ByteCarrot_Masslog\src\Core\Rules\RuleCodeGenerator.cs,StringOperation,The following switch statement is missing a default case: switch (operation) {  case StringOperationType.Equals:  	expression = Equals (left' right);  	break;  case StringOperationType.Contains:  	expression = Contains (left' right);  	break;  case StringOperationType.StartsWith:  	expression = StartsWith (left' right);  	break;  case StringOperationType.EndsWith:  	expression = EndsWith (left' right);  	break;  }  
