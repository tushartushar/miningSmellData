Implementation smell,Namespace,Class,File,Method,Description
Long Statement,AgentMulder.Containers.CastleWindsor.Patterns.Component.ComponentFor,ComponentForBasePattern,F:\newReposMay17\hmemcpy_AgentMulder\src\AgentMulder.Containers.CastleWindsor\Patterns\Component\ComponentFor\ComponentForBasePattern.cs,GetComponentRegistrations,The length of the statement  "			var implementedByRegistration = implementedByPattern.GetComponentRegistrations (registrationRootElement).Cast<ComponentRegistration> ().FirstOrDefault (); " is 154.
Long Statement,AgentMulder.Containers.CastleWindsor.Patterns.Component.ComponentFor,ComponentForGeneric,F:\newReposMay17\hmemcpy_AgentMulder\src\AgentMulder.Containers.CastleWindsor\Patterns\Component\ComponentFor\ComponentForGeneric.cs,CreatePattern,The length of the statement  "	string patternText = forwarderPlaceholders.Length == 0 ? "$component$.For<$service$>()" : string.Format ("$component$.For<$service$' {0}>()"' patternFragment); " is 159.
Long Statement,AgentMulder.Containers.CastleWindsor.Patterns.Component.ComponentFor,ComponentForGeneric,F:\newReposMay17\hmemcpy_AgentMulder\src\AgentMulder.Containers.CastleWindsor\Patterns\Component\ComponentFor\ComponentForGeneric.cs,CreatePattern,The length of the statement  "	var pattern = new CSharpStructuralSearchPattern (patternText' new ExpressionPlaceholder ("component"' "Castle.MicroKernel.Registration.Component")' new TypePlaceholder ("service")); " is 181.
Long Statement,AgentMulder.Containers.CastleWindsor.Patterns.FromTypes,From,F:\newReposMay17\hmemcpy_AgentMulder\src\AgentMulder.Containers.CastleWindsor\Patterns\FromTypes\From.cs,CreatePattern,The length of the statement  "	return new CSharpStructuralSearchPattern ("$qualifier$.From($services$)"' new ExpressionPlaceholder ("qualifier"' qualiferType)' new ArgumentPlaceholder ("services"' -1' -1)); " is 175.
Long Statement,AgentMulder.Containers.CastleWindsor.Patterns.FromTypes,FromAssembly,F:\newReposMay17\hmemcpy_AgentMulder\src\AgentMulder.Containers.CastleWindsor\Patterns\FromTypes\FromAssembly.cs,CreatePattern,The length of the statement  "	return new CSharpStructuralSearchPattern ("$qualifier$.FromAssembly($assembly$)"' new ExpressionPlaceholder ("qualifier"' qualiferType' true)' new ArgumentPlaceholder ("assembly"' 1' 1)); " is 187.
Long Statement,AgentMulder.Containers.CastleWindsor.Patterns.FromTypes,FromAssemblyContainingGeneric,F:\newReposMay17\hmemcpy_AgentMulder\src\AgentMulder.Containers.CastleWindsor\Patterns\FromTypes\FromAssemblyContainingGeneric.cs,CreatePattern,The length of the statement  "	return new CSharpStructuralSearchPattern ("$qualifier$.FromAssemblyContaining<$type$>()"' new ExpressionPlaceholder ("qualifier"' qualiferType)' new TypePlaceholder ("type")); " is 175.
Long Statement,AgentMulder.Containers.CastleWindsor.Patterns.FromTypes,FromAssemblyContainingNonGeneric,F:\newReposMay17\hmemcpy_AgentMulder\src\AgentMulder.Containers.CastleWindsor\Patterns\FromTypes\FromAssemblyContainingNonGeneric.cs,CreatePattern,The length of the statement  "	return new CSharpStructuralSearchPattern ("$qualifier$.FromAssemblyContaining($argument$)"' new ExpressionPlaceholder ("qualifier"' qualiferType)' new ArgumentPlaceholder ("argument"' 1' 1)); " is 191.
Long Statement,AgentMulder.Containers.CastleWindsor.Patterns.FromTypes,FromAssemblyNamed,F:\newReposMay17\hmemcpy_AgentMulder\src\AgentMulder.Containers.CastleWindsor\Patterns\FromTypes\FromAssemblyNamed.cs,CreatePattern,The length of the statement  "	return new CSharpStructuralSearchPattern ("$qualifer$.FromAssemblyNamed($assemblyName$)"' new ExpressionPlaceholder ("qualifer"' qualiferType)' new ArgumentPlaceholder ("assemblyName"' 1' 1)); " is 192.
Long Statement,AgentMulder.Containers.CastleWindsor.Patterns.FromTypes,FromThisAssembly,F:\newReposMay17\hmemcpy_AgentMulder\src\AgentMulder.Containers.CastleWindsor\Patterns\FromTypes\FromThisAssembly.cs,CreatePattern,The length of the statement  "	return new CSharpStructuralSearchPattern ("$qualifier$.FromThisAssembly()"' new ExpressionPlaceholder ("qualifier"' qualiferType)); " is 131.
Long Statement,AgentMulder.Containers.CastleWindsor.Patterns.FromTypes,FromTypesPatternBase,F:\newReposMay17\hmemcpy_AgentMulder\src\AgentMulder.Containers.CastleWindsor\Patterns\FromTypes\FromTypesPatternBase.cs,GetComponentRegistrations,The length of the statement  "				IEnumerable<ITypeElement> typeElements = matchedArguments.SelectMany (argument => argument.Value.GetRegisteredTypes ()); " is 120.
Long Statement,AgentMulder.Containers.CastleWindsor.Patterns,WindsorContainerRegisterPattern,F:\newReposMay17\hmemcpy_AgentMulder\src\AgentMulder.Containers.CastleWindsor\Patterns\WindsorContainerRegisterPattern.cs,GetComponentRegistrations,The length of the statement  "		IEnumerable<IInvocationExpression> invocationExpressions = match.GetMatchedElementList ("arguments").Cast<ICSharpArgument> ().Select (argument => argument.Value).OfType<IInvocationExpression> ().ToList (); " is 205.
Magic Number,AgentMulder.Containers.CastleWindsor.Helpers,InNamespaceExtractor,F:\newReposMay17\hmemcpy_AgentMulder\src\AgentMulder.Containers.CastleWindsor\Helpers\InNamespaceExtractor.cs,ExtractNamespaceElement,The following statement contains a magic number: if (arguments.Length == 2) {  	ICSharpArgument boolArgument = arguments [1];  	if (boolArgument.Value.ConstantValue.IsBoolean ()) {  		includeSubnamespaces = Convert.ToBoolean (boolArgument.Value.ConstantValue.Value);  	}  }  
Magic Number,AgentMulder.Containers.CastleWindsor.Helpers,InSameNamespaceAsNonGenericExtractor,F:\newReposMay17\hmemcpy_AgentMulder\src\AgentMulder.Containers.CastleWindsor\Helpers\InSameNamespaceAsGenericExtractor.cs,GetNamespace,The following statement contains a magic number: if (arguments.Length == 2) {  	ICSharpArgument boolArgument = arguments [1];  	if (boolArgument.Value.ConstantValue != null && boolArgument.Value.ConstantValue.IsBoolean ()) {  		includeSubnamespaces = Convert.ToBoolean (boolArgument.Value.ConstantValue.Value);  	}  }  
Magic Number,AgentMulder.Containers.CastleWindsor.Providers,ComponentRegistrationProvider,F:\newReposMay17\hmemcpy_AgentMulder\src\AgentMulder.Containers.CastleWindsor\Providers\ComponentRegistrationProvider.cs,GetRegistrationPatterns,The following statement contains a magic number: return new ComponentForBasePattern[] {  	new ComponentForNonGeneric (implementedByPatterns)'  	new ComponentForGeneric (implementedByPatterns)'  	// Component.For<>  	new ComponentForGeneric (1' implementedByPatterns)'  	// Component.For<'>  	new ComponentForGeneric (2' implementedByPatterns)'  	// Component.For<''>  	new ComponentForGeneric (3' implementedByPatterns)'  	// Component.For<'''>  	new ComponentForGeneric (4' implementedByPatterns)'  // Component.For<''''>  };  
Magic Number,AgentMulder.Containers.CastleWindsor.Providers,ComponentRegistrationProvider,F:\newReposMay17\hmemcpy_AgentMulder\src\AgentMulder.Containers.CastleWindsor\Providers\ComponentRegistrationProvider.cs,GetRegistrationPatterns,The following statement contains a magic number: return new ComponentForBasePattern[] {  	new ComponentForNonGeneric (implementedByPatterns)'  	new ComponentForGeneric (implementedByPatterns)'  	// Component.For<>  	new ComponentForGeneric (1' implementedByPatterns)'  	// Component.For<'>  	new ComponentForGeneric (2' implementedByPatterns)'  	// Component.For<''>  	new ComponentForGeneric (3' implementedByPatterns)'  	// Component.For<'''>  	new ComponentForGeneric (4' implementedByPatterns)'  // Component.For<''''>  };  
Magic Number,AgentMulder.Containers.CastleWindsor.Providers,ComponentRegistrationProvider,F:\newReposMay17\hmemcpy_AgentMulder\src\AgentMulder.Containers.CastleWindsor\Providers\ComponentRegistrationProvider.cs,GetRegistrationPatterns,The following statement contains a magic number: return new ComponentForBasePattern[] {  	new ComponentForNonGeneric (implementedByPatterns)'  	new ComponentForGeneric (implementedByPatterns)'  	// Component.For<>  	new ComponentForGeneric (1' implementedByPatterns)'  	// Component.For<'>  	new ComponentForGeneric (2' implementedByPatterns)'  	// Component.For<''>  	new ComponentForGeneric (3' implementedByPatterns)'  	// Component.For<'''>  	new ComponentForGeneric (4' implementedByPatterns)'  // Component.For<''''>  };  
