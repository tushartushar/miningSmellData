Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Shiragame.Builder,Program,D:\research\architectureSmells\repos1\SnowflakePowered_snowflake\src\Snowflake.Tooling.Shiragame\Program.cs,Main,Cyclomatic complexity of the method is 12
Complex Method,Shiragame.Builder.Parser,GameTdbParser,D:\research\architectureSmells\repos1\SnowflakePowered_snowflake\src\Snowflake.Tooling.Shiragame\Parser\GameTdbParser.cs,GetSonyRegionCode,Cyclomatic complexity of the method is 8
Complex Method,Shiragame.Builder.Parser,GameTdbParser,D:\research\architectureSmells\repos1\SnowflakePowered_snowflake\src\Snowflake.Tooling.Shiragame\Parser\GameTdbParser.cs,GetNintendoRegionCode,Cyclomatic complexity of the method is 13
Long Parameter List,Shiragame,RomInfo,D:\research\architectureSmells\repos1\SnowflakePowered_snowflake\src\Snowflake.Tooling.Shiragame\RomInfo.cs,RomInfo,The method has 7 parameters. Parameters: platformId' crc32' md5' sha1' region' mimetype' fileName
Magic Number,Shiragame.Builder,RegionParser,D:\research\architectureSmells\repos1\SnowflakePowered_snowflake\src\Snowflake.Tooling.Shiragame\RegionParser.cs,ParseRegion,The following statement contains a magic number: var validMatch = (from Match tagMatch in tagData                  let match = tagMatch.Groups[2].Value                  from regionCode in from regionCode in match.Split('''' '-') select regionCode.Trim()                  where regionCode.Length != 2 || regionCode.ToLower().ToTitleCase() != regionCode                    // allow FR & France to be parsed' but not Fr inside En'Fr'De' etc..                  let isoRegion = RegionParser.ConvertToRegionCode(regionCode.ToUpperInvariant())                  where isoRegion != null                  select isoRegion).ToList();
Magic Number,Shiragame.Builder,RegionParser,D:\research\architectureSmells\repos1\SnowflakePowered_snowflake\src\Snowflake.Tooling.Shiragame\RegionParser.cs,ParseRegion,The following statement contains a magic number: var validMatch = (from Match tagMatch in tagData                  let match = tagMatch.Groups[2].Value                  from regionCode in from regionCode in match.Split('''' '-') select regionCode.Trim()                  where regionCode.Length != 2 || regionCode.ToLower().ToTitleCase() != regionCode                    // allow FR & France to be parsed' but not Fr inside En'Fr'De' etc..                  let isoRegion = RegionParser.ConvertToRegionCode(regionCode.ToUpperInvariant())                  where isoRegion != null                  select isoRegion).ToList();
Magic Number,Shiragame.Builder,ShiragameDb,D:\research\architectureSmells\repos1\SnowflakePowered_snowflake\src\Snowflake.Tooling.Shiragame\ShiragameDb.cs,UnixTimeNow,The following statement contains a magic number: var timeSpan = DateTime.UtcNow - new DateTime(1970' 1' 1' 0' 0' 0).ToUniversalTime();
Magic Number,Shiragame.Builder.Parser,CmpParser,D:\research\architectureSmells\repos1\SnowflakePowered_snowflake\src\Snowflake.Tooling.Shiragame\Parser\CmpParser.cs,GetGameEntries,The following statement contains a magic number: var lines = line.Trim().Split(new char[] {' '}' 2' StringSplitOptions.None);
Magic Number,Shiragame.Builder.Parser,GameTdbParser,D:\research\architectureSmells\repos1\SnowflakePowered_snowflake\src\Snowflake.Tooling.Shiragame\Parser\GameTdbParser.cs,GetSonyRegionCode,The following statement contains a magic number: char region = serial[2];
Magic Number,Shiragame.Builder.Parser,GameTdbParser,D:\research\architectureSmells\repos1\SnowflakePowered_snowflake\src\Snowflake.Tooling.Shiragame\Parser\GameTdbParser.cs,GetNintendoRegionCode,The following statement contains a magic number: char region = serial[3];
Magic Number,Shiragame.Builder.Parser,IdlistParser,D:\research\architectureSmells\repos1\SnowflakePowered_snowflake\src\Snowflake.Tooling.Shiragame\Parser\IdlistParser.cs,GetSerial,The following statement contains a magic number: var line = idlist.Split(new[] {' '}' 2);
Magic Number,Shiragame.Builder.Parser,IdlistParser,D:\research\architectureSmells\repos1\SnowflakePowered_snowflake\src\Snowflake.Tooling.Shiragame\Parser\IdlistParser.cs,GetSonyRegionCode,The following statement contains a magic number: char region = serial[2];
