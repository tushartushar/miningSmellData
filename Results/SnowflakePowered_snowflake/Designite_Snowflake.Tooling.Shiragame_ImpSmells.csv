Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Shiragame.Builder,Program,C:\repos\SnowflakePowered_snowflake\src\Snowflake.Tooling.Shiragame\Program.cs,Main,Cyclomatic complexity of the method is 10
Long Parameter List,Shiragame,RomInfo,C:\repos\SnowflakePowered_snowflake\src\Snowflake.Tooling.Shiragame\RomInfo.cs,RomInfo,The method has 7 parameters. Parameters: platformId' crc32' md5' sha1' region' mimetype' fileName
Long Statement,Shiragame.Builder.Parser,DatParser,C:\repos\SnowflakePowered_snowflake\src\Snowflake.Tooling.Shiragame\Parser\DatParser.cs,GetMimeType,The length of the statement  "            return DatParser.stoneProvider.Platforms[platformId].FileTypes.ContainsKey(Path.GetExtension(filename)) ? DatParser.stoneProvider.Platforms[platformId].FileTypes[Path.GetExtension(filename)] : null; " is 198.
Magic Number,Shiragame.Builder,RegionParser,C:\repos\SnowflakePowered_snowflake\src\Snowflake.Tooling.Shiragame\RegionParser.cs,ParseRegion,The following statement contains a magic number: var validMatch = (from Match tagMatch in tagData                                let match = tagMatch.Groups[2].Value                                from regionCode in from regionCode in match.Split('''' '-') select regionCode.Trim()                                where regionCode.Length != 2 || regionCode.ToLower().ToTitleCase() != regionCode                                  // allow FR & France to be parsed' but not Fr inside En'Fr'De' etc..                                let isoRegion = RegionParser.ConvertToRegionCode(regionCode.ToUpperInvariant())                                where isoRegion != null                                select isoRegion).ToList();
Magic Number,Shiragame.Builder,RegionParser,C:\repos\SnowflakePowered_snowflake\src\Snowflake.Tooling.Shiragame\RegionParser.cs,ParseRegion,The following statement contains a magic number: var validMatch = (from Match tagMatch in tagData                                let match = tagMatch.Groups[2].Value                                from regionCode in from regionCode in match.Split('''' '-') select regionCode.Trim()                                where regionCode.Length != 2 || regionCode.ToLower().ToTitleCase() != regionCode                                  // allow FR & France to be parsed' but not Fr inside En'Fr'De' etc..                                let isoRegion = RegionParser.ConvertToRegionCode(regionCode.ToUpperInvariant())                                where isoRegion != null                                select isoRegion).ToList();
Magic Number,Shiragame.Builder,ShiragameDb,C:\repos\SnowflakePowered_snowflake\src\Snowflake.Tooling.Shiragame\ShiragameDb.cs,UnixTimeNow,The following statement contains a magic number: var timeSpan = DateTime.UtcNow - new DateTime(1970' 1' 1' 0' 0' 0).ToUniversalTime();
Magic Number,Shiragame.Builder.Parser,CmpParser,C:\repos\SnowflakePowered_snowflake\src\Snowflake.Tooling.Shiragame\Parser\CmpParser.cs,GetGameEntries,The following statement contains a magic number: foreach (string line in datContents)              {                  if (line.EndsWith("("))                  {                      gameEntry = new Dictionary<string' string>();                      continue;                  }                    if (line.Equals(")"))                  {                      yield return gameEntry;                      continue;                  }                    if (string.IsNullOrWhiteSpace(line))                  {                      continue;                  }                    var lines = line.Trim().Split(new char[] { ' ' }' 2' StringSplitOptions.None);                  if (lines[0].Equals("rom"))                  {                      continue;                  }                    gameEntry.Add(lines[0]' lines[1].Trim('"'));              }
Magic Number,Shiragame.Builder.Parser,GameTdbParser,C:\repos\SnowflakePowered_snowflake\src\Snowflake.Tooling.Shiragame\Parser\GameTdbParser.cs,GetSonyRegionCode,The following statement contains a magic number: char region = serial[2];
Magic Number,Shiragame.Builder.Parser,GameTdbParser,C:\repos\SnowflakePowered_snowflake\src\Snowflake.Tooling.Shiragame\Parser\GameTdbParser.cs,GetNintendoRegionCode,The following statement contains a magic number: char region = serial[3];
Magic Number,Shiragame.Builder.Parser,IdlistParser,C:\repos\SnowflakePowered_snowflake\src\Snowflake.Tooling.Shiragame\Parser\IdlistParser.cs,GetSerial,The following statement contains a magic number: var line = idlist.Split(new [] { ' ' }' 2);
Magic Number,Shiragame.Builder.Parser,IdlistParser,C:\repos\SnowflakePowered_snowflake\src\Snowflake.Tooling.Shiragame\Parser\IdlistParser.cs,GetSonyRegionCode,The following statement contains a magic number: char region = serial[2];
