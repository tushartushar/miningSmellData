Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Microsoft.ConnectTheDots.Test,CoreTest,C:\research\architectureSmells\repos\MSOpenTech_connectthedots\Devices\Gateways\GatewayService\Tests\CoreTest\CoreTest.cs,TestRepeatSend,The length of the statement  "                        // "{\"unitofmeasure\":\"%\"'\"location\":\"Olivier's office\"'\"measurename\":\"Humidity\"'\"timecreated\":\"2/26/2015 12:50:29 AM\"'\"organization\":\"MSOpenTech\"'\"guid\":\"00000000-0000-0000-0000-000000000000\"'\"value\":39.600000000000001'\"displayname\":\"NETMF\"}"" is 272.
Long Statement,Microsoft.ConnectTheDots.Test,CoreTest,C:\research\architectureSmells\repos\MSOpenTech_connectthedots\Devices\Gateways\GatewayService\Tests\CoreTest\CoreTest.cs,TestDeviceAdapter,The length of the statement  "                DeviceAdapterLoader dataIntakeLoader = new DeviceAdapterLoader( Loader.GetSources( )' Loader.GetEndpoints( )' _logger );" is 120.
Long Statement,Microsoft.ConnectTheDots.Test,Loader,C:\research\architectureSmells\repos\MSOpenTech_connectthedots\Devices\Gateways\GatewayService\Tests\CoreTest\Utils\Loader\Loader.cs,GetDataTransformsConfig,The length of the statement  "            DataTransformsConfigSection section = ConfigurationManager.GetSection( "dataTransformsConfig" ) as DataTransformsConfigSection;" is 127.
Long Statement,Microsoft.ConnectTheDots.Test,TestRunner,C:\research\architectureSmells\repos\MSOpenTech_connectthedots\Devices\Gateways\GatewayService\Tests\CoreTest\TestRunner.cs,TestWebService,The length of the statement  "            WebServiceTest webServiceTest = new WebServiceTest( "http://localhost:8000/GatewayService/API/Enqueue?jsonData=" + serializedData' logger );" is 140.
Long Statement,Microsoft.ConnectTheDots.Test,TestRunner,C:\research\architectureSmells\repos\MSOpenTech_connectthedots\Devices\Gateways\GatewayService\Tests\CoreTest\TestRunner.cs,Main,The length of the statement  "            TunableLogger.LoggingLevel loggingLevel = TunableLogger.LevelFromString( ConfigurationManager.AppSettings.Get( "LoggingLevel" ) );" is 130.
Long Statement,Microsoft.ConnectTheDots.Test,TestRunner,C:\research\architectureSmells\repos\MSOpenTech_connectthedots\Devices\Gateways\GatewayService\Tests\CoreTest\TestRunner.cs,Main,The length of the statement  "            logger.Level = ( loggingLevel != TunableLogger.LoggingLevel.Undefined ) ? loggingLevel : TunableLogger.LoggingLevel.Errors;" is 123.
Long Statement,Microsoft.ConnectTheDots.Test,WebServiceTest,C:\research\architectureSmells\repos\MSOpenTech_connectthedots\Devices\Gateways\GatewayService\Tests\CoreTest\WebServiceTest.cs,Run,The length of the statement  "                    Console.WriteLine( String.Format( "Sent {0} messages' sleeping now for {1} minutes"' _totalMessagesSent' sleepMS / MINUTES_TO_MILLISECONDS ) );" is 143.
Magic Number,Microsoft.ConnectTheDots.Test,CoreTest,C:\research\architectureSmells\repos\MSOpenTech_connectthedots\Devices\Gateways\GatewayService\Tests\CoreTest\CoreTest.cs,TestRepeatSend,The following statement contains a magic number: const float mean = 39.6001f;
Magic Number,Microsoft.ConnectTheDots.Test,CoreTest,C:\research\architectureSmells\repos\MSOpenTech_connectthedots\Devices\Gateways\GatewayService\Tests\CoreTest\CoreTest.cs,TestRepeatSend,The following statement contains a magic number: const int range  = 10;
Magic Number,Microsoft.ConnectTheDots.Test,CoreTest,C:\research\architectureSmells\repos\MSOpenTech_connectthedots\Devices\Gateways\GatewayService\Tests\CoreTest\CoreTest.cs,TestRepeatSend,The following statement contains a magic number: Random rand = new Random( ( int )( DateTime.Now.Ticks >> 32 ) );
Magic Number,Microsoft.ConnectTheDots.Test,CoreTest,C:\research\architectureSmells\repos\MSOpenTech_connectthedots\Devices\Gateways\GatewayService\Tests\CoreTest\CoreTest.cs,TestRepeatSend,The following statement contains a magic number: bool add = ( rand.Next( ) % 2 ) == 0;
Magic Number,Microsoft.ConnectTheDots.Test,CoreTest,C:\research\architectureSmells\repos\MSOpenTech_connectthedots\Devices\Gateways\GatewayService\Tests\CoreTest\CoreTest.cs,TestDeviceAdapter,The following statement contains a magic number: _totalMessagesToSend += 5;
Magic Number,Microsoft.ConnectTheDots.Test,RealDataTest,C:\research\architectureSmells\repos\MSOpenTech_connectthedots\Devices\Gateways\GatewayService\Tests\CoreTest\RealDataTest.cs,TestRealTimeData,The following statement contains a magic number: const int INITIAL_MESSAGES_BOUND = 5;
Magic Number,Microsoft.ConnectTheDots.Test,RealDataTest,C:\research\architectureSmells\repos\MSOpenTech_connectthedots\Devices\Gateways\GatewayService\Tests\CoreTest\RealDataTest.cs,TestRealTimeData,The following statement contains a magic number: const int STOP_TIMEOUT_MS = 5000;
Magic Number,Microsoft.ConnectTheDots.Test,SocketTest,C:\research\architectureSmells\repos\MSOpenTech_connectthedots\Devices\Gateways\GatewayService\Tests\CoreTest\SocketTest.cs,TestReceiveMessagesFromSocketDevice,The following statement contains a magic number: const int MESSAGES_TO_SEND_BY_SOCKET = 5;
Magic Number,Microsoft.ConnectTheDots.Test,RandomSensorDataGenerator,C:\research\architectureSmells\repos\MSOpenTech_connectthedots\Devices\Gateways\GatewayService\Tests\CoreTest\Utils\Generators\RandomSensorDataGenerator.cs,RandomSensorDataGenerator,The following statement contains a magic number: int rint = i % 2;
Magic Number,Microsoft.ConnectTheDots.Test,RandomSensorDataGenerator,C:\research\architectureSmells\repos\MSOpenTech_connectthedots\Devices\Gateways\GatewayService\Tests\CoreTest\Utils\Generators\RandomSensorDataGenerator.cs,RandomSensorDataGenerator,The following statement contains a magic number: _Guids[ i ] = ( new Guid( _Random.Next( )' 0' 0' new byte[ 8 ] ) ).ToString( );
Magic Number,Microsoft.ConnectTheDots.Test,RandomSensorDataGenerator,C:\research\architectureSmells\repos\MSOpenTech_connectthedots\Devices\Gateways\GatewayService\Tests\CoreTest\Utils\Generators\RandomSensorDataGenerator.cs,Generate,The following statement contains a magic number: SensorDataContract sensorData = new SensorDataContract             {                 MeasureName = _MeasureName[ device ]'                 UnitOfMeasure = _UnitOfMeasure[ device ]'                 DisplayName = _DisplayName[ device ]'                 Guid = _Guids[ device ]'                 Value = _Random.Next( ) % 1000 - 500'                 Location = "here"'                 Organization = "contoso"'                 TimeCreated = DateTime.UtcNow             };
Magic Number,Microsoft.ConnectTheDots.Test,RandomSensorDataGenerator,C:\research\architectureSmells\repos\MSOpenTech_connectthedots\Devices\Gateways\GatewayService\Tests\CoreTest\Utils\Generators\RandomSensorDataGenerator.cs,Generate,The following statement contains a magic number: SensorDataContract sensorData = new SensorDataContract             {                 MeasureName = _MeasureName[ device ]'                 UnitOfMeasure = _UnitOfMeasure[ device ]'                 DisplayName = _DisplayName[ device ]'                 Guid = _Guids[ device ]'                 Value = _Random.Next( ) % 1000 - 500'                 Location = "here"'                 Organization = "contoso"'                 TimeCreated = DateTime.UtcNow             };
Missing Default,Microsoft.ConnectTheDots.Test,TestRunner,C:\research\architectureSmells\repos\MSOpenTech_connectthedots\Devices\Gateways\GatewayService\Tests\CoreTest\TestRunner.cs,Main,The following switch statement is missing a default case: switch( t.Substring( 0' 1 ).Replace( "/"' "-" ) + t.Substring( 1 ).ToLowerInvariant( ) )                 {                     case "-MockData":                         TestMockData( logger );                         break;                     case "-WebService":                         TestWebService( logger );                         break;                     case "-Socket":                         TestSocket( logger );                         break;                     case "-AllTimeBounded":                         TestMockData( logger );                         TestWebService( logger );                         TestSocket( logger );                         break;                     case "-RealData":                         TestRealData( logger );                         break;                 }
