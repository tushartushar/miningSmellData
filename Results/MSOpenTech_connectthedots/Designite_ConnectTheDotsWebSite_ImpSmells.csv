Implementation smell,Namespace,Class,File,Method,Description
Long Method,ConnectTheDotsWebSite,WebSocketEventProcessor,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\WebSocketEventProcessor.cs,ProcessEventsAsync,The method has 205 lines of code.
Complex Method,ConnectTheDotsWebSite,WebSocketEventProcessor,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\WebSocketEventProcessor.cs,ProcessEventsAsync,Cyclomatic complexity of the method is 16
Long Identifier,ConnectTheDotsWebSite,Default,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\Default.aspx.cs,,The length of the parameter ForceSocketCloseOnUserActionsTimeout is 36.
Long Statement,ConnectTheDotsWebSite,Global,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\Global.asax.cs,Application_Start,The length of the statement  "            // Setup a timer to ping IoTHub for list of devices every second (will effectively ping IoTHub if flag refreshDevicesList is true) " is 130.
Long Statement,ConnectTheDotsWebSite,Global,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\Global.asax.cs,Application_Start,The length of the statement  "            pingIoTHubTimer.Elapsed += (Object source' System.Timers.ElapsedEventArgs args) => { if (Global.globalSettings.RefreshDevicesList) { Global.globalSettings.RefreshDevicesList = false; Global.UpdateDeviceListFromIoTHub(); }  }; " is 225.
Long Statement,ConnectTheDotsWebSite,Global,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\Global.asax.cs,CreateEventProcessorHostClient,The length of the statement  "            Trace.TraceInformation("Creating EventProcessorHost: {0}' {1}' {2}"' this.Server.MachineName' eventHubSettings.name' eventHubSettings.consumerGroup); " is 149.
Long Statement,ConnectTheDotsWebSite,Global,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\Global.asax.cs,CreateEventProcessorHostClient,The length of the statement  "                //eventHubSettings.processorHost.RegisterEventProcessorAsync<WebSocketEventProcessor>(eventHubSettings.processorHostOptions).Wait(); " is 132.
Long Statement,ConnectTheDotsWebSite,Global,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\Global.asax.cs,GetAppSettings,The length of the statement  "                eventHubDevicesSettings.connectionString = CloudConfigurationManager.GetSetting("Azure.IoT.IoTHub.EventHub.ConnectionString"); " is 126.
Long Statement,ConnectTheDotsWebSite,Global,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\Global.asax.cs,GetAppSettings,The length of the statement  "                eventHubDevicesSettings.consumerGroup = CloudConfigurationManager.GetSetting("Azure.IoT.IoTHub.EventHub.ConsumerGroup"); " is 120.
Long Statement,ConnectTheDotsWebSite,Global,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\Global.asax.cs,GetAppSettings,The length of the statement  "                eventHubDevicesSettings.storageConnectionString = CloudConfigurationManager.GetSetting("Azure.Storage.ConnectionString"); " is 121.
Long Statement,ConnectTheDotsWebSite,Global,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\Global.asax.cs,GetAppSettings,The length of the statement  "                // eventHubDevicesSettings.namespaceManager = NamespaceManager.CreateFromConnectionString(CloudConfigurationManager.GetSetting("Microsoft.ServiceBus.ConnectionString")); " is 169.
Long Statement,ConnectTheDotsWebSite,Global,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\Global.asax.cs,GetAppSettings,The length of the statement  "                eventHubAlertsSettings.connectionString = CloudConfigurationManager.GetSetting("Azure.ServiceBus.EventHub.ConnectionString"); " is 125.
Long Statement,ConnectTheDotsWebSite,Global,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\Global.asax.cs,GetAppSettings,The length of the statement  "                eventHubAlertsSettings.storageConnectionString = CloudConfigurationManager.GetSetting("Azure.Storage.ConnectionString"); " is 120.
Long Statement,ConnectTheDotsWebSite,Global,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\Global.asax.cs,GetAppSettings,The length of the statement  "                //eventHubAlertsSettings.namespaceManager = NamespaceManager.CreateFromConnectionString(CloudConfigurationManager.GetSetting("Microsoft.ServiceBus.ConnectionString")); " is 167.
Long Statement,ConnectTheDotsWebSite,WebSocketEventProcessor,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\WebSocketEventProcessor.cs,ProcessEventsAsync,The length of the statement  "                                    Trace.TraceError("Error notifying device {0}' check that message receiving is implemented on the device"' messagePayload["guid"].ToString()); " is 141.
Long Statement,ConnectTheDotsWebSite,WebSocketEventProcessor,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\WebSocketEventProcessor.cs,ProcessEventsAsync,The length of the statement  "                                                (dict.ContainsKey("guid") && messagePayload.ContainsKey("guid") && messagePayload["guid"].ToString() == dict["guid"].ToString()) " is 128.
Long Statement,ConnectTheDotsWebSite,WebSocketEventProcessor,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\WebSocketEventProcessor.cs,ProcessEventsAsync,The length of the statement  "                                                (dict.ContainsKey("measurename") && messagePayload.ContainsKey("measurename") && messagePayload["measurename"].ToString() == dict["measurename"].ToString()) " is 156.
Long Statement,ConnectTheDotsWebSite,WebSocketEventProcessor,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\WebSocketEventProcessor.cs,ProcessEventsAsync,The length of the statement  "                                                (!messagePayload.ContainsKey("displayname") || dict.ContainsKey("displayname") && messagePayload["measurename"].ToString() == dict["measurename"].ToString()) " is 157.
Long Statement,ConnectTheDotsWebSite,WebSocketEventProcessor,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\WebSocketEventProcessor.cs,ProcessEventsAsync,The length of the statement  "                                //        messagePayload["value"] = MinMaxValue[messagePayload["guid"].ToString()].max * (1.01 + 0.05 * rnd.Next(100) / 100); " is 125.
Long Statement,ConnectTheDotsWebSite,WebSocketEventProcessor,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\WebSocketEventProcessor.cs,ProcessEventsAsync,The length of the statement  "                                //        messagePayload["value"] = MinMaxValue[messagePayload["guid"].ToString()].min * (0.99 - 0.05 * rnd.Next(100) / 100); " is 125.
Long Statement,ConnectTheDotsWebSite,WebSocketEventProcessor,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\WebSocketEventProcessor.cs,GetAllBufferedMessages,The length of the statement  "			//SortedList<DateTime' IDictionary<string' object>> allMessages = new SortedList<DateTime' IDictionary<string' object>>(); " is 122.
Long Statement,ConnectTheDotsWebSite.Helpers,IoTHubHelper,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\Helpers\IoTHubHelper.cs,SendMessage,The length of the statement  "            var serviceClient = ServiceClient.CreateFromConnectionString(Microsoft.Azure.CloudConfigurationManager.GetSetting("Azure.IoT.IoTHub.ConnectionString")' TransportType.Amqp); " is 172.
Long Statement,ConnectTheDotsWebSite.Helpers,IoTHubHelper,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\Helpers\IoTHubHelper.cs,DeleteDevice,The length of the statement  "            var manager = RegistryManager.CreateFromConnectionString(Microsoft.Azure.CloudConfigurationManager.GetSetting("Azure.IoT.IoTHub.ConnectionString")); " is 148.
Long Statement,ConnectTheDotsWebSite.Helpers,IoTHubHelper,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\Helpers\IoTHubHelper.cs,AddDevice,The length of the statement  "            var manager = RegistryManager.CreateFromConnectionString(Microsoft.Azure.CloudConfigurationManager.GetSetting("Azure.IoT.IoTHub.ConnectionString")); " is 148.
Long Statement,ConnectTheDotsWebSite.Helpers,IoTHubHelper,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\Helpers\IoTHubHelper.cs,ListDevices,The length of the statement  "                            result.Add(new Dictionary<String' object>() { { "guid"' device.Id }' { "connectionstring"' CreateDeviceConnectionString(device' iotHubConnectionString) } }); " is 157.
Complex Conditional,ConnectTheDotsWebSite,WebSocketEventProcessor,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\WebSocketEventProcessor.cs,ProcessEventsAsync,The conditional expression  "(dict.ContainsKey("guid") && messagePayload.ContainsKey("guid") && messagePayload["guid"].ToString() == dict["guid"].ToString())                                                  &&                                                  (dict.ContainsKey("measurename") && messagePayload.ContainsKey("measurename") && messagePayload["measurename"].ToString() == dict["measurename"].ToString())                                                  &&                                                  (!messagePayload.ContainsKey("displayname") || dict.ContainsKey("displayname") && messagePayload["measurename"].ToString() == dict["measurename"].ToString())"  is complex.
Empty Catch Block,ConnectTheDotsWebSite,Global,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\Global.asax.cs,GetAppSettings,The method has an empty catch block.
Magic Number,ConnectTheDotsWebSite,Default,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\Default.aspx.cs,GetDevicesList,The following statement contains a magic number: if (Global.TriggerAndWaitDeviceListRefresh(10))              {                  // We need to Filter the devices secret information in case the user is not an admin                  List<DeviceDetails> devicesList = Global.devicesList;                  if (!IsUserAdmin())                  {                      foreach (DeviceDetails device in devicesList)                      {                          device.connectionstring = "";                      }                  }                    return JsonConvert.SerializeObject(devicesList);              }
Magic Number,ConnectTheDotsWebSite,Default,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\Default.aspx.cs,AddDevice,The following statement contains a magic number: switch (Global.TriggerAndWaitAddDevice(10' deviceName))              {                  case Helpers.IoTHubHelper.AddDeviceResult.Success:                      returnMessage  = "{\"Device\": \"" + deviceName + "\"}";                      break;                    case Helpers.IoTHubHelper.AddDeviceResult.DeviceAlreadyExists:                      returnMessage = "{\"Error\": \"Device already exists.\"}";                      break;                    default:                      returnMessage = "{\"Error\": \"An error occured when trying to add new device.\"}";                      break;              }
Magic Number,ConnectTheDotsWebSite,Default,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\Default.aspx.cs,DeleteDevice,The following statement contains a magic number: switch (Global.TriggerAndWaitDeleteDevice(10' deviceName))              {                  case Helpers.IoTHubHelper.DeleteDeviceResult.Success:                      returnMessage = "{\"Device\": \"" + deviceName + "\"}";                      break;                    case Helpers.IoTHubHelper.DeleteDeviceResult.DeviceNotRegistered:                      returnMessage = "{\"Error\": \"Device not registered.\"}";                      break;                    default:                      returnMessage = "{\"Error\": \"An error occured when trying to delete device.\"}";                      break;              }
Magic Number,ConnectTheDotsWebSite,Global,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\Global.asax.cs,UpdateDeviceListFromIoTHub,The following statement contains a magic number: List<IDictionary<string' object>> devices = IoTHubHelper.ListDevices(100);
Magic Number,ConnectTheDotsWebSite,Global,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\Global.asax.cs,TriggerAndWaitDeviceListRefresh,The following statement contains a magic number: while ((!Global.globalSettings.DevicesListRefreshed) && (tick++<timeout)) Thread.Sleep(1000);
Magic Number,ConnectTheDotsWebSite,Global,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\Global.asax.cs,TriggerAndWaitAddDevice,The following statement contains a magic number: while ((!Global.globalSettings.DeviceAdded) && (tick++ < timeout)) Thread.Sleep(1000);
Magic Number,ConnectTheDotsWebSite,Global,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\Global.asax.cs,TriggerAndWaitDeleteDevice,The following statement contains a magic number: while ((!Global.globalSettings.DeviceDeleted) && (tick++ < timeout)) Thread.Sleep(1000);
Magic Number,ConnectTheDotsWebSite,Global,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\Global.asax.cs,Application_Start,The following statement contains a magic number: pingIoTHubTimer = new System.Timers.Timer(1000);
Magic Number,ConnectTheDotsWebSite,SearchHelper,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\WebSocketEventProcessor.cs,BinarySearch,The following statement contains a magic number: while (lo < hi)  			{  				int m = (hi + lo) / 2;  // this might overflow; be careful.  				if (comp.Compare(list[m]' value) < 0) lo = m + 1;  				else hi = m - 1;  			}
Magic Number,ConnectTheDotsWebSite,MyWebSocketHandler,C:\repos\MSOpenTech_connectthedots\Azure\WebSite\source\ConnectTheDotsWebSite\WebSocketHandler.cs,Filter,The following statement contains a magic number: TimeSpan bufferTime = new TimeSpan(0' 10' 0);
