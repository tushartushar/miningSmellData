Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Microsoft.ConnectTheDots.Adapters,BluetoothUARTAdapter,C:\repos\MSOpenTech_connectthedots\Devices\Gateways\GatewayService\DeviceAdapters\Bluetooth\BluetoothUARTAdapter.cs,Listen,The length of the statement  "                            _logger.LogError( "Error Reading from Serial Portand sending data from serial port " + serialPortName + ":" + e.Message ); " is 122.
Magic Number,Microsoft.ConnectTheDots.Adapters,BluetoothUARTAdapter,C:\repos\MSOpenTech_connectthedots\Devices\Gateways\GatewayService\DeviceAdapters\Bluetooth\BluetoothUARTAdapter.cs,Listen,The following statement contains a magic number: while( _doWorkSwitch )              {                  try                  {  #if !SIMULATEDATA                      serialPort = new SerialPort( serialPortName' baudRate' Parity.None' 8' StopBits.One );                      serialPort.DtrEnable = true;                      serialPort.Open( );  #endif                      do                      {                          // When simulating data' we will generate random data                          // when not simulating' we read the serial port                          string valuesJson = "";  #if !SIMULATEDATA                          try                          {                              valuesJson = serialPort.ReadLine( );                                                            // Send JSON message to the Cloud                              _enqueue( valuesJson );                          }                          catch( Exception e )                          {                              _logger.LogError( "Error Reading from Serial Portand sending data from serial port " + serialPortName + ":" + e.Message );                              serialPort.Close( );                              serialPortAlive = false;                          }  #endif                      } while( serialPortAlive );                    }                  catch( Exception e )                  {                      _logger.LogError( "Error processing data from serial port: " + e.Message );                  }                    // When we are reaching this point' that means whether the COM port reading failed or the sensors has been disconnected                  // we will try to close the port properly' but if the device has been disconnected' this will trigger an exception                  try                  {                      if( serialPort != null )                      {                          if( serialPort.IsOpen )                          {                              serialPort.Close( );                          }                            serialPort = null;                      }                  }                  catch( Exception e )                  {                      _logger.LogError( "Error when trying to close the serial port: " + e.Message );                  }                  // We restart the thread if there has been some failure when reading from serial port                  Thread.Sleep( 800 );              }
Magic Number,Microsoft.ConnectTheDots.Adapters,BluetoothUARTAdapter,C:\repos\MSOpenTech_connectthedots\Devices\Gateways\GatewayService\DeviceAdapters\Bluetooth\BluetoothUARTAdapter.cs,Listen,The following statement contains a magic number: while( _doWorkSwitch )              {                  try                  {  #if !SIMULATEDATA                      serialPort = new SerialPort( serialPortName' baudRate' Parity.None' 8' StopBits.One );                      serialPort.DtrEnable = true;                      serialPort.Open( );  #endif                      do                      {                          // When simulating data' we will generate random data                          // when not simulating' we read the serial port                          string valuesJson = "";  #if !SIMULATEDATA                          try                          {                              valuesJson = serialPort.ReadLine( );                                                            // Send JSON message to the Cloud                              _enqueue( valuesJson );                          }                          catch( Exception e )                          {                              _logger.LogError( "Error Reading from Serial Portand sending data from serial port " + serialPortName + ":" + e.Message );                              serialPort.Close( );                              serialPortAlive = false;                          }  #endif                      } while( serialPortAlive );                    }                  catch( Exception e )                  {                      _logger.LogError( "Error processing data from serial port: " + e.Message );                  }                    // When we are reaching this point' that means whether the COM port reading failed or the sensors has been disconnected                  // we will try to close the port properly' but if the device has been disconnected' this will trigger an exception                  try                  {                      if( serialPort != null )                      {                          if( serialPort.IsOpen )                          {                              serialPort.Close( );                          }                            serialPort = null;                      }                  }                  catch( Exception e )                  {                      _logger.LogError( "Error when trying to close the serial port: " + e.Message );                  }                  // We restart the thread if there has been some failure when reading from serial port                  Thread.Sleep( 800 );              }
