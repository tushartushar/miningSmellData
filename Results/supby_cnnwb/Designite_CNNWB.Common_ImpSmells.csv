Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,Cyclomatic complexity of the method is 13
Complex Method,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetIntFromHex,Cyclomatic complexity of the method is 14
Complex Method,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSBtoRGB,Cyclomatic complexity of the method is 31
Complex Method,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,Cyclomatic complexity of the method is 8
Complex Method,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,Cyclomatic complexity of the method is 9
Complex Method,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,Cyclomatic complexity of the method is 9
Complex Method,DequeTest,Tester,C:\repos\supby_cnnwb\CNNWB.Common\Deque_src\Tester.cs,TestCopyTo,Cyclomatic complexity of the method is 8
Complex Method,DequeTest,Tester,C:\repos\supby_cnnwb\CNNWB.Common\Deque_src\Tester.cs,TestEnumerator,Cyclomatic complexity of the method is 8
Long Parameter List,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetColorDistance,The method has 6 parameters.
Long Statement,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSBtoRGB,The length of the statement  "	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' r * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' g * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' b * 255.0)))); " is 232.
Long Statement,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The length of the statement  "		return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))); " is 232.
Long Statement,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The length of the statement  "		return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [2] * 255.0)))); " is 244.
Long Statement,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The length of the statement  "	return new HSL (Double.Parse (String.Format ("{0:0.##}"' h))' Double.Parse (String.Format ("{0:0.##}"' s))' Double.Parse (String.Format ("{0:0.##}"' l))); " is 154.
Long Statement,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The length of the statement  "	return new HSL (Double.Parse (String.Format ("{0:0.##}"' h))' Double.Parse (String.Format ("{0:0.##}"' s))' Double.Parse (String.Format ("{0:0.##}"' l))); " is 154.
Long Statement,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoXYZ,The length of the statement  "	return new CIEXYZ ((r * 0.4124 + g * 0.3576 + b * 0.1805)' (r * 0.2126 + g * 0.7152 + b * 0.0722)' (r * 0.0193 + g * 0.1192 + b * 0.9505)); " is 139.
Long Statement,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,XYZtoRGB,The length of the statement  "		Clinear [i] = (Clinear [i] <= 0.0031308) ? 12.92 * Clinear [i] : (1 + 0.055) * Math.Pow (Clinear [i]' (1.0 / 2.4)) - 0.055; " is 123.
Long Statement,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,XYZtoRGB,The length of the statement  "	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' Clinear [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' Clinear [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' Clinear [2] * 255.0)))); " is 262.
Long Statement,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,LabtoXYZ,The length of the statement  "	return new CIEXYZ ((fx > theta) ? CIEXYZ.D65.X * (fx * fx * fx) : (fx - 16.0 / 116.0) * 3 * (theta * theta) * CIEXYZ.D65.X' (fy > theta) ? CIEXYZ.D65.Y * (fy * fy * fy) : (fy - 16.0 / 116.0) * 3 * (theta * theta) * CIEXYZ.D65.Y' (fz > theta) ? CIEXYZ.D65.Z * (fz * fz * fz) : (fz - 16.0 / 116.0) * 3 * (theta * theta) * CIEXYZ.D65.Z); " is 334.
Long Statement,CNNWB.Common,Deque,C:\repos\supby_cnnwb\CNNWB.Common\Deque.cs,CopyTo,The length of the statement  "		throw new ArgumentException ("The number of elements in the source Deque is greater " + "than the available space from index to the end of the " + "destination array."); " is 169.
Long Statement,LSCollections,Deque,C:\repos\supby_cnnwb\CNNWB.Common\Deque_src\Deque.cs,CopyTo,The length of the statement  "		throw new ArgumentException ("The number of elements in the source Deque is greater " + "than the available space from index to the end of the " + "destination array."); " is 169.
Virtual Method Call from Constructor,CNNWB.Common,Deque,C:\repos\supby_cnnwb\CNNWB.Common\Deque.cs,Deque,The constructor "Deque" calls a virtual method "PushBack".
Virtual Method Call from Constructor,LSCollections,Deque,C:\repos\supby_cnnwb\CNNWB.Common\Deque_src\Deque.cs,Deque,The constructor "Deque" calls a virtual method "PushBack".
Magic Number,CNNWB.Common,HSL,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSL,The following statement contains a magic number: hue = (h > 360) ? 360 : ((h < 0) ? 0 : h);  
Magic Number,CNNWB.Common,HSL,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSL,The following statement contains a magic number: hue = (h > 360) ? 360 : ((h < 0) ? 0 : h);  
Magic Number,CNNWB.Common,RGB,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGB,The following statement contains a magic number: red = (R > 255) ? 255 : ((R < 0) ? 0 : R);  
Magic Number,CNNWB.Common,RGB,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGB,The following statement contains a magic number: red = (R > 255) ? 255 : ((R < 0) ? 0 : R);  
Magic Number,CNNWB.Common,RGB,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGB,The following statement contains a magic number: green = (G > 255) ? 255 : ((G < 0) ? 0 : G);  
Magic Number,CNNWB.Common,RGB,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGB,The following statement contains a magic number: green = (G > 255) ? 255 : ((G < 0) ? 0 : G);  
Magic Number,CNNWB.Common,RGB,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGB,The following statement contains a magic number: blue = (B > 255) ? 255 : ((B < 0) ? 0 : B);  
Magic Number,CNNWB.Common,RGB,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGB,The following statement contains a magic number: blue = (B > 255) ? 255 : ((B < 0) ? 0 : B);  
Magic Number,CNNWB.Common,CIEXYZ,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,CIEXYZ,The following statement contains a magic number: this.x = (x > 0.9505) ? 0.9505 : ((x < 0) ? 0 : x);  
Magic Number,CNNWB.Common,CIEXYZ,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,CIEXYZ,The following statement contains a magic number: this.x = (x > 0.9505) ? 0.9505 : ((x < 0) ? 0 : x);  
Magic Number,CNNWB.Common,CIEXYZ,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,CIEXYZ,The following statement contains a magic number: this.z = (z > 1.089) ? 1.089 : ((z < 0) ? 0 : z);  
Magic Number,CNNWB.Common,CIEXYZ,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,CIEXYZ,The following statement contains a magic number: this.z = (z > 1.089) ? 1.089 : ((z < 0) ? 0 : z);  
Magic Number,CNNWB.Common,HSB,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSB,The following statement contains a magic number: hue = (h > 360) ? 360 : ((h < 0) ? 0 : h);  
Magic Number,CNNWB.Common,HSB,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSB,The following statement contains a magic number: hue = (h > 360) ? 360 : ((h < 0) ? 0 : h);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetColorDistance,The following statement contains a magic number: return GetColorDistance (color1 [0]' color1 [1]' color1 [2]' color2 [0]' color2 [1]' color2 [2]);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetColorDistance,The following statement contains a magic number: return GetColorDistance (color1 [0]' color1 [1]' color1 [2]' color2 [0]' color2 [1]' color2 [2]);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetColorDistance,The following statement contains a magic number: return GetColorDistance (rgb1 [0]' rgb1 [1]' rgb1 [2]' rgb2 [0]' rgb2 [1]' rgb2 [2]);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetColorDistance,The following statement contains a magic number: return GetColorDistance (rgb1 [0]' rgb1 [1]' rgb1 [2]' rgb2 [0]' rgb2 [1]' rgb2 [2]);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetWheelColors,The following statement contains a magic number: for (int i = 0; i < colorCount; i++) {  	temp = HSBtoColor ((int)((double)(i * 255.0) / colorCount)' 255' 255);  	colors [i] = Color.FromArgb (alpha' temp.R' temp.G' temp.B);  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetWheelColors,The following statement contains a magic number: for (int i = 0; i < colorCount; i++) {  	temp = HSBtoColor ((int)((double)(i * 255.0) / colorCount)' 255' 255);  	colors [i] = Color.FromArgb (alpha' temp.R' temp.G' temp.B);  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetWheelColors,The following statement contains a magic number: for (int i = 0; i < colorCount; i++) {  	temp = HSBtoColor ((int)((double)(i * 255.0) / colorCount)' 255' 255);  	colors [i] = Color.FromArgb (alpha' temp.R' temp.G' temp.B);  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetWheelColors,The following statement contains a magic number: temp = HSBtoColor ((int)((double)(i * 255.0) / colorCount)' 255' 255);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetWheelColors,The following statement contains a magic number: temp = HSBtoColor ((int)((double)(i * 255.0) / colorCount)' 255' 255);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetWheelColors,The following statement contains a magic number: temp = HSBtoColor ((int)((double)(i * 255.0) / colorCount)' 255' 255);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: for (int i = 0; i < 256; i++)  	colors [i] = Color.FromArgb (alpha' 255' i' 0);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: for (int i = 0; i < 256; i++)  	colors [i] = Color.FromArgb (alpha' 255' i' 0);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: colors [i] = Color.FromArgb (alpha' 255' i' 0);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: for (int i = 0; i < 256; i++)  	colors [i + (256)] = Color.FromArgb (alpha' 255 - i' 255' 0);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: for (int i = 0; i < 256; i++)  	colors [i + (256)] = Color.FromArgb (alpha' 255 - i' 255' 0);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: for (int i = 0; i < 256; i++)  	colors [i + (256)] = Color.FromArgb (alpha' 255 - i' 255' 0);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: for (int i = 0; i < 256; i++)  	colors [i + (256)] = Color.FromArgb (alpha' 255 - i' 255' 0);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: colors [i + (256)] = Color.FromArgb (alpha' 255 - i' 255' 0);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: colors [i + (256)] = Color.FromArgb (alpha' 255 - i' 255' 0);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: colors [i + (256)] = Color.FromArgb (alpha' 255 - i' 255' 0);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: for (int i = 0; i < 256; i++)  	colors [i + (256 * 2)] = Color.FromArgb (alpha' 0' 255' i);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: for (int i = 0; i < 256; i++)  	colors [i + (256 * 2)] = Color.FromArgb (alpha' 0' 255' i);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: for (int i = 0; i < 256; i++)  	colors [i + (256 * 2)] = Color.FromArgb (alpha' 0' 255' i);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: for (int i = 0; i < 256; i++)  	colors [i + (256 * 2)] = Color.FromArgb (alpha' 0' 255' i);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: colors [i + (256 * 2)] = Color.FromArgb (alpha' 0' 255' i);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: colors [i + (256 * 2)] = Color.FromArgb (alpha' 0' 255' i);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: colors [i + (256 * 2)] = Color.FromArgb (alpha' 0' 255' i);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: for (int i = 0; i < 256; i++)  	colors [i + (256 * 3)] = Color.FromArgb (alpha' 0' 255 - i' 255);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: for (int i = 0; i < 256; i++)  	colors [i + (256 * 3)] = Color.FromArgb (alpha' 0' 255 - i' 255);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: for (int i = 0; i < 256; i++)  	colors [i + (256 * 3)] = Color.FromArgb (alpha' 0' 255 - i' 255);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: for (int i = 0; i < 256; i++)  	colors [i + (256 * 3)] = Color.FromArgb (alpha' 0' 255 - i' 255);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: for (int i = 0; i < 256; i++)  	colors [i + (256 * 3)] = Color.FromArgb (alpha' 0' 255 - i' 255);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: colors [i + (256 * 3)] = Color.FromArgb (alpha' 0' 255 - i' 255);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: colors [i + (256 * 3)] = Color.FromArgb (alpha' 0' 255 - i' 255);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: colors [i + (256 * 3)] = Color.FromArgb (alpha' 0' 255 - i' 255);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: colors [i + (256 * 3)] = Color.FromArgb (alpha' 0' 255 - i' 255);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: for (int i = 0; i < 256; i++)  	colors [i + (256 * 4)] = Color.FromArgb (alpha' i' 0' 255);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: for (int i = 0; i < 256; i++)  	colors [i + (256 * 4)] = Color.FromArgb (alpha' i' 0' 255);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: for (int i = 0; i < 256; i++)  	colors [i + (256 * 4)] = Color.FromArgb (alpha' i' 0' 255);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: for (int i = 0; i < 256; i++)  	colors [i + (256 * 4)] = Color.FromArgb (alpha' i' 0' 255);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: colors [i + (256 * 4)] = Color.FromArgb (alpha' i' 0' 255);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: colors [i + (256 * 4)] = Color.FromArgb (alpha' i' 0' 255);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: colors [i + (256 * 4)] = Color.FromArgb (alpha' i' 0' 255);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: for (int i = 0; i < 256; i++)  	colors [i + (256 * 5)] = Color.FromArgb (alpha' 255' 0' 255 - i);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: for (int i = 0; i < 256; i++)  	colors [i + (256 * 5)] = Color.FromArgb (alpha' 255' 0' 255 - i);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: for (int i = 0; i < 256; i++)  	colors [i + (256 * 5)] = Color.FromArgb (alpha' 255' 0' 255 - i);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: for (int i = 0; i < 256; i++)  	colors [i + (256 * 5)] = Color.FromArgb (alpha' 255' 0' 255 - i);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: for (int i = 0; i < 256; i++)  	colors [i + (256 * 5)] = Color.FromArgb (alpha' 255' 0' 255 - i);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: colors [i + (256 * 5)] = Color.FromArgb (alpha' 255' 0' 255 - i);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: colors [i + (256 * 5)] = Color.FromArgb (alpha' 255' 0' 255 - i);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: colors [i + (256 * 5)] = Color.FromArgb (alpha' 255' 0' 255 - i);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: colors [i + (256 * 5)] = Color.FromArgb (alpha' 255' 0' 255 - i);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetSpectrumColors,The following statement contains a magic number: return GetSpectrumColors (255);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetIntFromHex,The following statement contains a magic number: switch (strHex) {  case ("A"): {  	return 10;  }  case ("B"): {  	return 11;  }  case ("C"): {  	return 12;  }  case ("D"): {  	return 13;  }  case ("E"): {  	return 14;  }  case ("F"): {  	return 15;  }  default: {  	return int.Parse (strHex);  }  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetIntFromHex,The following statement contains a magic number: switch (strHex) {  case ("A"): {  	return 10;  }  case ("B"): {  	return 11;  }  case ("C"): {  	return 12;  }  case ("D"): {  	return 13;  }  case ("E"): {  	return 14;  }  case ("F"): {  	return 15;  }  default: {  	return int.Parse (strHex);  }  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetIntFromHex,The following statement contains a magic number: switch (strHex) {  case ("A"): {  	return 10;  }  case ("B"): {  	return 11;  }  case ("C"): {  	return 12;  }  case ("D"): {  	return 13;  }  case ("E"): {  	return 14;  }  case ("F"): {  	return 15;  }  default: {  	return int.Parse (strHex);  }  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetIntFromHex,The following statement contains a magic number: switch (strHex) {  case ("A"): {  	return 10;  }  case ("B"): {  	return 11;  }  case ("C"): {  	return 12;  }  case ("D"): {  	return 13;  }  case ("E"): {  	return 14;  }  case ("F"): {  	return 15;  }  default: {  	return int.Parse (strHex);  }  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetIntFromHex,The following statement contains a magic number: switch (strHex) {  case ("A"): {  	return 10;  }  case ("B"): {  	return 11;  }  case ("C"): {  	return 12;  }  case ("D"): {  	return 13;  }  case ("E"): {  	return 14;  }  case ("F"): {  	return 15;  }  default: {  	return int.Parse (strHex);  }  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetIntFromHex,The following statement contains a magic number: switch (strHex) {  case ("A"): {  	return 10;  }  case ("B"): {  	return 11;  }  case ("C"): {  	return 12;  }  case ("D"): {  	return 13;  }  case ("E"): {  	return 14;  }  case ("F"): {  	return 15;  }  default: {  	return int.Parse (strHex);  }  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetIntFromHex,The following statement contains a magic number: return 10;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetIntFromHex,The following statement contains a magic number: return 11;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetIntFromHex,The following statement contains a magic number: return 12;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetIntFromHex,The following statement contains a magic number: return 13;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetIntFromHex,The following statement contains a magic number: return 14;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,GetIntFromHex,The following statement contains a magic number: return 15;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HexToColor,The following statement contains a magic number: if (hexColor != String.Empty) {  	hexColor = hexColor.Trim ();  	if (hexColor [0] == '#')  		hexColor = hexColor.Substring (1' hexColor.Length - 1);  	r = hexColor.Substring (0' 2);  	g = hexColor.Substring (2' 2);  	b = hexColor.Substring (4' 2);  	r = Convert.ToString (16 * GetIntFromHex (r.Substring (0' 1)) + GetIntFromHex (r.Substring (1' 1)));  	g = Convert.ToString (16 * GetIntFromHex (g.Substring (0' 1)) + GetIntFromHex (g.Substring (1' 1)));  	b = Convert.ToString (16 * GetIntFromHex (b.Substring (0' 1)) + GetIntFromHex (b.Substring (1' 1)));  	return Color.FromArgb (Convert.ToInt32 (r)' Convert.ToInt32 (g)' Convert.ToInt32 (b));  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HexToColor,The following statement contains a magic number: if (hexColor != String.Empty) {  	hexColor = hexColor.Trim ();  	if (hexColor [0] == '#')  		hexColor = hexColor.Substring (1' hexColor.Length - 1);  	r = hexColor.Substring (0' 2);  	g = hexColor.Substring (2' 2);  	b = hexColor.Substring (4' 2);  	r = Convert.ToString (16 * GetIntFromHex (r.Substring (0' 1)) + GetIntFromHex (r.Substring (1' 1)));  	g = Convert.ToString (16 * GetIntFromHex (g.Substring (0' 1)) + GetIntFromHex (g.Substring (1' 1)));  	b = Convert.ToString (16 * GetIntFromHex (b.Substring (0' 1)) + GetIntFromHex (b.Substring (1' 1)));  	return Color.FromArgb (Convert.ToInt32 (r)' Convert.ToInt32 (g)' Convert.ToInt32 (b));  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HexToColor,The following statement contains a magic number: if (hexColor != String.Empty) {  	hexColor = hexColor.Trim ();  	if (hexColor [0] == '#')  		hexColor = hexColor.Substring (1' hexColor.Length - 1);  	r = hexColor.Substring (0' 2);  	g = hexColor.Substring (2' 2);  	b = hexColor.Substring (4' 2);  	r = Convert.ToString (16 * GetIntFromHex (r.Substring (0' 1)) + GetIntFromHex (r.Substring (1' 1)));  	g = Convert.ToString (16 * GetIntFromHex (g.Substring (0' 1)) + GetIntFromHex (g.Substring (1' 1)));  	b = Convert.ToString (16 * GetIntFromHex (b.Substring (0' 1)) + GetIntFromHex (b.Substring (1' 1)));  	return Color.FromArgb (Convert.ToInt32 (r)' Convert.ToInt32 (g)' Convert.ToInt32 (b));  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HexToColor,The following statement contains a magic number: if (hexColor != String.Empty) {  	hexColor = hexColor.Trim ();  	if (hexColor [0] == '#')  		hexColor = hexColor.Substring (1' hexColor.Length - 1);  	r = hexColor.Substring (0' 2);  	g = hexColor.Substring (2' 2);  	b = hexColor.Substring (4' 2);  	r = Convert.ToString (16 * GetIntFromHex (r.Substring (0' 1)) + GetIntFromHex (r.Substring (1' 1)));  	g = Convert.ToString (16 * GetIntFromHex (g.Substring (0' 1)) + GetIntFromHex (g.Substring (1' 1)));  	b = Convert.ToString (16 * GetIntFromHex (b.Substring (0' 1)) + GetIntFromHex (b.Substring (1' 1)));  	return Color.FromArgb (Convert.ToInt32 (r)' Convert.ToInt32 (g)' Convert.ToInt32 (b));  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HexToColor,The following statement contains a magic number: if (hexColor != String.Empty) {  	hexColor = hexColor.Trim ();  	if (hexColor [0] == '#')  		hexColor = hexColor.Substring (1' hexColor.Length - 1);  	r = hexColor.Substring (0' 2);  	g = hexColor.Substring (2' 2);  	b = hexColor.Substring (4' 2);  	r = Convert.ToString (16 * GetIntFromHex (r.Substring (0' 1)) + GetIntFromHex (r.Substring (1' 1)));  	g = Convert.ToString (16 * GetIntFromHex (g.Substring (0' 1)) + GetIntFromHex (g.Substring (1' 1)));  	b = Convert.ToString (16 * GetIntFromHex (b.Substring (0' 1)) + GetIntFromHex (b.Substring (1' 1)));  	return Color.FromArgb (Convert.ToInt32 (r)' Convert.ToInt32 (g)' Convert.ToInt32 (b));  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HexToColor,The following statement contains a magic number: if (hexColor != String.Empty) {  	hexColor = hexColor.Trim ();  	if (hexColor [0] == '#')  		hexColor = hexColor.Substring (1' hexColor.Length - 1);  	r = hexColor.Substring (0' 2);  	g = hexColor.Substring (2' 2);  	b = hexColor.Substring (4' 2);  	r = Convert.ToString (16 * GetIntFromHex (r.Substring (0' 1)) + GetIntFromHex (r.Substring (1' 1)));  	g = Convert.ToString (16 * GetIntFromHex (g.Substring (0' 1)) + GetIntFromHex (g.Substring (1' 1)));  	b = Convert.ToString (16 * GetIntFromHex (b.Substring (0' 1)) + GetIntFromHex (b.Substring (1' 1)));  	return Color.FromArgb (Convert.ToInt32 (r)' Convert.ToInt32 (g)' Convert.ToInt32 (b));  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HexToColor,The following statement contains a magic number: if (hexColor != String.Empty) {  	hexColor = hexColor.Trim ();  	if (hexColor [0] == '#')  		hexColor = hexColor.Substring (1' hexColor.Length - 1);  	r = hexColor.Substring (0' 2);  	g = hexColor.Substring (2' 2);  	b = hexColor.Substring (4' 2);  	r = Convert.ToString (16 * GetIntFromHex (r.Substring (0' 1)) + GetIntFromHex (r.Substring (1' 1)));  	g = Convert.ToString (16 * GetIntFromHex (g.Substring (0' 1)) + GetIntFromHex (g.Substring (1' 1)));  	b = Convert.ToString (16 * GetIntFromHex (b.Substring (0' 1)) + GetIntFromHex (b.Substring (1' 1)));  	return Color.FromArgb (Convert.ToInt32 (r)' Convert.ToInt32 (g)' Convert.ToInt32 (b));  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HexToColor,The following statement contains a magic number: if (hexColor != String.Empty) {  	hexColor = hexColor.Trim ();  	if (hexColor [0] == '#')  		hexColor = hexColor.Substring (1' hexColor.Length - 1);  	r = hexColor.Substring (0' 2);  	g = hexColor.Substring (2' 2);  	b = hexColor.Substring (4' 2);  	r = Convert.ToString (16 * GetIntFromHex (r.Substring (0' 1)) + GetIntFromHex (r.Substring (1' 1)));  	g = Convert.ToString (16 * GetIntFromHex (g.Substring (0' 1)) + GetIntFromHex (g.Substring (1' 1)));  	b = Convert.ToString (16 * GetIntFromHex (b.Substring (0' 1)) + GetIntFromHex (b.Substring (1' 1)));  	return Color.FromArgb (Convert.ToInt32 (r)' Convert.ToInt32 (g)' Convert.ToInt32 (b));  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HexToColor,The following statement contains a magic number: r = hexColor.Substring (0' 2);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HexToColor,The following statement contains a magic number: g = hexColor.Substring (2' 2);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HexToColor,The following statement contains a magic number: g = hexColor.Substring (2' 2);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HexToColor,The following statement contains a magic number: b = hexColor.Substring (4' 2);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HexToColor,The following statement contains a magic number: b = hexColor.Substring (4' 2);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HexToColor,The following statement contains a magic number: r = Convert.ToString (16 * GetIntFromHex (r.Substring (0' 1)) + GetIntFromHex (r.Substring (1' 1)));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HexToColor,The following statement contains a magic number: g = Convert.ToString (16 * GetIntFromHex (g.Substring (0' 1)) + GetIntFromHex (g.Substring (1' 1)));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HexToColor,The following statement contains a magic number: b = Convert.ToString (16 * GetIntFromHex (b.Substring (0' 1)) + GetIntFromHex (b.Substring (1' 1)));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSBtoRGB,The following statement contains a magic number: if (hsb.Saturation == 0) {  	r = g = b = hsb.Brightness;  }  else {  	// the color wheel consists of 6 sectors. Figure out which sector you're in.  	double sectorPos = hsb.Hue / 60.0;  	int sectorNumber = (int)(Math.Floor (sectorPos));  	// get the fractional part of the sector  	double fractionalSector = sectorPos - sectorNumber;  	// calculate values for the three axes of the color.   	double p = hsb.Brightness * (1.0 - hsb.Saturation);  	double q = hsb.Brightness * (1.0 - (hsb.Saturation * fractionalSector));  	double t = hsb.Brightness * (1.0 - (hsb.Saturation * (1 - fractionalSector)));  	// assign the fractional colors to r' g' and b based on the sector the angle is in.  	switch (sectorNumber) {  	case 0:  		r = hsb.Brightness;  		g = t;  		b = p;  		break;  	case 1:  		r = q;  		g = hsb.Brightness;  		b = p;  		break;  	case 2:  		r = p;  		g = hsb.Brightness;  		b = t;  		break;  	case 3:  		r = p;  		g = q;  		b = hsb.Brightness;  		break;  	case 4:  		r = t;  		g = p;  		b = hsb.Brightness;  		break;  	case 5:  		r = hsb.Brightness;  		g = p;  		b = q;  		break;  	}  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSBtoRGB,The following statement contains a magic number: if (hsb.Saturation == 0) {  	r = g = b = hsb.Brightness;  }  else {  	// the color wheel consists of 6 sectors. Figure out which sector you're in.  	double sectorPos = hsb.Hue / 60.0;  	int sectorNumber = (int)(Math.Floor (sectorPos));  	// get the fractional part of the sector  	double fractionalSector = sectorPos - sectorNumber;  	// calculate values for the three axes of the color.   	double p = hsb.Brightness * (1.0 - hsb.Saturation);  	double q = hsb.Brightness * (1.0 - (hsb.Saturation * fractionalSector));  	double t = hsb.Brightness * (1.0 - (hsb.Saturation * (1 - fractionalSector)));  	// assign the fractional colors to r' g' and b based on the sector the angle is in.  	switch (sectorNumber) {  	case 0:  		r = hsb.Brightness;  		g = t;  		b = p;  		break;  	case 1:  		r = q;  		g = hsb.Brightness;  		b = p;  		break;  	case 2:  		r = p;  		g = hsb.Brightness;  		b = t;  		break;  	case 3:  		r = p;  		g = q;  		b = hsb.Brightness;  		break;  	case 4:  		r = t;  		g = p;  		b = hsb.Brightness;  		break;  	case 5:  		r = hsb.Brightness;  		g = p;  		b = q;  		break;  	}  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSBtoRGB,The following statement contains a magic number: if (hsb.Saturation == 0) {  	r = g = b = hsb.Brightness;  }  else {  	// the color wheel consists of 6 sectors. Figure out which sector you're in.  	double sectorPos = hsb.Hue / 60.0;  	int sectorNumber = (int)(Math.Floor (sectorPos));  	// get the fractional part of the sector  	double fractionalSector = sectorPos - sectorNumber;  	// calculate values for the three axes of the color.   	double p = hsb.Brightness * (1.0 - hsb.Saturation);  	double q = hsb.Brightness * (1.0 - (hsb.Saturation * fractionalSector));  	double t = hsb.Brightness * (1.0 - (hsb.Saturation * (1 - fractionalSector)));  	// assign the fractional colors to r' g' and b based on the sector the angle is in.  	switch (sectorNumber) {  	case 0:  		r = hsb.Brightness;  		g = t;  		b = p;  		break;  	case 1:  		r = q;  		g = hsb.Brightness;  		b = p;  		break;  	case 2:  		r = p;  		g = hsb.Brightness;  		b = t;  		break;  	case 3:  		r = p;  		g = q;  		b = hsb.Brightness;  		break;  	case 4:  		r = t;  		g = p;  		b = hsb.Brightness;  		break;  	case 5:  		r = hsb.Brightness;  		g = p;  		b = q;  		break;  	}  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSBtoRGB,The following statement contains a magic number: if (hsb.Saturation == 0) {  	r = g = b = hsb.Brightness;  }  else {  	// the color wheel consists of 6 sectors. Figure out which sector you're in.  	double sectorPos = hsb.Hue / 60.0;  	int sectorNumber = (int)(Math.Floor (sectorPos));  	// get the fractional part of the sector  	double fractionalSector = sectorPos - sectorNumber;  	// calculate values for the three axes of the color.   	double p = hsb.Brightness * (1.0 - hsb.Saturation);  	double q = hsb.Brightness * (1.0 - (hsb.Saturation * fractionalSector));  	double t = hsb.Brightness * (1.0 - (hsb.Saturation * (1 - fractionalSector)));  	// assign the fractional colors to r' g' and b based on the sector the angle is in.  	switch (sectorNumber) {  	case 0:  		r = hsb.Brightness;  		g = t;  		b = p;  		break;  	case 1:  		r = q;  		g = hsb.Brightness;  		b = p;  		break;  	case 2:  		r = p;  		g = hsb.Brightness;  		b = t;  		break;  	case 3:  		r = p;  		g = q;  		b = hsb.Brightness;  		break;  	case 4:  		r = t;  		g = p;  		b = hsb.Brightness;  		break;  	case 5:  		r = hsb.Brightness;  		g = p;  		b = q;  		break;  	}  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSBtoRGB,The following statement contains a magic number: if (hsb.Saturation == 0) {  	r = g = b = hsb.Brightness;  }  else {  	// the color wheel consists of 6 sectors. Figure out which sector you're in.  	double sectorPos = hsb.Hue / 60.0;  	int sectorNumber = (int)(Math.Floor (sectorPos));  	// get the fractional part of the sector  	double fractionalSector = sectorPos - sectorNumber;  	// calculate values for the three axes of the color.   	double p = hsb.Brightness * (1.0 - hsb.Saturation);  	double q = hsb.Brightness * (1.0 - (hsb.Saturation * fractionalSector));  	double t = hsb.Brightness * (1.0 - (hsb.Saturation * (1 - fractionalSector)));  	// assign the fractional colors to r' g' and b based on the sector the angle is in.  	switch (sectorNumber) {  	case 0:  		r = hsb.Brightness;  		g = t;  		b = p;  		break;  	case 1:  		r = q;  		g = hsb.Brightness;  		b = p;  		break;  	case 2:  		r = p;  		g = hsb.Brightness;  		b = t;  		break;  	case 3:  		r = p;  		g = q;  		b = hsb.Brightness;  		break;  	case 4:  		r = t;  		g = p;  		b = hsb.Brightness;  		break;  	case 5:  		r = hsb.Brightness;  		g = p;  		b = q;  		break;  	}  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSBtoRGB,The following statement contains a magic number: switch (sectorNumber) {  case 0:  	r = hsb.Brightness;  	g = t;  	b = p;  	break;  case 1:  	r = q;  	g = hsb.Brightness;  	b = p;  	break;  case 2:  	r = p;  	g = hsb.Brightness;  	b = t;  	break;  case 3:  	r = p;  	g = q;  	b = hsb.Brightness;  	break;  case 4:  	r = t;  	g = p;  	b = hsb.Brightness;  	break;  case 5:  	r = hsb.Brightness;  	g = p;  	b = q;  	break;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSBtoRGB,The following statement contains a magic number: switch (sectorNumber) {  case 0:  	r = hsb.Brightness;  	g = t;  	b = p;  	break;  case 1:  	r = q;  	g = hsb.Brightness;  	b = p;  	break;  case 2:  	r = p;  	g = hsb.Brightness;  	b = t;  	break;  case 3:  	r = p;  	g = q;  	b = hsb.Brightness;  	break;  case 4:  	r = t;  	g = p;  	b = hsb.Brightness;  	break;  case 5:  	r = hsb.Brightness;  	g = p;  	b = q;  	break;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSBtoRGB,The following statement contains a magic number: switch (sectorNumber) {  case 0:  	r = hsb.Brightness;  	g = t;  	b = p;  	break;  case 1:  	r = q;  	g = hsb.Brightness;  	b = p;  	break;  case 2:  	r = p;  	g = hsb.Brightness;  	b = t;  	break;  case 3:  	r = p;  	g = q;  	b = hsb.Brightness;  	break;  case 4:  	r = t;  	g = p;  	b = hsb.Brightness;  	break;  case 5:  	r = hsb.Brightness;  	g = p;  	b = q;  	break;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSBtoRGB,The following statement contains a magic number: switch (sectorNumber) {  case 0:  	r = hsb.Brightness;  	g = t;  	b = p;  	break;  case 1:  	r = q;  	g = hsb.Brightness;  	b = p;  	break;  case 2:  	r = p;  	g = hsb.Brightness;  	b = t;  	break;  case 3:  	r = p;  	g = q;  	b = hsb.Brightness;  	break;  case 4:  	r = t;  	g = p;  	b = hsb.Brightness;  	break;  case 5:  	r = hsb.Brightness;  	g = p;  	b = q;  	break;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSBtoRGB,The following statement contains a magic number: return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' r * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' g * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' b * 255.0))));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSBtoRGB,The following statement contains a magic number: return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' r * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' g * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' b * 255.0))));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSBtoRGB,The following statement contains a magic number: return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' r * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' g * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' b * 255.0))));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSBtoColor,The following statement contains a magic number: if (h > 360 || s > 1 || b > 1) {  	hue = ((double)h / 255.0 * 360.0) % 360.0;  	sat = (double)s / 255.0;  	val = (double)b / 255.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSBtoColor,The following statement contains a magic number: if (h > 360 || s > 1 || b > 1) {  	hue = ((double)h / 255.0 * 360.0) % 360.0;  	sat = (double)s / 255.0;  	val = (double)b / 255.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSBtoColor,The following statement contains a magic number: if (h > 360 || s > 1 || b > 1) {  	hue = ((double)h / 255.0 * 360.0) % 360.0;  	sat = (double)s / 255.0;  	val = (double)b / 255.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSBtoColor,The following statement contains a magic number: if (h > 360 || s > 1 || b > 1) {  	hue = ((double)h / 255.0 * 360.0) % 360.0;  	sat = (double)s / 255.0;  	val = (double)b / 255.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSBtoColor,The following statement contains a magic number: if (h > 360 || s > 1 || b > 1) {  	hue = ((double)h / 255.0 * 360.0) % 360.0;  	sat = (double)s / 255.0;  	val = (double)b / 255.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSBtoColor,The following statement contains a magic number: if (h > 360 || s > 1 || b > 1) {  	hue = ((double)h / 255.0 * 360.0) % 360.0;  	sat = (double)s / 255.0;  	val = (double)b / 255.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSBtoColor,The following statement contains a magic number: hue = ((double)h / 255.0 * 360.0) % 360.0;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSBtoColor,The following statement contains a magic number: hue = ((double)h / 255.0 * 360.0) % 360.0;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSBtoColor,The following statement contains a magic number: hue = ((double)h / 255.0 * 360.0) % 360.0;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSBtoColor,The following statement contains a magic number: sat = (double)s / 255.0;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSBtoColor,The following statement contains a magic number: val = (double)b / 255.0;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if (s == 0) {  	// achromatic color (gray scale)  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0))));  }  else {  	double q = (l < 0.5) ? (l * (1.0 + s)) : (l + s - (l * s));  	double p = (2.0 * l) - q;  	double Hk = h / 360.0;  	double[] T = new double[3];  	T [0] = Hk + (1.0 / 3.0);  	// Tr  	T [1] = Hk;  	// Tb  	T [2] = Hk - (1.0 / 3.0);  	// Tg  	for (int i = 0; i < 3; i++) {  		if (T [i] < 0)  			T [i] += 1.0;  		if (T [i] > 1)  			T [i] -= 1.0;  		if ((T [i] * 6) < 1) {  			T [i] = p + ((q - p) * 6.0 * T [i]);  		}  		else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  		 {  			T [i] = q;  		}  		else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  		 {  			T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  		}  		else  			T [i] = p;  	}  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [2] * 255.0))));  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if (s == 0) {  	// achromatic color (gray scale)  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0))));  }  else {  	double q = (l < 0.5) ? (l * (1.0 + s)) : (l + s - (l * s));  	double p = (2.0 * l) - q;  	double Hk = h / 360.0;  	double[] T = new double[3];  	T [0] = Hk + (1.0 / 3.0);  	// Tr  	T [1] = Hk;  	// Tb  	T [2] = Hk - (1.0 / 3.0);  	// Tg  	for (int i = 0; i < 3; i++) {  		if (T [i] < 0)  			T [i] += 1.0;  		if (T [i] > 1)  			T [i] -= 1.0;  		if ((T [i] * 6) < 1) {  			T [i] = p + ((q - p) * 6.0 * T [i]);  		}  		else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  		 {  			T [i] = q;  		}  		else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  		 {  			T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  		}  		else  			T [i] = p;  	}  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [2] * 255.0))));  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if (s == 0) {  	// achromatic color (gray scale)  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0))));  }  else {  	double q = (l < 0.5) ? (l * (1.0 + s)) : (l + s - (l * s));  	double p = (2.0 * l) - q;  	double Hk = h / 360.0;  	double[] T = new double[3];  	T [0] = Hk + (1.0 / 3.0);  	// Tr  	T [1] = Hk;  	// Tb  	T [2] = Hk - (1.0 / 3.0);  	// Tg  	for (int i = 0; i < 3; i++) {  		if (T [i] < 0)  			T [i] += 1.0;  		if (T [i] > 1)  			T [i] -= 1.0;  		if ((T [i] * 6) < 1) {  			T [i] = p + ((q - p) * 6.0 * T [i]);  		}  		else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  		 {  			T [i] = q;  		}  		else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  		 {  			T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  		}  		else  			T [i] = p;  	}  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [2] * 255.0))));  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if (s == 0) {  	// achromatic color (gray scale)  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0))));  }  else {  	double q = (l < 0.5) ? (l * (1.0 + s)) : (l + s - (l * s));  	double p = (2.0 * l) - q;  	double Hk = h / 360.0;  	double[] T = new double[3];  	T [0] = Hk + (1.0 / 3.0);  	// Tr  	T [1] = Hk;  	// Tb  	T [2] = Hk - (1.0 / 3.0);  	// Tg  	for (int i = 0; i < 3; i++) {  		if (T [i] < 0)  			T [i] += 1.0;  		if (T [i] > 1)  			T [i] -= 1.0;  		if ((T [i] * 6) < 1) {  			T [i] = p + ((q - p) * 6.0 * T [i]);  		}  		else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  		 {  			T [i] = q;  		}  		else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  		 {  			T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  		}  		else  			T [i] = p;  	}  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [2] * 255.0))));  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if (s == 0) {  	// achromatic color (gray scale)  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0))));  }  else {  	double q = (l < 0.5) ? (l * (1.0 + s)) : (l + s - (l * s));  	double p = (2.0 * l) - q;  	double Hk = h / 360.0;  	double[] T = new double[3];  	T [0] = Hk + (1.0 / 3.0);  	// Tr  	T [1] = Hk;  	// Tb  	T [2] = Hk - (1.0 / 3.0);  	// Tg  	for (int i = 0; i < 3; i++) {  		if (T [i] < 0)  			T [i] += 1.0;  		if (T [i] > 1)  			T [i] -= 1.0;  		if ((T [i] * 6) < 1) {  			T [i] = p + ((q - p) * 6.0 * T [i]);  		}  		else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  		 {  			T [i] = q;  		}  		else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  		 {  			T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  		}  		else  			T [i] = p;  	}  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [2] * 255.0))));  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if (s == 0) {  	// achromatic color (gray scale)  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0))));  }  else {  	double q = (l < 0.5) ? (l * (1.0 + s)) : (l + s - (l * s));  	double p = (2.0 * l) - q;  	double Hk = h / 360.0;  	double[] T = new double[3];  	T [0] = Hk + (1.0 / 3.0);  	// Tr  	T [1] = Hk;  	// Tb  	T [2] = Hk - (1.0 / 3.0);  	// Tg  	for (int i = 0; i < 3; i++) {  		if (T [i] < 0)  			T [i] += 1.0;  		if (T [i] > 1)  			T [i] -= 1.0;  		if ((T [i] * 6) < 1) {  			T [i] = p + ((q - p) * 6.0 * T [i]);  		}  		else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  		 {  			T [i] = q;  		}  		else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  		 {  			T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  		}  		else  			T [i] = p;  	}  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [2] * 255.0))));  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if (s == 0) {  	// achromatic color (gray scale)  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0))));  }  else {  	double q = (l < 0.5) ? (l * (1.0 + s)) : (l + s - (l * s));  	double p = (2.0 * l) - q;  	double Hk = h / 360.0;  	double[] T = new double[3];  	T [0] = Hk + (1.0 / 3.0);  	// Tr  	T [1] = Hk;  	// Tb  	T [2] = Hk - (1.0 / 3.0);  	// Tg  	for (int i = 0; i < 3; i++) {  		if (T [i] < 0)  			T [i] += 1.0;  		if (T [i] > 1)  			T [i] -= 1.0;  		if ((T [i] * 6) < 1) {  			T [i] = p + ((q - p) * 6.0 * T [i]);  		}  		else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  		 {  			T [i] = q;  		}  		else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  		 {  			T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  		}  		else  			T [i] = p;  	}  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [2] * 255.0))));  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if (s == 0) {  	// achromatic color (gray scale)  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0))));  }  else {  	double q = (l < 0.5) ? (l * (1.0 + s)) : (l + s - (l * s));  	double p = (2.0 * l) - q;  	double Hk = h / 360.0;  	double[] T = new double[3];  	T [0] = Hk + (1.0 / 3.0);  	// Tr  	T [1] = Hk;  	// Tb  	T [2] = Hk - (1.0 / 3.0);  	// Tg  	for (int i = 0; i < 3; i++) {  		if (T [i] < 0)  			T [i] += 1.0;  		if (T [i] > 1)  			T [i] -= 1.0;  		if ((T [i] * 6) < 1) {  			T [i] = p + ((q - p) * 6.0 * T [i]);  		}  		else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  		 {  			T [i] = q;  		}  		else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  		 {  			T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  		}  		else  			T [i] = p;  	}  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [2] * 255.0))));  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if (s == 0) {  	// achromatic color (gray scale)  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0))));  }  else {  	double q = (l < 0.5) ? (l * (1.0 + s)) : (l + s - (l * s));  	double p = (2.0 * l) - q;  	double Hk = h / 360.0;  	double[] T = new double[3];  	T [0] = Hk + (1.0 / 3.0);  	// Tr  	T [1] = Hk;  	// Tb  	T [2] = Hk - (1.0 / 3.0);  	// Tg  	for (int i = 0; i < 3; i++) {  		if (T [i] < 0)  			T [i] += 1.0;  		if (T [i] > 1)  			T [i] -= 1.0;  		if ((T [i] * 6) < 1) {  			T [i] = p + ((q - p) * 6.0 * T [i]);  		}  		else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  		 {  			T [i] = q;  		}  		else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  		 {  			T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  		}  		else  			T [i] = p;  	}  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [2] * 255.0))));  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if (s == 0) {  	// achromatic color (gray scale)  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0))));  }  else {  	double q = (l < 0.5) ? (l * (1.0 + s)) : (l + s - (l * s));  	double p = (2.0 * l) - q;  	double Hk = h / 360.0;  	double[] T = new double[3];  	T [0] = Hk + (1.0 / 3.0);  	// Tr  	T [1] = Hk;  	// Tb  	T [2] = Hk - (1.0 / 3.0);  	// Tg  	for (int i = 0; i < 3; i++) {  		if (T [i] < 0)  			T [i] += 1.0;  		if (T [i] > 1)  			T [i] -= 1.0;  		if ((T [i] * 6) < 1) {  			T [i] = p + ((q - p) * 6.0 * T [i]);  		}  		else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  		 {  			T [i] = q;  		}  		else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  		 {  			T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  		}  		else  			T [i] = p;  	}  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [2] * 255.0))));  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if (s == 0) {  	// achromatic color (gray scale)  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0))));  }  else {  	double q = (l < 0.5) ? (l * (1.0 + s)) : (l + s - (l * s));  	double p = (2.0 * l) - q;  	double Hk = h / 360.0;  	double[] T = new double[3];  	T [0] = Hk + (1.0 / 3.0);  	// Tr  	T [1] = Hk;  	// Tb  	T [2] = Hk - (1.0 / 3.0);  	// Tg  	for (int i = 0; i < 3; i++) {  		if (T [i] < 0)  			T [i] += 1.0;  		if (T [i] > 1)  			T [i] -= 1.0;  		if ((T [i] * 6) < 1) {  			T [i] = p + ((q - p) * 6.0 * T [i]);  		}  		else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  		 {  			T [i] = q;  		}  		else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  		 {  			T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  		}  		else  			T [i] = p;  	}  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [2] * 255.0))));  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if (s == 0) {  	// achromatic color (gray scale)  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0))));  }  else {  	double q = (l < 0.5) ? (l * (1.0 + s)) : (l + s - (l * s));  	double p = (2.0 * l) - q;  	double Hk = h / 360.0;  	double[] T = new double[3];  	T [0] = Hk + (1.0 / 3.0);  	// Tr  	T [1] = Hk;  	// Tb  	T [2] = Hk - (1.0 / 3.0);  	// Tg  	for (int i = 0; i < 3; i++) {  		if (T [i] < 0)  			T [i] += 1.0;  		if (T [i] > 1)  			T [i] -= 1.0;  		if ((T [i] * 6) < 1) {  			T [i] = p + ((q - p) * 6.0 * T [i]);  		}  		else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  		 {  			T [i] = q;  		}  		else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  		 {  			T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  		}  		else  			T [i] = p;  	}  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [2] * 255.0))));  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if (s == 0) {  	// achromatic color (gray scale)  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0))));  }  else {  	double q = (l < 0.5) ? (l * (1.0 + s)) : (l + s - (l * s));  	double p = (2.0 * l) - q;  	double Hk = h / 360.0;  	double[] T = new double[3];  	T [0] = Hk + (1.0 / 3.0);  	// Tr  	T [1] = Hk;  	// Tb  	T [2] = Hk - (1.0 / 3.0);  	// Tg  	for (int i = 0; i < 3; i++) {  		if (T [i] < 0)  			T [i] += 1.0;  		if (T [i] > 1)  			T [i] -= 1.0;  		if ((T [i] * 6) < 1) {  			T [i] = p + ((q - p) * 6.0 * T [i]);  		}  		else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  		 {  			T [i] = q;  		}  		else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  		 {  			T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  		}  		else  			T [i] = p;  	}  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [2] * 255.0))));  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if (s == 0) {  	// achromatic color (gray scale)  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0))));  }  else {  	double q = (l < 0.5) ? (l * (1.0 + s)) : (l + s - (l * s));  	double p = (2.0 * l) - q;  	double Hk = h / 360.0;  	double[] T = new double[3];  	T [0] = Hk + (1.0 / 3.0);  	// Tr  	T [1] = Hk;  	// Tb  	T [2] = Hk - (1.0 / 3.0);  	// Tg  	for (int i = 0; i < 3; i++) {  		if (T [i] < 0)  			T [i] += 1.0;  		if (T [i] > 1)  			T [i] -= 1.0;  		if ((T [i] * 6) < 1) {  			T [i] = p + ((q - p) * 6.0 * T [i]);  		}  		else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  		 {  			T [i] = q;  		}  		else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  		 {  			T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  		}  		else  			T [i] = p;  	}  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [2] * 255.0))));  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if (s == 0) {  	// achromatic color (gray scale)  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0))));  }  else {  	double q = (l < 0.5) ? (l * (1.0 + s)) : (l + s - (l * s));  	double p = (2.0 * l) - q;  	double Hk = h / 360.0;  	double[] T = new double[3];  	T [0] = Hk + (1.0 / 3.0);  	// Tr  	T [1] = Hk;  	// Tb  	T [2] = Hk - (1.0 / 3.0);  	// Tg  	for (int i = 0; i < 3; i++) {  		if (T [i] < 0)  			T [i] += 1.0;  		if (T [i] > 1)  			T [i] -= 1.0;  		if ((T [i] * 6) < 1) {  			T [i] = p + ((q - p) * 6.0 * T [i]);  		}  		else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  		 {  			T [i] = q;  		}  		else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  		 {  			T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  		}  		else  			T [i] = p;  	}  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [2] * 255.0))));  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if (s == 0) {  	// achromatic color (gray scale)  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0))));  }  else {  	double q = (l < 0.5) ? (l * (1.0 + s)) : (l + s - (l * s));  	double p = (2.0 * l) - q;  	double Hk = h / 360.0;  	double[] T = new double[3];  	T [0] = Hk + (1.0 / 3.0);  	// Tr  	T [1] = Hk;  	// Tb  	T [2] = Hk - (1.0 / 3.0);  	// Tg  	for (int i = 0; i < 3; i++) {  		if (T [i] < 0)  			T [i] += 1.0;  		if (T [i] > 1)  			T [i] -= 1.0;  		if ((T [i] * 6) < 1) {  			T [i] = p + ((q - p) * 6.0 * T [i]);  		}  		else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  		 {  			T [i] = q;  		}  		else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  		 {  			T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  		}  		else  			T [i] = p;  	}  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [2] * 255.0))));  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if (s == 0) {  	// achromatic color (gray scale)  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0))));  }  else {  	double q = (l < 0.5) ? (l * (1.0 + s)) : (l + s - (l * s));  	double p = (2.0 * l) - q;  	double Hk = h / 360.0;  	double[] T = new double[3];  	T [0] = Hk + (1.0 / 3.0);  	// Tr  	T [1] = Hk;  	// Tb  	T [2] = Hk - (1.0 / 3.0);  	// Tg  	for (int i = 0; i < 3; i++) {  		if (T [i] < 0)  			T [i] += 1.0;  		if (T [i] > 1)  			T [i] -= 1.0;  		if ((T [i] * 6) < 1) {  			T [i] = p + ((q - p) * 6.0 * T [i]);  		}  		else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  		 {  			T [i] = q;  		}  		else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  		 {  			T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  		}  		else  			T [i] = p;  	}  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [2] * 255.0))));  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if (s == 0) {  	// achromatic color (gray scale)  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0))));  }  else {  	double q = (l < 0.5) ? (l * (1.0 + s)) : (l + s - (l * s));  	double p = (2.0 * l) - q;  	double Hk = h / 360.0;  	double[] T = new double[3];  	T [0] = Hk + (1.0 / 3.0);  	// Tr  	T [1] = Hk;  	// Tb  	T [2] = Hk - (1.0 / 3.0);  	// Tg  	for (int i = 0; i < 3; i++) {  		if (T [i] < 0)  			T [i] += 1.0;  		if (T [i] > 1)  			T [i] -= 1.0;  		if ((T [i] * 6) < 1) {  			T [i] = p + ((q - p) * 6.0 * T [i]);  		}  		else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  		 {  			T [i] = q;  		}  		else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  		 {  			T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  		}  		else  			T [i] = p;  	}  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [2] * 255.0))));  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if (s == 0) {  	// achromatic color (gray scale)  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0))));  }  else {  	double q = (l < 0.5) ? (l * (1.0 + s)) : (l + s - (l * s));  	double p = (2.0 * l) - q;  	double Hk = h / 360.0;  	double[] T = new double[3];  	T [0] = Hk + (1.0 / 3.0);  	// Tr  	T [1] = Hk;  	// Tb  	T [2] = Hk - (1.0 / 3.0);  	// Tg  	for (int i = 0; i < 3; i++) {  		if (T [i] < 0)  			T [i] += 1.0;  		if (T [i] > 1)  			T [i] -= 1.0;  		if ((T [i] * 6) < 1) {  			T [i] = p + ((q - p) * 6.0 * T [i]);  		}  		else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  		 {  			T [i] = q;  		}  		else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  		 {  			T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  		}  		else  			T [i] = p;  	}  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [2] * 255.0))));  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if (s == 0) {  	// achromatic color (gray scale)  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0))));  }  else {  	double q = (l < 0.5) ? (l * (1.0 + s)) : (l + s - (l * s));  	double p = (2.0 * l) - q;  	double Hk = h / 360.0;  	double[] T = new double[3];  	T [0] = Hk + (1.0 / 3.0);  	// Tr  	T [1] = Hk;  	// Tb  	T [2] = Hk - (1.0 / 3.0);  	// Tg  	for (int i = 0; i < 3; i++) {  		if (T [i] < 0)  			T [i] += 1.0;  		if (T [i] > 1)  			T [i] -= 1.0;  		if ((T [i] * 6) < 1) {  			T [i] = p + ((q - p) * 6.0 * T [i]);  		}  		else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  		 {  			T [i] = q;  		}  		else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  		 {  			T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  		}  		else  			T [i] = p;  	}  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [2] * 255.0))));  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if (s == 0) {  	// achromatic color (gray scale)  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0))));  }  else {  	double q = (l < 0.5) ? (l * (1.0 + s)) : (l + s - (l * s));  	double p = (2.0 * l) - q;  	double Hk = h / 360.0;  	double[] T = new double[3];  	T [0] = Hk + (1.0 / 3.0);  	// Tr  	T [1] = Hk;  	// Tb  	T [2] = Hk - (1.0 / 3.0);  	// Tg  	for (int i = 0; i < 3; i++) {  		if (T [i] < 0)  			T [i] += 1.0;  		if (T [i] > 1)  			T [i] -= 1.0;  		if ((T [i] * 6) < 1) {  			T [i] = p + ((q - p) * 6.0 * T [i]);  		}  		else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  		 {  			T [i] = q;  		}  		else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  		 {  			T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  		}  		else  			T [i] = p;  	}  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [2] * 255.0))));  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if (s == 0) {  	// achromatic color (gray scale)  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0))));  }  else {  	double q = (l < 0.5) ? (l * (1.0 + s)) : (l + s - (l * s));  	double p = (2.0 * l) - q;  	double Hk = h / 360.0;  	double[] T = new double[3];  	T [0] = Hk + (1.0 / 3.0);  	// Tr  	T [1] = Hk;  	// Tb  	T [2] = Hk - (1.0 / 3.0);  	// Tg  	for (int i = 0; i < 3; i++) {  		if (T [i] < 0)  			T [i] += 1.0;  		if (T [i] > 1)  			T [i] -= 1.0;  		if ((T [i] * 6) < 1) {  			T [i] = p + ((q - p) * 6.0 * T [i]);  		}  		else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  		 {  			T [i] = q;  		}  		else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  		 {  			T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  		}  		else  			T [i] = p;  	}  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [2] * 255.0))));  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if (s == 0) {  	// achromatic color (gray scale)  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0))));  }  else {  	double q = (l < 0.5) ? (l * (1.0 + s)) : (l + s - (l * s));  	double p = (2.0 * l) - q;  	double Hk = h / 360.0;  	double[] T = new double[3];  	T [0] = Hk + (1.0 / 3.0);  	// Tr  	T [1] = Hk;  	// Tb  	T [2] = Hk - (1.0 / 3.0);  	// Tg  	for (int i = 0; i < 3; i++) {  		if (T [i] < 0)  			T [i] += 1.0;  		if (T [i] > 1)  			T [i] -= 1.0;  		if ((T [i] * 6) < 1) {  			T [i] = p + ((q - p) * 6.0 * T [i]);  		}  		else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  		 {  			T [i] = q;  		}  		else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  		 {  			T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  		}  		else  			T [i] = p;  	}  	return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [2] * 255.0))));  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0))));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0))));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' l * 255.0))));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: T [0] = Hk + (1.0 / 3.0);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: T [2] = Hk - (1.0 / 3.0);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: T [2] = Hk - (1.0 / 3.0);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	if (T [i] < 0)  		T [i] += 1.0;  	if (T [i] > 1)  		T [i] -= 1.0;  	if ((T [i] * 6) < 1) {  		T [i] = p + ((q - p) * 6.0 * T [i]);  	}  	else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  	 {  		T [i] = q;  	}  	else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  	 {  		T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  	}  	else  		T [i] = p;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	if (T [i] < 0)  		T [i] += 1.0;  	if (T [i] > 1)  		T [i] -= 1.0;  	if ((T [i] * 6) < 1) {  		T [i] = p + ((q - p) * 6.0 * T [i]);  	}  	else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  	 {  		T [i] = q;  	}  	else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  	 {  		T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  	}  	else  		T [i] = p;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	if (T [i] < 0)  		T [i] += 1.0;  	if (T [i] > 1)  		T [i] -= 1.0;  	if ((T [i] * 6) < 1) {  		T [i] = p + ((q - p) * 6.0 * T [i]);  	}  	else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  	 {  		T [i] = q;  	}  	else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  	 {  		T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  	}  	else  		T [i] = p;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	if (T [i] < 0)  		T [i] += 1.0;  	if (T [i] > 1)  		T [i] -= 1.0;  	if ((T [i] * 6) < 1) {  		T [i] = p + ((q - p) * 6.0 * T [i]);  	}  	else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  	 {  		T [i] = q;  	}  	else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  	 {  		T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  	}  	else  		T [i] = p;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	if (T [i] < 0)  		T [i] += 1.0;  	if (T [i] > 1)  		T [i] -= 1.0;  	if ((T [i] * 6) < 1) {  		T [i] = p + ((q - p) * 6.0 * T [i]);  	}  	else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  	 {  		T [i] = q;  	}  	else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  	 {  		T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  	}  	else  		T [i] = p;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	if (T [i] < 0)  		T [i] += 1.0;  	if (T [i] > 1)  		T [i] -= 1.0;  	if ((T [i] * 6) < 1) {  		T [i] = p + ((q - p) * 6.0 * T [i]);  	}  	else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  	 {  		T [i] = q;  	}  	else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  	 {  		T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  	}  	else  		T [i] = p;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	if (T [i] < 0)  		T [i] += 1.0;  	if (T [i] > 1)  		T [i] -= 1.0;  	if ((T [i] * 6) < 1) {  		T [i] = p + ((q - p) * 6.0 * T [i]);  	}  	else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  	 {  		T [i] = q;  	}  	else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  	 {  		T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  	}  	else  		T [i] = p;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	if (T [i] < 0)  		T [i] += 1.0;  	if (T [i] > 1)  		T [i] -= 1.0;  	if ((T [i] * 6) < 1) {  		T [i] = p + ((q - p) * 6.0 * T [i]);  	}  	else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  	 {  		T [i] = q;  	}  	else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  	 {  		T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  	}  	else  		T [i] = p;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	if (T [i] < 0)  		T [i] += 1.0;  	if (T [i] > 1)  		T [i] -= 1.0;  	if ((T [i] * 6) < 1) {  		T [i] = p + ((q - p) * 6.0 * T [i]);  	}  	else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5  	 {  		T [i] = q;  	}  	else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)  	 {  		T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  	}  	else  		T [i] = p;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if ((T [i] * 6) < 1) {  	T [i] = p + ((q - p) * 6.0 * T [i]);  }  else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5   {  	T [i] = q;  }  else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)   {  	T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  }  else  	T [i] = p;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if ((T [i] * 6) < 1) {  	T [i] = p + ((q - p) * 6.0 * T [i]);  }  else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5   {  	T [i] = q;  }  else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)   {  	T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  }  else  	T [i] = p;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if ((T [i] * 6) < 1) {  	T [i] = p + ((q - p) * 6.0 * T [i]);  }  else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5   {  	T [i] = q;  }  else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)   {  	T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  }  else  	T [i] = p;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if ((T [i] * 6) < 1) {  	T [i] = p + ((q - p) * 6.0 * T [i]);  }  else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5   {  	T [i] = q;  }  else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)   {  	T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  }  else  	T [i] = p;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if ((T [i] * 6) < 1) {  	T [i] = p + ((q - p) * 6.0 * T [i]);  }  else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5   {  	T [i] = q;  }  else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)   {  	T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  }  else  	T [i] = p;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if ((T [i] * 6) < 1) {  	T [i] = p + ((q - p) * 6.0 * T [i]);  }  else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5   {  	T [i] = q;  }  else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)   {  	T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  }  else  	T [i] = p;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if ((T [i] * 6) < 1) {  	T [i] = p + ((q - p) * 6.0 * T [i]);  }  else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5   {  	T [i] = q;  }  else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)   {  	T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  }  else  	T [i] = p;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if ((T [i] * 6) < 1) {  	T [i] = p + ((q - p) * 6.0 * T [i]);  }  else if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5   {  	T [i] = q;  }  else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)   {  	T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  }  else  	T [i] = p;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: T [i] = p + ((q - p) * 6.0 * T [i]);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5   {  	T [i] = q;  }  else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)   {  	T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  }  else  	T [i] = p;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5   {  	T [i] = q;  }  else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)   {  	T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  }  else  	T [i] = p;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5   {  	T [i] = q;  }  else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)   {  	T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  }  else  	T [i] = p;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5   {  	T [i] = q;  }  else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)   {  	T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  }  else  	T [i] = p;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5   {  	T [i] = q;  }  else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)   {  	T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  }  else  	T [i] = p;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if ((T [i] * 2.0) < 1)//(1.0/6.0)<=T[i] && T[i]<0.5   {  	T [i] = q;  }  else if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)   {  	T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  }  else  	T [i] = p;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)   {  	T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  }  else  	T [i] = p;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)   {  	T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  }  else  	T [i] = p;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)   {  	T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  }  else  	T [i] = p;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)   {  	T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  }  else  	T [i] = p;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: if ((T [i] * 3.0) < 2)// 0.5<=T[i] && T[i]<(2.0/3.0)   {  	T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  }  else  	T [i] = p;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: T [i] = p + (q - p) * ((2.0 / 3.0) - T [i]) * 6.0;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [2] * 255.0))));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [2] * 255.0))));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [2] * 255.0))));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSLtoRGB,The following statement contains a magic number: return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' T [2] * 255.0))));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == min) {  	h = 0;  	// undefined  }  else if (max == red && green >= blue) {  	h = 60.0 * (green - blue) / (max - min);  }  else if (max == red && green < blue) {  	h = 60.0 * (green - blue) / (max - min) + 360.0;  }  else if (max == green) {  	h = 60.0 * (blue - red) / (max - min) + 120.0;  }  else if (max == blue) {  	h = 60.0 * (red - green) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == min) {  	h = 0;  	// undefined  }  else if (max == red && green >= blue) {  	h = 60.0 * (green - blue) / (max - min);  }  else if (max == red && green < blue) {  	h = 60.0 * (green - blue) / (max - min) + 360.0;  }  else if (max == green) {  	h = 60.0 * (blue - red) / (max - min) + 120.0;  }  else if (max == blue) {  	h = 60.0 * (red - green) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == min) {  	h = 0;  	// undefined  }  else if (max == red && green >= blue) {  	h = 60.0 * (green - blue) / (max - min);  }  else if (max == red && green < blue) {  	h = 60.0 * (green - blue) / (max - min) + 360.0;  }  else if (max == green) {  	h = 60.0 * (blue - red) / (max - min) + 120.0;  }  else if (max == blue) {  	h = 60.0 * (red - green) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == min) {  	h = 0;  	// undefined  }  else if (max == red && green >= blue) {  	h = 60.0 * (green - blue) / (max - min);  }  else if (max == red && green < blue) {  	h = 60.0 * (green - blue) / (max - min) + 360.0;  }  else if (max == green) {  	h = 60.0 * (blue - red) / (max - min) + 120.0;  }  else if (max == blue) {  	h = 60.0 * (red - green) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == min) {  	h = 0;  	// undefined  }  else if (max == red && green >= blue) {  	h = 60.0 * (green - blue) / (max - min);  }  else if (max == red && green < blue) {  	h = 60.0 * (green - blue) / (max - min) + 360.0;  }  else if (max == green) {  	h = 60.0 * (blue - red) / (max - min) + 120.0;  }  else if (max == blue) {  	h = 60.0 * (red - green) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == min) {  	h = 0;  	// undefined  }  else if (max == red && green >= blue) {  	h = 60.0 * (green - blue) / (max - min);  }  else if (max == red && green < blue) {  	h = 60.0 * (green - blue) / (max - min) + 360.0;  }  else if (max == green) {  	h = 60.0 * (blue - red) / (max - min) + 120.0;  }  else if (max == blue) {  	h = 60.0 * (red - green) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == min) {  	h = 0;  	// undefined  }  else if (max == red && green >= blue) {  	h = 60.0 * (green - blue) / (max - min);  }  else if (max == red && green < blue) {  	h = 60.0 * (green - blue) / (max - min) + 360.0;  }  else if (max == green) {  	h = 60.0 * (blue - red) / (max - min) + 120.0;  }  else if (max == blue) {  	h = 60.0 * (red - green) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == red && green >= blue) {  	h = 60.0 * (green - blue) / (max - min);  }  else if (max == red && green < blue) {  	h = 60.0 * (green - blue) / (max - min) + 360.0;  }  else if (max == green) {  	h = 60.0 * (blue - red) / (max - min) + 120.0;  }  else if (max == blue) {  	h = 60.0 * (red - green) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == red && green >= blue) {  	h = 60.0 * (green - blue) / (max - min);  }  else if (max == red && green < blue) {  	h = 60.0 * (green - blue) / (max - min) + 360.0;  }  else if (max == green) {  	h = 60.0 * (blue - red) / (max - min) + 120.0;  }  else if (max == blue) {  	h = 60.0 * (red - green) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == red && green >= blue) {  	h = 60.0 * (green - blue) / (max - min);  }  else if (max == red && green < blue) {  	h = 60.0 * (green - blue) / (max - min) + 360.0;  }  else if (max == green) {  	h = 60.0 * (blue - red) / (max - min) + 120.0;  }  else if (max == blue) {  	h = 60.0 * (red - green) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == red && green >= blue) {  	h = 60.0 * (green - blue) / (max - min);  }  else if (max == red && green < blue) {  	h = 60.0 * (green - blue) / (max - min) + 360.0;  }  else if (max == green) {  	h = 60.0 * (blue - red) / (max - min) + 120.0;  }  else if (max == blue) {  	h = 60.0 * (red - green) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == red && green >= blue) {  	h = 60.0 * (green - blue) / (max - min);  }  else if (max == red && green < blue) {  	h = 60.0 * (green - blue) / (max - min) + 360.0;  }  else if (max == green) {  	h = 60.0 * (blue - red) / (max - min) + 120.0;  }  else if (max == blue) {  	h = 60.0 * (red - green) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == red && green >= blue) {  	h = 60.0 * (green - blue) / (max - min);  }  else if (max == red && green < blue) {  	h = 60.0 * (green - blue) / (max - min) + 360.0;  }  else if (max == green) {  	h = 60.0 * (blue - red) / (max - min) + 120.0;  }  else if (max == blue) {  	h = 60.0 * (red - green) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == red && green >= blue) {  	h = 60.0 * (green - blue) / (max - min);  }  else if (max == red && green < blue) {  	h = 60.0 * (green - blue) / (max - min) + 360.0;  }  else if (max == green) {  	h = 60.0 * (blue - red) / (max - min) + 120.0;  }  else if (max == blue) {  	h = 60.0 * (red - green) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: h = 60.0 * (green - blue) / (max - min);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == red && green < blue) {  	h = 60.0 * (green - blue) / (max - min) + 360.0;  }  else if (max == green) {  	h = 60.0 * (blue - red) / (max - min) + 120.0;  }  else if (max == blue) {  	h = 60.0 * (red - green) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == red && green < blue) {  	h = 60.0 * (green - blue) / (max - min) + 360.0;  }  else if (max == green) {  	h = 60.0 * (blue - red) / (max - min) + 120.0;  }  else if (max == blue) {  	h = 60.0 * (red - green) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == red && green < blue) {  	h = 60.0 * (green - blue) / (max - min) + 360.0;  }  else if (max == green) {  	h = 60.0 * (blue - red) / (max - min) + 120.0;  }  else if (max == blue) {  	h = 60.0 * (red - green) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == red && green < blue) {  	h = 60.0 * (green - blue) / (max - min) + 360.0;  }  else if (max == green) {  	h = 60.0 * (blue - red) / (max - min) + 120.0;  }  else if (max == blue) {  	h = 60.0 * (red - green) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == red && green < blue) {  	h = 60.0 * (green - blue) / (max - min) + 360.0;  }  else if (max == green) {  	h = 60.0 * (blue - red) / (max - min) + 120.0;  }  else if (max == blue) {  	h = 60.0 * (red - green) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == red && green < blue) {  	h = 60.0 * (green - blue) / (max - min) + 360.0;  }  else if (max == green) {  	h = 60.0 * (blue - red) / (max - min) + 120.0;  }  else if (max == blue) {  	h = 60.0 * (red - green) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: h = 60.0 * (green - blue) / (max - min) + 360.0;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: h = 60.0 * (green - blue) / (max - min) + 360.0;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == green) {  	h = 60.0 * (blue - red) / (max - min) + 120.0;  }  else if (max == blue) {  	h = 60.0 * (red - green) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == green) {  	h = 60.0 * (blue - red) / (max - min) + 120.0;  }  else if (max == blue) {  	h = 60.0 * (red - green) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == green) {  	h = 60.0 * (blue - red) / (max - min) + 120.0;  }  else if (max == blue) {  	h = 60.0 * (red - green) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == green) {  	h = 60.0 * (blue - red) / (max - min) + 120.0;  }  else if (max == blue) {  	h = 60.0 * (red - green) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: h = 60.0 * (blue - red) / (max - min) + 120.0;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: h = 60.0 * (blue - red) / (max - min) + 120.0;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == blue) {  	h = 60.0 * (red - green) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == blue) {  	h = 60.0 * (red - green) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: h = 60.0 * (red - green) / (max - min) + 240.0;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: h = 60.0 * (red - green) / (max - min) + 240.0;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: l = (max + min) / 2.0;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (l == 0 || max == min) {  	s = 0;  }  else if (0 < l && l <= 0.5) {  	s = (max - min) / (max + min);  }  else if (l > 0.5) {  	s = (max - min) / (2 - (max + min));  	//(max-min > 0)?  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (l == 0 || max == min) {  	s = 0;  }  else if (0 < l && l <= 0.5) {  	s = (max - min) / (max + min);  }  else if (l > 0.5) {  	s = (max - min) / (2 - (max + min));  	//(max-min > 0)?  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (l == 0 || max == min) {  	s = 0;  }  else if (0 < l && l <= 0.5) {  	s = (max - min) / (max + min);  }  else if (l > 0.5) {  	s = (max - min) / (2 - (max + min));  	//(max-min > 0)?  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (0 < l && l <= 0.5) {  	s = (max - min) / (max + min);  }  else if (l > 0.5) {  	s = (max - min) / (2 - (max + min));  	//(max-min > 0)?  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (0 < l && l <= 0.5) {  	s = (max - min) / (max + min);  }  else if (l > 0.5) {  	s = (max - min) / (2 - (max + min));  	//(max-min > 0)?  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (0 < l && l <= 0.5) {  	s = (max - min) / (max + min);  }  else if (l > 0.5) {  	s = (max - min) / (2 - (max + min));  	//(max-min > 0)?  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (l > 0.5) {  	s = (max - min) / (2 - (max + min));  	//(max-min > 0)?  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (l > 0.5) {  	s = (max - min) / (2 - (max + min));  	//(max-min > 0)?  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: s = (max - min) / (2 - (max + min));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == min) {  	h = 0;  	// undefined  }  else if (max == nRed && nGreen >= nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min);  }  else if (max == nRed && nGreen < nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min) + 360.0;  }  else if (max == nGreen) {  	h = 60.0 * (nBlue - nRed) / (max - min) + 120.0;  }  else if (max == nBlue) {  	h = 60.0 * (nRed - nGreen) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == min) {  	h = 0;  	// undefined  }  else if (max == nRed && nGreen >= nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min);  }  else if (max == nRed && nGreen < nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min) + 360.0;  }  else if (max == nGreen) {  	h = 60.0 * (nBlue - nRed) / (max - min) + 120.0;  }  else if (max == nBlue) {  	h = 60.0 * (nRed - nGreen) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == min) {  	h = 0;  	// undefined  }  else if (max == nRed && nGreen >= nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min);  }  else if (max == nRed && nGreen < nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min) + 360.0;  }  else if (max == nGreen) {  	h = 60.0 * (nBlue - nRed) / (max - min) + 120.0;  }  else if (max == nBlue) {  	h = 60.0 * (nRed - nGreen) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == min) {  	h = 0;  	// undefined  }  else if (max == nRed && nGreen >= nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min);  }  else if (max == nRed && nGreen < nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min) + 360.0;  }  else if (max == nGreen) {  	h = 60.0 * (nBlue - nRed) / (max - min) + 120.0;  }  else if (max == nBlue) {  	h = 60.0 * (nRed - nGreen) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == min) {  	h = 0;  	// undefined  }  else if (max == nRed && nGreen >= nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min);  }  else if (max == nRed && nGreen < nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min) + 360.0;  }  else if (max == nGreen) {  	h = 60.0 * (nBlue - nRed) / (max - min) + 120.0;  }  else if (max == nBlue) {  	h = 60.0 * (nRed - nGreen) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == min) {  	h = 0;  	// undefined  }  else if (max == nRed && nGreen >= nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min);  }  else if (max == nRed && nGreen < nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min) + 360.0;  }  else if (max == nGreen) {  	h = 60.0 * (nBlue - nRed) / (max - min) + 120.0;  }  else if (max == nBlue) {  	h = 60.0 * (nRed - nGreen) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == min) {  	h = 0;  	// undefined  }  else if (max == nRed && nGreen >= nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min);  }  else if (max == nRed && nGreen < nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min) + 360.0;  }  else if (max == nGreen) {  	h = 60.0 * (nBlue - nRed) / (max - min) + 120.0;  }  else if (max == nBlue) {  	h = 60.0 * (nRed - nGreen) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == nRed && nGreen >= nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min);  }  else if (max == nRed && nGreen < nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min) + 360.0;  }  else if (max == nGreen) {  	h = 60.0 * (nBlue - nRed) / (max - min) + 120.0;  }  else if (max == nBlue) {  	h = 60.0 * (nRed - nGreen) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == nRed && nGreen >= nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min);  }  else if (max == nRed && nGreen < nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min) + 360.0;  }  else if (max == nGreen) {  	h = 60.0 * (nBlue - nRed) / (max - min) + 120.0;  }  else if (max == nBlue) {  	h = 60.0 * (nRed - nGreen) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == nRed && nGreen >= nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min);  }  else if (max == nRed && nGreen < nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min) + 360.0;  }  else if (max == nGreen) {  	h = 60.0 * (nBlue - nRed) / (max - min) + 120.0;  }  else if (max == nBlue) {  	h = 60.0 * (nRed - nGreen) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == nRed && nGreen >= nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min);  }  else if (max == nRed && nGreen < nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min) + 360.0;  }  else if (max == nGreen) {  	h = 60.0 * (nBlue - nRed) / (max - min) + 120.0;  }  else if (max == nBlue) {  	h = 60.0 * (nRed - nGreen) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == nRed && nGreen >= nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min);  }  else if (max == nRed && nGreen < nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min) + 360.0;  }  else if (max == nGreen) {  	h = 60.0 * (nBlue - nRed) / (max - min) + 120.0;  }  else if (max == nBlue) {  	h = 60.0 * (nRed - nGreen) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == nRed && nGreen >= nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min);  }  else if (max == nRed && nGreen < nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min) + 360.0;  }  else if (max == nGreen) {  	h = 60.0 * (nBlue - nRed) / (max - min) + 120.0;  }  else if (max == nBlue) {  	h = 60.0 * (nRed - nGreen) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == nRed && nGreen >= nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min);  }  else if (max == nRed && nGreen < nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min) + 360.0;  }  else if (max == nGreen) {  	h = 60.0 * (nBlue - nRed) / (max - min) + 120.0;  }  else if (max == nBlue) {  	h = 60.0 * (nRed - nGreen) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: h = 60.0 * (nGreen - nBlue) / (max - min);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == nRed && nGreen < nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min) + 360.0;  }  else if (max == nGreen) {  	h = 60.0 * (nBlue - nRed) / (max - min) + 120.0;  }  else if (max == nBlue) {  	h = 60.0 * (nRed - nGreen) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == nRed && nGreen < nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min) + 360.0;  }  else if (max == nGreen) {  	h = 60.0 * (nBlue - nRed) / (max - min) + 120.0;  }  else if (max == nBlue) {  	h = 60.0 * (nRed - nGreen) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == nRed && nGreen < nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min) + 360.0;  }  else if (max == nGreen) {  	h = 60.0 * (nBlue - nRed) / (max - min) + 120.0;  }  else if (max == nBlue) {  	h = 60.0 * (nRed - nGreen) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == nRed && nGreen < nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min) + 360.0;  }  else if (max == nGreen) {  	h = 60.0 * (nBlue - nRed) / (max - min) + 120.0;  }  else if (max == nBlue) {  	h = 60.0 * (nRed - nGreen) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == nRed && nGreen < nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min) + 360.0;  }  else if (max == nGreen) {  	h = 60.0 * (nBlue - nRed) / (max - min) + 120.0;  }  else if (max == nBlue) {  	h = 60.0 * (nRed - nGreen) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == nRed && nGreen < nBlue) {  	h = 60.0 * (nGreen - nBlue) / (max - min) + 360.0;  }  else if (max == nGreen) {  	h = 60.0 * (nBlue - nRed) / (max - min) + 120.0;  }  else if (max == nBlue) {  	h = 60.0 * (nRed - nGreen) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: h = 60.0 * (nGreen - nBlue) / (max - min) + 360.0;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: h = 60.0 * (nGreen - nBlue) / (max - min) + 360.0;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == nGreen) {  	h = 60.0 * (nBlue - nRed) / (max - min) + 120.0;  }  else if (max == nBlue) {  	h = 60.0 * (nRed - nGreen) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == nGreen) {  	h = 60.0 * (nBlue - nRed) / (max - min) + 120.0;  }  else if (max == nBlue) {  	h = 60.0 * (nRed - nGreen) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == nGreen) {  	h = 60.0 * (nBlue - nRed) / (max - min) + 120.0;  }  else if (max == nBlue) {  	h = 60.0 * (nRed - nGreen) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == nGreen) {  	h = 60.0 * (nBlue - nRed) / (max - min) + 120.0;  }  else if (max == nBlue) {  	h = 60.0 * (nRed - nGreen) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: h = 60.0 * (nBlue - nRed) / (max - min) + 120.0;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: h = 60.0 * (nBlue - nRed) / (max - min) + 120.0;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == nBlue) {  	h = 60.0 * (nRed - nGreen) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (max == nBlue) {  	h = 60.0 * (nRed - nGreen) / (max - min) + 240.0;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: h = 60.0 * (nRed - nGreen) / (max - min) + 240.0;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: h = 60.0 * (nRed - nGreen) / (max - min) + 240.0;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: l = (max + min) / 2.0;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (l == 0 || max == min) {  	s = 0;  }  else if (0 < l && l <= 0.5) {  	s = (max - min) / (max + min);  }  else if (l > 0.5) {  	s = (max - min) / (2 - (max + min));  	//(max-min > 0)?  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (l == 0 || max == min) {  	s = 0;  }  else if (0 < l && l <= 0.5) {  	s = (max - min) / (max + min);  }  else if (l > 0.5) {  	s = (max - min) / (2 - (max + min));  	//(max-min > 0)?  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (l == 0 || max == min) {  	s = 0;  }  else if (0 < l && l <= 0.5) {  	s = (max - min) / (max + min);  }  else if (l > 0.5) {  	s = (max - min) / (2 - (max + min));  	//(max-min > 0)?  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (0 < l && l <= 0.5) {  	s = (max - min) / (max + min);  }  else if (l > 0.5) {  	s = (max - min) / (2 - (max + min));  	//(max-min > 0)?  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (0 < l && l <= 0.5) {  	s = (max - min) / (max + min);  }  else if (l > 0.5) {  	s = (max - min) / (2 - (max + min));  	//(max-min > 0)?  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (0 < l && l <= 0.5) {  	s = (max - min) / (max + min);  }  else if (l > 0.5) {  	s = (max - min) / (2 - (max + min));  	//(max-min > 0)?  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (l > 0.5) {  	s = (max - min) / (2 - (max + min));  	//(max-min > 0)?  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: if (l > 0.5) {  	s = (max - min) / (2 - (max + min));  	//(max-min > 0)?  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSL,The following statement contains a magic number: s = (max - min) / (2 - (max + min));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSB,The following statement contains a magic number: if (max == r && g >= b) {  	if (max - min == 0)  		h = 0.0;  	else  		h = 60 * (g - b) / (max - min);  }  else if (max == r && g < b) {  	h = 60 * (g - b) / (max - min) + 360;  }  else if (max == g) {  	h = 60 * (b - r) / (max - min) + 120;  }  else if (max == b) {  	h = 60 * (r - g) / (max - min) + 240;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSB,The following statement contains a magic number: if (max == r && g >= b) {  	if (max - min == 0)  		h = 0.0;  	else  		h = 60 * (g - b) / (max - min);  }  else if (max == r && g < b) {  	h = 60 * (g - b) / (max - min) + 360;  }  else if (max == g) {  	h = 60 * (b - r) / (max - min) + 120;  }  else if (max == b) {  	h = 60 * (r - g) / (max - min) + 240;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSB,The following statement contains a magic number: if (max == r && g >= b) {  	if (max - min == 0)  		h = 0.0;  	else  		h = 60 * (g - b) / (max - min);  }  else if (max == r && g < b) {  	h = 60 * (g - b) / (max - min) + 360;  }  else if (max == g) {  	h = 60 * (b - r) / (max - min) + 120;  }  else if (max == b) {  	h = 60 * (r - g) / (max - min) + 240;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSB,The following statement contains a magic number: if (max == r && g >= b) {  	if (max - min == 0)  		h = 0.0;  	else  		h = 60 * (g - b) / (max - min);  }  else if (max == r && g < b) {  	h = 60 * (g - b) / (max - min) + 360;  }  else if (max == g) {  	h = 60 * (b - r) / (max - min) + 120;  }  else if (max == b) {  	h = 60 * (r - g) / (max - min) + 240;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSB,The following statement contains a magic number: if (max == r && g >= b) {  	if (max - min == 0)  		h = 0.0;  	else  		h = 60 * (g - b) / (max - min);  }  else if (max == r && g < b) {  	h = 60 * (g - b) / (max - min) + 360;  }  else if (max == g) {  	h = 60 * (b - r) / (max - min) + 120;  }  else if (max == b) {  	h = 60 * (r - g) / (max - min) + 240;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSB,The following statement contains a magic number: if (max == r && g >= b) {  	if (max - min == 0)  		h = 0.0;  	else  		h = 60 * (g - b) / (max - min);  }  else if (max == r && g < b) {  	h = 60 * (g - b) / (max - min) + 360;  }  else if (max == g) {  	h = 60 * (b - r) / (max - min) + 120;  }  else if (max == b) {  	h = 60 * (r - g) / (max - min) + 240;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSB,The following statement contains a magic number: if (max == r && g >= b) {  	if (max - min == 0)  		h = 0.0;  	else  		h = 60 * (g - b) / (max - min);  }  else if (max == r && g < b) {  	h = 60 * (g - b) / (max - min) + 360;  }  else if (max == g) {  	h = 60 * (b - r) / (max - min) + 120;  }  else if (max == b) {  	h = 60 * (r - g) / (max - min) + 240;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSB,The following statement contains a magic number: if (max - min == 0)  	h = 0.0;  else  	h = 60 * (g - b) / (max - min);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSB,The following statement contains a magic number: h = 60 * (g - b) / (max - min);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSB,The following statement contains a magic number: if (max == r && g < b) {  	h = 60 * (g - b) / (max - min) + 360;  }  else if (max == g) {  	h = 60 * (b - r) / (max - min) + 120;  }  else if (max == b) {  	h = 60 * (r - g) / (max - min) + 240;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSB,The following statement contains a magic number: if (max == r && g < b) {  	h = 60 * (g - b) / (max - min) + 360;  }  else if (max == g) {  	h = 60 * (b - r) / (max - min) + 120;  }  else if (max == b) {  	h = 60 * (r - g) / (max - min) + 240;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSB,The following statement contains a magic number: if (max == r && g < b) {  	h = 60 * (g - b) / (max - min) + 360;  }  else if (max == g) {  	h = 60 * (b - r) / (max - min) + 120;  }  else if (max == b) {  	h = 60 * (r - g) / (max - min) + 240;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSB,The following statement contains a magic number: if (max == r && g < b) {  	h = 60 * (g - b) / (max - min) + 360;  }  else if (max == g) {  	h = 60 * (b - r) / (max - min) + 120;  }  else if (max == b) {  	h = 60 * (r - g) / (max - min) + 240;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSB,The following statement contains a magic number: if (max == r && g < b) {  	h = 60 * (g - b) / (max - min) + 360;  }  else if (max == g) {  	h = 60 * (b - r) / (max - min) + 120;  }  else if (max == b) {  	h = 60 * (r - g) / (max - min) + 240;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSB,The following statement contains a magic number: if (max == r && g < b) {  	h = 60 * (g - b) / (max - min) + 360;  }  else if (max == g) {  	h = 60 * (b - r) / (max - min) + 120;  }  else if (max == b) {  	h = 60 * (r - g) / (max - min) + 240;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSB,The following statement contains a magic number: h = 60 * (g - b) / (max - min) + 360;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSB,The following statement contains a magic number: h = 60 * (g - b) / (max - min) + 360;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSB,The following statement contains a magic number: if (max == g) {  	h = 60 * (b - r) / (max - min) + 120;  }  else if (max == b) {  	h = 60 * (r - g) / (max - min) + 240;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSB,The following statement contains a magic number: if (max == g) {  	h = 60 * (b - r) / (max - min) + 120;  }  else if (max == b) {  	h = 60 * (r - g) / (max - min) + 240;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSB,The following statement contains a magic number: if (max == g) {  	h = 60 * (b - r) / (max - min) + 120;  }  else if (max == b) {  	h = 60 * (r - g) / (max - min) + 240;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSB,The following statement contains a magic number: if (max == g) {  	h = 60 * (b - r) / (max - min) + 120;  }  else if (max == b) {  	h = 60 * (r - g) / (max - min) + 240;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSB,The following statement contains a magic number: h = 60 * (b - r) / (max - min) + 120;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSB,The following statement contains a magic number: h = 60 * (b - r) / (max - min) + 120;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSB,The following statement contains a magic number: if (max == b) {  	h = 60 * (r - g) / (max - min) + 240;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSB,The following statement contains a magic number: if (max == b) {  	h = 60 * (r - g) / (max - min) + 240;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSB,The following statement contains a magic number: h = 60 * (r - g) / (max - min) + 240;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoHSB,The following statement contains a magic number: h = 60 * (r - g) / (max - min) + 240;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoYUV,The following statement contains a magic number: yuv.Y = 0.299 * red + 0.587 * green + 0.114 * blue;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoYUV,The following statement contains a magic number: yuv.Y = 0.299 * red + 0.587 * green + 0.114 * blue;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoYUV,The following statement contains a magic number: yuv.Y = 0.299 * red + 0.587 * green + 0.114 * blue;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoYUV,The following statement contains a magic number: yuv.U = -0.1471376975169300226 * red - 0.2888623024830699774 * green + 0.436 * blue;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoYUV,The following statement contains a magic number: yuv.U = -0.1471376975169300226 * red - 0.2888623024830699774 * green + 0.436 * blue;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoYUV,The following statement contains a magic number: yuv.U = -0.1471376975169300226 * red - 0.2888623024830699774 * green + 0.436 * blue;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoYUV,The following statement contains a magic number: yuv.V = 0.615 * red - 0.5149857346647646220 * green - 0.1000142653352353780 * blue;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoYUV,The following statement contains a magic number: yuv.V = 0.615 * red - 0.5149857346647646220 * green - 0.1000142653352353780 * blue;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoYUV,The following statement contains a magic number: yuv.V = 0.615 * red - 0.5149857346647646220 * green - 0.1000142653352353780 * blue;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoXYZ,The following statement contains a magic number: return new CIEXYZ ((r * 0.4124 + g * 0.3576 + b * 0.1805)' (r * 0.2126 + g * 0.7152 + b * 0.0722)' (r * 0.0193 + g * 0.1192 + b * 0.9505));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoXYZ,The following statement contains a magic number: return new CIEXYZ ((r * 0.4124 + g * 0.3576 + b * 0.1805)' (r * 0.2126 + g * 0.7152 + b * 0.0722)' (r * 0.0193 + g * 0.1192 + b * 0.9505));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoXYZ,The following statement contains a magic number: return new CIEXYZ ((r * 0.4124 + g * 0.3576 + b * 0.1805)' (r * 0.2126 + g * 0.7152 + b * 0.0722)' (r * 0.0193 + g * 0.1192 + b * 0.9505));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoXYZ,The following statement contains a magic number: return new CIEXYZ ((r * 0.4124 + g * 0.3576 + b * 0.1805)' (r * 0.2126 + g * 0.7152 + b * 0.0722)' (r * 0.0193 + g * 0.1192 + b * 0.9505));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoXYZ,The following statement contains a magic number: return new CIEXYZ ((r * 0.4124 + g * 0.3576 + b * 0.1805)' (r * 0.2126 + g * 0.7152 + b * 0.0722)' (r * 0.0193 + g * 0.1192 + b * 0.9505));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoXYZ,The following statement contains a magic number: return new CIEXYZ ((r * 0.4124 + g * 0.3576 + b * 0.1805)' (r * 0.2126 + g * 0.7152 + b * 0.0722)' (r * 0.0193 + g * 0.1192 + b * 0.9505));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoXYZ,The following statement contains a magic number: return new CIEXYZ ((r * 0.4124 + g * 0.3576 + b * 0.1805)' (r * 0.2126 + g * 0.7152 + b * 0.0722)' (r * 0.0193 + g * 0.1192 + b * 0.9505));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoXYZ,The following statement contains a magic number: return new CIEXYZ ((r * 0.4124 + g * 0.3576 + b * 0.1805)' (r * 0.2126 + g * 0.7152 + b * 0.0722)' (r * 0.0193 + g * 0.1192 + b * 0.9505));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,RGBtoXYZ,The following statement contains a magic number: return new CIEXYZ ((r * 0.4124 + g * 0.3576 + b * 0.1805)' (r * 0.2126 + g * 0.7152 + b * 0.0722)' (r * 0.0193 + g * 0.1192 + b * 0.9505));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,YUVtoRGB,The following statement contains a magic number: rgb.Red = Convert.ToInt32 ((y + 1.139837398373983740 * v) * 255);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,YUVtoRGB,The following statement contains a magic number: rgb.Red = Convert.ToInt32 ((y + 1.139837398373983740 * v) * 255);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,YUVtoRGB,The following statement contains a magic number: rgb.Green = Convert.ToInt32 ((y - 0.3946517043589703515 * u - 0.5805986066674976801 * v) * 255);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,YUVtoRGB,The following statement contains a magic number: rgb.Green = Convert.ToInt32 ((y - 0.3946517043589703515 * u - 0.5805986066674976801 * v) * 255);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,YUVtoRGB,The following statement contains a magic number: rgb.Green = Convert.ToInt32 ((y - 0.3946517043589703515 * u - 0.5805986066674976801 * v) * 255);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,YUVtoRGB,The following statement contains a magic number: rgb.Blue = Convert.ToInt32 ((y + 2.032110091743119266 * u) * 255);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,YUVtoRGB,The following statement contains a magic number: rgb.Blue = Convert.ToInt32 ((y + 2.032110091743119266 * u) * 255);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,XYZtoRGB,The following statement contains a magic number: Clinear [0] = x * 3.2410 - y * 1.5374 - z * 0.4986;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,XYZtoRGB,The following statement contains a magic number: Clinear [0] = x * 3.2410 - y * 1.5374 - z * 0.4986;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,XYZtoRGB,The following statement contains a magic number: Clinear [0] = x * 3.2410 - y * 1.5374 - z * 0.4986;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,XYZtoRGB,The following statement contains a magic number: Clinear [1] = -x * 0.9692 + y * 1.8760 - z * 0.0416;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,XYZtoRGB,The following statement contains a magic number: Clinear [1] = -x * 0.9692 + y * 1.8760 - z * 0.0416;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,XYZtoRGB,The following statement contains a magic number: Clinear [1] = -x * 0.9692 + y * 1.8760 - z * 0.0416;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,XYZtoRGB,The following statement contains a magic number: Clinear [2] = x * 0.0556 - y * 0.2040 + z * 1.0570;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,XYZtoRGB,The following statement contains a magic number: Clinear [2] = x * 0.0556 - y * 0.2040 + z * 1.0570;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,XYZtoRGB,The following statement contains a magic number: Clinear [2] = x * 0.0556 - y * 0.2040 + z * 1.0570;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,XYZtoRGB,The following statement contains a magic number: Clinear [2] = x * 0.0556 - y * 0.2040 + z * 1.0570;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,XYZtoRGB,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	Clinear [i] = (Clinear [i] <= 0.0031308) ? 12.92 * Clinear [i] : (1 + 0.055) * Math.Pow (Clinear [i]' (1.0 / 2.4)) - 0.055;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,XYZtoRGB,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	Clinear [i] = (Clinear [i] <= 0.0031308) ? 12.92 * Clinear [i] : (1 + 0.055) * Math.Pow (Clinear [i]' (1.0 / 2.4)) - 0.055;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,XYZtoRGB,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	Clinear [i] = (Clinear [i] <= 0.0031308) ? 12.92 * Clinear [i] : (1 + 0.055) * Math.Pow (Clinear [i]' (1.0 / 2.4)) - 0.055;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,XYZtoRGB,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	Clinear [i] = (Clinear [i] <= 0.0031308) ? 12.92 * Clinear [i] : (1 + 0.055) * Math.Pow (Clinear [i]' (1.0 / 2.4)) - 0.055;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,XYZtoRGB,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	Clinear [i] = (Clinear [i] <= 0.0031308) ? 12.92 * Clinear [i] : (1 + 0.055) * Math.Pow (Clinear [i]' (1.0 / 2.4)) - 0.055;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,XYZtoRGB,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	Clinear [i] = (Clinear [i] <= 0.0031308) ? 12.92 * Clinear [i] : (1 + 0.055) * Math.Pow (Clinear [i]' (1.0 / 2.4)) - 0.055;  }  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,XYZtoRGB,The following statement contains a magic number: Clinear [i] = (Clinear [i] <= 0.0031308) ? 12.92 * Clinear [i] : (1 + 0.055) * Math.Pow (Clinear [i]' (1.0 / 2.4)) - 0.055;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,XYZtoRGB,The following statement contains a magic number: Clinear [i] = (Clinear [i] <= 0.0031308) ? 12.92 * Clinear [i] : (1 + 0.055) * Math.Pow (Clinear [i]' (1.0 / 2.4)) - 0.055;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,XYZtoRGB,The following statement contains a magic number: Clinear [i] = (Clinear [i] <= 0.0031308) ? 12.92 * Clinear [i] : (1 + 0.055) * Math.Pow (Clinear [i]' (1.0 / 2.4)) - 0.055;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,XYZtoRGB,The following statement contains a magic number: Clinear [i] = (Clinear [i] <= 0.0031308) ? 12.92 * Clinear [i] : (1 + 0.055) * Math.Pow (Clinear [i]' (1.0 / 2.4)) - 0.055;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,XYZtoRGB,The following statement contains a magic number: Clinear [i] = (Clinear [i] <= 0.0031308) ? 12.92 * Clinear [i] : (1 + 0.055) * Math.Pow (Clinear [i]' (1.0 / 2.4)) - 0.055;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,XYZtoRGB,The following statement contains a magic number: return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' Clinear [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' Clinear [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' Clinear [2] * 255.0))));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,XYZtoRGB,The following statement contains a magic number: return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' Clinear [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' Clinear [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' Clinear [2] * 255.0))));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,XYZtoRGB,The following statement contains a magic number: return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' Clinear [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' Clinear [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' Clinear [2] * 255.0))));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,XYZtoRGB,The following statement contains a magic number: return new RGB (Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' Clinear [0] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' Clinear [1] * 255.0)))' Convert.ToInt32 (Double.Parse (String.Format ("{0:0.00}"' Clinear [2] * 255.0))));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,Fxyz,The following statement contains a magic number: return ((t > 0.008856) ? Math.Pow (t' (1.0 / 3.0)) : (7.787 * t + 16.0 / 116.0));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,Fxyz,The following statement contains a magic number: return ((t > 0.008856) ? Math.Pow (t' (1.0 / 3.0)) : (7.787 * t + 16.0 / 116.0));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,Fxyz,The following statement contains a magic number: return ((t > 0.008856) ? Math.Pow (t' (1.0 / 3.0)) : (7.787 * t + 16.0 / 116.0));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,Fxyz,The following statement contains a magic number: return ((t > 0.008856) ? Math.Pow (t' (1.0 / 3.0)) : (7.787 * t + 16.0 / 116.0));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,Fxyz,The following statement contains a magic number: return ((t > 0.008856) ? Math.Pow (t' (1.0 / 3.0)) : (7.787 * t + 16.0 / 116.0));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,XYZtoLab,The following statement contains a magic number: lab.L = 116.0 * Fxyz (y / CIEXYZ.D65.Y) - 16;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,XYZtoLab,The following statement contains a magic number: lab.L = 116.0 * Fxyz (y / CIEXYZ.D65.Y) - 16;  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,XYZtoLab,The following statement contains a magic number: lab.A = 500.0 * (Fxyz (x / CIEXYZ.D65.X) - Fxyz (y / CIEXYZ.D65.Y));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,XYZtoLab,The following statement contains a magic number: lab.B = 200.0 * (Fxyz (y / CIEXYZ.D65.Y) - Fxyz (z / CIEXYZ.D65.Z));  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,LabtoXYZ,The following statement contains a magic number: return new CIEXYZ ((fx > theta) ? CIEXYZ.D65.X * (fx * fx * fx) : (fx - 16.0 / 116.0) * 3 * (theta * theta) * CIEXYZ.D65.X' (fy > theta) ? CIEXYZ.D65.Y * (fy * fy * fy) : (fy - 16.0 / 116.0) * 3 * (theta * theta) * CIEXYZ.D65.Y' (fz > theta) ? CIEXYZ.D65.Z * (fz * fz * fz) : (fz - 16.0 / 116.0) * 3 * (theta * theta) * CIEXYZ.D65.Z);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,LabtoXYZ,The following statement contains a magic number: return new CIEXYZ ((fx > theta) ? CIEXYZ.D65.X * (fx * fx * fx) : (fx - 16.0 / 116.0) * 3 * (theta * theta) * CIEXYZ.D65.X' (fy > theta) ? CIEXYZ.D65.Y * (fy * fy * fy) : (fy - 16.0 / 116.0) * 3 * (theta * theta) * CIEXYZ.D65.Y' (fz > theta) ? CIEXYZ.D65.Z * (fz * fz * fz) : (fz - 16.0 / 116.0) * 3 * (theta * theta) * CIEXYZ.D65.Z);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,LabtoXYZ,The following statement contains a magic number: return new CIEXYZ ((fx > theta) ? CIEXYZ.D65.X * (fx * fx * fx) : (fx - 16.0 / 116.0) * 3 * (theta * theta) * CIEXYZ.D65.X' (fy > theta) ? CIEXYZ.D65.Y * (fy * fy * fy) : (fy - 16.0 / 116.0) * 3 * (theta * theta) * CIEXYZ.D65.Y' (fz > theta) ? CIEXYZ.D65.Z * (fz * fz * fz) : (fz - 16.0 / 116.0) * 3 * (theta * theta) * CIEXYZ.D65.Z);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,LabtoXYZ,The following statement contains a magic number: return new CIEXYZ ((fx > theta) ? CIEXYZ.D65.X * (fx * fx * fx) : (fx - 16.0 / 116.0) * 3 * (theta * theta) * CIEXYZ.D65.X' (fy > theta) ? CIEXYZ.D65.Y * (fy * fy * fy) : (fy - 16.0 / 116.0) * 3 * (theta * theta) * CIEXYZ.D65.Y' (fz > theta) ? CIEXYZ.D65.Z * (fz * fz * fz) : (fz - 16.0 / 116.0) * 3 * (theta * theta) * CIEXYZ.D65.Z);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,LabtoXYZ,The following statement contains a magic number: return new CIEXYZ ((fx > theta) ? CIEXYZ.D65.X * (fx * fx * fx) : (fx - 16.0 / 116.0) * 3 * (theta * theta) * CIEXYZ.D65.X' (fy > theta) ? CIEXYZ.D65.Y * (fy * fy * fy) : (fy - 16.0 / 116.0) * 3 * (theta * theta) * CIEXYZ.D65.Y' (fz > theta) ? CIEXYZ.D65.Z * (fz * fz * fz) : (fz - 16.0 / 116.0) * 3 * (theta * theta) * CIEXYZ.D65.Z);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,LabtoXYZ,The following statement contains a magic number: return new CIEXYZ ((fx > theta) ? CIEXYZ.D65.X * (fx * fx * fx) : (fx - 16.0 / 116.0) * 3 * (theta * theta) * CIEXYZ.D65.X' (fy > theta) ? CIEXYZ.D65.Y * (fy * fy * fy) : (fy - 16.0 / 116.0) * 3 * (theta * theta) * CIEXYZ.D65.Y' (fz > theta) ? CIEXYZ.D65.Z * (fz * fz * fz) : (fz - 16.0 / 116.0) * 3 * (theta * theta) * CIEXYZ.D65.Z);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,LabtoXYZ,The following statement contains a magic number: return new CIEXYZ ((fx > theta) ? CIEXYZ.D65.X * (fx * fx * fx) : (fx - 16.0 / 116.0) * 3 * (theta * theta) * CIEXYZ.D65.X' (fy > theta) ? CIEXYZ.D65.Y * (fy * fy * fy) : (fy - 16.0 / 116.0) * 3 * (theta * theta) * CIEXYZ.D65.Y' (fz > theta) ? CIEXYZ.D65.Z * (fz * fz * fz) : (fz - 16.0 / 116.0) * 3 * (theta * theta) * CIEXYZ.D65.Z);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,LabtoXYZ,The following statement contains a magic number: return new CIEXYZ ((fx > theta) ? CIEXYZ.D65.X * (fx * fx * fx) : (fx - 16.0 / 116.0) * 3 * (theta * theta) * CIEXYZ.D65.X' (fy > theta) ? CIEXYZ.D65.Y * (fy * fy * fy) : (fy - 16.0 / 116.0) * 3 * (theta * theta) * CIEXYZ.D65.Y' (fz > theta) ? CIEXYZ.D65.Z * (fz * fz * fz) : (fz - 16.0 / 116.0) * 3 * (theta * theta) * CIEXYZ.D65.Z);  
Magic Number,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,LabtoXYZ,The following statement contains a magic number: return new CIEXYZ ((fx > theta) ? CIEXYZ.D65.X * (fx * fx * fx) : (fx - 16.0 / 116.0) * 3 * (theta * theta) * CIEXYZ.D65.X' (fy > theta) ? CIEXYZ.D65.Y * (fy * fy * fy) : (fy - 16.0 / 116.0) * 3 * (theta * theta) * CIEXYZ.D65.Y' (fz > theta) ? CIEXYZ.D65.Z * (fz * fz * fz) : (fz - 16.0 / 116.0) * 3 * (theta * theta) * CIEXYZ.D65.Z);  
Magic Number,CNNWB.Common,Mappings,C:\repos\supby_cnnwb\CNNWB.Common\Enums.cs,Mappings,The following statement contains a magic number: for (int channel = 0; channel < previousLayerMapCount; channel++)  	for (int map = 0; map < currentLayerMapCount; map++)  		Mapping [(channel * currentLayerMapCount) + map] = (random.Next (100) < density);  
Magic Number,CNNWB.Common,Mappings,C:\repos\supby_cnnwb\CNNWB.Common\Enums.cs,Mappings,The following statement contains a magic number: for (int map = 0; map < currentLayerMapCount; map++)  	Mapping [(channel * currentLayerMapCount) + map] = (random.Next (100) < density);  
Magic Number,CNNWB.Common,Mappings,C:\repos\supby_cnnwb\CNNWB.Common\Enums.cs,Mappings,The following statement contains a magic number: Mapping [(channel * currentLayerMapCount) + map] = (random.Next (100) < density);  
Magic Number,CNNWB.Common,MathUtil,C:\repos\supby_cnnwb\CNNWB.Common\MathUtil.cs,Bound,The following statement contains a magic number: if (value < -1.0E20)  	return -1.0E20;  
Magic Number,CNNWB.Common,MathUtil,C:\repos\supby_cnnwb\CNNWB.Common\MathUtil.cs,Bound,The following statement contains a magic number: if (value < -1.0E20)  	return -1.0E20;  
Magic Number,CNNWB.Common,MathUtil,C:\repos\supby_cnnwb\CNNWB.Common\MathUtil.cs,Bound,The following statement contains a magic number: return -1.0E20;  
Magic Number,CNNWB.Common,MathUtil,C:\repos\supby_cnnwb\CNNWB.Common\MathUtil.cs,Bound,The following statement contains a magic number: return value > 1.0E20 ? 1.0E20 : value;  
Magic Number,CNNWB.Common,MathUtil,C:\repos\supby_cnnwb\CNNWB.Common\MathUtil.cs,Bound,The following statement contains a magic number: return value > 1.0E20 ? 1.0E20 : value;  
Magic Number,DequeTest,Tester,C:\repos\supby_cnnwb\CNNWB.Common\Deque_src\Tester.cs,TestCopyTo,The following statement contains a magic number: array = new int[deque.Count * 2];  
Magic Number,DequeTest,Tester,C:\repos\supby_cnnwb\CNNWB.Common\Deque_src\Tester.cs,TestCopyTo,The following statement contains a magic number: try {  	deque.CopyTo (array' deque.Count / 2);  	Debug.Fail ("Exception failed");  }  catch (Exception ex) {  	Console.WriteLine (ex.Message);  }  
Magic Number,DequeTest,Tester,C:\repos\supby_cnnwb\CNNWB.Common\Deque_src\Tester.cs,TestCopyTo,The following statement contains a magic number: deque.CopyTo (array' deque.Count / 2);  
Magic Number,DequeTest,Tester,C:\repos\supby_cnnwb\CNNWB.Common\Deque_src\Tester.cs,TestCopyTo,The following statement contains a magic number: try {  	deque.CopyTo (new int[10' 10]' deque.Count);  	Debug.Fail ("Exception failed");  }  catch (Exception ex) {  	Console.WriteLine (ex.Message);  }  
Magic Number,DequeTest,Tester,C:\repos\supby_cnnwb\CNNWB.Common\Deque_src\Tester.cs,TestCopyTo,The following statement contains a magic number: try {  	deque.CopyTo (new int[10' 10]' deque.Count);  	Debug.Fail ("Exception failed");  }  catch (Exception ex) {  	Console.WriteLine (ex.Message);  }  
Magic Number,DequeTest,Tester,C:\repos\supby_cnnwb\CNNWB.Common\Deque_src\Tester.cs,TestCopyTo,The following statement contains a magic number: deque.CopyTo (new int[10' 10]' deque.Count);  
Magic Number,DequeTest,Tester,C:\repos\supby_cnnwb\CNNWB.Common\Deque_src\Tester.cs,TestCopyTo,The following statement contains a magic number: deque.CopyTo (new int[10' 10]' deque.Count);  
Magic Number,System.Threading,ThreadSafeRandom,C:\repos\supby_cnnwb\CNNWB.Common\ThreadSafeRandom.cs,NextPercentage,The following statement contains a magic number: return _local.Value.Next (101);  
Missing Default,CNNWB.Common,ColorSpaceHelper,C:\repos\supby_cnnwb\CNNWB.Common\ColorSpaceHelper.cs,HSBtoRGB,The following switch statement is missing a default case: switch (sectorNumber) {  case 0:  	r = hsb.Brightness;  	g = t;  	b = p;  	break;  case 1:  	r = q;  	g = hsb.Brightness;  	b = p;  	break;  case 2:  	r = p;  	g = hsb.Brightness;  	b = t;  	break;  case 3:  	r = p;  	g = q;  	b = hsb.Brightness;  	break;  case 4:  	r = t;  	g = p;  	b = hsb.Brightness;  	break;  case 5:  	r = hsb.Brightness;  	g = p;  	b = q;  	break;  }  
