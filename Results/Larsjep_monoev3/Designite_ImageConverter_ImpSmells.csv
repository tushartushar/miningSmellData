Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ImageConverter,Program,F:\newReposMay17\Larsjep_monoev3\Tools\ImageConverter\Program.cs,convertBitmap,Cyclomatic complexity of the method is 9
Magic Number,ImageConverter,Program,F:\newReposMay17\Larsjep_monoev3\Tools\ImageConverter\Program.cs,convertBitmap,The following statement contains a magic number: using (FileStream of = new FileStream (outputFile' FileMode.Create))  	using (BinaryWriter bw = new BinaryWriter (of)) {  		bw.Write (MagicCodeBitmap);  		bw.Write (b.Width);  		bw.Write (b.Height);  		UInt32[] bitmapData = new UInt32[(b.Width * b.Height + 31) / 32];  		BitStreamer bs = new BitStreamer (bitmapData);  		for (int y = 0; y != b.Height; ++y) {  			for (int x = 0; x != b.Width; ++x) {  				if (b.GetPixel (x' y).B < 200)  					bs.PutBits (1' 1);  				else  					bs.PutBits (0' 1);  			}  		}  		foreach (var word in bitmapData)  			bw.Write (word);  	}  
Magic Number,ImageConverter,Program,F:\newReposMay17\Larsjep_monoev3\Tools\ImageConverter\Program.cs,convertBitmap,The following statement contains a magic number: using (FileStream of = new FileStream (outputFile' FileMode.Create))  	using (BinaryWriter bw = new BinaryWriter (of)) {  		bw.Write (MagicCodeBitmap);  		bw.Write (b.Width);  		bw.Write (b.Height);  		UInt32[] bitmapData = new UInt32[(b.Width * b.Height + 31) / 32];  		BitStreamer bs = new BitStreamer (bitmapData);  		for (int y = 0; y != b.Height; ++y) {  			for (int x = 0; x != b.Width; ++x) {  				if (b.GetPixel (x' y).B < 200)  					bs.PutBits (1' 1);  				else  					bs.PutBits (0' 1);  			}  		}  		foreach (var word in bitmapData)  			bw.Write (word);  	}  
Magic Number,ImageConverter,Program,F:\newReposMay17\Larsjep_monoev3\Tools\ImageConverter\Program.cs,convertBitmap,The following statement contains a magic number: using (FileStream of = new FileStream (outputFile' FileMode.Create))  	using (BinaryWriter bw = new BinaryWriter (of)) {  		bw.Write (MagicCodeBitmap);  		bw.Write (b.Width);  		bw.Write (b.Height);  		UInt32[] bitmapData = new UInt32[(b.Width * b.Height + 31) / 32];  		BitStreamer bs = new BitStreamer (bitmapData);  		for (int y = 0; y != b.Height; ++y) {  			for (int x = 0; x != b.Width; ++x) {  				if (b.GetPixel (x' y).B < 200)  					bs.PutBits (1' 1);  				else  					bs.PutBits (0' 1);  			}  		}  		foreach (var word in bitmapData)  			bw.Write (word);  	}  
Magic Number,ImageConverter,Program,F:\newReposMay17\Larsjep_monoev3\Tools\ImageConverter\Program.cs,convertBitmap,The following statement contains a magic number: using (BinaryWriter bw = new BinaryWriter (of)) {  	bw.Write (MagicCodeBitmap);  	bw.Write (b.Width);  	bw.Write (b.Height);  	UInt32[] bitmapData = new UInt32[(b.Width * b.Height + 31) / 32];  	BitStreamer bs = new BitStreamer (bitmapData);  	for (int y = 0; y != b.Height; ++y) {  		for (int x = 0; x != b.Width; ++x) {  			if (b.GetPixel (x' y).B < 200)  				bs.PutBits (1' 1);  			else  				bs.PutBits (0' 1);  		}  	}  	foreach (var word in bitmapData)  		bw.Write (word);  }  
Magic Number,ImageConverter,Program,F:\newReposMay17\Larsjep_monoev3\Tools\ImageConverter\Program.cs,convertBitmap,The following statement contains a magic number: using (BinaryWriter bw = new BinaryWriter (of)) {  	bw.Write (MagicCodeBitmap);  	bw.Write (b.Width);  	bw.Write (b.Height);  	UInt32[] bitmapData = new UInt32[(b.Width * b.Height + 31) / 32];  	BitStreamer bs = new BitStreamer (bitmapData);  	for (int y = 0; y != b.Height; ++y) {  		for (int x = 0; x != b.Width; ++x) {  			if (b.GetPixel (x' y).B < 200)  				bs.PutBits (1' 1);  			else  				bs.PutBits (0' 1);  		}  	}  	foreach (var word in bitmapData)  		bw.Write (word);  }  
Magic Number,ImageConverter,Program,F:\newReposMay17\Larsjep_monoev3\Tools\ImageConverter\Program.cs,convertBitmap,The following statement contains a magic number: using (BinaryWriter bw = new BinaryWriter (of)) {  	bw.Write (MagicCodeBitmap);  	bw.Write (b.Width);  	bw.Write (b.Height);  	UInt32[] bitmapData = new UInt32[(b.Width * b.Height + 31) / 32];  	BitStreamer bs = new BitStreamer (bitmapData);  	for (int y = 0; y != b.Height; ++y) {  		for (int x = 0; x != b.Width; ++x) {  			if (b.GetPixel (x' y).B < 200)  				bs.PutBits (1' 1);  			else  				bs.PutBits (0' 1);  		}  	}  	foreach (var word in bitmapData)  		bw.Write (word);  }  
Magic Number,ImageConverter,Program,F:\newReposMay17\Larsjep_monoev3\Tools\ImageConverter\Program.cs,convertBitmap,The following statement contains a magic number: for (int y = 0; y != b.Height; ++y) {  	for (int x = 0; x != b.Width; ++x) {  		if (b.GetPixel (x' y).B < 200)  			bs.PutBits (1' 1);  		else  			bs.PutBits (0' 1);  	}  }  
Magic Number,ImageConverter,Program,F:\newReposMay17\Larsjep_monoev3\Tools\ImageConverter\Program.cs,convertBitmap,The following statement contains a magic number: for (int x = 0; x != b.Width; ++x) {  	if (b.GetPixel (x' y).B < 200)  		bs.PutBits (1' 1);  	else  		bs.PutBits (0' 1);  }  
Magic Number,ImageConverter,Program,F:\newReposMay17\Larsjep_monoev3\Tools\ImageConverter\Program.cs,convertBitmap,The following statement contains a magic number: if (b.GetPixel (x' y).B < 200)  	bs.PutBits (1' 1);  else  	bs.PutBits (0' 1);  
Magic Number,ImageConverter,Program,F:\newReposMay17\Larsjep_monoev3\Tools\ImageConverter\Program.cs,Main,The following statement contains a magic number: if (args.Length != 2) {  	Console.WriteLine ("Usage: ImageConverter inputfile outputfile");  	return -1;  }  
