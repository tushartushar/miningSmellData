Implementation smell,Namespace,Class,File,Method,Description
Long Method,MonoBrickFirmware.Sound,Speaker,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sound\Speaker.cs,PlaySoundFile,The method has 106 lines of code.
Complex Method,MonoBrickFirmware.Display,EV3Lcd,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\EV3Lcd.cs,DrawArrow,Cyclomatic complexity of the method is 14
Complex Method,MonoBrickFirmware.Display,EV3Lcd,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\EV3Lcd.cs,DrawEllipse,Cyclomatic complexity of the method is 8
Complex Method,MonoBrickFirmware.Sensors,SensorFactory,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\SensorFactory.cs,GetSensor,Cyclomatic complexity of the method is 24
Complex Method,MonoBrickFirmware.Sensors,NXTColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTColorSensor.cs,CalculateColor,Cyclomatic complexity of the method is 15
Complex Method,MonoBrickFirmware.UserInput,ButtonEvents,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\UserInput\ButtonEvents.cs,ButtonPollThread,Cyclomatic complexity of the method is 13
Complex Method,MonoBrickFirmware.Sound,Speaker,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sound\Speaker.cs,PlaySoundFile,Cyclomatic complexity of the method is 13
Complex Method,MonoBrickFirmware.Display.Dialogs.UserInput,TextButton,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Keyboard.cs,DeleteCharacter,Cyclomatic complexity of the method is 9
Long Parameter List,MonoBrickFirmware.Native,Libc,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Native\Libc.cs,mmap,The method has 6 parameters. Parameters: addr' len' prot' flags' fd' offset
Long Parameter List,MonoBrickFirmware.Tools,PIDAbstraction,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Tools\PIDAbstraction.cs,PIDAbstraction,The method has 8 parameters. Parameters: P' I' D' newSampleTime' maxOut' minOut' maxChangePerSec' minChangePerSec
Long Parameter List,MonoBrickFirmware.Display,Lcd,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Lcd.cs,DrawBitmap,The method has 5 parameters. Parameters: bs' p' xsize' ysize' color
Long Parameter List,MonoBrickFirmware.Display,Lcd,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Lcd.cs,WriteTextBox,The method has 5 parameters. Parameters: f' r' text' color' aln
Long Parameter List,MonoBrickFirmware.Display,Lcd,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Lcd.cs,DrawEllipse,The method has 5 parameters. Parameters: center' radiusA' radiusB' color' fill
Long Parameter List,MonoBrickFirmware.Display,ILcd,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\ILcd.cs,DrawBitmap,The method has 5 parameters. Parameters: bs' p' xsize' ysize' color
Long Parameter List,MonoBrickFirmware.Display,ILcd,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\ILcd.cs,WriteTextBox,The method has 5 parameters. Parameters: f' r' text' color' aln
Long Parameter List,MonoBrickFirmware.Display,ILcd,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\ILcd.cs,DrawEllipse,The method has 5 parameters. Parameters: center' radiusA' radiusB' color' fill
Long Parameter List,MonoBrickFirmware.Display,EV3Lcd,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\EV3Lcd.cs,DrawBitmap,The method has 5 parameters. Parameters: bs' p' xSize' ySize' color
Long Parameter List,MonoBrickFirmware.Display,EV3Lcd,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\EV3Lcd.cs,WriteTextBox,The method has 5 parameters. Parameters: f' r' text' color' aln
Long Parameter List,MonoBrickFirmware.Display,EV3Lcd,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\EV3Lcd.cs,DrawEllipse,The method has 5 parameters. Parameters: center' radiusA' radiusB' color' fill
Long Parameter List,MonoBrickFirmware.Movement,Output,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Movement\Output.cs,SetStepPower,The method has 5 parameters. Parameters: power' rampUpSteps' constantSpeedSteps' rampDownSteps' brake
Long Parameter List,MonoBrickFirmware.Movement,Output,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Movement\Output.cs,SetTimePower,The method has 5 parameters. Parameters: power' rampUpTime' constantSpeedTime' rampDownTime' brake
Long Parameter List,MonoBrickFirmware.Movement,Output,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Movement\Output.cs,SetStepSpeed,The method has 5 parameters. Parameters: speed' rampUpSteps' constantSpeedSteps' rampDownSteps' brake
Long Parameter List,MonoBrickFirmware.Movement,Output,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Movement\Output.cs,SetTimeSpeed,The method has 5 parameters. Parameters: speed' rampUpTime' constantSpeedTime' rampDownTime' brake
Long Parameter List,MonoBrickFirmware.Movement,Output,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Movement\Output.cs,WriteProfile,The method has 6 parameters. Parameters: code' speedOrPower' rampUp' constant' rampDown' brake
Long Parameter List,MonoBrickFirmware.Movement,Motor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Movement\Motor.cs,SpeedProfile,The method has 5 parameters. Parameters: speed' rampUpSteps' constantSpeedSteps' rampDownSteps' brake
Long Parameter List,MonoBrickFirmware.Movement,Motor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Movement\Motor.cs,SpeedProfileTime,The method has 5 parameters. Parameters: speed' rampUpTimeMs' constantSpeedTimeMs' rampDownTimeMs' brake
Long Parameter List,MonoBrickFirmware.Movement,Motor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Movement\Motor.cs,PowerProfile,The method has 5 parameters. Parameters: power' rampUpSteps' constantSpeedSteps' rampDownSteps' brake
Long Parameter List,MonoBrickFirmware.Movement,Motor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Movement\Motor.cs,PowerProfileTime,The method has 5 parameters. Parameters: power' rampUpTimeMs' constantSpeedTimeMs' rampDownTimeMs' brake
Long Parameter List,MonoBrickFirmware.Movement,PositionPID,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Movement\PositionPID.cs,PositionPID,The method has 8 parameters. Parameters: motor' position' brake' maxPower' P' I' D' settleTimeMs
Long Parameter List,MonoBrickFirmware.Display.Menus,ItemWithCharacterInput,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithCharacterInput.cs,ItemWithCharacterInput,The method has 7 parameters. Parameters: subject' dialogTitle' startText' OnChanged' hideInput' disableEnter' disableNumberAndSymbols
Long Parameter List,MonoBrickFirmware.Display.Menus,ItemWithNumericInput,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithNumericInput.cs,ItemWithNumericInput,The method has 5 parameters. Parameters: text' startValue' OnValueChanged' min' max
Long Parameter List,MonoBrickFirmware.Display.Menus,ItemWithCheckBoxStep,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithCheckBoxStep.cs,ItemWithCheckBoxStep,The method has 5 parameters. Parameters: text' checkedAtStart' stepTitle' step' OnCheckedChanged
Long Parameter List,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,Dialog,The method has 5 parameters. Parameters: f' title' width' height' topOffset
Long Parameter List,MonoBrickFirmware.Display.Dialogs,QuestionDialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\QuestionsDialog.cs,QuestionDialog,The method has 5 parameters. Parameters: question' title' positiveText' negativeText' isPositiveSelected
Long Parameter List,MonoBrickFirmware.Display.Dialogs,DialogWithProgessAnimation,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\DialogWithProgessAnimation.cs,DialogWithProgessAnimation,The method has 5 parameters. Parameters: f' title' width' height' topOffset
Long Parameter List,MonoBrickFirmware.Display.Dialogs.UserInput,Button,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,Button,The method has 7 parameters. Parameters: text' position' size' container' id' disable' exitType
Long Statement,MonoBrickFirmware.Native,UnixDevice,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Native\Libc.cs,MMap,The length of the statement  "			IntPtr ptr = Libc.mmap(IntPtr.Zero' size' Libc.ProtectionFlags.PROT_READ | Libc.ProtectionFlags.PROT_WRITE' Libc.MMapFlags.MAP_SHARED' fd' offset); " is 147.
Long Statement,MonoBrickFirmware.Native,MemoryArea,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Native\Libc.cs,Write,The length of the statement  "				throw new IndexOutOfRangeException (string.Format ("Out of range accessing index {0}' max {1}"' offset + data.Length' size)); " is 125.
Long Statement,MonoBrickFirmware.Native,MemoryArea,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Native\Libc.cs,Read,The length of the statement  "				throw new IndexOutOfRangeException (string.Format ("Out of range accessing index {0}' max {1}"' offset + length' size)); " is 120.
Long Statement,MonoBrickFirmware.Tools,XmlHelper,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Tools\XmlHelper.cs,CreateSerializer,The length of the statement  "				XmlSerializerImplementation imp =  (XmlSerializerImplementation)asm.CreateInstance("Mono.GeneratedSerializers.Literal.XmlSerializerContract");		 " is 142.
Long Statement,MonoBrickFirmware.Display,EV3Lcd,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\EV3Lcd.cs,TakeScreenShot,The length of the statement  "			TakeScreenShot(System.IO.Directory.GetCurrentDirectory()' "ScreenShot-" + string.Format ("{0:yyyy-MM-dd_hh-mm-ss-tt}"' DateTime.Now) + ".bmp"); " is 143.
Long Statement,MonoBrickFirmware.Sensors,SensorManager,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\SensorManager.cs,ClearUartPortChanged,The length of the statement  "				UartDevice.IoCtl ((Int32)UartIOClearChanges'  SetupCommand (port' ConnectionType.UART' SensorType.None' (byte)UARTMode.Mode0)); " is 127.
Long Statement,MonoBrickFirmware.Sensors,UartSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\UARTSensor.cs,ClearPortChanged,The length of the statement  "			uartMemory.Write (UartStatusOffset + (int) port' new byte[] { (byte)(uartMemory.Read (UartStatusOffset +(int)port' 1) [0] & ~UartPortChanged) }); " is 145.
Long Statement,MonoBrickFirmware.Sensors,UltraSonicSettings,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTUltraSonicSensor.cs,ToString,The length of the statement  "             return "Zero: " + zero.ToString() + " Scale factor: " + scaleFactor.ToString() + " Scale division: " + scaleDivision.ToString(); " is 128.
Long Statement,MonoBrickFirmware.Display.Menus,ItemList,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemList.cs,OnDrawTitle,The length of the statement  "			Rectangle arrowRect = new Rectangle (new Point (rectangle.P2.X - (arrowWidth + arrowOffset)' rectangle.P1.Y + arrowEdge)' new Point (rectangle.P2.X - arrowOffset' rectangle.P2.Y - arrowEdge)); " is 192.
Long Statement,MonoBrickFirmware.Display.Menus,ItemList,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemList.cs,DrawItemList,The length of the statement  "			Rectangle arrowRect = new Rectangle (new Point (Lcd.Width / 2 - arrowWidth / 2' Lcd.Height - arrowHeight)' new Point (Lcd.Width / 2 + arrowWidth / 2' Lcd.Height - 1)); " is 167.
Long Statement,MonoBrickFirmware.Display.Menus,ItemWithCheckBox,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithCheckBox.cs,OnDrawTitle,The length of the statement  "			Rectangle outer = new Rectangle(new Point(Lcd.Width - xCheckBoxSize + edgeSize' r.P1.Y + edgeSize)' new Point(r.P2.X - edgeSize'r.P2.Y - edgeSize)); " is 148.
Long Statement,MonoBrickFirmware.Display.Menus,ItemWithCheckBox,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithCheckBox.cs,OnDrawTitle,The length of the statement  "			Rectangle innter = new Rectangle(new Point(Lcd.Width - xCheckBoxSize + lineSize+edgeSize' r.P1.Y+lineSize + edgeSize)' new Point(r.P2.X - lineSize - edgeSize'r.P2.Y - lineSize - edgeSize)); " is 189.
Long Statement,MonoBrickFirmware.Display.Menus,ItemWithNumericInput,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithNumericInput.cs,OnDrawTitle,The length of the statement  "			Rectangle leftArrowRect = new Rectangle(new Point(numericRect.P1.X' numericRect.P1.Y+arrowEdge)' new Point(numericRect.P1.X+ arrowWidth' numericRect.P2.Y-arrowEdge)); " is 166.
Long Statement,MonoBrickFirmware.Display.Menus,ItemWithNumericInput,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithNumericInput.cs,OnDrawTitle,The length of the statement  "			Rectangle rightArrowRect = new Rectangle( new Point(numericRect.P2.X-(arrowWidth + rightArrowOffset)' numericRect.P1.Y+arrowEdge) ' new Point(numericRect.P2.X-rightArrowOffset'numericRect.P2.Y-arrowEdge)); " is 205.
Long Statement,MonoBrickFirmware.Display.Menus,ItemWithOptions<OptionType>,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithOptions.cs,OnDrawTitle,The length of the statement  "			Rectangle leftArrowRect = new Rectangle(new Point(numericRect.P1.X' numericRect.P1.Y+arrowEdge)' new Point(numericRect.P1.X+ arrowWidth' numericRect.P2.Y-arrowEdge)); " is 166.
Long Statement,MonoBrickFirmware.Display.Menus,ItemWithOptions<OptionType>,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithOptions.cs,OnDrawTitle,The length of the statement  "			Rectangle rightArrowRect = new Rectangle( new Point(numericRect.P2.X-(arrowWidth + rightArrowOffset)' numericRect.P1.Y+arrowEdge) ' new Point(numericRect.P2.X-rightArrowOffset'numericRect.P2.Y-arrowEdge)); " is 205.
Long Statement,MonoBrickFirmware.Display.Menus,ItemWithSettings,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithSettings.cs,OnCreateChildList,The length of the statement  "			autoConnect = new ItemWithCheckBox ("WiFi auto connect"' FirmwareSettings.GeneralSettings.ConnectToWiFiAtStartUp' OnAutoConnectChanged); " is 136.
Long Statement,MonoBrickFirmware.Display.Menus,ItemWithSettings,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithSettings.cs,OnCreateChildList,The length of the statement  "			autoCheck = new ItemWithCheckBox("Update check"'FirmwareSettings.GeneralSettings.CheckForSwUpdatesAtStartUp' OnAutoCheckChanged); " is 129.
Long Statement,MonoBrickFirmware.Display.Menus,ItemWiFiOptions,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithWiFiOptions.cs,OnCreateChildList,The length of the statement  "			ssidItem = new ItemWithCharacterInput("SSID"' "Enter SSID"' FirmwareSettings.WiFiSettings.SSID' OnSsidChanged'false' true ' false); " is 131.
Long Statement,MonoBrickFirmware.Display.Menus,ItemWiFiOptions,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithWiFiOptions.cs,OnCreateChildList,The length of the statement  "			passwordItem = new ItemWithCharacterInput("Password"' "Password"' FirmwareSettings.WiFiSettings.Password' OnPasswordChanged' true' true' false); " is 144.
Long Statement,MonoBrickFirmware.Display.Menus,ItemWiFiOptions,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithWiFiOptions.cs,OnCreateChildList,The length of the statement  "			encryptionItem = new ItemWithOptions<string>("Encryption"' new string[]{"None"'"WPA/2"}' OnEncryptionOptionChanged' FirmwareSettings.WiFiSettings.Encryption ? 1 : 0); " is 166.
Long Statement,MonoBrickFirmware.Display.Menus,TurnWiFiOnOffCheckBox,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithWiFiOptions.cs,OnTurnWiFiOn,The length of the statement  "			return WiFiDevice.TurnOn(FirmwareSettings.WiFiSettings.SSID' FirmwareSettings.WiFiSettings.Password' FirmwareSettings.WiFiSettings.Encryption' ConnectTimeout); " is 159.
Long Statement,MonoBrickFirmware.Display.Menus,ItemWithUpdateDialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithUpdateDialog.cs,OnCheckCompleted,The length of the statement  "				infoDialog = new ItemWithDialog<InfoDialog>( new InfoDialog("New image available. Download it from www.monobrick.dk or ftp://soborg.net")); " is 139.
Long Statement,MonoBrickFirmware.Display.Menus,ItemWithUpdateDialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithUpdateDialog.cs,OnCheckCompleted,The length of the statement  "						infoDialog = new ItemWithDialog<InfoDialog>( new InfoDialog("New Xamarin Add-in. Download it from www.monobrick.dk or ftp://soborg.net")); " is 138.
Long Statement,MonoBrickFirmware.Display.Dialogs,InfoDialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\InfoDialog.cs,DrawScrollBar,The length of the statement  "			Rectangle indexRec = new Rectangle (new Point(scrollBar.P1.X + (scrollBarWidth - scrollIndexWith)/2' scrollBar.P1.Y + pagePos * indexHeight)' new Point(scrollBar.P2.X - (scrollBarWidth - scrollIndexWith)/2' scrollBar.P1.Y + pagePos * indexHeight + indexHeight ) ); " is 264.
Long Statement,MonoBrickFirmware.Display.Dialogs,DialogWithProgessAnimation,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\DialogWithProgessAnimation.cs,StartProgressAnimation,The length of the statement  "				progressRect = new Rectangle (progressRect.P1 + new Point (progressEdgeX' progressEdgeY)' progressRect.P2 + new Point (-progressEdgeX' -progressEdgeY)); " is 152.
Long Statement,MonoBrickFirmware.FileSystem,EV3ProgramManager,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\FileSystem\EV3ProgramManager.cs,UpdateProgramList,The length of the statement  "					ProgramLocation location = programFolder.Contains (ProgramPathSdCard) ? ProgramLocation.SDCard : ProgramLocation.ProgramFolder;  " is 127.
Long Statement,MonoBrickFirmware.FirmwareUpdate,EV3UpdateHelper,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\FirmwareUpdate\EV3UpdateHelper.cs,DownloadFirmware,The length of the statement  "			return DownloadPackage(PackageName'Path.Combine(GetRepository()' "StartupApp")' Path.Combine(BinDir' GetAvailableFirmware())' true); " is 132.
Long Statement,MonoBrickFirmware.FirmwareUpdate,EV3UpdateHelper,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\FirmwareUpdate\EV3UpdateHelper.cs,DownloadPackage,The length of the statement  "						ok = DownloadFile(element.FileName' Path.Combine(Path.Combine(GetRepository()'"StartupApp") ' element.Subdir)' Path.Combine(downloadPath' element.Subdir)' overwriteFiles); " is 171.
Long Statement,MonoBrickFirmware.Display.Dialogs.UserInput,Button,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,ApplyContainer,The length of the statement  "			Point reSize = new Point (outherBox.P2.X + ((buttonOutherPoint.X + buttonSpace.X) * (Size.X - 1))' outherBox.P2.Y + ((buttonOutherPoint.Y + buttonSpace.Y) * (Size.Y - 1)));  " is 172.
Long Statement,MonoBrickFirmware.Display.Dialogs.UserInput,Button,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,ApplyContainer,The length of the statement  "			innerBox = new Rectangle (new Point (outherBox.P1.X + characterEdge' outherBox.P1.Y + characterEdge)' new Point (outherBox.P2.X - characterEdge' outherBox.P2.Y - characterEdge)); " is 178.
Long Statement,MonoBrickFirmware.Display.Dialogs.UserInput,Enter,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,Draw,The length of the statement  "			Lcd.DrawLine (new Point(arrowRect.P2.X' outherBox.P1.Y + ((outherBox.P2.Y - outherBox.P1.Y)/2))' new Point(outherBox.P2.X - 8 * characterEdge' outherBox.P1.Y +((outherBox.P2.Y - outherBox.P1.Y)/2) )' !Selected); " is 211.
Long Statement,MonoBrickFirmware.Display.Dialogs.UserInput,Enter,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,Draw,The length of the statement  "			Lcd.DrawLine (new Point(outherBox.P2.X - 8 * characterEdge' outherBox.P1.Y + ((outherBox.P2.Y - outherBox.P1.Y)/2))' new Point(outherBox.P2.X - 8 * characterEdge' outherBox.P1.Y + 4* characterEdge)' !Selected); " is 210.
Long Statement,MonoBrickFirmware.Display.Dialogs.UserInput,TextButton,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Keyboard.cs,Draw,The length of the statement  "						Lcd.WriteText (resultFont' topPoint + new Point (0' ((int)resultFont.maxHeight-1))' inputLines [inputLines.Count - 1]' !Selected); " is 130.
Long Statement,MonoBrickFirmware.Display.Dialogs.UserInput,TextButton,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Keyboard.cs,Draw,The length of the statement  "						Lcd.WriteText (resultFont' topPoint + new Point (0' ((int)resultFont.maxHeight-1) * 2)' currentLine + SelectedCharacter' !Selected); " is 132.
Long Statement,MonoBrickFirmware.Display.Dialogs.UserInput,TextButton,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Keyboard.cs,Draw,The length of the statement  "						Lcd.WriteText (resultFont' topPoint + new Point (0' (int)resultFont.maxHeight-1)' currentLine + SelectedCharacter' !Selected); " is 126.
Complex Conditional,MonoBrickFirmware.Sensors,NXTColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTColorSensor.cs,CalculateColor,The conditional expression  "blue < 70 || green < 70 || (blank < 140 && red < 140)"  is complex.
Complex Conditional,MonoBrickFirmware.Sensors,NXTColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTColorSensor.cs,CalculateColor,The conditional expression  "red < 70 || blue < 70 || (blank < 140 && green < 140)"  is complex.
Complex Conditional,MonoBrickFirmware.Sensors,NXTColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTColorSensor.cs,CalculateColor,The conditional expression  "(((red*48) >> 5) < blue && ((green*48) >> 5) < blue) ||  	                    ((red*58) >> 5) < blue || ((green*58) >> 5) < blue"  is complex.
Complex Conditional,MonoBrickFirmware.Sensors,NXTColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTColorSensor.cs,CalculateColor,The conditional expression  "red < 60 || green < 60 || (blank < 110 && blue < 120)"  is complex.
Empty Catch Block,MonoBrickFirmware.Native,ProcessHelper,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Native\ProcessHelper.cs,GetProcessId,The method has an empty catch block.
Empty Catch Block,MonoBrickFirmware.Connections,EV3WiFiDevice,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Connections\EV3WiFiDevice.cs,IsLinkUp,The method has an empty catch block.
Empty Catch Block,MonoBrickFirmware.Connections,EV3WiFiDevice,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Connections\EV3WiFiDevice.cs,Gateway,The method has an empty catch block.
Empty Catch Block,MonoBrickFirmware.FirmwareUpdate,EV3UpdateHelper,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\FirmwareUpdate\EV3UpdateHelper.cs,CurrentAddInVersion,The method has an empty catch block.
Magic Number,MonoBrickFirmware.Native,GacHelper,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Native\GacHelper.cs,IsAssembyInGac,The following statement contains a magic number: installed = outputStrings[i+2] != "0";
Magic Number,MonoBrickFirmware.Tools,BmpImage,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Tools\BmpImage.cs,CreateHeader,The following statement contains a magic number: switch(colorDepth){  				case ColorDepth.TrueColor:  					header.MagicNumber = BMPFileType;  					header.FileSize = CalculateFileSize(width'height' colorDepth);  					header.Reserved1 = 0;//not used  					header.Reserved2 = 0;//not used  					header.OffsetBits = BMPHeaderSize + InfoHeaderSize;  					header.InfoHeaderSize = InfoHeaderSize;  					header.ImageWidth = width;  					header.ImageHeight = height;  					header.Planes = Planes;  					header.ColorDepth =  colorDepth;  					header.Compression = NoCompression;  					header.ImageSize = CalculateImageSize(width'height' colorDepth);  					header.XPixelPerMeter = 0; //zero when color depth = 24  					header.YPixelPerMeter = 0; //zero when color depth = 24  					header.NumberOfColors =0; //zero when color depth = 24  					header.ImportantColors =0; //zero when color depth = 24  					paddingSize = (width*3)%4;  					//no need to add color palette  					header.ColorPalette = null;  					Write(header);  					break;  				case ColorDepth.LowColor:  					header.MagicNumber = BMPFileType;  					header.FileSize = CalculateFileSize(width'height' colorDepth);  					header.Reserved1 = 0;//not used  					header.Reserved2 = 0;//not used  					header.OffsetBits = BMPHeaderSize + InfoHeaderSize + ColorPaletteSize * 4;  					header.InfoHeaderSize = InfoHeaderSize;  					header.ImageWidth = width;  					header.ImageHeight = height;  					header.Planes = Planes;  					header.ColorDepth =  colorDepth;  					header.Compression = NoCompression;  					header.ImageSize = CalculateImageSize(width'height' colorDepth);  					header.XPixelPerMeter = 0; //zero when color depth = 8  					header.YPixelPerMeter = 0; //zero when color depth = 8  					header.NumberOfColors =0; //zero when color depth = 8  					header.ImportantColors =0; //zero when color depth = 8  					paddingSize = (width)%4;  					header.ColorPalette = CreateColorPalette();  					Write(header);  					break;  				case ColorDepth.GrayScaleColor:  					header.MagicNumber = BMPFileType;  					header.FileSize = CalculateFileSize(width'height' ColorDepth.LowColor);  					header.Reserved1 = 0;//not used  					header.Reserved2 = 0;//not used  					header.OffsetBits = BMPHeaderSize + InfoHeaderSize + ColorPaletteSize * 4;  					header.InfoHeaderSize = InfoHeaderSize;  					header.ImageWidth = width;  					header.ImageHeight = height;  					header.Planes = Planes;  					header.ColorDepth = ColorDepth.LowColor; //will be set to GrayScaleColor when header has been written  					header.Compression = NoCompression;//no comression  					header.ImageSize = CalculateImageSize(width'height' ColorDepth.LowColor);  					header.XPixelPerMeter = 0; //zero when color depth = 8  					header.YPixelPerMeter = 0; //zero when color depth = 8  					header.NumberOfColors =0; //zero when color depth = 8  					header.ImportantColors =0; //zero when color depth = 8  					paddingSize = (width)%4;  					header.ColorPalette = CreateGrayScalePalette();  					Write(header);  					header.ColorDepth = ColorDepth.GrayScaleColor;  					break;  			}
Magic Number,MonoBrickFirmware.Tools,BmpImage,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Tools\BmpImage.cs,CreateHeader,The following statement contains a magic number: switch(colorDepth){  				case ColorDepth.TrueColor:  					header.MagicNumber = BMPFileType;  					header.FileSize = CalculateFileSize(width'height' colorDepth);  					header.Reserved1 = 0;//not used  					header.Reserved2 = 0;//not used  					header.OffsetBits = BMPHeaderSize + InfoHeaderSize;  					header.InfoHeaderSize = InfoHeaderSize;  					header.ImageWidth = width;  					header.ImageHeight = height;  					header.Planes = Planes;  					header.ColorDepth =  colorDepth;  					header.Compression = NoCompression;  					header.ImageSize = CalculateImageSize(width'height' colorDepth);  					header.XPixelPerMeter = 0; //zero when color depth = 24  					header.YPixelPerMeter = 0; //zero when color depth = 24  					header.NumberOfColors =0; //zero when color depth = 24  					header.ImportantColors =0; //zero when color depth = 24  					paddingSize = (width*3)%4;  					//no need to add color palette  					header.ColorPalette = null;  					Write(header);  					break;  				case ColorDepth.LowColor:  					header.MagicNumber = BMPFileType;  					header.FileSize = CalculateFileSize(width'height' colorDepth);  					header.Reserved1 = 0;//not used  					header.Reserved2 = 0;//not used  					header.OffsetBits = BMPHeaderSize + InfoHeaderSize + ColorPaletteSize * 4;  					header.InfoHeaderSize = InfoHeaderSize;  					header.ImageWidth = width;  					header.ImageHeight = height;  					header.Planes = Planes;  					header.ColorDepth =  colorDepth;  					header.Compression = NoCompression;  					header.ImageSize = CalculateImageSize(width'height' colorDepth);  					header.XPixelPerMeter = 0; //zero when color depth = 8  					header.YPixelPerMeter = 0; //zero when color depth = 8  					header.NumberOfColors =0; //zero when color depth = 8  					header.ImportantColors =0; //zero when color depth = 8  					paddingSize = (width)%4;  					header.ColorPalette = CreateColorPalette();  					Write(header);  					break;  				case ColorDepth.GrayScaleColor:  					header.MagicNumber = BMPFileType;  					header.FileSize = CalculateFileSize(width'height' ColorDepth.LowColor);  					header.Reserved1 = 0;//not used  					header.Reserved2 = 0;//not used  					header.OffsetBits = BMPHeaderSize + InfoHeaderSize + ColorPaletteSize * 4;  					header.InfoHeaderSize = InfoHeaderSize;  					header.ImageWidth = width;  					header.ImageHeight = height;  					header.Planes = Planes;  					header.ColorDepth = ColorDepth.LowColor; //will be set to GrayScaleColor when header has been written  					header.Compression = NoCompression;//no comression  					header.ImageSize = CalculateImageSize(width'height' ColorDepth.LowColor);  					header.XPixelPerMeter = 0; //zero when color depth = 8  					header.YPixelPerMeter = 0; //zero when color depth = 8  					header.NumberOfColors =0; //zero when color depth = 8  					header.ImportantColors =0; //zero when color depth = 8  					paddingSize = (width)%4;  					header.ColorPalette = CreateGrayScalePalette();  					Write(header);  					header.ColorDepth = ColorDepth.GrayScaleColor;  					break;  			}
Magic Number,MonoBrickFirmware.Tools,BmpImage,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Tools\BmpImage.cs,CreateHeader,The following statement contains a magic number: switch(colorDepth){  				case ColorDepth.TrueColor:  					header.MagicNumber = BMPFileType;  					header.FileSize = CalculateFileSize(width'height' colorDepth);  					header.Reserved1 = 0;//not used  					header.Reserved2 = 0;//not used  					header.OffsetBits = BMPHeaderSize + InfoHeaderSize;  					header.InfoHeaderSize = InfoHeaderSize;  					header.ImageWidth = width;  					header.ImageHeight = height;  					header.Planes = Planes;  					header.ColorDepth =  colorDepth;  					header.Compression = NoCompression;  					header.ImageSize = CalculateImageSize(width'height' colorDepth);  					header.XPixelPerMeter = 0; //zero when color depth = 24  					header.YPixelPerMeter = 0; //zero when color depth = 24  					header.NumberOfColors =0; //zero when color depth = 24  					header.ImportantColors =0; //zero when color depth = 24  					paddingSize = (width*3)%4;  					//no need to add color palette  					header.ColorPalette = null;  					Write(header);  					break;  				case ColorDepth.LowColor:  					header.MagicNumber = BMPFileType;  					header.FileSize = CalculateFileSize(width'height' colorDepth);  					header.Reserved1 = 0;//not used  					header.Reserved2 = 0;//not used  					header.OffsetBits = BMPHeaderSize + InfoHeaderSize + ColorPaletteSize * 4;  					header.InfoHeaderSize = InfoHeaderSize;  					header.ImageWidth = width;  					header.ImageHeight = height;  					header.Planes = Planes;  					header.ColorDepth =  colorDepth;  					header.Compression = NoCompression;  					header.ImageSize = CalculateImageSize(width'height' colorDepth);  					header.XPixelPerMeter = 0; //zero when color depth = 8  					header.YPixelPerMeter = 0; //zero when color depth = 8  					header.NumberOfColors =0; //zero when color depth = 8  					header.ImportantColors =0; //zero when color depth = 8  					paddingSize = (width)%4;  					header.ColorPalette = CreateColorPalette();  					Write(header);  					break;  				case ColorDepth.GrayScaleColor:  					header.MagicNumber = BMPFileType;  					header.FileSize = CalculateFileSize(width'height' ColorDepth.LowColor);  					header.Reserved1 = 0;//not used  					header.Reserved2 = 0;//not used  					header.OffsetBits = BMPHeaderSize + InfoHeaderSize + ColorPaletteSize * 4;  					header.InfoHeaderSize = InfoHeaderSize;  					header.ImageWidth = width;  					header.ImageHeight = height;  					header.Planes = Planes;  					header.ColorDepth = ColorDepth.LowColor; //will be set to GrayScaleColor when header has been written  					header.Compression = NoCompression;//no comression  					header.ImageSize = CalculateImageSize(width'height' ColorDepth.LowColor);  					header.XPixelPerMeter = 0; //zero when color depth = 8  					header.YPixelPerMeter = 0; //zero when color depth = 8  					header.NumberOfColors =0; //zero when color depth = 8  					header.ImportantColors =0; //zero when color depth = 8  					paddingSize = (width)%4;  					header.ColorPalette = CreateGrayScalePalette();  					Write(header);  					header.ColorDepth = ColorDepth.GrayScaleColor;  					break;  			}
Magic Number,MonoBrickFirmware.Tools,BmpImage,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Tools\BmpImage.cs,CreateHeader,The following statement contains a magic number: switch(colorDepth){  				case ColorDepth.TrueColor:  					header.MagicNumber = BMPFileType;  					header.FileSize = CalculateFileSize(width'height' colorDepth);  					header.Reserved1 = 0;//not used  					header.Reserved2 = 0;//not used  					header.OffsetBits = BMPHeaderSize + InfoHeaderSize;  					header.InfoHeaderSize = InfoHeaderSize;  					header.ImageWidth = width;  					header.ImageHeight = height;  					header.Planes = Planes;  					header.ColorDepth =  colorDepth;  					header.Compression = NoCompression;  					header.ImageSize = CalculateImageSize(width'height' colorDepth);  					header.XPixelPerMeter = 0; //zero when color depth = 24  					header.YPixelPerMeter = 0; //zero when color depth = 24  					header.NumberOfColors =0; //zero when color depth = 24  					header.ImportantColors =0; //zero when color depth = 24  					paddingSize = (width*3)%4;  					//no need to add color palette  					header.ColorPalette = null;  					Write(header);  					break;  				case ColorDepth.LowColor:  					header.MagicNumber = BMPFileType;  					header.FileSize = CalculateFileSize(width'height' colorDepth);  					header.Reserved1 = 0;//not used  					header.Reserved2 = 0;//not used  					header.OffsetBits = BMPHeaderSize + InfoHeaderSize + ColorPaletteSize * 4;  					header.InfoHeaderSize = InfoHeaderSize;  					header.ImageWidth = width;  					header.ImageHeight = height;  					header.Planes = Planes;  					header.ColorDepth =  colorDepth;  					header.Compression = NoCompression;  					header.ImageSize = CalculateImageSize(width'height' colorDepth);  					header.XPixelPerMeter = 0; //zero when color depth = 8  					header.YPixelPerMeter = 0; //zero when color depth = 8  					header.NumberOfColors =0; //zero when color depth = 8  					header.ImportantColors =0; //zero when color depth = 8  					paddingSize = (width)%4;  					header.ColorPalette = CreateColorPalette();  					Write(header);  					break;  				case ColorDepth.GrayScaleColor:  					header.MagicNumber = BMPFileType;  					header.FileSize = CalculateFileSize(width'height' ColorDepth.LowColor);  					header.Reserved1 = 0;//not used  					header.Reserved2 = 0;//not used  					header.OffsetBits = BMPHeaderSize + InfoHeaderSize + ColorPaletteSize * 4;  					header.InfoHeaderSize = InfoHeaderSize;  					header.ImageWidth = width;  					header.ImageHeight = height;  					header.Planes = Planes;  					header.ColorDepth = ColorDepth.LowColor; //will be set to GrayScaleColor when header has been written  					header.Compression = NoCompression;//no comression  					header.ImageSize = CalculateImageSize(width'height' ColorDepth.LowColor);  					header.XPixelPerMeter = 0; //zero when color depth = 8  					header.YPixelPerMeter = 0; //zero when color depth = 8  					header.NumberOfColors =0; //zero when color depth = 8  					header.ImportantColors =0; //zero when color depth = 8  					paddingSize = (width)%4;  					header.ColorPalette = CreateGrayScalePalette();  					Write(header);  					header.ColorDepth = ColorDepth.GrayScaleColor;  					break;  			}
Magic Number,MonoBrickFirmware.Tools,BmpImage,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Tools\BmpImage.cs,CreateHeader,The following statement contains a magic number: switch(colorDepth){  				case ColorDepth.TrueColor:  					header.MagicNumber = BMPFileType;  					header.FileSize = CalculateFileSize(width'height' colorDepth);  					header.Reserved1 = 0;//not used  					header.Reserved2 = 0;//not used  					header.OffsetBits = BMPHeaderSize + InfoHeaderSize;  					header.InfoHeaderSize = InfoHeaderSize;  					header.ImageWidth = width;  					header.ImageHeight = height;  					header.Planes = Planes;  					header.ColorDepth =  colorDepth;  					header.Compression = NoCompression;  					header.ImageSize = CalculateImageSize(width'height' colorDepth);  					header.XPixelPerMeter = 0; //zero when color depth = 24  					header.YPixelPerMeter = 0; //zero when color depth = 24  					header.NumberOfColors =0; //zero when color depth = 24  					header.ImportantColors =0; //zero when color depth = 24  					paddingSize = (width*3)%4;  					//no need to add color palette  					header.ColorPalette = null;  					Write(header);  					break;  				case ColorDepth.LowColor:  					header.MagicNumber = BMPFileType;  					header.FileSize = CalculateFileSize(width'height' colorDepth);  					header.Reserved1 = 0;//not used  					header.Reserved2 = 0;//not used  					header.OffsetBits = BMPHeaderSize + InfoHeaderSize + ColorPaletteSize * 4;  					header.InfoHeaderSize = InfoHeaderSize;  					header.ImageWidth = width;  					header.ImageHeight = height;  					header.Planes = Planes;  					header.ColorDepth =  colorDepth;  					header.Compression = NoCompression;  					header.ImageSize = CalculateImageSize(width'height' colorDepth);  					header.XPixelPerMeter = 0; //zero when color depth = 8  					header.YPixelPerMeter = 0; //zero when color depth = 8  					header.NumberOfColors =0; //zero when color depth = 8  					header.ImportantColors =0; //zero when color depth = 8  					paddingSize = (width)%4;  					header.ColorPalette = CreateColorPalette();  					Write(header);  					break;  				case ColorDepth.GrayScaleColor:  					header.MagicNumber = BMPFileType;  					header.FileSize = CalculateFileSize(width'height' ColorDepth.LowColor);  					header.Reserved1 = 0;//not used  					header.Reserved2 = 0;//not used  					header.OffsetBits = BMPHeaderSize + InfoHeaderSize + ColorPaletteSize * 4;  					header.InfoHeaderSize = InfoHeaderSize;  					header.ImageWidth = width;  					header.ImageHeight = height;  					header.Planes = Planes;  					header.ColorDepth = ColorDepth.LowColor; //will be set to GrayScaleColor when header has been written  					header.Compression = NoCompression;//no comression  					header.ImageSize = CalculateImageSize(width'height' ColorDepth.LowColor);  					header.XPixelPerMeter = 0; //zero when color depth = 8  					header.YPixelPerMeter = 0; //zero when color depth = 8  					header.NumberOfColors =0; //zero when color depth = 8  					header.ImportantColors =0; //zero when color depth = 8  					paddingSize = (width)%4;  					header.ColorPalette = CreateGrayScalePalette();  					Write(header);  					header.ColorDepth = ColorDepth.GrayScaleColor;  					break;  			}
Magic Number,MonoBrickFirmware.Tools,BmpImage,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Tools\BmpImage.cs,CreateHeader,The following statement contains a magic number: switch(colorDepth){  				case ColorDepth.TrueColor:  					header.MagicNumber = BMPFileType;  					header.FileSize = CalculateFileSize(width'height' colorDepth);  					header.Reserved1 = 0;//not used  					header.Reserved2 = 0;//not used  					header.OffsetBits = BMPHeaderSize + InfoHeaderSize;  					header.InfoHeaderSize = InfoHeaderSize;  					header.ImageWidth = width;  					header.ImageHeight = height;  					header.Planes = Planes;  					header.ColorDepth =  colorDepth;  					header.Compression = NoCompression;  					header.ImageSize = CalculateImageSize(width'height' colorDepth);  					header.XPixelPerMeter = 0; //zero when color depth = 24  					header.YPixelPerMeter = 0; //zero when color depth = 24  					header.NumberOfColors =0; //zero when color depth = 24  					header.ImportantColors =0; //zero when color depth = 24  					paddingSize = (width*3)%4;  					//no need to add color palette  					header.ColorPalette = null;  					Write(header);  					break;  				case ColorDepth.LowColor:  					header.MagicNumber = BMPFileType;  					header.FileSize = CalculateFileSize(width'height' colorDepth);  					header.Reserved1 = 0;//not used  					header.Reserved2 = 0;//not used  					header.OffsetBits = BMPHeaderSize + InfoHeaderSize + ColorPaletteSize * 4;  					header.InfoHeaderSize = InfoHeaderSize;  					header.ImageWidth = width;  					header.ImageHeight = height;  					header.Planes = Planes;  					header.ColorDepth =  colorDepth;  					header.Compression = NoCompression;  					header.ImageSize = CalculateImageSize(width'height' colorDepth);  					header.XPixelPerMeter = 0; //zero when color depth = 8  					header.YPixelPerMeter = 0; //zero when color depth = 8  					header.NumberOfColors =0; //zero when color depth = 8  					header.ImportantColors =0; //zero when color depth = 8  					paddingSize = (width)%4;  					header.ColorPalette = CreateColorPalette();  					Write(header);  					break;  				case ColorDepth.GrayScaleColor:  					header.MagicNumber = BMPFileType;  					header.FileSize = CalculateFileSize(width'height' ColorDepth.LowColor);  					header.Reserved1 = 0;//not used  					header.Reserved2 = 0;//not used  					header.OffsetBits = BMPHeaderSize + InfoHeaderSize + ColorPaletteSize * 4;  					header.InfoHeaderSize = InfoHeaderSize;  					header.ImageWidth = width;  					header.ImageHeight = height;  					header.Planes = Planes;  					header.ColorDepth = ColorDepth.LowColor; //will be set to GrayScaleColor when header has been written  					header.Compression = NoCompression;//no comression  					header.ImageSize = CalculateImageSize(width'height' ColorDepth.LowColor);  					header.XPixelPerMeter = 0; //zero when color depth = 8  					header.YPixelPerMeter = 0; //zero when color depth = 8  					header.NumberOfColors =0; //zero when color depth = 8  					header.ImportantColors =0; //zero when color depth = 8  					paddingSize = (width)%4;  					header.ColorPalette = CreateGrayScalePalette();  					Write(header);  					header.ColorDepth = ColorDepth.GrayScaleColor;  					break;  			}
Magic Number,MonoBrickFirmware.Tools,BmpImage,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Tools\BmpImage.cs,CalculateImageSize,The following statement contains a magic number: temp =(uint) (colorDepthAsUInt16 * width)/32+1;
Magic Number,MonoBrickFirmware.Tools,BmpImage,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Tools\BmpImage.cs,CalculateImageSize,The following statement contains a magic number: Convert.ToBoolean(( colorDepthAsUInt16 * width)%32)
Magic Number,MonoBrickFirmware.Tools,BmpImage,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Tools\BmpImage.cs,CalculateImageSize,The following statement contains a magic number: return 4*temp*height;
Magic Number,MonoBrickFirmware.Tools,BmpImage,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Tools\BmpImage.cs,CalculateFileSize,The following statement contains a magic number: return CalculateImageSize(width' height' colorDepth) + BMPHeaderSize + InfoHeaderSize + ColorPaletteSize * 4;
Magic Number,MonoBrickFirmware.Tools,BmpImage,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Tools\BmpImage.cs,GetCubeIndex,The following statement contains a magic number: colorMatrix[2]=0x66;
Magic Number,MonoBrickFirmware.Tools,BmpImage,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Tools\BmpImage.cs,GetCubeIndex,The following statement contains a magic number: colorMatrix[3]=0x99;
Magic Number,MonoBrickFirmware.Tools,BmpImage,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Tools\BmpImage.cs,GetCubeIndex,The following statement contains a magic number: colorMatrix[4]=0xcc;
Magic Number,MonoBrickFirmware.Tools,BmpImage,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Tools\BmpImage.cs,GetCubeIndex,The following statement contains a magic number: colorMatrix[5]=0xff;
Magic Number,MonoBrickFirmware.Tools,BmpImage,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Tools\BmpImage.cs,GetCubeIndex,The following statement contains a magic number: i=10;
Magic Number,MonoBrickFirmware.Tools,BmpImage,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Tools\BmpImage.cs,GetCubeIndex,The following statement contains a magic number: result<=25
Magic Number,MonoBrickFirmware.Tools,BmpImage,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Tools\BmpImage.cs,GetCubeIndex,The following statement contains a magic number: i<6
Magic Number,MonoBrickFirmware.Tools,BmpImage,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Tools\BmpImage.cs,GetColorIndex,The following statement contains a magic number: return (byte)((GetCubeIndex(color.Red) * 36) + (GetCubeIndex(color.Green) * 6) + GetCubeIndex(color.Blue));
Magic Number,MonoBrickFirmware.Tools,BmpImage,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Tools\BmpImage.cs,GetColorIndex,The following statement contains a magic number: return (byte)((GetCubeIndex(color.Red) * 36) + (GetCubeIndex(color.Green) * 6) + GetCubeIndex(color.Blue));
Magic Number,MonoBrickFirmware.Tools,BmpImage,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Tools\BmpImage.cs,CreateColorPalette,The following statement contains a magic number: colorMatrix[2] = 0x66;
Magic Number,MonoBrickFirmware.Tools,BmpImage,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Tools\BmpImage.cs,CreateColorPalette,The following statement contains a magic number: colorMatrix[3] = 0x99;
Magic Number,MonoBrickFirmware.Tools,BmpImage,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Tools\BmpImage.cs,CreateColorPalette,The following statement contains a magic number: colorMatrix[4] = 0xcc;
Magic Number,MonoBrickFirmware.Tools,BmpImage,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Tools\BmpImage.cs,CreateColorPalette,The following statement contains a magic number: colorMatrix[5] = 0xff;
Magic Number,MonoBrickFirmware.Tools,ByteArrayCreator,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Tools\ByteArrayCreator.cs,AddSpacesToString,The following statement contains a magic number: StringBuilder newText = new StringBuilder(text.Length * 2);
Magic Number,MonoBrickFirmware.Tools,PIDAbstraction,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Tools\PIDAbstraction.cs,CalculateOutput,The following statement contains a magic number: uk = uk1 + k1 * (ek - ek1) + k2 * ek + k3 * (ek - 2 * ek1 + ek2);
Magic Number,MonoBrickFirmware.Display,Bitmap,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Bitmap.cs,Bitmap,The following statement contains a magic number: Height = data[2];
Magic Number,MonoBrickFirmware.Display,Bitmap,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Bitmap.cs,Bitmap,The following statement contains a magic number: dataOffset = 3;
Magic Number,MonoBrickFirmware.Display,Bitmap,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Bitmap.cs,FromResouce,The following statement contains a magic number: UInt32[] data = new UInt32[s.Length/4];
Magic Number,MonoBrickFirmware.Display,Bitmap,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Bitmap.cs,FromResouce,The following statement contains a magic number: data[i] = BitConverter.ToUInt32(bytedata' i*4);
Magic Number,MonoBrickFirmware.Display,Bitmap,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Bitmap.cs,FromResouce,The following statement contains a magic number: i != s.Length/4
Magic Number,MonoBrickFirmware.Display,CharStreamer,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Font.cs,CharStreamer,The following statement contains a magic number: this.width = GetBits(8);
Magic Number,MonoBrickFirmware.Display,Font,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Font.cs,FromResource,The following statement contains a magic number: UInt32[] data = new UInt32[s.Length/4];
Magic Number,MonoBrickFirmware.Display,Font,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Font.cs,FromResource,The following statement contains a magic number: data[i] = BitConverter.ToUInt32(bytedata' i*4);
Magic Number,MonoBrickFirmware.Display,Font,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Font.cs,FromResource,The following statement contains a magic number: i != s.Length/4
Magic Number,MonoBrickFirmware.Display,Font,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Font.cs,Font,The following statement contains a magic number: maxHeight = data[2];
Magic Number,MonoBrickFirmware.Display,Font,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Font.cs,Font,The following statement contains a magic number: charWordSize = data[3];
Magic Number,MonoBrickFirmware.Display,Font,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Font.cs,Font,The following statement contains a magic number: firstChar = 4;
Magic Number,MonoBrickFirmware.Display,Font,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Font.cs,getChar,The following statement contains a magic number: int index = (int)c - 32;
Magic Number,MonoBrickFirmware.Display,Font,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Font.cs,getChar,The following statement contains a magic number: index < 0 || (index > 128-32)
Magic Number,MonoBrickFirmware.Display,Font,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Font.cs,getChar,The following statement contains a magic number: index < 0 || (index > 128-32)
Magic Number,MonoBrickFirmware.Display,EV3Lcd,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\EV3Lcd.cs,SetPixel,The following statement contains a magic number: int index = (x/8)+ y * bytesPrLine;
Magic Number,MonoBrickFirmware.Display,EV3Lcd,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\EV3Lcd.cs,IsPixelSet,The following statement contains a magic number: int index = (x / 8) + y * bytesPrLine;
Magic Number,MonoBrickFirmware.Display,EV3Lcd,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\EV3Lcd.cs,TakeScreenShot,The following statement contains a magic number: x < bytesPrLine * 8
Magic Number,MonoBrickFirmware.Display,EV3Lcd,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\EV3Lcd.cs,DrawBitmap,The following statement contains a magic number: int BufPos = bytesPrLine*yPos+p.X/8;
Magic Number,MonoBrickFirmware.Display,EV3Lcd,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\EV3Lcd.cs,DrawBitmap,The following statement contains a magic number: uint bitsToWrite = Math.Min(xBitsLeft' (uint)(8-bitPos));
Magic Number,MonoBrickFirmware.Display,EV3Lcd,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\EV3Lcd.cs,DrawArrow,The following statement contains a magic number: inc = (((float)height) / 2.0f) / ((float)width);
Magic Number,MonoBrickFirmware.Display,EV3Lcd,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\EV3Lcd.cs,DrawArrow,The following statement contains a magic number: SetPixel ((int)(r.P1.X + i)' (int)(r.P1.Y + height/2)' color);
Magic Number,MonoBrickFirmware.Display,EV3Lcd,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\EV3Lcd.cs,DrawArrow,The following statement contains a magic number: SetPixel ((int)(r.P1.X + i)' (int)(r.P1.Y + height / 2 +j)' color);
Magic Number,MonoBrickFirmware.Display,EV3Lcd,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\EV3Lcd.cs,DrawArrow,The following statement contains a magic number: SetPixel ((int)(r.P1.X + i)' (int)(r.P1.Y + height / 2 -j)' color);
Magic Number,MonoBrickFirmware.Display,EV3Lcd,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\EV3Lcd.cs,DrawArrow,The following statement contains a magic number: SetPixel ((int)(r.P2.X - i)' (int)(r.P1.Y + height/2)' color);
Magic Number,MonoBrickFirmware.Display,EV3Lcd,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\EV3Lcd.cs,DrawArrow,The following statement contains a magic number: SetPixel ((int)(r.P2.X -i)' (int)(r.P1.Y + height / 2 +j)' color);
Magic Number,MonoBrickFirmware.Display,EV3Lcd,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\EV3Lcd.cs,DrawArrow,The following statement contains a magic number: SetPixel ((int)(r.P2.X -i)' (int)(r.P1.Y + height / 2 -j)' color);
Magic Number,MonoBrickFirmware.Display,EV3Lcd,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\EV3Lcd.cs,DrawArrow,The following statement contains a magic number: SetPixel ((int)(r.P1.X + width/2)' (int)(r.P1.Y + i)' color);
Magic Number,MonoBrickFirmware.Display,EV3Lcd,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\EV3Lcd.cs,DrawArrow,The following statement contains a magic number: SetPixel ((int)(r.P1.X + width/2+j)' (int)(r.P1.Y + i)' color);
Magic Number,MonoBrickFirmware.Display,EV3Lcd,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\EV3Lcd.cs,DrawArrow,The following statement contains a magic number: SetPixel ((int)(r.P1.X + width/2-j)' (int)(r.P1.Y + i)' color);
Magic Number,MonoBrickFirmware.Display,EV3Lcd,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\EV3Lcd.cs,DrawArrow,The following statement contains a magic number: SetPixel ((int)(r.P1.X + width/2)' (int)(r.P2.Y -i)' color);
Magic Number,MonoBrickFirmware.Display,EV3Lcd,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\EV3Lcd.cs,DrawArrow,The following statement contains a magic number: SetPixel ((int)(r.P1.X + width/2+j)' (int)(r.P2.Y - i)' color);
Magic Number,MonoBrickFirmware.Display,EV3Lcd,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\EV3Lcd.cs,DrawArrow,The following statement contains a magic number: SetPixel ((int)(r.P1.X + width/2-j)' (int)(r.P2.Y - i)' color);
Magic Number,MonoBrickFirmware.Display,EV3Lcd,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\EV3Lcd.cs,DrawLine,The following statement contains a magic number: e2 = 2 * err;
Magic Number,MonoBrickFirmware.Sensors,HiTecCompassSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\HTCompassSensor.cs,ReadDirection,The following statement contains a magic number: byte[] result = ReadRegister((byte)CompassRegister.Degree' 2);
Magic Number,MonoBrickFirmware.Sensors,HiTecCompassSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\HTCompassSensor.cs,ReadDirection,The following statement contains a magic number: return (int) (((int)result[0])*2) + (int) result[1];
Magic Number,MonoBrickFirmware.Sensors,HiTecTiltSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\HTTiltSensor.cs,ReadPosition,The following statement contains a magic number: byte[] data = ReadRegister((byte)TiltRegister.XHigh'6);
Magic Number,MonoBrickFirmware.Sensors,HiTecTiltSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\HTTiltSensor.cs,ReadPosition,The following statement contains a magic number: z = (int) data[2];
Magic Number,MonoBrickFirmware.Sensors,HiTecTiltSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\HTTiltSensor.cs,ReadPosition,The following statement contains a magic number: x -= 256;
Magic Number,MonoBrickFirmware.Sensors,HiTecTiltSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\HTTiltSensor.cs,ReadPosition,The following statement contains a magic number: x > 127
Magic Number,MonoBrickFirmware.Sensors,HiTecTiltSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\HTTiltSensor.cs,ReadPosition,The following statement contains a magic number: x = x *4 + data[3];
Magic Number,MonoBrickFirmware.Sensors,HiTecTiltSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\HTTiltSensor.cs,ReadPosition,The following statement contains a magic number: x = x *4 + data[3];
Magic Number,MonoBrickFirmware.Sensors,HiTecTiltSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\HTTiltSensor.cs,ReadPosition,The following statement contains a magic number: y -= 256;
Magic Number,MonoBrickFirmware.Sensors,HiTecTiltSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\HTTiltSensor.cs,ReadPosition,The following statement contains a magic number: y > 127
Magic Number,MonoBrickFirmware.Sensors,HiTecTiltSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\HTTiltSensor.cs,ReadPosition,The following statement contains a magic number: y = y * 4 + data[4];
Magic Number,MonoBrickFirmware.Sensors,HiTecTiltSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\HTTiltSensor.cs,ReadPosition,The following statement contains a magic number: y = y * 4 + data[4];
Magic Number,MonoBrickFirmware.Sensors,HiTecTiltSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\HTTiltSensor.cs,ReadPosition,The following statement contains a magic number: z -= 256;
Magic Number,MonoBrickFirmware.Sensors,HiTecTiltSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\HTTiltSensor.cs,ReadPosition,The following statement contains a magic number: z > 172
Magic Number,MonoBrickFirmware.Sensors,HiTecTiltSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\HTTiltSensor.cs,ReadPosition,The following statement contains a magic number: z = z * 4 +data[5];
Magic Number,MonoBrickFirmware.Sensors,HiTecTiltSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\HTTiltSensor.cs,ReadPosition,The following statement contains a magic number: z = z * 4 +data[5];
Magic Number,MonoBrickFirmware.Sensors,SensorManager,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\SensorManager.cs,SetupCommand,The following statement contains a magic number: sensorData [(int)sensorPort + 2 * NumberOfSensorPorts] = mode;
Magic Number,MonoBrickFirmware.Sensors,SensorManager,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\SensorManager.cs,SetI2COperatingMode,The following statement contains a magic number: I2CDevice.IoCtl((Int32) I2CIOSetConnection' SetupCommand(port'ConnectionType.NXTI2C' SensorType.I2CUnknown' 255));
Magic Number,MonoBrickFirmware.Sensors,HiTecColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\HTColorSensor.cs,ReadRGBColor,The following statement contains a magic number: byte[] result = ReadRegister((byte)ColorRegister.RedReading' 3);
Magic Number,MonoBrickFirmware.Sensors,HiTecColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\HTColorSensor.cs,ReadRGBColor,The following statement contains a magic number: return new RGBColor(result[0]' result[1]' result[2]);
Magic Number,MonoBrickFirmware.Sensors,HiTecColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\HTColorSensor.cs,ReadNormalizedRGBColor,The following statement contains a magic number: byte[] result = ReadRegister((byte)ColorRegister.RedNormalized' 3);
Magic Number,MonoBrickFirmware.Sensors,HiTecColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\HTColorSensor.cs,ReadNormalizedRGBColor,The following statement contains a magic number: return new RGBColor(result[0]' result[1]' result[2]);
Magic Number,MonoBrickFirmware.Sensors,AnalogSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\AnalogSensor.cs,ReadPin1AsPct,The following statement contains a magic number: return (Int16)((ReadPin1()*100)/ADCResolution);
Magic Number,MonoBrickFirmware.Sensors,AnalogSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\AnalogSensor.cs,ReadPin6AsPct,The following statement contains a magic number: return (Int16)((ReadPin6()*100)/ADCResolution);
Magic Number,MonoBrickFirmware.Sensors,AnalogSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\AnalogSensor.cs,ReadPin1As10Bit,The following statement contains a magic number: return (int) (((int) ReadPin1()+ 3)/4);
Magic Number,MonoBrickFirmware.Sensors,AnalogSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\AnalogSensor.cs,ReadPin1As10Bit,The following statement contains a magic number: return (int) (((int) ReadPin1()+ 3)/4);
Magic Number,MonoBrickFirmware.Sensors,AnalogSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\AnalogSensor.cs,ReadOffset,The following statement contains a magic number: return (int)BitConverter.ToInt16(analogMemory.Read(offset' NumberOfSensorPorts*2)'(int) port * 2);
Magic Number,MonoBrickFirmware.Sensors,AnalogSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\AnalogSensor.cs,ReadOffset,The following statement contains a magic number: return (int)BitConverter.ToInt16(analogMemory.Read(offset' NumberOfSensorPorts*2)'(int) port * 2);
Magic Number,MonoBrickFirmware.Sensors,I2CSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\I2CSensor.cs,ReadRegister,The following statement contains a magic number: return ReadRegister(register'8);
Magic Number,MonoBrickFirmware.Sensors,I2CSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\I2CSensor.cs,WriteAndRead,The following statement contains a magic number: command.Append ((byte)(data.Length + 2));
Magic Number,MonoBrickFirmware.Sensors,UartSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\UARTSensor.cs,GetActualData,The following statement contains a magic number: byte[] temp = uartMemory.Read (UartActualOffset' NumberOfSensorPorts * 2);
Magic Number,MonoBrickFirmware.Sensors,UartSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\UARTSensor.cs,GetActualData,The following statement contains a magic number: return (int) BitConverter.ToInt16(temp'(int) port * 2);
Magic Number,MonoBrickFirmware.Sensors,UARTHelper,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\SensorFactory.cs,UARTHelper,The following statement contains a magic number: System.Threading.Thread.Sleep(100);
Magic Number,MonoBrickFirmware.Sensors,DummySensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\SensorFactory.cs,DummySensor,The following statement contains a magic number: System.Threading.Thread.Sleep(500);
Magic Number,MonoBrickFirmware.Sensors,DummySensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\SensorFactory.cs,ReadAsString,The following statement contains a magic number: return rnd.Next(1024) + " A/D value";
Magic Number,MonoBrickFirmware.Sensors,EV3GyroSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\EV3GyroSensor.cs,Reset,The following statement contains a magic number: System.Threading.Thread.Sleep(100);
Magic Number,MonoBrickFirmware.Sensors,EV3GyroSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\EV3GyroSensor.cs,RotationCount,The following statement contains a magic number: return BitConverter.ToInt16(ReadBytes(2)'0)/360;
Magic Number,MonoBrickFirmware.Sensors,EV3GyroSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\EV3GyroSensor.cs,RotationCount,The following statement contains a magic number: return BitConverter.ToInt16(ReadBytes(2)'0)/360;
Magic Number,MonoBrickFirmware.Sensors,EV3GyroSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\EV3GyroSensor.cs,Read,The following statement contains a magic number: return BitConverter.ToInt16(ReadBytes(2)'0)%360;
Magic Number,MonoBrickFirmware.Sensors,EV3GyroSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\EV3GyroSensor.cs,Read,The following statement contains a magic number: return BitConverter.ToInt16(ReadBytes(2)'0)%360;
Magic Number,MonoBrickFirmware.Sensors,EV3GyroSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\EV3GyroSensor.cs,Read,The following statement contains a magic number: return BitConverter.ToInt16(ReadBytes(2)'0);
Magic Number,MonoBrickFirmware.Sensors,EV3IRSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\EV3IRSensor.cs,ReadRemoteCommand,The following statement contains a magic number: return ReadBytes (4) [(int)Channel];
Magic Number,MonoBrickFirmware.Sensors,EV3IRSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\EV3IRSensor.cs,ReadBeaconLocation,The following statement contains a magic number: byte[] data = ReadBytes(4*2);
Magic Number,MonoBrickFirmware.Sensors,EV3IRSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\EV3IRSensor.cs,ReadBeaconLocation,The following statement contains a magic number: byte[] data = ReadBytes(4*2);
Magic Number,MonoBrickFirmware.Sensors,EV3IRSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\EV3IRSensor.cs,ReadBeaconLocation,The following statement contains a magic number: return new BeaconLocation((sbyte)data[(int)Channel*2]' (sbyte)data[((int)Channel*2)+1]);
Magic Number,MonoBrickFirmware.Sensors,EV3IRSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\EV3IRSensor.cs,ReadBeaconLocation,The following statement contains a magic number: return new BeaconLocation((sbyte)data[(int)Channel*2]' (sbyte)data[((int)Channel*2)+1]);
Magic Number,MonoBrickFirmware.Sensors,UltraSonicSettings,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTUltraSonicSensor.cs,UltraSonicSettings,The following statement contains a magic number: scaleDivision = data[2];
Magic Number,MonoBrickFirmware.Sensors,UltraSonicSettings,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTUltraSonicSensor.cs,UltraSonicSettings,The following statement contains a magic number: data.Length == 3
Magic Number,MonoBrickFirmware.Sensors,NXTUltraSonicSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTUltraSonicSensor.cs,ReadDistance,The following statement contains a magic number: return (reading * 39370) / 100;
Magic Number,MonoBrickFirmware.Sensors,NXTUltraSonicSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTUltraSonicSensor.cs,ReadDistance,The following statement contains a magic number: return (reading * 39370) / 100;
Magic Number,MonoBrickFirmware.Sensors,NXTUltraSonicSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTUltraSonicSensor.cs,SetContinuousInterval,The following statement contains a magic number: System.Threading.Thread.Sleep(100);
Magic Number,MonoBrickFirmware.Sensors,NXTUltraSonicSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTUltraSonicSensor.cs,SetMode,The following statement contains a magic number: System.Threading.Thread.Sleep(100);
Magic Number,MonoBrickFirmware.Sensors,NXTSoundSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTSoundSensor.cs,Read,The following statement contains a magic number: switch (Mode)  			{  			    case SoundMode.SoundDB:  			        value =100 - ReadPin1AsPct();  			        break;  			   case SoundMode.SoundDBA:  			        value = 100 -ReadPin1AsPct();  			        break;  			}
Magic Number,MonoBrickFirmware.Sensors,NXTSoundSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTSoundSensor.cs,Read,The following statement contains a magic number: switch (Mode)  			{  			    case SoundMode.SoundDB:  			        value =100 - ReadPin1AsPct();  			        break;  			   case SoundMode.SoundDBA:  			        value = 100 -ReadPin1AsPct();  			        break;  			}
Magic Number,MonoBrickFirmware.Sensors,NXTSoundSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTSoundSensor.cs,ReadRaw,The following statement contains a magic number: return 1023 - base.ReadPin1As10Bit();
Magic Number,MonoBrickFirmware.Sensors,EV3ColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\EV3ColorSensor.cs,GetUInt16,The following statement contains a magic number: return (UInt16)(data[offset] + (data[offset+1] << 8));
Magic Number,MonoBrickFirmware.Sensors,EV3ColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\EV3ColorSensor.cs,ReadRGB,The following statement contains a magic number: byte[] rawBytes = ReadBytes(6);
Magic Number,MonoBrickFirmware.Sensors,EV3ColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\EV3ColorSensor.cs,ReadRGB,The following statement contains a magic number: var g = GetUInt16(rawBytes' 2);
Magic Number,MonoBrickFirmware.Sensors,EV3ColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\EV3ColorSensor.cs,ReadRGB,The following statement contains a magic number: var b = GetUInt16(rawBytes' 4);
Magic Number,MonoBrickFirmware.Sensors,NXTColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTColorSensor.cs,CalculateRawAverage,The following statement contains a magic number: return (int)(rawValues[RedIndex] + rawValues[BlueIndex] + rawValues[GreenIndex])/3;
Magic Number,MonoBrickFirmware.Sensors,NXTColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTColorSensor.cs,CalculateRawAverageAsPct,The following statement contains a magic number: return (CalculateRawAverage () * 100)/ADCResolution;
Magic Number,MonoBrickFirmware.Sensors,NXTColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTColorSensor.cs,GetRawValues,The following statement contains a magic number: rawValues[i] =  BitConverter.ToInt16(ReadBytes(first + i*2' 2)'0);
Magic Number,MonoBrickFirmware.Sensors,NXTColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTColorSensor.cs,GetRawValues,The following statement contains a magic number: rawValues[i] =  BitConverter.ToInt16(ReadBytes(first + i*2' 2)'0);
Magic Number,MonoBrickFirmware.Sensors,NXTColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTColorSensor.cs,GetColorData,The following statement contains a magic number: System.Threading.Thread.Sleep (1000);
Magic Number,MonoBrickFirmware.Sensors,NXTColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTColorSensor.cs,GetColorData,The following statement contains a magic number: calibrationValues [i'j] = BitConverter.ToInt32(ReadBytes(offset' 4)'0);
Magic Number,MonoBrickFirmware.Sensors,NXTColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTColorSensor.cs,GetColorData,The following statement contains a magic number: offset += 4;
Magic Number,MonoBrickFirmware.Sensors,NXTColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTColorSensor.cs,GetColorData,The following statement contains a magic number: calibrationLimits[i] = BitConverter.ToInt16(ReadBytes(offset' 2)'0);
Magic Number,MonoBrickFirmware.Sensors,NXTColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTColorSensor.cs,GetColorData,The following statement contains a magic number: offset += 2;
Magic Number,MonoBrickFirmware.Sensors,NXTColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTColorSensor.cs,CalculateColor,The following statement contains a magic number: red < 65 || (blank < 40 && red < 110)
Magic Number,MonoBrickFirmware.Sensors,NXTColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTColorSensor.cs,CalculateColor,The following statement contains a magic number: red < 65 || (blank < 40 && red < 110)
Magic Number,MonoBrickFirmware.Sensors,NXTColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTColorSensor.cs,CalculateColor,The following statement contains a magic number: red < 65 || (blank < 40 && red < 110)
Magic Number,MonoBrickFirmware.Sensors,NXTColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTColorSensor.cs,CalculateColor,The following statement contains a magic number: ((blue >> 2) + (blue >> 3) + blue < green) &&  	                    ((green << 1) > red)
Magic Number,MonoBrickFirmware.Sensors,NXTColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTColorSensor.cs,CalculateColor,The following statement contains a magic number: ((blue >> 2) + (blue >> 3) + blue < green) &&  	                    ((green << 1) > red)
Magic Number,MonoBrickFirmware.Sensors,NXTColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTColorSensor.cs,CalculateColor,The following statement contains a magic number: (green << 1) - (green >> 2) < red
Magic Number,MonoBrickFirmware.Sensors,NXTColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTColorSensor.cs,CalculateColor,The following statement contains a magic number: blue < 70 || green < 70 || (blank < 140 && red < 140)
Magic Number,MonoBrickFirmware.Sensors,NXTColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTColorSensor.cs,CalculateColor,The following statement contains a magic number: blue < 70 || green < 70 || (blank < 140 && red < 140)
Magic Number,MonoBrickFirmware.Sensors,NXTColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTColorSensor.cs,CalculateColor,The following statement contains a magic number: blue < 70 || green < 70 || (blank < 140 && red < 140)
Magic Number,MonoBrickFirmware.Sensors,NXTColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTColorSensor.cs,CalculateColor,The following statement contains a magic number: blue < 70 || green < 70 || (blank < 140 && red < 140)
Magic Number,MonoBrickFirmware.Sensors,NXTColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTColorSensor.cs,Calibrate,The following statement contains a magic number: calTab = 2;
Magic Number,MonoBrickFirmware.Sensors,NXTColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTColorSensor.cs,Calibrate,The following statement contains a magic number: vals[col] = (Int16) (((rawValues[col] - blankVal) * calibrationValues[calTab'col]) >> 16);
Magic Number,MonoBrickFirmware.Sensors,NXTColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTColorSensor.cs,Calibrate,The following statement contains a magic number: blankVal = (blankVal * 100) / (((SensorMax - MinumumBackGroundValue) * 100) / ADMax);
Magic Number,MonoBrickFirmware.Sensors,NXTColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTColorSensor.cs,Calibrate,The following statement contains a magic number: blankVal = (blankVal * 100) / (((SensorMax - MinumumBackGroundValue) * 100) / ADMax);
Magic Number,MonoBrickFirmware.Sensors,NXTColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTColorSensor.cs,Calibrate,The following statement contains a magic number: vals[BackgroundIndex] = (Int16) ((blankVal * calibrationValues[calTab'BackgroundIndex]) >> 16);
Magic Number,MonoBrickFirmware.Sensors,EV3UltrasonicSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\EV3UltraSonicSensor.cs,Read,The following statement contains a magic number: return (int) BitConverter.ToInt16(ReadBytes(2)'0);
Magic Number,MonoBrickFirmware.Sensors,MSDistanceSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\MSDistanceSensor.cs,GetDistance,The following statement contains a magic number: return (int) BitConverter.ToInt16(ReadRegister((byte)DistanceRegister.DistanceLsb' 2)'0);
Magic Number,MonoBrickFirmware.Sensors,MSDistanceSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\MSDistanceSensor.cs,GetVolgage,The following statement contains a magic number: return (int) BitConverter.ToInt16(ReadRegister((byte)DistanceRegister.DistanceLsb' 2)'0);
Magic Number,MonoBrickFirmware.Sensors,MSAngleSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\MSAngleSensor.cs,ReadAngle,The following statement contains a magic number: return (int) BitConverter.ToInt32(ReadRegister((byte)GlideWheelRegister.Angle' 4)'0);
Magic Number,MonoBrickFirmware.Sensors,MSAngleSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\MSAngleSensor.cs,ReadRAW,The following statement contains a magic number: return (int) BitConverter.ToInt32(ReadRegister((byte)GlideWheelRegister.RAW' 4)'0);
Magic Number,MonoBrickFirmware.Sensors,MSAngleSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\MSAngleSensor.cs,ReadRPM,The following statement contains a magic number: return (int) BitConverter.ToInt16(ReadRegister((byte)GlideWheelRegister.RPM' 2)'0);
Magic Number,MonoBrickFirmware.Sensors,MSSensorMUXBase,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\MSSensorMuxBase.cs,MSSensorMUXBase,The following statement contains a magic number: NumberOfM = 2;
Magic Number,MonoBrickFirmware.Sensors,MSSensorMUXBase,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\MSSensorMuxBase.cs,MSSensorMUXBase,The following statement contains a magic number: NumberOfM = 3;
Magic Number,MonoBrickFirmware.Sensors,MSSensorMUXBase,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\MSSensorMuxBase.cs,MSSensorMUXBase,The following statement contains a magic number: NumberOfM = 2;
Magic Number,MonoBrickFirmware.Sensors,MSSensorMUXBase,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\MSSensorMuxBase.cs,MSSensorMUXBase,The following statement contains a magic number: NumberOfM = 2;
Magic Number,MonoBrickFirmware.Sensors,MSSensorMUXBase,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\MSSensorMuxBase.cs,MSSensorMUXBase,The following statement contains a magic number: NumberOfM = 2;
Magic Number,MonoBrickFirmware.Sensors,MSSensorMUXBase,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\MSSensorMuxBase.cs,ReadTwoBytes,The following statement contains a magic number: Result = base.ReadRegister ((byte)0x54' 2);
Magic Number,MonoBrickFirmware.Sensors,MSSensorMUXBase,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\MSSensorMuxBase.cs,ReadFourBytes,The following statement contains a magic number: Result = base.ReadRegister ((byte)0x54' 4);
Magic Number,MonoBrickFirmware.Sensors,MSSensorMUXBase,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\MSSensorMuxBase.cs,ReadEightBytes,The following statement contains a magic number: Result = base.ReadRegister ((byte)0x54' 8);
Magic Number,MonoBrickFirmware.Movement,Output,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Movement\Output.cs,GetCount,The following statement contains a magic number: return  BitConverter.ToInt32(tachoMemory.Read((int)port * TachoBufferSize+ TachoDataOffset' 4)'0);
Magic Number,MonoBrickFirmware.Movement,Vehicle,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Movement\Vehicle.cs,HandleLeftForward,The following statement contains a magic number: handle = motorSync.StepSync((sbyte)-speed' (short) ((short)-200+ (short)turnPercent)' degrees' brake);
Magic Number,MonoBrickFirmware.Movement,Vehicle,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Movement\Vehicle.cs,HandleLeftForward,The following statement contains a magic number: handle = motorSync.StepSync(speed' (short) ((short)-200+(short)turnPercent)' degrees' brake);
Magic Number,MonoBrickFirmware.Movement,Vehicle,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Movement\Vehicle.cs,HandleRightForward,The following statement contains a magic number: handle = motorSync.StepSync(speed' (short) ((short)200- (short)turnPercent)' degrees' brake);
Magic Number,MonoBrickFirmware.Movement,Vehicle,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Movement\Vehicle.cs,HandleRightForward,The following statement contains a magic number: handle = motorSync.StepSync((sbyte)-speed' (short) ((short)200-(short)turnPercent)' degrees' brake);
Magic Number,MonoBrickFirmware.Movement,Vehicle,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Movement\Vehicle.cs,HandleLeftReverse,The following statement contains a magic number: handle = motorSync.StepSync((sbyte)speed'(short) ( (short)-200+(short)turnPercent)' degrees' brake);
Magic Number,MonoBrickFirmware.Movement,Vehicle,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Movement\Vehicle.cs,HandleLeftReverse,The following statement contains a magic number: handle = motorSync.StepSync((sbyte)-speed' (short) ( (short)-200+(short)turnPercent)' degrees' brake);
Magic Number,MonoBrickFirmware.Movement,Vehicle,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Movement\Vehicle.cs,HandleRightReverse,The following statement contains a magic number: handle = motorSync.StepSync((sbyte)-speed'(short) ( (short)200-(short)turnPercent)' degrees' brake);
Magic Number,MonoBrickFirmware.Movement,Vehicle,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Movement\Vehicle.cs,HandleRightReverse,The following statement contains a magic number: handle = motorSync.StepSync((sbyte)speed' (short) ( (short)200-(short)turnPercent)' degrees' brake);
Magic Number,MonoBrickFirmware.Movement,Vehicle,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Movement\Vehicle.cs,HandleSpinRight,The following statement contains a magic number: handle = motorSync.StepSync(speed' 200' degrees' brake);
Magic Number,MonoBrickFirmware.Movement,Vehicle,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Movement\Vehicle.cs,HandleSpinRight,The following statement contains a magic number: handle = motorSync.StepSync((sbyte)-speed' 200' degrees' brake);
Magic Number,MonoBrickFirmware.Movement,Vehicle,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Movement\Vehicle.cs,HandleSpinLeft,The following statement contains a magic number: handle = motorSync.StepSync(speed' -200' degrees' brake);
Magic Number,MonoBrickFirmware.Movement,Vehicle,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Movement\Vehicle.cs,HandleSpinLeft,The following statement contains a magic number: handle = motorSync.StepSync((sbyte)-speed' -200' degrees' brake);
Magic Number,MonoBrickFirmware.Movement,Vehicle,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Movement\Vehicle.cs,Move,The following statement contains a magic number: handle = motorSync.StepSync(speed' (short) 200' degrees' brake);
Magic Number,MonoBrickFirmware.Movement,Vehicle,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Movement\Vehicle.cs,Move,The following statement contains a magic number: handle = motorSync.StepSync(speed' -200' degrees' brake);
Magic Number,MonoBrickFirmware.Movement,MotorBase,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Movement\MotorBase.cs,WaitForMotorsToStop,The following statement contains a magic number: (new Thread(() => {  				start.WaitOne (750);  				started=true;//make sure started is true if we get a timeout  				stop.WaitOne();  				timer.Stop();  				start.Reset();  				stop.Reset();  				waitHandle.Set();  		    })).Start();
Magic Number,MonoBrickFirmware.UserInput,EV3Buttons,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\UserInput\EV3Buttons.cs,LedPattern,The following statement contains a magic number: byte[] cmd = new byte[2];
Magic Number,MonoBrickFirmware.Display.Menus,ItemList,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemList.cs,OnDrawTitle,The following statement contains a magic number: int arrowWidth = (int)font.maxWidth / 3;
Magic Number,MonoBrickFirmware.Display.Menus,ItemList,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemList.cs,DrawItemList,The following statement contains a magic number: Rectangle arrowRect = new Rectangle (new Point (Lcd.Width / 2 - arrowWidth / 2' Lcd.Height - arrowHeight)' new Point (Lcd.Width / 2 + arrowWidth / 2' Lcd.Height - 1));
Magic Number,MonoBrickFirmware.Display.Menus,ItemList,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemList.cs,DrawItemList,The following statement contains a magic number: Rectangle arrowRect = new Rectangle (new Point (Lcd.Width / 2 - arrowWidth / 2' Lcd.Height - arrowHeight)' new Point (Lcd.Width / 2 + arrowWidth / 2' Lcd.Height - 1));
Magic Number,MonoBrickFirmware.Display.Menus,ItemList,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemList.cs,DrawItemList,The following statement contains a magic number: Rectangle arrowRect = new Rectangle (new Point (Lcd.Width / 2 - arrowWidth / 2' Lcd.Height - arrowHeight)' new Point (Lcd.Width / 2 + arrowWidth / 2' Lcd.Height - 1));
Magic Number,MonoBrickFirmware.Display.Menus,ItemList,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemList.cs,DrawItemList,The following statement contains a magic number: Rectangle arrowRect = new Rectangle (new Point (Lcd.Width / 2 - arrowWidth / 2' Lcd.Height - arrowHeight)' new Point (Lcd.Width / 2 + arrowWidth / 2' Lcd.Height - 1));
Magic Number,MonoBrickFirmware.Display.Menus,ItemWithNumericInput,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithNumericInput.cs,OnLeftPressed,The following statement contains a magic number: Value = Value -10;
Magic Number,MonoBrickFirmware.Display.Menus,ItemWithNumericInput,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithNumericInput.cs,OnLeftPressed,The following statement contains a magic number: Value = Value -100;
Magic Number,MonoBrickFirmware.Display.Menus,ItemWithNumericInput,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithNumericInput.cs,OnLeftPressed,The following statement contains a magic number: Value=Value - 500;
Magic Number,MonoBrickFirmware.Display.Menus,ItemWithNumericInput,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithNumericInput.cs,OnRightPressed,The following statement contains a magic number: Value=Value +10;
Magic Number,MonoBrickFirmware.Display.Menus,ItemWithNumericInput,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithNumericInput.cs,OnRightPressed,The following statement contains a magic number: Value = Value +100;
Magic Number,MonoBrickFirmware.Display.Menus,ItemWithNumericInput,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithNumericInput.cs,OnRightPressed,The following statement contains a magic number: Value=Value + 500;
Magic Number,MonoBrickFirmware.Display.Menus,ItemWithNumericInput,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithNumericInput.cs,OnDrawTitle,The following statement contains a magic number: int arrowWidth = (int)f.maxWidth / 4;
Magic Number,MonoBrickFirmware.Display.Menus,ItemWithOptions<OptionType>,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithOptions.cs,OnDrawTitle,The following statement contains a magic number: int arrowWidth = (int)f.maxWidth / 4;
Magic Number,MonoBrickFirmware.Display.Menus,ProgramItem,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithProgramList.cs,OnSelectDialogExit,The following statement contains a magic number: switch (dialog.GetSelectionIndex ()) {  				case 0:  					var startDialog = new ExecuteProgramDialog (this.programInformation' false' useEscToStop);  					startDialog.Start (Parent);  					break;  				case 1:  					if (!programInformation.IsAOTCompiled)  					{  						compileBeforeExecution.SetFocus (Parent' OnCompileInfoDialogExit);   					}   					else   					{  						var start = new ExecuteProgramDialog (this.programInformation' true' useEscToStop);  						start.Start (Parent);  					}  					break;  				case 2:  					if (programInformation.IsAOTCompiled)  					{  						aotQuestionDialog.SetFocus (Parent'OnCompileDialogExit);  					}   					else   					{  						compileDialog.SetFocus (Parent);  					}  					break;  				case 3:  					deleteQuestionDialog.SetFocus (Parent'OnDeleteDialogExit);  					break;  				}
Magic Number,MonoBrickFirmware.Display.Menus,ProgramItem,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithProgramList.cs,OnSelectDialogExit,The following statement contains a magic number: switch (dialog.GetSelectionIndex ()) {  				case 0:  					var startDialog = new ExecuteProgramDialog (this.programInformation' false' useEscToStop);  					startDialog.Start (Parent);  					break;  				case 1:  					if (!programInformation.IsAOTCompiled)  					{  						compileBeforeExecution.SetFocus (Parent' OnCompileInfoDialogExit);   					}   					else   					{  						var start = new ExecuteProgramDialog (this.programInformation' true' useEscToStop);  						start.Start (Parent);  					}  					break;  				case 2:  					if (programInformation.IsAOTCompiled)  					{  						aotQuestionDialog.SetFocus (Parent'OnCompileDialogExit);  					}   					else   					{  						compileDialog.SetFocus (Parent);  					}  					break;  				case 3:  					deleteQuestionDialog.SetFocus (Parent'OnDeleteDialogExit);  					break;  				}
Magic Number,MonoBrickFirmware.Display.Menus,ItemWithUpdateDialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithUpdateDialog.cs,OnUpdateCompleted,The following statement contains a magic number: Buttons.LedPattern (2);
Magic Number,MonoBrickFirmware.Display.Menus,ItemWithBrickInfo,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithBrickInfo.cs,OnDrawContent,The following statement contains a magic number: Lcd.WriteText(Font.MediumFont' startPos+offset*2' "Mono version: " + monoVersion.Substring(0'7)' true);
Magic Number,MonoBrickFirmware.Display.Menus,ItemWithBrickInfo,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithBrickInfo.cs,OnDrawContent,The following statement contains a magic number: Lcd.WriteText(Font.MediumFont' startPos+offset*2' "Mono version: " + monoVersion.Substring(0'7)' true);
Magic Number,MonoBrickFirmware.Display.Menus,ItemWithBrickInfo,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithBrickInfo.cs,OnDrawContent,The following statement contains a magic number: Lcd.WriteText(Font.MediumFont' startPos+offset*3' "Mono CLR: " + monoCLR' true);
Magic Number,MonoBrickFirmware.Display.Menus,ItemWithBrickInfo,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithBrickInfo.cs,OnDrawContent,The following statement contains a magic number: Lcd.WriteText(Font.MediumFont' startPos+offset*4' "IP: " + WiFiDevice.GetIpAddress()' true);
Magic Number,MonoBrickFirmware.Display.Menus,ItemWithTurnOff,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithTurnOff.cs,OnExit,The following statement contains a magic number: Buttons.LedPattern(2);
Magic Number,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,Dialog,The following statement contains a magic number: int xEdge = (Lcd.Width - dialogWidth)/2;
Magic Number,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,Dialog,The following statement contains a magic number: int yEdge = (Lcd.Height - dialogHeight)/2;
Magic Number,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,Dialog,The following statement contains a magic number: titleRect = new Rectangle (new Point ((int)(Lcd.Width / 2 - titleSize / 2)' (int)(startPoint1.Y - (font.maxHeight / 2)))' new Point ((int)(Lcd.Width / 2 + titleSize / 2)' (int)(startPoint1.Y + (font.maxHeight / 2))));
Magic Number,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,Dialog,The following statement contains a magic number: titleRect = new Rectangle (new Point ((int)(Lcd.Width / 2 - titleSize / 2)' (int)(startPoint1.Y - (font.maxHeight / 2)))' new Point ((int)(Lcd.Width / 2 + titleSize / 2)' (int)(startPoint1.Y + (font.maxHeight / 2))));
Magic Number,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,Dialog,The following statement contains a magic number: titleRect = new Rectangle (new Point ((int)(Lcd.Width / 2 - titleSize / 2)' (int)(startPoint1.Y - (font.maxHeight / 2)))' new Point ((int)(Lcd.Width / 2 + titleSize / 2)' (int)(startPoint1.Y + (font.maxHeight / 2))));
Magic Number,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,Dialog,The following statement contains a magic number: titleRect = new Rectangle (new Point ((int)(Lcd.Width / 2 - titleSize / 2)' (int)(startPoint1.Y - (font.maxHeight / 2)))' new Point ((int)(Lcd.Width / 2 + titleSize / 2)' (int)(startPoint1.Y + (font.maxHeight / 2))));
Magic Number,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,Dialog,The following statement contains a magic number: titleRect = new Rectangle (new Point ((int)(Lcd.Width / 2 - titleSize / 2)' (int)(startPoint1.Y - (font.maxHeight / 2)))' new Point ((int)(Lcd.Width / 2 + titleSize / 2)' (int)(startPoint1.Y + (font.maxHeight / 2))));
Magic Number,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,Dialog,The following statement contains a magic number: titleRect = new Rectangle (new Point ((int)(Lcd.Width / 2 - titleSize / 2)' (int)(startPoint1.Y - (font.maxHeight / 2)))' new Point ((int)(Lcd.Width / 2 + titleSize / 2)' (int)(startPoint1.Y + (font.maxHeight / 2))));
Magic Number,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,Dialog,The following statement contains a magic number: titleRect = new Rectangle (new Point ((int)(Lcd.Width / 2 - titleSize / 2)' (int)(startPoint1.Y - (Font.SmallFont.maxHeight / 2)))' new Point ((int)(Lcd.Width / 2 + titleSize / 2)' (int)(startPoint1.Y + (Font.SmallFont.maxHeight / 2))));
Magic Number,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,Dialog,The following statement contains a magic number: titleRect = new Rectangle (new Point ((int)(Lcd.Width / 2 - titleSize / 2)' (int)(startPoint1.Y - (Font.SmallFont.maxHeight / 2)))' new Point ((int)(Lcd.Width / 2 + titleSize / 2)' (int)(startPoint1.Y + (Font.SmallFont.maxHeight / 2))));
Magic Number,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,Dialog,The following statement contains a magic number: titleRect = new Rectangle (new Point ((int)(Lcd.Width / 2 - titleSize / 2)' (int)(startPoint1.Y - (Font.SmallFont.maxHeight / 2)))' new Point ((int)(Lcd.Width / 2 + titleSize / 2)' (int)(startPoint1.Y + (Font.SmallFont.maxHeight / 2))));
Magic Number,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,Dialog,The following statement contains a magic number: titleRect = new Rectangle (new Point ((int)(Lcd.Width / 2 - titleSize / 2)' (int)(startPoint1.Y - (Font.SmallFont.maxHeight / 2)))' new Point ((int)(Lcd.Width / 2 + titleSize / 2)' (int)(startPoint1.Y + (Font.SmallFont.maxHeight / 2))));
Magic Number,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,Dialog,The following statement contains a magic number: titleRect = new Rectangle (new Point ((int)(Lcd.Width / 2 - titleSize / 2)' (int)(startPoint1.Y - (Font.SmallFont.maxHeight / 2)))' new Point ((int)(Lcd.Width / 2 + titleSize / 2)' (int)(startPoint1.Y + (Font.SmallFont.maxHeight / 2))));
Magic Number,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,Dialog,The following statement contains a magic number: titleRect = new Rectangle (new Point ((int)(Lcd.Width / 2 - titleSize / 2)' (int)(startPoint1.Y - (Font.SmallFont.maxHeight / 2)))' new Point ((int)(Lcd.Width / 2 + titleSize / 2)' (int)(startPoint1.Y + (Font.SmallFont.maxHeight / 2))));
Magic Number,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,Dialog,The following statement contains a magic number: int top = innerWindow.P1.Y + (int)( f.maxHeight/2) + topOffset;
Magic Number,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,Dialog,The following statement contains a magic number: int middel = innerWindow.P1.Y  + ((innerWindow.P2.Y - innerWindow.P1.Y) / 2) - (int)(f.maxHeight)/2;
Magic Number,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,Dialog,The following statement contains a magic number: int middel = innerWindow.P1.Y  + ((innerWindow.P2.Y - innerWindow.P1.Y) / 2) - (int)(f.maxHeight)/2;
Magic Number,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,Dialog,The following statement contains a magic number: int numberOfLines = count*2+1;
Magic Number,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,Dialog,The following statement contains a magic number: Point start1 = new Point (innerWindow.P1.X' topOffset+  innerWindow.P1.Y  + ((innerWindow.P2.Y - innerWindow.P1.Y) / 2) - (int)f.maxHeight/2 - count*((int)f.maxHeight) );
Magic Number,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,Dialog,The following statement contains a magic number: Point start1 = new Point (innerWindow.P1.X' topOffset+  innerWindow.P1.Y  + ((innerWindow.P2.Y - innerWindow.P1.Y) / 2) - (int)f.maxHeight/2 - count*((int)f.maxHeight) );
Magic Number,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,Dialog,The following statement contains a magic number: bottomLineCenter = new Point(innerWindow.P1.X + ((innerWindow.P2.X-innerWindow.P1.X)/2) ' outherWindow.P2.Y - dialogEdge/2);
Magic Number,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,Dialog,The following statement contains a magic number: bottomLineCenter = new Point(innerWindow.P1.X + ((innerWindow.P2.X-innerWindow.P1.X)/2) ' outherWindow.P2.Y - dialogEdge/2);
Magic Number,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,DrawCenterButton,The following statement contains a magic number: Point buttonP1 = bottomLineCenter + new Point((int)-textSize/2'(int)-font.maxHeight/2);
Magic Number,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,DrawCenterButton,The following statement contains a magic number: Point buttonP1 = bottomLineCenter + new Point((int)-textSize/2'(int)-font.maxHeight/2);
Magic Number,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,DrawCenterButton,The following statement contains a magic number: Point buttonP2 = bottomLineCenter + new Point((int)textSize/2'(int)font.maxHeight/2);
Magic Number,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,DrawCenterButton,The following statement contains a magic number: Point buttonP2 = bottomLineCenter + new Point((int)textSize/2'(int)font.maxHeight/2);
Magic Number,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,DrawLeftButton,The following statement contains a magic number: Point left1 = bottomLineCenter + new Point(-boxMiddleOffset - (int)textSize'(int)-font.maxHeight/2);
Magic Number,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,DrawLeftButton,The following statement contains a magic number: Point left2 = bottomLineCenter + new Point(-boxMiddleOffset'(int)font.maxHeight/2);
Magic Number,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,DrawRightButton,The following statement contains a magic number: Point right1 = bottomLineCenter + new Point(boxMiddleOffset'(int)-font.maxHeight/2);
Magic Number,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,DrawRightButton,The following statement contains a magic number: Point right2 = bottomLineCenter + new Point(boxMiddleOffset + (int)textSize'(int)font.maxHeight/2);
Magic Number,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,WriteTextOnDialog,The following statement contains a magic number: int middle = (lines.Count / 2);
Magic Number,MonoBrickFirmware.Display.Dialogs,InfoDialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\InfoDialog.cs,DrawText,The following statement contains a magic number: int middle = (lines.Count / 2);
Magic Number,MonoBrickFirmware.Display.Dialogs,InfoDialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\InfoDialog.cs,DrawScrollBar,The following statement contains a magic number: Rectangle indexRec = new Rectangle (new Point(scrollBar.P1.X + (scrollBarWidth - scrollIndexWith)/2' scrollBar.P1.Y + pagePos * indexHeight)' new Point(scrollBar.P2.X - (scrollBarWidth - scrollIndexWith)/2' scrollBar.P1.Y + pagePos * indexHeight + indexHeight ) );
Magic Number,MonoBrickFirmware.Display.Dialogs,InfoDialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\InfoDialog.cs,DrawScrollBar,The following statement contains a magic number: Rectangle indexRec = new Rectangle (new Point(scrollBar.P1.X + (scrollBarWidth - scrollIndexWith)/2' scrollBar.P1.Y + pagePos * indexHeight)' new Point(scrollBar.P2.X - (scrollBarWidth - scrollIndexWith)/2' scrollBar.P1.Y + pagePos * indexHeight + indexHeight ) );
Magic Number,MonoBrickFirmware.Display.Dialogs,SelectDialog<SelectionType>,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\SelectDialog.cs,SelectDialog,The following statement contains a magic number: arrowRect = new Rectangle (new Point (Lcd.Width / 2 - arrowWidth / 2' Lcd.Height-yEdge-dialogEdge-arrowHeight)' new Point (Lcd.Width/ 2 + arrowWidth / 2' Lcd.Height-yEdge-dialogEdge-1));
Magic Number,MonoBrickFirmware.Display.Dialogs,SelectDialog<SelectionType>,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\SelectDialog.cs,SelectDialog,The following statement contains a magic number: arrowRect = new Rectangle (new Point (Lcd.Width / 2 - arrowWidth / 2' Lcd.Height-yEdge-dialogEdge-arrowHeight)' new Point (Lcd.Width/ 2 + arrowWidth / 2' Lcd.Height-yEdge-dialogEdge-1));
Magic Number,MonoBrickFirmware.Display.Dialogs,SelectDialog<SelectionType>,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\SelectDialog.cs,SelectDialog,The following statement contains a magic number: arrowRect = new Rectangle (new Point (Lcd.Width / 2 - arrowWidth / 2' Lcd.Height-yEdge-dialogEdge-arrowHeight)' new Point (Lcd.Width/ 2 + arrowWidth / 2' Lcd.Height-yEdge-dialogEdge-1));
Magic Number,MonoBrickFirmware.Display.Dialogs,SelectDialog<SelectionType>,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\SelectDialog.cs,SelectDialog,The following statement contains a magic number: arrowRect = new Rectangle (new Point (Lcd.Width / 2 - arrowWidth / 2' Lcd.Height-yEdge-dialogEdge-arrowHeight)' new Point (Lcd.Width/ 2 + arrowWidth / 2' Lcd.Height-yEdge-dialogEdge-1));
Magic Number,MonoBrickFirmware.Display.Dialogs,StepDialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\StepDialog.cs,StepDialog,The following statement contains a magic number: stepLineIndex = 2;
Magic Number,MonoBrickFirmware.Display.Dialogs,ProgressDialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\ProgressDialog.cs,OnDrawContent,The following statement contains a magic number: WriteTextOnLine("Please wait..."' 2);
Magic Number,MonoBrickFirmware.Sound,Speaker,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sound\Speaker.cs,PlaySoundFile,The following statement contains a magic number: BitConverter.ToInt32 (headerData' 8) != WaveFormat
Magic Number,MonoBrickFirmware.Sound,Speaker,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sound\Speaker.cs,PlaySoundFile,The following statement contains a magic number: BitConverter.ToInt32 (headerData' 12) != SubChunkId
Magic Number,MonoBrickFirmware.Sound,Speaker,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sound\Speaker.cs,PlaySoundFile,The following statement contains a magic number: BitConverter.ToUInt16 (headerData' 20) != AudioFormat
Magic Number,MonoBrickFirmware.Sound,Speaker,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sound\Speaker.cs,PlaySoundFile,The following statement contains a magic number: BitConverter.ToUInt16 (headerData' 22) != NumChannels
Magic Number,MonoBrickFirmware.Sound,Speaker,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sound\Speaker.cs,PlaySoundFile,The following statement contains a magic number: byte []buffer = new byte[2];
Magic Number,MonoBrickFirmware.Sound,Speaker,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sound\Speaker.cs,PlaySoundFile,The following statement contains a magic number: buffer = new byte[BufferSize*4 + 1];
Magic Number,MonoBrickFirmware.Sound,Speaker,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sound\Speaker.cs,PlaySoundFile,The following statement contains a magic number: audioFileStream.Read (buffer' 1' BufferSize*4);
Magic Number,MonoBrickFirmware.Sound,Speaker,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sound\Speaker.cs,PlaySoundFile,The following statement contains a magic number: int dataLen = BufferSize*4;
Magic Number,MonoBrickFirmware.Sound,Speaker,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sound\Speaker.cs,PlaySoundFile,The following statement contains a magic number: audioFileStream.Read (buffer' 1' BufferSize*4);
Magic Number,MonoBrickFirmware.Sound,Speaker,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sound\Speaker.cs,PlaySoundFile,The following statement contains a magic number: dataLen = BufferSize*4;
Magic Number,MonoBrickFirmware.Sound,Speaker,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sound\Speaker.cs,PlaySoundFile,The following statement contains a magic number: size - totalWritten >= BufferSize*4
Magic Number,MonoBrickFirmware.Display.Animation,ProgressAnimation,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Animation\ProgressAnimation.cs,ProgressAnimation,The following statement contains a magic number: int startOffset = (width - totalWidthUsed)/2;
Magic Number,MonoBrickFirmware.Connections,EV3WiFiDevice,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Connections\EV3WiFiDevice.cs,Gateway,The following statement contains a magic number: string ipString = System.Text.RegularExpressions.Regex.Replace(result[3]'@"\s+"'" ").Split(' ')[1];
Magic Number,MonoBrickFirmware.Connections,EV3WiFiDevice,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Connections\EV3WiFiDevice.cs,Gateway,The following statement contains a magic number: result.Length >= 4
Magic Number,MonoBrickFirmware.Device,EV3Brick,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Device\EV3Brick.cs,TurnOff,The following statement contains a magic number: Thread.Sleep (120000);
Magic Number,MonoBrickFirmware.Device,EV3Brick,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Device\EV3Brick.cs,CurrentRaw,The following statement contains a magic number: return BitConverter.ToInt16(SensorManager.Instance.AnalogMemory.Read(batteryCurrentOffset' 2)' 0);
Magic Number,MonoBrickFirmware.Device,EV3Brick,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Device\EV3Brick.cs,VoltageRaw,The following statement contains a magic number: return BitConverter.ToInt16(SensorManager.Instance.AnalogMemory.Read(batteryVoltageOffset' 2)' 0);
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,ButtonContainer,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\ButtonContainer.cs,UpdateXOnUpDown,The following statement contains a magic number: switch (selectedButton.ExitType)   			{  			case ExitType.Left:  				x = selectedButton.Position.X;  				break;  			case ExitType.Center:  				x = selectedButton.Position.X + selectedButton.Size.X / 2;  				break;  			case ExitType.Right:  				x = selectedButton.Position.X + selectedButton.Size.X-1;  				break;  			}
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Button,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,CalculateTextCenterPoint,The following statement contains a magic number: int centerX = (outherBox.P2.X - outherBox.P1.X)/2;
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Button,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,CalculateTextCenterPoint,The following statement contains a magic number: int textSizeX = (Font.MediumFont.TextSize (Text).X)/2;
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Button,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,CalculateTextCenterPoint,The following statement contains a magic number: int textSizeY = (Font.MediumFont.TextSize (Text).Y)/2;
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Button,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,CalculateTextCenterPoint,The following statement contains a magic number: int centerY = (outherBox.P2.Y - outherBox.P1.Y)/2;
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Button,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,ApplyContainer,The following statement contains a magic number: int characterHeight = (int)Font.MediumFont.maxHeight / 2;
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Button,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,ApplyContainer,The following statement contains a magic number: Point buttonOutherPoint = new Point(buttonInnerPoint.X + 2* characterEdge' buttonInnerPoint.Y + 2* characterEdge);
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Button,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,ApplyContainer,The following statement contains a magic number: Point buttonOutherPoint = new Point(buttonInnerPoint.X + 2* characterEdge' buttonInnerPoint.Y + 2* characterEdge);
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Select,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,Select,The following statement contains a magic number: arrowRect = new Rectangle (new Point (outherBox.P1.X + 3 * characterEdge' outherBox.P1.Y + 3 * characterEdge)' new Point (outherBox.P2.X - 3 * characterEdge' outherBox.P2.Y - 3 * characterEdge));
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Select,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,Select,The following statement contains a magic number: arrowRect = new Rectangle (new Point (outherBox.P1.X + 3 * characterEdge' outherBox.P1.Y + 3 * characterEdge)' new Point (outherBox.P2.X - 3 * characterEdge' outherBox.P2.Y - 3 * characterEdge));
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Select,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,Select,The following statement contains a magic number: arrowRect = new Rectangle (new Point (outherBox.P1.X + 3 * characterEdge' outherBox.P1.Y + 3 * characterEdge)' new Point (outherBox.P2.X - 3 * characterEdge' outherBox.P2.Y - 3 * characterEdge));
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Select,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,Select,The following statement contains a magic number: arrowRect = new Rectangle (new Point (outherBox.P1.X + 3 * characterEdge' outherBox.P1.Y + 3 * characterEdge)' new Point (outherBox.P2.X - 3 * characterEdge' outherBox.P2.Y - 3 * characterEdge));
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Shift,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,Shift,The following statement contains a magic number: arrowRect = new Rectangle (new Point (outherBox.P1.X + 3 * characterEdge' outherBox.P1.Y + 2 * characterEdge)' new Point (outherBox.P1.X + 14 * characterEdge' outherBox.P2.Y - 7 * characterEdge));
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Shift,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,Shift,The following statement contains a magic number: arrowRect = new Rectangle (new Point (outherBox.P1.X + 3 * characterEdge' outherBox.P1.Y + 2 * characterEdge)' new Point (outherBox.P1.X + 14 * characterEdge' outherBox.P2.Y - 7 * characterEdge));
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Shift,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,Shift,The following statement contains a magic number: arrowRect = new Rectangle (new Point (outherBox.P1.X + 3 * characterEdge' outherBox.P1.Y + 2 * characterEdge)' new Point (outherBox.P1.X + 14 * characterEdge' outherBox.P2.Y - 7 * characterEdge));
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Shift,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,Shift,The following statement contains a magic number: arrowRect = new Rectangle (new Point (outherBox.P1.X + 3 * characterEdge' outherBox.P1.Y + 2 * characterEdge)' new Point (outherBox.P1.X + 14 * characterEdge' outherBox.P2.Y - 7 * characterEdge));
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Shift,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,Shift,The following statement contains a magic number: arrowRect = new Rectangle (new Point (arrowRect.P1.X' arrowRect.P1.Y)' new Point (arrowRect.P2.X' arrowRect.P1.Y + (arrowRect.P2.Y - arrowRect.P1.Y)/2 - 2 * characterEdge));
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Shift,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,Shift,The following statement contains a magic number: arrowRect = new Rectangle (new Point (arrowRect.P1.X' arrowRect.P1.Y)' new Point (arrowRect.P2.X' arrowRect.P1.Y + (arrowRect.P2.Y - arrowRect.P1.Y)/2 - 2 * characterEdge));
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Shift,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,Shift,The following statement contains a magic number: arrowRect = arrowRect + new Point (7' 0);
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Shift,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,Shift,The following statement contains a magic number: lineStart = new Point(arrowRect.P1.X + ((arrowRect.P2.X - arrowRect.P1.X) / 2)' arrowRect.P2.Y);
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Shift,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,Shift,The following statement contains a magic number: lineLength = (innerBox.P2.Y - lineStart.Y)  - 2 * characterEdge;
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Shift,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,Shift,The following statement contains a magic number: lineLength = (innerBox.P2.Y - lineStart.Y)  - 2 * characterEdge;
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Shift,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,Shift,The following statement contains a magic number: textDisplacement = new Point (10' 6);
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Shift,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,Shift,The following statement contains a magic number: textDisplacement = new Point (10' 6);
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Enter,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,Enter,The following statement contains a magic number: arrowRect = new Rectangle (new Point (outherBox.P1.X + characterEdge' outherBox.P1.Y + 4 * characterEdge)' new Point (outherBox.P2.X - ((outherBox.P2.X - outherBox.P1.X)/2) - 3* characterEdge' outherBox.P2.Y - 3 * characterEdge));
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Enter,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,Enter,The following statement contains a magic number: arrowRect = new Rectangle (new Point (outherBox.P1.X + characterEdge' outherBox.P1.Y + 4 * characterEdge)' new Point (outherBox.P2.X - ((outherBox.P2.X - outherBox.P1.X)/2) - 3* characterEdge' outherBox.P2.Y - 3 * characterEdge));
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Enter,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,Enter,The following statement contains a magic number: arrowRect = new Rectangle (new Point (outherBox.P1.X + characterEdge' outherBox.P1.Y + 4 * characterEdge)' new Point (outherBox.P2.X - ((outherBox.P2.X - outherBox.P1.X)/2) - 3* characterEdge' outherBox.P2.Y - 3 * characterEdge));
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Enter,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,Enter,The following statement contains a magic number: arrowRect = new Rectangle (new Point (outherBox.P1.X + characterEdge' outherBox.P1.Y + 4 * characterEdge)' new Point (outherBox.P2.X - ((outherBox.P2.X - outherBox.P1.X)/2) - 3* characterEdge' outherBox.P2.Y - 3 * characterEdge));
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Enter,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,Draw,The following statement contains a magic number: Lcd.DrawLine (new Point(arrowRect.P2.X' outherBox.P1.Y + ((outherBox.P2.Y - outherBox.P1.Y)/2))' new Point(outherBox.P2.X - 8 * characterEdge' outherBox.P1.Y +((outherBox.P2.Y - outherBox.P1.Y)/2) )' !Selected);
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Enter,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,Draw,The following statement contains a magic number: Lcd.DrawLine (new Point(arrowRect.P2.X' outherBox.P1.Y + ((outherBox.P2.Y - outherBox.P1.Y)/2))' new Point(outherBox.P2.X - 8 * characterEdge' outherBox.P1.Y +((outherBox.P2.Y - outherBox.P1.Y)/2) )' !Selected);
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Enter,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,Draw,The following statement contains a magic number: Lcd.DrawLine (new Point(arrowRect.P2.X' outherBox.P1.Y + ((outherBox.P2.Y - outherBox.P1.Y)/2))' new Point(outherBox.P2.X - 8 * characterEdge' outherBox.P1.Y +((outherBox.P2.Y - outherBox.P1.Y)/2) )' !Selected);
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Enter,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,Draw,The following statement contains a magic number: Lcd.DrawLine (new Point(outherBox.P2.X - 8 * characterEdge' outherBox.P1.Y + ((outherBox.P2.Y - outherBox.P1.Y)/2))' new Point(outherBox.P2.X - 8 * characterEdge' outherBox.P1.Y + 4* characterEdge)' !Selected);
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Enter,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,Draw,The following statement contains a magic number: Lcd.DrawLine (new Point(outherBox.P2.X - 8 * characterEdge' outherBox.P1.Y + ((outherBox.P2.Y - outherBox.P1.Y)/2))' new Point(outherBox.P2.X - 8 * characterEdge' outherBox.P1.Y + 4* characterEdge)' !Selected);
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Enter,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,Draw,The following statement contains a magic number: Lcd.DrawLine (new Point(outherBox.P2.X - 8 * characterEdge' outherBox.P1.Y + ((outherBox.P2.Y - outherBox.P1.Y)/2))' new Point(outherBox.P2.X - 8 * characterEdge' outherBox.P1.Y + 4* characterEdge)' !Selected);
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Enter,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Buttons.cs,Draw,The following statement contains a magic number: Lcd.DrawLine (new Point(outherBox.P2.X - 8 * characterEdge' outherBox.P1.Y + ((outherBox.P2.Y - outherBox.P1.Y)/2))' new Point(outherBox.P2.X - 8 * characterEdge' outherBox.P1.Y + 4* characterEdge)' !Selected);
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Letters,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,Letters,The following statement contains a magic number: const int size = 26;
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols,The following statement contains a magic number: var symbols = new char[26];
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols,The following statement contains a magic number: symbols[2] = '3';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols,The following statement contains a magic number: symbols[3] = '4';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols,The following statement contains a magic number: symbols[4] = '5';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols,The following statement contains a magic number: symbols[5] = '6';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols,The following statement contains a magic number: symbols[6] = '7';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols,The following statement contains a magic number: symbols[7] = '8';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols,The following statement contains a magic number: symbols[8] = '9';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols,The following statement contains a magic number: symbols[9] = '0';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols,The following statement contains a magic number: symbols[10] = '-';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols,The following statement contains a magic number: symbols[11] = '/';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols,The following statement contains a magic number: symbols[12] = '.';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols,The following statement contains a magic number: symbols[13] = ':';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols,The following statement contains a magic number: symbols[14] = ';';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols,The following statement contains a magic number: symbols[15] = '(';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols,The following statement contains a magic number: symbols[16] = ')';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols,The following statement contains a magic number: symbols[17] = '&';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols,The following statement contains a magic number: symbols[18] = '@';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols,The following statement contains a magic number: symbols[19] = '"';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols,The following statement contains a magic number: symbols[20] = '!';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols,The following statement contains a magic number: symbols[21] = '+';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols,The following statement contains a magic number: symbols[22] = '*';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols,The following statement contains a magic number: symbols[23] = ''';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols,The following statement contains a magic number: symbols[24] = '#';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols,The following statement contains a magic number: symbols[25] = '%';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols2,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols2,The following statement contains a magic number: var symbols = new char[26];
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols2,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols2,The following statement contains a magic number: symbols[2] = '3';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols2,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols2,The following statement contains a magic number: symbols[3] = '4';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols2,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols2,The following statement contains a magic number: symbols[4] = '5';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols2,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols2,The following statement contains a magic number: symbols[5] = '6';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols2,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols2,The following statement contains a magic number: symbols[6] = '7';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols2,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols2,The following statement contains a magic number: symbols[7] = '8';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols2,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols2,The following statement contains a magic number: symbols[8] = '9';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols2,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols2,The following statement contains a magic number: symbols[9] = '0';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols2,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols2,The following statement contains a magic number: symbols[10] = '$';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols2,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols2,The following statement contains a magic number: symbols[11] = (char) 39;
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols2,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols2,The following statement contains a magic number: symbols[11] = (char) 39;
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols2,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols2,The following statement contains a magic number: symbols[12] = '<';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols2,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols2,The following statement contains a magic number: symbols[13] = '=';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols2,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols2,The following statement contains a magic number: symbols[14] = '>';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols2,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols2,The following statement contains a magic number: symbols[15] = '?';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols2,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols2,The following statement contains a magic number: symbols[16] = (char)92;
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols2,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols2,The following statement contains a magic number: symbols[16] = (char)92;
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols2,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols2,The following statement contains a magic number: symbols[17] = ']';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols2,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols2,The following statement contains a magic number: symbols[18] = '^';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols2,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols2,The following statement contains a magic number: symbols[19] = '_';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols2,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols2,The following statement contains a magic number: symbols[20] = '`';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols2,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols2,The following statement contains a magic number: symbols[21] = '{';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols2,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols2,The following statement contains a magic number: symbols[22] = '|';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols2,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols2,The following statement contains a magic number: symbols[23] = '}';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols2,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols2,The following statement contains a magic number: symbols[24] = '~';
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,NumbersAndSymbols2,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\CharacterSets.cs,NumbersAndSymbols2,The following statement contains a magic number: symbols[25] = (char)0;
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Keyboard,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Keyboard.cs,CreateSpecialKeys,The following statement contains a magic number: Add(new Ok (new Position(8'2)' container' ExitType.Right' new Position(2'2)));
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Keyboard,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Keyboard.cs,CreateSpecialKeys,The following statement contains a magic number: Add(new Ok (new Position(8'2)' container' ExitType.Right' new Position(2'2)));
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Keyboard,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Keyboard.cs,CreateSpecialKeys,The following statement contains a magic number: Add(new Ok (new Position(8'2)' container' ExitType.Right' new Position(2'2)));
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Keyboard,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Keyboard.cs,CreateSpecialKeys,The following statement contains a magic number: Add(new Ok (new Position(8'2)' container' ExitType.Right' new Position(2'2)));
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Keyboard,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Keyboard.cs,CreateSpecialKeys,The following statement contains a magic number: Add(new Shift (new Position(0'2)' container' ExitType.Left' false));
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Keyboard,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Keyboard.cs,CreateSpecialKeys,The following statement contains a magic number: Add(new Space (new Position(2'3)' container' ExitType.Center' 6));
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Keyboard,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Keyboard.cs,CreateSpecialKeys,The following statement contains a magic number: Add(new Space (new Position(2'3)' container' ExitType.Center' 6));
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Keyboard,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Keyboard.cs,CreateSpecialKeys,The following statement contains a magic number: Add(new Space (new Position(2'3)' container' ExitType.Center' 6));
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Keyboard,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Keyboard.cs,CreateSpecialKeys,The following statement contains a magic number: textButton = new  TextButton ("Something"' new Position (0' 4)' new Position (10' 2)' container);
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Keyboard,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Keyboard.cs,CreateSpecialKeys,The following statement contains a magic number: textButton = new  TextButton ("Something"' new Position (0' 4)' new Position (10' 2)' container);
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,Keyboard,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Keyboard.cs,CreateSpecialKeys,The following statement contains a magic number: textButton = new  TextButton ("Something"' new Position (0' 4)' new Position (10' 2)' container);
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,TextButton,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Keyboard.cs,TextButton,The following statement contains a magic number: textCenterPoint = new Point (innerBox.P1.X + characterEdge *2' textCenterPoint.Y);
Magic Number,MonoBrickFirmware.Display.Dialogs.UserInput,TextButton,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Keyboard.cs,AddToResult,The following statement contains a magic number: charSize = characterSize/2;
Missing Default,MonoBrickFirmware.Tools,BmpImage,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Tools\BmpImage.cs,CreateHeader,The following switch statement is missing a default case: switch(colorDepth){  				case ColorDepth.TrueColor:  					header.MagicNumber = BMPFileType;  					header.FileSize = CalculateFileSize(width'height' colorDepth);  					header.Reserved1 = 0;//not used  					header.Reserved2 = 0;//not used  					header.OffsetBits = BMPHeaderSize + InfoHeaderSize;  					header.InfoHeaderSize = InfoHeaderSize;  					header.ImageWidth = width;  					header.ImageHeight = height;  					header.Planes = Planes;  					header.ColorDepth =  colorDepth;  					header.Compression = NoCompression;  					header.ImageSize = CalculateImageSize(width'height' colorDepth);  					header.XPixelPerMeter = 0; //zero when color depth = 24  					header.YPixelPerMeter = 0; //zero when color depth = 24  					header.NumberOfColors =0; //zero when color depth = 24  					header.ImportantColors =0; //zero when color depth = 24  					paddingSize = (width*3)%4;  					//no need to add color palette  					header.ColorPalette = null;  					Write(header);  					break;  				case ColorDepth.LowColor:  					header.MagicNumber = BMPFileType;  					header.FileSize = CalculateFileSize(width'height' colorDepth);  					header.Reserved1 = 0;//not used  					header.Reserved2 = 0;//not used  					header.OffsetBits = BMPHeaderSize + InfoHeaderSize + ColorPaletteSize * 4;  					header.InfoHeaderSize = InfoHeaderSize;  					header.ImageWidth = width;  					header.ImageHeight = height;  					header.Planes = Planes;  					header.ColorDepth =  colorDepth;  					header.Compression = NoCompression;  					header.ImageSize = CalculateImageSize(width'height' colorDepth);  					header.XPixelPerMeter = 0; //zero when color depth = 8  					header.YPixelPerMeter = 0; //zero when color depth = 8  					header.NumberOfColors =0; //zero when color depth = 8  					header.ImportantColors =0; //zero when color depth = 8  					paddingSize = (width)%4;  					header.ColorPalette = CreateColorPalette();  					Write(header);  					break;  				case ColorDepth.GrayScaleColor:  					header.MagicNumber = BMPFileType;  					header.FileSize = CalculateFileSize(width'height' ColorDepth.LowColor);  					header.Reserved1 = 0;//not used  					header.Reserved2 = 0;//not used  					header.OffsetBits = BMPHeaderSize + InfoHeaderSize + ColorPaletteSize * 4;  					header.InfoHeaderSize = InfoHeaderSize;  					header.ImageWidth = width;  					header.ImageHeight = height;  					header.Planes = Planes;  					header.ColorDepth = ColorDepth.LowColor; //will be set to GrayScaleColor when header has been written  					header.Compression = NoCompression;//no comression  					header.ImageSize = CalculateImageSize(width'height' ColorDepth.LowColor);  					header.XPixelPerMeter = 0; //zero when color depth = 8  					header.YPixelPerMeter = 0; //zero when color depth = 8  					header.NumberOfColors =0; //zero when color depth = 8  					header.ImportantColors =0; //zero when color depth = 8  					paddingSize = (width)%4;  					header.ColorPalette = CreateGrayScalePalette();  					Write(header);  					header.ColorDepth = ColorDepth.GrayScaleColor;  					break;  			}
Missing Default,MonoBrickFirmware.Tools,BmpImage,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Tools\BmpImage.cs,Write,The following switch statement is missing a default case: switch(header.ColorDepth){  			    case ColorDepth.TrueColor:  			      Write(color.Blue);  			      Write(color.Green);  			      Write(color.Red);  			      break;  			    case ColorDepth.LowColor:  			      temp= GetColorIndex(color);  			      Write(temp);  			      break;  			    case ColorDepth.GrayScaleColor:  			      temp=color.Red; //red = green = blue  			      Write(temp);  			      break;    			}
Missing Default,MonoBrickFirmware.Sensors,SensorFactory,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\SensorFactory.cs,GetSensor,The following switch statement is missing a default case: switch (sensorType) {  			case SensorType.Color:  				sensor = new EV3ColorSensor (port);   				break;  			case SensorType.Gyro:  				sensor = new EV3GyroSensor (port);   				break;  			case SensorType.IR:  				sensor = new EV3IRSensor (port);  				break;  			case SensorType.NXTColor:  				sensor = new NXTColorSensor (port);  				break;  			case SensorType.NXTLight:  				sensor = new NXTLightSensor (port);  				break;  			case SensorType.NXTSound:  				sensor = new NXTSoundSensor (port);  				break;  			case SensorType.NXTTouch:  				sensor = new NXTTouchSensor (port);  				break;  			case SensorType.NXTUltraSonic:  				sensor = new NXTUltraSonicSensor (port);  				break;  			case SensorType.Touch:  				sensor = new EV3TouchSensor (port);  				break;  			case SensorType.UltraSonic:  				sensor = new EV3UltrasonicSensor (port);  				break;  			case SensorType.NXTI2c:  				var helper = new I2CHelper (port);  				sensor = helper.GetSensor ();  				break;  			case SensorType.Unknown:  				if (connectionType == ConnectionType.UART) {  					var uartHelper = new UARTHelper (port);  					sensor = uartHelper.GetSensor ();  				}  				if (connectionType == ConnectionType.InputResistor) {  					sensor = new EV3TouchSensor (port);  				}  				break;  			case SensorType.I2CUnknown:  						  				break;  			case SensorType.NXTTemperature:  						  				break;  			case SensorType.LMotor:  						  				break;  			case SensorType.MMotor:  						  				break;  			case SensorType.NXTTest:  						  				break;  			case SensorType.Terminal:  						  				break;  			case SensorType.Test:  						  				break;  			case SensorType.Error:  					  				break;  			case SensorType.None:  				sensor = new NoSensor (port);  				break;  			}
Missing Default,MonoBrickFirmware.Sensors,EV3GyroSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\EV3GyroSensor.cs,ReadAsString,The following switch statement is missing a default case: switch ((GyroMode)base.uartMode)  			{  			    case GyroMode.Angle:  			         s = Read().ToString() + " degree";  			        break;  			   case GyroMode.AngularVelocity:  			        s = Read().ToString() +  " deg/sec";  			        break;  			}
Missing Default,MonoBrickFirmware.Sensors,EV3IRSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\EV3IRSensor.cs,ReadAsString,The following switch statement is missing a default case: switch ((IRMode)base.uartMode)  			{  			    case IRMode.Proximity:  			        s = ReadDistance() + " cm";  			        break;  			   case IRMode.Remote:  			        s = ReadRemoteCommand() + " on channel " + Channel;  			        break;  			   case IRMode.Seek:  			        BeaconLocation location = ReadBeaconLocation();  			        s = "Location: " + location.Location + " Distance: " + location.Distance + " cm";  			        break;  			}
Missing Default,MonoBrickFirmware.Sensors,EV3IRSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\EV3IRSensor.cs,Read,The following switch statement is missing a default case: switch ((IRMode)base.uartMode)  			{  			    case IRMode.Proximity:  			        value = ReadDistance();  			        break;  			   case IRMode.Remote:  			        value = (int)ReadRemoteCommand();  			        break;  			   case IRMode.Seek:  			        value = (int)ReadBeaconLocation().Location;  			        break;  			}
Missing Default,MonoBrickFirmware.Sensors,NXTLightSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTLightSensor.cs,ReadAsString,The following switch statement is missing a default case: switch (AnalogMode)  			{  			    case (AnalogMode)LightMode.Ambient:  			        s = Read().ToString();  			        break;  			   case (AnalogMode)LightMode.Relection:  			        s = Read().ToString();  			        break;  			}
Missing Default,MonoBrickFirmware.Sensors,NXTSoundSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTSoundSensor.cs,ReadAsString,The following switch statement is missing a default case: switch (Mode)  			{  			    case SoundMode.SoundDB:  			        s = Read().ToString();  			        break;  			   case SoundMode.SoundDBA:  			        s = Read().ToString();  			        break;  			}
Missing Default,MonoBrickFirmware.Sensors,NXTSoundSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\NXTSoundSensor.cs,Read,The following switch statement is missing a default case: switch (Mode)  			{  			    case SoundMode.SoundDB:  			        value =100 - ReadPin1AsPct();  			        break;  			   case SoundMode.SoundDBA:  			        value = 100 -ReadPin1AsPct();  			        break;  			}
Missing Default,MonoBrickFirmware.Sensors,EV3ColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\EV3ColorSensor.cs,ColorModeToSensorMode,The following switch statement is missing a default case: switch (mode) {  				case ColorMode.Ambient:  					sensorMode = UARTMode.Mode1;  					break;  				case ColorMode.Color:  					sensorMode = UARTMode.Mode2;  					break;  				case ColorMode.Blue:  					sensorMode = UARTMode.Mode1;  					break;  				case ColorMode.Green:  					sensorMode = UARTMode.Mode0;//not supported by the EV3 use relection  					break;  				case ColorMode.Reflection:  					sensorMode = UARTMode.Mode0;  					break;                  case ColorMode.RGB:                      sensorMode = UARTMode.Mode4;                      break;  			}
Missing Default,MonoBrickFirmware.Sensors,EV3ColorSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\EV3ColorSensor.cs,SensorModeToColorMode,The following switch statement is missing a default case: switch (mode) {  				case UARTMode.Mode1:  					colorMode = ColorMode.Ambient;  					break;  				case UARTMode.Mode2:  					colorMode = ColorMode.Color;  					break;  				case UARTMode.Mode0:  					colorMode = ColorMode.Reflection;  					break;                  case UARTMode.Mode4:                      colorMode = ColorMode.RGB;                      break;  			}
Missing Default,MonoBrickFirmware.Sensors,EV3UltrasonicSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\EV3UltraSonicSensor.cs,ReadAsString,The following switch statement is missing a default case: switch ((UltraSonicMode)base.uartMode)  			{  			    case UltraSonicMode.Centimeter:  			        s = Read().ToString() + " cm";  			        break;  			   	case UltraSonicMode.Inch:  			        s = Read().ToString() +  " inch";  			        break;  			    case UltraSonicMode.Listen:  			        s = Read().ToString();  			        break;  			}
Missing Default,MonoBrickFirmware.Sensors,MSDistanceSensor,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Sensors\MSDistanceSensor.cs,GetRange,The following switch statement is missing a default case: switch (deviceId) {  				case "DIST-S":  					range = Range.Short;  					break;	  				case "DIST-M":  					range = Range.Medium;  					break;	  				case "DIST-L":  					range = Range.Long;  					break;	  				}
Missing Default,MonoBrickFirmware.UserInput,ButtonEvents,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\UserInput\ButtonEvents.cs,ButtonPollThread,The following switch statement is missing a default case: switch (pressed) {  					case Buttons.ButtonStates.Down:  						queue.Enqueue (DownPressed);  						break;  					case Buttons.ButtonStates.Enter:  						queue.Enqueue (EnterPressed);  						break;  					case Buttons.ButtonStates.Escape:  						queue.Enqueue (EscapePressed);  						break;  					case Buttons.ButtonStates.Left:  						queue.Enqueue (LeftPressed);  						break;  					case Buttons.ButtonStates.Right:  						queue.Enqueue (RightPressed);  						break;  					case Buttons.ButtonStates.Up:  						queue.Enqueue (UpPressed);  						break;  					}
Missing Default,MonoBrickFirmware.UserInput,ButtonEvents,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\UserInput\ButtonEvents.cs,ButtonPollThread,The following switch statement is missing a default case: switch (released) {  					case Buttons.ButtonStates.Down:  						queue.Enqueue (DownReleased);  						break;  					case Buttons.ButtonStates.Enter:  						queue.Enqueue (EnterReleased);  						break;  					case Buttons.ButtonStates.Escape:  						queue.Enqueue (EscapeReleased);  						break;  					case Buttons.ButtonStates.Left:  						queue.Enqueue (LeftReleased);  						break;  					case Buttons.ButtonStates.Right:  						queue.Enqueue (RightReleased);  						break;  					case Buttons.ButtonStates.Up:  						queue.Enqueue (UpReleased);  						break;  					}
Missing Default,MonoBrickFirmware.Display.Menus,ProgramItem,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Menus\ItemWithProgramList.cs,OnSelectDialogExit,The following switch statement is missing a default case: switch (dialog.GetSelectionIndex ()) {  				case 0:  					var startDialog = new ExecuteProgramDialog (this.programInformation' false' useEscToStop);  					startDialog.Start (Parent);  					break;  				case 1:  					if (!programInformation.IsAOTCompiled)  					{  						compileBeforeExecution.SetFocus (Parent' OnCompileInfoDialogExit);   					}   					else   					{  						var start = new ExecuteProgramDialog (this.programInformation' true' useEscToStop);  						start.Start (Parent);  					}  					break;  				case 2:  					if (programInformation.IsAOTCompiled)  					{  						aotQuestionDialog.SetFocus (Parent'OnCompileDialogExit);  					}   					else   					{  						compileDialog.SetFocus (Parent);  					}  					break;  				case 3:  					deleteQuestionDialog.SetFocus (Parent'OnDeleteDialogExit);  					break;  				}
Missing Default,MonoBrickFirmware.Display.Dialogs,Dialog,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\Dialog.cs,Show,The following switch statement is missing a default case: switch (Buttons.GetKeypress (cancelSource.Token)) {  				case Buttons.ButtonStates.Down:   					OnDownPressed ();  					break;  				case Buttons.ButtonStates.Up:  					OnUpPressed ();  					break;  				case Buttons.ButtonStates.Escape:  					OnEscPressed ();  					break;  				case Buttons.ButtonStates.Enter:  					OnEnterPressed ();  					break;  				case Buttons.ButtonStates.Left:  					OnLeftPressed ();  					break;  				case Buttons.ButtonStates.Right:  					OnRightPressed ();  					break;  				}
Missing Default,MonoBrickFirmware.Display.Dialogs.UserInput,ButtonContainer,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\ButtonContainer.cs,UpdateXOnUpDown,The following switch statement is missing a default case: switch (selectedButton.ExitType)   			{  			case ExitType.Left:  				x = selectedButton.Position.X;  				break;  			case ExitType.Center:  				x = selectedButton.Position.X + selectedButton.Size.X / 2;  				break;  			case ExitType.Right:  				x = selectedButton.Position.X + selectedButton.Size.X-1;  				break;  			}
Missing Default,MonoBrickFirmware.Display.Dialogs.UserInput,Keyboard,D:\research\architectureSmells\repos\Larsjep_monoev3\MonoBrickFirmware\Display\Dialogs\UserInput\Keyboard.cs,Enter,The following switch statement is missing a default case: switch (SelectedButton.Id)  			{  			case "Letter":  				textButton.AddSelectedCharacter ();  				break;  			case "SelectNext":  				OnSelectNext();  				break;  			case "SelectPrev":  				OnSelectPrev ();  				break;  			case "Shift":  				OnShift ();  				break;  			case "Ok":  				OnOk();  				break;  			case "Enter":  				textButton.AddLine ();  				break;  			case "Space":  				textButton.AddSpace ();  				break;  			}
