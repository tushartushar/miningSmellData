Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,MonoBrickWebServer.Models,DummyMotorModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\DummyMotorModel.cs,SpeedProfile,The method has 5 parameters. Parameters: speed' rampUpSteps' constantSpeedSteps' rampDownSteps' brake
Long Parameter List,MonoBrickWebServer.Models,DummyMotorModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\DummyMotorModel.cs,PowerProfile,The method has 5 parameters. Parameters: power' rampUpSteps' constantSpeedSteps' rampDownSteps' brake
Long Parameter List,MonoBrickWebServer.Models,IMotorModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\IMotorModel.cs,SpeedProfile,The method has 5 parameters. Parameters: speed' rampUpSteps' constantSpeedSteps' rampDownSteps' brake
Long Parameter List,MonoBrickWebServer.Models,IMotorModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\IMotorModel.cs,PowerProfile,The method has 5 parameters. Parameters: power' rampUpSteps' constantSpeedSteps' rampDownSteps' brake
Long Parameter List,MonoBrickWebServer.Models,MotorModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModel.cs,SpeedProfile,The method has 5 parameters. Parameters: speed' rampUpSteps' constantSpeedSteps' rampDownSteps' brake
Long Parameter List,MonoBrickWebServer.Models,MotorModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModel.cs,PowerProfile,The method has 5 parameters. Parameters: power' rampUpSteps' constantSpeedSteps' rampDownSteps' brake
Long Parameter List,MonoBrickWebServer.Models,LcdModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\LcdModel.cs,WriteTextBox,The method has 7 parameters. Parameters: xStart' yStart' xEnd' yEnd' text' color' align
Long Parameter List,MonoBrickWebServer.Models,LcdModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\LcdModel.cs,DrawCircle,The method has 5 parameters. Parameters: x' y' radius' color' fill
Long Parameter List,MonoBrickWebServer.Models,LcdModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\LcdModel.cs,DrawEllipse,The method has 6 parameters. Parameters: x' y' radiusA' radiusB' color' fill
Long Parameter List,MonoBrickWebServer.Models,LcdModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\LcdModel.cs,DrawLine,The method has 5 parameters. Parameters: xStart' yStart' xEnd' yEnd' color
Long Parameter List,MonoBrickWebServer.Models,LcdModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\LcdModel.cs,DrawRectangle,The method has 6 parameters. Parameters: xStart' yStart' xEnd' yEnd' color' fill
Long Parameter List,MonoBrickWebServer.Models,DummyLcdModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\DummyLcdModel.cs,WriteTextBox,The method has 7 parameters. Parameters: xStart' yStart' xEnd' yEnd' text' color' align
Long Parameter List,MonoBrickWebServer.Models,DummyLcdModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\DummyLcdModel.cs,DrawCircle,The method has 5 parameters. Parameters: x' y' radius' color' fill
Long Parameter List,MonoBrickWebServer.Models,DummyLcdModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\DummyLcdModel.cs,DrawEllipse,The method has 6 parameters. Parameters: x' y' radiusA' radiusB' color' fill
Long Parameter List,MonoBrickWebServer.Models,DummyLcdModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\DummyLcdModel.cs,DrawLine,The method has 5 parameters. Parameters: xStart' yStart' xEnd' yEnd' color
Long Parameter List,MonoBrickWebServer.Models,DummyLcdModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\DummyLcdModel.cs,DrawRectangle,The method has 6 parameters. Parameters: xStart' yStart' xEnd' yEnd' color' fill
Long Parameter List,MonoBrickWebServer.Models,ILcdModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\ILcdModel.cs,WriteTextBox,The method has 7 parameters. Parameters: xStart' yStart' xEnd' yEnd' text' color' align
Long Parameter List,MonoBrickWebServer.Models,ILcdModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\ILcdModel.cs,DrawCircle,The method has 5 parameters. Parameters: x' y' radius' color' fill
Long Parameter List,MonoBrickWebServer.Models,ILcdModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\ILcdModel.cs,DrawEllipse,The method has 6 parameters. Parameters: x' y' radiusA' radiusB' color' fill
Long Parameter List,MonoBrickWebServer.Models,ILcdModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\ILcdModel.cs,DrawLine,The method has 5 parameters. Parameters: xStart' yStart' xEnd' yEnd' color
Long Parameter List,MonoBrickWebServer.Models,ILcdModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\ILcdModel.cs,DrawRectangle,The method has 6 parameters. Parameters: xStart' yStart' xEnd' yEnd' color' fill
Long Statement,MonoBrickWebServer.Models,LcdModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\LcdModel.cs,WriteTextBox,The length of the statement  "			Lcd.WriteTextBox(Font.MediumFont' new Rectangle(new Point(xStart' yStart)' new Point(xEnd' yEnd))' text' color' lcdAlign); " is 122.
Long Statement,MonoBrickWebServer.Modules,EV3Module,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Modules\EV3Module.cs,SetMotorPowerProfile,The length of the statement  "			m.PowerProfile((sbyte)parameters.power' (uint)parameters.rampup' (uint)parameters.constant' (uint)parameters.rampdown' brake);  " is 126.
Long Statement,MonoBrickWebServer.Modules,EV3Module,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Modules\EV3Module.cs,SetMotorSpeedProfile,The length of the statement  "			m.SpeedProfile((sbyte)parameters.speed' (uint)parameters.rampup' (uint)parameters.constant' (uint)parameters.rampdown' brake);  " is 126.
Long Statement,MonoBrickWebServer.Modules,EV3Module,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Modules\EV3Module.cs,WriteTextBox,The length of the statement  "			LCD.WriteTextBox((int)parameters.xstart'(int)parameters.ystart' (int) parameters.xend' (int) parameters.yend' (string) parameters.text' ((string)parameters.color).ToBoolean()' (string)parameters.align); " is 202.
Long Statement,MonoBrickWebServer.Modules,EV3Module,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Modules\EV3Module.cs,DrawCircle,The length of the statement  "			LCD.DrawCircle((int)parameters.x'(int)parameters.y' (ushort) parameters.radius' ((string)parameters.color).ToBoolean()'((string)parameters.fill).ToBoolean() );  " is 159.
Long Statement,MonoBrickWebServer.Modules,EV3Module,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Modules\EV3Module.cs,DrawEllipse,The length of the statement  "			LCD.DrawEllipse((int)parameters.x'(int)parameters.y' (ushort) parameters.radius1' (ushort) parameters.radius2' ((string)parameters.color).ToBoolean()' ((string)parameters.fill).ToBoolean() ); " is 191.
Long Statement,MonoBrickWebServer.Modules,EV3Module,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Modules\EV3Module.cs,DrawLine,The length of the statement  "			LCD.DrawLine((int)parameters.xstart'(int)parameters.ystart' (int) parameters.xend' (int) parameters.yend' ((string)parameters.color).ToBoolean()); " is 146.
Long Statement,MonoBrickWebServer.Modules,EV3Module,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Modules\EV3Module.cs,DrawRectangle,The length of the statement  "			LCD.DrawRectangle((int)parameters.xstart'(int)parameters.ystart' (int) parameters.xend' (int) parameters.yend' ((string)parameters.color).ToBoolean()' ((string)parameters.fill).ToBoolean()); " is 190.
Empty Catch Block,MonoBrickWebServer,Webserver,C:\repos\Larsjep_monoev3\MonoBrickWebServer\MonoBrickWebserver.cs,MainThread,The method has an empty catch block.
Magic Number,MonoBrickWebServer.Models,MotorModelList,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorModelList,The following statement contains a magic number: for (int i = 0; i < 4; i++)   			{  				if (useDummy)   				{  					motors [i] = new DummyMotorModel (portList [i]);  				}   				else   				{  					motors [i] = new MotorModel (portList [i]);  				}  			}
Magic Number,MonoBrickWebServer.Models,MotorModelList,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: if (int.TryParse (index' out motorIndex))   			{  				motorIndex = motorIndex -1;//convert to array index  			}   			else  			{  				char charIndex;  				if (char.TryParse(index' out charIndex))  				{  					motorIndex = (int) charIndex;  					if (motorIndex >= 97 && motorIndex < 101) //a-d  						motorIndex = motorIndex - 97;  					if (motorIndex >= 65 && motorIndex < 69) //A-D  						motorIndex = motorIndex - 65;  				}  				else  				{  					switch (index.ToLower())  					{  					case "outa":  						motorIndex = 0;  						break;  					case "outb":  						motorIndex = 1;  						break;  					case "outc":  						motorIndex = 2;  						break;  					case "outd":  						motorIndex = 3;  						break;  					}  				}  			}
Magic Number,MonoBrickWebServer.Models,MotorModelList,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: if (int.TryParse (index' out motorIndex))   			{  				motorIndex = motorIndex -1;//convert to array index  			}   			else  			{  				char charIndex;  				if (char.TryParse(index' out charIndex))  				{  					motorIndex = (int) charIndex;  					if (motorIndex >= 97 && motorIndex < 101) //a-d  						motorIndex = motorIndex - 97;  					if (motorIndex >= 65 && motorIndex < 69) //A-D  						motorIndex = motorIndex - 65;  				}  				else  				{  					switch (index.ToLower())  					{  					case "outa":  						motorIndex = 0;  						break;  					case "outb":  						motorIndex = 1;  						break;  					case "outc":  						motorIndex = 2;  						break;  					case "outd":  						motorIndex = 3;  						break;  					}  				}  			}
Magic Number,MonoBrickWebServer.Models,MotorModelList,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: if (int.TryParse (index' out motorIndex))   			{  				motorIndex = motorIndex -1;//convert to array index  			}   			else  			{  				char charIndex;  				if (char.TryParse(index' out charIndex))  				{  					motorIndex = (int) charIndex;  					if (motorIndex >= 97 && motorIndex < 101) //a-d  						motorIndex = motorIndex - 97;  					if (motorIndex >= 65 && motorIndex < 69) //A-D  						motorIndex = motorIndex - 65;  				}  				else  				{  					switch (index.ToLower())  					{  					case "outa":  						motorIndex = 0;  						break;  					case "outb":  						motorIndex = 1;  						break;  					case "outc":  						motorIndex = 2;  						break;  					case "outd":  						motorIndex = 3;  						break;  					}  				}  			}
Magic Number,MonoBrickWebServer.Models,MotorModelList,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: if (int.TryParse (index' out motorIndex))   			{  				motorIndex = motorIndex -1;//convert to array index  			}   			else  			{  				char charIndex;  				if (char.TryParse(index' out charIndex))  				{  					motorIndex = (int) charIndex;  					if (motorIndex >= 97 && motorIndex < 101) //a-d  						motorIndex = motorIndex - 97;  					if (motorIndex >= 65 && motorIndex < 69) //A-D  						motorIndex = motorIndex - 65;  				}  				else  				{  					switch (index.ToLower())  					{  					case "outa":  						motorIndex = 0;  						break;  					case "outb":  						motorIndex = 1;  						break;  					case "outc":  						motorIndex = 2;  						break;  					case "outd":  						motorIndex = 3;  						break;  					}  				}  			}
Magic Number,MonoBrickWebServer.Models,MotorModelList,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: if (int.TryParse (index' out motorIndex))   			{  				motorIndex = motorIndex -1;//convert to array index  			}   			else  			{  				char charIndex;  				if (char.TryParse(index' out charIndex))  				{  					motorIndex = (int) charIndex;  					if (motorIndex >= 97 && motorIndex < 101) //a-d  						motorIndex = motorIndex - 97;  					if (motorIndex >= 65 && motorIndex < 69) //A-D  						motorIndex = motorIndex - 65;  				}  				else  				{  					switch (index.ToLower())  					{  					case "outa":  						motorIndex = 0;  						break;  					case "outb":  						motorIndex = 1;  						break;  					case "outc":  						motorIndex = 2;  						break;  					case "outd":  						motorIndex = 3;  						break;  					}  				}  			}
Magic Number,MonoBrickWebServer.Models,MotorModelList,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: if (int.TryParse (index' out motorIndex))   			{  				motorIndex = motorIndex -1;//convert to array index  			}   			else  			{  				char charIndex;  				if (char.TryParse(index' out charIndex))  				{  					motorIndex = (int) charIndex;  					if (motorIndex >= 97 && motorIndex < 101) //a-d  						motorIndex = motorIndex - 97;  					if (motorIndex >= 65 && motorIndex < 69) //A-D  						motorIndex = motorIndex - 65;  				}  				else  				{  					switch (index.ToLower())  					{  					case "outa":  						motorIndex = 0;  						break;  					case "outb":  						motorIndex = 1;  						break;  					case "outc":  						motorIndex = 2;  						break;  					case "outd":  						motorIndex = 3;  						break;  					}  				}  			}
Magic Number,MonoBrickWebServer.Models,MotorModelList,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: if (int.TryParse (index' out motorIndex))   			{  				motorIndex = motorIndex -1;//convert to array index  			}   			else  			{  				char charIndex;  				if (char.TryParse(index' out charIndex))  				{  					motorIndex = (int) charIndex;  					if (motorIndex >= 97 && motorIndex < 101) //a-d  						motorIndex = motorIndex - 97;  					if (motorIndex >= 65 && motorIndex < 69) //A-D  						motorIndex = motorIndex - 65;  				}  				else  				{  					switch (index.ToLower())  					{  					case "outa":  						motorIndex = 0;  						break;  					case "outb":  						motorIndex = 1;  						break;  					case "outc":  						motorIndex = 2;  						break;  					case "outd":  						motorIndex = 3;  						break;  					}  				}  			}
Magic Number,MonoBrickWebServer.Models,MotorModelList,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: if (int.TryParse (index' out motorIndex))   			{  				motorIndex = motorIndex -1;//convert to array index  			}   			else  			{  				char charIndex;  				if (char.TryParse(index' out charIndex))  				{  					motorIndex = (int) charIndex;  					if (motorIndex >= 97 && motorIndex < 101) //a-d  						motorIndex = motorIndex - 97;  					if (motorIndex >= 65 && motorIndex < 69) //A-D  						motorIndex = motorIndex - 65;  				}  				else  				{  					switch (index.ToLower())  					{  					case "outa":  						motorIndex = 0;  						break;  					case "outb":  						motorIndex = 1;  						break;  					case "outc":  						motorIndex = 2;  						break;  					case "outd":  						motorIndex = 3;  						break;  					}  				}  			}
Magic Number,MonoBrickWebServer.Models,SensorModelList,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\SensorModelList.cs,SensorModelList,The following statement contains a magic number: for (int i = 0; i < 4; i++)   			{  				sensors [i] = new SensorModel (portList [i]' useDummy);  			}
Magic Number,MonoBrickWebServer.Models,SensorModelList,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\SensorModelList.cs,SensorIndexToInt,The following statement contains a magic number: if (int.TryParse (index' out sensorIndex))   			{  				sensorIndex = sensorIndex -1;//convert to array index  			}   			else  			{  				switch (index.ToLower())  				{  				case "in1":  					sensorIndex = 0;  					break;  				case "in2":  					sensorIndex = 1;  					break;  				case "in3":  					sensorIndex = 2;  					break;  				case "in4":  					sensorIndex = 3;  					break;  				}  			}
Magic Number,MonoBrickWebServer.Models,SensorModelList,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\SensorModelList.cs,SensorIndexToInt,The following statement contains a magic number: if (int.TryParse (index' out sensorIndex))   			{  				sensorIndex = sensorIndex -1;//convert to array index  			}   			else  			{  				switch (index.ToLower())  				{  				case "in1":  					sensorIndex = 0;  					break;  				case "in2":  					sensorIndex = 1;  					break;  				case "in3":  					sensorIndex = 2;  					break;  				case "in4":  					sensorIndex = 3;  					break;  				}  			}
Magic Number,MonoBrickWebServer.Models,DummySensor,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\DummySensor.cs,ReadAsString,The following statement contains a magic number: return rnd.Next(1024) + " A/D value";
Magic Number,MonoBrickWebServer.Models,DummyLcdModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\DummyLcdModel.cs,TakeScreenShot,The following statement contains a magic number: int Width = 178;
Magic Number,MonoBrickWebServer.Models,DummyLcdModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\DummyLcdModel.cs,TakeScreenShot,The following statement contains a magic number: int Height = 128;
Magic Number,MonoBrickWebServer.Models,DummyLcdModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\DummyLcdModel.cs,TakeScreenShot,The following statement contains a magic number: BmpImage screenshotImage = new BmpImage (24 * 8' (uint)Height' ColorDepth.TrueColor);
Magic Number,MonoBrickWebServer.Models,DummyLcdModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\DummyLcdModel.cs,TakeScreenShot,The following statement contains a magic number: BmpImage screenshotImage = new BmpImage (24 * 8' (uint)Height' ColorDepth.TrueColor);
Magic Number,MonoBrickWebServer.Models,DummyLcdModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\DummyLcdModel.cs,TakeScreenShot,The following statement contains a magic number: RGB startColor = new RGB (188' 191' 161);
Magic Number,MonoBrickWebServer.Models,DummyLcdModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\DummyLcdModel.cs,TakeScreenShot,The following statement contains a magic number: RGB startColor = new RGB (188' 191' 161);
Magic Number,MonoBrickWebServer.Models,DummyLcdModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\DummyLcdModel.cs,TakeScreenShot,The following statement contains a magic number: RGB startColor = new RGB (188' 191' 161);
Magic Number,MonoBrickWebServer.Models,DummyLcdModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\DummyLcdModel.cs,TakeScreenShot,The following statement contains a magic number: RGB endColor = new  RGB (219' 225' 206);
Magic Number,MonoBrickWebServer.Models,DummyLcdModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\DummyLcdModel.cs,TakeScreenShot,The following statement contains a magic number: RGB endColor = new  RGB (219' 225' 206);
Magic Number,MonoBrickWebServer.Models,DummyLcdModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\DummyLcdModel.cs,TakeScreenShot,The following statement contains a magic number: RGB endColor = new  RGB (219' 225' 206);
Magic Number,MonoBrickWebServer.Models,DummyLcdModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\DummyLcdModel.cs,TakeScreenShot,The following statement contains a magic number: int bytesPrLine = ((Width + 31) / 32) * 4;
Magic Number,MonoBrickWebServer.Models,DummyLcdModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\DummyLcdModel.cs,TakeScreenShot,The following statement contains a magic number: int bytesPrLine = ((Width + 31) / 32) * 4;
Magic Number,MonoBrickWebServer.Models,DummyLcdModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\DummyLcdModel.cs,TakeScreenShot,The following statement contains a magic number: int bytesPrLine = ((Width + 31) / 32) * 4;
Magic Number,MonoBrickWebServer.Models,DummyLcdModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\DummyLcdModel.cs,TakeScreenShot,The following statement contains a magic number: for (int y = Height - 1; y >= 0; y--) {  					for (int x = 0; x < bytesPrLine * 8; x++) {  						color.Red = (byte)redActual;  						color.Green = (byte)greenActual;  						color.Blue = (byte)blueActual;  						screenshotImage.AppendRGB (color);  					}  					redActual -= redGradientStep;  					greenActual -= greenGradientStep;  					blueActual -= blueGradientStep;  				}
Magic Number,MonoBrickWebServer,Webserver,C:\repos\Larsjep_monoev3\MonoBrickWebServer\MonoBrickWebserver.cs,Start,The following statement contains a magic number: System.Threading.Thread.Sleep(500);
Missing Default,MonoBrickWebServer.Models,MotorModelList,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following switch statement is missing a default case: switch (index.ToLower())  					{  					case "outa":  						motorIndex = 0;  						break;  					case "outb":  						motorIndex = 1;  						break;  					case "outc":  						motorIndex = 2;  						break;  					case "outd":  						motorIndex = 3;  						break;  					}
Missing Default,MonoBrickWebServer.Models,SensorModelList,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\SensorModelList.cs,SensorIndexToInt,The following switch statement is missing a default case: switch (index.ToLower())  				{  				case "in1":  					sensorIndex = 0;  					break;  				case "in2":  					sensorIndex = 1;  					break;  				case "in3":  					sensorIndex = 2;  					break;  				case "in4":  					sensorIndex = 3;  					break;  				}
Missing Default,MonoBrickWebServer.Models,ProgramModel,C:\repos\Larsjep_monoev3\MonoBrickWebServer\Models\ProgramModel.cs,LocationToString,The following switch statement is missing a default case: switch (location)   			{  				case MonoBrickFirmware.FileSystem.ProgramLocation.ProgramFolder:  					s = "Program folder";  					break;  				case MonoBrickFirmware.FileSystem.ProgramLocation.SDCard:  					s = "SD card";  					break;  				case MonoBrickFirmware.FileSystem.ProgramLocation.Custom:  					s = "Custom";  					break;  			}
