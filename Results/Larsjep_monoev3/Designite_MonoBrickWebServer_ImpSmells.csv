Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MonoBrickWebServer.Models,MotorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,Cyclomatic complexity of the method is 16
Complex Method,MonoBrickWebServer.Models,SensorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\SensorModelList.cs,SensorIndexToInt,Cyclomatic complexity of the method is 13
Complex Method,MonoBrickWebServer.Models,ProgramModel,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\ProgramModel.cs,LocationToString,Cyclomatic complexity of the method is 9
Long Parameter List,MonoBrickWebServer.Models,DummyMotorModel,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\DummyMotorModel.cs,SpeedProfile,The method has 5 parameters.
Long Parameter List,MonoBrickWebServer.Models,DummyMotorModel,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\DummyMotorModel.cs,PowerProfile,The method has 5 parameters.
Long Parameter List,MonoBrickWebServer.Models,IMotorModel,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\IMotorModel.cs,SpeedProfile,The method has 5 parameters.
Long Parameter List,MonoBrickWebServer.Models,IMotorModel,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\IMotorModel.cs,PowerProfile,The method has 5 parameters.
Long Parameter List,MonoBrickWebServer.Models,MotorModel,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModel.cs,SpeedProfile,The method has 5 parameters.
Long Parameter List,MonoBrickWebServer.Models,MotorModel,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModel.cs,PowerProfile,The method has 5 parameters.
Long Parameter List,MonoBrickWebServer.Models,LcdModel,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\LcdModel.cs,WriteTextBox,The method has 7 parameters.
Long Parameter List,MonoBrickWebServer.Models,LcdModel,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\LcdModel.cs,DrawCircle,The method has 5 parameters.
Long Parameter List,MonoBrickWebServer.Models,LcdModel,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\LcdModel.cs,DrawEllipse,The method has 6 parameters.
Long Parameter List,MonoBrickWebServer.Models,LcdModel,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\LcdModel.cs,DrawLine,The method has 5 parameters.
Long Parameter List,MonoBrickWebServer.Models,LcdModel,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\LcdModel.cs,DrawRectangle,The method has 6 parameters.
Long Parameter List,MonoBrickWebServer.Models,DummyLcdModel,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\DummyLcdModel.cs,WriteTextBox,The method has 7 parameters.
Long Parameter List,MonoBrickWebServer.Models,DummyLcdModel,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\DummyLcdModel.cs,DrawCircle,The method has 5 parameters.
Long Parameter List,MonoBrickWebServer.Models,DummyLcdModel,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\DummyLcdModel.cs,DrawEllipse,The method has 6 parameters.
Long Parameter List,MonoBrickWebServer.Models,DummyLcdModel,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\DummyLcdModel.cs,DrawLine,The method has 5 parameters.
Long Parameter List,MonoBrickWebServer.Models,DummyLcdModel,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\DummyLcdModel.cs,DrawRectangle,The method has 6 parameters.
Long Parameter List,MonoBrickWebServer.Models,ILcdModel,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\ILcdModel.cs,WriteTextBox,The method has 7 parameters.
Long Parameter List,MonoBrickWebServer.Models,ILcdModel,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\ILcdModel.cs,DrawCircle,The method has 5 parameters.
Long Parameter List,MonoBrickWebServer.Models,ILcdModel,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\ILcdModel.cs,DrawEllipse,The method has 6 parameters.
Long Parameter List,MonoBrickWebServer.Models,ILcdModel,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\ILcdModel.cs,DrawLine,The method has 5 parameters.
Long Parameter List,MonoBrickWebServer.Models,ILcdModel,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\ILcdModel.cs,DrawRectangle,The method has 6 parameters.
Long Statement,MonoBrickWebServer.Models,LcdModel,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\LcdModel.cs,WriteTextBox,The length of the statement  "	Lcd.WriteTextBox (Font.MediumFont' new Rectangle (new Point (xStart' yStart)' new Point (xEnd' yEnd))' text' color' lcdAlign); " is 126.
Long Statement,MonoBrickWebServer.Modules,EV3Module,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Modules\EV3Module.cs,SetMotorPowerProfile,The length of the statement  "	m.PowerProfile ((sbyte)parameters.power' (uint)parameters.rampup' (uint)parameters.constant' (uint)parameters.rampdown' brake); " is 127.
Long Statement,MonoBrickWebServer.Modules,EV3Module,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Modules\EV3Module.cs,SetMotorSpeedProfile,The length of the statement  "	m.SpeedProfile ((sbyte)parameters.speed' (uint)parameters.rampup' (uint)parameters.constant' (uint)parameters.rampdown' brake); " is 127.
Long Statement,MonoBrickWebServer.Modules,EV3Module,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Modules\EV3Module.cs,WriteTextBox,The length of the statement  "	LCD.WriteTextBox ((int)parameters.xstart' (int)parameters.ystart' (int)parameters.xend' (int)parameters.yend' (string)parameters.text' ((string)parameters.color).ToBoolean ()' (string)parameters.align); " is 202.
Long Statement,MonoBrickWebServer.Modules,EV3Module,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Modules\EV3Module.cs,DrawCircle,The length of the statement  "	LCD.DrawCircle ((int)parameters.x' (int)parameters.y' (ushort)parameters.radius' ((string)parameters.color).ToBoolean ()' ((string)parameters.fill).ToBoolean ()); " is 162.
Long Statement,MonoBrickWebServer.Modules,EV3Module,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Modules\EV3Module.cs,DrawEllipse,The length of the statement  "	LCD.DrawEllipse ((int)parameters.x' (int)parameters.y' (ushort)parameters.radius1' (ushort)parameters.radius2' ((string)parameters.color).ToBoolean ()' ((string)parameters.fill).ToBoolean ()); " is 192.
Long Statement,MonoBrickWebServer.Modules,EV3Module,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Modules\EV3Module.cs,DrawLine,The length of the statement  "	LCD.DrawLine ((int)parameters.xstart' (int)parameters.ystart' (int)parameters.xend' (int)parameters.yend' ((string)parameters.color).ToBoolean ()); " is 147.
Long Statement,MonoBrickWebServer.Modules,EV3Module,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Modules\EV3Module.cs,DrawRectangle,The length of the statement  "	LCD.DrawRectangle ((int)parameters.xstart' (int)parameters.ystart' (int)parameters.xend' (int)parameters.yend' ((string)parameters.color).ToBoolean ()' ((string)parameters.fill).ToBoolean ()); " is 192.
Empty Catch Block,MonoBrickWebServer,Webserver,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\MonoBrickWebserver.cs,MainThread,The method has an empty catch block.
Magic Number,MonoBrickWebServer.Models,MotorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorModelList,The following statement contains a magic number: for (int i = 0; i < 4; i++) {  	if (useDummy) {  		motors [i] = new DummyMotorModel (portList [i]);  	} else {  		motors [i] = new MotorModel (portList [i]);  	}  }  
Magic Number,MonoBrickWebServer.Models,MotorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: if (int.TryParse (index' out motorIndex)) {  	motorIndex = motorIndex - 1;  	//convert to array index  } else {  	char charIndex;  	if (char.TryParse (index' out charIndex)) {  		motorIndex = (int)charIndex;  		if (motorIndex >= 97 && motorIndex < 101)  			//a-d  			motorIndex = motorIndex - 97;  		if (motorIndex >= 65 && motorIndex < 69)  			//A-D  			motorIndex = motorIndex - 65;  	} else {  		switch (index.ToLower ()) {  		case "outa":  			motorIndex = 0;  			break;  		case "outb":  			motorIndex = 1;  			break;  		case "outc":  			motorIndex = 2;  			break;  		case "outd":  			motorIndex = 3;  			break;  		}  	}  }  
Magic Number,MonoBrickWebServer.Models,MotorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: if (int.TryParse (index' out motorIndex)) {  	motorIndex = motorIndex - 1;  	//convert to array index  } else {  	char charIndex;  	if (char.TryParse (index' out charIndex)) {  		motorIndex = (int)charIndex;  		if (motorIndex >= 97 && motorIndex < 101)  			//a-d  			motorIndex = motorIndex - 97;  		if (motorIndex >= 65 && motorIndex < 69)  			//A-D  			motorIndex = motorIndex - 65;  	} else {  		switch (index.ToLower ()) {  		case "outa":  			motorIndex = 0;  			break;  		case "outb":  			motorIndex = 1;  			break;  		case "outc":  			motorIndex = 2;  			break;  		case "outd":  			motorIndex = 3;  			break;  		}  	}  }  
Magic Number,MonoBrickWebServer.Models,MotorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: if (int.TryParse (index' out motorIndex)) {  	motorIndex = motorIndex - 1;  	//convert to array index  } else {  	char charIndex;  	if (char.TryParse (index' out charIndex)) {  		motorIndex = (int)charIndex;  		if (motorIndex >= 97 && motorIndex < 101)  			//a-d  			motorIndex = motorIndex - 97;  		if (motorIndex >= 65 && motorIndex < 69)  			//A-D  			motorIndex = motorIndex - 65;  	} else {  		switch (index.ToLower ()) {  		case "outa":  			motorIndex = 0;  			break;  		case "outb":  			motorIndex = 1;  			break;  		case "outc":  			motorIndex = 2;  			break;  		case "outd":  			motorIndex = 3;  			break;  		}  	}  }  
Magic Number,MonoBrickWebServer.Models,MotorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: if (int.TryParse (index' out motorIndex)) {  	motorIndex = motorIndex - 1;  	//convert to array index  } else {  	char charIndex;  	if (char.TryParse (index' out charIndex)) {  		motorIndex = (int)charIndex;  		if (motorIndex >= 97 && motorIndex < 101)  			//a-d  			motorIndex = motorIndex - 97;  		if (motorIndex >= 65 && motorIndex < 69)  			//A-D  			motorIndex = motorIndex - 65;  	} else {  		switch (index.ToLower ()) {  		case "outa":  			motorIndex = 0;  			break;  		case "outb":  			motorIndex = 1;  			break;  		case "outc":  			motorIndex = 2;  			break;  		case "outd":  			motorIndex = 3;  			break;  		}  	}  }  
Magic Number,MonoBrickWebServer.Models,MotorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: if (int.TryParse (index' out motorIndex)) {  	motorIndex = motorIndex - 1;  	//convert to array index  } else {  	char charIndex;  	if (char.TryParse (index' out charIndex)) {  		motorIndex = (int)charIndex;  		if (motorIndex >= 97 && motorIndex < 101)  			//a-d  			motorIndex = motorIndex - 97;  		if (motorIndex >= 65 && motorIndex < 69)  			//A-D  			motorIndex = motorIndex - 65;  	} else {  		switch (index.ToLower ()) {  		case "outa":  			motorIndex = 0;  			break;  		case "outb":  			motorIndex = 1;  			break;  		case "outc":  			motorIndex = 2;  			break;  		case "outd":  			motorIndex = 3;  			break;  		}  	}  }  
Magic Number,MonoBrickWebServer.Models,MotorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: if (int.TryParse (index' out motorIndex)) {  	motorIndex = motorIndex - 1;  	//convert to array index  } else {  	char charIndex;  	if (char.TryParse (index' out charIndex)) {  		motorIndex = (int)charIndex;  		if (motorIndex >= 97 && motorIndex < 101)  			//a-d  			motorIndex = motorIndex - 97;  		if (motorIndex >= 65 && motorIndex < 69)  			//A-D  			motorIndex = motorIndex - 65;  	} else {  		switch (index.ToLower ()) {  		case "outa":  			motorIndex = 0;  			break;  		case "outb":  			motorIndex = 1;  			break;  		case "outc":  			motorIndex = 2;  			break;  		case "outd":  			motorIndex = 3;  			break;  		}  	}  }  
Magic Number,MonoBrickWebServer.Models,MotorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: if (int.TryParse (index' out motorIndex)) {  	motorIndex = motorIndex - 1;  	//convert to array index  } else {  	char charIndex;  	if (char.TryParse (index' out charIndex)) {  		motorIndex = (int)charIndex;  		if (motorIndex >= 97 && motorIndex < 101)  			//a-d  			motorIndex = motorIndex - 97;  		if (motorIndex >= 65 && motorIndex < 69)  			//A-D  			motorIndex = motorIndex - 65;  	} else {  		switch (index.ToLower ()) {  		case "outa":  			motorIndex = 0;  			break;  		case "outb":  			motorIndex = 1;  			break;  		case "outc":  			motorIndex = 2;  			break;  		case "outd":  			motorIndex = 3;  			break;  		}  	}  }  
Magic Number,MonoBrickWebServer.Models,MotorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: if (int.TryParse (index' out motorIndex)) {  	motorIndex = motorIndex - 1;  	//convert to array index  } else {  	char charIndex;  	if (char.TryParse (index' out charIndex)) {  		motorIndex = (int)charIndex;  		if (motorIndex >= 97 && motorIndex < 101)  			//a-d  			motorIndex = motorIndex - 97;  		if (motorIndex >= 65 && motorIndex < 69)  			//A-D  			motorIndex = motorIndex - 65;  	} else {  		switch (index.ToLower ()) {  		case "outa":  			motorIndex = 0;  			break;  		case "outb":  			motorIndex = 1;  			break;  		case "outc":  			motorIndex = 2;  			break;  		case "outd":  			motorIndex = 3;  			break;  		}  	}  }  
Magic Number,MonoBrickWebServer.Models,MotorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: if (char.TryParse (index' out charIndex)) {  	motorIndex = (int)charIndex;  	if (motorIndex >= 97 && motorIndex < 101)  		//a-d  		motorIndex = motorIndex - 97;  	if (motorIndex >= 65 && motorIndex < 69)  		//A-D  		motorIndex = motorIndex - 65;  } else {  	switch (index.ToLower ()) {  	case "outa":  		motorIndex = 0;  		break;  	case "outb":  		motorIndex = 1;  		break;  	case "outc":  		motorIndex = 2;  		break;  	case "outd":  		motorIndex = 3;  		break;  	}  }  
Magic Number,MonoBrickWebServer.Models,MotorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: if (char.TryParse (index' out charIndex)) {  	motorIndex = (int)charIndex;  	if (motorIndex >= 97 && motorIndex < 101)  		//a-d  		motorIndex = motorIndex - 97;  	if (motorIndex >= 65 && motorIndex < 69)  		//A-D  		motorIndex = motorIndex - 65;  } else {  	switch (index.ToLower ()) {  	case "outa":  		motorIndex = 0;  		break;  	case "outb":  		motorIndex = 1;  		break;  	case "outc":  		motorIndex = 2;  		break;  	case "outd":  		motorIndex = 3;  		break;  	}  }  
Magic Number,MonoBrickWebServer.Models,MotorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: if (char.TryParse (index' out charIndex)) {  	motorIndex = (int)charIndex;  	if (motorIndex >= 97 && motorIndex < 101)  		//a-d  		motorIndex = motorIndex - 97;  	if (motorIndex >= 65 && motorIndex < 69)  		//A-D  		motorIndex = motorIndex - 65;  } else {  	switch (index.ToLower ()) {  	case "outa":  		motorIndex = 0;  		break;  	case "outb":  		motorIndex = 1;  		break;  	case "outc":  		motorIndex = 2;  		break;  	case "outd":  		motorIndex = 3;  		break;  	}  }  
Magic Number,MonoBrickWebServer.Models,MotorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: if (char.TryParse (index' out charIndex)) {  	motorIndex = (int)charIndex;  	if (motorIndex >= 97 && motorIndex < 101)  		//a-d  		motorIndex = motorIndex - 97;  	if (motorIndex >= 65 && motorIndex < 69)  		//A-D  		motorIndex = motorIndex - 65;  } else {  	switch (index.ToLower ()) {  	case "outa":  		motorIndex = 0;  		break;  	case "outb":  		motorIndex = 1;  		break;  	case "outc":  		motorIndex = 2;  		break;  	case "outd":  		motorIndex = 3;  		break;  	}  }  
Magic Number,MonoBrickWebServer.Models,MotorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: if (char.TryParse (index' out charIndex)) {  	motorIndex = (int)charIndex;  	if (motorIndex >= 97 && motorIndex < 101)  		//a-d  		motorIndex = motorIndex - 97;  	if (motorIndex >= 65 && motorIndex < 69)  		//A-D  		motorIndex = motorIndex - 65;  } else {  	switch (index.ToLower ()) {  	case "outa":  		motorIndex = 0;  		break;  	case "outb":  		motorIndex = 1;  		break;  	case "outc":  		motorIndex = 2;  		break;  	case "outd":  		motorIndex = 3;  		break;  	}  }  
Magic Number,MonoBrickWebServer.Models,MotorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: if (char.TryParse (index' out charIndex)) {  	motorIndex = (int)charIndex;  	if (motorIndex >= 97 && motorIndex < 101)  		//a-d  		motorIndex = motorIndex - 97;  	if (motorIndex >= 65 && motorIndex < 69)  		//A-D  		motorIndex = motorIndex - 65;  } else {  	switch (index.ToLower ()) {  	case "outa":  		motorIndex = 0;  		break;  	case "outb":  		motorIndex = 1;  		break;  	case "outc":  		motorIndex = 2;  		break;  	case "outd":  		motorIndex = 3;  		break;  	}  }  
Magic Number,MonoBrickWebServer.Models,MotorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: if (char.TryParse (index' out charIndex)) {  	motorIndex = (int)charIndex;  	if (motorIndex >= 97 && motorIndex < 101)  		//a-d  		motorIndex = motorIndex - 97;  	if (motorIndex >= 65 && motorIndex < 69)  		//A-D  		motorIndex = motorIndex - 65;  } else {  	switch (index.ToLower ()) {  	case "outa":  		motorIndex = 0;  		break;  	case "outb":  		motorIndex = 1;  		break;  	case "outc":  		motorIndex = 2;  		break;  	case "outd":  		motorIndex = 3;  		break;  	}  }  
Magic Number,MonoBrickWebServer.Models,MotorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: if (char.TryParse (index' out charIndex)) {  	motorIndex = (int)charIndex;  	if (motorIndex >= 97 && motorIndex < 101)  		//a-d  		motorIndex = motorIndex - 97;  	if (motorIndex >= 65 && motorIndex < 69)  		//A-D  		motorIndex = motorIndex - 65;  } else {  	switch (index.ToLower ()) {  	case "outa":  		motorIndex = 0;  		break;  	case "outb":  		motorIndex = 1;  		break;  	case "outc":  		motorIndex = 2;  		break;  	case "outd":  		motorIndex = 3;  		break;  	}  }  
Magic Number,MonoBrickWebServer.Models,MotorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: if (motorIndex >= 97 && motorIndex < 101)  	//a-d  	motorIndex = motorIndex - 97;  
Magic Number,MonoBrickWebServer.Models,MotorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: if (motorIndex >= 97 && motorIndex < 101)  	//a-d  	motorIndex = motorIndex - 97;  
Magic Number,MonoBrickWebServer.Models,MotorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: if (motorIndex >= 97 && motorIndex < 101)  	//a-d  	motorIndex = motorIndex - 97;  
Magic Number,MonoBrickWebServer.Models,MotorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: motorIndex = motorIndex - 97;  
Magic Number,MonoBrickWebServer.Models,MotorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: if (motorIndex >= 65 && motorIndex < 69)  	//A-D  	motorIndex = motorIndex - 65;  
Magic Number,MonoBrickWebServer.Models,MotorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: if (motorIndex >= 65 && motorIndex < 69)  	//A-D  	motorIndex = motorIndex - 65;  
Magic Number,MonoBrickWebServer.Models,MotorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: if (motorIndex >= 65 && motorIndex < 69)  	//A-D  	motorIndex = motorIndex - 65;  
Magic Number,MonoBrickWebServer.Models,MotorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: motorIndex = motorIndex - 65;  
Magic Number,MonoBrickWebServer.Models,MotorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: switch (index.ToLower ()) {  case "outa":  	motorIndex = 0;  	break;  case "outb":  	motorIndex = 1;  	break;  case "outc":  	motorIndex = 2;  	break;  case "outd":  	motorIndex = 3;  	break;  }  
Magic Number,MonoBrickWebServer.Models,MotorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: switch (index.ToLower ()) {  case "outa":  	motorIndex = 0;  	break;  case "outb":  	motorIndex = 1;  	break;  case "outc":  	motorIndex = 2;  	break;  case "outd":  	motorIndex = 3;  	break;  }  
Magic Number,MonoBrickWebServer.Models,MotorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: motorIndex = 2;  
Magic Number,MonoBrickWebServer.Models,MotorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following statement contains a magic number: motorIndex = 3;  
Magic Number,MonoBrickWebServer.Models,SensorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\SensorModelList.cs,SensorModelList,The following statement contains a magic number: for (int i = 0; i < 4; i++) {  	sensors [i] = new SensorModel (portList [i]' useDummy);  }  
Magic Number,MonoBrickWebServer.Models,SensorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\SensorModelList.cs,SensorIndexToInt,The following statement contains a magic number: if (int.TryParse (index' out sensorIndex)) {  	sensorIndex = sensorIndex - 1;  	//convert to array index  } else {  	switch (index.ToLower ()) {  	case "in1":  		sensorIndex = 0;  		break;  	case "in2":  		sensorIndex = 1;  		break;  	case "in3":  		sensorIndex = 2;  		break;  	case "in4":  		sensorIndex = 3;  		break;  	}  }  
Magic Number,MonoBrickWebServer.Models,SensorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\SensorModelList.cs,SensorIndexToInt,The following statement contains a magic number: if (int.TryParse (index' out sensorIndex)) {  	sensorIndex = sensorIndex - 1;  	//convert to array index  } else {  	switch (index.ToLower ()) {  	case "in1":  		sensorIndex = 0;  		break;  	case "in2":  		sensorIndex = 1;  		break;  	case "in3":  		sensorIndex = 2;  		break;  	case "in4":  		sensorIndex = 3;  		break;  	}  }  
Magic Number,MonoBrickWebServer.Models,SensorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\SensorModelList.cs,SensorIndexToInt,The following statement contains a magic number: switch (index.ToLower ()) {  case "in1":  	sensorIndex = 0;  	break;  case "in2":  	sensorIndex = 1;  	break;  case "in3":  	sensorIndex = 2;  	break;  case "in4":  	sensorIndex = 3;  	break;  }  
Magic Number,MonoBrickWebServer.Models,SensorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\SensorModelList.cs,SensorIndexToInt,The following statement contains a magic number: switch (index.ToLower ()) {  case "in1":  	sensorIndex = 0;  	break;  case "in2":  	sensorIndex = 1;  	break;  case "in3":  	sensorIndex = 2;  	break;  case "in4":  	sensorIndex = 3;  	break;  }  
Magic Number,MonoBrickWebServer.Models,SensorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\SensorModelList.cs,SensorIndexToInt,The following statement contains a magic number: sensorIndex = 2;  
Magic Number,MonoBrickWebServer.Models,SensorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\SensorModelList.cs,SensorIndexToInt,The following statement contains a magic number: sensorIndex = 3;  
Magic Number,MonoBrickWebServer.Models,DummySensor,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\DummySensor.cs,ReadAsString,The following statement contains a magic number: return rnd.Next (1024) + " A/D value";  
Magic Number,MonoBrickWebServer.Models,DummyLcdModel,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\DummyLcdModel.cs,TakeScreenShot,The following statement contains a magic number: for (int y = Height - 1; y >= 0; y--) {  	for (int x = 0; x < bytesPrLine * 8; x++) {  		color.Red = (byte)redActual;  		color.Green = (byte)greenActual;  		color.Blue = (byte)blueActual;  		screenshotImage.AppendRGB (color);  	}  	redActual -= redGradientStep;  	greenActual -= greenGradientStep;  	blueActual -= blueGradientStep;  }  
Magic Number,MonoBrickWebServer.Models,DummyLcdModel,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\DummyLcdModel.cs,TakeScreenShot,The following statement contains a magic number: for (int x = 0; x < bytesPrLine * 8; x++) {  	color.Red = (byte)redActual;  	color.Green = (byte)greenActual;  	color.Blue = (byte)blueActual;  	screenshotImage.AppendRGB (color);  }  
Magic Number,MonoBrickWebServer,Webserver,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\MonoBrickWebserver.cs,Start,The following statement contains a magic number: System.Threading.Thread.Sleep (500);  
Missing Default,MonoBrickWebServer.Models,MotorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\MotorModelList.cs,MotorIndexToInt,The following switch statement is missing a default case: switch (index.ToLower ()) {  case "outa":  	motorIndex = 0;  	break;  case "outb":  	motorIndex = 1;  	break;  case "outc":  	motorIndex = 2;  	break;  case "outd":  	motorIndex = 3;  	break;  }  
Missing Default,MonoBrickWebServer.Models,SensorModelList,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\SensorModelList.cs,SensorIndexToInt,The following switch statement is missing a default case: switch (index.ToLower ()) {  case "in1":  	sensorIndex = 0;  	break;  case "in2":  	sensorIndex = 1;  	break;  case "in3":  	sensorIndex = 2;  	break;  case "in4":  	sensorIndex = 3;  	break;  }  
Missing Default,MonoBrickWebServer.Models,ProgramModel,F:\newReposMay17\Larsjep_monoev3\MonoBrickWebServer\Models\ProgramModel.cs,LocationToString,The following switch statement is missing a default case: switch (location) {  case MonoBrickFirmware.FileSystem.ProgramLocation.ProgramFolder:  	s = "Program folder";  	break;  case MonoBrickFirmware.FileSystem.ProgramLocation.SDCard:  	s = "SD card";  	break;  case MonoBrickFirmware.FileSystem.ProgramLocation.Custom:  	s = "Custom";  	break;  }  
