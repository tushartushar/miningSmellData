Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Patch_Runner,Boot,D:\SecondaryReposToAnalyze\biofractal_Patch-Runner\Patch-Runner\Boot.cs,RequestStartup,The method has 5 parameters.
Long Statement,Patch_Runner,FixInvalidHttpsUrls,D:\SecondaryReposToAnalyze\biofractal_Patch-Runner\Patch-Runner\Library\Patches\FixInvalidHttpsUrls.cs,Run,The length of the statement  "	var csv = new CsvReader (new StreamReader (HttpContext.Current.Server.MapPath ("/Library/Resources/links-for-staging.csv"))); " is 125.
Long Statement,Patch_Runner,FixInvalidHttpsUrls,D:\SecondaryReposToAnalyze\biofractal_Patch-Runner\Patch-Runner\Library\Patches\FixInvalidHttpsUrls.cs,Run,The length of the statement  "			id = (Guid?)AutoDal.ExecuteScalar (string.Format ("select [OriginalContentId] from [{0}] where [Url] = '{1}'"' source' spyderUrl.Url)); " is 135.
Long Statement,Patch_Runner,FixInvalidHttpsUrls,D:\SecondaryReposToAnalyze\biofractal_Patch-Runner\Patch-Runner\Library\Patches\FixInvalidHttpsUrls.cs,Run,The length of the statement  "		var replaceInvalid = string.Format ("update [{0}] set [Xhtml] = replace(cast(Xhtml as nvarchar(max))''{1}'' '{2}') where [Id] = '{3}'"' table' spyderUrl.ReplaceMe' spyderUrl.Valid' id); " is 185.
Long Statement,Patch_Runner,FixInvalidHttpsUrls,D:\SecondaryReposToAnalyze\biofractal_Patch-Runner\Patch-Runner\Library\Patches\FixInvalidHttpsUrls.cs,Run,The length of the statement  "		var fixDoubles = string.Format ("update [{0}] set [Xhtml] = replace(cast(Xhtml as nvarchar(max))''http:http:'' 'http:') where [Id] = '{1}'"' table' id); " is 152.
Long Statement,Patch_Runner,PatchHub,D:\SecondaryReposToAnalyze\biofractal_Patch-Runner\Patch-Runner\PatchHub.cs,RunPatch,The length of the statement  "		caller.patchSuccess (name' watch.Elapsed.Hours + " hrs " + watch.Elapsed.Minutes + " mins " + watch.Elapsed.Seconds + " secs"); " is 127.
Long Statement,Patch_Runner.Library.Patches,UpdateDefaultEmailsToGmail,D:\SecondaryReposToAnalyze\biofractal_Patch-Runner\Patch-Runner\Library\Patches\UpdateDefaultEmailsToGmail.cs,Run,The length of the statement  "	var brandings = AutoDal.GetFilteredList<Branding> ("EmailFromAddress = 'admin@goodpractice.net' or EmailFromName = 'goodpractice.net'"); " is 136.
Long Statement,Patch_Runner.Services,PatchService,D:\SecondaryReposToAnalyze\biofractal_Patch-Runner\Patch-Runner\Services\PatchService.cs,GetAllPatches,The length of the statement  "	return patch.Assembly.GetTypes ().Where (t => !t.IsInterface && patch.IsAssignableFrom (t) && (filter == null || t.Name.ToLower ().IndexOf (filter.ToLower ()) > -1)).Select (t => t.Name.CamelHumpToSpace ()).ToArray (); " is 218.
Magic Number,Patch_Runner,TestError,D:\SecondaryReposToAnalyze\biofractal_Patch-Runner\Patch-Runner\Library\Patches\TestError.cs,Run,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	Thread.Sleep (500);  	var percent = (i + 1) * 20;  	var message = "Processed # " + i;  	ClientLog.Progress (caller' percent' message);  	if (i == 3)  		throw new IndexOutOfRangeException ();  }  
Magic Number,Patch_Runner,TestError,D:\SecondaryReposToAnalyze\biofractal_Patch-Runner\Patch-Runner\Library\Patches\TestError.cs,Run,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	Thread.Sleep (500);  	var percent = (i + 1) * 20;  	var message = "Processed # " + i;  	ClientLog.Progress (caller' percent' message);  	if (i == 3)  		throw new IndexOutOfRangeException ();  }  
Magic Number,Patch_Runner,TestError,D:\SecondaryReposToAnalyze\biofractal_Patch-Runner\Patch-Runner\Library\Patches\TestError.cs,Run,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	Thread.Sleep (500);  	var percent = (i + 1) * 20;  	var message = "Processed # " + i;  	ClientLog.Progress (caller' percent' message);  	if (i == 3)  		throw new IndexOutOfRangeException ();  }  
Magic Number,Patch_Runner,TestError,D:\SecondaryReposToAnalyze\biofractal_Patch-Runner\Patch-Runner\Library\Patches\TestError.cs,Run,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	Thread.Sleep (500);  	var percent = (i + 1) * 20;  	var message = "Processed # " + i;  	ClientLog.Progress (caller' percent' message);  	if (i == 3)  		throw new IndexOutOfRangeException ();  }  
Magic Number,Patch_Runner,TestError,D:\SecondaryReposToAnalyze\biofractal_Patch-Runner\Patch-Runner\Library\Patches\TestError.cs,Run,The following statement contains a magic number: Thread.Sleep (500);  
Magic Number,Patch_Runner,TestError,D:\SecondaryReposToAnalyze\biofractal_Patch-Runner\Patch-Runner\Library\Patches\TestError.cs,Run,The following statement contains a magic number: if (i == 3)  	throw new IndexOutOfRangeException ();  
Magic Number,Patch_Runner,TestLog,D:\SecondaryReposToAnalyze\biofractal_Patch-Runner\Patch-Runner\Library\Patches\TestLog.cs,Run,The following statement contains a magic number: for (int i = 0; i < 20; i++) {  	Thread.Sleep (500);  	var percent = (i + 1) * 5;  	var message = "Processed # " + i;  	ClientLog.Progress (caller' percent' message);  }  
Magic Number,Patch_Runner,TestLog,D:\SecondaryReposToAnalyze\biofractal_Patch-Runner\Patch-Runner\Library\Patches\TestLog.cs,Run,The following statement contains a magic number: for (int i = 0; i < 20; i++) {  	Thread.Sleep (500);  	var percent = (i + 1) * 5;  	var message = "Processed # " + i;  	ClientLog.Progress (caller' percent' message);  }  
Magic Number,Patch_Runner,TestLog,D:\SecondaryReposToAnalyze\biofractal_Patch-Runner\Patch-Runner\Library\Patches\TestLog.cs,Run,The following statement contains a magic number: for (int i = 0; i < 20; i++) {  	Thread.Sleep (500);  	var percent = (i + 1) * 5;  	var message = "Processed # " + i;  	ClientLog.Progress (caller' percent' message);  }  
Magic Number,Patch_Runner,TestLog,D:\SecondaryReposToAnalyze\biofractal_Patch-Runner\Patch-Runner\Library\Patches\TestLog.cs,Run,The following statement contains a magic number: Thread.Sleep (500);  
Magic Number,Patch_Runner,TestLogList,D:\SecondaryReposToAnalyze\biofractal_Patch-Runner\Patch-Runner\Library\Patches\TestLogList.cs,Run,The following statement contains a magic number: for (int i = 0; i < 20; i++) {  	Thread.Sleep (500);  	var percent = (i + 1) * 5;  	var message = "Processed # " + i;  	ClientLog.Progress (caller' percent' message' isList: true);  }  
Magic Number,Patch_Runner,TestLogList,D:\SecondaryReposToAnalyze\biofractal_Patch-Runner\Patch-Runner\Library\Patches\TestLogList.cs,Run,The following statement contains a magic number: for (int i = 0; i < 20; i++) {  	Thread.Sleep (500);  	var percent = (i + 1) * 5;  	var message = "Processed # " + i;  	ClientLog.Progress (caller' percent' message' isList: true);  }  
Magic Number,Patch_Runner,TestLogList,D:\SecondaryReposToAnalyze\biofractal_Patch-Runner\Patch-Runner\Library\Patches\TestLogList.cs,Run,The following statement contains a magic number: for (int i = 0; i < 20; i++) {  	Thread.Sleep (500);  	var percent = (i + 1) * 5;  	var message = "Processed # " + i;  	ClientLog.Progress (caller' percent' message' isList: true);  }  
Magic Number,Patch_Runner,TestLogList,D:\SecondaryReposToAnalyze\biofractal_Patch-Runner\Patch-Runner\Library\Patches\TestLogList.cs,Run,The following statement contains a magic number: Thread.Sleep (500);  
