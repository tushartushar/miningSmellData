Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Nop.Plugin.Shipping.CanadaPost,CanadaPostComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.CanadaPost\CanadaPostComputationMethod.cs,HandleResult,Cyclomatic complexity of the method is 10
Complex Method,Nop.Plugin.Shipping.CanadaPost,CanadaPostComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.CanadaPost\CanadaPostComputationMethod.cs,CreateItems,Cyclomatic complexity of the method is 8
Complex Method,Nop.Plugin.Shipping.CanadaPost,CanadaPostComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.CanadaPost\CanadaPostComputationMethod.cs,GetShippingOptions,Cyclomatic complexity of the method is 13
Long Parameter List,Nop.Plugin.Shipping.CanadaPost,CanadaPostComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.CanadaPost\CanadaPostComputationMethod.cs,CanadaPostComputationMethod,The method has 5 parameters.
Long Statement,Nop.Plugin.Shipping.CanadaPost,CanadaPostComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.CanadaPost\CanadaPostComputationMethod.cs,HandleResult,The length of the statement  "				box.ExpediterWeight = Convert.ToDouble (packing.Element ("expediterWeight").Value' new CultureInfo ("en-US"' false).NumberFormat); " is 130.
Long Statement,Nop.Plugin.Shipping.CanadaPost,CanadaPostComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.CanadaPost\CanadaPostComputationMethod.cs,CreateItems,The length of the statement  "		item.Length = Convert.ToInt32 (Math.Ceiling (_measureService.ConvertFromPrimaryMeasureDimension (product.Length' usedMeasureDimension) * 100)); " is 143.
Long Statement,Nop.Plugin.Shipping.CanadaPost,CanadaPostComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.CanadaPost\CanadaPostComputationMethod.cs,CreateItems,The length of the statement  "		item.Width = Convert.ToInt32 (Math.Ceiling (_measureService.ConvertFromPrimaryMeasureDimension (product.Width' usedMeasureDimension) * 100)); " is 141.
Long Statement,Nop.Plugin.Shipping.CanadaPost,CanadaPostComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.CanadaPost\CanadaPostComputationMethod.cs,CreateItems,The length of the statement  "		item.Height = Convert.ToInt32 (Math.Ceiling (_measureService.ConvertFromPrimaryMeasureDimension (product.Height' usedMeasureDimension) * 100)); " is 143.
Long Statement,Nop.Plugin.Shipping.CanadaPost,CanadaPostComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.CanadaPost\CanadaPostComputationMethod.cs,Install,The length of the statement  "	this.AddOrUpdatePluginLocaleResource ("Plugins.Shipping.CanadaPost.Fields.CustomerId.Hint"' "Specify Canada Post customer identifier."); " is 136.
Magic Number,Nop.Plugin.Shipping.CanadaPost,CanadaPostComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.CanadaPost\CanadaPostComputationMethod.cs,SendMessage,The following statement contains a magic number: using (var socCanadaPost = new Socket (AddressFamily.InterNetwork' SocketType.Stream' ProtocolType.Tcp)) {  	socCanadaPost.ReceiveTimeout = 12000;  	var remoteEndPoint = new IPEndPoint (Dns.GetHostAddresses (_canadaPostSettings.Url) [0]' _canadaPostSettings.Port);  	socCanadaPost.Connect (remoteEndPoint);  	byte[] data = System.Text.Encoding.ASCII.GetBytes (eParcelMessage);  	socCanadaPost.Send (data);  	string resp = String.Empty;  	byte[] buffer = new byte[8192];  	int iRx = 0;  	while (!resp.Contains ("<!--END_OF_EPARCEL-->")) {  		try {  			iRx = socCanadaPost.Receive (buffer' 0' 8192' SocketFlags.None);  		}  		catch (SocketException e) {  			if (e.SocketErrorCode == SocketError.TimedOut)  				break;  			else  				throw e;  		}  		if (iRx > 0) {  			resp += new string ((System.Text.Encoding.UTF8.GetChars (buffer' 0' iRx)));  		}  	}  	return resp;  }  
Magic Number,Nop.Plugin.Shipping.CanadaPost,CanadaPostComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.CanadaPost\CanadaPostComputationMethod.cs,SendMessage,The following statement contains a magic number: using (var socCanadaPost = new Socket (AddressFamily.InterNetwork' SocketType.Stream' ProtocolType.Tcp)) {  	socCanadaPost.ReceiveTimeout = 12000;  	var remoteEndPoint = new IPEndPoint (Dns.GetHostAddresses (_canadaPostSettings.Url) [0]' _canadaPostSettings.Port);  	socCanadaPost.Connect (remoteEndPoint);  	byte[] data = System.Text.Encoding.ASCII.GetBytes (eParcelMessage);  	socCanadaPost.Send (data);  	string resp = String.Empty;  	byte[] buffer = new byte[8192];  	int iRx = 0;  	while (!resp.Contains ("<!--END_OF_EPARCEL-->")) {  		try {  			iRx = socCanadaPost.Receive (buffer' 0' 8192' SocketFlags.None);  		}  		catch (SocketException e) {  			if (e.SocketErrorCode == SocketError.TimedOut)  				break;  			else  				throw e;  		}  		if (iRx > 0) {  			resp += new string ((System.Text.Encoding.UTF8.GetChars (buffer' 0' iRx)));  		}  	}  	return resp;  }  
Magic Number,Nop.Plugin.Shipping.CanadaPost,CanadaPostComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.CanadaPost\CanadaPostComputationMethod.cs,SendMessage,The following statement contains a magic number: using (var socCanadaPost = new Socket (AddressFamily.InterNetwork' SocketType.Stream' ProtocolType.Tcp)) {  	socCanadaPost.ReceiveTimeout = 12000;  	var remoteEndPoint = new IPEndPoint (Dns.GetHostAddresses (_canadaPostSettings.Url) [0]' _canadaPostSettings.Port);  	socCanadaPost.Connect (remoteEndPoint);  	byte[] data = System.Text.Encoding.ASCII.GetBytes (eParcelMessage);  	socCanadaPost.Send (data);  	string resp = String.Empty;  	byte[] buffer = new byte[8192];  	int iRx = 0;  	while (!resp.Contains ("<!--END_OF_EPARCEL-->")) {  		try {  			iRx = socCanadaPost.Receive (buffer' 0' 8192' SocketFlags.None);  		}  		catch (SocketException e) {  			if (e.SocketErrorCode == SocketError.TimedOut)  				break;  			else  				throw e;  		}  		if (iRx > 0) {  			resp += new string ((System.Text.Encoding.UTF8.GetChars (buffer' 0' iRx)));  		}  	}  	return resp;  }  
Magic Number,Nop.Plugin.Shipping.CanadaPost,CanadaPostComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.CanadaPost\CanadaPostComputationMethod.cs,SendMessage,The following statement contains a magic number: socCanadaPost.ReceiveTimeout = 12000;  
Magic Number,Nop.Plugin.Shipping.CanadaPost,CanadaPostComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.CanadaPost\CanadaPostComputationMethod.cs,SendMessage,The following statement contains a magic number: while (!resp.Contains ("<!--END_OF_EPARCEL-->")) {  	try {  		iRx = socCanadaPost.Receive (buffer' 0' 8192' SocketFlags.None);  	}  	catch (SocketException e) {  		if (e.SocketErrorCode == SocketError.TimedOut)  			break;  		else  			throw e;  	}  	if (iRx > 0) {  		resp += new string ((System.Text.Encoding.UTF8.GetChars (buffer' 0' iRx)));  	}  }  
Magic Number,Nop.Plugin.Shipping.CanadaPost,CanadaPostComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.CanadaPost\CanadaPostComputationMethod.cs,SendMessage,The following statement contains a magic number: try {  	iRx = socCanadaPost.Receive (buffer' 0' 8192' SocketFlags.None);  }  catch (SocketException e) {  	if (e.SocketErrorCode == SocketError.TimedOut)  		break;  	else  		throw e;  }  
Magic Number,Nop.Plugin.Shipping.CanadaPost,CanadaPostComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.CanadaPost\CanadaPostComputationMethod.cs,SendMessage,The following statement contains a magic number: iRx = socCanadaPost.Receive (buffer' 0' 8192' SocketFlags.None);  
Magic Number,Nop.Plugin.Shipping.CanadaPost,CanadaPostComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.CanadaPost\CanadaPostComputationMethod.cs,CreateItems,The following statement contains a magic number: foreach (var sci in getShippingOptionRequest.Items) {  	var product = sci.Product;  	var item = new Item ();  	item.Quantity = sci.Quantity;  	//Canada Post uses kg(s)  	decimal unitWeight = _shippingService.GetShoppingCartItemTotalWeight (sci) / sci.Quantity;  	item.Weight = _measureService.ConvertFromPrimaryMeasureWeight (unitWeight' usedMeasureWeight);  	item.Weight = Math.Round (item.Weight' 2);  	if (item.Weight == decimal.Zero)  		item.Weight = 0.01M;  	//Canada Post uses centimeters                  	item.Length = Convert.ToInt32 (Math.Ceiling (_measureService.ConvertFromPrimaryMeasureDimension (product.Length' usedMeasureDimension) * 100));  	if (item.Length == decimal.Zero)  		item.Length = 1;  	item.Width = Convert.ToInt32 (Math.Ceiling (_measureService.ConvertFromPrimaryMeasureDimension (product.Width' usedMeasureDimension) * 100));  	if (item.Width == decimal.Zero)  		item.Width = 1;  	item.Height = Convert.ToInt32 (Math.Ceiling (_measureService.ConvertFromPrimaryMeasureDimension (product.Height' usedMeasureDimension) * 100));  	if (item.Height == decimal.Zero)  		item.Height = 1;  	result.Add (item);  }  
Magic Number,Nop.Plugin.Shipping.CanadaPost,CanadaPostComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.CanadaPost\CanadaPostComputationMethod.cs,CreateItems,The following statement contains a magic number: foreach (var sci in getShippingOptionRequest.Items) {  	var product = sci.Product;  	var item = new Item ();  	item.Quantity = sci.Quantity;  	//Canada Post uses kg(s)  	decimal unitWeight = _shippingService.GetShoppingCartItemTotalWeight (sci) / sci.Quantity;  	item.Weight = _measureService.ConvertFromPrimaryMeasureWeight (unitWeight' usedMeasureWeight);  	item.Weight = Math.Round (item.Weight' 2);  	if (item.Weight == decimal.Zero)  		item.Weight = 0.01M;  	//Canada Post uses centimeters                  	item.Length = Convert.ToInt32 (Math.Ceiling (_measureService.ConvertFromPrimaryMeasureDimension (product.Length' usedMeasureDimension) * 100));  	if (item.Length == decimal.Zero)  		item.Length = 1;  	item.Width = Convert.ToInt32 (Math.Ceiling (_measureService.ConvertFromPrimaryMeasureDimension (product.Width' usedMeasureDimension) * 100));  	if (item.Width == decimal.Zero)  		item.Width = 1;  	item.Height = Convert.ToInt32 (Math.Ceiling (_measureService.ConvertFromPrimaryMeasureDimension (product.Height' usedMeasureDimension) * 100));  	if (item.Height == decimal.Zero)  		item.Height = 1;  	result.Add (item);  }  
Magic Number,Nop.Plugin.Shipping.CanadaPost,CanadaPostComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.CanadaPost\CanadaPostComputationMethod.cs,CreateItems,The following statement contains a magic number: foreach (var sci in getShippingOptionRequest.Items) {  	var product = sci.Product;  	var item = new Item ();  	item.Quantity = sci.Quantity;  	//Canada Post uses kg(s)  	decimal unitWeight = _shippingService.GetShoppingCartItemTotalWeight (sci) / sci.Quantity;  	item.Weight = _measureService.ConvertFromPrimaryMeasureWeight (unitWeight' usedMeasureWeight);  	item.Weight = Math.Round (item.Weight' 2);  	if (item.Weight == decimal.Zero)  		item.Weight = 0.01M;  	//Canada Post uses centimeters                  	item.Length = Convert.ToInt32 (Math.Ceiling (_measureService.ConvertFromPrimaryMeasureDimension (product.Length' usedMeasureDimension) * 100));  	if (item.Length == decimal.Zero)  		item.Length = 1;  	item.Width = Convert.ToInt32 (Math.Ceiling (_measureService.ConvertFromPrimaryMeasureDimension (product.Width' usedMeasureDimension) * 100));  	if (item.Width == decimal.Zero)  		item.Width = 1;  	item.Height = Convert.ToInt32 (Math.Ceiling (_measureService.ConvertFromPrimaryMeasureDimension (product.Height' usedMeasureDimension) * 100));  	if (item.Height == decimal.Zero)  		item.Height = 1;  	result.Add (item);  }  
Magic Number,Nop.Plugin.Shipping.CanadaPost,CanadaPostComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.CanadaPost\CanadaPostComputationMethod.cs,CreateItems,The following statement contains a magic number: foreach (var sci in getShippingOptionRequest.Items) {  	var product = sci.Product;  	var item = new Item ();  	item.Quantity = sci.Quantity;  	//Canada Post uses kg(s)  	decimal unitWeight = _shippingService.GetShoppingCartItemTotalWeight (sci) / sci.Quantity;  	item.Weight = _measureService.ConvertFromPrimaryMeasureWeight (unitWeight' usedMeasureWeight);  	item.Weight = Math.Round (item.Weight' 2);  	if (item.Weight == decimal.Zero)  		item.Weight = 0.01M;  	//Canada Post uses centimeters                  	item.Length = Convert.ToInt32 (Math.Ceiling (_measureService.ConvertFromPrimaryMeasureDimension (product.Length' usedMeasureDimension) * 100));  	if (item.Length == decimal.Zero)  		item.Length = 1;  	item.Width = Convert.ToInt32 (Math.Ceiling (_measureService.ConvertFromPrimaryMeasureDimension (product.Width' usedMeasureDimension) * 100));  	if (item.Width == decimal.Zero)  		item.Width = 1;  	item.Height = Convert.ToInt32 (Math.Ceiling (_measureService.ConvertFromPrimaryMeasureDimension (product.Height' usedMeasureDimension) * 100));  	if (item.Height == decimal.Zero)  		item.Height = 1;  	result.Add (item);  }  
Magic Number,Nop.Plugin.Shipping.CanadaPost,CanadaPostComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.CanadaPost\CanadaPostComputationMethod.cs,CreateItems,The following statement contains a magic number: item.Weight = Math.Round (item.Weight' 2);  
Magic Number,Nop.Plugin.Shipping.CanadaPost,CanadaPostComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.CanadaPost\CanadaPostComputationMethod.cs,CreateItems,The following statement contains a magic number: item.Length = Convert.ToInt32 (Math.Ceiling (_measureService.ConvertFromPrimaryMeasureDimension (product.Length' usedMeasureDimension) * 100));  
Magic Number,Nop.Plugin.Shipping.CanadaPost,CanadaPostComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.CanadaPost\CanadaPostComputationMethod.cs,CreateItems,The following statement contains a magic number: item.Width = Convert.ToInt32 (Math.Ceiling (_measureService.ConvertFromPrimaryMeasureDimension (product.Width' usedMeasureDimension) * 100));  
Magic Number,Nop.Plugin.Shipping.CanadaPost,CanadaPostComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.CanadaPost\CanadaPostComputationMethod.cs,CreateItems,The following statement contains a magic number: item.Height = Convert.ToInt32 (Math.Ceiling (_measureService.ConvertFromPrimaryMeasureDimension (product.Height' usedMeasureDimension) * 100));  
