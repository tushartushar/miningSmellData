Implementation smell,Namespace,Class,File,Method,Description
Long Method,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,CreateRequest,The method has 157 lines of code.
Complex Method,Nop.Plugin.Shipping.UPS,UPSShipmentTracker,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSShipmentTracker.cs,ToStatusEvent,Cyclomatic complexity of the method is 15
Complex Method,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,CreateRequest,Cyclomatic complexity of the method is 19
Complex Method,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,GetPackagingTypeCode,Cyclomatic complexity of the method is 9
Complex Method,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,GetPickupTypeCode,Cyclomatic complexity of the method is 9
Complex Method,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,GetServiceName,Cyclomatic complexity of the method is 17
Complex Method,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,ParseResponse,Cyclomatic complexity of the method is 21
Complex Method,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,GetShippingOptions,Cyclomatic complexity of the method is 11
Complex Method,Nop.Plugin.Shipping.UPS.Domain,UPSServices,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\Domain\UPSServices.cs,GetServiceId,Cyclomatic complexity of the method is 50
Complex Method,Nop.Plugin.Shipping.UPS.Controllers,ShippingUPSController,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\Controllers\ShippingUPSController.cs,Configure,Cyclomatic complexity of the method is 11
Long Parameter List,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,UPSComputationMethod,The method has 10 parameters.
Long Parameter List,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,CreateRequest,The method has 7 parameters.
Long Identifier,Nop.Plugin.Shipping.UPS.Controllers,ShippingUPSController,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\Controllers\ShippingUPSController.cs,Configure,The length of the parameter carrierServicesOfferedDomestic is 30.
Long Identifier,Nop.Plugin.Shipping.UPS.Controllers,ShippingUPSController,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\Controllers\ShippingUPSController.cs,Configure,The length of the parameter carrierServicesOfferedDomestic is 30.
Long Identifier,Nop.Plugin.Shipping.UPS.Controllers,ShippingUPSController,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\Controllers\ShippingUPSController.cs,Configure,The length of the parameter carrierServicesDomesticSelectedCount is 36.
Long Statement,Nop.Plugin.Shipping.UPS,UPSShipmentTracker,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSShipmentTracker.cs,GetShipmentEvents,The length of the statement  "		result.AddRange (trackResponse.Shipment.SelectMany (c => c.Package [0].Activity.Select (x => ToStatusEvent (x))).ToList ()); " is 124.
Long Statement,Nop.Plugin.Shipping.UPS,UPSShipmentTracker,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSShipmentTracker.cs,GetShipmentEvents,The length of the statement  "		_logger.Error (string.Format ("Error while getting UPS shipment tracking info - {0}"' trackingNumber)' new Exception (sb.ToString ())); " is 135.
Long Statement,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,CreateRequest,The length of the statement  "		throw new NopException (string.Format ("UPS shipping service. Could not load \"{0}\" measure weight"' MEASUREWEIGHTSYSTEMKEYWORD)); " is 131.
Long Statement,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,CreateRequest,The length of the statement  "		throw new NopException (string.Format ("UPS shipping service. Could not load \"{0}\" measure dimension"' MEASUREDIMENSIONSYSTEMKEYWORD)); " is 137.
Long Statement,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,CreateRequest,The length of the statement  "	int length = Convert.ToInt32 (Math.Ceiling (_measureService.ConvertFromPrimaryMeasureDimension (getShippingOptionRequest.GetTotalLength ()' usedMeasureDimension))); " is 164.
Long Statement,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,CreateRequest,The length of the statement  "	int height = Convert.ToInt32 (Math.Ceiling (_measureService.ConvertFromPrimaryMeasureDimension (getShippingOptionRequest.GetTotalHeight ()' usedMeasureDimension))); " is 164.
Long Statement,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,CreateRequest,The length of the statement  "	int width = Convert.ToInt32 (Math.Ceiling (_measureService.ConvertFromPrimaryMeasureDimension (getShippingOptionRequest.GetTotalWidth ()' usedMeasureDimension))); " is 162.
Long Statement,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,CreateRequest,The length of the statement  "	int weight = Convert.ToInt32 (Math.Ceiling (_measureService.ConvertFromPrimaryMeasureWeight (_shippingService.GetShoppingCartTotalWeight (getShippingOptionRequest.Items)' usedMeasureWeight))); " is 192.
Long Statement,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,CreateRequest,The length of the statement  "	_orderTotalCalculationService.GetShoppingCartSubTotal (getShippingOptionRequest.Items' out orderSubTotalDiscountAmount' out orderSubTotalAppliedDiscount' out subTotalWithoutDiscountBase' out subTotalWithDiscountBase); " is 217.
Long Statement,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,CreateRequest,The length of the statement  "			sb.AppendFormat ("<CurrencyCode>{0}</CurrencyCode>"' _currencyService.GetCurrencyById (_currencySettings.PrimaryStoreCurrencyId).CurrencyCode); " is 143.
Long Statement,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,CreateRequest,The length of the statement  "				sb.AppendFormat ("<CurrencyCode>{0}</CurrencyCode>"' _currencyService.GetCurrencyById (_currencySettings.PrimaryStoreCurrencyId).CurrencyCode); " is 143.
Long Statement,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,ParseResponse,The length of the statement  "						if (((tr.Name == "RatedShipment") && (tr.NodeType == XmlNodeType.EndElement)) || ((tr.Name == "RatedPackage") && (tr.NodeType == XmlNodeType.Element))) { " is 153.
Long Statement,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,GetShippingOptions,The length of the statement  "	string requestString = CreateRequest (_upsSettings.AccessKey' _upsSettings.Username' _upsSettings.Password' getShippingOptionRequest' _upsSettings.CustomerClassification' _upsSettings.PickupType' _upsSettings.PackagingType); " is 224.
Long Statement,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,Install,The length of the statement  "	this.AddOrUpdatePluginLocaleResource ("Plugins.Shipping.UPS.Fields.AdditionalHandlingCharge"' "Additional handling charge"); " is 124.
Long Statement,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,Install,The length of the statement  "	this.AddOrUpdatePluginLocaleResource ("Plugins.Shipping.UPS.Fields.AdditionalHandlingCharge.Hint"' "Enter additional handling fee to charge your customers."); " is 158.
Long Statement,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,Install,The length of the statement  "	this.AddOrUpdatePluginLocaleResource ("Plugins.Shipping.UPS.Fields.CustomerClassification"' "UPS Customer Classification"); " is 123.
Long Statement,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,Install,The length of the statement  "	this.AddOrUpdatePluginLocaleResource ("Plugins.Shipping.UPS.Fields.CustomerClassification.Hint"' "Choose customer classification."); " is 132.
Long Statement,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,Install,The length of the statement  "	this.AddOrUpdatePluginLocaleResource ("Plugins.Shipping.UPS.Fields.DefaultShippedFromCountry.Hint"' "Specify origin country."); " is 127.
Long Statement,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,Install,The length of the statement  "	this.AddOrUpdatePluginLocaleResource ("Plugins.Shipping.UPS.Fields.DefaultShippedFromZipPostalCode"' "Shipped from zip"); " is 121.
Long Statement,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,Install,The length of the statement  "	this.AddOrUpdatePluginLocaleResource ("Plugins.Shipping.UPS.Fields.DefaultShippedFromZipPostalCode.Hint"' "Specify origin zip code."); " is 134.
Long Statement,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,Install,The length of the statement  "	this.AddOrUpdatePluginLocaleResource ("Plugins.Shipping.UPS.Fields.AvailableCarrierServices.Hint"' "Select the services you want to offer to customers."); " is 154.
Long Statement,Nop.Plugin.Shipping.UPS.Controllers,ShippingUPSController,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\Controllers\ShippingUPSController.cs,Configure,The length of the statement  "	_upsSettings.CustomerClassification = (UPSCustomerClassification)Enum.Parse (typeof(UPSCustomerClassification)' model.CustomerClassification); " is 142.
Long Statement,Nop.Plugin.Shipping.UPS.track,TrackService,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\Web References\track\Reference.cs,OnProcessTrackOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,Nop.Plugin.Shipping.UPS.track,TrackService,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\Web References\track\Reference.cs,OnProcessTrackOperationCompleted,The length of the statement  "		this.ProcessTrackCompleted (this' new ProcessTrackCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 153.
Long Statement,Nop.Plugin.Shipping.UPS.track,TrackService,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\Web References\track\Reference.cs,IsLocalFileSystemWebService,The length of the statement  "	if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) { " is 123.
Complex Conditional,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,ParseResponse,The conditional expression  "((tr.Name == "RatedShipment") && (tr.NodeType == XmlNodeType.EndElement)) || ((tr.Name == "RatedPackage") && (tr.NodeType == XmlNodeType.Element))"  is complex.
Magic Number,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,CreateRequest,The following statement contains a magic number: if ((!IsPackageTooHeavy (weight)) && (!IsPackageTooLarge (length' height' width))) {  	sb.Append ("<Package>");  	sb.Append ("<PackagingType>");  	sb.AppendFormat ("<Code>{0}</Code>"' GetPackagingTypeCode (packagingType));  	sb.Append ("</PackagingType>");  	sb.Append ("<Dimensions>");  	sb.AppendFormat ("<Length>{0}</Length>"' length);  	sb.AppendFormat ("<Width>{0}</Width>"' width);  	sb.AppendFormat ("<Height>{0}</Height>"' height);  	sb.Append ("</Dimensions>");  	sb.Append ("<PackageWeight>");  	sb.AppendFormat ("<Weight>{0}</Weight>"' weight);  	sb.Append ("</PackageWeight>");  	if (_upsSettings.InsurePackage) {  		//The maximum declared amount per package: 50000 USD.  		int packageInsurancePrice = Convert.ToInt32 (subTotalWithDiscountBase);  		sb.Append ("<PackageServiceOptions>");  		sb.Append ("<InsuredValue>");  		sb.AppendFormat ("<CurrencyCode>{0}</CurrencyCode>"' _currencyService.GetCurrencyById (_currencySettings.PrimaryStoreCurrencyId).CurrencyCode);  		sb.AppendFormat ("<MonetaryValue>{0}</MonetaryValue>"' packageInsurancePrice);  		sb.Append ("</InsuredValue>");  		sb.Append ("</PackageServiceOptions>");  	}  	sb.Append ("</Package>");  }  else {  	int totalPackages = 1;  	int totalPackagesDims = 1;  	int totalPackagesWeights = 1;  	if (IsPackageTooHeavy (weight)) {  		totalPackagesWeights = Convert.ToInt32 (Math.Ceiling ((decimal)weight / (decimal)MAXPACKAGEWEIGHT));  	}  	if (IsPackageTooLarge (length' height' width)) {  		totalPackagesDims = Convert.ToInt32 (Math.Ceiling ((decimal)TotalPackageSize (length' height' width) / (decimal)108));  	}  	totalPackages = totalPackagesDims > totalPackagesWeights ? totalPackagesDims : totalPackagesWeights;  	if (totalPackages == 0)  		totalPackages = 1;  	int weight2 = weight / totalPackages;  	int height2 = height / totalPackages;  	int width2 = width / totalPackages;  	int length2 = length / totalPackages;  	if (weight2 < 1)  		weight2 = 1;  	if (height2 < 1)  		height2 = 1;  	if (width2 < 1)  		width2 = 1;  	if (length2 < 1)  		length2 = 1;  	//The maximum declared amount per package: 50000 USD.  	int packageInsurancePrice = Convert.ToInt32 (subTotalWithDiscountBase / totalPackages);  	for (int i = 0; i < totalPackages; i++) {  		sb.Append ("<Package>");  		sb.Append ("<PackagingType>");  		sb.AppendFormat ("<Code>{0}</Code>"' GetPackagingTypeCode (packagingType));  		sb.Append ("</PackagingType>");  		sb.Append ("<Dimensions>");  		sb.AppendFormat ("<Length>{0}</Length>"' length2);  		sb.AppendFormat ("<Width>{0}</Width>"' width2);  		sb.AppendFormat ("<Height>{0}</Height>"' height2);  		sb.Append ("</Dimensions>");  		sb.Append ("<PackageWeight>");  		sb.AppendFormat ("<Weight>{0}</Weight>"' weight2);  		sb.Append ("</PackageWeight>");  		if (_upsSettings.InsurePackage) {  			sb.Append ("<PackageServiceOptions>");  			sb.Append ("<InsuredValue>");  			sb.AppendFormat ("<CurrencyCode>{0}</CurrencyCode>"' _currencyService.GetCurrencyById (_currencySettings.PrimaryStoreCurrencyId).CurrencyCode);  			sb.AppendFormat ("<MonetaryValue>{0}</MonetaryValue>"' packageInsurancePrice);  			sb.Append ("</InsuredValue>");  			sb.Append ("</PackageServiceOptions>");  		}  		sb.Append ("</Package>");  	}  }  
Magic Number,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,CreateRequest,The following statement contains a magic number: if (IsPackageTooLarge (length' height' width)) {  	totalPackagesDims = Convert.ToInt32 (Math.Ceiling ((decimal)TotalPackageSize (length' height' width) / (decimal)108));  }  
Magic Number,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,CreateRequest,The following statement contains a magic number: totalPackagesDims = Convert.ToInt32 (Math.Ceiling ((decimal)TotalPackageSize (length' height' width) / (decimal)108));  
Magic Number,Nop.Plugin.Shipping.UPS,UPSComputationMethod,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSComputationMethod.cs,IsPackageTooLarge,The following statement contains a magic number: if (total > 165)  	return true;  else  	return false;  
Magic Number,Nop.Plugin.Shipping.UPS.track,TrackService,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\Web References\track\Reference.cs,IsLocalFileSystemWebService,The following statement contains a magic number: if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) {  	return true;  }  
Missing Default,Nop.Plugin.Shipping.UPS,UPSShipmentTracker,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.Shipping.UPS\UPSShipmentTracker.cs,ToStatusEvent,The following switch statement is missing a default case: switch (activity.Status.Type) {  case "I":  	if (activity.Status.Code == "DP") {  		ev.EventName = _localizationService.GetResource ("Plugins.Shipping.UPS.Tracker.Departed");  	}  	else if (activity.Status.Code == "EP") {  		ev.EventName = _localizationService.GetResource ("Plugins.Shipping.UPS.Tracker.ExportScanned");  	}  	else if (activity.Status.Code == "OR") {  		ev.EventName = _localizationService.GetResource ("Plugins.Shipping.UPS.Tracker.OriginScanned");  	}  	else {  		ev.EventName = _localizationService.GetResource ("Plugins.Shipping.UPS.Tracker.Arrived");  	}  	break;  case "X":  	ev.EventName = _localizationService.GetResource ("Plugins.Shipping.UPS.Tracker.NotDelivered");  	break;  case "M":  	ev.EventName = _localizationService.GetResource ("Plugins.Shipping.UPS.Tracker.Booked");  	break;  case "D":  	ev.EventName = _localizationService.GetResource ("Plugins.Shipping.UPS.Tracker.Delivered");  	break;  }  
