Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Nop.Plugin.ExchangeRate.McExchange,McExchangeRateProvider,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.ExchangeRate.McExchange\McExchangeRateProvider.cs,GetCurrencyLiveRates,Cyclomatic complexity of the method is 22
Long Statement,Nop.Plugin.ExchangeRate.McExchange,McExchangeRateProvider,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.ExchangeRate.McExchange\McExchangeRateProvider.cs,GetCurrencyLiveRates,The length of the statement  "                                  <description xmlns:cf="http://www.microsoft.com/schemas/rss/core/2005" cf:type="html">1 New Zealand Dollar = 1.84499 Arab Emirates Dirham</description>" is 151.
Magic Number,Nop.Plugin.ExchangeRate.McExchange,McExchangeRateProvider,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.ExchangeRate.McExchange\McExchangeRateProvider.cs,GetCurrencyLiveRates,The following statement contains a magic number: using (var response = request.GetResponse ()) {  	var xmlDoc = new XmlDocument ();  	xmlDoc.Load (response.GetResponseStream ());  	var nsmgr = new XmlNamespaceManager (xmlDoc.NameTable);  	nsmgr.AddNamespace ("atom"' "http://www.w3.org/2005/Atom");  	nsmgr.AddNamespace ("cf"' "http://www.microsoft.com/schemas/rss/core/2005");  	nsmgr.AddNamespace ("cfi"' "http://www.microsoft.com/schemas/rss/core/2005/internal");  	foreach (XmlNode node in xmlDoc.DocumentElement.FirstChild.ChildNodes) {  		if (node.Name == "item") {  			/*                                 <item>                                   <title xmlns:cf="http://www.microsoft.com/schemas/rss/core/2005" cf:type="text">AED/NZD</title>                                   <link>http://themoneyconverter.com/NZD/AED.aspx</link>                                   <guid>http://themoneyconverter.com/NZD/AED.aspx</guid>                                   <pubDate>Fri' 20 Feb 2009 08:01:41 GMT</pubDate>                                   <atom:published xmlns:atom="http://www.w3.org/2005/Atom">2009-02-20T08:01:41Z</atom:published>                                   <atom:updated xmlns:atom="http://www.w3.org/2005/Atom">2009-02-20T08:01:41Z</atom:updated>                                   <description xmlns:cf="http://www.microsoft.com/schemas/rss/core/2005" cf:type="html">1 New Zealand Dollar = 1.84499 Arab Emirates Dirham</description>                                   <category>Middle-East</category>                                   <cfi:id>32</cfi:id>                                   <cfi:effectiveId>1074571199</cfi:effectiveId>                                   <cfi:read>true</cfi:read>                                   <cfi:downloadurl>http://themoneyconverter.com/NZD/rss.xml</cfi:downloadurl>                                   <cfi:lastdownloadtime>2009-02-20T08:05:27.168Z</cfi:lastdownloadtime>                                 </item>                         */try {  				var rate = new Core.Domain.Directory.ExchangeRate ();  				foreach (XmlNode detailNode in node.ChildNodes) {  					switch (detailNode.Name) {  					case "title":  						rate.CurrencyCode = detailNode.InnerText.Substring (0' 3);  						break;  					case "pubDate":  						rate.UpdatedOn = DateTime.Parse (detailNode.InnerText' CultureInfo.InvariantCulture);  						break;  					case "description":  						string description = detailNode.InnerText;  						int x = description.IndexOf ('=');  						int y = description.IndexOf (' '' x + 2);  						//          1         2         3         4  						//01234567890123456789012345678901234567890  						// 1 New Zealand Dollar = 0.78815 Australian Dollar  						// x = 21  						// y = 30  						string rateText = description.Substring (x + 1' y - x - 1).Trim ();  						rate.Rate = decimal.Parse (rateText' CultureInfo.InvariantCulture);  						break;  					default:  						break;  					}  				}  				// Update the Rate in the collection if its already in there  				if (rate.CurrencyCode != null) {  					exchangeRates.Add (rate);  				}  			}  			catch (Exception exc) {  				_logger.Warning (string.Format ("Error parsing currency rates (MC): {0}"' exc.Message)' exc);  			}  		}  		// if node is an item  	}  	// foreach child node under <channel>  }  
Magic Number,Nop.Plugin.ExchangeRate.McExchange,McExchangeRateProvider,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.ExchangeRate.McExchange\McExchangeRateProvider.cs,GetCurrencyLiveRates,The following statement contains a magic number: using (var response = request.GetResponse ()) {  	var xmlDoc = new XmlDocument ();  	xmlDoc.Load (response.GetResponseStream ());  	var nsmgr = new XmlNamespaceManager (xmlDoc.NameTable);  	nsmgr.AddNamespace ("atom"' "http://www.w3.org/2005/Atom");  	nsmgr.AddNamespace ("cf"' "http://www.microsoft.com/schemas/rss/core/2005");  	nsmgr.AddNamespace ("cfi"' "http://www.microsoft.com/schemas/rss/core/2005/internal");  	foreach (XmlNode node in xmlDoc.DocumentElement.FirstChild.ChildNodes) {  		if (node.Name == "item") {  			/*                                 <item>                                   <title xmlns:cf="http://www.microsoft.com/schemas/rss/core/2005" cf:type="text">AED/NZD</title>                                   <link>http://themoneyconverter.com/NZD/AED.aspx</link>                                   <guid>http://themoneyconverter.com/NZD/AED.aspx</guid>                                   <pubDate>Fri' 20 Feb 2009 08:01:41 GMT</pubDate>                                   <atom:published xmlns:atom="http://www.w3.org/2005/Atom">2009-02-20T08:01:41Z</atom:published>                                   <atom:updated xmlns:atom="http://www.w3.org/2005/Atom">2009-02-20T08:01:41Z</atom:updated>                                   <description xmlns:cf="http://www.microsoft.com/schemas/rss/core/2005" cf:type="html">1 New Zealand Dollar = 1.84499 Arab Emirates Dirham</description>                                   <category>Middle-East</category>                                   <cfi:id>32</cfi:id>                                   <cfi:effectiveId>1074571199</cfi:effectiveId>                                   <cfi:read>true</cfi:read>                                   <cfi:downloadurl>http://themoneyconverter.com/NZD/rss.xml</cfi:downloadurl>                                   <cfi:lastdownloadtime>2009-02-20T08:05:27.168Z</cfi:lastdownloadtime>                                 </item>                         */try {  				var rate = new Core.Domain.Directory.ExchangeRate ();  				foreach (XmlNode detailNode in node.ChildNodes) {  					switch (detailNode.Name) {  					case "title":  						rate.CurrencyCode = detailNode.InnerText.Substring (0' 3);  						break;  					case "pubDate":  						rate.UpdatedOn = DateTime.Parse (detailNode.InnerText' CultureInfo.InvariantCulture);  						break;  					case "description":  						string description = detailNode.InnerText;  						int x = description.IndexOf ('=');  						int y = description.IndexOf (' '' x + 2);  						//          1         2         3         4  						//01234567890123456789012345678901234567890  						// 1 New Zealand Dollar = 0.78815 Australian Dollar  						// x = 21  						// y = 30  						string rateText = description.Substring (x + 1' y - x - 1).Trim ();  						rate.Rate = decimal.Parse (rateText' CultureInfo.InvariantCulture);  						break;  					default:  						break;  					}  				}  				// Update the Rate in the collection if its already in there  				if (rate.CurrencyCode != null) {  					exchangeRates.Add (rate);  				}  			}  			catch (Exception exc) {  				_logger.Warning (string.Format ("Error parsing currency rates (MC): {0}"' exc.Message)' exc);  			}  		}  		// if node is an item  	}  	// foreach child node under <channel>  }  
Magic Number,Nop.Plugin.ExchangeRate.McExchange,McExchangeRateProvider,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.ExchangeRate.McExchange\McExchangeRateProvider.cs,GetCurrencyLiveRates,The following statement contains a magic number: foreach (XmlNode node in xmlDoc.DocumentElement.FirstChild.ChildNodes) {  	if (node.Name == "item") {  		/*                                 <item>                                   <title xmlns:cf="http://www.microsoft.com/schemas/rss/core/2005" cf:type="text">AED/NZD</title>                                   <link>http://themoneyconverter.com/NZD/AED.aspx</link>                                   <guid>http://themoneyconverter.com/NZD/AED.aspx</guid>                                   <pubDate>Fri' 20 Feb 2009 08:01:41 GMT</pubDate>                                   <atom:published xmlns:atom="http://www.w3.org/2005/Atom">2009-02-20T08:01:41Z</atom:published>                                   <atom:updated xmlns:atom="http://www.w3.org/2005/Atom">2009-02-20T08:01:41Z</atom:updated>                                   <description xmlns:cf="http://www.microsoft.com/schemas/rss/core/2005" cf:type="html">1 New Zealand Dollar = 1.84499 Arab Emirates Dirham</description>                                   <category>Middle-East</category>                                   <cfi:id>32</cfi:id>                                   <cfi:effectiveId>1074571199</cfi:effectiveId>                                   <cfi:read>true</cfi:read>                                   <cfi:downloadurl>http://themoneyconverter.com/NZD/rss.xml</cfi:downloadurl>                                   <cfi:lastdownloadtime>2009-02-20T08:05:27.168Z</cfi:lastdownloadtime>                                 </item>                         */try {  			var rate = new Core.Domain.Directory.ExchangeRate ();  			foreach (XmlNode detailNode in node.ChildNodes) {  				switch (detailNode.Name) {  				case "title":  					rate.CurrencyCode = detailNode.InnerText.Substring (0' 3);  					break;  				case "pubDate":  					rate.UpdatedOn = DateTime.Parse (detailNode.InnerText' CultureInfo.InvariantCulture);  					break;  				case "description":  					string description = detailNode.InnerText;  					int x = description.IndexOf ('=');  					int y = description.IndexOf (' '' x + 2);  					//          1         2         3         4  					//01234567890123456789012345678901234567890  					// 1 New Zealand Dollar = 0.78815 Australian Dollar  					// x = 21  					// y = 30  					string rateText = description.Substring (x + 1' y - x - 1).Trim ();  					rate.Rate = decimal.Parse (rateText' CultureInfo.InvariantCulture);  					break;  				default:  					break;  				}  			}  			// Update the Rate in the collection if its already in there  			if (rate.CurrencyCode != null) {  				exchangeRates.Add (rate);  			}  		}  		catch (Exception exc) {  			_logger.Warning (string.Format ("Error parsing currency rates (MC): {0}"' exc.Message)' exc);  		}  	}  	// if node is an item  }  
Magic Number,Nop.Plugin.ExchangeRate.McExchange,McExchangeRateProvider,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.ExchangeRate.McExchange\McExchangeRateProvider.cs,GetCurrencyLiveRates,The following statement contains a magic number: foreach (XmlNode node in xmlDoc.DocumentElement.FirstChild.ChildNodes) {  	if (node.Name == "item") {  		/*                                 <item>                                   <title xmlns:cf="http://www.microsoft.com/schemas/rss/core/2005" cf:type="text">AED/NZD</title>                                   <link>http://themoneyconverter.com/NZD/AED.aspx</link>                                   <guid>http://themoneyconverter.com/NZD/AED.aspx</guid>                                   <pubDate>Fri' 20 Feb 2009 08:01:41 GMT</pubDate>                                   <atom:published xmlns:atom="http://www.w3.org/2005/Atom">2009-02-20T08:01:41Z</atom:published>                                   <atom:updated xmlns:atom="http://www.w3.org/2005/Atom">2009-02-20T08:01:41Z</atom:updated>                                   <description xmlns:cf="http://www.microsoft.com/schemas/rss/core/2005" cf:type="html">1 New Zealand Dollar = 1.84499 Arab Emirates Dirham</description>                                   <category>Middle-East</category>                                   <cfi:id>32</cfi:id>                                   <cfi:effectiveId>1074571199</cfi:effectiveId>                                   <cfi:read>true</cfi:read>                                   <cfi:downloadurl>http://themoneyconverter.com/NZD/rss.xml</cfi:downloadurl>                                   <cfi:lastdownloadtime>2009-02-20T08:05:27.168Z</cfi:lastdownloadtime>                                 </item>                         */try {  			var rate = new Core.Domain.Directory.ExchangeRate ();  			foreach (XmlNode detailNode in node.ChildNodes) {  				switch (detailNode.Name) {  				case "title":  					rate.CurrencyCode = detailNode.InnerText.Substring (0' 3);  					break;  				case "pubDate":  					rate.UpdatedOn = DateTime.Parse (detailNode.InnerText' CultureInfo.InvariantCulture);  					break;  				case "description":  					string description = detailNode.InnerText;  					int x = description.IndexOf ('=');  					int y = description.IndexOf (' '' x + 2);  					//          1         2         3         4  					//01234567890123456789012345678901234567890  					// 1 New Zealand Dollar = 0.78815 Australian Dollar  					// x = 21  					// y = 30  					string rateText = description.Substring (x + 1' y - x - 1).Trim ();  					rate.Rate = decimal.Parse (rateText' CultureInfo.InvariantCulture);  					break;  				default:  					break;  				}  			}  			// Update the Rate in the collection if its already in there  			if (rate.CurrencyCode != null) {  				exchangeRates.Add (rate);  			}  		}  		catch (Exception exc) {  			_logger.Warning (string.Format ("Error parsing currency rates (MC): {0}"' exc.Message)' exc);  		}  	}  	// if node is an item  }  
Magic Number,Nop.Plugin.ExchangeRate.McExchange,McExchangeRateProvider,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.ExchangeRate.McExchange\McExchangeRateProvider.cs,GetCurrencyLiveRates,The following statement contains a magic number: if (node.Name == "item") {  	/*                                 <item>                                   <title xmlns:cf="http://www.microsoft.com/schemas/rss/core/2005" cf:type="text">AED/NZD</title>                                   <link>http://themoneyconverter.com/NZD/AED.aspx</link>                                   <guid>http://themoneyconverter.com/NZD/AED.aspx</guid>                                   <pubDate>Fri' 20 Feb 2009 08:01:41 GMT</pubDate>                                   <atom:published xmlns:atom="http://www.w3.org/2005/Atom">2009-02-20T08:01:41Z</atom:published>                                   <atom:updated xmlns:atom="http://www.w3.org/2005/Atom">2009-02-20T08:01:41Z</atom:updated>                                   <description xmlns:cf="http://www.microsoft.com/schemas/rss/core/2005" cf:type="html">1 New Zealand Dollar = 1.84499 Arab Emirates Dirham</description>                                   <category>Middle-East</category>                                   <cfi:id>32</cfi:id>                                   <cfi:effectiveId>1074571199</cfi:effectiveId>                                   <cfi:read>true</cfi:read>                                   <cfi:downloadurl>http://themoneyconverter.com/NZD/rss.xml</cfi:downloadurl>                                   <cfi:lastdownloadtime>2009-02-20T08:05:27.168Z</cfi:lastdownloadtime>                                 </item>                         */try {  		var rate = new Core.Domain.Directory.ExchangeRate ();  		foreach (XmlNode detailNode in node.ChildNodes) {  			switch (detailNode.Name) {  			case "title":  				rate.CurrencyCode = detailNode.InnerText.Substring (0' 3);  				break;  			case "pubDate":  				rate.UpdatedOn = DateTime.Parse (detailNode.InnerText' CultureInfo.InvariantCulture);  				break;  			case "description":  				string description = detailNode.InnerText;  				int x = description.IndexOf ('=');  				int y = description.IndexOf (' '' x + 2);  				//          1         2         3         4  				//01234567890123456789012345678901234567890  				// 1 New Zealand Dollar = 0.78815 Australian Dollar  				// x = 21  				// y = 30  				string rateText = description.Substring (x + 1' y - x - 1).Trim ();  				rate.Rate = decimal.Parse (rateText' CultureInfo.InvariantCulture);  				break;  			default:  				break;  			}  		}  		// Update the Rate in the collection if its already in there  		if (rate.CurrencyCode != null) {  			exchangeRates.Add (rate);  		}  	}  	catch (Exception exc) {  		_logger.Warning (string.Format ("Error parsing currency rates (MC): {0}"' exc.Message)' exc);  	}  }  
Magic Number,Nop.Plugin.ExchangeRate.McExchange,McExchangeRateProvider,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.ExchangeRate.McExchange\McExchangeRateProvider.cs,GetCurrencyLiveRates,The following statement contains a magic number: if (node.Name == "item") {  	/*                                 <item>                                   <title xmlns:cf="http://www.microsoft.com/schemas/rss/core/2005" cf:type="text">AED/NZD</title>                                   <link>http://themoneyconverter.com/NZD/AED.aspx</link>                                   <guid>http://themoneyconverter.com/NZD/AED.aspx</guid>                                   <pubDate>Fri' 20 Feb 2009 08:01:41 GMT</pubDate>                                   <atom:published xmlns:atom="http://www.w3.org/2005/Atom">2009-02-20T08:01:41Z</atom:published>                                   <atom:updated xmlns:atom="http://www.w3.org/2005/Atom">2009-02-20T08:01:41Z</atom:updated>                                   <description xmlns:cf="http://www.microsoft.com/schemas/rss/core/2005" cf:type="html">1 New Zealand Dollar = 1.84499 Arab Emirates Dirham</description>                                   <category>Middle-East</category>                                   <cfi:id>32</cfi:id>                                   <cfi:effectiveId>1074571199</cfi:effectiveId>                                   <cfi:read>true</cfi:read>                                   <cfi:downloadurl>http://themoneyconverter.com/NZD/rss.xml</cfi:downloadurl>                                   <cfi:lastdownloadtime>2009-02-20T08:05:27.168Z</cfi:lastdownloadtime>                                 </item>                         */try {  		var rate = new Core.Domain.Directory.ExchangeRate ();  		foreach (XmlNode detailNode in node.ChildNodes) {  			switch (detailNode.Name) {  			case "title":  				rate.CurrencyCode = detailNode.InnerText.Substring (0' 3);  				break;  			case "pubDate":  				rate.UpdatedOn = DateTime.Parse (detailNode.InnerText' CultureInfo.InvariantCulture);  				break;  			case "description":  				string description = detailNode.InnerText;  				int x = description.IndexOf ('=');  				int y = description.IndexOf (' '' x + 2);  				//          1         2         3         4  				//01234567890123456789012345678901234567890  				// 1 New Zealand Dollar = 0.78815 Australian Dollar  				// x = 21  				// y = 30  				string rateText = description.Substring (x + 1' y - x - 1).Trim ();  				rate.Rate = decimal.Parse (rateText' CultureInfo.InvariantCulture);  				break;  			default:  				break;  			}  		}  		// Update the Rate in the collection if its already in there  		if (rate.CurrencyCode != null) {  			exchangeRates.Add (rate);  		}  	}  	catch (Exception exc) {  		_logger.Warning (string.Format ("Error parsing currency rates (MC): {0}"' exc.Message)' exc);  	}  }  
Magic Number,Nop.Plugin.ExchangeRate.McExchange,McExchangeRateProvider,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.ExchangeRate.McExchange\McExchangeRateProvider.cs,GetCurrencyLiveRates,The following statement contains a magic number: try {  	var rate = new Core.Domain.Directory.ExchangeRate ();  	foreach (XmlNode detailNode in node.ChildNodes) {  		switch (detailNode.Name) {  		case "title":  			rate.CurrencyCode = detailNode.InnerText.Substring (0' 3);  			break;  		case "pubDate":  			rate.UpdatedOn = DateTime.Parse (detailNode.InnerText' CultureInfo.InvariantCulture);  			break;  		case "description":  			string description = detailNode.InnerText;  			int x = description.IndexOf ('=');  			int y = description.IndexOf (' '' x + 2);  			//          1         2         3         4  			//01234567890123456789012345678901234567890  			// 1 New Zealand Dollar = 0.78815 Australian Dollar  			// x = 21  			// y = 30  			string rateText = description.Substring (x + 1' y - x - 1).Trim ();  			rate.Rate = decimal.Parse (rateText' CultureInfo.InvariantCulture);  			break;  		default:  			break;  		}  	}  	// Update the Rate in the collection if its already in there  	if (rate.CurrencyCode != null) {  		exchangeRates.Add (rate);  	}  }  catch (Exception exc) {  	_logger.Warning (string.Format ("Error parsing currency rates (MC): {0}"' exc.Message)' exc);  }  
Magic Number,Nop.Plugin.ExchangeRate.McExchange,McExchangeRateProvider,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.ExchangeRate.McExchange\McExchangeRateProvider.cs,GetCurrencyLiveRates,The following statement contains a magic number: try {  	var rate = new Core.Domain.Directory.ExchangeRate ();  	foreach (XmlNode detailNode in node.ChildNodes) {  		switch (detailNode.Name) {  		case "title":  			rate.CurrencyCode = detailNode.InnerText.Substring (0' 3);  			break;  		case "pubDate":  			rate.UpdatedOn = DateTime.Parse (detailNode.InnerText' CultureInfo.InvariantCulture);  			break;  		case "description":  			string description = detailNode.InnerText;  			int x = description.IndexOf ('=');  			int y = description.IndexOf (' '' x + 2);  			//          1         2         3         4  			//01234567890123456789012345678901234567890  			// 1 New Zealand Dollar = 0.78815 Australian Dollar  			// x = 21  			// y = 30  			string rateText = description.Substring (x + 1' y - x - 1).Trim ();  			rate.Rate = decimal.Parse (rateText' CultureInfo.InvariantCulture);  			break;  		default:  			break;  		}  	}  	// Update the Rate in the collection if its already in there  	if (rate.CurrencyCode != null) {  		exchangeRates.Add (rate);  	}  }  catch (Exception exc) {  	_logger.Warning (string.Format ("Error parsing currency rates (MC): {0}"' exc.Message)' exc);  }  
Magic Number,Nop.Plugin.ExchangeRate.McExchange,McExchangeRateProvider,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.ExchangeRate.McExchange\McExchangeRateProvider.cs,GetCurrencyLiveRates,The following statement contains a magic number: foreach (XmlNode detailNode in node.ChildNodes) {  	switch (detailNode.Name) {  	case "title":  		rate.CurrencyCode = detailNode.InnerText.Substring (0' 3);  		break;  	case "pubDate":  		rate.UpdatedOn = DateTime.Parse (detailNode.InnerText' CultureInfo.InvariantCulture);  		break;  	case "description":  		string description = detailNode.InnerText;  		int x = description.IndexOf ('=');  		int y = description.IndexOf (' '' x + 2);  		//          1         2         3         4  		//01234567890123456789012345678901234567890  		// 1 New Zealand Dollar = 0.78815 Australian Dollar  		// x = 21  		// y = 30  		string rateText = description.Substring (x + 1' y - x - 1).Trim ();  		rate.Rate = decimal.Parse (rateText' CultureInfo.InvariantCulture);  		break;  	default:  		break;  	}  }  
Magic Number,Nop.Plugin.ExchangeRate.McExchange,McExchangeRateProvider,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.ExchangeRate.McExchange\McExchangeRateProvider.cs,GetCurrencyLiveRates,The following statement contains a magic number: foreach (XmlNode detailNode in node.ChildNodes) {  	switch (detailNode.Name) {  	case "title":  		rate.CurrencyCode = detailNode.InnerText.Substring (0' 3);  		break;  	case "pubDate":  		rate.UpdatedOn = DateTime.Parse (detailNode.InnerText' CultureInfo.InvariantCulture);  		break;  	case "description":  		string description = detailNode.InnerText;  		int x = description.IndexOf ('=');  		int y = description.IndexOf (' '' x + 2);  		//          1         2         3         4  		//01234567890123456789012345678901234567890  		// 1 New Zealand Dollar = 0.78815 Australian Dollar  		// x = 21  		// y = 30  		string rateText = description.Substring (x + 1' y - x - 1).Trim ();  		rate.Rate = decimal.Parse (rateText' CultureInfo.InvariantCulture);  		break;  	default:  		break;  	}  }  
Magic Number,Nop.Plugin.ExchangeRate.McExchange,McExchangeRateProvider,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.ExchangeRate.McExchange\McExchangeRateProvider.cs,GetCurrencyLiveRates,The following statement contains a magic number: switch (detailNode.Name) {  case "title":  	rate.CurrencyCode = detailNode.InnerText.Substring (0' 3);  	break;  case "pubDate":  	rate.UpdatedOn = DateTime.Parse (detailNode.InnerText' CultureInfo.InvariantCulture);  	break;  case "description":  	string description = detailNode.InnerText;  	int x = description.IndexOf ('=');  	int y = description.IndexOf (' '' x + 2);  	//          1         2         3         4  	//01234567890123456789012345678901234567890  	// 1 New Zealand Dollar = 0.78815 Australian Dollar  	// x = 21  	// y = 30  	string rateText = description.Substring (x + 1' y - x - 1).Trim ();  	rate.Rate = decimal.Parse (rateText' CultureInfo.InvariantCulture);  	break;  default:  	break;  }  
Magic Number,Nop.Plugin.ExchangeRate.McExchange,McExchangeRateProvider,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.ExchangeRate.McExchange\McExchangeRateProvider.cs,GetCurrencyLiveRates,The following statement contains a magic number: switch (detailNode.Name) {  case "title":  	rate.CurrencyCode = detailNode.InnerText.Substring (0' 3);  	break;  case "pubDate":  	rate.UpdatedOn = DateTime.Parse (detailNode.InnerText' CultureInfo.InvariantCulture);  	break;  case "description":  	string description = detailNode.InnerText;  	int x = description.IndexOf ('=');  	int y = description.IndexOf (' '' x + 2);  	//          1         2         3         4  	//01234567890123456789012345678901234567890  	// 1 New Zealand Dollar = 0.78815 Australian Dollar  	// x = 21  	// y = 30  	string rateText = description.Substring (x + 1' y - x - 1).Trim ();  	rate.Rate = decimal.Parse (rateText' CultureInfo.InvariantCulture);  	break;  default:  	break;  }  
Magic Number,Nop.Plugin.ExchangeRate.McExchange,McExchangeRateProvider,C:\repos\gadrianrobert_icontroldirect-ecommerce\Plugins\Nop.Plugin.ExchangeRate.McExchange\McExchangeRateProvider.cs,GetCurrencyLiveRates,The following statement contains a magic number: rate.CurrencyCode = detailNode.InnerText.Substring (0' 3);  
