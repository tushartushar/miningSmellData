Implementation smell,Namespace,Class,File,Method,Description
Complex Method,serpent,Form1,C:\repos\rzymek01_bsk-serpent\Form1.cs,performOperation_Click,Cyclomatic complexity of the method is 13
Complex Method,serpent,Form1,C:\repos\rzymek01_bsk-serpent\Form1.cs,button1_Click_1,Cyclomatic complexity of the method is 8
Complex Method,serpent,Serpent,C:\repos\rzymek01_bsk-serpent\Serpent.cs,encrypt,Cyclomatic complexity of the method is 9
Long Parameter List,serpent,AlgorithmParams,C:\repos\rzymek01_bsk-serpent\AlgorithmParams.cs,AlgorithmParams,The method has 6 parameters.
Long Parameter List,serpent,Form1,C:\repos\rzymek01_bsk-serpent\Form1.cs,encryptFile,The method has 6 parameters.
Long Parameter List,serpent,IAlgorithm,C:\repos\rzymek01_bsk-serpent\IAlgorithm.cs,init,The method has 6 parameters.
Long Parameter List,serpent,Serpent,C:\repos\rzymek01_bsk-serpent\Serpent.cs,init,The method has 6 parameters.
Long Statement,serpent,Form1,C:\repos\rzymek01_bsk-serpent\Form1.cs,encryptFile,The length of the statement  "	XDocument miXML = new XDocument (new XDeclaration ("1.0"' "utf-8"' "yes")' new XElement ("EncryptedFileHeader"' new XElement ("Algorithm"' "SERPENT")' new XElement ("CipherMode"' cipherMode)' //new XElement("BlockSize"' 128)' // jest stały do nie ma potrzeby' żeby go zapisywać " is 277.
Long Statement,serpent,Form1,C:\repos\rzymek01_bsk-serpent\Form1.cs,encryptFile,The length of the statement  "	new XElement ("SegmentSize"' segment)' new XElement ("KeySize"' sessionKeySize)' new XElement ("EncryptedKey"' Convert.ToBase64String (encryptedKey))' new XElement ("IV"' Convert.ToBase64String (iv)))); " is 202.
Long Statement,serpent,Form1,C:\repos\rzymek01_bsk-serpent\Form1.cs,oprogramieToolStripMenuItem_Click,The length of the statement  "	String text = "Program Szyfrowanie plików z użyciem Serpent powstał na zaliczenie projektu" + "przedmiotu Bezpieczeństwo Systemów Komputerowych wykładanym na Politechnice Gdańskiej.\n\n" + "Algorytm Serpent to finalista konkursu AES. Jest wolniejszy' ale bezpieczniejszy od zwycięzcy' " + "tj. algorytmu Rijndael. Serpent operuje blokiem o długości 128 bitów' dopuszcza klucze o długościach" + "128' 192 oraz 256 bitów' wykonuje 32 rundy' działa na zasadzie spn' czyli sieci permutacyjno-przestawieniowej.\n\n" + "W aplikacji można wskazać plik źródłowy i wynikowy' zmienić długość klucza' ustawić jeden z następujących trybów" + "pracy: EBC' CBC' CFB i OFB. Dla dwóch ostatnich można wybrać długość podbloku o wartości wielokrotności 8 w " + "zakresie od 8 do 128 bitów. W programie trzeba też podać hasło' które posłuży do zaszyfrowania klucza sesyjnego " + "i jest wymagane przy deszyfrowaniu.\n\n" + "Biblioteka The Bouncy Castle jest używana do wszystkich operacji kryptograficznych' m.in. do (od)szyfrowania z " + "użyciem algorytmu Serpent' generowania silnie losowego klucza sesyjnego i wektora IV czy obliczania skrótu z " + "hasła podanego przez użytkownika."; " is 1170.
Long Statement,serpent,Serpent,C:\repos\rzymek01_bsk-serpent\Serpent.cs,init,The length of the statement  "		mDstFile = (Encryption ? new FileStream (dstFile' FileMode.OpenOrCreate | FileMode.Append' FileAccess.Write) : File.Create (dstFile)); " is 134.
Magic Number,serpent,Form1,C:\repos\rzymek01_bsk-serpent\Form1.cs,Form1,The following statement contains a magic number: tabControl1.TabPages.RemoveAt (2);  
Magic Number,serpent,Form1,C:\repos\rzymek01_bsk-serpent\Form1.cs,backgroundWorker_DoWork,The following statement contains a magic number: while (bytes > 0 && !encryptWorker.CancellationPending) {  	// "unit work" szyfrowanie fragmentu pliku  	bytes = alg.encrypt (step);  	countBytes += bytes;  	int progress = (int)(countBytes * 100 / length);  	encryptWorker.ReportProgress (progress);  }  
Magic Number,serpent,Form1,C:\repos\rzymek01_bsk-serpent\Form1.cs,decryptFile,The following statement contains a magic number: keySize = keySize >> 3;  
Magic Number,serpent,Form1,C:\repos\rzymek01_bsk-serpent\Form1.cs,getSessionKeyAlg,The following statement contains a magic number: sessionKeyAlg.init (null' null' "ECB"' 128);  
Magic Number,serpent,Serpent,C:\repos\rzymek01_bsk-serpent\Serpent.cs,generateIV,The following statement contains a magic number: if (!zeros) {  	CipherKeyGenerator keyGen = new CipherKeyGenerator ();  	keyGen.Init (new KeyGenerationParameters (new SecureRandom ()' BLOCK_SIZE << 3));  	iv = keyGen.GenerateKey ();  }  else {  	iv = new byte[BLOCK_SIZE];  }  
Magic Number,serpent,Serpent,C:\repos\rzymek01_bsk-serpent\Serpent.cs,generateIV,The following statement contains a magic number: keyGen.Init (new KeyGenerationParameters (new SecureRandom ()' BLOCK_SIZE << 3));  
Magic Number,serpent,Serpent,C:\repos\rzymek01_bsk-serpent\Serpent.cs,init,The following statement contains a magic number: mSegmentSize = segmentSize >> 3;  
