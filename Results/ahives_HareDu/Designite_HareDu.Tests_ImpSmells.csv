Implementation smell,Namespace,Class,File,Method,Description
Magic Number,HareDu.Tests,QueueTests,D:\research\architectureSmells\repos\ahives_HareDu\src\HareDu.Tests\QueueTests.cs,Verify_Can_Create_Queue_With_Arguments,The following statement contains a magic number: var response = Client                  .Factory<VirtualHostResources>(                      x => x.Credentials(Settings.Default.LoginUsername' Settings.Default.LoginPassword))                  .Queue                  .New(x => x.Queue(string.Format("{0}4"' Settings.Default.Queue))'                       x =>                           {                               x.IsDurable();                               x.WithArguments(y =>                                                   {                                                       y.SetPerQueueExpiration(1000);                                                       y.SetQueueExpiration(1000);                                                   });                           }'                       x => x.VirtualHost(Settings.Default.VirtualHost))                  .Response();
Magic Number,HareDu.Tests,QueueTests,D:\research\architectureSmells\repos\ahives_HareDu\src\HareDu.Tests\QueueTests.cs,Verify_Can_Create_Queue_With_Arguments,The following statement contains a magic number: var response = Client                  .Factory<VirtualHostResources>(                      x => x.Credentials(Settings.Default.LoginUsername' Settings.Default.LoginPassword))                  .Queue                  .New(x => x.Queue(string.Format("{0}4"' Settings.Default.Queue))'                       x =>                           {                               x.IsDurable();                               x.WithArguments(y =>                                                   {                                                       y.SetPerQueueExpiration(1000);                                                       y.SetQueueExpiration(1000);                                                   });                           }'                       x => x.VirtualHost(Settings.Default.VirtualHost))                  .Response();
