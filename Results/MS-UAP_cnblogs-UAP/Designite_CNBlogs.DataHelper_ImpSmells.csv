Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CNBlogs.DataHelper.CloudAPI,PostDataSource,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\CloudAPI\PostDataSource.cs,TrimPost,Cyclomatic complexity of the method is 8
Long Identifier,CNBlogs.DataHelper.DataModel,CNBlogSettings,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\DataModel\Settings.cs,,The length of the parameter SettingKey_DefaultDisplaySummary is 32.
Long Identifier,CNBlogs.DataHelper.DataModel,CNBlogSettings,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\DataModel\Settings.cs,,The length of the parameter SettingKey_ClickTitleForSummary is 31.
Long Identifier,CNBlogs.DataHelper.DataModel,CNBlogSettings,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\DataModel\Settings.cs,,The length of the parameter SettingKey_AddDefaultFollowingCategory is 38.
Long Identifier,CNBlogs.DataHelper.DataModel,CNBlogSettings,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\DataModel\Settings.cs,,The length of the parameter SettingKey_AddDefaultFollowingAuthor is 36.
Long Identifier,CNBlogs.DataHelper.DataModel,CNBlogSettings,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\DataModel\Settings.cs,,The length of the parameter SettingKeyFormat_Follow_Category is 32.
Long Identifier,CNBlogs.DataHelper.DataModel,CNBlogSettings,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\DataModel\Settings.cs,,The length of the parameter SettingKeyFormat_Follow_Author is 30.
Long Identifier,CNBlogs.DataHelper.DataModel,CNBlogSettings,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\DataModel\Settings.cs,,The length of the parameter SettingKey_LastNotificationUri is 30.
Long Statement,CNBlogs.DataHelper,APIWrapper,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\CloudAPI\APIWrapper.cs,Signin,The length of the statement  "            request.Content = new HttpStringContent("tbUserName=" + Uri.EscapeDataString(username) + "&tbPassword=" + Uri.EscapeDataString(password)); " is 138.
Long Statement,CNBlogs.DataHelper.CloudAPI,PostDataSource,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\CloudAPI\PostDataSource.cs,TrimPost,The length of the statement  "                        post.Status =( post.Status == PostStatus.None || post.Status == 0) ? CNBlogSettings.Instance.GetBlogReadState(post.ID) : post.Status; " is 133.
Long Statement,CNBlogs.DataHelper.Function,FollowHelper,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\Function\FollowHelper.cs,GetFollowedAuthors,The length of the statement  "            var destFolder = await roamingFolder.CreateFolderAsync(FOLLOW_AUTHOR_FOLDER' Windows.Storage.CreationCollisionOption.OpenIfExists); " is 131.
Long Statement,CNBlogs.DataHelper.Function,FollowHelper,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\Function\FollowHelper.cs,GetFollowedCategories,The length of the statement  "            var destFolder = await roamingFolder.CreateFolderAsync(FOLLOW_CATEGORY_FOLDER' Windows.Storage.CreationCollisionOption.OpenIfExists); " is 133.
Long Statement,CNBlogs.DataHelper.Function,FollowHelper,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\Function\FollowHelper.cs,GetFollowedCategoryFileAsync,The length of the statement  "                var destFolder = await roamingFolder.CreateFolderAsync(FOLLOW_CATEGORY_FOLDER' Windows.Storage.CreationCollisionOption.OpenIfExists); " is 133.
Long Statement,CNBlogs.DataHelper.Function,FollowHelper,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\Function\FollowHelper.cs,GetFollowedCategoryFileAsync,The length of the statement  "                var destFile = await destFolder.CreateFileAsync(category.Id + ".xml"' Windows.Storage.CreationCollisionOption.ReplaceExisting); " is 127.
Long Statement,CNBlogs.DataHelper.Function,FollowHelper,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\Function\FollowHelper.cs,GetFollowedAuthorFileAsync,The length of the statement  "            if (author != null && !string.IsNullOrWhiteSpace(author.Uri) && Uri.IsWellFormedUriString(author.Uri' UriKind.RelativeOrAbsolute)) " is 130.
Long Statement,CNBlogs.DataHelper.Function,FollowHelper,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\Function\FollowHelper.cs,GetFollowedAuthorFileAsync,The length of the statement  "                var destFolder = await roamingFolder.CreateFolderAsync(FOLLOW_AUTHOR_FOLDER' Windows.Storage.CreationCollisionOption.OpenIfExists); " is 131.
Long Statement,CNBlogs.DataHelper.Function,FollowHelper,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\Function\FollowHelper.cs,GetFollowedAuthorFileAsync,The length of the statement  "                var destFile = await destFolder.CreateFileAsync(blogApp + ".xml"' Windows.Storage.CreationCollisionOption.ReplaceExisting); " is 123.
Long Statement,CNBlogs.DataHelper.Function,PostHelper,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\Function\PostHelper.cs,GetCategories,The length of the statement  "            var categoriesContent = await FileIO.ReadTextAsync(await Windows.Storage.StorageFile.GetFileFromApplicationUriAsync(new Uri("ms-appx:///Data/Categories.xml"))); " is 160.
Long Statement,CNBlogs.DataHelper.Function,PostHelper,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\Function\PostHelper.cs,GetColumns,The length of the statement  "            var categoriesContent = await FileIO.ReadTextAsync(await Windows.Storage.StorageFile.GetFileFromApplicationUriAsync(new Uri("ms-appx:///Strings/Columns.xml"))); " is 160.
Complex Conditional,CNBlogs.DataHelper.CloudAPI,FavoriteAuthorDS,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\CloudAPI\FavoriteAuthorDS.cs,Follow,The conditional expression  "result.IsSuccess && result.Result != null && result.Result.Entries != null && result.Result.Entries.Count > 0"  is complex.
Complex Conditional,CNBlogs.DataHelper.CloudAPI,FavoriteAuthorDS,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\CloudAPI\FavoriteAuthorDS.cs,CheckUpdate,The conditional expression  "result != null && result.Result != null && result.Result.Entries != null && result.Result.Entries.Count > 0"  is complex.
Complex Conditional,CNBlogs.DataHelper.CloudAPI,FavoriteCategoryDS,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\CloudAPI\FavoriteCategoryDS.cs,Follow,The conditional expression  "result.IsSuccess && result.Result != null && result.Result.Entries != null && result.Result.Entries.Count > 0"  is complex.
Complex Conditional,CNBlogs.DataHelper.CloudAPI,FavoriteCategoryDS,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\CloudAPI\FavoriteCategoryDS.cs,CheckUpdate,The conditional expression  "result.IsSuccess && result.Result != null && result.Result.Entries != null && result.Result.Entries.Count > 0"  is complex.
Empty Catch Block,CNBlogs.DataHelper,APIWrapper,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\CloudAPI\APIWrapper.cs,Signin,The method has an empty catch block.
Magic Number,CNBlogs.DataHelper.CloudAPI,FavoritePostDS,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\CloudAPI\FavoritePostDS.cs,LoadItemsAsync,The following statement contains a magic number: num >= 20
Magic Number,CNBlogs.DataHelper.CloudAPI,HotPostsDS,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\CloudAPI\HotPostsDS.cs,LoadItemsAsync,The following statement contains a magic number: _count += 10;
Magic Number,CNBlogs.DataHelper.CloudAPI,TwoDaysTopViewPostsDS,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\CloudAPI\TenDaysTopLikePostsDS.cs,Refresh,The following statement contains a magic number: await this.LoadMoreItemsAsync(20);
Magic Number,CNBlogs.DataHelper.CloudAPI,TenDaysTopLikePostsDS,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\CloudAPI\TwoDaysTopViewPostsDS.cs,Refresh,The following statement contains a magic number: await this.LoadMoreItemsAsync(20);
Magic Number,CNBlogs.DataHelper.CloudAPI,DataSourceBase<T>,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\CloudAPI\DataSourceBase.cs,Refresh,The following statement contains a magic number: await LoadMoreItemsAsync(20);
Magic Number,CNBlogs.DataHelper.CloudAPI,DataSourceBase<T>,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\CloudAPI\DataSourceBase.cs,IsInTime,The following statement contains a magic number: return delta.TotalMilliseconds < 500;
Magic Number,CNBlogs.DataHelper.CloudAPI,RecommendBloggerDS,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\CloudAPI\RecommendBloggerDS.cs,LoadData,The following statement contains a magic number: var result = await APIWrapper.Instance.GetRecommandBloggersAsync(1' 100);
Magic Number,CNBlogs.DataHelper.CloudAPI,RecommendBloggerDS,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\CloudAPI\RecommendBloggerDS.cs,LoadData,The following statement contains a magic number: i < 20
Magic Number,CNBlogs.DataHelper.Function,BackgroundTaskHelper,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\Function\BackgroundTaskHelper.cs,Register,The following statement contains a magic number: builder.SetTrigger(new TimeTrigger(15' false));
Missing Default,CNBlogs.DataHelper.Function,BackgroundTaskHelper,C:\research\architectureSmells\repos\MS-UAP_cnblogs-UAP\CNBlogs.DataHelper\Function\BackgroundTaskHelper.cs,Register,The following switch statement is missing a default case: switch (status)                  {                      case BackgroundAccessStatus.Denied: // reach maxmium number' or' disabled by user                          return false;                      case BackgroundAccessStatus.Unspecified:                          return false;                      case BackgroundAccessStatus.AllowedMayUseActiveRealTimeConnectivity:                          break;                  }
