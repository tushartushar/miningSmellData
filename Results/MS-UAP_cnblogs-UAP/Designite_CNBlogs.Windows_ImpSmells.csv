Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CNBlogs,AppCommandsCalloutButton,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Controls\AppCommandsCalloutButton.cs,calloutButton_Tapped,Cyclomatic complexity of the method is 8
Long Statement,CNBlogs,PreferenceSettingsFlyout,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\SettingFlyouts\PreferenceSettingsFlyout.xaml.cs,ComboBox_SelectionChanged,The length of the statement  "                Windows.Globalization.ApplicationLanguages.PrimaryLanguageOverride = ((sender as ComboBox).SelectedItem as ComboBoxItem).Tag.ToString(); " is 136.
Long Statement,CNBlogs.Pages,FavoritePage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\FavoritePage.xaml.cs,CategoryControl_RightTapped,The length of the statement  "           await favoriteContextMenu.ShowAsync((sender as Control).TransformToVisual(Window.Current.Content).TransformPoint(new Point(50'50))); " is 132.
Long Statement,CNBlogs.Pages,NewsReadingPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\NewsReadingPage.xaml.cs,SetPageVisualStatus,The length of the statement  "            CommentButton.Content = isCommentTemperarorilyShown ? loader.GetString("CommentTextblockText_Status2") : loader.GetString("CommentTextblockText_Status1"); " is 154.
Long Statement,CNBlogs.Pages,NewsReadingPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\NewsReadingPage.xaml.cs,SetPageVisualStatus,The length of the statement  "            CommentButton.Content = isCommentTemperarorilyShown ? loader.GetString("CommentTextblockText_Status2") : loader.GetString("CommentTextblockText_Status1"); " is 154.
Long Statement,CNBlogs.Pages,NewsReadingPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\NewsReadingPage.xaml.cs,CommentButton_Click,The length of the statement  "            CommentButton.Content = isCommentTemperarorilyShown ? loader.GetString("CommentTextblockText_Status2") : loader.GetString("CommentTextblockText_Status1"); " is 154.
Long Statement,CNBlogs.Pages,NewsReadingPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\NewsReadingPage.xaml.cs,wv_Post_GotFocus,The length of the statement  "                CommentButton.Content = isCommentTemperarorilyShown ? loader.GetString("CommentTextblockText_Status2") : loader.GetString("CommentTextblockText_Status1"); " is 154.
Long Statement,CNBlogs.Pages,BloggerPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\BloggerPage.xaml.cs,OnNavigatedTo,The length of the statement  "            this.Author = new Author() { Avatar = this.blogger.Avatar' Name = this.blogger.Name' Uri = "http://www.cnblogs.com/" + this.blogger.BlogApp + "/" }; " is 148.
Long Statement,CNBlogs.Pages,PostReadingPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\PostReadingPage.xaml.cs,SetPageVisualStatus,The length of the statement  "            CommentButton.Content = isCommentTemperarorilyShown ? loader.GetString("CommentTextblockText_Status2") : loader.GetString("CommentTextblockText_Status1"); " is 154.
Long Statement,CNBlogs.Pages,PostReadingPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\PostReadingPage.xaml.cs,SetPageVisualStatus,The length of the statement  "            CommentButton.Content = isCommentTemperarorilyShown ? loader.GetString("CommentTextblockText_Status2") : loader.GetString("CommentTextblockText_Status1"); " is 154.
Long Statement,CNBlogs.Pages,PostReadingPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\PostReadingPage.xaml.cs,CommentButton_Click,The length of the statement  "            CommentButton.Content = isCommentTemperarorilyShown ? loader.GetString("CommentTextblockText_Status2") : loader.GetString("CommentTextblockText_Status1"); " is 154.
Long Statement,CNBlogs.Pages,PostReadingPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\PostReadingPage.xaml.cs,wv_Post_GotFocus,The length of the statement  "                CommentButton.Content = isCommentTemperarorilyShown ? loader.GetString("CommentTextblockText_Status2") : loader.GetString("CommentTextblockText_Status1"); " is 154.
Long Statement,CNBlogs.Pages,PostReadingPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\PostReadingPage.xaml.cs,RegisterForShare,The length of the statement  "            dataTransferManager.DataRequested += new TypedEventHandler<DataTransferManager' DataRequestedEventArgs>(this.ShareHtmlHandler); " is 127.
Long Statement,CNBlogs.Pages,PostReadingPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\PostReadingPage.xaml.cs,ShareHtmlHandler,The length of the statement  "            string summaryText = (this.post.Author != null ? loader.GetString("ShareContentAuthor") + this.post.Author.Name : "") + "\n" " is 124.
Long Statement,CNBlogs.Common,SuspensionManager,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Common\SuspensionManager.cs,SaveAsync,The length of the statement  "                StorageFile file = await ApplicationData.Current.LocalFolder.CreateFileAsync(sessionStateFilename' CreationCollisionOption.ReplaceExisting); " is 140.
Long Statement,CNBlogs.Common,SuspensionManager,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Common\SuspensionManager.cs,RestoreAsync,The length of the statement  "                    if (weakFrameReference.TryGetTarget(out frame) && (string)frame.GetValue(FrameSessionBaseKeyProperty) == sessionBaseKey) " is 120.
Long Statement,CNBlogs.Common,SuspensionManager,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Common\SuspensionManager.cs,RegisterFrame,The length of the statement  "                throw new InvalidOperationException("Frames must be either be registered before accessing frame session state' or not registered at all"); " is 138.
Long Statement,CNBlogs.ControlHelper,TimeCountDownConverter,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Shared\ControlHelper\TimeCountDownConverter.cs,Convert,The length of the statement  "                    commentTimeString = string.Format(loader.GetString("TimeConverter_Today") + "{0}:{1:d2}"' dateTimeToConvert.Hour' dateTimeToConvert.Minute); " is 140.
Long Statement,CNBlogs.ControlHelper,TimeCountDownConverter,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Shared\ControlHelper\TimeCountDownConverter.cs,Convert,The length of the statement  "                commentTimeString = string.Format(loader.GetString("TimeConverter_Yesterday") + "{0}:{1:d2}"' dateTimeToConvert.Hour' dateTimeToConvert.Minute); " is 144.
Long Statement,CNBlogs.ControlHelper,TimeCountDownConverter,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Shared\ControlHelper\TimeCountDownConverter.cs,Convert,The length of the statement  "            //    commentTimeString = string.Format(loader.GetString("TimeConverter_DayBeforeYesterday") + "{0}:{1:d2}"' dateTimeToConvert.Hour' dateTimeToConvert.Minute); " is 159.
Complex Conditional,CNBlogs.Common,NavigationHelper,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "(e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  e.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167)"  is complex.
Complex Conditional,CNBlogs.Common,NavigationHelper,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt)"  is complex.
Complex Conditional,CNBlogs.Common,NavigationHelper,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 167 && noModifiers) ||                      (virtualKey == VirtualKey.Right && onlyAlt)"  is complex.
Empty Catch Block,CNBlogs,AppCommandsCalloutButton,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Controls\AppCommandsCalloutButton.cs,calloutButton_Tapped,The method has an empty catch block.
Empty Catch Block,CNBlogs,MainPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\MainPage.xaml.cs,PostControl_Tapped,The method has an empty catch block.
Empty Catch Block,CNBlogs.Pages,CategoryPostsPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\CategoryPostsPage.xaml.cs,PostControl_Tapped,The method has an empty catch block.
Empty Catch Block,CNBlogs.Pages,CategoryPostsPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\CategoryPostsPage.xaml.cs,btn_Favorite_Click,The method has an empty catch block.
Empty Catch Block,CNBlogs.Pages,CategoryPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\CategoryPage.xaml.cs,CategoryControl_Tapped,The method has an empty catch block.
Empty Catch Block,CNBlogs.Pages,FavoritePage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\FavoritePage.xaml.cs,DataRefresh,The method has an empty catch block.
Empty Catch Block,CNBlogs.Pages,FavoritePage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\FavoritePage.xaml.cs,gv_Bloggers_ItemClick,The method has an empty catch block.
Empty Catch Block,CNBlogs.Pages,FavoritePage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\FavoritePage.xaml.cs,gv_Category_ItemClick,The method has an empty catch block.
Empty Catch Block,CNBlogs.Pages,FavoritePage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\FavoritePage.xaml.cs,BloggerControl_Tapped,The method has an empty catch block.
Empty Catch Block,CNBlogs.Pages,FavoritePage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\FavoritePage.xaml.cs,SubCategoryControl_Tapped,The method has an empty catch block.
Empty Catch Block,CNBlogs.Pages,OldFavoritePage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\OldFavoritePage.xaml.cs,PostControl_Tapped,The method has an empty catch block.
Empty Catch Block,CNBlogs.Pages,BestPostsPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\BestPostsPage.xaml.cs,PostControl_Tapped,The method has an empty catch block.
Empty Catch Block,CNBlogs.Pages,BloggerPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\BloggerPage.xaml.cs,PostControl_Tapped,The method has an empty catch block.
Empty Catch Block,CNBlogs.Pages,HotPostsPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\HotPostsPage.xaml.cs,PostControl_Tapped,The method has an empty catch block.
Empty Catch Block,CNBlogs.Pages,NewsPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\NewsPage.xaml.cs,NewsControl_Tapped,The method has an empty catch block.
Empty Catch Block,CNBlogs.Pages,PostReadingPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\PostReadingPage.xaml.cs,SearchAuthorInfo,The method has an empty catch block.
Empty Catch Block,CNBlogs.Pages,PostReadingPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\PostReadingPage.xaml.cs,GoToBloggerPage,The method has an empty catch block.
Magic Number,CNBlogs,FlatNavigationControl,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Controls\FlatNavigationControl.xaml.cs,StackPanel_Loaded,The following statement contains a magic number: if (this.RenderSize.Width >= 1366)              {                  WideLayout.Visibility = Visibility.Visible;                  NarrowLayout.Visibility = Visibility.Collapsed;              }              else              {                  WideLayout.Visibility = Visibility.Collapsed;                  NarrowLayout.Visibility = Visibility.Visible;              }
Magic Number,CNBlogs,PostControl,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Controls\PostControl.cs,SetReadStatus,The following statement contains a magic number: if (this.mainPostGrid != null)              {                  this.mainPostGrid.Opacity = 0.8;              }
Magic Number,CNBlogs,App,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Shared\App.xaml.cs,OnLaunched,The following statement contains a magic number: if (rootFrame == null)              {                  // Create a Frame to act as the navigation context and navigate to the first page                  rootFrame = new Frame();                    // TODO: change this value to a cache size that is appropriate for your application                  rootFrame.CacheSize = 2;                    if (e.PreviousExecutionState == ApplicationExecutionState.Terminated)                  {                      // TODO: Load state from previously suspended application                  }                    // Place the frame in the current Window                  Window.Current.Content = rootFrame;              }
Magic Number,CNBlogs.Pages,FavoritePage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\FavoritePage.xaml.cs,CategoryControl_RightTapped,The following statement contains a magic number: await favoriteContextMenu.ShowAsync((sender as Control).TransformToVisual(Window.Current.Content).TransformPoint(new Point(50'50)));
Magic Number,CNBlogs.Pages,FavoritePage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\FavoritePage.xaml.cs,CategoryControl_RightTapped,The following statement contains a magic number: await favoriteContextMenu.ShowAsync((sender as Control).TransformToVisual(Window.Current.Content).TransformPoint(new Point(50'50)));
Magic Number,CNBlogs.Pages,FavoritePage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\FavoritePage.xaml.cs,btn_GotoPost_Click,The following statement contains a magic number: FavoriteHub.ScrollToSection(FavoriteHub.Sections[2]);
Magic Number,CNBlogs.Pages,NewsReadingPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\NewsReadingPage.xaml.cs,SetPageVisualStatus,The following statement contains a magic number: if (e.NewSize.Width < 1366)              {                  Sb_CommentHiddenVIew.Begin();                  isCommentTemperarorilyShown = false;              }              else              {                  Sb_CommentShownVIew.Begin();                  isCommentTemperarorilyShown = false;              }
Magic Number,CNBlogs.Pages,NewsReadingPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\NewsReadingPage.xaml.cs,SetPageVisualStatus,The following statement contains a magic number: if (pageWidth < 1366)              {                  Sb_CommentHiddenVIew.Begin();                  isCommentTemperarorilyShown = false;              }              else              {                  Sb_CommentShownVIew.Begin();                  isCommentTemperarorilyShown = false;              }
Magic Number,CNBlogs.Pages,NewsReadingPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\NewsReadingPage.xaml.cs,SetTitleFont,The following statement contains a magic number: if (titleLength > 20)                  pageTitle.FontSize = 24;              else if (titleLength > 40)                  pageTitle.FontSize = 20;
Magic Number,CNBlogs.Pages,NewsReadingPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\NewsReadingPage.xaml.cs,SetTitleFont,The following statement contains a magic number: if (titleLength > 20)                  pageTitle.FontSize = 24;              else if (titleLength > 40)                  pageTitle.FontSize = 20;
Magic Number,CNBlogs.Pages,NewsReadingPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\NewsReadingPage.xaml.cs,SetTitleFont,The following statement contains a magic number: if (titleLength > 20)                  pageTitle.FontSize = 24;              else if (titleLength > 40)                  pageTitle.FontSize = 20;
Magic Number,CNBlogs.Pages,NewsReadingPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\NewsReadingPage.xaml.cs,SetTitleFont,The following statement contains a magic number: if (titleLength > 20)                  pageTitle.FontSize = 24;              else if (titleLength > 40)                  pageTitle.FontSize = 20;
Magic Number,CNBlogs.Pages,PostReadingPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\PostReadingPage.xaml.cs,SetPageVisualStatus,The following statement contains a magic number: if (e.NewSize.Width < 1366)              {                  Sb_CommentHiddenVIew.Begin();                  isCommentTemperarorilyShown = false;              }              else              {                  Sb_CommentShownVIew.Begin();                  isCommentTemperarorilyShown = false;              }
Magic Number,CNBlogs.Pages,PostReadingPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\PostReadingPage.xaml.cs,SetPageVisualStatus,The following statement contains a magic number: if (pageWidth < 1366)              {                  Sb_CommentHiddenVIew.Begin();                  isCommentTemperarorilyShown = false;              }              else              {                  Sb_CommentShownVIew.Begin();                  isCommentTemperarorilyShown = false;              }
Magic Number,CNBlogs.Pages,PostReadingPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\PostReadingPage.xaml.cs,SetTitleFont,The following statement contains a magic number: if (titleLength > 20)                  pageTitle.FontSize = 24;              else if (titleLength > 40)                  pageTitle.FontSize = 20;
Magic Number,CNBlogs.Pages,PostReadingPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\PostReadingPage.xaml.cs,SetTitleFont,The following statement contains a magic number: if (titleLength > 20)                  pageTitle.FontSize = 24;              else if (titleLength > 40)                  pageTitle.FontSize = 20;
Magic Number,CNBlogs.Pages,PostReadingPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\PostReadingPage.xaml.cs,SetTitleFont,The following statement contains a magic number: if (titleLength > 20)                  pageTitle.FontSize = 24;              else if (titleLength > 40)                  pageTitle.FontSize = 20;
Magic Number,CNBlogs.Pages,PostReadingPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\PostReadingPage.xaml.cs,SetTitleFont,The following statement contains a magic number: if (titleLength > 20)                  pageTitle.FontSize = 24;              else if (titleLength > 40)                  pageTitle.FontSize = 20;
Magic Number,CNBlogs.Pages,PostReadingPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\PostReadingPage.xaml.cs,ShareHtmlHandler,The following statement contains a magic number: string summaryText = (this.post.Author != null ? loader.GetString("ShareContentAuthor") + this.post.Author.Name : "") + "\n"                  + loader.GetString("ShareContentSummary")                  + (this.post.Summary.Length > 50 ? this.post.Summary.Substring(0' 50) : this.post.Summary) + "\n"                  + this.post.Link.Href;
Magic Number,CNBlogs.Pages,PostReadingPage,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Pages\PostReadingPage.xaml.cs,ShareHtmlHandler,The following statement contains a magic number: string summaryText = (this.post.Author != null ? loader.GetString("ShareContentAuthor") + this.post.Author.Name : "") + "\n"                  + loader.GetString("ShareContentSummary")                  + (this.post.Summary.Length > 50 ? this.post.Summary.Substring(0' 50) : this.post.Summary) + "\n"                  + this.post.Link.Href;
Magic Number,CNBlogs.Common,NavigationHelper,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  e.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167))              {                  var coreWindow = Window.Current.CoreWindow;                  var downState = CoreVirtualKeyStates.Down;                  bool menuKey = (coreWindow.GetKeyState(VirtualKey.Menu) & downState) == downState;                  bool controlKey = (coreWindow.GetKeyState(VirtualKey.Control) & downState) == downState;                  bool shiftKey = (coreWindow.GetKeyState(VirtualKey.Shift) & downState) == downState;                  bool noModifiers = !menuKey && !controlKey && !shiftKey;                  bool onlyAlt = menuKey && !controlKey && !shiftKey;                    if (((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt))                  {                      // When the previous key or Alt+Left are pressed navigate back                      e.Handled = true;                      this.GoBackCommand.Execute(null);                  }                  else if (((int)virtualKey == 167 && noModifiers) ||                      (virtualKey == VirtualKey.Right && onlyAlt))                  {                      // When the next key or Alt+Right are pressed navigate forward                      e.Handled = true;                      this.GoForwardCommand.Execute(null);                  }              }
Magic Number,CNBlogs.Common,NavigationHelper,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  e.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167))              {                  var coreWindow = Window.Current.CoreWindow;                  var downState = CoreVirtualKeyStates.Down;                  bool menuKey = (coreWindow.GetKeyState(VirtualKey.Menu) & downState) == downState;                  bool controlKey = (coreWindow.GetKeyState(VirtualKey.Control) & downState) == downState;                  bool shiftKey = (coreWindow.GetKeyState(VirtualKey.Shift) & downState) == downState;                  bool noModifiers = !menuKey && !controlKey && !shiftKey;                  bool onlyAlt = menuKey && !controlKey && !shiftKey;                    if (((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt))                  {                      // When the previous key or Alt+Left are pressed navigate back                      e.Handled = true;                      this.GoBackCommand.Execute(null);                  }                  else if (((int)virtualKey == 167 && noModifiers) ||                      (virtualKey == VirtualKey.Right && onlyAlt))                  {                      // When the next key or Alt+Right are pressed navigate forward                      e.Handled = true;                      this.GoForwardCommand.Execute(null);                  }              }
Magic Number,CNBlogs.Common,NavigationHelper,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  e.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167))              {                  var coreWindow = Window.Current.CoreWindow;                  var downState = CoreVirtualKeyStates.Down;                  bool menuKey = (coreWindow.GetKeyState(VirtualKey.Menu) & downState) == downState;                  bool controlKey = (coreWindow.GetKeyState(VirtualKey.Control) & downState) == downState;                  bool shiftKey = (coreWindow.GetKeyState(VirtualKey.Shift) & downState) == downState;                  bool noModifiers = !menuKey && !controlKey && !shiftKey;                  bool onlyAlt = menuKey && !controlKey && !shiftKey;                    if (((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt))                  {                      // When the previous key or Alt+Left are pressed navigate back                      e.Handled = true;                      this.GoBackCommand.Execute(null);                  }                  else if (((int)virtualKey == 167 && noModifiers) ||                      (virtualKey == VirtualKey.Right && onlyAlt))                  {                      // When the next key or Alt+Right are pressed navigate forward                      e.Handled = true;                      this.GoForwardCommand.Execute(null);                  }              }
Magic Number,CNBlogs.Common,NavigationHelper,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Windows\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  e.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167))              {                  var coreWindow = Window.Current.CoreWindow;                  var downState = CoreVirtualKeyStates.Down;                  bool menuKey = (coreWindow.GetKeyState(VirtualKey.Menu) & downState) == downState;                  bool controlKey = (coreWindow.GetKeyState(VirtualKey.Control) & downState) == downState;                  bool shiftKey = (coreWindow.GetKeyState(VirtualKey.Shift) & downState) == downState;                  bool noModifiers = !menuKey && !controlKey && !shiftKey;                  bool onlyAlt = menuKey && !controlKey && !shiftKey;                    if (((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt))                  {                      // When the previous key or Alt+Left are pressed navigate back                      e.Handled = true;                      this.GoBackCommand.Execute(null);                  }                  else if (((int)virtualKey == 167 && noModifiers) ||                      (virtualKey == VirtualKey.Right && onlyAlt))                  {                      // When the next key or Alt+Right are pressed navigate forward                      e.Handled = true;                      this.GoForwardCommand.Execute(null);                  }              }
Missing Default,CNBlogs,App,C:\repos\MS-UAP_cnblogs-UAP\CNBlogs.Shared\App.xaml.cs,OnPushNotification,The following switch statement is missing a default case: switch (e.NotificationType)              {                  case PushNotificationType.Badge:                      notificationContent = e.BadgeNotification.Content.GetXml();                      break;                    case PushNotificationType.Tile:                      notificationContent = e.TileNotification.Content.GetXml();                      break;                    case PushNotificationType.Toast:                      notificationContent = e.ToastNotification.Content.GetXml();                      break;                    case PushNotificationType.Raw:                      notificationContent = e.RawNotification.Content;                      break;              }
