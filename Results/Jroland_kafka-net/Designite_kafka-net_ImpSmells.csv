Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,KafkaNet,Producer,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Producer.cs,SendMessageAsync,The method has 5 parameters. Parameters: topic' messages' acks' timeout' codec
Long Identifier,KafkaNet.Statistics,StatisticsTracker,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Statistics\StatisticsTracker.cs,,The length of the parameter CompletedNetworkWriteStatistics is 31.
Long Identifier,KafkaNet,KafkaTcpSocket,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\KafkaTcpSocket.cs,,The length of the parameter DefaultReconnectionTimeoutMultiplier is 36.
Long Identifier,KafkaNet,SocketPayloadReadTask,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\KafkaTcpSocket.cs,,The length of the parameter _cancellationTokenRegistration is 30.
Long Identifier,KafkaNet,SocketPayloadSendTask,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\KafkaTcpSocket.cs,,The length of the parameter _cancellationTokenRegistration is 30.
Long Identifier,KafkaNet.Protocol,FetchRequest,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Protocol\FetchRequest.cs,,The length of the parameter DefaultMinBlockingByteBufferSize is 32.
Long Statement,KafkaNet.Common,Extensions,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\Extensions.cs,WithCancellation,The length of the statement  "            var cancelRegistration = cancellationToken.Register(source => ((TaskCompletionSource<bool>) source).TrySetResult(true)' tcs); " is 125.
Long Statement,KafkaNet.Common,Extensions,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\Extensions.cs,WithCancellation,The length of the statement  "            var cancelRegistration = cancellationToken.Register(source => ((TaskCompletionSource<bool>)source).TrySetResult(true)' tcs); " is 124.
Long Statement,KafkaNet,DefaultKafkaConnectionFactory,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Default\DefaultKafkaConnectionFactory.cs,GetFirstAddress,The length of the statement  "                    var selectedAddress = addresses.FirstOrDefault(item => item.AddressFamily == AddressFamily.InterNetwork) ?? addresses.First(); " is 126.
Long Statement,KafkaNet,Consumer,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Consumer.cs,EnsurePartitionPollingThreads,The length of the statement  "                    if (topic.Count <= 0) throw new ApplicationException(string.Format("Unable to get metadata for topic:{0}."' _options.Topic)); " is 125.
Long Statement,KafkaNet,Consumer,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Consumer.cs,EnsurePartitionPollingThreads,The length of the statement  "                _options.Log.ErrorFormat("Exception occured trying to setup consumer for topic:{0}.  Exception={1}"' _options.Topic' ex); " is 121.
Long Statement,KafkaNet,Consumer,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Consumer.cs,ConsumeTopicPartitionAsync,The length of the statement  "                            _partitionOffsetIndex.AddOrUpdate(partitionId' i => offset' (i' currentOffset) => { offset = currentOffset; return currentOffset; }); " is 133.
Long Statement,KafkaNet,Consumer,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Consumer.cs,ConsumeTopicPartitionAsync,The length of the statement  "                            _options.Log.ErrorFormat("Exception occured while polling topic:{0} partition:{1}.  Polling will continue.  Exception={2}"' topic' partitionId' ex); " is 148.
Long Statement,KafkaNet,Consumer,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Consumer.cs,HandleResponseErrors,The length of the statement  "                    throw new OffsetOutOfRangeException("FetchResponse indicated we requested an offset that is out of range.  Requested Offset:{0}"' request.Offset) { FetchRequest = request }; " is 173.
Long Statement,KafkaNet,Consumer,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Consumer.cs,HandleResponseErrors,The length of the statement  "                    throw new InvalidMetadataException("FetchResponse indicated we may have mismatched metadata.  ErrorCode:{0}"' response.Error) { ErrorCode = response.Error }; " is 157.
Long Statement,KafkaNet,Consumer,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Consumer.cs,HandleResponseErrors,The length of the statement  "                    throw new KafkaApplicationException("FetchResponse returned error condition.  ErrorCode:{0}"' response.Error) { ErrorCode = response.Error }; " is 141.
Long Statement,KafkaNet,Consumer,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Consumer.cs,FixOffsetOutOfRangeExceptionAsync,The length of the statement  "                           _options.Log.ErrorFormat("Failed to fix the offset out of range exception on topic:{0} partition:{1}.  Polling will continue.  Exception={2}"' " is 142.
Long Statement,KafkaNet,MetadataQueries,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\MetadataQueries.cs,GetTopic,The length of the statement  "            if (response.Count <= 0) throw new InvalidTopicMetadataException(ErrorResponseCode.NoError' "No metadata could be found for topic: {0}"' topic); " is 144.
Long Statement,KafkaNet,DefaultPartitionSelector,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Default\DefaultPartitionSelector.cs,Select,The length of the statement  "            if (topic.Partitions.Count <= 0) throw new ApplicationException(string.Format("Topic ({0}) has no partitions."' topic.Name)); " is 125.
Long Statement,KafkaNet,DefaultPartitionSelector,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Default\DefaultPartitionSelector.cs,Select,The length of the statement  "                throw new InvalidPartitionException(string.Format("Hash function return partition id: {0}' but the available partitions are:{1}"' " is 129.
Long Statement,KafkaNet,BrokerRouter,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\BrokerRouter.cs,SelectBrokerRoute,The length of the statement  "                throw new InvalidTopicMetadataException(ErrorResponseCode.NoError' "The Metadata is invalid as it returned no data for the given topic:{0}"' topic); " is 148.
Long Statement,KafkaNet,BrokerRouter,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\BrokerRouter.cs,SelectBrokerRoute,The length of the statement  "            if (partition == null) throw new InvalidPartitionException(string.Format("The topic:{0} does not have a partitionId:{1} defined."' topic' partitionId)); " is 152.
Long Statement,KafkaNet,BrokerRouter,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\BrokerRouter.cs,SelectBrokerRoute,The length of the statement  "                throw new InvalidTopicMetadataException(ErrorResponseCode.NoError' "The Metadata is invalid as it returned no data for the given topic:{0}"' topic); " is 148.
Long Statement,KafkaNet,BrokerRouter,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\BrokerRouter.cs,GetCachedRoute,The length of the statement  "            throw new LeaderNotFoundException(string.Format("Lead broker cannot be found for parition: {0}' leader: {1}"' partition.PartitionId' partition.LeaderId)); " is 154.
Long Statement,KafkaNet,BrokerRouter,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\BrokerRouter.cs,UpdateInternalMetadataCache,The length of the statement  "                    connection = _kafkaOptions.KafkaConnectionFactory.Create(broker.Endpoint' _kafkaOptions.ResponseTimeoutMs' _kafkaOptions.Log); " is 126.
Long Statement,KafkaNet,BrokerRouter,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\BrokerRouter.cs,UpsertConnectionToBrokerConnectionIndex,The length of the statement  "                        _kafkaOptions.Log.WarnFormat("Broker:{0} Uri changed from:{1} to {2}"' brokerId' existingConnection.Endpoint' newConnection.Endpoint); " is 134.
Long Statement,KafkaNet,KafkaMetadataProvider,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\KafkaMetadataProvider.cs,GetMetadataResponse,The length of the statement  "                        "Unable to query for metadata from any of the default Kafka servers.  At least one provided server must be available.  Server list: {0}"' " is 137.
Long Statement,KafkaNet,KafkaMetadataProvider,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\KafkaMetadataProvider.cs,ValidateTopic,The length of the statement  "                    Exception = new InvalidTopicMetadataException(ErrorResponseCode.Unknown' "Unknown error code returned in metadata response.  ErrorCode: {0}"' topic.ErrorCode) " is 158.
Long Statement,KafkaNet,KafkaConnection,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\KafkaConnection.cs,StartReadStreamPoller,The length of the statement  "                                    //TODO being in sync with the byte order on read is important.  What happens if this exception causes us to be out of sync? " is 123.
Long Statement,KafkaNet,KafkaConnection,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\KafkaConnection.cs,CorrelatePayloadToRequest,The length of the statement  "                _log.WarnFormat("Message response received with correlationId={0}' but did not exist in the request queue."' correlationId); " is 124.
Long Statement,KafkaNet,KafkaTcpSocket,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\KafkaTcpSocket.cs,ProcessNetworkstreamTasks,The length of the statement  "            //Read and write operations can be performed simultaneously on an instance of the NetworkStream class without the need for synchronization.  " is 139.
Long Statement,KafkaNet,KafkaTcpSocket,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\KafkaTcpSocket.cs,ProcessNetworkstreamTasks,The length of the statement  "            //As long as there is one unique thread for the write operations and one unique thread for the read operations' there will be no cross-interference  " is 147.
Long Statement,KafkaNet.Protocol,OffsetFetchResponse,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Protocol\OffsetFetchRequest.cs,ToString,The length of the statement  "            return string.Format("[OffsetFetchResponse TopicName={0}' PartitionID={1}' Offset={2}' MetaData={3}' ErrorCode={4}]"' Topic' PartitionId' Offset' MetaData' Error); " is 163.
Long Statement,KafkaNet.Protocol,ProduceResponse,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Protocol\ProduceRequest.cs,Equals,The length of the statement  "            return string.Equals(Topic' other.Topic) && PartitionId == other.PartitionId && Error == other.Error && Offset == other.Offset; " is 127.
Empty Catch Block,KafkaNet.Common,Extensions,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\Extensions.cs,SafeWait,The method has an empty catch block.
Empty Catch Block,KafkaNet,Producer,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Producer.cs,BatchSendAsync,The method has an empty catch block.
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadDecimal,The following statement contains a magic number: var bytes = GetNextBytesNativeEndian(16);
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadDecimal,The following statement contains a magic number: var ints = new Int32[4];
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadDecimal,The following statement contains a magic number: ints[0] = (Int32)bytes[0] << 0                  | (Int32)bytes[1] << 8                  | (Int32)bytes[2] << 16                  | (Int32)bytes[3] << 24;
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadDecimal,The following statement contains a magic number: ints[0] = (Int32)bytes[0] << 0                  | (Int32)bytes[1] << 8                  | (Int32)bytes[2] << 16                  | (Int32)bytes[3] << 24;
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadDecimal,The following statement contains a magic number: ints[0] = (Int32)bytes[0] << 0                  | (Int32)bytes[1] << 8                  | (Int32)bytes[2] << 16                  | (Int32)bytes[3] << 24;
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadDecimal,The following statement contains a magic number: ints[0] = (Int32)bytes[0] << 0                  | (Int32)bytes[1] << 8                  | (Int32)bytes[2] << 16                  | (Int32)bytes[3] << 24;
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadDecimal,The following statement contains a magic number: ints[0] = (Int32)bytes[0] << 0                  | (Int32)bytes[1] << 8                  | (Int32)bytes[2] << 16                  | (Int32)bytes[3] << 24;
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadDecimal,The following statement contains a magic number: ints[1] = (Int32)bytes[4] << 0                  | (Int32)bytes[5] << 8                  | (Int32)bytes[6] << 16                  | (Int32)bytes[7] << 24;
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadDecimal,The following statement contains a magic number: ints[1] = (Int32)bytes[4] << 0                  | (Int32)bytes[5] << 8                  | (Int32)bytes[6] << 16                  | (Int32)bytes[7] << 24;
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadDecimal,The following statement contains a magic number: ints[1] = (Int32)bytes[4] << 0                  | (Int32)bytes[5] << 8                  | (Int32)bytes[6] << 16                  | (Int32)bytes[7] << 24;
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadDecimal,The following statement contains a magic number: ints[1] = (Int32)bytes[4] << 0                  | (Int32)bytes[5] << 8                  | (Int32)bytes[6] << 16                  | (Int32)bytes[7] << 24;
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadDecimal,The following statement contains a magic number: ints[1] = (Int32)bytes[4] << 0                  | (Int32)bytes[5] << 8                  | (Int32)bytes[6] << 16                  | (Int32)bytes[7] << 24;
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadDecimal,The following statement contains a magic number: ints[1] = (Int32)bytes[4] << 0                  | (Int32)bytes[5] << 8                  | (Int32)bytes[6] << 16                  | (Int32)bytes[7] << 24;
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadDecimal,The following statement contains a magic number: ints[1] = (Int32)bytes[4] << 0                  | (Int32)bytes[5] << 8                  | (Int32)bytes[6] << 16                  | (Int32)bytes[7] << 24;
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadDecimal,The following statement contains a magic number: ints[2] = (Int32)bytes[8] << 0                  | (Int32)bytes[9] << 8                  | (Int32)bytes[10] << 16                  | (Int32)bytes[11] << 24;
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadDecimal,The following statement contains a magic number: ints[2] = (Int32)bytes[8] << 0                  | (Int32)bytes[9] << 8                  | (Int32)bytes[10] << 16                  | (Int32)bytes[11] << 24;
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadDecimal,The following statement contains a magic number: ints[2] = (Int32)bytes[8] << 0                  | (Int32)bytes[9] << 8                  | (Int32)bytes[10] << 16                  | (Int32)bytes[11] << 24;
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadDecimal,The following statement contains a magic number: ints[2] = (Int32)bytes[8] << 0                  | (Int32)bytes[9] << 8                  | (Int32)bytes[10] << 16                  | (Int32)bytes[11] << 24;
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadDecimal,The following statement contains a magic number: ints[2] = (Int32)bytes[8] << 0                  | (Int32)bytes[9] << 8                  | (Int32)bytes[10] << 16                  | (Int32)bytes[11] << 24;
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadDecimal,The following statement contains a magic number: ints[2] = (Int32)bytes[8] << 0                  | (Int32)bytes[9] << 8                  | (Int32)bytes[10] << 16                  | (Int32)bytes[11] << 24;
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadDecimal,The following statement contains a magic number: ints[2] = (Int32)bytes[8] << 0                  | (Int32)bytes[9] << 8                  | (Int32)bytes[10] << 16                  | (Int32)bytes[11] << 24;
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadDecimal,The following statement contains a magic number: ints[2] = (Int32)bytes[8] << 0                  | (Int32)bytes[9] << 8                  | (Int32)bytes[10] << 16                  | (Int32)bytes[11] << 24;
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadDecimal,The following statement contains a magic number: ints[3] = (Int32)bytes[12] << 0                  | (Int32)bytes[13] << 8                  | (Int32)bytes[14] << 16                  | (Int32)bytes[15] << 24;
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadDecimal,The following statement contains a magic number: ints[3] = (Int32)bytes[12] << 0                  | (Int32)bytes[13] << 8                  | (Int32)bytes[14] << 16                  | (Int32)bytes[15] << 24;
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadDecimal,The following statement contains a magic number: ints[3] = (Int32)bytes[12] << 0                  | (Int32)bytes[13] << 8                  | (Int32)bytes[14] << 16                  | (Int32)bytes[15] << 24;
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadDecimal,The following statement contains a magic number: ints[3] = (Int32)bytes[12] << 0                  | (Int32)bytes[13] << 8                  | (Int32)bytes[14] << 16                  | (Int32)bytes[15] << 24;
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadDecimal,The following statement contains a magic number: ints[3] = (Int32)bytes[12] << 0                  | (Int32)bytes[13] << 8                  | (Int32)bytes[14] << 16                  | (Int32)bytes[15] << 24;
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadDecimal,The following statement contains a magic number: ints[3] = (Int32)bytes[12] << 0                  | (Int32)bytes[13] << 8                  | (Int32)bytes[14] << 16                  | (Int32)bytes[15] << 24;
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadDecimal,The following statement contains a magic number: ints[3] = (Int32)bytes[12] << 0                  | (Int32)bytes[13] << 8                  | (Int32)bytes[14] << 16                  | (Int32)bytes[15] << 24;
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadDecimal,The following statement contains a magic number: ints[3] = (Int32)bytes[12] << 0                  | (Int32)bytes[13] << 8                  | (Int32)bytes[14] << 16                  | (Int32)bytes[15] << 24;
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadSingle,The following statement contains a magic number: return EndianAwareRead(4' BitConverter.ToSingle);
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadDouble,The following statement contains a magic number: return EndianAwareRead(8' BitConverter.ToDouble);
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadInt16,The following statement contains a magic number: return EndianAwareRead(2' BitConverter.ToInt16);
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadInt32,The following statement contains a magic number: return EndianAwareRead(4' BitConverter.ToInt32);
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadInt64,The following statement contains a magic number: return EndianAwareRead(8' BitConverter.ToInt64);
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadUInt16,The following statement contains a magic number: return EndianAwareRead(2' BitConverter.ToUInt16);
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadUInt32,The following statement contains a magic number: return EndianAwareRead(4' BitConverter.ToUInt32);
Magic Number,KafkaNet.Common,BigEndianBinaryReader,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryReader.cs,ReadUInt64,The following statement contains a magic number: return EndianAwareRead(8' BitConverter.ToUInt64);
Magic Number,KafkaNet.Common,BigEndianBinaryWriter,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryWriter.cs,Write,The following statement contains a magic number: Contract.Assume(ints.Length == 4);
Magic Number,KafkaNet.Common,BigEndianBinaryWriter,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryWriter.cs,Write,The following statement contains a magic number: i < 4
Magic Number,KafkaNet.Common,KafkaMessagePacker,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\KafkaMessagePacker.cs,CrcPayload,The following statement contains a magic number: buffer[2] = crc[2];
Magic Number,KafkaNet.Common,KafkaMessagePacker,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\KafkaMessagePacker.cs,CrcPayload,The following statement contains a magic number: buffer[2] = crc[2];
Magic Number,KafkaNet.Common,KafkaMessagePacker,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\KafkaMessagePacker.cs,CrcPayload,The following statement contains a magic number: buffer[3] = crc[3];
Magic Number,KafkaNet.Common,KafkaMessagePacker,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\KafkaMessagePacker.cs,CrcPayload,The following statement contains a magic number: buffer[3] = crc[3];
Magic Number,KafkaNet.Common,Crc32Provider,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\Crc32Provider.cs,InitializeTable,The following statement contains a magic number: var createTable = new UInt32[256];
Magic Number,KafkaNet.Common,Crc32Provider,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\Crc32Provider.cs,InitializeTable,The following statement contains a magic number: j < 8
Magic Number,KafkaNet.Common,Crc32Provider,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\Crc32Provider.cs,InitializeTable,The following statement contains a magic number: i < 256
Magic Number,KafkaNet.Common,Crc32Provider,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\Crc32Provider.cs,CalculateHash,The following statement contains a magic number: crc = (crc >> 8) ^ PolynomialTable[buffer[i] ^ crc & 0xff];
Magic Number,KafkaNet.Statistics,StatisticsTracker,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Statistics\StatisticsTracker.cs,StatisticsTracker,The following statement contains a magic number: HeartbeatTimer = new ScheduledTimer()                  .StartingAt(DateTime.Now)                  .Every(TimeSpan.FromSeconds(5))                  .Do(HeartBeatAction)                  .Begin();
Magic Number,KafkaNet.Statistics,StatisticsSummary,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Statistics\StatisticsTracker.cs,StatisticsSummary,The following statement contains a magic number: ProduceRequestSummary = new ProduceRequestSummary                  {                      SampleSize = ProduceRequestStatistics.Count'                      MessageCount = ProduceRequestStatistics.Sum(s => s.MessageCount)'                      MessageBytesPerSecond = (int)                              (ProduceRequestStatistics.Sum(s => s.MessageBytes) / produceRequestSampleTimespan.TotalSeconds)'                      PayloadBytesPerSecond = (int)                              (ProduceRequestStatistics.Sum(s => s.PayloadBytes) / produceRequestSampleTimespan.TotalSeconds)'                      CompressedBytesPerSecond = (int)                              (ProduceRequestStatistics.Sum(s => s.CompressedBytes) / produceRequestSampleTimespan.TotalSeconds)'                      AverageCompressionRatio =                          Math.Round(ProduceRequestStatistics.Sum(s => s.CompressionRatio) / ProduceRequestStatistics.Count' 4)'                      MessagesPerSecond = (int)                              (ProduceRequestStatistics.Sum(x => x.MessageCount) / produceRequestSampleTimespan.TotalSeconds)                  };
Magic Number,KafkaNet.Statistics,ProduceRequestStatistic,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Statistics\StatisticsTracker.cs,ProduceRequestStatistic,The following statement contains a magic number: CompressionRatio = MessageBytes == 0 ? 0 : Math.Round((double)compressedBytes / MessageBytes' 4);
Magic Number,KafkaNet.Statistics,MathHelper,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Statistics\StatisticsTracker.cs,ConvertToMegabytes,The following statement contains a magic number: return Math.Round((double)bytes / 1048576' 4);
Magic Number,KafkaNet.Statistics,MathHelper,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Statistics\StatisticsTracker.cs,ConvertToMegabytes,The following statement contains a magic number: return Math.Round((double)bytes / 1048576' 4);
Magic Number,KafkaNet.Statistics,MathHelper,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Statistics\StatisticsTracker.cs,ConvertToKilobytes,The following statement contains a magic number: return Math.Round((double)bytes / 1000' 4);
Magic Number,KafkaNet.Statistics,MathHelper,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Statistics\StatisticsTracker.cs,ConvertToKilobytes,The following statement contains a magic number: return Math.Round((double)bytes / 1000' 4);
Magic Number,KafkaNet,BrokerRoute,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Model\BrokerRoute.cs,GetHashCode,The following statement contains a magic number: return ((Topic != null ? Topic.GetHashCode() : 0) * 397) ^ PartitionId;
Magic Number,KafkaNet,Consumer,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Consumer.cs,Dispose,The following statement contains a magic number: task.Wait(TimeSpan.FromSeconds(5));
Magic Number,KafkaNet,KafkaConnection,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\KafkaConnection.cs,StartReadStreamPoller,The following statement contains a magic number: _connectionReadPollingTask = Task.Run(async () =>                  {                      try                      {                          //only allow one reader to execute' dump out all other requests                          if (Interlocked.Increment(ref _ensureOneActiveReader) != 1) return;                            while (_disposeToken.IsCancellationRequested == false)                          {                              try                              {                                  _log.DebugFormat("Awaiting message from: {0}"' _client.Endpoint);                                  var messageSizeResult = await _client.ReadAsync(4' _disposeToken.Token).ConfigureAwait(false);                                  var messageSize = messageSizeResult.ToInt32();                                    _log.DebugFormat("Received message of size: {0} From: {1}"' messageSize' _client.Endpoint);                                  var message = await _client.ReadAsync(messageSize' _disposeToken.Token).ConfigureAwait(false);                                    CorrelatePayloadToRequest(message);                              }                              catch (Exception ex)                              {                                  //don't record the exception if we are disposing                                  if (_disposeToken.IsCancellationRequested == false)                                  {                                      //TODO being in sync with the byte order on read is important.  What happens if this exception causes us to be out of sync?                                      //record exception and continue to scan for data.                                      _log.ErrorFormat("Exception occured in polling read thread.  Exception={0}"' ex);                                  }                              }                          }                      }                      finally                      {                          Interlocked.Decrement(ref _ensureOneActiveReader);                          _log.DebugFormat("Closed down connection to: {0}"' _client.Endpoint);                      }                  });
Magic Number,KafkaNet,KafkaConnection,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\KafkaConnection.cs,CorrelatePayloadToRequest,The following statement contains a magic number: var correlationId = payload.Take(4).ToArray().ToInt32();
Magic Number,KafkaNet,KafkaConnection,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\KafkaConnection.cs,NextCorrelationId,The following statement contains a magic number: id > int.MaxValue - 100
Magic Number,KafkaNet,KafkaTcpSocket,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\KafkaTcpSocket.cs,Dispose,The following statement contains a magic number: _socketTask.SafeWait(TimeSpan.FromSeconds(30));
Magic Number,KafkaNet.Model,ConsumerOptions,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Model\ConsumerOptions.cs,ConsumerOptions,The following statement contains a magic number: TopicPartitionQueryTimeMs = (int)TimeSpan.FromMinutes(15).TotalMilliseconds;
Magic Number,KafkaNet.Protocol,Fetch,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Protocol\FetchRequest.cs,Fetch,The following statement contains a magic number: MaxBytes = FetchRequest.DefaultMinBlockingByteBufferSize * 8;
Magic Number,KafkaNet.Protocol,Message,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Protocol\Message.cs,DecodeMessage,The following statement contains a magic number: var crc = payload.Take(4).ToArray();
Magic Number,KafkaNet.Protocol,OffsetPosition,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Protocol\OffsetRequest.cs,GetHashCode,The following statement contains a magic number: return (PartitionId * 397) ^ Offset.GetHashCode();
Magic Number,KafkaNet.Protocol,ProduceResponse,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Protocol\ProduceRequest.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ PartitionId;
Magic Number,KafkaNet.Protocol,ProduceResponse,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Protocol\ProduceRequest.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Error.GetHashCode();
Magic Number,KafkaNet.Protocol,ProduceResponse,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Protocol\ProduceRequest.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Offset.GetHashCode();
Missing Default,KafkaNet.Common,BigEndianBinaryWriter,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryWriter.cs,Write,The following switch statement is missing a default case: switch (encoding)              {                  case StringPrefixEncoding.Int16:                      Write((Int16)value.Length);                      break;                  case StringPrefixEncoding.Int32:                      Write(value.Length);                      break;              }
Missing Default,KafkaNet.Common,BigEndianBinaryWriter,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Common\BigEndianBinaryWriter.cs,Write,The following switch statement is missing a default case: switch (encoding)              {                  case StringPrefixEncoding.Int16:                      Write((Int16)value.Length);                      break;                  case StringPrefixEncoding.Int32:                      Write(value.Length);                      break;              }
Missing Default,KafkaNet.Statistics,StatisticsTracker,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Statistics\StatisticsTracker.cs,IncrementGauge,The following switch statement is missing a default case: switch (gauge)              {                  case StatisticGauge.ActiveReadOperation:                      Interlocked.Increment(ref Gauges.ActiveReadOperation);                      break;                  case StatisticGauge.ActiveWriteOperation:                      Interlocked.Increment(ref Gauges.ActiveWriteOperation);                      break;                  case StatisticGauge.QueuedWriteOperation:                      Interlocked.Increment(ref Gauges.QueuedWriteOperation);                      break;              }
Missing Default,KafkaNet.Statistics,StatisticsTracker,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\Statistics\StatisticsTracker.cs,DecrementGauge,The following switch statement is missing a default case: switch (gauge)              {                  case StatisticGauge.ActiveReadOperation:                      Interlocked.Decrement(ref Gauges.ActiveReadOperation);                      break;                  case StatisticGauge.ActiveWriteOperation:                      Interlocked.Decrement(ref Gauges.ActiveWriteOperation);                      break;                  case StatisticGauge.QueuedWriteOperation:                      Interlocked.Decrement(ref Gauges.QueuedWriteOperation);                      break;              }
Missing Default,KafkaNet,KafkaMetadataProvider,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\KafkaMetadataProvider.cs,Get,The following switch statement is missing a default case: switch (validation.Status)                      {                          case ValidationResult.Retry:                              performRetry = true;                              _log.WarnFormat(validation.Message);                              break;                          case ValidationResult.Error:                              throw validation.Exception;                      }
Missing Default,KafkaNet,KafkaMetadataProvider,D:\research\architectureSmells\repos\Jroland_kafka-net\src\kafka-net\KafkaMetadataProvider.cs,ValidateTopic,The following switch statement is missing a default case: switch (errorCode)                  {                      case ErrorResponseCode.LeaderNotAvailable:                      case ErrorResponseCode.OffsetsLoadInProgressCode:                      case ErrorResponseCode.ConsumerCoordinatorNotAvailableCode:                          return new MetadataValidationResult                          {                              Status = ValidationResult.Retry'                              ErrorCode = errorCode'                              Message = string.Format("Topic:{0} returned error code of {1}.  Retrying."' topic.Name' errorCode)                          };                  }
