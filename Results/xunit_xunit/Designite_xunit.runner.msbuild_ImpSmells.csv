Implementation smell,Namespace,Class,File,Method,Description
Long Method,Xunit.Runner.MSBuild,xunit,C:\repos\xunit_xunit\src\xunit.runner.msbuild\xunit.cs,Execute,The method has 110 lines of code.
Complex Method,Xunit.Runner.MSBuild,xunit,C:\repos\xunit_xunit\src\xunit.runner.msbuild\xunit.cs,Execute,Cyclomatic complexity of the method is 9
Long Parameter List,Xunit.Runner.MSBuild,CrossPlatform,C:\repos\xunit_xunit\src\xunit.runner.msbuild\Utility\CrossPlatform.cs,Transform,The method has 5 parameters. Parameters: logger' outputDisplayName' resourceName' xml' outputFile
Long Identifier,Xunit.Runner.MSBuild,xunit,C:\repos\xunit_xunit\src\xunit.runner.msbuild\xunit.cs,Execute,The length of the parameter internalDiagnosticsMessageSink is 30.
Long Statement,Xunit.Runner.MSBuild,DiagnosticMessageSink,C:\repos\xunit_xunit\src\xunit.runner.msbuild\Sinks\DiagnosticMessageSink.cs,ForDiagnostics,The length of the statement  "                result.Diagnostics.DiagnosticMessageEvent += args => log.LogWarning("{0}: {1}"' assemblyDisplayName' args.Message.Message); " is 123.
Long Statement,Xunit.Runner.MSBuild,CrossPlatform,C:\repos\xunit_xunit\src\xunit.runner.msbuild\Utility\CrossPlatform.cs,Transform,The length of the statement  "            using (var xsltReader = XmlReader.Create(typeof(xunit).Assembly.GetManifestResourceStream("Xunit.Runner.MSBuild." + resourceName))) " is 131.
Long Statement,Xunit.Runner.MSBuild,xunit,C:\repos\xunit_xunit\src\xunit.runner.msbuild\xunit.cs,Execute,The length of the statement  "                        Log.LogError("MaxParallelThreads value '{0}' is invalid: must be 'default'' 'unlimited'' or a positive number"' MaxParallelThreads); " is 132.
Long Statement,Xunit.Runner.MSBuild,xunit,C:\repos\xunit_xunit\src\xunit.runner.msbuild\xunit.cs,Execute,The length of the statement  "                    var projectAssembly = new XunitProjectAssembly { AssemblyFilename = assemblyFileName' ConfigFilename = configFileName }; " is 120.
Long Statement,Xunit.Runner.MSBuild,xunit,C:\repos\xunit_xunit\src\xunit.runner.msbuild\xunit.cs,Execute,The length of the statement  "                    reporterMessageHandler.OnMessage(new TestExecutionSummary(clockTime.Elapsed' completionMessages.OrderBy(kvp => kvp.Key).ToList())); " is 131.
Long Statement,Xunit.Runner.MSBuild,xunit,C:\repos\xunit_xunit\src\xunit.runner.msbuild\xunit.cs,ExecuteAssembly,The length of the statement  "                var diagnosticMessageSink = DiagnosticMessageSink.ForDiagnostics(Log' assemblyDisplayName' assembly.Configuration.DiagnosticMessagesOrDefault); " is 143.
Long Statement,Xunit.Runner.MSBuild,xunit,C:\repos\xunit_xunit\src\xunit.runner.msbuild\xunit.cs,ExecuteAssembly,The length of the statement  "                using (var controller = new XunitFrontController(appDomainSupport' assembly.AssemblyFilename' assembly.ConfigFilename' shadowCopy' diagnosticMessageSink: diagnosticMessageSink)) " is 177.
Long Statement,Xunit.Runner.MSBuild,xunit,C:\repos\xunit_xunit\src\xunit.runner.msbuild\xunit.cs,ExecuteAssembly,The length of the statement  "                    reporterMessageHandler.OnMessage(new TestAssemblyDiscoveryStarting(assembly' controller.CanUseAppDomains && appDomainSupport != AppDomainSupport.Denied' shadowCopy' discoveryOptions)); " is 184.
Long Statement,Xunit.Runner.MSBuild,xunit,C:\repos\xunit_xunit\src\xunit.runner.msbuild\xunit.cs,ExecuteAssembly,The length of the statement  "                    reporterMessageHandler.OnMessage(new TestAssemblyDiscoveryFinished(assembly' discoveryOptions' testCasesDiscovered' testCasesToRun)); " is 133.
Long Statement,Xunit.Runner.MSBuild,xunit,C:\repos\xunit_xunit\src\xunit.runner.msbuild\xunit.cs,ExecuteAssembly,The length of the statement  "                        IExecutionSink resultsSink = new DelegatingExecutionSummarySink(reporterMessageHandler' () => cancel' (path' summary) => completionMessages.TryAdd(path' summary)); " is 163.
Long Statement,Xunit.Runner.MSBuild,xunit,C:\repos\xunit_xunit\src\xunit.runner.msbuild\xunit.cs,ExecuteAssembly,The length of the statement  "                            resultsSink = new DelegatingLongRunningTestDetectionSink(resultsSink' TimeSpan.FromSeconds(longRunningSeconds)' diagnosticMessageSink); " is 135.
Long Statement,Xunit.Runner.MSBuild,xunit,C:\repos\xunit_xunit\src\xunit.runner.msbuild\xunit.cs,ExecuteAssembly,The length of the statement  "                        reporterMessageHandler.OnMessage(new TestAssemblyExecutionFinished(assembly' executionOptions' resultsSink.ExecutionSummary)); " is 126.
Long Statement,Xunit.Runner.MSBuild,xunit,C:\repos\xunit_xunit\src\xunit.runner.msbuild\xunit.cs,GetAvailableRunnerReporters,The length of the statement  "                    if (type == null || type.GetTypeInfo().IsAbstract || type == typeof(DefaultRunnerReporter) || type == typeof(DefaultRunnerReporterWithTypes) || !type.GetInterfaces().Any(t => t == typeof(IRunnerReporter))) " is 205.
Long Statement,Xunit.Runner.MSBuild,xunit,C:\repos\xunit_xunit\src\xunit.runner.msbuild\xunit.cs,GetAvailableRunnerReporters,The length of the statement  "                        Log.LogWarning("Type {0} in assembly {1} appears to be a runner reporter' but does not have an empty constructor."' type.FullName' dllFile); " is 140.
Long Statement,Xunit.Runner.MSBuild,xunit,C:\repos\xunit_xunit\src\xunit.runner.msbuild\xunit.cs,GetReporter,The length of the statement  "                    var switchableReporters = reporters.Where(r => !string.IsNullOrWhiteSpace(r.RunnerSwitch)).Select(r => r.RunnerSwitch.ToLowerInvariant()).OrderBy(x => x).ToList(); " is 163.
Long Statement,Xunit.Runner.MSBuild,xunit,C:\repos\xunit_xunit\src\xunit.runner.msbuild\xunit.cs,GetReporter,The length of the statement  "                        Log.LogError("Reporter value '{0}' is invalid. Available reporters: {1}"' Reporter' string.Join("' "' switchableReporters)); " is 124.
Complex Conditional,Xunit.Runner.MSBuild,xunit,C:\repos\xunit_xunit\src\xunit.runner.msbuild\xunit.cs,GetAvailableRunnerReporters,The conditional expression  "type == null || type.GetTypeInfo().IsAbstract || type == typeof(DefaultRunnerReporter) || type == typeof(DefaultRunnerReporterWithTypes) || !type.GetInterfaces().Any(t => t == typeof(IRunnerReporter))"  is complex.
Magic Number,Xunit.Runner.MSBuild,TraitParser,C:\repos\xunit_xunit\src\xunit.runner.msbuild\Utility\TraitParser.cs,Parse,The following statement contains a magic number: if (!string.IsNullOrEmpty(traits))              {                  foreach (var trait in traits.Split(TraitSeperator' StringSplitOptions.RemoveEmptyEntries))                  {                      var pieces = trait.Split(KeyValueSeperator' 2);                        if (pieces.Length != 2 || string.IsNullOrEmpty(pieces[0]) || string.IsNullOrEmpty(pieces[1]))                      {                          OnWarning($"Invalid trait '{trait}'. The format should be 'name=value'. This trait will be ignored.");                          continue;                      }                        traitsDictionary.Add(pieces[0].Trim()' pieces[1].Trim());                  }              }
Magic Number,Xunit.Runner.MSBuild,TraitParser,C:\repos\xunit_xunit\src\xunit.runner.msbuild\Utility\TraitParser.cs,Parse,The following statement contains a magic number: if (!string.IsNullOrEmpty(traits))              {                  foreach (var trait in traits.Split(TraitSeperator' StringSplitOptions.RemoveEmptyEntries))                  {                      var pieces = trait.Split(KeyValueSeperator' 2);                        if (pieces.Length != 2 || string.IsNullOrEmpty(pieces[0]) || string.IsNullOrEmpty(pieces[1]))                      {                          OnWarning($"Invalid trait '{trait}'. The format should be 'name=value'. This trait will be ignored.");                          continue;                      }                        traitsDictionary.Add(pieces[0].Trim()' pieces[1].Trim());                  }              }
Magic Number,Xunit.Runner.MSBuild,xunit,C:\repos\xunit_xunit\src\xunit.runner.msbuild\xunit.cs,Execute,The following statement contains a magic number: var environment = $"{IntPtr.Size * 8}-bit {CrossPlatform.Version}";
