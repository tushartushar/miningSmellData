Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Spruce.Schema,DbExtensions,C:\repos\jgeurts_spruce\Spruce\Schema\DbExtensions.cs,CreateTable,Cyclomatic complexity of the method is 8
Complex Method,Spruce.Schema,DbExtensions,C:\repos\jgeurts_spruce\Spruce\Schema\DbExtensions.cs,GetColumns,Cyclomatic complexity of the method is 8
Long Parameter List,Spruce,DbConnectionExtensions,C:\repos\jgeurts_spruce\Spruce\DbConnectionExtensions.cs,Insert,The method has 5 parameters. Parameters: db' item' allColumns' primary' transaction
Long Parameter List,Spruce,DbConnectionExtensions,C:\repos\jgeurts_spruce\Spruce\DbConnectionExtensions.cs,PagedListSql,The method has 5 parameters. Parameters: db' page' pageSize' where' orderBy
Long Parameter List,Spruce,DbConnectionExtensions,C:\repos\jgeurts_spruce\Spruce\DbConnectionExtensions.cs,PagedList,The method has 7 parameters. Parameters: db' page' pageSize' where' orderBy' param' transaction
Long Identifier,Spruce,SpruceSettings,C:\repos\jgeurts_spruce\Spruce\SpruceSettings.cs,,The length of the parameter UndefinedFieldTypeStringLength is 30.
Long Statement,Spruce,DbConnectionExtensions,C:\repos\jgeurts_spruce\Spruce\DbConnectionExtensions.cs,GetTableName,The length of the statement  "					//NOTE: This as dynamic trick should be able to handle dapper.contrib's Table-attribute as well as the one in EntityFramework  " is 125.
Long Statement,Spruce,DbConnectionExtensions,C:\repos\jgeurts_spruce\Spruce\DbConnectionExtensions.cs,GetTableName,The length of the statement  "					var tableattr = type.GetCustomAttributes(false).SingleOrDefault(attr => attr.GetType().Name == "TableAttribute") as dynamic; " is 124.
Long Statement,Spruce.Schema,DbExtensions,C:\repos\jgeurts_spruce\Spruce\Schema\DbExtensions.cs,DropTable,The length of the statement  "			db.Execute("IF EXISTS(SELECT 1 FROM sys.objects WHERE OBJECT_ID = OBJECT_ID(N'{0}') AND type = (N'U')) DROP TABLE [{0}]".Fmt(name)); " is 132.
Long Statement,Spruce.Schema,DbExtensions,C:\repos\jgeurts_spruce\Spruce\Schema\DbExtensions.cs,GetColumns,The length of the statement  "					var isPrimary = (!hasIdField && isFirst) || pkAttribute != null || property.Name.Equals("Id"' StringComparison.OrdinalIgnoreCase); " is 130.
Long Statement,Spruce.Schema,DbExtensions,C:\repos\jgeurts_spruce\Spruce\Schema\DbExtensions.cs,GetColumns,The length of the statement  "					var isNullableType = property.PropertyType.IsGenericType && property.PropertyType.GetGenericTypeDefinition() == typeof(Nullable<>); " is 131.
Long Statement,Spruce.Schema,DbExtensions,C:\repos\jgeurts_spruce\Spruce\Schema\DbExtensions.cs,GetColumns,The length of the statement  "					var isNullable = (!property.PropertyType.IsValueType && property.FirstAttribute<RequiredAttribute>() == null) || isNullableType; " is 128.
Long Statement,Spruce.Schema,DbExtensions,C:\repos\jgeurts_spruce\Spruce\Schema\DbExtensions.cs,GetColumns,The length of the statement  "					var columnAttr = property.GetCustomAttributes(false).SingleOrDefault(attr => attr.GetType().Name == "ColumnAttribute") as dynamic; " is 130.
Long Statement,Spruce.Schema,DbExtensions,C:\repos\jgeurts_spruce\Spruce\Schema\DbExtensions.cs,GetColumns,The length of the statement  "						// TODO: Separate out logic for getting primary columns. The code below will infinite loop if two tables reference each other. " is 126.
Long Statement,Spruce.Schema,DbExtensions,C:\repos\jgeurts_spruce\Spruce\Schema\DbExtensions.cs,AddColumn,The length of the statement  "				sql += " NOT NULL CONSTRAINT DF_{0}_{1} DEFAULT {2}".Fmt(table' column.Name' (column.Type == typeof(string)) ? "N'{0}'".Fmt(defaultValue) : defaultValue); " is 154.
Long Statement,Spruce.Schema,DbExtensions,C:\repos\jgeurts_spruce\Spruce\Schema\DbExtensions.cs,AddColumn,The length of the statement  "				sql += ";ALTER TABLE [{0}] ADD CONSTRAINT [{1}] FOREIGN KEY ([{2}]) REFERENCES [{3}] ([{4}]) ON UPDATE  NO ACTION ON DELETE  NO ACTION ".Fmt( " is 141.
Long Statement,Spruce.Schema,DbExtensions,C:\repos\jgeurts_spruce\Spruce\Schema\DbExtensions.cs,DropColumn,The length of the statement  "	SELECT 	Constraint_Name from [INFORMATION_SCHEMA].[CONSTRAINT_COLUMN_USAGE] where [Table_Name] = '{0}' AND [Column_Name] = '{1}' " is 128.
Long Statement,Spruce.Schema,DbExtensions,C:\repos\jgeurts_spruce\Spruce\Schema\DbExtensions.cs,GetSqlType,The length of the statement  "				sqlType = SpruceSettings.SqlSchemaTypeMap[typeof(string)].Fmt(SpruceSettings.UndefinedFieldTypeStringLength.HasValue ? SpruceSettings.UndefinedFieldTypeStringLength.Value.ToString() : "MAX"); " is 191.
Long Statement,Spruce.Schema,DbExtensions,C:\repos\jgeurts_spruce\Spruce\Schema\DbExtensions.cs,ShouldQueryExplicitColumns,The length of the statement  "				var attribute = type.GetCustomAttributes(false).SingleOrDefault(attr => attr.GetType().Name == "QueryExplicitColumnsAttribute") as dynamic; " is 139.
Empty Catch Block,Spruce,DbConnectionExtensions,C:\repos\jgeurts_spruce\Spruce\DbConnectionExtensions.cs,BulkInsert,The method has an empty catch block.
Magic Number,Spruce,DbConnectionExtensions,C:\repos\jgeurts_spruce\Spruce\DbConnectionExtensions.cs,BulkInsert,The following statement contains a magic number: using (var bulkInsert = new SqlBulkCopy(connection' SqlBulkCopyOptions.Default' transaction))  			{  				bulkInsert.DestinationTableName = db.GetTableName<T>();  				var count = 0;  				DataTable dt = null;  				var columns = db.GetColumns<T>().Where(x => !x.IsPrimary);  				foreach (var item in items)  				{  					if (dt == null)  					{  						dt = new DataTable(bulkInsert.DestinationTableName);  						foreach (var column in columns)  						{  							dt.Columns.Add(column.Name' column.Type);  							bulkInsert.ColumnMappings.Add(column.Name' column.Name);  						}  					}    					SpruceSettings.OnSaving(item);    					var row = dt.NewRow();  					foreach (var column in columns)  					{  						row.SetField(column.Name' column.GetValue(item));  					}  					dt.Rows.Add(row);    					totalCount++;  					// Insert in blocks of 5'000 rows  					if (++count % 5000 == 0)  					{  						bulkInsert.WriteToServer(dt);  						dt.Clear();  					}    				}  				if (dt != null && dt.Rows.Count > 0)  				{  					bulkInsert.WriteToServer(dt);  				}  			}
Magic Number,Spruce.Schema,DbExtensions,C:\repos\jgeurts_spruce\Spruce\Schema\DbExtensions.cs,TableExists,The following statement contains a magic number: if (name.Contains("."))  			{  				var parts = name.Split('.');  				if (parts.Count() == 2)  				{  					schemaName = parts[0];  					name = parts[1];  				}  			}
Missing Default,Spruce.Schema,DbExtensions,C:\repos\jgeurts_spruce\Spruce\Schema\DbExtensions.cs,GetMemberInfo,The following switch statement is missing a default case: switch (lambda.Body.NodeType)  			{  				case ExpressionType.Convert:  					memberExpr = ((UnaryExpression) lambda.Body).Operand as MemberExpression;  					break;  				case ExpressionType.MemberAccess:  					memberExpr = lambda.Body as MemberExpression;  					break;  			}
