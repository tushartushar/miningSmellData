Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ConsoleControl.WPF,ConsoleControl,D:\research\architectureSmells\repos\dwmkerr_consolecontrol\source\ConsoleControl.WPF\ConsoleControl.xaml.cs,StartProcess,The length of the statement  "                    WriteOutput(" with arguments " + processStartInfo.Arguments + "." + Environment.NewLine' Color.FromArgb(255' 0' 255' 0));" is 121.
Long Statement,ConsoleControl.WPF,ConsoleControl,D:\research\architectureSmells\repos\dwmkerr_consolecontrol\source\ConsoleControl.WPF\ConsoleControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/ConsoleControl.WPF;component/consolecontrol.xaml"' System.UriKind.Relative); " is 122.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,D:\research\architectureSmells\repos\dwmkerr_consolecontrol\source\ConsoleControl.WPF\obj\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Complex Conditional,ConsoleControl.WPF,ConsoleControl,D:\research\architectureSmells\repos\dwmkerr_consolecontrol\source\ConsoleControl.WPF\ConsoleControl.xaml.cs,richTextBoxConsole_PreviewKeyDown,The conditional expression  "!(e.Key == Key.Left ||                     e.Key == Key.Right ||                     e.Key == Key.Up ||                     e.Key == Key.Down ||                     (e.Key == Key.C && Keyboard.Modifiers.HasFlag(ModifierKeys.Control)))"  is complex.
Magic Number,ConsoleControl.WPF,ConsoleControl,D:\research\architectureSmells\repos\dwmkerr_consolecontrol\source\ConsoleControl.WPF\ConsoleControl.xaml.cs,ProcessInterface_OnProcessExit,The following statement contains a magic number: RunOnUIDispatcher(() =>                 {                     //  Are we showing diagnostics?                     if (ShowDiagnostics)                     {                         WriteOutput(Environment.NewLine + processInterface.ProcessFileName + " exited."' Color.FromArgb(255' 0' 255' 0));                     }                      richTextBoxConsole.IsReadOnly = true;                      //  And we're no longer running.                     IsProcessRunning = false;                 });
Magic Number,ConsoleControl.WPF,ConsoleControl,D:\research\architectureSmells\repos\dwmkerr_consolecontrol\source\ConsoleControl.WPF\ConsoleControl.xaml.cs,ProcessInterface_OnProcessExit,The following statement contains a magic number: RunOnUIDispatcher(() =>                 {                     //  Are we showing diagnostics?                     if (ShowDiagnostics)                     {                         WriteOutput(Environment.NewLine + processInterface.ProcessFileName + " exited."' Color.FromArgb(255' 0' 255' 0));                     }                      richTextBoxConsole.IsReadOnly = true;                      //  And we're no longer running.                     IsProcessRunning = false;                 });
Magic Number,ConsoleControl.WPF,ConsoleControl,D:\research\architectureSmells\repos\dwmkerr_consolecontrol\source\ConsoleControl.WPF\ConsoleControl.xaml.cs,StartProcess,The following statement contains a magic number: WriteOutput("Preparing to run " + processStartInfo.FileName' Color.FromArgb(255' 0' 255' 0));
Magic Number,ConsoleControl.WPF,ConsoleControl,D:\research\architectureSmells\repos\dwmkerr_consolecontrol\source\ConsoleControl.WPF\ConsoleControl.xaml.cs,StartProcess,The following statement contains a magic number: WriteOutput("Preparing to run " + processStartInfo.FileName' Color.FromArgb(255' 0' 255' 0));
Magic Number,ConsoleControl.WPF,ConsoleControl,D:\research\architectureSmells\repos\dwmkerr_consolecontrol\source\ConsoleControl.WPF\ConsoleControl.xaml.cs,StartProcess,The following statement contains a magic number: WriteOutput(" with arguments " + processStartInfo.Arguments + "." + Environment.NewLine' Color.FromArgb(255' 0' 255' 0));
Magic Number,ConsoleControl.WPF,ConsoleControl,D:\research\architectureSmells\repos\dwmkerr_consolecontrol\source\ConsoleControl.WPF\ConsoleControl.xaml.cs,StartProcess,The following statement contains a magic number: WriteOutput(" with arguments " + processStartInfo.Arguments + "." + Environment.NewLine' Color.FromArgb(255' 0' 255' 0));
Missing Default,ConsoleControl.WPF,ConsoleControl,D:\research\architectureSmells\repos\dwmkerr_consolecontrol\source\ConsoleControl.WPF\ConsoleControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.richTextBoxConsole = ((System.Windows.Controls.RichTextBox)(target));              return;              }
