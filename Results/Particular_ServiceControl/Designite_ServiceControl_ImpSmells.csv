Implementation smell,Namespace,Class,File,Method,Description
Long Method,Particular.ServiceControl.Hosting,HostArguments,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Hosting\HostArguments.cs,HostArguments,The method has 102 lines of code.
Long Method,ServiceControl.Infrastructure.RavenDB.Expiration,AuditMessageCleaner,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\RavenDB\Expiration\AuditMessageCleaner.cs,Clean,The method has 102 lines of code.
Complex Method,ServiceControl.Contracts.Operations,EndpointDetailsParser,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Operations\EndpointDetailsParser.cs,ReceivingEndpoint,Cyclomatic complexity of the method is 8
Complex Method,Particular.ServiceControl.Hosting,Option,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Hosting\Options.cs,ParsePrototype,Cyclomatic complexity of the method is 10
Complex Method,Particular.ServiceControl.Hosting,Option,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Hosting\Options.cs,AddSeparators,Cyclomatic complexity of the method is 8
Complex Method,Particular.ServiceControl.Hosting,OptionSet,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Hosting\Options.cs,WriteOptionPrototype,Cyclomatic complexity of the method is 8
Complex Method,Particular.ServiceControl.Hosting,OptionSet,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Hosting\Options.cs,GetDescription,Cyclomatic complexity of the method is 12
Complex Method,ServiceControl.Infrastructure.Extensions,RavenQueryExtensions,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Extensions\RavenQueryExtensions.cs,Sort,Cyclomatic complexity of the method is 8
Complex Method,ServiceControl.Infrastructure.Extensions,RavenQueryExtensions,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Extensions\RavenQueryExtensions.cs,FilterByStatusWhere,Cyclomatic complexity of the method is 8
Complex Method,ServiceControl.Infrastructure.Extensions,RavenQueryExtensions,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Extensions\RavenQueryExtensions.cs,Sort,Cyclomatic complexity of the method is 12
Complex Method,ServiceControl.Infrastructure.WebApi,Negotiator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\WebApi\Negotiator.cs,WithPagingLinks,Cyclomatic complexity of the method is 12
Complex Method,ServiceControl.Recoverability,ArchiveAllInGroupHandler,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Archiving\ArchiveAllInGroupHandler.cs,Handle,Cyclomatic complexity of the method is 8
Complex Method,ServiceControl.Recoverability,ReturnToSender,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\Infrastructure\ReturnToSender.cs,HandleMessage,Cyclomatic complexity of the method is 9
Complex Method,ServiceControl.Recoverability,RetryProcessor,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\RetryProcessor.cs,ForwardCurrentBatch,Cyclomatic complexity of the method is 8
Complex Method,ServiceControl.SagaAudit,SagaRelationshipsEnricher,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\SagaAudit\SagaAuditing.cs,Enrich,Cyclomatic complexity of the method is 10
Long Parameter List,ServiceControl,StackTraceParser,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\App_Packages\StackTraceParser\StackTraceParser.cs,Parse,The method has 7 parameters. Parameters: text' tokenSelector' methodSelector' parameterSelector' parametersSelector' sourceLocationSelector' selector
Long Parameter List,ServiceControl.CustomChecks,CustomChecksStorage,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\CustomChecks\CustomChecksStorage.cs,UpdateCustomCheckStatus,The method has 6 parameters. Parameters: originatingEndpoint' reportedAt' customCheckId' category' hasFailed' failureReason
Long Parameter List,ServiceControl.ExternalIntegrations,EventDispatcher,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\ExternalIntegrations\EventDispatcher.cs,EventDispatcher,The method has 5 parameters. Parameters: store' domainEvents' criticalError' settings' eventPublishers
Long Parameter List,Particular.ServiceControl.Hosting,OptionSet,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Hosting\Options.cs,GetOptionParts,The method has 5 parameters. Parameters: argument' flag' name' sep' value
Long Parameter List,ServiceBus.Management.Infrastructure,NServiceBusFactory,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\NServiceBusFactory.cs,Create,The method has 8 parameters. Parameters: settings' transportCustomization' transportSettings' loggingSettings' container' documentStore' configuration' isRunningAcceptanceTests
Long Parameter List,ServiceBus.Management.Infrastructure,NServiceBusFactory,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\NServiceBusFactory.cs,CreateAndStart,The method has 8 parameters. Parameters: settings' transportCustomization' transportSettings' loggingSettings' container' documentStore' configuration' isRunningAcceptanceTests
Long Parameter List,ServiceControl.Operations,ErrorIngestion,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Operations\ErrorIngestion.cs,ErrorIngestion,The method has 6 parameters. Parameters: errorIngestor' errorQueue' rawEndpointFactory' documentStore' loggingSettings' onCriticalError
Long Parameter List,ServiceControl.Operations,ErrorIngestionComponent,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Operations\ErrorIngestionComponent.cs,ErrorIngestionComponent,The method has 9 parameters. Parameters: settings' documentStore' domainEvents' rawEndpointFactory' loggingSettings' bodyStorageEnricher' enrichers' failedMessageEnrichers' ingestionState
Long Parameter List,ServiceControl.Operations,Watchdog,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Operations\Watchdog.cs,Watchdog,The method has 7 parameters. Parameters: ensureStarted' ensureStopped' reportFailure' clearFailure' timeToWaitBetweenStartupAttempts' log' processName
Long Parameter List,ServiceControl.Infrastructure.RavenDB.Expiration,Chunker,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\RavenDB\Expiration\Chunker.cs,ExecuteInChunks,The method has 5 parameters. Parameters: total' action' t1' t2' token
Long Parameter List,ServiceControl.Infrastructure.RavenDB,Extensions,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\RavenDB\Extensions.cs,Query,The method has 6 parameters. Parameters: db' index' query' externalCancellationToken' onItem' state
Long Parameter List,ServiceControl.Infrastructure.RavenDB.Subscriptions,SubscriptionPersister,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\RavenDB\Subscriptions\SubscriptionPersister.cs,SubscriptionPersister,The method has 5 parameters. Parameters: store' settings' endpointName' localAddress' locallyHandledEventTypes
Long Parameter List,ServiceControl.Infrastructure.WebApi,Negotiator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\WebApi\Negotiator.cs,AddLink,The method has 5 parameters. Parameters: links' page' rel' uriPath' queryParams
Long Parameter List,ServiceControl.Operations.BodyStorage,BodyStorageEnricher,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Operations\BodyStorage\BodyStorageFeature.cs,StoreBody,The method has 5 parameters. Parameters: body' headers' metadata' bodySize' contentType
Long Parameter List,ServiceControl.Recoverability,ArchiveAllInGroupHandler,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Archiving\ArchiveAllInGroupHandler.cs,ArchiveAllInGroupHandler,The method has 5 parameters. Parameters: store' domainEvents' documentManager' archiveOperationManager' retryingManager
Long Parameter List,ServiceControl.Recoverability,ArchiveDocumentManager,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Archiving\ArchiveDocumentManager.cs,CreateArchiveOperation,The method has 6 parameters. Parameters: session' groupId' archiveType' numberOfMessages' groupName' batchSize
Long Parameter List,ServiceControl.Recoverability,OperationProgressCalculator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\OperationProgressCalculator.cs,CalculateProgress,The method has 5 parameters. Parameters: totalNumberOfMessages' numberOfMessagesPrepared' numberOfMessagesForwarded' numberOfMessagesSkipped' state
Long Parameter List,ServiceControl.Recoverability,ReturnToSenderDequeuer,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\Infrastructure\ReturnToSenderDequeuer.cs,ReturnToSenderDequeuer,The method has 5 parameters. Parameters: returnToSender' store' domainEvents' inputAddress' rawEndpointFactory
Long Parameter List,ServiceControl.Recoverability,InMemoryRetry,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\InMemoryRetry.cs,PrepareAdoptedBatch,The method has 5 parameters. Parameters: numberOfMessagesPrepared' originator' classifier' startTime' last
Long Parameter List,ServiceControl.Recoverability,RetriesGateway,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\RetriesGateway.cs,StartRetryForIndex,The method has 6 parameters. Parameters: requestId' retryType' startTime' filter' originator' classifier
Long Parameter List,ServiceControl.Recoverability,RetriesGateway,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\RetriesGateway.cs,StageRetryByUniqueMessageIds,The method has 8 parameters. Parameters: requestId' retryType' messageIds' startTime' last' originator' batchName' classifier
Long Parameter List,ServiceControl.Recoverability,IndexBasedBulkRetryRequest<TType;TIndex>,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\RetriesGateway.cs,IndexBasedBulkRetryRequest,The method has 6 parameters. Parameters: requestId' retryType' originator' classifier' startTime' filter
Long Parameter List,ServiceControl.Recoverability,RetryDocumentManager,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\RetryDocumentManager.cs,CreateBatchDocument,The method has 8 parameters. Parameters: requestId' retryType' failedMessageRetryIds' originator' startTime' last' batchName' classifier
Long Parameter List,ServiceControl.Recoverability,RetryingManager,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\RetryingManager.cs,Wait,The method has 6 parameters. Parameters: requestId' retryType' started' originator' classifier' last
Long Parameter List,ServiceControl.Recoverability,RetryingManager,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\RetryingManager.cs,PreparedAdoptedBatch,The method has 8 parameters. Parameters: requestId' retryType' numberOfMessagesPrepared' totalNumberOfMessages' originator' classifier' startTime' last
Long Parameter List,ServiceControl.Recoverability,RetryProcessor,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\RetryProcessor.cs,RetryProcessor,The method has 5 parameters. Parameters: store' sender' domainEvents' returnToSender' retryingManager
Long Parameter List,ServiceControl.Recoverability,RetryProgress,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\RetryProgress.cs,RetryProgress,The method has 5 parameters. Parameters: percentage' messagesPrepared' messagesForwarded' messagesSkipped' messagesRemaining
Long Identifier,ServiceControl.CompositeViews.Messages,QueryStatsInfo,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\CompositeViews\Messages\QueryStatsInfo.cs,QueryStatsInfo,The length of the parameter highestTotalCountOfAllTheInstances is 34.
Long Identifier,ServiceControl.CompositeViews.Messages,QueryStatsInfo,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\CompositeViews\Messages\QueryStatsInfo.cs,,The length of the parameter HighestTotalCountOfAllTheInstances is 34.
Long Identifier,ServiceControl.Operations,Watchdog,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Operations\Watchdog.cs,Watchdog,The length of the parameter timeToWaitBetweenStartupAttempts is 32.
Long Identifier,ServiceControl.Operations,Watchdog,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Operations\Watchdog.cs,,The length of the parameter timeToWaitBetweenStartupAttempts is 32.
Long Identifier,ServiceBus.Management.Infrastructure.Settings,Settings,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Settings\Settings.cs,,The length of the parameter expirationProcessTimerInSeconds is 31.
Long Identifier,ServiceBus.Management.Infrastructure.Settings,Settings,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Settings\Settings.cs,,The length of the parameter ExpirationProcessTimerInSecondsDefault is 38.
Long Identifier,ServiceBus.Management.Infrastructure.Settings,Settings,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Settings\Settings.cs,,The length of the parameter ExpirationProcessBatchSizeDefault is 33.
Long Identifier,ServiceBus.Management.Infrastructure.Settings,Settings,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Settings\Settings.cs,,The length of the parameter ExpirationProcessBatchSizeMinimum is 33.
Long Identifier,ServiceBus.Management.Infrastructure.Settings,Settings,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Settings\Settings.cs,,The length of the parameter DataSpaceRemainingThresholdDefault is 34.
Long Identifier,ServiceControl.Infrastructure.WebApi,Negotiator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\WebApi\Negotiator.cs,WithPagingLinksAndTotalCount,The length of the parameter highestTotalCountOfAllInstances is 31.
Long Identifier,ServiceControl.Infrastructure.WebApi,Negotiator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\WebApi\Negotiator.cs,WithPagingLinks,The length of the parameter highestTotalCountOfAllInstances is 31.
Long Identifier,ServiceControl.Recoverability,ArchivingManager,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Archiving\ArchivingManager.cs,BatchArchived,The length of the parameter numberOfMessagesArchivedInBatch is 31.
Long Identifier,ServiceControl.Recoverability,InMemoryArchive,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Archiving\InMemoryArchive.cs,BatchArchived,The length of the parameter numberOfMessagesArchivedInBatch is 31.
Long Identifier,ServiceControl.Recoverability,HeaderFilter,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\HeaderFilter.cs,,The length of the parameter KeysToRemoveWhenRetryingAMessage is 32.
Long Identifier,ServiceControl.Recoverability,RetryProcessor,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\RetryProcessor.cs,,The length of the parameter isRecoveringFromPrematureShutdown is 33.
Long Identifier,ServiceControl.Recoverability,RetryProcessor,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\RetryProcessor.cs,,The length of the parameter corruptedReplyToHeaderStrategy is 30.
Long Identifier,ServiceControl.Recoverability.Editing,EditHandler,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Editing\EditHandler.cs,,The length of the parameter corruptedReplyToHeaderStrategy is 30.
Long Statement,ServiceControl,HeaderExtensions,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\TransportMessageExtensions.cs,ProcessingEndpointName,The length of the statement  "                throw new Exception($"No processing endpoint could be determined for message ({headers.MessageId()}) with EnclosedMessageTypes ({messageTypes})"); " is 146.
Long Statement,Particular.ServiceControl,Bootstrapper,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Bootstrapper.cs,Initialize,The length of the statement  "            containerBuilder.RegisterSource(new AnyConcreteTypeNotAlreadyRegisteredSource(type => type.Assembly == typeof(Bootstrapper).Assembly && type.GetInterfaces().Any() == false)); " is 174.
Long Statement,Particular.ServiceControl,Bootstrapper,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Bootstrapper.cs,Start,The length of the statement  "            bus = await NServiceBusFactory.CreateAndStart(settings' transportCustomization' transportSettings' loggingSettings' container' documentStore' configuration' isRunningAcceptanceTests) " is 182.
Long Statement,Particular.ServiceControl,LoggingConfigurator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\LoggingConfigurator.cs,ConfigureLogging,The length of the statement  "            var simpleLayout = new SimpleLayout("${longdate}|${threadid}|${level}|${logger}|${message}${onexception:${newline}${exception:format=tostring}}"); " is 146.
Long Statement,Particular.ServiceControl,LoggingConfigurator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\LoggingConfigurator.cs,ConfigureLogging,The length of the statement  "            nlogConfig.LoggingRules.Add(new LoggingRule("Raven.*"' LogLevel.Error' consoleTarget)); //Noise reduction - Only RavenDB errors on the console " is 142.
Long Statement,Particular.ServiceControl,LoggingConfigurator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\LoggingConfigurator.cs,ConfigureLogging,The length of the statement  "            nlogConfig.LoggingRules.Add(new LoggingRule("*"' loggingSettings.LoggingLevel < LogLevel.Info ? loggingSettings.LoggingLevel : LogLevel.Info' consoleTarget)); " is 158.
Long Statement,Particular.ServiceControl,SetupBootstrapper,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\SetupBootstrapper.cs,Run,The length of the statement  "                await NServiceBusFactory.Create(settings' settings.LoadTransportCustomization()' transportSettings' loggingSettings' container' documentStore' configuration' false) " is 164.
Long Statement,ServiceControl.CompositeViews.Messages,ScatterGatherApi<TIn;TOut>,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\CompositeViews\Messages\ScatterGatherApi.cs,FetchAndParse,The length of the statement  "                var rawResponse = await httpClient.SendAsync(new HttpRequestMessage(HttpMethod.Get' instanceUri)).ConfigureAwait(false); " is 120.
Long Statement,ServiceControl.CustomChecks,CustomCheckNotifications,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\CustomChecks\CustomCheckNotifications.cs,UpdateCount,The length of the statement  "                var failedCustomCheckCount = await session.Query<CustomCheck' CustomChecksIndex>().CountAsync(p => p.Status == Status.Fail) " is 123.
Long Statement,ServiceControl.CustomChecks,DeleteCustomCheckHandler,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\CustomChecks\DeleteCustomCheckHandler.cs,Handle,The length of the statement  "            await store.AsyncDatabaseCommands.DeleteAsync(store.Conventions.DefaultFindFullDocumentKeyFromNonStringIdentifier(message.Id' typeof(CustomCheck)' false)' null) " is 160.
Long Statement,ServiceControl.CustomChecks,ReportCustomCheckResultHandler,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\CustomChecks\ReportCustomCheckResultHandler.cs,Handle,The length of the statement  "                throw new Exception("Received an custom check message without proper initialization of the EndpointName in the schema"); " is 120.
Long Statement,ServiceControl.EventLog,AuditEventLogWriter,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\EventLog\AuditEventLogWriter.cs,Handle,The length of the statement  "                // At the moment too much data is being populated in this field' and this has significant down sides to the amount of data we are sending down to ServicePulse (it actually crashes it). " is 184.
Long Statement,ServiceControl.ExternalIntegrations,EventDispatcher,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\ExternalIntegrations\EventDispatcher.cs,OnStart,The length of the statement  "            subscription = store.Changes().ForDocumentsStartingWith("ExternalIntegrationDispatchRequests").Where(c => c.Type == DocumentChangeTypes.Put).Subscribe(OnNext); " is 159.
Long Statement,Particular.ServiceControl.Hosting,OptionSet,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Hosting\Options.cs,ParseValue,The length of the statement  "                throw new OptionException(MessageLocalizer($"Error: Found {c.OptionValues.Count} option values when expecting {c.Option.MaxValueCount}.")' " is 138.
Long Statement,ServiceBus.Management.Infrastructure,NServiceBusFactory,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\NServiceBusFactory.cs,CreateAndStart,The length of the statement  "            var startableEndpoint = await Create(settings' transportCustomization' transportSettings' loggingSettings' container' documentStore' configuration' isRunningAcceptanceTests) " is 173.
Long Statement,ServiceControl.Operations,CheckFreeDiskSpace,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Operations\CheckFreeDiskSpace.cs,PerformCheck,The length of the statement  "                : CheckResult.Failed($"{percentRemaining:P0} disk space remaining on data drive '{dataDriveInfo.VolumeLabel} ({dataDriveInfo.RootDirectory})' on '{Environment.MachineName}'."); " is 176.
Long Statement,ServiceControl.Operations,CheckRemotes,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Operations\CheckRemotes.cs,CheckSuccessStatusCode,The length of the statement  "                throw new TimeoutException($"Remote at '{remoteSettings.ApiUri}' doesn't seem to be available. Reason: {e.Message}"' e); " is 120.
Long Statement,ServiceControl.Operations,CheckRemotes,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Operations\CheckRemotes.cs,CheckSuccessStatusCode,The length of the statement  "                throw new TimeoutException($"Remote at '{remoteSettings.ApiUri}' did not respond within the allotted timespan of '{queryTimeout}'."' e); " is 136.
Long Statement,ServiceControl.Operations,ErrorPersister,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Operations\ErrorPersister.cs,SaveToDb,The length of the statement  "                        Value = RavenJToken.FromObject(processingAttempt' Serializer) // Need to specify serializer here because otherwise the $type for EndpointDetails is missing and this causes EventDispatcher to blow up! " is 199.
Long Statement,ServiceControl.Operations,ErrorPersister,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Operations\ErrorPersister.cs,SaveToDb,The length of the statement  "                        Value = RavenJToken.FromObject(processingAttempt' Serializer) // Need to specify serilaizer here because otherwise the $type for EndpointDetails is missing and this causes EventDispatcher to blow up! " is 199.
Long Statement,ServiceControl.Operations,FailedMessageFactory,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Operations\FailedMessageFactory.cs,ParseFailureDetails,The length of the statement  "            DictionaryExtensions.CheckIfKeyExists("NServiceBus.TimeOfFailure"' headers' s => result.TimeOfFailure = DateTimeExtensions.ToUtcDateTime(s)); " is 141.
Long Statement,ServiceControl.Operations,ImportFailedErrors,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Operations\ImportFailedErrors.cs,Run,The length of the statement  "                                var messageContext = new MessageContext(dto.Id' dto.Headers' dto.Body' EmptyTransaction' EmptyTokenSource' EmptyContextBag); " is 124.
Long Statement,ServiceControl.Operations,ImportFailedErrors,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Operations\ImportFailedErrors.cs,Run,The length of the statement  "                Logger.Info($"Done re-importing failed errors. Successfully re-imported {succeeded} messages. Failed re-importing {failed} messages."); " is 135.
Long Statement,ServiceControl.Operations,ImportFailedErrors,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Operations\ImportFailedErrors.cs,Run,The length of the statement  "                    Logger.Warn($"{failed} messages could not be re-imported. This could indicate a problem with the data. Contact Particular support if you need help with recovering the messages."); " is 179.
Long Statement,ServiceControl.Operations,Watchdog,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Operations\Watchdog.cs,Start,The length of the statement  "                        log.Error($"Error while trying to start {processName}. Starting will be retried in {timeToWaitBetweenStartupAttempts}."' e); " is 124.
Long Statement,ServiceControl.Operations,Watchdog,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Operations\Watchdog.cs,Start,The length of the statement  "                    //We don't pass the shutdown token here because it has already been cancelled and we want to ensure we stop the ingestion. " is 122.
Long Statement,ServiceControl.Infrastructure.Extensions,RavenQueryExtensions,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Extensions\RavenQueryExtensions.cs,FilterByLastModifiedRange,The length of the statement  "                throw new Exception("Invalid modified date range' dates need to be in ISO8601 format and it needs to be a range eg. 2016-03-11T00:27:15.474Z...2016-03-16T03:27:15.474Z"); " is 170.
Long Statement,ServiceControl.Infrastructure.Extensions,RavenQueryExtensions,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Extensions\RavenQueryExtensions.cs,FilterByLastModifiedRange,The length of the statement  "                throw new Exception("Invalid modified date range' dates need to be in ISO8601 format and it needs to be a range eg. 2016-03-11T00:27:15.474Z...2016-03-16T03:27:15.474Z"); " is 170.
Long Statement,ServiceControl.Infrastructure.Extensions,RavenQueryExtensions,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Extensions\RavenQueryExtensions.cs,GetQueryStringValue,The length of the statement  "                queryStringDictionary = request.GetQueryNameValuePairs().ToDictionary(x => x.Key' x => x.Value' StringComparer.OrdinalIgnoreCase); " is 130.
Long Statement,ServiceControl.Infrastructure.OWIN,LogApiCalls,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\OWIN\ApiLogger.cs,LogAllIncomingCalls,The length of the statement  "            log.DebugFormat("End {0} ({1}): {2}"' context.Request.Method' context.Response.StatusCode' context.Request.Uri.ToString()); " is 123.
Long Statement,ServiceControl.Infrastructure.RavenDB.Expiration,AuditMessageCleaner,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\RavenDB\Expiration\AuditMessageCleaner.cs,Clean,The length of the statement  "                logger.Info($"Deleted {deletedAuditDocuments} expired audit documents and {deletedAttachments} message body attachments. Batch execution took {stopwatch.ElapsedMilliseconds} ms"); " is 179.
Long Statement,ServiceControl.Infrastructure.RavenDB.Expiration,ErrorMessageCleaner,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\RavenDB\Expiration\ErrorMessageCleaner.cs,Clean,The length of the statement  "                logger.Info($"Deleted {deletedFailedMessage} expired error documents and {deletedAttachments} message body attachments. Batch execution took {stopwatch.ElapsedMilliseconds} ms"); " is 178.
Long Statement,ServiceControl.Infrastructure.RavenDB.Expiration,EventLogItemsCleaner,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\RavenDB\Expiration\EventLogItemsCleaner.cs,Clean,The length of the statement  "                logger.Info($"Deleted {deletionCount} expired event log documents. Batch execution took {stopwatch.ElapsedMilliseconds} ms"); " is 125.
Long Statement,ServiceControl.Infrastructure.RavenDB.Expiration,ExpiredDocumentsCleaner,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\RavenDB\Expiration\ExpiredDocumentsCleaner.cs,RunCleanup,The length of the statement  "            logger.Debug("Trying to find expired FailedMessage documents to delete (with threshold {0})"' threshold.ToString(Default.DateTimeFormatsToWrite' CultureInfo.InvariantCulture)); " is 176.
Long Statement,ServiceControl.Infrastructure.RavenDB.Expiration,ExpiredDocumentsCleaner,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\RavenDB\Expiration\ExpiredDocumentsCleaner.cs,RunCleanup,The length of the statement  "            logger.Debug("Trying to find expired EventLogItem documents to delete (with threshold {0})"' threshold.ToString(Default.DateTimeFormatsToWrite' CultureInfo.InvariantCulture)); " is 175.
Long Statement,ServiceControl.Infrastructure.RavenDB.Expiration,ExpiredDocumentsCleaner,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\RavenDB\Expiration\ExpiredDocumentsCleaner.cs,RunCleanup,The length of the statement  "                logger.Debug("Trying to find expired ProcessedMessage and SagaHistory documents to delete (with threshold {0})"' threshold.ToString(Default.DateTimeFormatsToWrite' CultureInfo.InvariantCulture)); " is 195.
Long Statement,ServiceControl.Infrastructure.RavenDB.Expiration,ExpiredDocumentsCleanerBundle,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\RavenDB\Expiration\ExpiredDocumentsCleanerBundle.cs,Execute,The length of the statement  "                token => ExpiredDocumentsCleaner.RunCleanup(deletionBatchSize' database' RavenBootstrapper.Settings' token)' due' due' e => { logger.ErrorException("Error when trying to find expired documents"' e); }); " is 202.
Long Statement,ServiceControl.Infrastructure.RavenDB.Expiration,SagaHistoryCleaner,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\RavenDB\Expiration\SagaHistoryCleaner.cs,Clean,The length of the statement  "                logger.Info($"Deleted {deletionCount} expired saga history documents. Batch execution took {stopwatch.ElapsedMilliseconds} ms"); " is 128.
Long Statement,ServiceControl.Infrastructure.RavenDB,RavenBootstrapper,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\RavenDB\RavenBootstrapper.cs,ReadLicense,The length of the statement  "            using (var resourceStream = typeof(RavenBootstrapper).Assembly.GetManifestResourceStream("ServiceControl.Infrastructure.RavenDB.RavenLicense.xml")) " is 147.
Long Statement,ServiceControl.Infrastructure.RavenDB,RavenBootstrapper,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\RavenDB\RavenBootstrapper.cs,PurgeKnownEndpointsWithTemporaryIdsThatAreDuplicate,The length of the statement  "                        knownEndpoints.Where(e => e.HasTemporaryId).ForEach(k => { documentStore.DatabaseCommands.Delete(documentStore.Conventions.DefaultFindFullDocumentKeyFromNonStringIdentifier(k.Id' typeof(KnownEndpoint)' false)' null); }); " is 220.
Long Statement,ServiceControl.Infrastructure.RavenDB.Subscriptions,SubscriptionPersister,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\RavenDB\Subscriptions\SubscriptionPersister.cs,Prime,The length of the statement  "                var primeSubscriptions = await LoadSubscriptions(session).ConfigureAwait(false) ?? await MigrateSubscriptions(session' localClient).ConfigureAwait(false); " is 154.
Long Statement,ServiceControl.Infrastructure.RavenDB.Subscriptions,SubscriptionPersister,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\RavenDB\Subscriptions\SubscriptionPersister.cs,CreateSubscriptionClient,The length of the statement  "            //When the subscriber is running V6 and UseLegacyMessageDrivenSubscriptionMode is enabled at the subscriber the 'subcriber.Endpoint' value is null " is 146.
Long Statement,ServiceBus.Management.Infrastructure.Settings,DeprecatedConfigurationCheck,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Settings\DeprecatedConfigurationCheckFeature.cs,LogIfAsbConfigSectionExists,The length of the statement  "                    logging.Warn("The use of AzureServiceBusQueueConfig within ServiceControl has been deprecated. A Transport Adapater (https://docs.particular.net/servicecontrol/transport-adapter/) can be used if there are transport defaults that are not suitable for this environment."); " is 270.
Long Statement,ServiceBus.Management.Infrastructure.Settings,DeprecatedConfigurationCheck,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Settings\DeprecatedConfigurationCheckFeature.cs,LogIfAsqConfigSectionExists,The length of the statement  "                    logging.Warn("The use of AzureQueueConfig within ServiceControl has been deprecated. A Transport Adapater (https://docs.particular.net/servicecontrol/transport-adapter/) can be used if there are transport defaults that are not suitable for this environment."); " is 260.
Long Statement,ServiceBus.Management.Infrastructure.Settings,LoggingSettings,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Settings\LoggingSettings.cs,DefaultLogPathForInstance,The length of the statement  "                return Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData)' "Particular\\ServiceControl\\logs"); " is 131.
Long Statement,ServiceBus.Management.Infrastructure.Settings,LoggingSettings,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Settings\LoggingSettings.cs,DefaultLogPathForInstance,The length of the statement  "            return Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData)' $"Particular\\{serviceName}\\logs"); " is 131.
Long Statement,ServiceBus.Management.Infrastructure.Settings,Settings,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Settings\Settings.cs,GetErrorQueue,The length of the statement  "                logger.Warn("No settings found for error queue to import' if this is not intentional please set add ServiceBus/ErrorQueue to your appSettings"); " is 144.
Long Statement,ServiceBus.Management.Infrastructure.Settings,Settings,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Settings\Settings.cs,GetDbPath,The length of the statement  "            var defaultPath = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData)' "Particular"' "ServiceControl"' dbFolder); " is 149.
Long Statement,ServiceBus.Management.Infrastructure.Settings,Settings,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Settings\Settings.cs,GetTransportType,The length of the statement  "            var typeName = SettingsReader<string>.Read("TransportType"' "ServiceControl.Transports.Msmq.MsmqTransportCustomization' ServiceControl.Transports.Msmq"); " is 153.
Long Statement,ServiceBus.Management.Infrastructure.Settings,Settings,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Settings\Settings.cs,GetTransportType,The length of the statement  "                throw new Exception($"Configuration of transport Failed. Could not resolve type '{typeName}' from Setting 'TransportType'. Ensure the assembly is present and that type is a fully qualified assembly name"); " is 205.
Long Statement,ServiceBus.Management.Infrastructure.Settings,Settings,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Settings\Settings.cs,GetTransportType,The length of the statement  "                transportAssemblyPath = Path.Combine(Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location)' $"{typeNameAndAssembly[1].Trim()}.dll"); " is 142.
Long Statement,ServiceBus.Management.Infrastructure.Settings,Settings,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Settings\Settings.cs,GetTransportType,The length of the statement  "                throw new Exception($"Configuration of transport Failed. Ensure the assembly '{transportAssemblyPath}' is present and that type is correctly defined in settings"' e); " is 166.
Long Statement,ServiceBus.Management.Infrastructure.Settings,Settings,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Settings\Settings.cs,GetTransportType,The length of the statement  "            throw new Exception($"Configuration of transport Failed. Could not resolve type '{typeName}' from Setting 'TransportType'. Ensure the assembly is present and that type is correctly defined in settings"); " is 203.
Long Statement,ServiceControl.Infrastructure.WebApi,Negotiator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\WebApi\Negotiator.cs,FromQueryResult,The length of the statement  "            return response.WithPagingLinksAndTotalCount(queryStats.TotalCount' queryStats.HighestTotalCountOfAllTheInstances' request) " is 123.
Long Statement,ServiceControl.Infrastructure.WebApi,Negotiator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\WebApi\Negotiator.cs,WithPagingLinks,The length of the statement  "            var path = request.GetRouteData().Route.RouteTemplate; //should ideally be request.RequestUri.AbsolutePath' but using route instead to keep it backwards compatible " is 163.
Long Statement,ServiceControl.Infrastructure.WebApi,XParticularVersionHttpHandler,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\WebApi\XParticularVersionHttpHandler.cs,GetFileVersion,The length of the statement  "            var customAttributes = typeof(XParticularVersionHttpHandler).Assembly.GetCustomAttributes(typeof(AssemblyInformationalVersionAttribute)' false); " is 144.
Long Statement,Particular.ServiceControl.Licensing,ActiveLicense,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Licensing\ActiveLicense.cs,Refresh,The length of the statement  "            sources.Add(new LicenseSourceFilePath(Path.Combine(AppDomain.CurrentDomain.BaseDirectory' "ParticularPlatformLicense.xml"))); " is 125.
Long Statement,ServiceControl.MessageFailures.Api,EditFailedMessagesController,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\MessageFailures\Api\EditFailedMessagesController.cs,Edit,The length of the statement  "                failedMessage = await session.LoadAsync<FailedMessage>(FailedMessage.MakeDocumentId(failedMessageId)).ConfigureAwait(false); " is 124.
Long Statement,ServiceControl.MessageFailures.Api,EditFailedMessagesController,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\MessageFailures\Api\EditFailedMessagesController.cs,Edit,The length of the statement  "            if (LockedHeaderModificationValidator.Check(GetEditConfiguration().LockedHeaders' edit.MessageHeaders.ToDictionary(x => x.Key' x => x.Value)' failedMessage.ProcessingAttempts.Last().Headers)) " is 191.
Long Statement,ServiceControl.MessageFailures,FailedMessageViewIndexNotifications,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\MessageFailures\FailedMessageViewIndexNotifications.cs,UpdatedCount,The length of the statement  "                var failedUnresolvedMessageCount = await session.Query<FailedMessage' FailedMessageViewIndex>().CountAsync(p => p.Status == FailedMessageStatus.Unresolved) " is 155.
Long Statement,ServiceControl.MessageFailures,FailedMessageViewIndexNotifications,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\MessageFailures\FailedMessageViewIndexNotifications.cs,UpdatedCount,The length of the statement  "                var failedArchivedMessageCount = await session.Query<FailedMessage' FailedMessageViewIndex>().CountAsync(p => p.Status == FailedMessageStatus.Archived) " is 151.
Long Statement,ServiceControl.MessageFailures.Handlers,UnArchiveMessagesByRangeHandler,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\MessageFailures\Handlers\UnArchiveMessagesByRangeHandler.cs,Handle,The length of the statement  "                    Query = string.Format(CultureInfo.InvariantCulture' "LastModified:[{0} TO {1}] AND Status:{2}"' message.From.Ticks' message.To.Ticks' (int)FailedMessageStatus.Archived)' " is 169.
Long Statement,ServiceControl.MessageRedirects.Api,MessageRedirectsCollectionExtensions,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\MessageRedirects\Api\MessageRedirectsCollectionExtensions.cs,Sort,The length of the statement  "                return direction == "asc" ? source.Redirects.OrderBy(r => r.ToPhysicalAddress) : source.Redirects.OrderByDescending(r => r.ToPhysicalAddress); " is 142.
Long Statement,ServiceControl.MessageRedirects.Api,MessageRedirectsCollectionExtensions,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\MessageRedirects\Api\MessageRedirectsCollectionExtensions.cs,Sort,The length of the statement  "            return direction == "asc" ? source.Redirects.OrderBy(r => r.FromPhysicalAddress) : source.Redirects.OrderByDescending(r => r.FromPhysicalAddress); " is 146.
Long Statement,ServiceControl.Monitoring,EndpointInstanceId,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Monitoring\EndpointInstanceId.cs,Equals,The length of the statement  "            return string.Equals(LogicalName' other.LogicalName) && string.Equals(HostName' other.HostName) && HostGuid.Equals(other.HostGuid); " is 131.
Long Statement,ServiceControl.Monitoring,EndpointInstanceMonitoring,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Monitoring\EndpointInstanceMonitoring.cs,CheckEndpoints,The length of the statement  "                var monitor = endpoints.GetOrAdd(endpointInstanceId.UniqueId' id => new EndpointInstanceMonitor(endpointInstanceId' true' domainEvents)); " is 137.
Long Statement,ServiceControl.Monitoring,EndpointInstanceMonitoring,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Monitoring\EndpointInstanceMonitoring.cs,EndpointDetected,The length of the statement  "            if (endpoints.TryAdd(endpointInstanceId.UniqueId' new EndpointInstanceMonitor(endpointInstanceId' false' domainEvents))) " is 120.
Long Statement,ServiceControl.Monitoring,EndpointInstanceMonitoring,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Monitoring\EndpointInstanceMonitoring.cs,DetectEndpointFromHeartbeatStartup,The length of the statement  "            endpoints.GetOrAdd(endpointInstanceId.UniqueId' id => new EndpointInstanceMonitor(endpointInstanceId' true' domainEvents)); " is 123.
Long Statement,ServiceControl.Monitoring,EndpointInstanceMonitoring,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Monitoring\EndpointInstanceMonitoring.cs,DetectEndpointFromPersistentStore,The length of the statement  "            endpoints.GetOrAdd(endpointInstanceId.UniqueId' id => new EndpointInstanceMonitor(endpointInstanceId' monitored' domainEvents)); " is 128.
Long Statement,ServiceControl.Monitoring,MonitorEndpointInstances,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Monitoring\InMemoryMonitoring.cs,OnStart,The length of the statement  "                timer = new AsyncTimer(_ => CheckEndpoints()' TimeSpan.Zero' TimeSpan.FromSeconds(5)' e => { log.Error("Exception occurred when monitoring endpoint instances"' e); }); " is 167.
Long Statement,ServiceControl.Monitoring,EndpointsMonitoringController,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Monitoring\Web\EndpointsMonitoringController.cs,GetSupportedOperations,The length of the statement  "                Content = new ByteArrayContent(new byte[] { }) //need to force empty content to avoid null reference when adding headers below :( " is 129.
Long Statement,ServiceControl.Monitoring,GetKnownEndpointsApi,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Monitoring\Web\GetKnownEndpointsApi.cs,ProcessResults,The length of the statement  "            return results.Where(p => p.Results != null).SelectMany(x => x.Results).Distinct(KnownEndpointsViewComparer.Instance).ToList(); " is 127.
Long Statement,ServiceControl.Operations.BodyStorage.RavenAttachments,RavenAttachmentsBodyStorage,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Operations\BodyStorage\RavenAttachments\RavenAttachmentsBodyStorage.cs,Store,The length of the statement  "             * The locking here is a workaround for RavenDB bug DocumentDatabase.PutStatic that allows multiple threads to enter a critical section. " is 135.
Long Statement,ServiceControl.Operations.BodyStorage.RavenAttachments,RavenAttachmentsBodyStorage,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Operations\BodyStorage\RavenAttachments\RavenAttachmentsBodyStorage.cs,Store,The length of the statement  "                await DocumentStore.AsyncDatabaseCommands.PutAttachmentAsync($"messagebodies/{bodyId}"' null' bodyStream' new RavenJObject " is 122.
Long Statement,ServiceControl.Operations.BodyStorage.RavenAttachments,RavenAttachmentsBodyStorage,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Operations\BodyStorage\RavenAttachments\RavenAttachmentsBodyStorage.cs,TryFetch,The length of the statement  "            var attachment = await DocumentStore.AsyncDatabaseCommands.GetAttachmentAsync($"messagebodies/{bodyId}").ConfigureAwait(false); " is 127.
Long Statement,ServiceControl.Recoverability,GroupFetcher,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\API\GroupFetcher.cs,GetGroups,The length of the statement  "            var retryHistory = await session.LoadAsync<RetryHistory>(RetryHistory.MakeId()).ConfigureAwait(false) ?? RetryHistory.CreateNew(); " is 130.
Long Statement,ServiceControl.Recoverability,GroupFetcher,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\API\GroupFetcher.cs,GetGroups,The length of the statement  "            closedGroups = closedGroups.Union(MapClosedGroups(classifier' archivingManager.GetArchivalOperations().Where(archiveOp => archiveOp.NeedsAcknowledgement()))); " is 158.
Long Statement,ServiceControl.Recoverability,GroupFetcher,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\API\GroupFetcher.cs,GetGroups,The length of the statement  "            MakeSureForwardingBatchIsIncludedAsOpen(classifier' await GetCurrentForwardingBatch(session).ConfigureAwait(false)' openGroups); " is 128.
Long Statement,ServiceControl.Recoverability,GroupFetcher,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\API\GroupFetcher.cs,MakeSureForwardingBatchIsIncludedAsOpen,The length of the statement  "            var fg = MapOpenForForwardingOperation(classifier' forwardingBatch' retryingManager.GetStatusForRetryOperation(forwardingBatch.RequestId' RetryType.FailureGroup)); " is 163.
Long Statement,ServiceControl.Recoverability,GroupFetcher,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\API\GroupFetcher.cs,IsCurrentForwardingOperationIncluded,The length of the statement  "            return open.Any(x => x.Id == forwardingBatch.RequestId && x.Type == forwardingBatch.Classifier && forwardingBatch.RetryType == RetryType.FailureGroup); " is 151.
Long Statement,ServiceControl.Recoverability,GroupFetcher,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\API\GroupFetcher.cs,GetCurrentForwardingBatch,The length of the statement  "            return nowForwarding == null ? null : await session.LoadAsync<RetryBatch>(nowForwarding.RetryBatchId).ConfigureAwait(false); " is 124.
Long Statement,ServiceControl.Recoverability,GroupFetcher,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\API\GroupFetcher.cs,MapClosedGroups,The length of the statement  "                var unacknowledged = standaloneUnacknowledgements.First(unack => unack.RequestId == standalone.RequestId && unack.RetryType == RetryType.FailureGroup); " is 151.
Long Statement,ServiceControl.Recoverability,GroupFetcher,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\API\GroupFetcher.cs,MapOpenGroups,The length of the statement  "                var unacknowledged = groupUnacknowledgements.FirstOrDefault(unack => unack.RequestId == failureGroup.Id && unack.RetryType == RetryType.FailureGroup); " is 150.
Long Statement,ServiceControl.Recoverability,ArchiveAllInGroupHandler,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Archiving\ArchiveAllInGroupHandler.cs,Handle,The length of the statement  "                session.Advanced.UseOptimisticConcurrency = true; // Ensure 2 messages don't split the same operation into batches at once " is 122.
Long Statement,ServiceControl.Recoverability,ArchiveAllInGroupHandler,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Archiving\ArchiveAllInGroupHandler.cs,Handle,The length of the statement  "                    archiveOperation = await documentManager.CreateArchiveOperation(session' message.GroupId' ArchiveType.FailureGroup' groupDetails.NumberOfMessagesInGroup' groupDetails.GroupName' batchSize) " is 188.
Long Statement,ServiceControl.Recoverability,ArchiveAllInGroupHandler,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Archiving\ArchiveAllInGroupHandler.cs,Handle,The length of the statement  "                        logger.Warn($"Attempting to archive a batch ({archiveOperation.Id}/{archiveOperation.CurrentBatch}) which appears to already have been archived."); " is 147.
Long Statement,ServiceControl.Recoverability,ArchiveAllInGroupHandler,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Archiving\ArchiveAllInGroupHandler.cs,Handle,The length of the statement  "                    await archiveOperationManager.BatchArchived(archiveOperation.RequestId' archiveOperation.ArchiveType' nextBatch?.DocumentIds.Count ?? 0) " is 136.
Long Statement,ServiceControl.Recoverability,ArchiveAllInGroupHandler,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Archiving\ArchiveAllInGroupHandler.cs,Handle,The length of the statement  "                    archiveOperation = archiveOperationManager.GetStatusForArchiveOperation(archiveOperation.RequestId' archiveOperation.ArchiveType).ToArchiveOperation(); " is 151.
Long Statement,ServiceControl.Recoverability,ArchiveAllInGroupHandler,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Archiving\ArchiveAllInGroupHandler.cs,Handle,The length of the statement  "            if (!await documentManager.WaitForIndexUpdateOfArchiveOperation(store' archiveOperation.RequestId' archiveOperation.ArchiveType' TimeSpan.FromMinutes(5)) " is 153.
Long Statement,ServiceControl.Recoverability,ArchiveDocumentManager,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Archiving\ArchiveDocumentManager.cs,ArchiveMessageGroupBatch,The length of the statement  "            var patchCommands = batch?.DocumentIds.Select(documentId => new PatchCommandData {Key = documentId' Patches = patchRequest}); " is 125.
Long Statement,ServiceControl.Recoverability,InMemoryArchive,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Archiving\InMemoryArchive.cs,GetProgress,The length of the statement  "            var percentage = OperationProgressCalculator.CalculateProgress(TotalNumberOfMessages' NumberOfMessagesArchived' ArchiveState); " is 126.
Long Statement,ServiceControl.Recoverability,ExceptionTypeAndStackTraceFailureClassifier,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Grouping\Groupers\ExceptionTypeAndStackTraceFailureClassifier.cs,ClassifyFailure,The length of the statement  "                // The StackTrace message header contains the result of ToString call on the exception object so it includes the message " is 120.
Long Statement,ServiceControl.Recoverability,ExceptionTypeAndStackTraceFailureClassifier,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Grouping\Groupers\ExceptionTypeAndStackTraceFailureClassifier.cs,ClassifyFailure,The length of the statement  "                // We need to remove the message in order to make sure the stack trace parser does not get into catastrophic backtracking mode. " is 127.
Long Statement,ServiceControl.Recoverability,ExceptionTypeAndStackTraceFailureClassifier,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Grouping\Groupers\ExceptionTypeAndStackTraceFailureClassifier.cs,ClassifyFailure,The length of the statement  "            var firstStackTraceFrame = StackTraceParser.Parse(exceptionStackTrace' (frame' type' method' parameterList' parameters' file' line) => new StackFrame " is 149.
Long Statement,ServiceControl.Recoverability,Reclassifier,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Grouping\Groupers\Reclassifier.cs,ReclassifyFailedMessages,The length of the statement  "                            logger.Info($"Reclassification of batch of {BatchSize} failed messages completed. Total messages reclassified: {totalMessagesReclassified}"); " is 141.
Long Statement,ServiceControl.Recoverability,BulkRetryBatchCreation,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\FailedMessageRetries.cs,OnStart,The length of the statement  "                    timer = new AsyncTimer(_ => ProcessRequestedBulkRetryOperations()' interval' interval' e => { log.Error("Unhandled exception while processing bulk retry operations"' e); }); " is 173.
Long Statement,ServiceControl.Recoverability,AdoptOrphanBatchesFromPreviousSession,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\FailedMessageRetries.cs,OnStart,The length of the statement  "                }' TimeSpan.Zero' TimeSpan.FromMinutes(2)' e => { log.Error("Unhandled exception while trying to adopt orphaned batches"' e); }); " is 129.
Long Statement,ServiceControl.Recoverability,ProcessRetryBatches,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\FailedMessageRetries.cs,OnStart,The length of the statement  "                timer = new AsyncTimer(t => Process(t)' TimeSpan.Zero' settings.ProcessRetryBatchesFrequency' e => { log.Error("Unhandled exception while processing retry batches"' e); }); " is 172.
Long Statement,ServiceControl.Recoverability,RetriesHandler,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\Handlers\RetriesHandler.cs,Handle,The length of the statement  "                Retries.StartRetryForIndex<FailedMessageViewIndex.SortAndFilterOptions' FailedMessageViewIndex>(message.Endpoint' RetryType.AllForEndpoint' DateTime.UtcNow' m => m.ReceivingEndpointName == message.Endpoint' "all messages for endpoint " + message.Endpoint); " is 256.
Long Statement,ServiceControl.Recoverability,RetriesHandler,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\Handlers\RetriesHandler.cs,Handle,The length of the statement  "                Retries.StartRetryForIndex<FailedMessage' FailedMessageViewIndex>("All"' RetryType.All' DateTime.UtcNow' originator: "all messages"); " is 133.
Long Statement,ServiceControl.Recoverability,RetriesHandler,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\Handlers\RetriesHandler.cs,Handle,The length of the statement  "            Retries.StartRetryForIndex<FailedMessageViewIndex.SortAndFilterOptions' FailedMessageViewIndex>(failedQueueAddress' RetryType.ByQueueAddress' DateTime.UtcNow' m => m.QueueAddress == failedQueueAddress && m.Status == message.Status' $"all messages for failed queue address '{message.QueueAddress}'"); " is 299.
Long Statement,ServiceControl.Recoverability,RetryAllInGroupHandler,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\Handlers\RetryAllInGroupHandler.cs,Handle,The length of the statement  "            Retries.StartRetryForIndex<FailureGroupMessageView' FailedMessages_ByGroup>(message.GroupId' RetryType.FailureGroup' started' x => x.FailureGroupId == message.GroupId' originator' group?.Type); " is 193.
Long Statement,ServiceControl.Recoverability,ReturnToSenderDequeuer,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\Infrastructure\ReturnToSenderDequeuer.cs,Handle,The length of the statement  "                Log.DebugFormat("Handling message with id {0} and staging id {1} in input queue {2}"' message.MessageId' stagingId' InputAddress); " is 130.
Long Statement,ServiceControl.Recoverability,ReturnToSenderDequeuer,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\Infrastructure\ReturnToSenderDequeuer.cs,Handle,The length of the statement  "                Log.WarnFormat("Rejecting message from staging queue as it's not part of a fully staged batch: {0}"' message.MessageId); " is 120.
Long Statement,ServiceControl.Recoverability,ReturnToSenderDequeuer,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\Infrastructure\ReturnToSenderDequeuer.cs,Run,The length of the statement  "                registration = cancellationToken.Register(() => { Task.Run(() => syncEvent.TrySetResult(true)' CancellationToken.None).Ignore(); }); " is 132.
Long Statement,ServiceControl.Recoverability,CaptureIfMessageSendingFails,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\Infrastructure\ReturnToSenderDequeuer.cs,OnError,The length of the statement  "                    Log.Warn($"Failed to send '{messageUniqueId}' message to '{destination}' for retry. Attempting to revert message status to unresolved so it can be tried again."' handlingContext.Error.Exception); " is 195.
Long Statement,ServiceControl.Recoverability,CaptureIfMessageSendingFails,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\Infrastructure\ReturnToSenderDequeuer.cs,OnError,The length of the statement  "                        var failedMessageRetry = await session.LoadAsync<FailedMessageRetry>(FailedMessageRetry.MakeDocumentId(messageUniqueId)) " is 120.
Long Statement,ServiceControl.Recoverability,InMemoryRetry,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\InMemoryRetry.cs,CheckForCompletion,The length of the statement  "            Log.Info($"Retry operation {RequestId} completed. {NumberOfMessagesSkipped} messages skipped' {NumberOfMessagesForwarded} forwarded. Total {TotalNumberOfMessages}."); " is 166.
Long Statement,ServiceControl.Recoverability,InMemoryRetry,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\InMemoryRetry.cs,GetProgress,The length of the statement  "            var percentage = OperationProgressCalculator.CalculateProgress(TotalNumberOfMessages' NumberOfMessagesPrepared' NumberOfMessagesForwarded' NumberOfMessagesSkipped' RetryState); " is 176.
Long Statement,ServiceControl.Recoverability,InMemoryRetry,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\InMemoryRetry.cs,GetProgress,The length of the statement  "            return new RetryProgress(roundedPercentage' NumberOfMessagesPrepared' NumberOfMessagesForwarded' NumberOfMessagesSkipped' remaining); " is 133.
Long Statement,ServiceControl.Recoverability,RetriesGateway,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\RetriesGateway.cs,StartRetryForIndex,The length of the statement  "            var request = new IndexBasedBulkRetryRequest<TType' TIndex>(requestId' retryType' originator' classifier' startTime' filter); " is 125.
Long Statement,ServiceControl.Recoverability,RetriesGateway,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\RetriesGateway.cs,StageRetryByUniqueMessageIds,The length of the statement  "            var batchDocumentId = await retryDocumentManager.CreateBatchDocument(requestId' retryType' failedMessageRetryIds' originator' startTime' last' batchName' classifier) " is 165.
Long Statement,ServiceControl.Recoverability,RetriesGateway,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\RetriesGateway.cs,ProcessRequest,The length of the statement  "                    await StageRetryByUniqueMessageIds(request.RequestId' request.RetryType' batches[i]' request.StartTime' latestAttempt' request.Originator' GetBatchName(i + 1' batches.Count' request.Originator)' request.Classifier) " is 214.
Long Statement,ServiceControl.Recoverability,RetryDocumentManager,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\RetryDocumentManager.cs,RebuildRetryOperationState,The length of the statement  "                        log.DebugFormat("Rebuilt retry operation status for {0}/{1}. Aggregated batchsize: {2}"' group.RetryType' group.RequestId' group.InitialBatchSize); " is 147.
Long Statement,ServiceControl.Recoverability,RetryDocumentManager,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\RetryDocumentManager.cs,RebuildRetryOperationState,The length of the statement  "                    await OperationManager.PreparedAdoptedBatch(group.RequestId' group.RetryType' group.InitialBatchSize' group.InitialBatchSize' group.Originator' group.Classifier' group.StartTime' group.Last) " is 190.
Long Statement,ServiceControl.Recoverability,RetryingManager,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\RetryingManager.cs,PreparedAdoptedBatch,The length of the statement  "            await summary.PrepareAdoptedBatch(numberOfMessagesPrepared' originator' classifier' startTime' last).ConfigureAwait(false); " is 123.
Long Statement,ServiceControl.Recoverability,RetryProcessor,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\RetryProcessor.cs,ProcessBatches,The length of the statement  "            return await ForwardCurrentBatch(session' cancellationToken).ConfigureAwait(false) || await MoveStagedBatchesToForwardingBatch(session).ConfigureAwait(false); " is 158.
Long Statement,ServiceControl.Recoverability,RetryProcessor,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\RetryProcessor.cs,MoveStagedBatchesToForwardingBatch,The length of the statement  "                        Log.Info($"Batch {stagingBatch.Id} with {stagedMessages} messages staged and {skippedMessages} skipped ready to be forwarded."); " is 128.
Long Statement,ServiceControl.Recoverability,RetryProcessor,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\RetryProcessor.cs,ForwardCurrentBatch,The length of the statement  "                var forwardingBatch = await session.LoadAsync<RetryBatch>(nowForwarding.RetryBatchId' cancellationToken).ConfigureAwait(false); " is 127.
Long Statement,ServiceControl.Recoverability,RetryProcessor,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\RetryProcessor.cs,Forward,The length of the statement  "                await retryingManager.ForwardedBatch(forwardingBatch.RequestId' forwardingBatch.RetryType' forwardingBatch.InitialBatchSize) " is 124.
Long Statement,ServiceControl.Recoverability,RetryProcessor,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\RetryProcessor.cs,Forward,The length of the statement  "                    await returnToSender.Run(forwardingBatch.Id' IsPartOfStagedBatch(forwardingBatch.StagingId)' cancellationToken' messageCount) " is 125.
Long Statement,ServiceControl.Recoverability,RetryProcessor,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\RetryProcessor.cs,Stage,The length of the statement  "            var failedMessageRetryDocs = await session.LoadAsync<FailedMessageRetry>(stagingBatch.FailureRetries).ConfigureAwait(false); " is 124.
Long Statement,ServiceControl.Recoverability,RetryProcessor,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\RetryProcessor.cs,Stage,The length of the statement  "                Log.Info($"Retry batch {stagingBatch.Id} cancelled as all matching unresolved messages are already marked for retry as part of another batch."); " is 144.
Long Statement,ServiceControl.Recoverability,RetryProcessor,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\RetryProcessor.cs,Stage,The length of the statement  "            await Task.WhenAll(messages.Select(m => TryStageMessage(m' stagingId' failedMessagesById[m.Id])).ToArray()).ConfigureAwait(false); " is 130.
Long Statement,ServiceControl.Recoverability,RetryProcessor,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\RetryProcessor.cs,Stage,The length of the statement  "            stagingBatch.FailureRetries = matchingFailures.Where(x => msgLookup[x.FailedMessageId].Any()).Select(x => x.Id).ToArray(); " is 122.
Long Statement,ServiceControl.Recoverability,RetryProcessor,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\RetryProcessor.cs,Stage,The length of the statement  "            Log.Info($"Retry batch {stagingBatch.Id} staged with Staging Id {stagingBatch.StagingId} and {stagingBatch.FailureRetries.Count} matching failure retries"); " is 156.
Long Statement,ServiceControl.Recoverability,RetryProcessor,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\RetryProcessor.cs,TryStageMessage,The length of the statement  "                    Log.Warn($"Attempt {incrementedAttempts} of {MaxStagingAttempts} to stage a retry message {message.UniqueMessageId} failed"' e); " is 128.
Long Statement,ServiceControl.Recoverability,RetryProcessor,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\RetryProcessor.cs,TryStageMessage,The length of the statement  "                    Log.Error($"Retry message {message.UniqueMessageId} reached its staging retry limit ({MaxStagingAttempts}) and is going to be removed from the batch."' e); " is 155.
Long Statement,ServiceControl.Recoverability,RetryProcessor,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\RetryProcessor.cs,IncrementAttemptCounter,The length of the statement  "                Log.DebugFormat("Ignoring concurrency exception while incrementing staging attempt count for {0}"' message.FailedMessageId); " is 124.
Long Statement,ServiceControl.Recoverability,RetryProcessor,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\RetryProcessor.cs,StageMessage,The length of the statement  "            return sender.Dispatch(new TransportOperations(new TransportOperation(transportMessage' new UnicastAddressTag(returnToSender.InputAddress)))' transaction' contextBag); " is 167.
Long Statement,ServiceControl.Recoverability.Editing,EditHandler,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Editing\EditHandler.cs,Handle,The length of the statement  "                    log.WarnFormat("Discarding edit {0} because no message failure for id {1} has been found."' context.MessageId' message.FailedMessageId); " is 136.
Long Statement,ServiceControl.Recoverability.Editing,EditHandler,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Editing\EditHandler.cs,Handle,The length of the statement  "                        log.WarnFormat("Discarding edit {0} because message failure {1} doesn't have state 'Unresolved'."' context.MessageId' message.FailedMessageId); " is 143.
Long Statement,ServiceControl.Recoverability.Editing,EditHandler,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Editing\EditHandler.cs,Handle,The length of the statement  "                    log.WarnFormat("Discarding edit {0} because the failure ({1}) has already been edited by edit {2}"' context.MessageId' message.FailedMessageId' edit.EditId); " is 157.
Long Statement,ServiceControl.Recoverability.Editing,EditHandler,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Editing\EditHandler.cs,Handle,The length of the statement  "                // the original failure is marked as resolved as any failures of the edited message are treated as a new message failure. " is 121.
Complex Conditional,ServiceControl.CustomChecks,CustomChecksStorage,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\CustomChecks\CustomChecksStorage.cs,UpdateCustomCheckStatus,The conditional expression  "customCheck == null ||                      customCheck.Status == Status.Fail && !hasFailed ||                      customCheck.Status == Status.Pass && hasFailed"  is complex.
Complex Conditional,Particular.ServiceControl.Hosting,Option,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Hosting\Options.cs,Option,The conditional expression  "Array.IndexOf(Names' "<>") >= 0 &&                  (Names.Length == 1 && OptionValueType != OptionValueType.None ||                   Names.Length > 1 && MaxValueCount > 1)"  is complex.
Complex Conditional,Particular.ServiceControl.Hosting,OptionSet,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Hosting\Options.cs,ParseBool,The conditional expression  "n.Length >= 1 && (n[n.Length - 1] == '+' || n[n.Length - 1] == '-') &&                  Contains(rn = n.Substring(0' n.Length - 1))"  is complex.
Empty Catch Block,ServiceControl.ExternalIntegrations,EventDispatcher,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\ExternalIntegrations\EventDispatcher.cs,StartDispatcherTask,The method has an empty catch block.
Empty Catch Block,ServiceControl.Hosting.Commands,ImportFailedErrorsCommand,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Hosting\Commands\ImportFailedErrorsCommand.cs,Execute,The method has an empty catch block.
Empty Catch Block,ServiceControl.Infrastructure,AsyncTimer,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\AsyncTimer.cs,Start,The method has an empty catch block.
Empty Catch Block,ServiceControl.Infrastructure,AsyncTimer,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\AsyncTimer.cs,Start,The method has an empty catch block.
Empty Catch Block,ServiceControl.Operations,ImportFailedErrors,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Operations\ImportFailedErrors.cs,Run,The method has an empty catch block.
Empty Catch Block,ServiceControl.Operations,Watchdog,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Operations\Watchdog.cs,Start,The method has an empty catch block.
Empty Catch Block,ServiceControl.Recoverability,Reclassifier,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Grouping\Groupers\Reclassifier.cs,ReclassifyBatch,The method has an empty catch block.
Magic Number,ServiceControl,EndpointInstanceId,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\EndpointInstanceId.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (InstanceId != null ? InstanceId.GetHashCode() : 0);
Magic Number,ServiceControl,EndpointInstanceId,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\EndpointInstanceId.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (InstanceName != null ? InstanceName.GetHashCode() : 0);
Magic Number,Particular.ServiceControl,LoggingConfigurator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\LoggingConfigurator.cs,ConfigureLogging,The following statement contains a magic number: const long megaByte = 1024 * 1024;
Magic Number,Particular.ServiceControl,LoggingConfigurator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\LoggingConfigurator.cs,ConfigureLogging,The following statement contains a magic number: const long megaByte = 1024 * 1024;
Magic Number,Particular.ServiceControl,LoggingConfigurator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\LoggingConfigurator.cs,ConfigureLogging,The following statement contains a magic number: var fileTarget = new FileTarget              {                  ArchiveEvery = FileArchivePeriod.Day'                  FileName = Path.Combine(loggingSettings.LogPath' "logfile.${shortdate}.txt")'                  ArchiveFileName = Path.Combine(loggingSettings.LogPath' "logfile.{#}.txt")'                  ArchiveNumbering = ArchiveNumberingMode.DateAndSequence'                  Layout = simpleLayout'                  MaxArchiveFiles = 14'                  ArchiveAboveSize = 30 * megaByte              };
Magic Number,Particular.ServiceControl,LoggingConfigurator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\LoggingConfigurator.cs,ConfigureLogging,The following statement contains a magic number: var fileTarget = new FileTarget              {                  ArchiveEvery = FileArchivePeriod.Day'                  FileName = Path.Combine(loggingSettings.LogPath' "logfile.${shortdate}.txt")'                  ArchiveFileName = Path.Combine(loggingSettings.LogPath' "logfile.{#}.txt")'                  ArchiveNumbering = ArchiveNumberingMode.DateAndSequence'                  Layout = simpleLayout'                  MaxArchiveFiles = 14'                  ArchiveAboveSize = 30 * megaByte              };
Magic Number,Particular.ServiceControl,LoggingConfigurator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\LoggingConfigurator.cs,ConfigureLogging,The following statement contains a magic number: var ravenFileTarget = new FileTarget              {                  ArchiveEvery = FileArchivePeriod.Day'                  FileName = Path.Combine(loggingSettings.LogPath' "ravenlog.${shortdate}.txt")'                  ArchiveFileName = Path.Combine(loggingSettings.LogPath' "ravenlog.{#}.txt")'                  ArchiveNumbering = ArchiveNumberingMode.DateAndSequence'                  Layout = simpleLayout'                  MaxArchiveFiles = 14'                  ArchiveAboveSize = 30 * megaByte              };
Magic Number,Particular.ServiceControl,LoggingConfigurator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\LoggingConfigurator.cs,ConfigureLogging,The following statement contains a magic number: var ravenFileTarget = new FileTarget              {                  ArchiveEvery = FileArchivePeriod.Day'                  FileName = Path.Combine(loggingSettings.LogPath' "ravenlog.${shortdate}.txt")'                  ArchiveFileName = Path.Combine(loggingSettings.LogPath' "ravenlog.{#}.txt")'                  ArchiveNumbering = ArchiveNumberingMode.DateAndSequence'                  Layout = simpleLayout'                  MaxArchiveFiles = 14'                  ArchiveAboveSize = 30 * megaByte              };
Magic Number,NServiceBus,CombGuid,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\CombGuid.cs,Generate,The following statement contains a magic number: var millisecondArray = BitConverter.GetBytes((long)(timeOfDay.TotalMilliseconds / 3.333333));
Magic Number,NServiceBus,CombGuid,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\CombGuid.cs,Generate,The following statement contains a magic number: Array.Copy(daysArray' daysArray.Length - 2' guidArray' guidArray.Length - 6' 2);
Magic Number,NServiceBus,CombGuid,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\CombGuid.cs,Generate,The following statement contains a magic number: Array.Copy(daysArray' daysArray.Length - 2' guidArray' guidArray.Length - 6' 2);
Magic Number,NServiceBus,CombGuid,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\CombGuid.cs,Generate,The following statement contains a magic number: Array.Copy(daysArray' daysArray.Length - 2' guidArray' guidArray.Length - 6' 2);
Magic Number,NServiceBus,CombGuid,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\CombGuid.cs,Generate,The following statement contains a magic number: Array.Copy(millisecondArray' millisecondArray.Length - 4' guidArray' guidArray.Length - 4' 4);
Magic Number,NServiceBus,CombGuid,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\CombGuid.cs,Generate,The following statement contains a magic number: Array.Copy(millisecondArray' millisecondArray.Length - 4' guidArray' guidArray.Length - 4' 4);
Magic Number,NServiceBus,CombGuid,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\CombGuid.cs,Generate,The following statement contains a magic number: Array.Copy(millisecondArray' millisecondArray.Length - 4' guidArray' guidArray.Length - 4' 4);
Magic Number,ServiceControl.ExternalIntegrations,EventDispatcher,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\ExternalIntegrations\EventDispatcher.cs,OnStart,The following statement contains a magic number: circuitBreaker = new RepeatedFailuresOverTimeCircuitBreaker("EventDispatcher"'                  TimeSpan.FromMinutes(5)'                  ex => criticalError.Raise("Repeated failures when dispatching external integration events."' ex)'                  TimeSpan.FromSeconds(20));
Magic Number,ServiceControl.ExternalIntegrations,EventDispatcher,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\ExternalIntegrations\EventDispatcher.cs,OnStart,The following statement contains a magic number: circuitBreaker = new RepeatedFailuresOverTimeCircuitBreaker("EventDispatcher"'                  TimeSpan.FromMinutes(5)'                  ex => criticalError.Raise("Repeated failures when dispatching external integration events."' ex)'                  TimeSpan.FromSeconds(20));
Magic Number,ServiceControl.ExternalIntegrations,EventDispatcher,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\ExternalIntegrations\EventDispatcher.cs,DispatchEvents,The following statement contains a magic number: await Task.Delay(1000' CancellationToken.None).ConfigureAwait(false);
Magic Number,Particular.ServiceControl.Hosting,OptionSet,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Hosting\Options.cs,Add,The following statement contains a magic number: Option p = new ActionOption(prototype' description' 2'                  delegate(OptionValueCollection v) { action(v[0]' v[1]); });
Magic Number,Particular.ServiceControl.Hosting,OptionSet,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Hosting\Options.cs,ParseValue,The following statement contains a magic number: c.Option.ValueSeparators != null                      ? option.Split(c.Option.ValueSeparators' 2' StringSplitOptions.None)                      : new[]                      {                          option                      }
Magic Number,Particular.ServiceControl.Hosting,OptionSet,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Hosting\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: var prefix = new string(' '' OptionWidth + 2);
Magic Number,Particular.ServiceControl.Hosting,OptionSet,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Hosting\Options.cs,GetLines,The following statement contains a magic number: var length = 80 - OptionWidth - 2;
Magic Number,Particular.ServiceControl.Hosting,OptionSet,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Hosting\Options.cs,GetLines,The following statement contains a magic number: var length = 80 - OptionWidth - 2;
Magic Number,ServiceBus.Management.Infrastructure,NServiceBusFactory,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\NServiceBusFactory.cs,Create,The following statement contains a magic number: recoverability.Immediate(c => c.NumberOfRetries(3));
Magic Number,ServiceControl.Operations,CheckFreeDiskSpace,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Operations\CheckFreeDiskSpace.cs,CheckFreeDiskSpace,The following statement contains a magic number: percentageThreshold = settings.DataSpaceRemainingThreshold / 100m;
Magic Number,ServiceControl.Operations,CheckRemotes,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Operations\CheckRemotes.cs,PerformCheck,The following statement contains a magic number: var queryTimeout = TimeSpan.FromSeconds(10);
Magic Number,ServiceControl.Operations,ErrorIngestionFaultPolicy,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Operations\ErrorIngestionFaultPolicy.cs,OnError,The following statement contains a magic number: handlingContext.Error.ImmediateProcessingFailures < 3
Magic Number,ServiceControl.Operations,ImportFailureCircuitBreaker,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Operations\ImportFailureCircuitBreaker.cs,ImportFailureCircuitBreaker,The following statement contains a magic number: timer = new Timer(_ => FlushHistory()' null' TimeSpan.FromSeconds(0)' TimeSpan.FromSeconds(20));
Magic Number,ServiceControl.Operations,ImportFailureCircuitBreaker,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Operations\ImportFailureCircuitBreaker.cs,Increment,The following statement contains a magic number: result > 50
Magic Number,ServiceControl.Infrastructure.Extensions,RavenQueryExtensions,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Extensions\RavenQueryExtensions.cs,Paging,The following statement contains a magic number: var maxResultsPerPage = request.GetQueryStringValue("per_page"' 50);
Magic Number,ServiceControl.Infrastructure.Extensions,RavenQueryExtensions,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Extensions\RavenQueryExtensions.cs,Paging,The following statement contains a magic number: maxResultsPerPage = 50;
Magic Number,ServiceControl.Infrastructure.Extensions,RavenQueryExtensions,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Extensions\RavenQueryExtensions.cs,FilterByLastModifiedRange,The following statement contains a magic number: filters.Length != 2
Magic Number,ServiceControl.Infrastructure.Extensions,RavenQueryExtensions,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Extensions\RavenQueryExtensions.cs,Paging,The following statement contains a magic number: var maxResultsPerPage = request.GetQueryStringValue("per_page"' 50);
Magic Number,ServiceControl.Infrastructure.Extensions,RavenQueryExtensions,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Extensions\RavenQueryExtensions.cs,Paging,The following statement contains a magic number: maxResultsPerPage = 50;
Magic Number,ServiceControl.Infrastructure.Extensions,RavenQueryExtensions,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Extensions\RavenQueryExtensions.cs,Paging,The following statement contains a magic number: var maxResultsPerPage = request.GetQueryStringValue("per_page"' 50);
Magic Number,ServiceControl.Infrastructure.Extensions,RavenQueryExtensions,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Extensions\RavenQueryExtensions.cs,Paging,The following statement contains a magic number: maxResultsPerPage = 50;
Magic Number,ServiceControl.Infrastructure.RavenDB.Expiration,ExpiredDocumentsCleanerBundle,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\RavenDB\Expiration\ExpiredDocumentsCleanerBundle.cs,Dispose,The following statement contains a magic number: var delayTask = Task.Delay(TimeSpan.FromSeconds(30));
Magic Number,ServiceBus.Management.Infrastructure.Settings,Settings,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Settings\Settings.cs,Settings,The following statement contains a magic number: Port = SettingsReader<int>.Read("Port"' 33333);
Magic Number,ServiceBus.Management.Infrastructure.Settings,Settings,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Settings\Settings.cs,Settings,The following statement contains a magic number: DatabaseMaintenancePort = SettingsReader<int>.Read("DatabaseMaintenancePort"' 33334);
Magic Number,ServiceBus.Management.Infrastructure.Settings,Settings,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Settings\Settings.cs,Settings,The following statement contains a magic number: ProcessRetryBatchesFrequency = TimeSpan.FromSeconds(30);
Magic Number,ServiceBus.Management.Infrastructure.Settings,Settings,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Settings\Settings.cs,Settings,The following statement contains a magic number: MaximumConcurrencyLevel = SettingsReader<int>.Read("MaximumConcurrencyLevel"' 10);
Magic Number,ServiceBus.Management.Infrastructure.Settings,Settings,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Settings\Settings.cs,Settings,The following statement contains a magic number: RetryHistoryDepth = SettingsReader<int>.Read("RetryHistoryDepth"' 10);
Magic Number,ServiceBus.Management.Infrastructure.Settings,Settings,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Settings\Settings.cs,Settings,The following statement contains a magic number: HttpDefaultConnectionLimit = SettingsReader<int>.Read("HttpDefaultConnectionLimit"' 100);
Magic Number,ServiceBus.Management.Infrastructure.Settings,Settings,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Settings\Settings.cs,GetTransportType,The following statement contains a magic number: typeNameAndAssembly.Length < 2
Magic Number,ServiceBus.Management.Infrastructure.Settings,Settings,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Settings\Settings.cs,GetEventRetentionPeriod,The following statement contains a magic number: ValidateConfiguration && result > TimeSpan.FromDays(200)
Magic Number,ServiceBus.Management.Infrastructure.Settings,Settings,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Settings\Settings.cs,GetEventRetentionPeriod,The following statement contains a magic number: return TimeSpan.FromDays(14);
Magic Number,ServiceBus.Management.Infrastructure.Settings,Settings,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Settings\Settings.cs,GetErrorRetentionPeriod,The following statement contains a magic number: ValidateConfiguration && result < TimeSpan.FromDays(10)
Magic Number,ServiceBus.Management.Infrastructure.Settings,Settings,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Settings\Settings.cs,GetErrorRetentionPeriod,The following statement contains a magic number: ValidateConfiguration && result > TimeSpan.FromDays(45)
Magic Number,ServiceBus.Management.Infrastructure.Settings,Settings,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Settings\Settings.cs,GetAuditRetentionPeriod,The following statement contains a magic number: ValidateConfiguration && result > TimeSpan.FromDays(365)
Magic Number,ServiceBus.Management.Infrastructure.Settings,Settings,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Settings\Settings.cs,GetTimeToRestartErrorIngestionAfterFailure,The following statement contains a magic number: return TimeSpan.FromSeconds(60);
Magic Number,ServiceBus.Management.Infrastructure.Settings,Settings,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Settings\Settings.cs,GetTimeToRestartErrorIngestionAfterFailure,The following statement contains a magic number: ValidateConfiguration && result < TimeSpan.FromSeconds(5)
Magic Number,ServiceBus.Management.Infrastructure.Settings,Settings,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\Settings\Settings.cs,GetDataSpaceRemainingThreshold,The following statement contains a magic number: threshold > 100
Magic Number,ServiceControl.Infrastructure.WebApi,Negotiator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\WebApi\Negotiator.cs,WithPagingLinks,The following statement contains a magic number: decimal maxResultsPerPage = 50;
Magic Number,ServiceControl.Infrastructure.WebApi,Negotiator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\WebApi\Negotiator.cs,WithPagingLinks,The following statement contains a magic number: maxResultsPerPage = 50;
Magic Number,ServiceControl.Infrastructure.WebApi,XParticularVersionHttpHandler,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Infrastructure\WebApi\XParticularVersionHttpHandler.cs,GetFileVersion,The following statement contains a magic number: return typeof(XParticularVersionHttpHandler).Assembly.GetName().Version.ToString(4);
Magic Number,Particular.ServiceControl.Licensing,LicenseCheckFeatureStartup,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Licensing\LicenseCheckFeature.cs,OnStart,The following statement contains a magic number: var due = TimeSpan.FromHours(8);
Magic Number,ServiceControl.MessageRedirects.Api,MessageRedirectsCollectionExtensions,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\MessageRedirects\Api\MessageRedirectsCollectionExtensions.cs,Paging,The following statement contains a magic number: var maxResultsPerPage = 50;
Magic Number,ServiceControl.MessageRedirects.Api,MessageRedirectsCollectionExtensions,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\MessageRedirects\Api\MessageRedirectsCollectionExtensions.cs,Paging,The following statement contains a magic number: maxResultsPerPage = 50;
Magic Number,ServiceControl.Monitoring,EndpointInstanceId,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Monitoring\EndpointInstanceId.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (HostName != null ? HostName.GetHashCode() : 0);
Magic Number,ServiceControl.Monitoring,EndpointInstanceId,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Monitoring\EndpointInstanceId.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ HostGuid.GetHashCode();
Magic Number,ServiceControl.Monitoring,MonitorEndpointInstances,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Monitoring\InMemoryMonitoring.cs,OnStart,The following statement contains a magic number: timer = new AsyncTimer(_ => CheckEndpoints()' TimeSpan.Zero' TimeSpan.FromSeconds(5)' e => { log.Error("Exception occurred when monitoring endpoint instances"' e); });
Magic Number,ServiceControl.Operations.BodyStorage.RavenAttachments,RavenAttachmentsBodyStorage,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Operations\BodyStorage\RavenAttachments\RavenAttachmentsBodyStorage.cs,RavenAttachmentsBodyStorage,The following statement contains a magic number: locks = Enumerable.Range(0' 42).Select(i => new SemaphoreSlim(1)).ToArray();
Magic Number,ServiceControl.Recoverability,GroupFetcher,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\API\GroupFetcher.cs,GetDBGroups,The following statement contains a magic number: return groups.OrderByDescending(x => x.Last)                  .Take(200)                  .ToListAsync();
Magic Number,ServiceControl.Recoverability,ArchiveAllInGroupHandler,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Archiving\ArchiveAllInGroupHandler.cs,Handle,The following statement contains a magic number: !await documentManager.WaitForIndexUpdateOfArchiveOperation(store' archiveOperation.RequestId' archiveOperation.ArchiveType' TimeSpan.FromMinutes(5))                  .ConfigureAwait(false)
Magic Number,ServiceControl.Recoverability,InMemoryArchive,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Archiving\InMemoryArchive.cs,GetProgress,The following statement contains a magic number: var roundedPercentage = Math.Round(percentage' 2);
Magic Number,ServiceControl.Recoverability,CorruptedReplyToHeaderStrategy,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\CorruptedReplyToHeaderStrategy.cs,FixCorruptedReplyToHeader,The following statement contains a magic number: split.Length != 2
Magic Number,ServiceControl.Recoverability,AdoptOrphanBatchesFromPreviousSession,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\FailedMessageRetries.cs,OnStart,The following statement contains a magic number: timer = new AsyncTimer(async _ =>                  {                      var hasMoreWork = await AdoptOrphanedBatchesAsync().ConfigureAwait(false);                      return hasMoreWork ? TimerJobExecutionResult.ScheduleNextExecution : TimerJobExecutionResult.DoNotContinueExecuting;                  }' TimeSpan.Zero' TimeSpan.FromMinutes(2)' e => { log.Error("Unhandled exception while trying to adopt orphaned batches"' e); });
Magic Number,ServiceControl.Recoverability,ReturnToSender,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\Infrastructure\ReturnToSender.cs,ReadFully,The following statement contains a magic number: var buffer = new byte[16 * 1024];
Magic Number,ServiceControl.Recoverability,ReturnToSender,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\Infrastructure\ReturnToSender.cs,ReadFully,The following statement contains a magic number: var buffer = new byte[16 * 1024];
Magic Number,ServiceControl.Recoverability,ReturnToSenderDequeuer,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\Infrastructure\ReturnToSenderDequeuer.cs,Run,The following statement contains a magic number: timer.Change(TimeSpan.FromSeconds(45)' Timeout.InfiniteTimeSpan);
Magic Number,ServiceControl.Recoverability,InMemoryRetry,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Recoverability\Retrying\InMemoryRetry.cs,GetProgress,The following statement contains a magic number: var roundedPercentage = Math.Round(percentage' 2);
Magic Number,ServiceControl.SagaAudit,SagaRelationshipsEnricher,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\SagaAudit\SagaAuditing.cs,SplitInvokedSagas,The following statement contains a magic number: var headDeduplicated = head.Substring(0' head.Length / 2);
Missing Default,Particular.ServiceControl.Hosting,OptionSet,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Hosting\Options.cs,Parse,The following switch statement is missing a default case: switch (p.OptionValueType)                  {                      case OptionValueType.None:                          c.OptionValues.Add(n);                          c.Option.Invoke(c);                          break;                      case OptionValueType.Optional:                      case OptionValueType.Required:                          ParseValue(v' c);                          break;                  }
Missing Default,Particular.ServiceControl.Hosting,OptionSet,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl\Hosting\Options.cs,GetLineEnd,The following switch statement is missing a default case: switch (description[i])                  {                      case ' ':                      case '\t':                      case '\v':                      case '-':                      case ''':                      case '.':                      case ';':                          sep = i;                          break;                      case '\n':                          return i;                  }
