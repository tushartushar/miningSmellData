Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ServiceControl.LoadTests.AuditGenerator,LoadGenerator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.LoadTests.AuditGenerator\LoadGenerator.cs,ProcessedCountReported,The length of the statement  "                    log.Info($"Stopping sending messages to {destination} as the current queue length ({length}) is over the defined threshold ({maxLength})."); " is 140.
Long Statement,ServiceControl.LoadTests.AuditGenerator,LoadGenerator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.LoadTests.AuditGenerator\LoadGenerator.cs,ProcessedCountReported,The length of the statement  "                    log.Info($"Starting sending messages to {destination} as the current queue length ({length}) is under the defined threshold ({minLength})."); " is 141.
Empty Catch Block,ServiceControl.LoadTests.AuditGenerator,LoadGenerator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.LoadTests.AuditGenerator\LoadGenerator.cs,ProcessedCountReported,The method has an empty catch block.
Magic Number,ServiceControl.LoadTests.AuditGenerator,Program,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.LoadTests.AuditGenerator\Program.cs,Start,The following statement contains a magic number: Metric.Config.WithReporting(r =>              {                  r.WithCSVReports("."' TimeSpan.FromSeconds(5));              });
Magic Number,ServiceControl.LoadTests.AuditGenerator,Program,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.LoadTests.AuditGenerator\Program.cs,Start,The following statement contains a magic number: var minLength = SettingsReader<int>.Read(ConfigRoot' "MinLength"' 10000);
Magic Number,ServiceControl.LoadTests.AuditGenerator,Program,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.LoadTests.AuditGenerator\Program.cs,Start,The following statement contains a magic number: var maxLength = SettingsReader<int>.Read(ConfigRoot' "MaxLength"' 20000);
Magic Number,ServiceControl.LoadTests.AuditGenerator,Program,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.LoadTests.AuditGenerator\Program.cs,GenerateMessages,The following statement contains a magic number: var throttle = new SemaphoreSlim(SettingsReader<int>.Read(ConfigRoot' "ConcurrentSends"' 32));
