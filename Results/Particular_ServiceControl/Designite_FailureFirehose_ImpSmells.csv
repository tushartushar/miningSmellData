Implementation smell,Namespace,Class,File,Method,Description
Magic Number,FailureFirehose,Program,C:\research\architectureSmells\repos\Particular_ServiceControl\tools\FailureFirehose\Program.cs,ExecuteRestAPI,The following statement contains a magic number: var timer = new Timer(state =>              {                  Console.WriteLine("Firing off Archive/Retry Requests");                  ServiceControl.ArchiveAllGroups();              }' null' TimeSpan.FromMinutes(20)' TimeSpan.FromMinutes(20));
Magic Number,FailureFirehose,Program,C:\research\architectureSmells\repos\Particular_ServiceControl\tools\FailureFirehose\Program.cs,ExecuteRestAPI,The following statement contains a magic number: var timer = new Timer(state =>              {                  Console.WriteLine("Firing off Archive/Retry Requests");                  ServiceControl.ArchiveAllGroups();              }' null' TimeSpan.FromMinutes(20)' TimeSpan.FromMinutes(20));
Magic Number,FailureFirehose,Program,C:\research\architectureSmells\repos\Particular_ServiceControl\tools\FailureFirehose\Program.cs,RunSender,The following statement contains a magic number: var failureThreashold = (int)(total * (FAILURE_PERCENTAGE / 100m));
Magic Number,FailureFirehose,Program,C:\research\architectureSmells\repos\Particular_ServiceControl\tools\FailureFirehose\Program.cs,RunSender,The following statement contains a magic number: iteration > 20*60
Magic Number,FailureFirehose,Program,C:\research\architectureSmells\repos\Particular_ServiceControl\tools\FailureFirehose\Program.cs,RunSender,The following statement contains a magic number: iteration > 20*60
Magic Number,FailureFirehose,FailingHandler,C:\research\architectureSmells\repos\Particular_ServiceControl\tools\FailureFirehose\Program.cs,Handle,The following statement contains a magic number: switch (message.Id % 4)                  {                      case 0: throw new IOException("The disk is full");                      case 1: throw new WebException("The web API isn't responding");                      case 2: throw new SerializationException("Cannot deserialize message");                      default: throw new Exception("Some business thing happened");                  }
Magic Number,FailureFirehose,FailingHandler,C:\research\architectureSmells\repos\Particular_ServiceControl\tools\FailureFirehose\Program.cs,Handle,The following statement contains a magic number: switch (message.Id % 4)                  {                      case 0: throw new IOException("The disk is full");                      case 1: throw new WebException("The web API isn't responding");                      case 2: throw new SerializationException("Cannot deserialize message");                      default: throw new Exception("Some business thing happened");                  }
