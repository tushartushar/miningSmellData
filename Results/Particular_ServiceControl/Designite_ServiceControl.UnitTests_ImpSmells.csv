Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,ServiceControl.UnitTests.Infrastructure.Extensions,NegotiatorExtensionsTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\Extensions\NegotiatorExtensionsTests.cs,GetLinks,The method has 6 parameters. Parameters: totalResults' highestTotalCountOfAllInstances' currentPage' resultsPerPage' path' queryParams
Long Parameter List,ServiceControl.UnitTests.Recoverability,Retry_State_Tests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\Retry_State_Tests.cs,CreateAFailedMessageAndMarkAsPartOfRetryBatch,The method has 5 parameters. Parameters: documentStore' retryManager' groupId' progressToStaged' numberOfMessages
Long Parameter List,ServiceControl.UnitTests.Recoverability,Retry_State_Tests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\Retry_State_Tests.cs,CreateAFailedMessageAndMarkAsPartOfRetryBatch,The method has 5 parameters. Parameters: documentStore' retryManager' groupId' progressToStaged' messageIds
Long Parameter List,ServiceControl.UnitTests.ScatterGather,MessageView_ScatterGatherTest,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\ScatterGather\MessageView_ScatterGatherTest.cs,GetPage,The method has 5 parameters. Parameters: source' instanceId' etag' page' pageSize
Long Identifier,ServiceControl.UnitTests.CompositeViews,MessagesViewTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\CompositeViews\MessagesViewTests.cs,Order_by_critical_time,The length of the parameter firstByCriticalTimeDescription is 30.
Long Identifier,ServiceControl.UnitTests.Operations,ExceptionTypeAndStackTraceFailureClassifierTest,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\ExceptionTypeAndStackTraceFailureClassifierTest.cs,Non_standard_stack_trace_format_should_group_by_exception_type,The length of the parameter failureWithNonStandardStackTrace is 32.
Long Identifier,ServiceControl.UnitTests.Infrastructure.Extensions,NegotiatorExtensionsTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\Extensions\NegotiatorExtensionsTests.cs,GetLinks,The length of the parameter highestTotalCountOfAllInstances is 31.
Long Identifier,ServiceControl.UnitTests.Recoverability,CorruptedReplyToHeaderStrategyTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\CorruptedReplyToHeaderStrategyTests.cs,Handle_no_machine_name_in_header,The length of the parameter replyToAddressWithNoMachineName is 31.
Long Statement,ServiceControl.UnitTests.API,APIApprovals,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\API\APIApprovals.cs,RootPathValue,The length of the statement  "            var controller = new RootController(new ActiveLicense {IsValid = true}' new LoggingSettings("testEndpoint")' new Settings()) " is 124.
Long Statement,ServiceControl.UnitTests.API,APIApprovals,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\API\APIApprovals.cs,PlatformSampleSettings,The length of the statement  "            //If any changes have been made to settings' this may break the embedded config in that project' which may need to be updated. " is 126.
Long Statement,ServiceControl.UnitTests.Archiving,ArchiveGroupTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Archiving\ArchiveGroupTests.cs,ArchiveGroup_skips_over_empty_batches_but_still_completes,The length of the statement  "                var handler = new ArchiveAllInGroupHandler(documentStore' domainEvents' documentManager' archivingManager' retryingManager); " is 124.
Long Statement,ServiceControl.UnitTests.CompositeViews,MessagesViewTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\CompositeViews\MessagesViewTests.cs,Order_by_critical_time,The length of the statement  "                        new FailedMessage.ProcessingAttempt {MessageMetadata = new Dictionary<string' object> {{"CriticalTime"' TimeSpan.FromSeconds(15)}}} " is 131.
Long Statement,ServiceControl.UnitTests,EventHierarchy,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\EventHierarchy.cs,EnsureEventHierarchyIsFlat,The length of the statement  "            var eventTypes = serviceControlAssembly.GetTypes().Where(typeof(IEvent).IsAssignableFrom).Where(x => !x.IsAbstract).ToArray(); " is 126.
Long Statement,ServiceControl.UnitTests,EventHierarchy,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\EventHierarchy.cs,EnsureEventHierarchyIsFlat,The length of the statement  "            Assert.IsEmpty(nonFlatEvents' "Complex Event Hierarchy causes duplicate event handling with Azure ServiceBus and SubscribeToOwnEvents"); " is 136.
Long Statement,ServiceControl.UnitTests,HeaderAssertions,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\HeaderAssertions.cs,AssertHeader,The length of the statement  "            Assert.AreEqual(expectedValue' value' $"Header [{key}] has incorrect value\nExpected: {expectedValue}\nActual: {value}"); " is 121.
Long Statement,ServiceControl.UnitTests.Operations,FailedAuditImportCustomCheckTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Operations\FailedAuditImportCustomCheckTests.cs,Fail_if_failed_imports,The length of the statement  "                StringAssert.StartsWith("One or more audit messages have failed to import properly into ServiceControl and have been stored in the ServiceControl database."' result.FailureReason); " is 180.
Long Statement,ServiceControl.UnitTests.Operations,FailedErrorImportCustomCheckTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Operations\FailedErrorImportCustomCheckTests.cs,Fail_if_failed_imports,The length of the statement  "                StringAssert.StartsWith("One or more error messages have failed to import properly into ServiceControl and have been stored in the ServiceControl database."' result.FailureReason); " is 180.
Long Statement,ServiceControl.UnitTests.Operations,ExceptionTypeAndStackTraceFailureClassifierTest,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\ExceptionTypeAndStackTraceFailureClassifierTest.cs,Stack_with_lots_of_inner_exceptions_should_group_by_exception_type_and_first_stack_frame,The length of the statement  "            const string stackTrace = @"System.InvalidOperationException: Handler was not found for request of type Particular.Messages.Events.OffsetFromNowUpdated. " is 152.
Long Statement,ServiceControl.UnitTests.Operations,ExceptionTypeAndStackTraceFailureClassifierTest,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\ExceptionTypeAndStackTraceFailureClassifierTest.cs,Stack_with_lots_of_inner_exceptions_should_group_by_exception_type_and_first_stack_frame,The length of the statement  "Container or service locator not configured properly or handlers not registered with your container. ---> Autofac.Core.DependencyResolutionException: An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = INotificationHandler`1[] (DelegateActivator)' Services = [System.Collections.Generic.IEnumerable`1[[MediatR.INotificationHandler`1[[Particular.Messages.Events.OffsetFromNowUpdated' Particular' Version=1.0.0.1687' Culture=neutral' PublicKeyToken=null]]' MediatR' Version=2.1.0.0' Culture=neutral' PublicKeyToken=null]]]' Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime' Sharing = None' Ownership = ExternallyOwned ---> An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = OffsetTimeoutUpdater (ReflectionActivator)' Services = [MediatR.INotificationHandler`1[[Particular.Messages.Events.OffsetFromNowUpdated' Particular' Version=1.0.0.1687' Culture=neutral' PublicKeyToken=null]]]' Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime' Sharing = None' Ownership = OwnedByLifetimeScope ---> An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = TimeoutRepository (ReflectionActivator)' Services = [Particular.NServiceBus.NHibernate.Persistence.ITimeoutRepository]' Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime' Sharing = None' Ownership = OwnedByLifetimeScope ---> None of the constructors found with 'Autofac.Core.Activators.Reflection.DefaultConstructorFinder' on type 'Particular.NServiceBus.NHibernate.Persistence.TimeoutRepository' can be invoked with the available services and parameters: " is 1751.
Long Statement,ServiceControl.UnitTests.Operations,ExceptionTypeAndStackTraceFailureClassifierTest,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\ExceptionTypeAndStackTraceFailureClassifierTest.cs,Stack_with_lots_of_inner_exceptions_should_group_by_exception_type_and_first_stack_frame,The length of the statement  "Cannot resolve parameter 'NHibernate.ISession session' of constructor 'Void .ctor(NHibernate.ISession)'. (See inner exception for details.) (See inner exception for details.) (See inner exception for details.) ---> Autofac.Core.DependencyResolutionException: An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = OffsetTimeoutUpdater (ReflectionActivator)' Services = [MediatR.INotificationHandler`1[[Particular.Messages.Events.OffsetFromNowUpdated' Particular' Version=1.0.0.1687' Culture=neutral' PublicKeyToken=null]]]' Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime' Sharing = None' Ownership = OwnedByLifetimeScope ---> An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = TimeoutRepository (ReflectionActivator)' Services = [Particular.NServiceBus.NHibernate.Persistence.ITimeoutRepository]' Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime' Sharing = None' Ownership = OwnedByLifetimeScope ---> None of the constructors found with 'Autofac.Core.Activators.Reflection.DefaultConstructorFinder' on type 'Particular.NServiceBus.NHibernate.Persistence.TimeoutRepository' can be invoked with the available services and parameters: " is 1303.
Long Statement,ServiceControl.UnitTests.Operations,ExceptionTypeAndStackTraceFailureClassifierTest,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\ExceptionTypeAndStackTraceFailureClassifierTest.cs,Stack_with_lots_of_inner_exceptions_should_group_by_exception_type_and_first_stack_frame,The length of the statement  "Cannot resolve parameter 'NHibernate.ISession session' of constructor 'Void .ctor(NHibernate.ISession)'. (See inner exception for details.) (See inner exception for details.) ---> Autofac.Core.DependencyResolutionException: An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = TimeoutRepository (ReflectionActivator)' Services = [Particular.NServiceBus.NHibernate.Persistence.ITimeoutRepository]' Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime' Sharing = None' Ownership = OwnedByLifetimeScope ---> None of the constructors found with 'Autofac.Core.Activators.Reflection.DefaultConstructorFinder' on type 'Particular.NServiceBus.NHibernate.Persistence.TimeoutRepository' can be invoked with the available services and parameters: " is 816.
Long Statement,ServiceControl.UnitTests.Operations,ExceptionTypeAndStackTraceFailureClassifierTest,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\ExceptionTypeAndStackTraceFailureClassifierTest.cs,Stack_with_lots_of_inner_exceptions_should_group_by_exception_type_and_first_stack_frame,The length of the statement  "Cannot resolve parameter 'NHibernate.ISession session' of constructor 'Void .ctor(NHibernate.ISession)'. (See inner exception for details.) ---> Autofac.Core.DependencyResolutionException: None of the constructors found with 'Autofac.Core.Activators.Reflection.DefaultConstructorFinder' on type 'Particular.NServiceBus.NHibernate.Persistence.TimeoutRepository' can be invoked with the available services and parameters: " is 419.
Long Statement,ServiceControl.UnitTests.Operations,ExceptionTypeAndStackTraceFailureClassifierTest,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\ExceptionTypeAndStackTraceFailureClassifierTest.cs,Stack_with_lots_of_inner_exceptions_should_group_by_exception_type_and_first_stack_frame,The length of the statement  "   at Autofac.Core.Activators.Reflection.ReflectionActivator.ActivateInstance(IComponentContext context' IEnumerable`1 parameters) " is 127.
Long Statement,ServiceControl.UnitTests.Operations,ExceptionTypeAndStackTraceFailureClassifierTest,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\ExceptionTypeAndStackTraceFailureClassifierTest.cs,Stack_with_lots_of_inner_exceptions_should_group_by_exception_type_and_first_stack_frame,The length of the statement  "            Assert.AreEqual(@"exceptionType: Autofac.Core.Activators.Reflection.ReflectionActivator.ActivateInstance(IComponentContext context' IEnumerable`1 parameters)"' classification); " is 176.
Long Statement,ServiceControl.UnitTests.Infrastructure.Extensions,NegotiatorExtensionsTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\Extensions\NegotiatorExtensionsTests.cs,GetLinks,The length of the statement  "            var request = new HttpRequestMessage(new HttpMethod("GET")' $"http://name.tld:99/api/{path ?? string.Empty}{queryString.TrimEnd('&')}"); " is 136.
Long Statement,ServiceControl.UnitTests.Infrastructure.Extensions,NegotiatorExtensionsTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\Extensions\NegotiatorExtensionsTests.cs,GetLinks,The length of the statement  "            var response = request.CreateResponse().WithPagingLinks(totalResults' highestTotalCountOfAllInstances ?? totalResults' request); " is 128.
Long Statement,ServiceControl.UnitTests.Infrastructure,TransportMessageExtensionsTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\TransportMessageExtensionsTests.cs,No_headers_should_throw_with_message_id,The length of the statement  "            Assert.AreEqual("No processing endpoint could be determined for message (00000000-0000-0000-0000-000000000000)"' exception.Message); " is 132.
Long Statement,ServiceControl.UnitTests.Infrastructure,TransportMessageExtensionsTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\TransportMessageExtensionsTests.cs,No_headers_with_message_type_should_throw_with_message_id_and_types,The length of the statement  "            Assert.AreEqual("No processing endpoint could be determined for message (00000000-0000-0000-0000-000000000000) with EnclosedMessageTypes (TheMessageType)"' exception.Message); " is 175.
Long Statement,ServiceControl.UnitTests.Infrastructure.RavenDB,SubscriptionPersisterTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\RavenDB\SubscriptionPersisterTests.cs,ShouldReturnSubscriptionsForOlderVersionsOfSameMessageType,The length of the statement  "            var subscriptionPersister = new SubscriptionPersister(documentStore' settings' "NServiceBus.Routing.EndpointName"' "TestEndpoint"' new MessageType[0]); " is 151.
Long Statement,ServiceControl.UnitTests.Infrastructure.RavenDB,SubscriptionPersisterTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\RavenDB\SubscriptionPersisterTests.cs,ShouldReturnSubscriptionsForOlderVersionsOfSameMessageType,The length of the statement  "            var foundSubscriptions = await subscriptionPersister.GetSubscriberAddressesForMessage(new[] {v2MessageType}' new ContextBag()); " is 127.
Long Statement,ServiceControl.UnitTests.Infrastructure.RavenDB,SubscriptionPersisterTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\RavenDB\SubscriptionPersisterTests.cs,ShouldReturnSubscriptionsForNewerVersionsOfSameMessageType,The length of the statement  "            var subscriptionPersister = new SubscriptionPersister(documentStore' settings' "NServiceBus.Routing.EndpointName"' "TestEndpoint"' new MessageType[0]); " is 151.
Long Statement,ServiceControl.UnitTests.Infrastructure.RavenDB,SubscriptionPersisterTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\RavenDB\SubscriptionPersisterTests.cs,ShouldReturnSubscriptionsForNewerVersionsOfSameMessageType,The length of the statement  "            var foundSubscriptions = await subscriptionPersister.GetSubscriberAddressesForMessage(new[] {v1MessageType}' new ContextBag()); " is 127.
Long Statement,ServiceControl.UnitTests.Infrastructure.Settings,SettingsTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\Settings\SettingsTests.cs,WriteSetting,The length of the statement  "            config.AppSettings.Settings.Add("ServiceControl/RemoteInstances"' "[{'api_uri':'http://instance1'}'{'api_uri':'http://instance2'}]'"); " is 134.
Long Statement,ServiceControl.UnitTests.Recoverability,EditMessageTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\EditMessageTests.cs,Should_dispatch_edited_message_when_first_edit,The length of the statement  "                var editOperation = await session.LoadAsync<FailedMessageEdit>(FailedMessageEdit.MakeDocumentId(failedMessage.UniqueMessageId)); " is 128.
Long Statement,ServiceControl.UnitTests.Recoverability,Retry_State_Tests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\Retry_State_Tests.cs,When_a_group_is_prepared_with_three_batches_and_SC_is_restarted_while_the_first_group_is_being_forwarded_then_the_count_still_matches,The length of the statement  "                var processor = new RetryProcessor(documentStore' sender' domainEvents' new TestReturnToSenderDequeuer(new ReturnToSender(bodyStorage)' documentStore' domainEvents' "TestEndpoint")' retryManager); " is 196.
Long Statement,ServiceControl.UnitTests.Recoverability,Retry_State_Tests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\Retry_State_Tests.cs,When_a_group_is_prepared_with_three_batches_and_SC_is_restarted_while_the_first_group_is_being_forwarded_then_the_count_still_matches,The length of the statement  "                    processor = new RetryProcessor(documentStore' sender' domainEvents' new TestReturnToSenderDequeuer(new ReturnToSender(bodyStorage)' documentStore' domainEvents' "TestEndpoint")' retryManager); " is 192.
Long Statement,ServiceControl.UnitTests.Recoverability,Retry_State_Tests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\Retry_State_Tests.cs,When_a_group_is_forwarded_the_status_is_Completed,The length of the statement  "                var returnToSender = new TestReturnToSenderDequeuer(new ReturnToSender(bodyStorage)' documentStore' domainEvents' "TestEndpoint"); " is 130.
Long Statement,ServiceControl.UnitTests.Recoverability,Retry_State_Tests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\Retry_State_Tests.cs,When_there_is_one_poison_message_it_is_removed_from_batch_and_the_status_is_Complete,The length of the statement  "                var returnToSender = new TestReturnToSenderDequeuer(new ReturnToSender(bodyStorage)' documentStore' domainEvents' "TestEndpoint"); " is 130.
Long Statement,ServiceControl.UnitTests.Recoverability,Retry_State_Tests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\Retry_State_Tests.cs,When_a_group_has_one_batch_out_of_two_forwarded_the_status_is_Forwarding,The length of the statement  "                var processor = new RetryProcessor(documentStore' sender' domainEvents' new TestReturnToSenderDequeuer(returnToSender' documentStore' domainEvents' "TestEndpoint")' retryManager); " is 179.
Long Statement,ServiceControl.UnitTests.Recoverability,Retry_State_Tests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\Retry_State_Tests.cs,CreateAFailedMessageAndMarkAsPartOfRetryBatch,The length of the statement  "            return CreateAFailedMessageAndMarkAsPartOfRetryBatch(documentStore' retryManager' groupId' progressToStaged' Enumerable.Range(0' numberOfMessages).Select(i => Guid.NewGuid().ToString()).ToArray()); " is 197.
Long Statement,ServiceControl.UnitTests.Recoverability,Retry_State_Tests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\Retry_State_Tests.cs,CreateAFailedMessageAndMarkAsPartOfRetryBatch,The length of the statement  "            gateway.StartRetryForIndex<FailureGroupMessageView' FailedMessages_ByGroup>("Test-group"' RetryType.FailureGroup' DateTime.UtcNow' x => x.FailureGroupId == "Test-group"' "Test-Context"); " is 186.
Long Statement,ServiceControl.UnitTests.RouteApi,RetryMessage_RoutesApiTest,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\RouteApi\RetryMessage_RoutesApiTest.cs,LocalResponseReturnedWhenInstanceIdMatchesLocal,The length of the statement  "            var response = await testApi.Execute(request' _ => localResponse' _ => { throw new InvalidOperationException("should not be called"); }); " is 137.
Long Statement,ServiceControl.UnitTests.RouteApi,RetryMessage_RoutesApiTest,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\RouteApi\RetryMessage_RoutesApiTest.cs,RemoteResponseReturnedWhenInstanceIdMatchesRemote,The length of the statement  "            var response = await testApi.Execute(request' _ => { throw new InvalidOperationException("should not be called"); }' r => " is 121.
Long Statement,ServiceControl.UnitTests.RouteApi,RetryMessage_RoutesApiTest,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\RouteApi\RetryMessage_RoutesApiTest.cs,RemoteThrowsReturnsEmptyResultWithServerError,The length of the statement  "            var response = await testApi.Execute(request' _ => new HttpResponseMessage()' r => { throw new InvalidOperationException(""); }); " is 129.
Long Statement,ServiceControl.UnitTests.RouteApi,RetryMessage_RoutesApiTest,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\RouteApi\RetryMessage_RoutesApiTest.cs,ContentForwardedToRemote,The length of the statement  "            var response = await testApi.Execute(request' _ => { throw new InvalidOperationException("should not be called"); }' r => " is 121.
Long Statement,ServiceControl.UnitTests.SagaAudit,SagaRelationshipsEnricherTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\SagaAudit\SagaRelationshipsEnricherTests.cs,New_overrides_Updated_state,The length of the statement  "                ["NServiceBus.InvokedSagas"] = "ConsoleApp1.MySaga:51b5ad68-8ac4-46ee-a39c-a79900ca4ea8;ConsoleApp1.MySaga:51b5ad68-8ac4-46ee-a39c-a79900ca4ea8"' " is 145.
Long Statement,ServiceControl.UnitTests.SagaAudit,SagaRelationshipsEnricherTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\SagaAudit\SagaRelationshipsEnricherTests.cs,New_overrides_Updated_state,The length of the statement  "                ["ServiceControl.SagaStateChange"] = "51b5ad68-8ac4-46ee-a39c-a79900ca4ea8:Updated;51b5ad68-8ac4-46ee-a39c-a79900ca4ea8:New" " is 124.
Long Statement,ServiceControl.UnitTests.SagaAudit,SagaRelationshipsEnricherTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\SagaAudit\SagaRelationshipsEnricherTests.cs,Updated_does_not_override_new,The length of the statement  "                ["NServiceBus.InvokedSagas"] = "ConsoleApp1.MySaga:51b5ad68-8ac4-46ee-a39c-a79900ca4ea8;ConsoleApp1.MySaga:51b5ad68-8ac4-46ee-a39c-a79900ca4ea8"' " is 145.
Long Statement,ServiceControl.UnitTests.SagaAudit,SagaRelationshipsEnricherTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\SagaAudit\SagaRelationshipsEnricherTests.cs,Updated_does_not_override_new,The length of the statement  "                ["ServiceControl.SagaStateChange"] = "51b5ad68-8ac4-46ee-a39c-a79900ca4ea8:New;51b5ad68-8ac4-46ee-a39c-a79900ca4ea8:Updated" " is 124.
Long Statement,ServiceControl.UnitTests.SagaAudit,SagaRelationshipsEnricherTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\SagaAudit\SagaRelationshipsEnricherTests.cs,Updated_does_not_override_completed,The length of the statement  "                ["NServiceBus.InvokedSagas"] = "ConsoleApp1.MySaga:51b5ad68-8ac4-46ee-a39c-a79900ca4ea8;ConsoleApp1.MySaga:51b5ad68-8ac4-46ee-a39c-a79900ca4ea8"' " is 145.
Long Statement,ServiceControl.UnitTests.SagaAudit,SagaRelationshipsEnricherTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\SagaAudit\SagaRelationshipsEnricherTests.cs,Updated_does_not_override_completed,The length of the statement  "                ["ServiceControl.SagaStateChange"] = "51b5ad68-8ac4-46ee-a39c-a79900ca4ea8:Completed;51b5ad68-8ac4-46ee-a39c-a79900ca4ea8:Updated" " is 130.
Long Statement,ServiceControl.UnitTests.SagaAudit,SagaRelationshipsEnricherTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\SagaAudit\SagaRelationshipsEnricherTests.cs,Completed_overrides_new,The length of the statement  "                ["NServiceBus.InvokedSagas"] = "ConsoleApp1.MySaga:51b5ad68-8ac4-46ee-a39c-a79900ca4ea8;ConsoleApp1.MySaga:51b5ad68-8ac4-46ee-a39c-a79900ca4ea8"' " is 145.
Long Statement,ServiceControl.UnitTests.SagaAudit,SagaRelationshipsEnricherTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\SagaAudit\SagaRelationshipsEnricherTests.cs,Completed_overrides_new,The length of the statement  "                ["ServiceControl.SagaStateChange"] = "51b5ad68-8ac4-46ee-a39c-a79900ca4ea8:New;51b5ad68-8ac4-46ee-a39c-a79900ca4ea8:Completed" " is 126.
Long Statement,ServiceControl.UnitTests.SagaAudit,SagaRelationshipsEnricherTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\SagaAudit\SagaRelationshipsEnricherTests.cs,New_does_not_override_completed,The length of the statement  "                ["NServiceBus.InvokedSagas"] = "ConsoleApp1.MySaga:51b5ad68-8ac4-46ee-a39c-a79900ca4ea8;ConsoleApp1.MySaga:51b5ad68-8ac4-46ee-a39c-a79900ca4ea8"' " is 145.
Long Statement,ServiceControl.UnitTests.SagaAudit,SagaRelationshipsEnricherTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\SagaAudit\SagaRelationshipsEnricherTests.cs,New_does_not_override_completed,The length of the statement  "                ["ServiceControl.SagaStateChange"] = "51b5ad68-8ac4-46ee-a39c-a79900ca4ea8:Completed;51b5ad68-8ac4-46ee-a39c-a79900ca4ea8:New" " is 126.
Long Statement,ServiceControl.UnitTests.SagaAudit,SagaRelationshipsEnricherTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\SagaAudit\SagaRelationshipsEnricherTests.cs,It_can_parse_malformed_headers_of_three_sagas,The length of the statement  "                ["NServiceBus.InvokedSagas"] = "ConsoleApp1.MySaga2:9bc8ff00-9e10-41f6-8a56-a79a0060a762ConsoleApp1.MySaga2:9bc8ff00-9e10-41f6-8a56-a79a0060a762;ConsoleApp1.MySaga3:6f46e0e9-5476-4141-a1fd-a79a0060a782ConsoleApp1.MySaga2:9bc8ff00-9e10-41f6-8a56-a79a0060a762ConsoleApp1.MySaga2:9bc8ff00-9e10-41f6-8a56-a79a0060a762;ConsoleApp1.MySaga3:6f46e0e9-5476-4141-a1fd-a79a0060a782;ConsoleApp1.MySaga:c0ed4546-ddce-42d7-9ce2-a79a0060a782"' " is 428.
Long Statement,ServiceControl.UnitTests.SagaAudit,SagaRelationshipsEnricherTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\SagaAudit\SagaRelationshipsEnricherTests.cs,It_can_parse_malformed_headers_of_three_sagas,The length of the statement  "                ["ServiceControl.SagaStateChange"] = "c0ed4546-ddce-42d7-9ce2-a79a0060a782:Updated;6f46e0e9-5476-4141-a1fd-a79a0060a782:New;9bc8ff00-9e10-41f6-8a56-a79a0060a762:Completed" " is 171.
Empty Catch Block,ServiceControl.UnitTests.Operations,ReturnToSenderDequeuerTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\ReturnToSenderDequeuerTests.cs,It_restores_body_id_and_target_addres_after_failure,The method has an empty catch block.
Magic Number,ServiceControl.UnitTests.Archiving,ArchiveGroupTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Archiving\ArchiveGroupTests.cs,ArchiveGroup_skips_over_empty_batches_but_still_completes,The following statement contains a magic number: var previousArchiveOperation = new ArchiveOperation                      {                          Id = ArchiveOperation.MakeId(groupId' ArchiveType.FailureGroup)'                          RequestId = groupId'                          ArchiveType = ArchiveType.FailureGroup'                          TotalNumberOfMessages = 2'                          NumberOfMessagesArchived = 0'                          Started = DateTime.Now'                          GroupName = "Test Group"'                          NumberOfBatches = 3'                          CurrentBatch = 0                      };
Magic Number,ServiceControl.UnitTests.Archiving,ArchiveGroupTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Archiving\ArchiveGroupTests.cs,ArchiveGroup_skips_over_empty_batches_but_still_completes,The following statement contains a magic number: var previousArchiveOperation = new ArchiveOperation                      {                          Id = ArchiveOperation.MakeId(groupId' ArchiveType.FailureGroup)'                          RequestId = groupId'                          ArchiveType = ArchiveType.FailureGroup'                          TotalNumberOfMessages = 2'                          NumberOfMessagesArchived = 0'                          Started = DateTime.Now'                          GroupName = "Test Group"'                          NumberOfBatches = 3'                          CurrentBatch = 0                      };
Magic Number,ServiceControl.UnitTests.BodyStorage,BodyStorageEnricherTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\BodyStorage\BodyStorageEnricherTests.cs,Should_store_body_regardless_of_the_body_size,The following statement contains a magic number: const int ExpectedBodySize = 150000;
Magic Number,ServiceControl.UnitTests.BodyStorage,RavenAttachmentsBodyStorageTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\BodyStorage\RavenAttachmentsBodyStorageTests.cs,Attachments_with_ids_that_contain_backslash_should_be_readable,The following statement contains a magic number: var body = new byte[] {1' 2' 3};
Magic Number,ServiceControl.UnitTests.BodyStorage,RavenAttachmentsBodyStorageTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\BodyStorage\RavenAttachmentsBodyStorageTests.cs,Attachments_with_ids_that_contain_backslash_should_be_readable,The following statement contains a magic number: var body = new byte[] {1' 2' 3};
Magic Number,ServiceControl.UnitTests.CompositeViews,FailedMessagesTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\CompositeViews\FailedMessagesTests.cs,Should_allow_errors_with_no_metadata,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,ServiceControl.UnitTests.CompositeViews,MessagesViewTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\CompositeViews\MessagesViewTests.cs,Order_by_critical_time,The following statement contains a magic number: session.Store(new ProcessedMessage                  {                      Id = "1"'                      MessageMetadata = new Dictionary<string' object> {{"CriticalTime"' TimeSpan.FromSeconds(10)}}                  });
Magic Number,ServiceControl.UnitTests.CompositeViews,MessagesViewTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\CompositeViews\MessagesViewTests.cs,Order_by_critical_time,The following statement contains a magic number: session.Store(new ProcessedMessage                  {                      Id = "2"'                      MessageMetadata = new Dictionary<string' object> {{"CriticalTime"' TimeSpan.FromSeconds(20)}}                  });
Magic Number,ServiceControl.UnitTests.CompositeViews,MessagesViewTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\CompositeViews\MessagesViewTests.cs,Order_by_critical_time,The following statement contains a magic number: session.Store(new ProcessedMessage                  {                      Id = "3"'                      MessageMetadata = new Dictionary<string' object> {{"CriticalTime"' TimeSpan.FromSeconds(15)}}                  });
Magic Number,ServiceControl.UnitTests.CompositeViews,MessagesViewTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\CompositeViews\MessagesViewTests.cs,Order_by_critical_time,The following statement contains a magic number: session.Store(new FailedMessage                  {                      Id = "4"'                      Status = FailedMessageStatus.Unresolved'                      ProcessingAttempts = new List<FailedMessage.ProcessingAttempt>                      {                          new FailedMessage.ProcessingAttempt {MessageMetadata = new Dictionary<string' object> {{"CriticalTime"' TimeSpan.FromSeconds(15)}}}                      }                  });
Magic Number,ServiceControl.UnitTests.CompositeViews,MessagesViewTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\CompositeViews\MessagesViewTests.cs,Order_by_time_sent,The following statement contains a magic number: session.Store(new ProcessedMessage                  {                      Id = "1"'                      MessageMetadata = new Dictionary<string' object> {{"TimeSent"' DateTime.Today.AddSeconds(20)}}                  });
Magic Number,ServiceControl.UnitTests.CompositeViews,MessagesViewTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\CompositeViews\MessagesViewTests.cs,Order_by_time_sent,The following statement contains a magic number: session.Store(new ProcessedMessage                  {                      Id = "2"'                      MessageMetadata = new Dictionary<string' object> {{"TimeSent"' DateTime.Today.AddSeconds(10)}}                  });
Magic Number,ServiceControl.UnitTests.Expiration,ChunkerTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ChunkerTests.cs,Chunking,The following statement contains a magic number: var count = Chunker.ExecuteInChunks(1500' (startList' endList' s' e) =>              {                  startList.Add(s);                  endList.Add(e);                  return 1;              }' starts' ends' CancellationToken.None);
Magic Number,ServiceControl.UnitTests.Expiration,ChunkerTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ChunkerTests.cs,Chunking,The following statement contains a magic number: Assert.AreEqual(499' ends[0]);
Magic Number,ServiceControl.UnitTests.Expiration,ChunkerTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ChunkerTests.cs,Chunking,The following statement contains a magic number: Assert.AreEqual(500' starts[1]);
Magic Number,ServiceControl.UnitTests.Expiration,ChunkerTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ChunkerTests.cs,Chunking,The following statement contains a magic number: Assert.AreEqual(999' ends[1]);
Magic Number,ServiceControl.UnitTests.Expiration,ChunkerTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ChunkerTests.cs,Chunking,The following statement contains a magic number: Assert.AreEqual(1000' starts[2]);
Magic Number,ServiceControl.UnitTests.Expiration,ChunkerTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ChunkerTests.cs,Chunking,The following statement contains a magic number: Assert.AreEqual(1000' starts[2]);
Magic Number,ServiceControl.UnitTests.Expiration,ChunkerTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ChunkerTests.cs,Chunking,The following statement contains a magic number: Assert.AreEqual(1499' ends[2]);
Magic Number,ServiceControl.UnitTests.Expiration,ChunkerTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ChunkerTests.cs,Chunking,The following statement contains a magic number: Assert.AreEqual(1499' ends[2]);
Magic Number,ServiceControl.UnitTests.Expiration,ChunkerTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ChunkerTests.cs,Chunking,The following statement contains a magic number: Assert.AreEqual(3' starts.Count);
Magic Number,ServiceControl.UnitTests.Expiration,ChunkerTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ChunkerTests.cs,Chunking,The following statement contains a magic number: Assert.AreEqual(3' ends.Count);
Magic Number,ServiceControl.UnitTests.Expiration,ChunkerTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ChunkerTests.cs,Chunking,The following statement contains a magic number: Assert.AreEqual(3' count);
Magic Number,ServiceControl.UnitTests.Expiration,ChunkerTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ChunkerTests.cs,OneExtra,The following statement contains a magic number: var count = Chunker.ExecuteInChunks(1001' (startList' endList' s' e) =>              {                  startList.Add(s);                  endList.Add(e);                  return 1;              }' starts' ends' CancellationToken.None);
Magic Number,ServiceControl.UnitTests.Expiration,ChunkerTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ChunkerTests.cs,OneExtra,The following statement contains a magic number: Assert.AreEqual(499' ends[0]);
Magic Number,ServiceControl.UnitTests.Expiration,ChunkerTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ChunkerTests.cs,OneExtra,The following statement contains a magic number: Assert.AreEqual(500' starts[1]);
Magic Number,ServiceControl.UnitTests.Expiration,ChunkerTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ChunkerTests.cs,OneExtra,The following statement contains a magic number: Assert.AreEqual(999' ends[1]);
Magic Number,ServiceControl.UnitTests.Expiration,ChunkerTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ChunkerTests.cs,OneExtra,The following statement contains a magic number: Assert.AreEqual(1000' starts[2]);
Magic Number,ServiceControl.UnitTests.Expiration,ChunkerTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ChunkerTests.cs,OneExtra,The following statement contains a magic number: Assert.AreEqual(1000' starts[2]);
Magic Number,ServiceControl.UnitTests.Expiration,ChunkerTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ChunkerTests.cs,OneExtra,The following statement contains a magic number: Assert.AreEqual(1000' ends[2]);
Magic Number,ServiceControl.UnitTests.Expiration,ChunkerTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ChunkerTests.cs,OneExtra,The following statement contains a magic number: Assert.AreEqual(1000' ends[2]);
Magic Number,ServiceControl.UnitTests.Expiration,ChunkerTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ChunkerTests.cs,OneExtra,The following statement contains a magic number: Assert.AreEqual(3' starts.Count);
Magic Number,ServiceControl.UnitTests.Expiration,ChunkerTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ChunkerTests.cs,OneExtra,The following statement contains a magic number: Assert.AreEqual(3' ends.Count);
Magic Number,ServiceControl.UnitTests.Expiration,ChunkerTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ChunkerTests.cs,OneExtra,The following statement contains a magic number: Assert.AreEqual(3' count);
Magic Number,ServiceControl.UnitTests.Expiration,ProcessedMessageExpirationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ProcessedMessageExpirationTests.cs,Old_documents_are_being_expired,The following statement contains a magic number: var expiredDate = DateTime.UtcNow.AddDays(-3);
Magic Number,ServiceControl.UnitTests.Expiration,ProcessedMessageExpirationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ProcessedMessageExpirationTests.cs,Old_documents_are_being_expired,The following statement contains a magic number: var thresholdDate = DateTime.UtcNow.AddDays(-2);
Magic Number,ServiceControl.UnitTests.Expiration,ProcessedMessageExpirationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ProcessedMessageExpirationTests.cs,Many_documents_are_being_expired,The following statement contains a magic number: var expiredDate = DateTime.UtcNow.AddDays(-3);
Magic Number,ServiceControl.UnitTests.Expiration,ProcessedMessageExpirationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ProcessedMessageExpirationTests.cs,Many_documents_are_being_expired,The following statement contains a magic number: var thresholdDate = DateTime.UtcNow.AddDays(-2);
Magic Number,ServiceControl.UnitTests.Expiration,ProcessedMessageExpirationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ProcessedMessageExpirationTests.cs,Only_processed_messages_are_being_expired,The following statement contains a magic number: var expiredDate = DateTime.UtcNow.AddDays(-3);
Magic Number,ServiceControl.UnitTests.Expiration,ProcessedMessageExpirationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ProcessedMessageExpirationTests.cs,Only_processed_messages_are_being_expired,The following statement contains a magic number: var thresholdDate = DateTime.UtcNow.AddDays(-2);
Magic Number,ServiceControl.UnitTests.Expiration,ProcessedMessageExpirationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ProcessedMessageExpirationTests.cs,Stored_bodies_are_being_removed_when_message_expires,The following statement contains a magic number: var expiredDate = DateTime.UtcNow.AddDays(-3);
Magic Number,ServiceControl.UnitTests.Expiration,ProcessedMessageExpirationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ProcessedMessageExpirationTests.cs,Stored_bodies_are_being_removed_when_message_expires,The following statement contains a magic number: var thresholdDate = DateTime.UtcNow.AddDays(-2);
Magic Number,ServiceControl.UnitTests.Expiration,ProcessedMessageExpirationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ProcessedMessageExpirationTests.cs,Stored_bodies_are_being_removed_when_message_expires,The following statement contains a magic number: var body = new byte[]                  {                      1'                      2'                      3'                      4'                      5                  };
Magic Number,ServiceControl.UnitTests.Expiration,ProcessedMessageExpirationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ProcessedMessageExpirationTests.cs,Stored_bodies_are_being_removed_when_message_expires,The following statement contains a magic number: var body = new byte[]                  {                      1'                      2'                      3'                      4'                      5                  };
Magic Number,ServiceControl.UnitTests.Expiration,ProcessedMessageExpirationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ProcessedMessageExpirationTests.cs,Stored_bodies_are_being_removed_when_message_expires,The following statement contains a magic number: var body = new byte[]                  {                      1'                      2'                      3'                      4'                      5                  };
Magic Number,ServiceControl.UnitTests.Expiration,ProcessedMessageExpirationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ProcessedMessageExpirationTests.cs,Stored_bodies_are_being_removed_when_message_expires,The following statement contains a magic number: var body = new byte[]                  {                      1'                      2'                      3'                      4'                      5                  };
Magic Number,ServiceControl.UnitTests.Expiration,ProcessedMessageExpirationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ProcessedMessageExpirationTests.cs,Stored_bodies_are_being_removed_when_message_expires,The following statement contains a magic number: await bodyStorage.Store(messageId' "binary"' 5' stream);
Magic Number,ServiceControl.UnitTests.Expiration,ProcessedMessageExpirationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ProcessedMessageExpirationTests.cs,Recent_processed_messages_are_not_being_expired,The following statement contains a magic number: var thresholdDate = DateTime.UtcNow.AddDays(-2);
Magic Number,ServiceControl.UnitTests.Expiration,ProcessedMessageExpirationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\ProcessedMessageExpirationTests.cs,Errors_are_not_being_expired,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,ServiceControl.UnitTests.Expiration,SagaAuditExpirationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\SagaAuditExpirationTests.cs,Old_documents_are_being_expired,The following statement contains a magic number: var expiredDate = DateTime.UtcNow.AddDays(-3);
Magic Number,ServiceControl.UnitTests.Expiration,SagaAuditExpirationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\SagaAuditExpirationTests.cs,Old_documents_are_being_expired,The following statement contains a magic number: var thresholdDate = DateTime.UtcNow.AddDays(-2);
Magic Number,ServiceControl.UnitTests.Expiration,SagaAuditExpirationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\SagaAuditExpirationTests.cs,Many_documents_are_being_expired,The following statement contains a magic number: var expiredDate = DateTime.UtcNow.AddDays(-3);
Magic Number,ServiceControl.UnitTests.Expiration,SagaAuditExpirationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\SagaAuditExpirationTests.cs,Many_documents_are_being_expired,The following statement contains a magic number: var thresholdDate = DateTime.UtcNow.AddDays(-2);
Magic Number,ServiceControl.UnitTests.Expiration,SagaAuditExpirationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\SagaAuditExpirationTests.cs,BuilExpiredMessaged,The following statement contains a magic number: i < 10
Magic Number,ServiceControl.UnitTests.Expiration,SagaAuditExpirationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\SagaAuditExpirationTests.cs,RunExpiry,The following statement contains a magic number: SagaHistoryCleaner.Clean(100' documentStore.DocumentDatabase' expiryThreshold' CancellationToken.None);
Magic Number,ServiceControl.UnitTests.Expiration,SagaAuditExpirationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\SagaAuditExpirationTests.cs,Only_expired_being_deleted,The following statement contains a magic number: var expiredDate = DateTime.UtcNow.AddDays(-3);
Magic Number,ServiceControl.UnitTests.Expiration,SagaAuditExpirationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\SagaAuditExpirationTests.cs,Only_expired_being_deleted,The following statement contains a magic number: var thresholdDate = DateTime.UtcNow.AddDays(-2);
Magic Number,ServiceControl.UnitTests.Expiration,SagaAuditExpirationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\SagaAuditExpirationTests.cs,Recent_processed_messages_are_not_being_expired,The following statement contains a magic number: var thresholdDate = DateTime.UtcNow.AddDays(-2);
Magic Number,ServiceControl.UnitTests.Expiration,SagaAuditExpirationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Expiration\SagaAuditExpirationTests.cs,Errors_are_not_being_expired,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,ServiceControl.UnitTests.Operations,WatchdogTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Operations\WatchdogTests.cs,When_start_fails_it_is_retried,The following statement contains a magic number: var dog = new Watchdog(                  token =>                  {                      if (startAttempts > 1)                      {                          //Make sure failures are reported                          Assert.AreEqual("Simulated"' lastFailure);                      }                      if (startAttempts < 5)                      {                          startAttempts++;                          throw new Exception("Simulated");                      }                      started.SetResult(true);                      return Task.CompletedTask;                  }'                  token => Task.CompletedTask'                   x => lastFailure = x' () => lastFailure = null' TimeSpan.FromSeconds(1)' log' "test process");
Magic Number,ServiceControl.UnitTests.Operations,WatchdogTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Operations\WatchdogTests.cs,When_start_fails_it_is_retried,The following statement contains a magic number: Assert.AreEqual(5' startAttempts);
Magic Number,ServiceControl.UnitTests.Operations,RetryGroupEtagHelperTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryGroupEtagHelperTests.cs,Count_changed_should_change_etag,The following statement contains a magic number: group.Count = 2;
Magic Number,ServiceControl.UnitTests.Operations,RetryGroupEtagHelperTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryGroupEtagHelperTests.cs,RetryProgress_changed_should_change_etag,The following statement contains a magic number: group.OperationProgress = 0.01;
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationProgressCalculatorTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationProgressCalculatorTests.cs,Completed_should_be_100_percentage,The following statement contains a magic number: var calculated = OperationProgressCalculator.CalculateProgress(2000' 2000' 2000' 0' RetryState.Completed);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationProgressCalculatorTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationProgressCalculatorTests.cs,Completed_should_be_100_percentage,The following statement contains a magic number: var calculated = OperationProgressCalculator.CalculateProgress(2000' 2000' 2000' 0' RetryState.Completed);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationProgressCalculatorTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationProgressCalculatorTests.cs,Completed_should_be_100_percentage,The following statement contains a magic number: var calculated = OperationProgressCalculator.CalculateProgress(2000' 2000' 2000' 0' RetryState.Completed);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationProgressCalculatorTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationProgressCalculatorTests.cs,Preparing_half_done_should_be_50_percentage,The following statement contains a magic number: var calculated = OperationProgressCalculator.CalculateProgress(2000' 1000' 0' 0' RetryState.Preparing);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationProgressCalculatorTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationProgressCalculatorTests.cs,Preparing_half_done_should_be_50_percentage,The following statement contains a magic number: var calculated = OperationProgressCalculator.CalculateProgress(2000' 1000' 0' 0' RetryState.Preparing);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationProgressCalculatorTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationProgressCalculatorTests.cs,Preparing_half_done_should_be_50_percentage,The following statement contains a magic number: Assert.AreEqual(0.5' calculated);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationProgressCalculatorTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationProgressCalculatorTests.cs,Preparing_done_should_be_100_percentage,The following statement contains a magic number: var calculated = OperationProgressCalculator.CalculateProgress(2000' 2000' 0' 0' RetryState.Preparing);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationProgressCalculatorTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationProgressCalculatorTests.cs,Preparing_done_should_be_100_percentage,The following statement contains a magic number: var calculated = OperationProgressCalculator.CalculateProgress(2000' 2000' 0' 0' RetryState.Preparing);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationProgressCalculatorTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationProgressCalculatorTests.cs,Forwarding_half_done_should_be_50_percentage,The following statement contains a magic number: var calculated = OperationProgressCalculator.CalculateProgress(2000' 2000' 1000' 0' RetryState.Forwarding);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationProgressCalculatorTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationProgressCalculatorTests.cs,Forwarding_half_done_should_be_50_percentage,The following statement contains a magic number: var calculated = OperationProgressCalculator.CalculateProgress(2000' 2000' 1000' 0' RetryState.Forwarding);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationProgressCalculatorTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationProgressCalculatorTests.cs,Forwarding_half_done_should_be_50_percentage,The following statement contains a magic number: var calculated = OperationProgressCalculator.CalculateProgress(2000' 2000' 1000' 0' RetryState.Forwarding);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationProgressCalculatorTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationProgressCalculatorTests.cs,Forwarding_half_done_should_be_50_percentage,The following statement contains a magic number: Assert.AreEqual(0.50' calculated);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationProgressCalculatorTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationProgressCalculatorTests.cs,Forwarding_done_should_be_100_percentage,The following statement contains a magic number: var calculated = OperationProgressCalculator.CalculateProgress(2000' 2000' 2000' 0' RetryState.Forwarding);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationProgressCalculatorTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationProgressCalculatorTests.cs,Forwarding_done_should_be_100_percentage,The following statement contains a magic number: var calculated = OperationProgressCalculator.CalculateProgress(2000' 2000' 2000' 0' RetryState.Forwarding);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationProgressCalculatorTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationProgressCalculatorTests.cs,Forwarding_done_should_be_100_percentage,The following statement contains a magic number: var calculated = OperationProgressCalculator.CalculateProgress(2000' 2000' 2000' 0' RetryState.Forwarding);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationProgressCalculatorTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationProgressCalculatorTests.cs,Forwarding_and_skip_combination_done_should_be_100_percentage,The following statement contains a magic number: var calculated = OperationProgressCalculator.CalculateProgress(2000' 2000' 1000' 1000' RetryState.Forwarding);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationProgressCalculatorTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationProgressCalculatorTests.cs,Forwarding_and_skip_combination_done_should_be_100_percentage,The following statement contains a magic number: var calculated = OperationProgressCalculator.CalculateProgress(2000' 2000' 1000' 1000' RetryState.Forwarding);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationProgressCalculatorTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationProgressCalculatorTests.cs,Forwarding_and_skip_combination_done_should_be_100_percentage,The following statement contains a magic number: var calculated = OperationProgressCalculator.CalculateProgress(2000' 2000' 1000' 1000' RetryState.Forwarding);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationProgressCalculatorTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationProgressCalculatorTests.cs,Forwarding_and_skip_combination_done_should_be_100_percentage,The following statement contains a magic number: var calculated = OperationProgressCalculator.CalculateProgress(2000' 2000' 1000' 1000' RetryState.Forwarding);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationProgressCalculatorTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationProgressCalculatorTests.cs,Skipped_done_should_be_100_percentage,The following statement contains a magic number: var calculated = OperationProgressCalculator.CalculateProgress(2000' 2000' 0' 2000' RetryState.Forwarding);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationProgressCalculatorTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationProgressCalculatorTests.cs,Skipped_done_should_be_100_percentage,The following statement contains a magic number: var calculated = OperationProgressCalculator.CalculateProgress(2000' 2000' 0' 2000' RetryState.Forwarding);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationProgressCalculatorTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationProgressCalculatorTests.cs,Skipped_done_should_be_100_percentage,The following statement contains a magic number: var calculated = OperationProgressCalculator.CalculateProgress(2000' 2000' 0' 2000' RetryState.Forwarding);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Prepare_should_set_prepare_state,The following statement contains a magic number: await summary.Prepare(1000);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Prepare_should_set_prepare_state,The following statement contains a magic number: Assert.AreEqual(1000' summary.TotalNumberOfMessages);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Prepared_batch_should_set_prepare_state,The following statement contains a magic number: await summary.Prepare(1000);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Prepared_batch_should_set_prepare_state,The following statement contains a magic number: await summary.PrepareBatch(1000);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Prepared_batch_should_set_prepare_state,The following statement contains a magic number: Assert.AreEqual(1000' summary.NumberOfMessagesPrepared);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Prepared_batch_should_set_prepare_state,The following statement contains a magic number: Assert.AreEqual(1000' summary.TotalNumberOfMessages);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Forwarding_should_set_forwarding_state,The following statement contains a magic number: await summary.Prepare(1000);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Forwarding_should_set_forwarding_state,The following statement contains a magic number: await summary.PrepareBatch(1000);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Forwarding_should_set_forwarding_state,The following statement contains a magic number: Assert.AreEqual(1000' summary.TotalNumberOfMessages);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Batch_forwarded_should_set_forwarding_state,The following statement contains a magic number: await summary.Prepare(1000);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Batch_forwarded_should_set_forwarding_state,The following statement contains a magic number: await summary.PrepareBatch(1000);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Batch_forwarded_should_set_forwarding_state,The following statement contains a magic number: await summary.BatchForwarded(500);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Batch_forwarded_should_set_forwarding_state,The following statement contains a magic number: Assert.AreEqual(500' summary.NumberOfMessagesForwarded);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Batch_forwarded_should_set_forwarding_state,The following statement contains a magic number: Assert.AreEqual(1000' summary.TotalNumberOfMessages);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Should_raise_domain_events,The following statement contains a magic number: await summary.Prepare(1000);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Should_raise_domain_events,The following statement contains a magic number: await summary.PrepareBatch(1000);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Should_raise_domain_events,The following statement contains a magic number: await summary.BatchForwarded(1000);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Should_raise_domain_events,The following statement contains a magic number: Assert.IsTrue(domainEvents.RaisedEvents[2] is RetryOperationForwarding);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Should_raise_domain_events,The following statement contains a magic number: Assert.IsTrue(domainEvents.RaisedEvents[3] is RetryMessagesForwarded);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Should_raise_domain_events,The following statement contains a magic number: Assert.IsTrue(domainEvents.RaisedEvents[4] is RetryOperationCompleted);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Batch_forwarded_all_forwarded_should_set_completed_state,The following statement contains a magic number: await summary.Prepare(1000);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Batch_forwarded_all_forwarded_should_set_completed_state,The following statement contains a magic number: await summary.PrepareBatch(1000);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Batch_forwarded_all_forwarded_should_set_completed_state,The following statement contains a magic number: await summary.BatchForwarded(1000);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Batch_forwarded_all_forwarded_should_set_completed_state,The following statement contains a magic number: Assert.AreEqual(1000' summary.NumberOfMessagesForwarded);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Batch_forwarded_all_forwarded_should_set_completed_state,The following statement contains a magic number: Assert.AreEqual(1000' summary.TotalNumberOfMessages);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Skip_should_set_update_skipped_messages,The following statement contains a magic number: await summary.Prepare(2000);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Skip_should_set_update_skipped_messages,The following statement contains a magic number: await summary.PrepareBatch(1000);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Skip_should_set_update_skipped_messages,The following statement contains a magic number: await summary.Skip(1000);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Skip_should_set_update_skipped_messages,The following statement contains a magic number: Assert.AreEqual(1000' summary.NumberOfMessagesSkipped);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Skip_should_complete_when_all_skipped,The following statement contains a magic number: await summary.Prepare(1000);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Skip_should_complete_when_all_skipped,The following statement contains a magic number: await summary.PrepareBatch(1000);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Skip_should_complete_when_all_skipped,The following statement contains a magic number: await summary.Skip(1000);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Skip_should_complete_when_all_skipped,The following statement contains a magic number: Assert.AreEqual(1000' summary.NumberOfMessagesSkipped);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Skip_and_forward_combination_should_complete_when_done,The following statement contains a magic number: await summary.Prepare(2000);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Skip_and_forward_combination_should_complete_when_done,The following statement contains a magic number: await summary.PrepareBatch(1000);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Skip_and_forward_combination_should_complete_when_done,The following statement contains a magic number: await summary.Skip(1000);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Skip_and_forward_combination_should_complete_when_done,The following statement contains a magic number: await summary.BatchForwarded(1000);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Skip_and_forward_combination_should_complete_when_done,The following statement contains a magic number: Assert.AreEqual(1000' summary.NumberOfMessagesForwarded);
Magic Number,ServiceControl.UnitTests.Operations,RetryOperationTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\RetryOperationTests.cs,Skip_and_forward_combination_should_complete_when_done,The following statement contains a magic number: Assert.AreEqual(1000' summary.NumberOfMessagesSkipped);
Magic Number,ServiceControl.UnitTests.Infrastructure.Extensions,NegotiatorExtensionsTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\Extensions\NegotiatorExtensionsTests.cs,WithPagingLinks_ReturnsLinksWithRelativeUriButWithoutApiPrefix,The following statement contains a magic number: var pagingHeaders = GetLinks(totalResults: 200' currentPage: 3' path: "test1/test2");
Magic Number,ServiceControl.UnitTests.Infrastructure.Extensions,NegotiatorExtensionsTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\Extensions\NegotiatorExtensionsTests.cs,WithPagingLinks_ReturnsLinksWithRelativeUriButWithoutApiPrefix,The following statement contains a magic number: var pagingHeaders = GetLinks(totalResults: 200' currentPage: 3' path: "test1/test2");
Magic Number,ServiceControl.UnitTests.Infrastructure.Extensions,NegotiatorExtensionsTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\Extensions\NegotiatorExtensionsTests.cs,WithPagingLinks_KeepsExistingQueryParams,The following statement contains a magic number: var pagingHeaders = GetLinks(totalResults: 100' path: "test"' queryParams: "token=abc&id=42");
Magic Number,ServiceControl.UnitTests.Infrastructure.Extensions,NegotiatorExtensionsTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\Extensions\NegotiatorExtensionsTests.cs,WithPagingLinks_WhenHasNextPage_AddNextPageLink,The following statement contains a magic number: var pagingHeaders = GetLinks(totalResults: 51);
Magic Number,ServiceControl.UnitTests.Infrastructure.Extensions,NegotiatorExtensionsTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\Extensions\NegotiatorExtensionsTests.cs,WithPagingLinks_WhenHasNoNextPage_AddNoNextPageLink,The following statement contains a magic number: var pagingHeaders = GetLinks(totalResults: 50);
Magic Number,ServiceControl.UnitTests.Infrastructure.Extensions,NegotiatorExtensionsTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\Extensions\NegotiatorExtensionsTests.cs,WithPagingLinks_WhenHasNextPage_AddLastPageLink,The following statement contains a magic number: var pagingHeaders = GetLinks(totalResults: 51' 150);
Magic Number,ServiceControl.UnitTests.Infrastructure.Extensions,NegotiatorExtensionsTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\Extensions\NegotiatorExtensionsTests.cs,WithPagingLinks_WhenHasNextPage_AddLastPageLink,The following statement contains a magic number: var pagingHeaders = GetLinks(totalResults: 51' 150);
Magic Number,ServiceControl.UnitTests.Infrastructure.Extensions,NegotiatorExtensionsTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\Extensions\NegotiatorExtensionsTests.cs,WithPagingLinks_WhenHasNoNextPage_AddNoLastPageLink,The following statement contains a magic number: var pagingHeaders = GetLinks(totalResults: 49' 150);
Magic Number,ServiceControl.UnitTests.Infrastructure.Extensions,NegotiatorExtensionsTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\Extensions\NegotiatorExtensionsTests.cs,WithPagingLinks_WhenHasNoNextPage_AddNoLastPageLink,The following statement contains a magic number: var pagingHeaders = GetLinks(totalResults: 49' 150);
Magic Number,ServiceControl.UnitTests.Infrastructure.Extensions,NegotiatorExtensionsTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\Extensions\NegotiatorExtensionsTests.cs,WithPagingLinks_WhenHasPreviousPage_AddPreviousPageLink,The following statement contains a magic number: var pagingHeaders = GetLinks(totalResults: 120' currentPage: 3);
Magic Number,ServiceControl.UnitTests.Infrastructure.Extensions,NegotiatorExtensionsTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\Extensions\NegotiatorExtensionsTests.cs,WithPagingLinks_WhenHasPreviousPage_AddPreviousPageLink,The following statement contains a magic number: var pagingHeaders = GetLinks(totalResults: 120' currentPage: 3);
Magic Number,ServiceControl.UnitTests.Infrastructure.Extensions,NegotiatorExtensionsTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\Extensions\NegotiatorExtensionsTests.cs,WithPagingLinks_WhenHasNoPreviousPage_AddNoPreviousPageLink,The following statement contains a magic number: var pagingHeaders = GetLinks(totalResults: 51' currentPage: 1);
Magic Number,ServiceControl.UnitTests.Infrastructure.Extensions,NegotiatorExtensionsTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\Extensions\NegotiatorExtensionsTests.cs,WithPagingLinks_WhenHasPreviousPage_AddFirstPageLink,The following statement contains a magic number: var pagingHeaders = GetLinks(totalResults: 200' currentPage: 4);
Magic Number,ServiceControl.UnitTests.Infrastructure.Extensions,NegotiatorExtensionsTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\Extensions\NegotiatorExtensionsTests.cs,WithPagingLinks_WhenHasPreviousPage_AddFirstPageLink,The following statement contains a magic number: var pagingHeaders = GetLinks(totalResults: 200' currentPage: 4);
Magic Number,ServiceControl.UnitTests.Infrastructure.Extensions,NegotiatorExtensionsTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\Extensions\NegotiatorExtensionsTests.cs,WithPagingLinks_WhenHasNoPreviousPage_AddNoFirstPageLink,The following statement contains a magic number: var pagingHeaders = GetLinks(totalResults: 200' currentPage: 1);
Magic Number,ServiceControl.UnitTests.Infrastructure.Extensions,NegotiatorExtensionsTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\Extensions\NegotiatorExtensionsTests.cs,WithPagingLinks_WhenDefiningCustomPageSize_AdjustPagingToCustomPageSize,The following statement contains a magic number: var pagingHeaders = GetLinks(totalResults: 300' currentPage: 2' resultsPerPage: 100);
Magic Number,ServiceControl.UnitTests.Infrastructure.Extensions,NegotiatorExtensionsTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\Extensions\NegotiatorExtensionsTests.cs,WithPagingLinks_WhenDefiningCustomPageSize_AdjustPagingToCustomPageSize,The following statement contains a magic number: var pagingHeaders = GetLinks(totalResults: 300' currentPage: 2' resultsPerPage: 100);
Magic Number,ServiceControl.UnitTests.Infrastructure.Extensions,NegotiatorExtensionsTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\Extensions\NegotiatorExtensionsTests.cs,WithPagingLinks_WhenDefiningCustomPageSize_AdjustPagingToCustomPageSize,The following statement contains a magic number: var pagingHeaders = GetLinks(totalResults: 300' currentPage: 2' resultsPerPage: 100);
Magic Number,ServiceControl.UnitTests.Infrastructure.RavenDB,SubscriptionPersisterTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\RavenDB\SubscriptionPersisterTests.cs,ShouldReturnSubscriptionsForOlderVersionsOfSameMessageType,The following statement contains a magic number: var v2MessageType = new MessageType(typeof(SampleMessageType).FullName' new Version(2' 0' 0));
Magic Number,ServiceControl.UnitTests.Infrastructure.RavenDB,SubscriptionPersisterTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\RavenDB\SubscriptionPersisterTests.cs,ShouldReturnSubscriptionsForNewerVersionsOfSameMessageType,The following statement contains a magic number: var v2MessageType = new MessageType(typeof(SampleMessageType).FullName' new Version(2' 0' 0));
Magic Number,ServiceControl.UnitTests.Infrastructure.Settings,SettingsTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Infrastructure\Settings\SettingsTests.cs,WriteSetting,The following statement contains a magic number: config.AppSettings.Settings.Add("ServiceControl/ErrorRetentionPeriod"' 10.ToString());
Magic Number,ServiceControl.UnitTests.Recoverability,EditMessageTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\EditMessageTests.cs,Should_dispatch_edited_message_when_retrying,The following statement contains a magic number: Assert.AreEqual(2' Dispatcher.DispatchedMessages.Count);
Magic Number,ServiceControl.UnitTests.Recoverability,Retry_State_Tests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\Retry_State_Tests.cs,When_a_group_is_prepared_with_three_batches_and_SC_is_restarted_while_the_first_group_is_being_forwarded_then_the_count_still_matches,The following statement contains a magic number: await CreateAFailedMessageAndMarkAsPartOfRetryBatch(documentStore' retryManager' "Test-group"' true' 2001);
Magic Number,ServiceControl.UnitTests.Recoverability,Retry_State_Tests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\Retry_State_Tests.cs,When_a_group_is_prepared_with_three_batches_and_SC_is_restarted_while_the_first_group_is_being_forwarded_then_the_count_still_matches,The following statement contains a magic number: Assert.AreEqual(2001' status.TotalNumberOfMessages);
Magic Number,ServiceControl.UnitTests.Recoverability,Retry_State_Tests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\Retry_State_Tests.cs,When_there_is_one_poison_message_it_is_removed_from_batch_and_the_status_is_Complete,The following statement contains a magic number: Assert.AreEqual(3' status.NumberOfMessagesPrepared);
Magic Number,ServiceControl.UnitTests.Recoverability,Retry_State_Tests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\Retry_State_Tests.cs,When_there_is_one_poison_message_it_is_removed_from_batch_and_the_status_is_Complete,The following statement contains a magic number: Assert.AreEqual(2' status.NumberOfMessagesForwarded);
Magic Number,ServiceControl.UnitTests.Recoverability,Retry_State_Tests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\Recoverability\Retry_State_Tests.cs,When_a_group_has_one_batch_out_of_two_forwarded_the_status_is_Forwarding,The following statement contains a magic number: await CreateAFailedMessageAndMarkAsPartOfRetryBatch(documentStore' retryManager' "Test-group"' true' 1001);
Magic Number,ServiceControl.UnitTests.RouteApi,RetryMessage_RoutesApiTest,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\RouteApi\RetryMessage_RoutesApiTest.cs,SetUp,The following statement contains a magic number: ConfigurationManager.AppSettings["ServiceControl/ErrorRetentionPeriod"] = TimeSpan.FromDays(10).ToString();
Magic Number,ServiceControl.UnitTests.RouteApi,RetryMessage_RoutesApiTest,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\RouteApi\RetryMessage_RoutesApiTest.cs,SetUp,The following statement contains a magic number: testApi = new TestApi              {                  Settings = new Settings("TestService")                  {                      Port = 3333'                      RemoteInstances = new[]                      {                          new RemoteInstanceSetting                          {                              ApiUri = "http://localhost:33334/api"                          }                      }                  }              };
Magic Number,ServiceControl.UnitTests.SagaAudit,SagaDetailsIndexTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\SagaAudit\SagaDetailsIndexTests.cs,GetFakeHistory,The following statement contains a magic number: yield return new SagaSnapshot              {                  SagaId = Guid.Empty'                  SagaType = "MySaga1"'                  Endpoint = "MyEndpoint"'                  FinishTime = new DateTime(2001' 1' 1' 1' 1' 1' DateTimeKind.Utc)'                  Status = SagaStateChangeStatus.Updated'                  StartTime = new DateTime(2001' 1' 1' 1' 1' 1' DateTimeKind.Utc)'                  StateAfterChange = "Updated"              };
Magic Number,ServiceControl.UnitTests.SagaAudit,SagaDetailsIndexTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\SagaAudit\SagaDetailsIndexTests.cs,GetFakeHistory,The following statement contains a magic number: yield return new SagaSnapshot              {                  SagaId = Guid.Empty'                  SagaType = "MySaga1"'                  Endpoint = "MyEndpoint"'                  FinishTime = new DateTime(2001' 1' 1' 1' 1' 1' DateTimeKind.Utc)'                  Status = SagaStateChangeStatus.Updated'                  StartTime = new DateTime(2001' 1' 1' 1' 1' 1' DateTimeKind.Utc)'                  StateAfterChange = "Updated"              };
Magic Number,ServiceControl.UnitTests.SagaAudit,SagaDetailsIndexTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\SagaAudit\SagaDetailsIndexTests.cs,GetFakeHistory,The following statement contains a magic number: yield return new SagaHistory              {                  SagaId = Guid.Empty'                  SagaType = "MySaga1"'                  Changes = new List<SagaStateChange>                  {                      new SagaStateChange                      {                          Endpoint = "MyEndpoint"'                          FinishTime = new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Utc)'                          Status = SagaStateChangeStatus.Updated'                          StartTime = new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Utc)'                          StateAfterChange = "Started"                      }                  }              };
Magic Number,ServiceControl.UnitTests.SagaAudit,SagaDetailsIndexTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\SagaAudit\SagaDetailsIndexTests.cs,GetFakeHistory,The following statement contains a magic number: yield return new SagaHistory              {                  SagaId = Guid.Empty'                  SagaType = "MySaga1"'                  Changes = new List<SagaStateChange>                  {                      new SagaStateChange                      {                          Endpoint = "MyEndpoint"'                          FinishTime = new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Utc)'                          Status = SagaStateChangeStatus.Updated'                          StartTime = new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Utc)'                          StateAfterChange = "Started"                      }                  }              };
Magic Number,ServiceControl.UnitTests.SagaAudit,SagaDetailsIndexTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\SagaAudit\SagaDetailsIndexTests.cs,GetFakeHistory,The following statement contains a magic number: yield return new SagaSnapshot              {                  SagaId = Guid.Empty'                  SagaType = "MySaga1"'                  Endpoint = "MyEndpoint"'                  FinishTime = new DateTime(2002' 1' 1' 1' 1' 1' DateTimeKind.Utc)'                  Status = SagaStateChangeStatus.Completed'                  StartTime = new DateTime(2002' 1' 1' 1' 1' 1' DateTimeKind.Utc)'                  StateAfterChange = "Completed"              };
Magic Number,ServiceControl.UnitTests.SagaAudit,SagaDetailsIndexTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\SagaAudit\SagaDetailsIndexTests.cs,GetFakeHistory,The following statement contains a magic number: yield return new SagaSnapshot              {                  SagaId = Guid.Empty'                  SagaType = "MySaga1"'                  Endpoint = "MyEndpoint"'                  FinishTime = new DateTime(2002' 1' 1' 1' 1' 1' DateTimeKind.Utc)'                  Status = SagaStateChangeStatus.Completed'                  StartTime = new DateTime(2002' 1' 1' 1' 1' 1' DateTimeKind.Utc)'                  StateAfterChange = "Completed"              };
Magic Number,ServiceControl.UnitTests.SagaAudit,SagaListIndexTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\SagaAudit\SagaListIndexTests.cs,GetFakeHistory,The following statement contains a magic number: yield return new SagaSnapshot              {                  SagaId = new Guid("00000000-0000-0000-0000-000000000003")'                  SagaType = "MySaga3"'                  FinishTime = new DateTime(2000' 1' 1' 10' 0' 0)              };
Magic Number,ServiceControl.UnitTests.SagaAudit,SagaListIndexTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\SagaAudit\SagaListIndexTests.cs,GetFakeHistory,The following statement contains a magic number: yield return new SagaSnapshot              {                  SagaId = new Guid("00000000-0000-0000-0000-000000000003")'                  SagaType = "MySaga3"'                  FinishTime = new DateTime(2000' 1' 1' 10' 0' 0)              };
Magic Number,ServiceControl.UnitTests.SagaAudit,SagaListIndexTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\SagaAudit\SagaListIndexTests.cs,GetFakeHistory,The following statement contains a magic number: yield return new SagaHistory              {                  SagaId = new Guid("00000000-0000-0000-0000-000000000001")'                  SagaType = "MySaga1"'                  Changes = new List<SagaStateChange>                  {                      new SagaStateChange                      {                          FinishTime = new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Utc)                      }                  }              };
Magic Number,ServiceControl.UnitTests.SagaAudit,SagaListIndexTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\SagaAudit\SagaListIndexTests.cs,GetFakeHistory,The following statement contains a magic number: yield return new SagaSnapshot              {                  SagaId = new Guid("00000000-0000-0000-0000-000000000002")'                  SagaType = "MySaga2"'                  FinishTime = new DateTime(2000' 1' 1' 15' 0' 0)              };
Magic Number,ServiceControl.UnitTests.SagaAudit,SagaListIndexTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\SagaAudit\SagaListIndexTests.cs,GetFakeHistory,The following statement contains a magic number: yield return new SagaSnapshot              {                  SagaId = new Guid("00000000-0000-0000-0000-000000000002")'                  SagaType = "MySaga2"'                  FinishTime = new DateTime(2000' 1' 1' 15' 0' 0)              };
Magic Number,ServiceControl.UnitTests.SagaAudit,SagaRelationshipsEnricherTests,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\SagaAudit\SagaRelationshipsEnricherTests.cs,It_can_parse_malformed_headers_of_three_sagas,The following statement contains a magic number: Assert.AreEqual(3' sagaData.Count);
Magic Number,ServiceControl.UnitTests.ScatterGather,MessageView_ScatterGatherTest,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\ScatterGather\MessageView_ScatterGatherTest.cs,LocalData,The following statement contains a magic number: i < 200
Magic Number,ServiceControl.UnitTests.ScatterGather,MessageView_ScatterGatherTest,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControl.UnitTests\ScatterGather\MessageView_ScatterGatherTest.cs,RemoteData,The following statement contains a magic number: i < 55
