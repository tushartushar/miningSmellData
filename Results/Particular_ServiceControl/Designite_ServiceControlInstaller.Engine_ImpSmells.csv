Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ServiceControlInstaller.Engine.FileSystem,FileUtils,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\FileSystem\FileUtils.cs,DeleteDirectory,Cyclomatic complexity of the method is 9
Complex Method,ServiceControlInstaller.Engine.LicenseMgmt,LicenseDetails,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\LicenseMgmt\LicenseDetails.cs,FromLicense,Cyclomatic complexity of the method is 9
Complex Method,ServiceControlInstaller.Engine.Unattended,UnattendAuditInstaller,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Unattended\UnattendAuditInstaller.cs,Add,Cyclomatic complexity of the method is 8
Complex Method,ServiceControlInstaller.Engine.Unattended,UnattendMonitoringInstaller,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Unattended\UnattendMonitoringInstaller.cs,Add,Cyclomatic complexity of the method is 8
Complex Method,ServiceControlInstaller.Engine.Unattended,UnattendServiceControlInstaller,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Unattended\UnattendServiceControlInstaller.cs,Add,Cyclomatic complexity of the method is 8
Long Parameter List,ServiceControlInstaller.Engine.Accounts,Lsa,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Accounts\Lsa.cs,LsaRemoveAccountRights,The method has 5 parameters. Parameters: PolicyHandle' AccountSid' AllRights' UserRights' CountOfRights
Long Parameter List,ServiceControlInstaller.Engine.FileSystem,PlatformZipInfo,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\FileSystem\PlatformZipInfo.cs,PlatformZipInfo,The method has 5 parameters. Parameters: mainEntrypoint' name' filePath' version' present
Long Parameter List,ServiceControlInstaller.Engine.Queues,QueueCreation,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Queues\QueueCreation.cs,RunQueueCreation,The method has 5 parameters. Parameters: installPath' exeName' serviceName' serviceAccount' skipQueueCreation
Long Parameter List,ServiceControlInstaller.Engine.UrlAcl.Api,HttpApi,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\UrlAcl\Api\HttpApi.cs,HttpQueryServiceConfiguration,The method has 8 parameters. Parameters: ServiceIntPtr' ConfigId' pInputConfigInfo' InputConfigInfoLength' pOutputConfigInfo' OutputConfigInfoLength' pReturnLength' pOverlapped
Long Parameter List,ServiceControlInstaller.Engine.UrlAcl.Api,HttpApi,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\UrlAcl\Api\HttpApi.cs,HttpSetServiceConfiguration,The method has 5 parameters. Parameters: ServiceIntPtr' ConfigId' pConfigInformation' ConfigInformationLength' pOverlapped
Long Parameter List,ServiceControlInstaller.Engine.UrlAcl.Api,HttpApi,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\UrlAcl\Api\HttpApi.cs,HttpDeleteServiceConfiguration,The method has 5 parameters. Parameters: ServiceIntPtr' ConfigId' pConfigInformation' ConfigInformationLength' pOverlapped
Long Identifier,ServiceControlInstaller.Engine.Accounts,Lsa,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Accounts\Lsa.cs,,The length of the parameter POLICY_GET_PRIVATE_INFORMATION is 30.
Long Identifier,ServiceControlInstaller.Engine.Accounts,Lsa,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Accounts\Lsa.cs,,The length of the parameter POLICY_SET_DEFAULT_QUOTA_LIMITS is 31.
Long Identifier,ServiceControlInstaller.Engine.Configuration.ServiceControl,Compatibility,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Configuration\ServiceControl\Compatibility.cs,,The length of the parameter RemoteInstancesDoNotNeedQueueAddress is 36.
Long Identifier,ServiceControlInstaller.Engine.Configuration.ServiceControl,RequiredUpgradeExtensions,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Configuration\ServiceControl\RequiredUpgradeAction.cs,,The length of the parameter VersionWhereAuditInstanceWasIntroduced is 38.
Long Identifier,ServiceControlInstaller.Engine.Configuration.ServiceControl,SettingConstants,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Configuration\ServiceControl\SettingConstants.cs,,The length of the parameter ErrorRetentionPeriodMaxInHours is 30.
Long Identifier,ServiceControlInstaller.Engine.Configuration.ServiceControl,SettingConstants,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Configuration\ServiceControl\SettingConstants.cs,,The length of the parameter ErrorRetentionPeriodMinInHours is 30.
Long Identifier,ServiceControlInstaller.Engine.Configuration.ServiceControl,SettingConstants,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Configuration\ServiceControl\SettingConstants.cs,,The length of the parameter AuditRetentionPeriodMaxInHours is 30.
Long Identifier,ServiceControlInstaller.Engine.Configuration.ServiceControl,SettingConstants,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Configuration\ServiceControl\SettingConstants.cs,,The length of the parameter AuditRetentionPeriodMinInHours is 30.
Long Identifier,ServiceControlInstaller.Engine.Configuration.ServiceControl,SettingConstants,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Configuration\ServiceControl\SettingConstants.cs,,The length of the parameter AuditRetentionPeriodDefaultInHoursForUI is 39.
Long Identifier,ServiceControlInstaller.Engine.Configuration.ServiceControl,SettingConstants,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Configuration\ServiceControl\SettingConstants.cs,,The length of the parameter ErrorRetentionPeriodDefaultInDaysForUI is 38.
Long Identifier,ServiceControlInstaller.Engine.Configuration.ServiceControl,ServiceControlSettings,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Configuration\ServiceControl\SettingsList.cs,,The length of the parameter HoursToKeepMessagesBeforeExpiring is 33.
Long Identifier,ServiceControlInstaller.Engine.Instances,TransportNames,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\TransportNames.cs,,The length of the parameter AzureServiceBusEndpointOrientedTopology is 39.
Long Identifier,ServiceControlInstaller.Engine.Instances,TransportNames,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\TransportNames.cs,,The length of the parameter AzureServiceBusEndpointOrientedTopologyOld is 42.
Long Identifier,ServiceControlInstaller.Engine.Instances,TransportNames,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\TransportNames.cs,,The length of the parameter AzureServiceBusForwardingTopology is 33.
Long Identifier,ServiceControlInstaller.Engine.Instances,TransportNames,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\TransportNames.cs,,The length of the parameter AzureServiceBusForwardingTopologyOld is 36.
Long Identifier,ServiceControlInstaller.Engine.Instances,TransportNames,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\TransportNames.cs,,The length of the parameter RabbitMQConventionalRoutingTopology is 35.
Long Identifier,ServiceControlInstaller.Engine.UrlAcl.Api,HttpServiceConfigSslParam,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\UrlAcl\Api\HttpServiceConfigSslParam.cs,,The length of the parameter DefaultRevocationFreshnessTime is 30.
Long Identifier,ServiceControlInstaller.Engine.UrlAcl.Api,HttpServiceConfigSslParam,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\UrlAcl\Api\HttpServiceConfigSslParam.cs,,The length of the parameter DefaultRevocationUrlRetrievalTimeout is 36.
Long Statement,ServiceControlInstaller.Engine.Accounts,UserAccount,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Accounts\UserAccount.cs,RetrieveProfilePath,The length of the statement  "            using (var profileListKey = Registry.LocalMachine.OpenSubKey(@"SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList")) " is 122.
Long Statement,ServiceControlInstaller.Engine.Accounts,UserAccount,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Accounts\UserAccount.cs,CheckPassword,The length of the statement  "            using (var context = localAccount ? new PrincipalContext(ContextType.Machine) : new PrincipalContext(ContextType.Domain' Domain)) " is 129.
Long Statement,ServiceControlInstaller.Engine.Configuration,ConfigurationSectionExtensions,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Configuration\ConfigurationSectionExtensions.cs,Set,The length of the statement  "                    throw new ArgumentNullException(nameof(currentVersion)' $"Version info is required before setting or removing {keyInfo.Name}"); " is 127.
Long Statement,ServiceControlInstaller.Engine.Configuration,ConfigurationSectionExtensions,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Configuration\ConfigurationSectionExtensions.cs,RemoveIfRetired,The length of the statement  "                throw new ArgumentNullException(nameof(currentVersion)' $"Version info is required before setting or removing {keyInfo.Name}"); " is 127.
Long Statement,ServiceControlInstaller.Engine.FileSystem,MonitoringZipInfo,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\FileSystem\MonitoringZipInfo.cs,Find,The length of the statement  "            var fileRegex = new Regex(@"particular.servicecontrol.monitoring-(?<version>\d+\.\d+\.\d+)\.zip"' RegexOptions.Compiled | RegexOptions.IgnoreCase); " is 147.
Long Statement,ServiceControlInstaller.Engine.FileSystem,MonitoringZipInfo,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\FileSystem\MonitoringZipInfo.cs,Find,The length of the statement  "            foreach (var file in deploymentCache.GetFiles("particular.servicecontrol.monitoring-*.zip"' SearchOption.TopDirectoryOnly)) " is 123.
Long Statement,ServiceControlInstaller.Engine.FileSystem,MonitoringZipInfo,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\FileSystem\MonitoringZipInfo.cs,Find,The length of the statement  "            return new PlatformZipInfo(Constants.MonitoringExe' "ServiceControl Monitoring"' filePath: latest.Key' version: latest.Value' present: true); " is 141.
Long Statement,ServiceControlInstaller.Engine.FileSystem,ReleaseDateReader,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\FileSystem\ReleaseDateReader.cs,TryReadReleaseDateAttribute,The length of the statement  "                var loader = (AssemblyReleaseDateReader)tempDomain.CreateInstanceFrom(Assembly.GetExecutingAssembly().Location' loaderType.FullName).Unwrap(); " is 142.
Long Statement,ServiceControlInstaller.Engine.FileSystem,AssemblyReleaseDateReader,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\FileSystem\ReleaseDateReader.cs,GetReleaseDate,The length of the statement  "                    var releaseDateAttribute = assembly.GetCustomAttributesData().FirstOrDefault(p => p.Constructor?.ReflectedType?.Name == "ReleaseDateAttribute"); " is 144.
Long Statement,ServiceControlInstaller.Engine.FileSystem,ServiceControlAuditZipInfo,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\FileSystem\ServiceControlAuditZipInfo.cs,Find,The length of the statement  "            var fileRegex = new Regex(@"particular.servicecontrol.audit-(?<version>\d+\.\d+\.\d+)\.zip"' RegexOptions.Compiled | RegexOptions.IgnoreCase); " is 142.
Long Statement,ServiceControlInstaller.Engine.FileSystem,ServiceControlAuditZipInfo,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\FileSystem\ServiceControlAuditZipInfo.cs,Find,The length of the statement  "            return new PlatformZipInfo(mainEntrypoint: Constants.ServiceControlAuditExe' name: "ServiceControl Audit"' filePath: latest.Key' version: latest.Value' present: true); " is 167.
Long Statement,ServiceControlInstaller.Engine.FileSystem,ServiceControlZipInfo,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\FileSystem\ServiceControlZipInfo.cs,Find,The length of the statement  "            var fileRegex = new Regex(@"particular.servicecontrol-(?<version>\d+\.\d+\.\d+)\.zip"' RegexOptions.Compiled | RegexOptions.IgnoreCase); " is 136.
Long Statement,ServiceControlInstaller.Engine.FileSystem,ServiceControlZipInfo,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\FileSystem\ServiceControlZipInfo.cs,Find,The length of the statement  "            return new PlatformZipInfo(mainEntrypoint: Constants.ServiceControlExe' name: "ServiceControl"' filePath: latest.Key' version: latest.Value' present: true); " is 156.
Long Statement,ServiceControlInstaller.Engine.Instances,BaseService,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\BaseService.cs,BackupAppConfig,The length of the statement  "            var backupDirectory = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData)' "Particular"' "ServiceControlInstaller"' "ConfigBackups"' FileUtils.SanitizeFolderName(Service.ServiceName)); " is 220.
Long Statement,ServiceControlInstaller.Engine.Instances,InstanceFinder,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\Instances.cs,MonitoringInstances,The length of the statement  "            return new ReadOnlyCollection<MonitoringInstance>(services.Where(p => File.Exists(p.ExePath)).Select(p => new MonitoringInstance(p)).ToList()); " is 143.
Long Statement,ServiceControlInstaller.Engine.Instances,InstanceFinder,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\Instances.cs,ServiceControlInstances,The length of the statement  "            return new ReadOnlyCollection<ServiceControlInstance>(services.Where(p => File.Exists(p.ExePath)).Select(p => new ServiceControlInstance(p)).ToList()); " is 151.
Long Statement,ServiceControlInstaller.Engine.Instances,InstanceFinder,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\Instances.cs,ServiceControlAuditInstances,The length of the statement  "            return new ReadOnlyCollection<ServiceControlAuditInstance>(services.Where(p => File.Exists(p.ExePath)).Select(p => new ServiceControlAuditInstance(p)).ToList()); " is 161.
Long Statement,ServiceControlInstaller.Engine.Instances,MonitoringInstance,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\MonitoringInstance.cs,DetermineTransportPackage,The length of the statement  "            var transportAppSetting = AppConfig.Read(SettingsList.TransportType' ServiceControlCoreTransports.All.Single(t => t.Default).TypeName).Trim(); " is 142.
Long Statement,ServiceControlInstaller.Engine.Instances,MonitoringInstance,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\MonitoringInstance.cs,ApplyConfigChange,The length of the statement  "            var accountName = string.Equals(ServiceAccount' "LocalSystem"' StringComparison.OrdinalIgnoreCase) ? "System" : ServiceAccount; " is 127.
Long Statement,ServiceControlInstaller.Engine.Instances,MonitoringInstance,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\MonitoringInstance.cs,ApplyConfigChange,The length of the statement  "                var modifyAccessRule = new FileSystemAccessRule(account' FileSystemRights.Modify | FileSystemRights.Traverse | FileSystemRights.ListDirectory' InheritanceFlags.ContainerInherit | InheritanceFlags.ObjectInherit' PropagationFlags.None' AccessControlType.Allow); " is 259.
Long Statement,ServiceControlInstaller.Engine.Instances,MonitoringInstance,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\MonitoringInstance.cs,RemoveUrlAcl,The length of the statement  "            foreach (var urlReservation in UrlReservation.GetAll().Where(p => p.Url.StartsWith(Url' StringComparison.OrdinalIgnoreCase))) " is 125.
Long Statement,ServiceControlInstaller.Engine.Instances,MonitoringNewInstance,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\MonitoringNewInstance.cs,CopyFiles,The length of the statement  "            var readExecuteAccessRule = new FileSystemAccessRule(account' FileSystemRights.ReadAndExecute | FileSystemRights.Traverse | FileSystemRights.ListDirectory' InheritanceFlags.ContainerInherit | InheritanceFlags.ObjectInherit' PropagationFlags.None' AccessControlType.Allow); " is 272.
Long Statement,ServiceControlInstaller.Engine.Instances,MonitoringNewInstance,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\MonitoringNewInstance.cs,CopyFiles,The length of the statement  "            var modifyAccessRule = new FileSystemAccessRule(account' FileSystemRights.Modify | FileSystemRights.Traverse | FileSystemRights.ListDirectory' InheritanceFlags.ContainerInherit | InheritanceFlags.ObjectInherit' PropagationFlags.None' AccessControlType.Allow); " is 259.
Long Statement,ServiceControlInstaller.Engine.Instances,MonitoringNewInstance,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\MonitoringNewInstance.cs,CheckForConflictingUrlAclReservations,The length of the statement  "                if ((reservation.HostName.Equals("localhost"' StringComparison.OrdinalIgnoreCase) && !HostName.Equals("localhost"' StringComparison.OrdinalIgnoreCase)) || " is 154.
Long Statement,ServiceControlInstaller.Engine.Instances,MonitoringNewInstance,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\MonitoringNewInstance.cs,CheckForConflictingUrlAclReservations,The length of the statement  "                    (!reservation.HostName.Equals("localhost"' StringComparison.OrdinalIgnoreCase) && HostName.Equals("localhost"' StringComparison.OrdinalIgnoreCase))) " is 148.
Long Statement,ServiceControlInstaller.Engine.Instances,ServiceControlAuditInstance,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\ServiceControlAuditInstance.cs,GetTransportTypeSetting,The length of the statement  "            return AppConfig.Read(AuditInstanceSettingsList.TransportType' ServiceControlCoreTransports.All.Single(t => t.Default).TypeName).Trim(); " is 136.
Long Statement,ServiceControlInstaller.Engine.Instances,ServiceControlBaseService,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\ServiceControlBaseService.cs,RecreateUrlAcl,The length of the statement  "            var maintanceReservation = new UrlReservation(AclMaintenanceUrl' new SecurityIdentifier(WellKnownSidType.BuiltinUsersSid' null)); " is 129.
Long Statement,ServiceControlInstaller.Engine.Instances,ServiceControlBaseService,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\ServiceControlBaseService.cs,DefaultDBPath,The length of the statement  "            return Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData)' "Particular"' BaseServiceName' dbFolder); " is 137.
Long Statement,ServiceControlInstaller.Engine.Instances,ServiceControlBaseService,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\ServiceControlBaseService.cs,DefaultLogPath,The length of the statement  "            // The default Logging folder in ServiceControl uses the env vae"%LocalApplicationData%".  Since this is env user specific we'll determine it based on profile path instead. " is 172.
Long Statement,ServiceControlInstaller.Engine.Instances,ServiceControlBaseService,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\ServiceControlBaseService.cs,RemoveUrlAcl,The length of the statement  "            foreach (var urlReservation in UrlReservation.GetAll().Where(p => p.Url.StartsWith(AclUrl' StringComparison.OrdinalIgnoreCase) || " is 129.
Long Statement,ServiceControlInstaller.Engine.Instances,ServiceControlBaseService,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\ServiceControlBaseService.cs,ApplyConfigChange,The length of the statement  "            var accountName = string.Equals(ServiceAccount' "LocalSystem"' StringComparison.OrdinalIgnoreCase) ? "System" : ServiceAccount; " is 127.
Long Statement,ServiceControlInstaller.Engine.Instances,ServiceControlBaseService,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\ServiceControlBaseService.cs,ApplyConfigChange,The length of the statement  "                var modifyAccessRule = new FileSystemAccessRule(account' FileSystemRights.Modify | FileSystemRights.Traverse | FileSystemRights.ListDirectory' InheritanceFlags.ContainerInherit | InheritanceFlags.ObjectInherit' PropagationFlags.None' AccessControlType.Allow); " is 259.
Long Statement,ServiceControlInstaller.Engine.Instances,ServiceControlInstance,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\ServiceControlInstance.cs,GetTransportTypeSetting,The length of the statement  "            return AppConfig.Read(ServiceControlSettings.TransportType' ServiceControlCoreTransports.All.Single(t => t.Default).TypeName).Trim(); " is 133.
Long Statement,ServiceControlInstaller.Engine.Instances,ServiceControlInstance,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\ServiceControlInstance.cs,Reload,The length of the statement  "                AuditLogQueue = AppConfig.Read(ServiceControlSettings.AuditLogQueue' string.IsNullOrEmpty(AuditQueue) ? null : $"{AuditQueue}.log"); " is 132.
Long Statement,ServiceControlInstaller.Engine.Instances,ServiceControlInstance,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\ServiceControlInstance.cs,Reload,The length of the statement  "            if (TimeSpan.TryParse(AppConfig.Read(ServiceControlSettings.ErrorRetentionPeriod' (string)null)' out var errorRetentionPeriod)) " is 127.
Long Statement,ServiceControlInstaller.Engine.Instances,ServiceControlInstance,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\ServiceControlInstance.cs,Reload,The length of the statement  "            if (TimeSpan.TryParse(AppConfig.Read(ServiceControlSettings.AuditRetentionPeriod' (string)null)' out var auditRetentionPeriod)) " is 127.
Long Statement,ServiceControlInstaller.Engine.Instances,ServiceControlNewInstance,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\ServiceControlNewInstance.cs,Load,The length of the statement  "                throw new InvalidDataException("The supplied file is using an old format. Use 'New-ServiceControlUnattendedFile' from the ServiceControl to create a new unattended install file."); " is 180.
Long Statement,ServiceControlInstaller.Engine.Instances,ServiceControlNewInstance,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\ServiceControlNewInstance.cs,Load,The length of the statement  "                throw new InvalidDataException("The supplied file is using an old format. Use 'New-ServiceControlUnattendedFile' from the ServiceControl to create a new unattended install file."); " is 180.
Long Statement,ServiceControlInstaller.Engine.Instances,ServiceControlNewInstance,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\ServiceControlNewInstance.cs,Load,The length of the statement  "                throw new InvalidDataException("The supplied file is using an old format. Use 'New-ServiceControlUnattendedFile' from the ServiceControl to create a new unattended install file."); " is 180.
Long Statement,ServiceControlInstaller.Engine.Instances,ServiceControlInstallableBase,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\ServiceControlNewInstance.cs,CopyFiles,The length of the statement  "            var readExecuteAccessRule = new FileSystemAccessRule(account' FileSystemRights.ReadAndExecute | FileSystemRights.Traverse | FileSystemRights.ListDirectory' InheritanceFlags.ContainerInherit | InheritanceFlags.ObjectInherit' PropagationFlags.None' AccessControlType.Allow); " is 272.
Long Statement,ServiceControlInstaller.Engine.Instances,ServiceControlInstallableBase,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\ServiceControlNewInstance.cs,CopyFiles,The length of the statement  "            var modifyAccessRule = new FileSystemAccessRule(account' FileSystemRights.Modify | FileSystemRights.Traverse | FileSystemRights.ListDirectory' InheritanceFlags.ContainerInherit | InheritanceFlags.ObjectInherit' PropagationFlags.None' AccessControlType.Allow); " is 259.
Long Statement,ServiceControlInstaller.Engine.Instances,ServiceControlInstallableBase,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\ServiceControlNewInstance.cs,RegisterUrlAcl,The length of the statement  "            var maintenanceReservation = new UrlReservation(AclMaintenanceUrl' new SecurityIdentifier(WellKnownSidType.BuiltinUsersSid' null)); " is 131.
Long Statement,ServiceControlInstaller.Engine.Instances,ServiceControlInstallableBase,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\ServiceControlNewInstance.cs,CheckForConflictingUrlAclReservations,The length of the statement  "                if (reservation.HostName.Equals("localhost"' StringComparison.OrdinalIgnoreCase) && !HostName.Equals("localhost"' StringComparison.OrdinalIgnoreCase) || " is 152.
Long Statement,ServiceControlInstaller.Engine.Instances,ServiceControlInstallableBase,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\ServiceControlNewInstance.cs,CheckForConflictingUrlAclReservations,The length of the statement  "                    !reservation.HostName.Equals("localhost"' StringComparison.OrdinalIgnoreCase) && HostName.Equals("localhost"' StringComparison.OrdinalIgnoreCase)) " is 146.
Long Statement,ServiceControlInstaller.Engine,TaskHelpers,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\TaskHelpers.cs,Run,The length of the statement  "            return Task.Factory.StartNew(_ => action()' null' default(CancellationToken)' TaskCreationOptions.None' TaskScheduler.Default); " is 127.
Long Statement,ServiceControlInstaller.Engine.LicenseMgmt,LicenseManager,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\LicenseMgmt\LicenseManager.cs,TryImportLicense,The length of the statement  "                var machineLevelLicenseLocation = LicenseFileLocationResolver.GetPathFor(Environment.SpecialFolder.CommonApplicationData); " is 122.
Long Statement,ServiceControlInstaller.Engine.Queues,QueueCreation,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Queues\QueueCreation.cs,RunQueueCreation,The length of the statement  "                    throw new QueueCreationTimeoutException($"Timed out waiting for {exeName} to created queues. This usually indicates a configuration error."); " is 141.
Long Statement,ServiceControlInstaller.Engine.Queues,QueueCreation,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Queues\QueueCreation.cs,RunQueueCreation,The length of the statement  "                    throw new QueueCreationFailedException($"{exeName} threw an error when creating queues. This typically indicates a configuration error. The error output from {exeName} was:\r\n {error}"); " is 187.
Long Statement,ServiceControlInstaller.Engine.Services,WindowsServiceController,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Services\WindowsServiceController.cs,ChangeAccountDetails,The length of the statement  "                        message += $"( AccountName {userAccount.QualifiedName} converted to {ConvertAccountNameToServiceAccount(userAccount.QualifiedName)})"; " is 134.
Long Statement,ServiceControlInstaller.Engine.Services,WindowsServiceController,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Services\WindowsServiceController.cs,RegisterNewService,The length of the statement  "                        message += $"( AccountName {serviceInfo.ServiceAccount} converted to {ConvertAccountNameToServiceAccount(serviceInfo.ServiceAccount)})"; " is 136.
Long Statement,ServiceControlInstaller.Engine.Unattended,UnattendAuditInstaller,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Unattended\UnattendAuditInstaller.cs,CheckLicenseIsValid,The length of the statement  "                    return new CheckLicenseResult(false' "License does not cover this release of ServiceControl.Upgrade protection expired"); " is 121.
Long Statement,ServiceControlInstaller.Engine.Unattended,UnattendServiceControlInstaller,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Unattended\UnattendServiceControlInstaller.cs,Upgrade,The length of the statement  "                logger.Error($"Upgrade aborted. An interim upgrade to version {options.UpgradeInfo.RecommendedUpgradeVersion} is required before upgrading to version {ZipInfo.Version}. Download available at https://github.com/Particular/ServiceControl/releases/tag/{options.UpgradeInfo.RecommendedUpgradeVersion}"); " is 299.
Long Statement,ServiceControlInstaller.Engine.Unattended,UnattendServiceControlInstaller,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Unattended\UnattendServiceControlInstaller.cs,CheckLicenseIsValid,The length of the statement  "                    return new CheckLicenseResult(false' "License does not cover this release of ServiceControl.Upgrade protection expired"); " is 121.
Long Statement,ServiceControlInstaller.Engine.Unattended,UnattendServiceControlInstaller,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Unattended\UnattendServiceControlInstaller.cs,AddRemoteInstance,The length of the statement  "                log.Error($"Cannot add remote instances to instances older than {Compatibility.RemoteInstancesDoNotNeedQueueAddress.SupportedFrom}"); " is 133.
Long Statement,ServiceControlInstaller.Engine.Unattended,UnattendServiceControlInstaller,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Unattended\UnattendServiceControlInstaller.cs,AddRemoteInstance,The length of the statement  "                    logger.Error("Service failed to start after adding remote instances - please check configuration for {0}"' instance.Name); " is 122.
Long Statement,ServiceControlInstaller.Engine.Unattended,UnattendServiceControlInstaller,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Unattended\UnattendServiceControlInstaller.cs,RemoveRemoteInstance,The length of the statement  "                instance.RemoteInstances.RemoveAll(x => remoteInstanceAddresses.Contains(x.ApiUri' StringComparer.InvariantCultureIgnoreCase)); " is 127.
Long Statement,ServiceControlInstaller.Engine.Unattended,UnattendServiceControlInstaller,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Unattended\UnattendServiceControlInstaller.cs,RemoveRemoteInstance,The length of the statement  "                    logger.Error("Service failed to start after removing remote instances - please check configuration for {0}"' instance.Name); " is 124.
Long Statement,ServiceControlInstaller.Engine.Unattended,UnattendServiceControlSplitter,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Unattended\UnattendServiceControlSplitter.cs,ValidateUpgradeAction,The length of the statement  "                    return Result.Failed("This instance cannot have an Audit instance split from it. Upgrade the instance instead"' RequiredUpgradeAction.Upgrade); " is 143.
Long Statement,ServiceControlInstaller.Engine.Unattended,UnattendServiceControlSplitter,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Unattended\UnattendServiceControlSplitter.cs,ValidateUpgradeAction,The length of the statement  "                    return Result.Failed("This instance cannot have an Audit instance split from it as it has error ingestion disabled. Please contact support"' RequiredUpgradeAction.ConvertToAudit); " is 179.
Long Statement,ServiceControlInstaller.Engine.Unattended,UnattendServiceControlSplitter,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Unattended\UnattendServiceControlSplitter.cs,ValidateUpgradeAction,The length of the statement  "                    return Result.Failed("This instance cannot have an Audit instance split from it. This instance has no recommended upgrade action"); " is 131.
Long Statement,ServiceControlInstaller.Engine.Unattended,UnattendServiceControlSplitter,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Unattended\UnattendServiceControlSplitter.cs,ValidateUpgradeVersion,The length of the statement  "            var upgradeInfo = UpgradeControl.GetUpgradeInfoForTargetVersion(serviceControlInstaller.ZipInfo.Version' instance.Version); " is 123.
Long Statement,ServiceControlInstaller.Engine.Unattended,UnattendServiceControlSplitter,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Unattended\UnattendServiceControlSplitter.cs,ValidateUpgradeVersion,The length of the statement  "                return Result.Failed($"An interim upgrade to version {upgradeInfo.RecommendedUpgradeVersion} is required before upgrading to version {serviceControlInstaller.ZipInfo.Version}. Download available at https://github.com/Particular/ServiceControl/releases/tag/{upgradeInfo.RecommendedUpgradeVersion}"); " is 298.
Long Statement,ServiceControlInstaller.Engine.UrlAcl,UrlReservation,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\UrlAcl\UrlReservation.cs,GetAll,The length of the statement  "                        var outputConfigInfo = (HttpServiceConfigUrlAclSet)Marshal.PtrToStructure(pOutputConfigInfo' typeof(HttpServiceConfigUrlAclSet)); " is 129.
Long Statement,ServiceControlInstaller.Engine.UrlAcl,UrlReservation,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\UrlAcl\UrlReservation.cs,GetAll,The length of the statement  "                        var rev = new UrlReservation(outputConfigInfo.KeyDesc.UrlPrefix' SecurityIdentifiersFromSecurityDescriptor(outputConfigInfo.ParamDesc.StringSecurityDescriptor).ToArray()); " is 171.
Long Statement,ServiceControlInstaller.Engine.UrlAcl,UrlReservation,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\UrlAcl\UrlReservation.cs,GetDiscretionaryAcl,The length of the statement  "                discretionaryAcl.AddAccess(AccessControlType.Allow' securityIdentifier' GENERIC_EXECUTE' InheritanceFlags.None' PropagationFlags.None); " is 135.
Long Statement,ServiceControlInstaller.Engine.Validation,ConnectionStringValidator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Validation\ConnectionStringValidator.cs,CheckMsSqlConnectionString,The length of the statement  "                            throw new EngineValidationException("Invalid service account for this connection string. The connection string has integrated security enabled but localsystem service has been selected."); " is 188.
Long Statement,ServiceControlInstaller.Engine.Validation,MsmqConfigValidator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Validation\MSMQConfigValidator.cs,CheckServiceIsInstalledAndRunning,The length of the statement  "            var msmqService = ServiceController.GetServices().FirstOrDefault(p => p.ServiceName.Equals("MSMQ"' StringComparison.OrdinalIgnoreCase)); " is 136.
Long Statement,ServiceControlInstaller.Engine.Validation,MsmqConfigValidator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Validation\MSMQConfigValidator.cs,CheckServiceIsConfiguredCorrectly,The length of the statement  "            var componentsToRemove = undesirableMsmqComponents.Where(undesirableComponent => valueNames.Contains(undesirableComponent.Name' StringComparer.OrdinalIgnoreCase)).Select(p => p.DisplayName).ToArray(); " is 200.
Long Statement,ServiceControlInstaller.Engine.Validation,MsmqConfigValidator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Validation\MSMQConfigValidator.cs,CheckServiceIsConfiguredCorrectly,The length of the statement  "                throw new EngineValidationException($"The MSMQ service has unsupported optional features installed. Please remove the following via control panel or the DISM command line tool'  The unsupported feature(s) are: {string.Join("' "' componentsToRemove)}"); " is 252.
Long Statement,ServiceControlInstaller.Engine.Validation,PathsValidator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Validation\PathsValidator.cs,CheckPathsAreEmpty,The length of the statement  "                        continue; // flagfile will be present if we've unpacked and had a config failure.  In this case it's OK for the directory to have content " is 137.
Long Statement,ServiceControlInstaller.Engine.Validation,PathsValidator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Validation\PathsValidator.cs,CheckNoNestedPaths,The length of the statement  "                        throw new EngineValidationException($"Nested paths are not supported. The {possibleChild.Name} is nested under {path.Name}"); " is 125.
Long Statement,ServiceControlInstaller.Engine.Validation,QueueNameValidator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Validation\QueueNameValidator.cs,Validate,The length of the statement  "                SCInstances = InstanceFinder.ServiceControlInstances().Where(p => p.Name != instance.Name & p.TransportPackage.Equals(instance.TransportPackage)).AsEnumerable<IServiceControlInstance>().ToList()' " is 195.
Long Statement,ServiceControlInstaller.Engine.Validation,QueueNameValidator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Validation\QueueNameValidator.cs,Validate,The length of the statement  "                AuditInstances = InstanceFinder.ServiceControlAuditInstances().Where(p => p.Name != instance.Name & p.TransportPackage.Equals(instance.TransportPackage)).AsEnumerable<IServiceControlAuditInstance>().ToList()' " is 208.
Long Statement,ServiceControlInstaller.Engine.Validation,QueueNameValidator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Validation\QueueNameValidator.cs,Validate,The length of the statement  "                SCInstances = InstanceFinder.ServiceControlInstances().Where(p => p.Name != instance.Name & p.TransportPackage.Equals(instance.TransportPackage)).AsEnumerable<IServiceControlInstance>().ToList()' " is 195.
Long Statement,ServiceControlInstaller.Engine.Validation,QueueNameValidator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Validation\QueueNameValidator.cs,Validate,The length of the statement  "                AuditInstances = InstanceFinder.ServiceControlAuditInstances().Where(p => p.Name != instance.Name & p.TransportPackage.Equals(instance.TransportPackage)).AsEnumerable<IServiceControlAuditInstance>().ToList()' " is 208.
Long Statement,ServiceControlInstaller.Engine.Validation,QueueNameValidator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Validation\QueueNameValidator.cs,ThrowIfDuplicateFound,The length of the statement  "                throw new EngineValidationException($"The queue name for {duplicates[0]} is already assigned to another ServiceControl instance"); " is 130.
Long Statement,ServiceControlInstaller.Engine.Validation,QueueNameValidator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Validation\QueueNameValidator.cs,ThrowIfDuplicateFound,The length of the statement  "                throw new EngineValidationException($"Some queue names specified are already assigned to another ServiceControl instance - Correct the values for {string.Join("' "' duplicates.OrderBy(x => x))}"); " is 196.
Complex Conditional,ServiceControlInstaller.Engine.Instances,MonitoringNewInstance,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\MonitoringNewInstance.cs,CheckForConflictingUrlAclReservations,The conditional expression  "(reservation.HostName.Equals("localhost"' StringComparison.OrdinalIgnoreCase) && !HostName.Equals("localhost"' StringComparison.OrdinalIgnoreCase)) ||                      (!reservation.HostName.Equals("localhost"' StringComparison.OrdinalIgnoreCase) && HostName.Equals("localhost"' StringComparison.OrdinalIgnoreCase))"  is complex.
Complex Conditional,ServiceControlInstaller.Engine.Instances,ServiceControlInstallableBase,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\ServiceControlNewInstance.cs,CheckForConflictingUrlAclReservations,The conditional expression  "reservation.HostName.Equals("localhost"' StringComparison.OrdinalIgnoreCase) && !HostName.Equals("localhost"' StringComparison.OrdinalIgnoreCase) ||                      !reservation.HostName.Equals("localhost"' StringComparison.OrdinalIgnoreCase) && HostName.Equals("localhost"' StringComparison.OrdinalIgnoreCase)"  is complex.
Virtual Method Call from Constructor,ServiceControlInstaller.Engine.Instances,ServiceControlBaseService,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\ServiceControlBaseService.cs,ServiceControlBaseService,The constructor "ServiceControlBaseService" calls a virtual method "CreateAppConfig".
Virtual Method Call from Constructor,ServiceControlInstaller.Engine.Instances,ServiceControlBaseService,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\ServiceControlBaseService.cs,ServiceControlBaseService,The constructor "ServiceControlBaseService" calls a virtual method "Reload".
Empty Catch Block,ServiceControlInstaller.Engine.Configuration,AppConfigWrapper,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Configuration\AppConfigWrapper.cs,Read,The method has an empty catch block.
Empty Catch Block,ServiceControlInstaller.Engine.Configuration,RegistryReader<T>,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Configuration\RegistryReader.cs,Read,The method has an empty catch block.
Empty Catch Block,ServiceControlInstaller.Engine.Instances,BaseService,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\BaseService.cs,HasUnderlyingProcessExited,The method has an empty catch block.
Magic Number,ServiceControlInstaller.Engine.Accounts,UserAccount,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Accounts\UserAccount.cs,ParseAccountName,The following statement contains a magic number: var parts = resolvedAccount.Value.Split("\\".ToCharArray()' 2);
Magic Number,ServiceControlInstaller.Engine.Configuration,AppConfigWrapper,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Configuration\AppConfigWrapper.cs,Read,The following statement contains a magic number: var parts = key.Split("/".ToCharArray()' 2);
Magic Number,ServiceControlInstaller.Engine.Configuration.ServiceControl,UpgradeInfo,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Configuration\ServiceControl\UpgradeControl.cs,GetHashCode,The following statement contains a magic number: return 17 *                         (23 + TargetMinimumVersion.GetHashCode()) *                         (23 + CurrentMinimumVersion.GetHashCode()) *                         (23 + RecommendedUpgradeVersion.GetHashCode());
Magic Number,ServiceControlInstaller.Engine.Configuration.ServiceControl,UpgradeInfo,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Configuration\ServiceControl\UpgradeControl.cs,GetHashCode,The following statement contains a magic number: return 17 *                         (23 + TargetMinimumVersion.GetHashCode()) *                         (23 + CurrentMinimumVersion.GetHashCode()) *                         (23 + RecommendedUpgradeVersion.GetHashCode());
Magic Number,ServiceControlInstaller.Engine.Configuration.ServiceControl,UpgradeInfo,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Configuration\ServiceControl\UpgradeControl.cs,GetHashCode,The following statement contains a magic number: return 17 *                         (23 + TargetMinimumVersion.GetHashCode()) *                         (23 + CurrentMinimumVersion.GetHashCode()) *                         (23 + RecommendedUpgradeVersion.GetHashCode());
Magic Number,ServiceControlInstaller.Engine.Configuration.ServiceControl,UpgradeInfo,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Configuration\ServiceControl\UpgradeControl.cs,GetHashCode,The following statement contains a magic number: return 17 *                         (23 + TargetMinimumVersion.GetHashCode()) *                         (23 + CurrentMinimumVersion.GetHashCode()) *                         (23 + RecommendedUpgradeVersion.GetHashCode());
Magic Number,ServiceControlInstaller.Engine.Instances,BaseService,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\BaseService.cs,TryStopService,The following statement contains a magic number: Service.WaitForStatus(ServiceControllerStatus.Stopped' TimeSpan.FromSeconds(60));
Magic Number,ServiceControlInstaller.Engine.Instances,BaseService,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\BaseService.cs,TryStopService,The following statement contains a magic number: var t = TaskHelpers.Run(() =>                  {                      while (!HasUnderlyingProcessExited())                      {                          Thread.Sleep(250);                      }                  });
Magic Number,ServiceControlInstaller.Engine.Instances,BaseService,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\BaseService.cs,TryStopService,The following statement contains a magic number: return t.Wait(TimeSpan.FromSeconds(5));
Magic Number,ServiceControlInstaller.Engine.Instances,BaseService,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\BaseService.cs,TryStartService,The following statement contains a magic number: Service.WaitForStatus(ServiceControllerStatus.Running' TimeSpan.FromSeconds(120));
Magic Number,ServiceControlInstaller.Engine.Instances,MonitoringInstance,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\MonitoringInstance.cs,Reload,The following statement contains a magic number: Port = AppConfig.Read(SettingsList.Port' 1234);
Magic Number,ServiceControlInstaller.Engine.Instances,ServiceControlAuditInstance,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\ServiceControlAuditInstance.cs,Reload,The following statement contains a magic number: Port = AppConfig.Read(AuditInstanceSettingsList.Port' 33333);
Magic Number,ServiceControlInstaller.Engine.Instances,ServiceControlBaseService,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\ServiceControlBaseService.cs,RecreateUrlAcl,The following statement contains a magic number: oldSettings.Version.Major < 2
Magic Number,ServiceControlInstaller.Engine.Instances,ServiceControlBaseService,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\ServiceControlBaseService.cs,GetDatabaseSizeInGb,The following statement contains a magic number: return folders.Sum(path => new DirectoryInfo(path).GetDirectorySize()) / (1024.0 * 1024 * 1024);
Magic Number,ServiceControlInstaller.Engine.Instances,ServiceControlBaseService,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\ServiceControlBaseService.cs,GetDatabaseSizeInGb,The following statement contains a magic number: return folders.Sum(path => new DirectoryInfo(path).GetDirectorySize()) / (1024.0 * 1024 * 1024);
Magic Number,ServiceControlInstaller.Engine.Instances,ServiceControlBaseService,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\ServiceControlBaseService.cs,GetDatabaseSizeInGb,The following statement contains a magic number: return folders.Sum(path => new DirectoryInfo(path).GetDirectorySize()) / (1024.0 * 1024 * 1024);
Magic Number,ServiceControlInstaller.Engine.Instances,ServiceControlInstance,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Instances\ServiceControlInstance.cs,Reload,The following statement contains a magic number: Port = AppConfig.Read(ServiceControlSettings.Port' 33333);
Magic Number,ServiceControlInstaller.Engine.LicenseMgmt,LicenseDetails,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\LicenseMgmt\LicenseDetails.cs,FromLicense,The following statement contains a magic number: var details = new LicenseDetails              {                  UpgradeProtectionExpiration = license.UpgradeProtectionExpiration'                  //If expiration date is greater that 50 years treat is as no expiration date                  ExpirationDate = license.ExpirationDate.HasValue                      ? (license.ExpirationDate.Value > DateTime.Now.AddYears(50) ? null : license.ExpirationDate)                      : license.ExpirationDate'                  RegisteredTo = license.RegisteredTo'                  IsCommercialLicense = license.IsCommercialLicense'                  IsExtendedTrial = license.IsExtendedTrial'                  IsTrialLicense = license.IsTrialLicense'                  LicenseType = license.LicenseType'                  Edition = license.Edition'                  ValidForServiceControl = license.ValidForApplication("ServiceControl")'                  DaysUntilSubscriptionExpires = license.GetDaysUntilLicenseExpires()'                  DaysUntilUpgradeProtectionExpires = license.GetDaysUntilUpgradeProtectionExpires()              };
Magic Number,ServiceControlInstaller.Engine.Services,ServiceRecoveryHelper,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Services\ServiceRecoveryHelper.cs,SetRestartOnFailure,The following statement contains a magic number: const int actionCount = 2;
Magic Number,ServiceControlInstaller.Engine.Services,ServiceRecoveryHelper,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Services\ServiceRecoveryHelper.cs,SetRestartOnFailure,The following statement contains a magic number: const uint delay = 60000;
Magic Number,ServiceControlInstaller.Engine.Services,WindowsServiceController,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Services\WindowsServiceController.cs,ChangeAccountDetails,The following statement contains a magic number: wmiReturnCode == 22
Magic Number,ServiceControlInstaller.Engine.Services,WindowsServiceController,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Services\WindowsServiceController.cs,RegisterNewService,The following statement contains a magic number: inParams["ServiceType"] = 16;
Magic Number,ServiceControlInstaller.Engine.UrlAcl,UrlReservation,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\UrlAcl\UrlReservation.cs,UrlReservation,The following statement contains a magic number: Port = HTTPS ? 443 : 80;
Magic Number,ServiceControlInstaller.Engine.UrlAcl,UrlReservation,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\UrlAcl\UrlReservation.cs,UrlReservation,The following statement contains a magic number: Port = HTTPS ? 443 : 80;
Magic Number,ServiceControlInstaller.Engine.UrlAcl,UrlReservation,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\UrlAcl\UrlReservation.cs,GetDiscretionaryAcl,The following statement contains a magic number: var discretionaryAcl = new DiscretionaryAcl(false' false' 16);
Magic Number,ServiceControlInstaller.Engine.Validation,DatabaseMaintenancePortValidator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Validation\DatabaseMaintenancePortValidator.cs,Validate,The following statement contains a magic number: instance.DatabaseMaintenancePort < 1 || instance.DatabaseMaintenancePort > 49151
Magic Number,ServiceControlInstaller.Engine.Validation,PortValidator,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Validation\PortValidator.cs,Validate,The following statement contains a magic number: instance.Port < 1 || instance.Port > 49151
Magic Number,ServiceControlInstaller.Engine.Ports,PortUtils,C:\research\architectureSmells\repos\Particular_ServiceControl\src\ServiceControlInstaller.Engine\Validation\PortUtils.cs,CheckAvailable,The following statement contains a magic number: 1 > portNumber || 49151 < portNumber
