Implementation smell,Namespace,Class,File,Method,Description
Complex Method,AudioSwitcher.Presentation.UI,ToolStripItemCommandBinding,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\ToolStripItemCommandBinding.cs,SyncProperty,Cyclomatic complexity of the method is 26
Complex Method,AudioSwitcher.UI.ViewModels,AudioDeviceViewModel,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\UI\ViewModels\AudioDeviceViewModel.cs,CalculateIsVisible,Cyclomatic complexity of the method is 17
Long Parameter List,AudioSwitcher.Presentation.Drawing.Interop,DllImports,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\Drawing\Interop\DllImports.cs,LookupIconIdFromDirectoryEx,The method has 5 parameters.
Long Parameter List,AudioSwitcher.Presentation.UI.Interop,DllImports,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Interop\DllImports.cs,GetThemeMargins,The method has 7 parameters.
Long Statement,AudioSwitcher.Audio.Interop,PropVariant,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Audio\Interop\MMAudio\PropVariant.cs,GetBlobAsArrayOf,The length of the statement  "		throw new InvalidDataException (String.Format ("Blob size {0} not a multiple of struct size {1}"' blobByteLength' structSize)); " is 127.
Long Statement,AudioSwitcher.Presentation,PresenterHost,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\PresenterHost.PresenterLifetime.cs,FindPresenterFactory,The length of the statement  "	ExportFactory<IPresenter' IPresenterMetadata> factory = _presenters.Where (c => c.Metadata.Id == id).SingleOrDefault (); " is 120.
Long Statement,AudioSwitcher.Presentation.UI,AudioContextMenuStrip,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\AudioContextMenuStrip.cs,ShowInSystemTray,The length of the statement  "		MethodInfo info = typeof(AudioContextMenuStrip).GetMethod ("ShowInTaskbar"' BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance' null' new Type[] { " is 164.
Long Statement,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderSplitButtonBackground,The length of the statement  "		OnRenderArrow (new ToolStripArrowRenderEventArgs (e.Graphics' sb' sb.DropDownButtonBounds' Color.Red' ArrowDirection.Down)); " is 124.
Long Statement,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderImageMargin,The length of the statement  "			int extraWidth = (e.ToolStrip.Width - e.ToolStrip.DisplayRectangle.Width - margins.Left - margins.Right - 1) - e.AffectedBounds.Width; " is 134.
Long Statement,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderSeparator,The length of the statement  "		Rectangle rect = new Rectangle (e.ToolStrip.DisplayRectangle.Left - 4' 0' e.ToolStrip.DisplayRectangle.Width + 4' e.Item.Height); " is 129.
Long Statement,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderItemCheck,The length of the statement  "			backgroundRectangle = new Rectangle (e.ToolStrip.ClientSize.Width - backgroundRectangle.X - backgroundRectangle.Width' backgroundRectangle.Y' backgroundRectangle.Width' backgroundRectangle.Height); " is 197.
Long Statement,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderItemCheck,The length of the statement  "		//_renderer.SetParameters(MenuClass' (int)MenuParts.PopupCheckBackground' e.Item.Enabled ? (isRendereringImageCheck ? (int)MenuPopupCheckBackgroundStates.Bitmap : (int)MenuPopupCheckBackgroundStates.Normal) : (int)MenuPopupCheckBackgroundStates.Disabled); " is 255.
Long Statement,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderItemCheck,The length of the statement  "		_renderer.SetParameters (MenuClass' (int)MenuParts.PopupItem' e.Item.Enabled ? (int)MenuPopupItemStates.Hover : (int)MenuPopupItemStates.DisabledHover); " is 152.
Long Statement,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderItemCheck,The length of the statement  "				_renderer.SetParameters (MenuClass' (int)MenuParts.PopupCheck' e.Item.Enabled ? (int)MenuPopupCheckStates.BulletNormal : (int)MenuPopupCheckStates.BulletDisabled); " is 163.
Long Statement,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderItemCheck,The length of the statement  "				_renderer.SetParameters (MenuClass' (int)MenuParts.PopupCheck' e.Item.Enabled ? (int)MenuPopupCheckStates.CheckmarkNormal : (int)MenuPopupCheckStates.CheckmarkDisabled); " is 169.
Long Statement,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,GetThemeMargins,The length of the statement  "		if (DllImports.GetThemeMargins (_renderer.Handle' hDC' _renderer.Part' _renderer.State' (int)marginType' IntPtr.Zero' out margins) == 0) " is 136.
Long Statement,AudioSwitcher.Presentation.UI.Renderer,DeviceToolStripNativeRender,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\DeviceToolStripNativeRender.cs,OnRenderItemText,The length of the statement  "	base.OnRenderItemText (new ToolStripItemTextRenderEventArgs (e.Graphics' e.Item' String.Concat (text [0]' Environment.NewLine' Environment.NewLine)' e.TextRectangle' e.TextColor' e.TextFont' e.TextFormat)); " is 206.
Long Statement,AudioSwitcher.Presentation.UI.Renderer,DeviceToolStripNativeRender,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\DeviceToolStripNativeRender.cs,OnRenderItemText,The length of the statement  "	TextRenderer.DrawText (e.Graphics' String.Concat (Environment.NewLine' text [1]' Environment.NewLine' text [2])' e.TextFont' e.TextRectangle' SystemColors.GrayText' e.TextFormat); " is 179.
Long Statement,AudioSwitcher.Audio,AudioDevice,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Audio\AudioDevice.cs,OpenPropertyStore,The length of the statement  "	Marshal.ThrowExceptionForHR (_underlyingDevice.OpenPropertyStore (StorageAccessMode.Read' out underlyingPropertyStore)); " is 120.
Long Statement,AudioSwitcher.Presentation.Drawing,DrawingServices,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\Drawing\DrawingServices.cs,CreateOverlayedImage,The length of the statement  "		g.DrawImage (overlayImage' size.Width - overlayImage.Width' size.Height - overlayImage.Height' overlayImage.Width' overlayImage.Height); " is 136.
Long Statement,AudioSwitcher.Presentation.Drawing,IconExtractor,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\Drawing\IconExtractor.cs,GetIconByIndex,The length of the statement  "			throw new ArgumentOutOfRangeException ("index"' index' "Index should be in the range (0-" + IconNames.Count.ToString () + ")."); " is 128.
Long Statement,AudioSwitcher.Presentation.Drawing,IconExtractor,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\Drawing\IconExtractor.cs,Open,The length of the statement  "	SafeModuleHandle moduleHandle = DllImports.LoadLibraryEx (fileName' IntPtr.Zero' LoadLibraryExFlags.LOAD_LIBRARY_AS_DATAFILE); " is 126.
Long Statement,AudioSwitcher.Presentation.UI.Views,DeviceFlyoutView,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\UI\Views\DeviceFlyoutView.cs,GetPreferredSize,The length of the statement  "	return new Size (proposedSize.Width + (Size.Width - ClientSize.Width)' proposedSize.Height + (Size.Height - ClientSize.Height)); " is 128.
Virtual Method Call from Constructor,AudioSwitcher.Presentation,ContextMenuPresenter,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\ContextMenuPresenter.cs,ContextMenuPresenter,The constructor "ContextMenuPresenter" calls a virtual method "CreateContextMenu".
Empty Catch Block,AudioSwitcher.Presentation.Drawing,ShellIcon,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\Drawing\ShellIcon.cs,TryExtractIconByIdOrIndex,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Presentation.Drawing,ShellIcon,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\Drawing\ShellIcon.cs,TryExtractIconByIdOrIndex,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Presentation.Drawing,ShellIcon,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\Drawing\ShellIcon.cs,TryExtractIconByIdOrIndex,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Presentation.Drawing,ShellIcon,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\Drawing\ShellIcon.cs,TryExtractIconByIdOrIndex,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Presentation.Drawing,ShellIcon,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\Drawing\ShellIcon.cs,TryExtractIconFromIco,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Presentation.Drawing,ShellIcon,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\Drawing\ShellIcon.cs,TryExtractIconFromIco,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Win32,RegistryKeyExtensions,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Win32\RegistryKeyExtensions.cs,TryOpenSubkey,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Win32,RegistryKeyExtensions,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Win32\RegistryKeyExtensions.cs,TryOpenSubkey,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Win32,RegistryKeyExtensions,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Win32\RegistryKeyExtensions.cs,TryOpenSubkey,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Win32,RegistryKeyExtensions,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Win32\RegistryKeyExtensions.cs,TryGetValue,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Win32,RegistryKeyExtensions,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Win32\RegistryKeyExtensions.cs,TryGetValue,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Win32,RegistryKeyExtensions,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Win32\RegistryKeyExtensions.cs,TryGetValue,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Win32,RegistryKeyExtensions,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Win32\RegistryKeyExtensions.cs,TryDeleteValue,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Win32,RegistryKeyExtensions,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Win32\RegistryKeyExtensions.cs,TryDeleteValue,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Win32,RegistryKeyExtensions,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Win32\RegistryKeyExtensions.cs,TryDeleteValue,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Win32,RegistryKeyExtensions,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Win32\RegistryKeyExtensions.cs,TrySetValue,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Win32,RegistryKeyExtensions,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Win32\RegistryKeyExtensions.cs,TrySetValue,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Win32,RegistryKeyExtensions,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Win32\RegistryKeyExtensions.cs,TrySetValue,The method has an empty catch block.
Magic Number,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderImageMargin,The following statement contains a magic number: if (EnsureRenderer ()) {  	if (e.ToolStrip.IsDropDown) {  		_renderer.SetParameters (MenuClass' (int)MenuParts.PopupGutter' 0);  		// The AffectedBounds is usually too small' way too small to look right. Instead of using that'  		// use the AffectedBounds but with the right width. Then narrow the rectangle to the correct edge  		// based on whether or not it's RTL. (It doesn't need to be narrowed to an edge in LTR mode' but let's  		// do that anyway.)  		// Using the DisplayRectangle gets roughly the right size so that the separator is closer to the text.  		Padding margins = GetThemeMargins (e.Graphics' MarginTypes.Sizing);  		int extraWidth = (e.ToolStrip.Width - e.ToolStrip.DisplayRectangle.Width - margins.Left - margins.Right - 1) - e.AffectedBounds.Width;  		Rectangle rect = e.AffectedBounds;  		rect.Y += 2;  		rect.Height -= 4;  		int sepWidth = _renderer.GetPartSize (e.Graphics' ThemeSizeType.True).Width;  		if (e.ToolStrip.RightToLeft == RightToLeft.Yes) {  			rect = new Rectangle (rect.X - extraWidth' rect.Y' sepWidth' rect.Height);  			rect.X += sepWidth;  		} else {  			rect = new Rectangle (rect.Width + extraWidth - sepWidth' rect.Y' sepWidth' rect.Height);  		}  		_renderer.DrawBackground (e.Graphics' rect);  	}  } else {  	base.OnRenderImageMargin (e);  }  
Magic Number,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderImageMargin,The following statement contains a magic number: if (EnsureRenderer ()) {  	if (e.ToolStrip.IsDropDown) {  		_renderer.SetParameters (MenuClass' (int)MenuParts.PopupGutter' 0);  		// The AffectedBounds is usually too small' way too small to look right. Instead of using that'  		// use the AffectedBounds but with the right width. Then narrow the rectangle to the correct edge  		// based on whether or not it's RTL. (It doesn't need to be narrowed to an edge in LTR mode' but let's  		// do that anyway.)  		// Using the DisplayRectangle gets roughly the right size so that the separator is closer to the text.  		Padding margins = GetThemeMargins (e.Graphics' MarginTypes.Sizing);  		int extraWidth = (e.ToolStrip.Width - e.ToolStrip.DisplayRectangle.Width - margins.Left - margins.Right - 1) - e.AffectedBounds.Width;  		Rectangle rect = e.AffectedBounds;  		rect.Y += 2;  		rect.Height -= 4;  		int sepWidth = _renderer.GetPartSize (e.Graphics' ThemeSizeType.True).Width;  		if (e.ToolStrip.RightToLeft == RightToLeft.Yes) {  			rect = new Rectangle (rect.X - extraWidth' rect.Y' sepWidth' rect.Height);  			rect.X += sepWidth;  		} else {  			rect = new Rectangle (rect.Width + extraWidth - sepWidth' rect.Y' sepWidth' rect.Height);  		}  		_renderer.DrawBackground (e.Graphics' rect);  	}  } else {  	base.OnRenderImageMargin (e);  }  
Magic Number,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderImageMargin,The following statement contains a magic number: if (e.ToolStrip.IsDropDown) {  	_renderer.SetParameters (MenuClass' (int)MenuParts.PopupGutter' 0);  	// The AffectedBounds is usually too small' way too small to look right. Instead of using that'  	// use the AffectedBounds but with the right width. Then narrow the rectangle to the correct edge  	// based on whether or not it's RTL. (It doesn't need to be narrowed to an edge in LTR mode' but let's  	// do that anyway.)  	// Using the DisplayRectangle gets roughly the right size so that the separator is closer to the text.  	Padding margins = GetThemeMargins (e.Graphics' MarginTypes.Sizing);  	int extraWidth = (e.ToolStrip.Width - e.ToolStrip.DisplayRectangle.Width - margins.Left - margins.Right - 1) - e.AffectedBounds.Width;  	Rectangle rect = e.AffectedBounds;  	rect.Y += 2;  	rect.Height -= 4;  	int sepWidth = _renderer.GetPartSize (e.Graphics' ThemeSizeType.True).Width;  	if (e.ToolStrip.RightToLeft == RightToLeft.Yes) {  		rect = new Rectangle (rect.X - extraWidth' rect.Y' sepWidth' rect.Height);  		rect.X += sepWidth;  	} else {  		rect = new Rectangle (rect.Width + extraWidth - sepWidth' rect.Y' sepWidth' rect.Height);  	}  	_renderer.DrawBackground (e.Graphics' rect);  }  
Magic Number,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderImageMargin,The following statement contains a magic number: if (e.ToolStrip.IsDropDown) {  	_renderer.SetParameters (MenuClass' (int)MenuParts.PopupGutter' 0);  	// The AffectedBounds is usually too small' way too small to look right. Instead of using that'  	// use the AffectedBounds but with the right width. Then narrow the rectangle to the correct edge  	// based on whether or not it's RTL. (It doesn't need to be narrowed to an edge in LTR mode' but let's  	// do that anyway.)  	// Using the DisplayRectangle gets roughly the right size so that the separator is closer to the text.  	Padding margins = GetThemeMargins (e.Graphics' MarginTypes.Sizing);  	int extraWidth = (e.ToolStrip.Width - e.ToolStrip.DisplayRectangle.Width - margins.Left - margins.Right - 1) - e.AffectedBounds.Width;  	Rectangle rect = e.AffectedBounds;  	rect.Y += 2;  	rect.Height -= 4;  	int sepWidth = _renderer.GetPartSize (e.Graphics' ThemeSizeType.True).Width;  	if (e.ToolStrip.RightToLeft == RightToLeft.Yes) {  		rect = new Rectangle (rect.X - extraWidth' rect.Y' sepWidth' rect.Height);  		rect.X += sepWidth;  	} else {  		rect = new Rectangle (rect.Width + extraWidth - sepWidth' rect.Y' sepWidth' rect.Height);  	}  	_renderer.DrawBackground (e.Graphics' rect);  }  
Magic Number,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderImageMargin,The following statement contains a magic number: rect.Y += 2;  
Magic Number,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderImageMargin,The following statement contains a magic number: rect.Height -= 4;  
Magic Number,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderSeparator,The following statement contains a magic number: if (e.ToolStrip.IsDropDown && EnsureRenderer ()) {  	_renderer.SetParameters (MenuClass' (int)MenuParts.PopupSeparator' 0);  	Rectangle rect = new Rectangle (e.ToolStrip.DisplayRectangle.Left - 4' 0' e.ToolStrip.DisplayRectangle.Width + 4' e.Item.Height);  	_renderer.DrawBackground (e.Graphics' rect' rect);  } else {  	base.OnRenderSeparator (e);  }  
Magic Number,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderSeparator,The following statement contains a magic number: if (e.ToolStrip.IsDropDown && EnsureRenderer ()) {  	_renderer.SetParameters (MenuClass' (int)MenuParts.PopupSeparator' 0);  	Rectangle rect = new Rectangle (e.ToolStrip.DisplayRectangle.Left - 4' 0' e.ToolStrip.DisplayRectangle.Width + 4' e.Item.Height);  	_renderer.DrawBackground (e.Graphics' rect' rect);  } else {  	base.OnRenderSeparator (e);  }  
Magic Number,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderItemCheck,The following statement contains a magic number: if (EnsureRenderer ()) {  	Rectangle backgroundRectangle = GetBackgroundRectangle (e.Item);  	//Rectangle bgRect = e.ImageRectangle;  	backgroundRectangle.Width = backgroundRectangle.Height;  	// Now' mirror its position if the menu item is RTL.  	if (e.Item.RightToLeft == RightToLeft.Yes)  		backgroundRectangle = new Rectangle (e.ToolStrip.ClientSize.Width - backgroundRectangle.X - backgroundRectangle.Width' backgroundRectangle.Y' backgroundRectangle.Width' backgroundRectangle.Height);  	bool isRendereringImageCheck = IsRenderingImageCheck (e.Item);  	// WORKAROUND: On Windows 8.1 (not sure about anywhere else)' the check background has the wrong   	// border' see #29' instead we just use the same border as the hover state of a menu item  	//_renderer.SetParameters(MenuClass' (int)MenuParts.PopupCheckBackground' e.Item.Enabled ? (isRendereringImageCheck ? (int)MenuPopupCheckBackgroundStates.Bitmap : (int)MenuPopupCheckBackgroundStates.Normal) : (int)MenuPopupCheckBackgroundStates.Disabled);  	_renderer.SetParameters (MenuClass' (int)MenuParts.PopupItem' e.Item.Enabled ? (int)MenuPopupItemStates.Hover : (int)MenuPopupItemStates.DisabledHover);  	_renderer.DrawBackground (e.Graphics' backgroundRectangle);  	if (!isRendereringImageCheck) {  		Rectangle checkRect = e.ImageRectangle;  		checkRect.X = backgroundRectangle.X + backgroundRectangle.Width / 2 - checkRect.Width / 2;  		checkRect.Y = backgroundRectangle.Y + backgroundRectangle.Height / 2 - checkRect.Height / 2;  		ToolStripMenuItem item = e.Item as ToolStripMenuItem;  		if (item != null && item.CheckState == CheckState.Indeterminate) {  			_renderer.SetParameters (MenuClass' (int)MenuParts.PopupCheck' e.Item.Enabled ? (int)MenuPopupCheckStates.BulletNormal : (int)MenuPopupCheckStates.BulletDisabled);  		} else {  			_renderer.SetParameters (MenuClass' (int)MenuParts.PopupCheck' e.Item.Enabled ? (int)MenuPopupCheckStates.CheckmarkNormal : (int)MenuPopupCheckStates.CheckmarkDisabled);  		}  		_renderer.DrawBackground (e.Graphics' checkRect);  	}  } else {  	base.OnRenderItemCheck (e);  }  
Magic Number,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderItemCheck,The following statement contains a magic number: if (EnsureRenderer ()) {  	Rectangle backgroundRectangle = GetBackgroundRectangle (e.Item);  	//Rectangle bgRect = e.ImageRectangle;  	backgroundRectangle.Width = backgroundRectangle.Height;  	// Now' mirror its position if the menu item is RTL.  	if (e.Item.RightToLeft == RightToLeft.Yes)  		backgroundRectangle = new Rectangle (e.ToolStrip.ClientSize.Width - backgroundRectangle.X - backgroundRectangle.Width' backgroundRectangle.Y' backgroundRectangle.Width' backgroundRectangle.Height);  	bool isRendereringImageCheck = IsRenderingImageCheck (e.Item);  	// WORKAROUND: On Windows 8.1 (not sure about anywhere else)' the check background has the wrong   	// border' see #29' instead we just use the same border as the hover state of a menu item  	//_renderer.SetParameters(MenuClass' (int)MenuParts.PopupCheckBackground' e.Item.Enabled ? (isRendereringImageCheck ? (int)MenuPopupCheckBackgroundStates.Bitmap : (int)MenuPopupCheckBackgroundStates.Normal) : (int)MenuPopupCheckBackgroundStates.Disabled);  	_renderer.SetParameters (MenuClass' (int)MenuParts.PopupItem' e.Item.Enabled ? (int)MenuPopupItemStates.Hover : (int)MenuPopupItemStates.DisabledHover);  	_renderer.DrawBackground (e.Graphics' backgroundRectangle);  	if (!isRendereringImageCheck) {  		Rectangle checkRect = e.ImageRectangle;  		checkRect.X = backgroundRectangle.X + backgroundRectangle.Width / 2 - checkRect.Width / 2;  		checkRect.Y = backgroundRectangle.Y + backgroundRectangle.Height / 2 - checkRect.Height / 2;  		ToolStripMenuItem item = e.Item as ToolStripMenuItem;  		if (item != null && item.CheckState == CheckState.Indeterminate) {  			_renderer.SetParameters (MenuClass' (int)MenuParts.PopupCheck' e.Item.Enabled ? (int)MenuPopupCheckStates.BulletNormal : (int)MenuPopupCheckStates.BulletDisabled);  		} else {  			_renderer.SetParameters (MenuClass' (int)MenuParts.PopupCheck' e.Item.Enabled ? (int)MenuPopupCheckStates.CheckmarkNormal : (int)MenuPopupCheckStates.CheckmarkDisabled);  		}  		_renderer.DrawBackground (e.Graphics' checkRect);  	}  } else {  	base.OnRenderItemCheck (e);  }  
Magic Number,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderItemCheck,The following statement contains a magic number: if (EnsureRenderer ()) {  	Rectangle backgroundRectangle = GetBackgroundRectangle (e.Item);  	//Rectangle bgRect = e.ImageRectangle;  	backgroundRectangle.Width = backgroundRectangle.Height;  	// Now' mirror its position if the menu item is RTL.  	if (e.Item.RightToLeft == RightToLeft.Yes)  		backgroundRectangle = new Rectangle (e.ToolStrip.ClientSize.Width - backgroundRectangle.X - backgroundRectangle.Width' backgroundRectangle.Y' backgroundRectangle.Width' backgroundRectangle.Height);  	bool isRendereringImageCheck = IsRenderingImageCheck (e.Item);  	// WORKAROUND: On Windows 8.1 (not sure about anywhere else)' the check background has the wrong   	// border' see #29' instead we just use the same border as the hover state of a menu item  	//_renderer.SetParameters(MenuClass' (int)MenuParts.PopupCheckBackground' e.Item.Enabled ? (isRendereringImageCheck ? (int)MenuPopupCheckBackgroundStates.Bitmap : (int)MenuPopupCheckBackgroundStates.Normal) : (int)MenuPopupCheckBackgroundStates.Disabled);  	_renderer.SetParameters (MenuClass' (int)MenuParts.PopupItem' e.Item.Enabled ? (int)MenuPopupItemStates.Hover : (int)MenuPopupItemStates.DisabledHover);  	_renderer.DrawBackground (e.Graphics' backgroundRectangle);  	if (!isRendereringImageCheck) {  		Rectangle checkRect = e.ImageRectangle;  		checkRect.X = backgroundRectangle.X + backgroundRectangle.Width / 2 - checkRect.Width / 2;  		checkRect.Y = backgroundRectangle.Y + backgroundRectangle.Height / 2 - checkRect.Height / 2;  		ToolStripMenuItem item = e.Item as ToolStripMenuItem;  		if (item != null && item.CheckState == CheckState.Indeterminate) {  			_renderer.SetParameters (MenuClass' (int)MenuParts.PopupCheck' e.Item.Enabled ? (int)MenuPopupCheckStates.BulletNormal : (int)MenuPopupCheckStates.BulletDisabled);  		} else {  			_renderer.SetParameters (MenuClass' (int)MenuParts.PopupCheck' e.Item.Enabled ? (int)MenuPopupCheckStates.CheckmarkNormal : (int)MenuPopupCheckStates.CheckmarkDisabled);  		}  		_renderer.DrawBackground (e.Graphics' checkRect);  	}  } else {  	base.OnRenderItemCheck (e);  }  
Magic Number,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderItemCheck,The following statement contains a magic number: if (EnsureRenderer ()) {  	Rectangle backgroundRectangle = GetBackgroundRectangle (e.Item);  	//Rectangle bgRect = e.ImageRectangle;  	backgroundRectangle.Width = backgroundRectangle.Height;  	// Now' mirror its position if the menu item is RTL.  	if (e.Item.RightToLeft == RightToLeft.Yes)  		backgroundRectangle = new Rectangle (e.ToolStrip.ClientSize.Width - backgroundRectangle.X - backgroundRectangle.Width' backgroundRectangle.Y' backgroundRectangle.Width' backgroundRectangle.Height);  	bool isRendereringImageCheck = IsRenderingImageCheck (e.Item);  	// WORKAROUND: On Windows 8.1 (not sure about anywhere else)' the check background has the wrong   	// border' see #29' instead we just use the same border as the hover state of a menu item  	//_renderer.SetParameters(MenuClass' (int)MenuParts.PopupCheckBackground' e.Item.Enabled ? (isRendereringImageCheck ? (int)MenuPopupCheckBackgroundStates.Bitmap : (int)MenuPopupCheckBackgroundStates.Normal) : (int)MenuPopupCheckBackgroundStates.Disabled);  	_renderer.SetParameters (MenuClass' (int)MenuParts.PopupItem' e.Item.Enabled ? (int)MenuPopupItemStates.Hover : (int)MenuPopupItemStates.DisabledHover);  	_renderer.DrawBackground (e.Graphics' backgroundRectangle);  	if (!isRendereringImageCheck) {  		Rectangle checkRect = e.ImageRectangle;  		checkRect.X = backgroundRectangle.X + backgroundRectangle.Width / 2 - checkRect.Width / 2;  		checkRect.Y = backgroundRectangle.Y + backgroundRectangle.Height / 2 - checkRect.Height / 2;  		ToolStripMenuItem item = e.Item as ToolStripMenuItem;  		if (item != null && item.CheckState == CheckState.Indeterminate) {  			_renderer.SetParameters (MenuClass' (int)MenuParts.PopupCheck' e.Item.Enabled ? (int)MenuPopupCheckStates.BulletNormal : (int)MenuPopupCheckStates.BulletDisabled);  		} else {  			_renderer.SetParameters (MenuClass' (int)MenuParts.PopupCheck' e.Item.Enabled ? (int)MenuPopupCheckStates.CheckmarkNormal : (int)MenuPopupCheckStates.CheckmarkDisabled);  		}  		_renderer.DrawBackground (e.Graphics' checkRect);  	}  } else {  	base.OnRenderItemCheck (e);  }  
Magic Number,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderItemCheck,The following statement contains a magic number: if (!isRendereringImageCheck) {  	Rectangle checkRect = e.ImageRectangle;  	checkRect.X = backgroundRectangle.X + backgroundRectangle.Width / 2 - checkRect.Width / 2;  	checkRect.Y = backgroundRectangle.Y + backgroundRectangle.Height / 2 - checkRect.Height / 2;  	ToolStripMenuItem item = e.Item as ToolStripMenuItem;  	if (item != null && item.CheckState == CheckState.Indeterminate) {  		_renderer.SetParameters (MenuClass' (int)MenuParts.PopupCheck' e.Item.Enabled ? (int)MenuPopupCheckStates.BulletNormal : (int)MenuPopupCheckStates.BulletDisabled);  	} else {  		_renderer.SetParameters (MenuClass' (int)MenuParts.PopupCheck' e.Item.Enabled ? (int)MenuPopupCheckStates.CheckmarkNormal : (int)MenuPopupCheckStates.CheckmarkDisabled);  	}  	_renderer.DrawBackground (e.Graphics' checkRect);  }  
Magic Number,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderItemCheck,The following statement contains a magic number: if (!isRendereringImageCheck) {  	Rectangle checkRect = e.ImageRectangle;  	checkRect.X = backgroundRectangle.X + backgroundRectangle.Width / 2 - checkRect.Width / 2;  	checkRect.Y = backgroundRectangle.Y + backgroundRectangle.Height / 2 - checkRect.Height / 2;  	ToolStripMenuItem item = e.Item as ToolStripMenuItem;  	if (item != null && item.CheckState == CheckState.Indeterminate) {  		_renderer.SetParameters (MenuClass' (int)MenuParts.PopupCheck' e.Item.Enabled ? (int)MenuPopupCheckStates.BulletNormal : (int)MenuPopupCheckStates.BulletDisabled);  	} else {  		_renderer.SetParameters (MenuClass' (int)MenuParts.PopupCheck' e.Item.Enabled ? (int)MenuPopupCheckStates.CheckmarkNormal : (int)MenuPopupCheckStates.CheckmarkDisabled);  	}  	_renderer.DrawBackground (e.Graphics' checkRect);  }  
Magic Number,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderItemCheck,The following statement contains a magic number: if (!isRendereringImageCheck) {  	Rectangle checkRect = e.ImageRectangle;  	checkRect.X = backgroundRectangle.X + backgroundRectangle.Width / 2 - checkRect.Width / 2;  	checkRect.Y = backgroundRectangle.Y + backgroundRectangle.Height / 2 - checkRect.Height / 2;  	ToolStripMenuItem item = e.Item as ToolStripMenuItem;  	if (item != null && item.CheckState == CheckState.Indeterminate) {  		_renderer.SetParameters (MenuClass' (int)MenuParts.PopupCheck' e.Item.Enabled ? (int)MenuPopupCheckStates.BulletNormal : (int)MenuPopupCheckStates.BulletDisabled);  	} else {  		_renderer.SetParameters (MenuClass' (int)MenuParts.PopupCheck' e.Item.Enabled ? (int)MenuPopupCheckStates.CheckmarkNormal : (int)MenuPopupCheckStates.CheckmarkDisabled);  	}  	_renderer.DrawBackground (e.Graphics' checkRect);  }  
Magic Number,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderItemCheck,The following statement contains a magic number: if (!isRendereringImageCheck) {  	Rectangle checkRect = e.ImageRectangle;  	checkRect.X = backgroundRectangle.X + backgroundRectangle.Width / 2 - checkRect.Width / 2;  	checkRect.Y = backgroundRectangle.Y + backgroundRectangle.Height / 2 - checkRect.Height / 2;  	ToolStripMenuItem item = e.Item as ToolStripMenuItem;  	if (item != null && item.CheckState == CheckState.Indeterminate) {  		_renderer.SetParameters (MenuClass' (int)MenuParts.PopupCheck' e.Item.Enabled ? (int)MenuPopupCheckStates.BulletNormal : (int)MenuPopupCheckStates.BulletDisabled);  	} else {  		_renderer.SetParameters (MenuClass' (int)MenuParts.PopupCheck' e.Item.Enabled ? (int)MenuPopupCheckStates.CheckmarkNormal : (int)MenuPopupCheckStates.CheckmarkDisabled);  	}  	_renderer.DrawBackground (e.Graphics' checkRect);  }  
Magic Number,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderItemCheck,The following statement contains a magic number: checkRect.X = backgroundRectangle.X + backgroundRectangle.Width / 2 - checkRect.Width / 2;  
Magic Number,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderItemCheck,The following statement contains a magic number: checkRect.X = backgroundRectangle.X + backgroundRectangle.Width / 2 - checkRect.Width / 2;  
Magic Number,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderItemCheck,The following statement contains a magic number: checkRect.Y = backgroundRectangle.Y + backgroundRectangle.Height / 2 - checkRect.Height / 2;  
Magic Number,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderItemCheck,The following statement contains a magic number: checkRect.Y = backgroundRectangle.Y + backgroundRectangle.Height / 2 - checkRect.Height / 2;  
Magic Number,AudioSwitcher.Presentation.UI.Renderer,DeviceToolStripNativeRender,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\DeviceToolStripNativeRender.cs,OnRenderItemText,The following statement contains a magic number: if (text.Length != 3) {  	base.OnRenderItemText (e);  	return;  }  
Magic Number,AudioSwitcher.Presentation.UI.Renderer,DeviceToolStripNativeRender,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\DeviceToolStripNativeRender.cs,OnRenderItemText,The following statement contains a magic number: Debug.Assert (text.Length == 3);  
Magic Number,AudioSwitcher.Presentation.UI.Renderer,DeviceToolStripNativeRender,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\DeviceToolStripNativeRender.cs,OnRenderItemText,The following statement contains a magic number: TextRenderer.DrawText (e.Graphics' String.Concat (Environment.NewLine' text [1]' Environment.NewLine' text [2])' e.TextFont' e.TextRectangle' SystemColors.GrayText' e.TextFormat);  
Magic Number,AudioSwitcher.Presentation.Drawing,ResourceName,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\Presentation\Drawing\ResourceName.cs,ResourceName,The following statement contains a magic number: if (((uint)lpName >> 16) == 0)//Integer resource   {  	_id = lpName.ToInt32 ();  	_name = null;  } else {  	_id = null;  	_name = Marshal.PtrToStringAuto (lpName);  }  
Missing Default,AudioSwitcher.UI.ViewModels,AudioDeviceViewModel,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\UI\ViewModels\AudioDeviceViewModel.cs,CalculateIsVisible,The following switch statement is missing a default case: switch (Kind) {  case AudioDeviceKind.Playback:  	isVisible &= Settings.Default.ShowPlaybackDevices;  	break;  case AudioDeviceKind.Recording:  	isVisible &= Settings.Default.ShowRecordingDevices;  	break;  }  
Missing Default,AudioSwitcher.UI.ViewModels,AudioDeviceViewModel,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\UI\ViewModels\AudioDeviceViewModel.cs,GetDeviceStateFriendlyName,The following switch statement is missing a default case: switch (State) {  case AudioDeviceState.Active:  	return Resources.DeviceState_Active;  case AudioDeviceState.Disabled:  	return Resources.DeviceState_Disabled;  case AudioDeviceState.NotPresent:  	return Resources.DeviceState_NotPresent;  case AudioDeviceState.Unplugged:  	return Resources.DeviceState_Unplugged;  }  
Missing Default,AudioSwitcher.UI.ViewModels,AudioDeviceViewModel,F:\newReposMay17\davkean_audio-switcher\src\AudioSwitcher\UI\ViewModels\AudioDeviceViewModel.cs,GetOverlayImage,The following switch statement is missing a default case: switch (State) {  case AudioDeviceState.Disabled:  	return Resources.Disabled;  case AudioDeviceState.NotPresent:  	return Resources.NotPresent;  case AudioDeviceState.Unplugged:  	return Resources.Unplugged;  }  
