Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,AudioSwitcher.Presentation.Drawing.Interop,DllImports,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\Drawing\Interop\DllImports.cs,LookupIconIdFromDirectoryEx,The method has 5 parameters. Parameters: presbits' fIcon' cxDesired' cyDesired' Flags
Long Parameter List,AudioSwitcher.Presentation.UI.Interop,DllImports,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Interop\DllImports.cs,GetThemeMargins,The method has 7 parameters. Parameters: hTheme' hdc' iPartId' iStateId' iPropId' rect' pMargins
Long Identifier,AudioSwitcher.UI.Commands,CommandId,C:\repos\davkean_audio-switcher\src\AudioSwitcher\UI\Commands\CommandId.cs,,The length of the parameter AutomaticallySwitchToPluggedInDevice is 36.
Long Identifier,AudioSwitcher.UI.Commands,CommandId,C:\repos\davkean_audio-switcher\src\AudioSwitcher\UI\Commands\CommandId.cs,,The length of the parameter SetAsDefaultCommunicationDevice is 31.
Long Identifier,AudioSwitcher.Audio,PropertyKeys,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Audio\Interop\MMAudio\PropertyKeys.cs,,The length of the parameter PKEY_DeviceInterface_FriendlyName is 33.
Long Identifier,AudioSwitcher.Audio,PropertyKeys,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Audio\Interop\MMAudio\PropertyKeys.cs,,The length of the parameter PKEY_AudioEndpoint_ControlPanelPageProvider is 43.
Long Identifier,AudioSwitcher.Audio,PropertyKeys,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Audio\Interop\MMAudio\PropertyKeys.cs,,The length of the parameter PKEY_AudioEndpoint_Association is 30.
Long Identifier,AudioSwitcher.Audio,PropertyKeys,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Audio\Interop\MMAudio\PropertyKeys.cs,,The length of the parameter PKEY_AudioEndpoint_PhysicalSpeakers is 35.
Long Identifier,AudioSwitcher.Audio,PropertyKeys,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Audio\Interop\MMAudio\PropertyKeys.cs,,The length of the parameter PKEY_AudioEndpoint_Disable_SysFx is 32.
Long Identifier,AudioSwitcher.Audio,PropertyKeys,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Audio\Interop\MMAudio\PropertyKeys.cs,,The length of the parameter PKEY_AudioEndpoint_FullRangeSpeakers is 36.
Long Identifier,AudioSwitcher.Audio,PropertyKeys,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Audio\Interop\MMAudio\PropertyKeys.cs,,The length of the parameter PKEY_AudioEndpoint_Supports_EventDriven_Mode is 44.
Long Identifier,AudioSwitcher.Audio,PropertyKeys,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Audio\Interop\MMAudio\PropertyKeys.cs,,The length of the parameter PKEY_AudioEndpoint_JackSubType is 30.
Long Statement,AudioSwitcher.Audio.Interop,PropVariant,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Audio\Interop\MMAudio\PropVariant.cs,GetBlobAsArrayOf,The length of the statement  "                throw new InvalidDataException(String.Format("Blob size {0} not a multiple of struct size {1}"' blobByteLength' structSize)); " is 125.
Long Statement,AudioSwitcher.Presentation.UI,AudioContextMenuStrip,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\AudioContextMenuStrip.cs,ShowInSystemTray,The length of the statement  "                MethodInfo info = typeof(AudioContextMenuStrip).GetMethod("ShowInTaskbar"' BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance' null' new Type[] { typeof(int)' typeof(int) }' null); " is 198.
Long Statement,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderSplitButtonBackground,The length of the statement  "                OnRenderArrow(new ToolStripArrowRenderEventArgs(e.Graphics' sb' sb.DropDownButtonBounds' Color.Red' ArrowDirection.Down)); " is 122.
Long Statement,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderImageMargin,The length of the statement  "                    int extraWidth = (e.ToolStrip.Width - e.ToolStrip.DisplayRectangle.Width - margins.Left - margins.Right - 1) - e.AffectedBounds.Width; " is 134.
Long Statement,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderSeparator,The length of the statement  "                Rectangle rect = new Rectangle(e.ToolStrip.DisplayRectangle.Left - 4' 0' e.ToolStrip.DisplayRectangle.Width + 4' e.Item.Height); " is 128.
Long Statement,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderItemCheck,The length of the statement  "                    backgroundRectangle = new Rectangle(e.ToolStrip.ClientSize.Width - backgroundRectangle.X - backgroundRectangle.Width' backgroundRectangle.Y' backgroundRectangle.Width' backgroundRectangle.Height); " is 196.
Long Statement,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderItemCheck,The length of the statement  "                //_renderer.SetParameters(MenuClass' (int)MenuParts.PopupCheckBackground' e.Item.Enabled ? (isRendereringImageCheck ? (int)MenuPopupCheckBackgroundStates.Bitmap : (int)MenuPopupCheckBackgroundStates.Normal) : (int)MenuPopupCheckBackgroundStates.Disabled); " is 255.
Long Statement,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderItemCheck,The length of the statement  "                _renderer.SetParameters(MenuClass' (int)MenuParts.PopupItem' e.Item.Enabled ? (int)MenuPopupItemStates.Hover : (int)MenuPopupItemStates.DisabledHover); " is 151.
Long Statement,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderItemCheck,The length of the statement  "                        _renderer.SetParameters(MenuClass' (int)MenuParts.PopupCheck' e.Item.Enabled ? (int)MenuPopupCheckStates.BulletNormal : (int)MenuPopupCheckStates.BulletDisabled); " is 162.
Long Statement,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderItemCheck,The length of the statement  "                        _renderer.SetParameters(MenuClass' (int)MenuParts.PopupCheck' e.Item.Enabled ? (int)MenuPopupCheckStates.CheckmarkNormal : (int)MenuPopupCheckStates.CheckmarkDisabled); " is 168.
Long Statement,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,GetThemeMargins,The length of the statement  "                if (DllImports.GetThemeMargins(_renderer.Handle' hDC' _renderer.Part' _renderer.State' (int)marginType' IntPtr.Zero' out margins) == 0) " is 135.
Long Statement,AudioSwitcher.Presentation.UI.Renderer,DeviceToolStripNativeRender,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\DeviceToolStripNativeRender.cs,OnRenderItemText,The length of the statement  "			base.OnRenderItemText(new ToolStripItemTextRenderEventArgs(e.Graphics' e.Item' String.Concat(text[0]' Environment.NewLine' Environment.NewLine)' e.TextRectangle' e.TextColor' e.TextFont' e.TextFormat)); " is 202.
Long Statement,AudioSwitcher.Presentation.UI.Renderer,DeviceToolStripNativeRender,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\DeviceToolStripNativeRender.cs,OnRenderItemText,The length of the statement  "			TextRenderer.DrawText(e.Graphics' String.Concat(Environment.NewLine' text[1]' Environment.NewLine' text[2])' e.TextFont' e.TextRectangle' SystemColors.GrayText' e.TextFormat); " is 175.
Long Statement,AudioSwitcher.Presentation.Drawing,DrawingServices,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\Drawing\DrawingServices.cs,CreateOverlayedImage,The length of the statement  "                g.DrawImage(overlayImage' size.Width - overlayImage.Width' size.Height - overlayImage.Height' overlayImage.Width' overlayImage.Height); " is 135.
Long Statement,AudioSwitcher.Presentation.Drawing,IconExtractor,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\Drawing\IconExtractor.cs,GetIconByIndex,The length of the statement  "                    throw new ArgumentOutOfRangeException("index"' index' "Index should be in the range (0-" + IconNames.Count.ToString() + ")."); " is 126.
Long Statement,AudioSwitcher.Presentation.Drawing,IconExtractor,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\Drawing\IconExtractor.cs,Open,The length of the statement  "            SafeModuleHandle moduleHandle = DllImports.LoadLibraryEx(fileName' IntPtr.Zero' LoadLibraryExFlags.LOAD_LIBRARY_AS_DATAFILE); " is 125.
Long Statement,AudioSwitcher.Presentation.Drawing,IconInfo,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\Drawing\IconInfo.cs,GetBestFitIconIndex,The length of the statement  "            try { iconIndex = DllImports.LookupIconIdFromDirectoryEx(resBits' true' desiredSize.Width' desiredSize.Height' flags); } " is 120.
Long Statement,AudioSwitcher.Presentation.UI.Views,DeviceFlyoutView,C:\repos\davkean_audio-switcher\src\AudioSwitcher\UI\Views\DeviceFlyoutView.cs,GetPreferredSize,The length of the statement  "            return new Size(proposedSize.Width + (Size.Width - ClientSize.Width)' proposedSize.Height + (Size.Height - ClientSize.Height)); " is 127.
Virtual Method Call from Constructor,AudioSwitcher.Presentation,ContextMenuPresenter,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\ContextMenuPresenter.cs,ContextMenuPresenter,The constructor "ContextMenuPresenter" calls a virtual method "CreateContextMenu".
Virtual Method Call from Constructor,AudioSwitcher.Presentation,ContextMenuPresenter,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\ContextMenuPresenter.cs,ContextMenuPresenter,The constructor "ContextMenuPresenter" calls a virtual method "OnClosed".
Empty Catch Block,AudioSwitcher.Presentation.Drawing,ShellIcon,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\Drawing\ShellIcon.cs,TryExtractIconByIdOrIndex,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Presentation.Drawing,ShellIcon,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\Drawing\ShellIcon.cs,TryExtractIconByIdOrIndex,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Presentation.Drawing,ShellIcon,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\Drawing\ShellIcon.cs,TryExtractIconByIdOrIndex,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Presentation.Drawing,ShellIcon,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\Drawing\ShellIcon.cs,TryExtractIconByIdOrIndex,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Presentation.Drawing,ShellIcon,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\Drawing\ShellIcon.cs,TryExtractIconFromIco,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Presentation.Drawing,ShellIcon,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\Drawing\ShellIcon.cs,TryExtractIconFromIco,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Win32,RegistryKeyExtensions,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Win32\RegistryKeyExtensions.cs,TryOpenSubkey,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Win32,RegistryKeyExtensions,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Win32\RegistryKeyExtensions.cs,TryOpenSubkey,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Win32,RegistryKeyExtensions,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Win32\RegistryKeyExtensions.cs,TryOpenSubkey,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Win32,RegistryKeyExtensions,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Win32\RegistryKeyExtensions.cs,TryGetValue,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Win32,RegistryKeyExtensions,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Win32\RegistryKeyExtensions.cs,TryGetValue,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Win32,RegistryKeyExtensions,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Win32\RegistryKeyExtensions.cs,TryGetValue,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Win32,RegistryKeyExtensions,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Win32\RegistryKeyExtensions.cs,TryDeleteValue,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Win32,RegistryKeyExtensions,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Win32\RegistryKeyExtensions.cs,TryDeleteValue,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Win32,RegistryKeyExtensions,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Win32\RegistryKeyExtensions.cs,TryDeleteValue,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Win32,RegistryKeyExtensions,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Win32\RegistryKeyExtensions.cs,TrySetValue,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Win32,RegistryKeyExtensions,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Win32\RegistryKeyExtensions.cs,TrySetValue,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.Win32,RegistryKeyExtensions,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Win32\RegistryKeyExtensions.cs,TrySetValue,The method has an empty catch block.
Magic Number,AudioSwitcher.Presentation.UI,DpiServices,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\DpiServices.cs,CalculateScalingFactor,The following statement contains a magic number: const int LOGPIXELSX = 88;
Magic Number,AudioSwitcher.Presentation.UI,DpiServices,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\DpiServices.cs,CalculateScalingFactor,The following statement contains a magic number: const int LOGPIXELSY = 90;
Magic Number,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderImageMargin,The following statement contains a magic number: if (EnsureRenderer())              {                  if (e.ToolStrip.IsDropDown)                  {                      _renderer.SetParameters(MenuClass' (int)MenuParts.PopupGutter' 0);                        // The AffectedBounds is usually too small' way too small to look right. Instead of using that'                      // use the AffectedBounds but with the right width. Then narrow the rectangle to the correct edge                      // based on whether or not it's RTL. (It doesn't need to be narrowed to an edge in LTR mode' but let's                      // do that anyway.)                      // Using the DisplayRectangle gets roughly the right size so that the separator is closer to the text.                        Padding margins = GetThemeMargins(e.Graphics' MarginTypes.Sizing);                      int extraWidth = (e.ToolStrip.Width - e.ToolStrip.DisplayRectangle.Width - margins.Left - margins.Right - 1) - e.AffectedBounds.Width;                      Rectangle rect = e.AffectedBounds;                      rect.Y += 2;                      rect.Height -= 4;                      int sepWidth = _renderer.GetPartSize(e.Graphics' ThemeSizeType.True).Width;                        if (e.ToolStrip.RightToLeft == RightToLeft.Yes)                      {                          rect = new Rectangle(rect.X - extraWidth' rect.Y' sepWidth' rect.Height);                          rect.X += sepWidth;                      }                      else                      {                          rect = new Rectangle(rect.Width + extraWidth - sepWidth' rect.Y' sepWidth' rect.Height);                      }                        _renderer.DrawBackground(e.Graphics' rect);                  }              }              else              {                  base.OnRenderImageMargin(e);              }
Magic Number,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderImageMargin,The following statement contains a magic number: if (EnsureRenderer())              {                  if (e.ToolStrip.IsDropDown)                  {                      _renderer.SetParameters(MenuClass' (int)MenuParts.PopupGutter' 0);                        // The AffectedBounds is usually too small' way too small to look right. Instead of using that'                      // use the AffectedBounds but with the right width. Then narrow the rectangle to the correct edge                      // based on whether or not it's RTL. (It doesn't need to be narrowed to an edge in LTR mode' but let's                      // do that anyway.)                      // Using the DisplayRectangle gets roughly the right size so that the separator is closer to the text.                        Padding margins = GetThemeMargins(e.Graphics' MarginTypes.Sizing);                      int extraWidth = (e.ToolStrip.Width - e.ToolStrip.DisplayRectangle.Width - margins.Left - margins.Right - 1) - e.AffectedBounds.Width;                      Rectangle rect = e.AffectedBounds;                      rect.Y += 2;                      rect.Height -= 4;                      int sepWidth = _renderer.GetPartSize(e.Graphics' ThemeSizeType.True).Width;                        if (e.ToolStrip.RightToLeft == RightToLeft.Yes)                      {                          rect = new Rectangle(rect.X - extraWidth' rect.Y' sepWidth' rect.Height);                          rect.X += sepWidth;                      }                      else                      {                          rect = new Rectangle(rect.Width + extraWidth - sepWidth' rect.Y' sepWidth' rect.Height);                      }                        _renderer.DrawBackground(e.Graphics' rect);                  }              }              else              {                  base.OnRenderImageMargin(e);              }
Magic Number,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderSeparator,The following statement contains a magic number: if (e.ToolStrip.IsDropDown && EnsureRenderer())              {                  _renderer.SetParameters(MenuClass' (int)MenuParts.PopupSeparator' 0);                    Rectangle rect = new Rectangle(e.ToolStrip.DisplayRectangle.Left - 4' 0' e.ToolStrip.DisplayRectangle.Width + 4' e.Item.Height);                    _renderer.DrawBackground(e.Graphics' rect' rect);              }              else              {                  base.OnRenderSeparator(e);              }
Magic Number,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderSeparator,The following statement contains a magic number: if (e.ToolStrip.IsDropDown && EnsureRenderer())              {                  _renderer.SetParameters(MenuClass' (int)MenuParts.PopupSeparator' 0);                    Rectangle rect = new Rectangle(e.ToolStrip.DisplayRectangle.Left - 4' 0' e.ToolStrip.DisplayRectangle.Width + 4' e.Item.Height);                    _renderer.DrawBackground(e.Graphics' rect' rect);              }              else              {                  base.OnRenderSeparator(e);              }
Magic Number,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderItemCheck,The following statement contains a magic number: if (EnsureRenderer())              {                  Rectangle backgroundRectangle = GetBackgroundRectangle(e.Item);                  //Rectangle bgRect = e.ImageRectangle;                  backgroundRectangle.Width = backgroundRectangle.Height;                    // Now' mirror its position if the menu item is RTL.                  if (e.Item.RightToLeft == RightToLeft.Yes)                      backgroundRectangle = new Rectangle(e.ToolStrip.ClientSize.Width - backgroundRectangle.X - backgroundRectangle.Width' backgroundRectangle.Y' backgroundRectangle.Width' backgroundRectangle.Height);                    bool isRendereringImageCheck = IsRenderingImageCheck(e.Item);                    // WORKAROUND: On Windows 8.1 (not sure about anywhere else)' the check background has the wrong                   // border' see #29' instead we just use the same border as the hover state of a menu item                  //_renderer.SetParameters(MenuClass' (int)MenuParts.PopupCheckBackground' e.Item.Enabled ? (isRendereringImageCheck ? (int)MenuPopupCheckBackgroundStates.Bitmap : (int)MenuPopupCheckBackgroundStates.Normal) : (int)MenuPopupCheckBackgroundStates.Disabled);                    _renderer.SetParameters(MenuClass' (int)MenuParts.PopupItem' e.Item.Enabled ? (int)MenuPopupItemStates.Hover : (int)MenuPopupItemStates.DisabledHover);                  _renderer.DrawBackground(e.Graphics' backgroundRectangle);                    if (!isRendereringImageCheck)                  {                      Rectangle checkRect = e.ImageRectangle;                      checkRect.X = backgroundRectangle.X + backgroundRectangle.Width / 2 - checkRect.Width / 2;                      checkRect.Y = backgroundRectangle.Y + backgroundRectangle.Height / 2 - checkRect.Height / 2;                          ToolStripMenuItem item = e.Item as ToolStripMenuItem;                      if (item != null && item.CheckState == CheckState.Indeterminate)                      {                          _renderer.SetParameters(MenuClass' (int)MenuParts.PopupCheck' e.Item.Enabled ? (int)MenuPopupCheckStates.BulletNormal : (int)MenuPopupCheckStates.BulletDisabled);                      }                      else                      {                          _renderer.SetParameters(MenuClass' (int)MenuParts.PopupCheck' e.Item.Enabled ? (int)MenuPopupCheckStates.CheckmarkNormal : (int)MenuPopupCheckStates.CheckmarkDisabled);                      }                        _renderer.DrawBackground(e.Graphics' checkRect);                  }              }              else              {                  base.OnRenderItemCheck(e);              }
Magic Number,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderItemCheck,The following statement contains a magic number: if (EnsureRenderer())              {                  Rectangle backgroundRectangle = GetBackgroundRectangle(e.Item);                  //Rectangle bgRect = e.ImageRectangle;                  backgroundRectangle.Width = backgroundRectangle.Height;                    // Now' mirror its position if the menu item is RTL.                  if (e.Item.RightToLeft == RightToLeft.Yes)                      backgroundRectangle = new Rectangle(e.ToolStrip.ClientSize.Width - backgroundRectangle.X - backgroundRectangle.Width' backgroundRectangle.Y' backgroundRectangle.Width' backgroundRectangle.Height);                    bool isRendereringImageCheck = IsRenderingImageCheck(e.Item);                    // WORKAROUND: On Windows 8.1 (not sure about anywhere else)' the check background has the wrong                   // border' see #29' instead we just use the same border as the hover state of a menu item                  //_renderer.SetParameters(MenuClass' (int)MenuParts.PopupCheckBackground' e.Item.Enabled ? (isRendereringImageCheck ? (int)MenuPopupCheckBackgroundStates.Bitmap : (int)MenuPopupCheckBackgroundStates.Normal) : (int)MenuPopupCheckBackgroundStates.Disabled);                    _renderer.SetParameters(MenuClass' (int)MenuParts.PopupItem' e.Item.Enabled ? (int)MenuPopupItemStates.Hover : (int)MenuPopupItemStates.DisabledHover);                  _renderer.DrawBackground(e.Graphics' backgroundRectangle);                    if (!isRendereringImageCheck)                  {                      Rectangle checkRect = e.ImageRectangle;                      checkRect.X = backgroundRectangle.X + backgroundRectangle.Width / 2 - checkRect.Width / 2;                      checkRect.Y = backgroundRectangle.Y + backgroundRectangle.Height / 2 - checkRect.Height / 2;                          ToolStripMenuItem item = e.Item as ToolStripMenuItem;                      if (item != null && item.CheckState == CheckState.Indeterminate)                      {                          _renderer.SetParameters(MenuClass' (int)MenuParts.PopupCheck' e.Item.Enabled ? (int)MenuPopupCheckStates.BulletNormal : (int)MenuPopupCheckStates.BulletDisabled);                      }                      else                      {                          _renderer.SetParameters(MenuClass' (int)MenuParts.PopupCheck' e.Item.Enabled ? (int)MenuPopupCheckStates.CheckmarkNormal : (int)MenuPopupCheckStates.CheckmarkDisabled);                      }                        _renderer.DrawBackground(e.Graphics' checkRect);                  }              }              else              {                  base.OnRenderItemCheck(e);              }
Magic Number,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderItemCheck,The following statement contains a magic number: if (EnsureRenderer())              {                  Rectangle backgroundRectangle = GetBackgroundRectangle(e.Item);                  //Rectangle bgRect = e.ImageRectangle;                  backgroundRectangle.Width = backgroundRectangle.Height;                    // Now' mirror its position if the menu item is RTL.                  if (e.Item.RightToLeft == RightToLeft.Yes)                      backgroundRectangle = new Rectangle(e.ToolStrip.ClientSize.Width - backgroundRectangle.X - backgroundRectangle.Width' backgroundRectangle.Y' backgroundRectangle.Width' backgroundRectangle.Height);                    bool isRendereringImageCheck = IsRenderingImageCheck(e.Item);                    // WORKAROUND: On Windows 8.1 (not sure about anywhere else)' the check background has the wrong                   // border' see #29' instead we just use the same border as the hover state of a menu item                  //_renderer.SetParameters(MenuClass' (int)MenuParts.PopupCheckBackground' e.Item.Enabled ? (isRendereringImageCheck ? (int)MenuPopupCheckBackgroundStates.Bitmap : (int)MenuPopupCheckBackgroundStates.Normal) : (int)MenuPopupCheckBackgroundStates.Disabled);                    _renderer.SetParameters(MenuClass' (int)MenuParts.PopupItem' e.Item.Enabled ? (int)MenuPopupItemStates.Hover : (int)MenuPopupItemStates.DisabledHover);                  _renderer.DrawBackground(e.Graphics' backgroundRectangle);                    if (!isRendereringImageCheck)                  {                      Rectangle checkRect = e.ImageRectangle;                      checkRect.X = backgroundRectangle.X + backgroundRectangle.Width / 2 - checkRect.Width / 2;                      checkRect.Y = backgroundRectangle.Y + backgroundRectangle.Height / 2 - checkRect.Height / 2;                          ToolStripMenuItem item = e.Item as ToolStripMenuItem;                      if (item != null && item.CheckState == CheckState.Indeterminate)                      {                          _renderer.SetParameters(MenuClass' (int)MenuParts.PopupCheck' e.Item.Enabled ? (int)MenuPopupCheckStates.BulletNormal : (int)MenuPopupCheckStates.BulletDisabled);                      }                      else                      {                          _renderer.SetParameters(MenuClass' (int)MenuParts.PopupCheck' e.Item.Enabled ? (int)MenuPopupCheckStates.CheckmarkNormal : (int)MenuPopupCheckStates.CheckmarkDisabled);                      }                        _renderer.DrawBackground(e.Graphics' checkRect);                  }              }              else              {                  base.OnRenderItemCheck(e);              }
Magic Number,AudioSwitcher.Presentation.UI,ToolStripNativeRenderer,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\ToolStripNativeRenderer.cs,OnRenderItemCheck,The following statement contains a magic number: if (EnsureRenderer())              {                  Rectangle backgroundRectangle = GetBackgroundRectangle(e.Item);                  //Rectangle bgRect = e.ImageRectangle;                  backgroundRectangle.Width = backgroundRectangle.Height;                    // Now' mirror its position if the menu item is RTL.                  if (e.Item.RightToLeft == RightToLeft.Yes)                      backgroundRectangle = new Rectangle(e.ToolStrip.ClientSize.Width - backgroundRectangle.X - backgroundRectangle.Width' backgroundRectangle.Y' backgroundRectangle.Width' backgroundRectangle.Height);                    bool isRendereringImageCheck = IsRenderingImageCheck(e.Item);                    // WORKAROUND: On Windows 8.1 (not sure about anywhere else)' the check background has the wrong                   // border' see #29' instead we just use the same border as the hover state of a menu item                  //_renderer.SetParameters(MenuClass' (int)MenuParts.PopupCheckBackground' e.Item.Enabled ? (isRendereringImageCheck ? (int)MenuPopupCheckBackgroundStates.Bitmap : (int)MenuPopupCheckBackgroundStates.Normal) : (int)MenuPopupCheckBackgroundStates.Disabled);                    _renderer.SetParameters(MenuClass' (int)MenuParts.PopupItem' e.Item.Enabled ? (int)MenuPopupItemStates.Hover : (int)MenuPopupItemStates.DisabledHover);                  _renderer.DrawBackground(e.Graphics' backgroundRectangle);                    if (!isRendereringImageCheck)                  {                      Rectangle checkRect = e.ImageRectangle;                      checkRect.X = backgroundRectangle.X + backgroundRectangle.Width / 2 - checkRect.Width / 2;                      checkRect.Y = backgroundRectangle.Y + backgroundRectangle.Height / 2 - checkRect.Height / 2;                          ToolStripMenuItem item = e.Item as ToolStripMenuItem;                      if (item != null && item.CheckState == CheckState.Indeterminate)                      {                          _renderer.SetParameters(MenuClass' (int)MenuParts.PopupCheck' e.Item.Enabled ? (int)MenuPopupCheckStates.BulletNormal : (int)MenuPopupCheckStates.BulletDisabled);                      }                      else                      {                          _renderer.SetParameters(MenuClass' (int)MenuParts.PopupCheck' e.Item.Enabled ? (int)MenuPopupCheckStates.CheckmarkNormal : (int)MenuPopupCheckStates.CheckmarkDisabled);                      }                        _renderer.DrawBackground(e.Graphics' checkRect);                  }              }              else              {                  base.OnRenderItemCheck(e);              }
Magic Number,AudioSwitcher.Presentation.UI.Renderer,DeviceToolStripNativeRender,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\DeviceToolStripNativeRender.cs,OnRenderItemText,The following statement contains a magic number: string[] text = e.Text.Split(NewLine' 3' StringSplitOptions.None);
Magic Number,AudioSwitcher.Presentation.UI.Renderer,DeviceToolStripNativeRender,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\DeviceToolStripNativeRender.cs,OnRenderItemText,The following statement contains a magic number: if (text.Length != 3)              {                  base.OnRenderItemText(e);                  return;              }
Magic Number,AudioSwitcher.Presentation.UI.Renderer,DeviceToolStripNativeRender,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\DeviceToolStripNativeRender.cs,OnRenderItemText,The following statement contains a magic number: Debug.Assert(text.Length == 3);
Magic Number,AudioSwitcher.Presentation.UI.Renderer,DeviceToolStripNativeRender,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\UI\Renderer\DeviceToolStripNativeRender.cs,OnRenderItemText,The following statement contains a magic number: TextRenderer.DrawText(e.Graphics' String.Concat(Environment.NewLine' text[1]' Environment.NewLine' text[2])' e.TextFont' e.TextRectangle' SystemColors.GrayText' e.TextFormat);
Magic Number,AudioSwitcher.Presentation.Drawing,ResourceName,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\Drawing\ResourceName.cs,ResourceName,The following statement contains a magic number: if (((uint)lpName >> 16) == 0)  //Integer resource              {                  _id = lpName.ToInt32();                  _name = null;              }              else              {                  _id = null;                  _name = Marshal.PtrToStringAuto(lpName);              }
Magic Number,AudioSwitcher.Presentation.Drawing,ShellIcon,C:\repos\davkean_audio-switcher\src\AudioSwitcher\Presentation\Drawing\ShellIcon.cs,ExtractIconByIdOrIndex,The following statement contains a magic number: string[] parts = fileNameAndIdOrIndex.Split(new char[] { ''' }' 2);
Missing Default,AudioSwitcher.UI.ViewModels,AudioDeviceViewModel,C:\repos\davkean_audio-switcher\src\AudioSwitcher\UI\ViewModels\AudioDeviceViewModel.cs,CalculateIsVisible,The following switch statement is missing a default case: switch (Kind)              {                  case AudioDeviceKind.Playback:                      isVisible &= Settings.Default.ShowPlaybackDevices;                      break;                    case AudioDeviceKind.Recording:                      isVisible &= Settings.Default.ShowRecordingDevices;                      break;              }
Missing Default,AudioSwitcher.UI.ViewModels,AudioDeviceViewModel,C:\repos\davkean_audio-switcher\src\AudioSwitcher\UI\ViewModels\AudioDeviceViewModel.cs,GetDeviceStateFriendlyName,The following switch statement is missing a default case: switch (State)              {                  case AudioDeviceState.Active:                      return Resources.DeviceState_Active;                    case AudioDeviceState.Disabled:                      return Resources.DeviceState_Disabled;                    case AudioDeviceState.NotPresent:                      return Resources.DeviceState_NotPresent;                    case AudioDeviceState.Unplugged:                      return Resources.DeviceState_Unplugged;              }
Missing Default,AudioSwitcher.UI.ViewModels,AudioDeviceViewModel,C:\repos\davkean_audio-switcher\src\AudioSwitcher\UI\ViewModels\AudioDeviceViewModel.cs,GetOverlayImage,The following switch statement is missing a default case: switch (State)              {                  case AudioDeviceState.Disabled:                      return Resources.Disabled;                    case AudioDeviceState.NotPresent:                      return Resources.NotPresent;                    case AudioDeviceState.Unplugged:                      return Resources.Unplugged;              }
