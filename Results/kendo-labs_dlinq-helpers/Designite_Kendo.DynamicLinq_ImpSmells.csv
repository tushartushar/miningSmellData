Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Kendo.DynamicLinq,QueryableExtensions,D:\research\architectureSmells\repos\kendo-labs_dlinq-helpers\Kendo.DynamicLinq\QueryableExtensions.cs,ToDataSourceResult,The method has 6 parameters. Parameters: queryable' take' skip' sort' filter' aggregates
Long Parameter List,Kendo.DynamicLinq,QueryableExtensions,D:\research\architectureSmells\repos\kendo-labs_dlinq-helpers\Kendo.DynamicLinq\QueryableExtensions.cs,ToDataSourceResult,The method has 5 parameters. Parameters: queryable' take' skip' sort' filter
Long Statement,Kendo.DynamicLinq,Aggregator,D:\research\architectureSmells\repos\kendo-labs_dlinq-helpers\Kendo.DynamicLinq\Aggregate.cs,MethodInfo,The length of the statement  "					return GetMethod(CultureInfo.InvariantCulture.TextInfo.ToTitleCase(Aggregate)' MinMaxFunc().Method' 2).MakeGenericMethod(type' proptype); " is 137.
Long Statement,Kendo.DynamicLinq,Aggregator,D:\research\architectureSmells\repos\kendo-labs_dlinq-helpers\Kendo.DynamicLinq\Aggregate.cs,MethodInfo,The length of the statement  "						Nullable.GetUnderlyingType(proptype) != null ? CountNullableFunc().Method : CountFunc().Method' 1).MakeGenericMethod(type); " is 123.
Long Statement,Kendo.DynamicLinq,QueryableExtensions,D:\research\architectureSmells\repos\kendo-labs_dlinq-helpers\Kendo.DynamicLinq\QueryableExtensions.cs,Aggregate,The length of the statement  "							? Expression.Lambda(Expression.NotEqual(Expression.MakeMemberAccess(param' prop)' Expression.Constant(null' prop.PropertyType))' param) " is 135.
Magic Number,Kendo.DynamicLinq,Aggregator,D:\research\architectureSmells\repos\kendo-labs_dlinq-helpers\Kendo.DynamicLinq\Aggregate.cs,MethodInfo,The following statement contains a magic number: switch (Aggregate)  			{  				case "max":  				case "min":  					return GetMethod(CultureInfo.InvariantCulture.TextInfo.ToTitleCase(Aggregate)' MinMaxFunc().Method' 2).MakeGenericMethod(type' proptype);  				case "average":  				case "sum":  					return GetMethod(CultureInfo.InvariantCulture.TextInfo.ToTitleCase(Aggregate)'   						((Func<Type' Type[]>)this.GetType().GetMethod("SumAvgFunc"' BindingFlags.Static | BindingFlags.NonPublic)  						.MakeGenericMethod(proptype).Invoke(null' null)).Method' 1).MakeGenericMethod(type);  				case "count":  					return GetMethod(CultureInfo.InvariantCulture.TextInfo.ToTitleCase(Aggregate)'  						Nullable.GetUnderlyingType(proptype) != null ? CountNullableFunc().Method : CountFunc().Method' 1).MakeGenericMethod(type);  			}
Missing Default,Kendo.DynamicLinq,Aggregator,D:\research\architectureSmells\repos\kendo-labs_dlinq-helpers\Kendo.DynamicLinq\Aggregate.cs,MethodInfo,The following switch statement is missing a default case: switch (Aggregate)  			{  				case "max":  				case "min":  					return GetMethod(CultureInfo.InvariantCulture.TextInfo.ToTitleCase(Aggregate)' MinMaxFunc().Method' 2).MakeGenericMethod(type' proptype);  				case "average":  				case "sum":  					return GetMethod(CultureInfo.InvariantCulture.TextInfo.ToTitleCase(Aggregate)'   						((Func<Type' Type[]>)this.GetType().GetMethod("SumAvgFunc"' BindingFlags.Static | BindingFlags.NonPublic)  						.MakeGenericMethod(proptype).Invoke(null' null)).Method' 1).MakeGenericMethod(type);  				case "count":  					return GetMethod(CultureInfo.InvariantCulture.TextInfo.ToTitleCase(Aggregate)'  						Nullable.GetUnderlyingType(proptype) != null ? CountNullableFunc().Method : CountFunc().Method' 1).MakeGenericMethod(type);  			}
