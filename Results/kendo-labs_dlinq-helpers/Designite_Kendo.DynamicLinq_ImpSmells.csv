Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Kendo.DynamicLinq,QueryableExtensions,D:\newReposJune17\kendo-labs_dlinq-helpers\Kendo.DynamicLinq\QueryableExtensions.cs,Aggregate,Cyclomatic complexity of the method is 8
Long Parameter List,Kendo.DynamicLinq,QueryableExtensions,D:\newReposJune17\kendo-labs_dlinq-helpers\Kendo.DynamicLinq\QueryableExtensions.cs,ToDataSourceResult,The method has 6 parameters.
Long Parameter List,Kendo.DynamicLinq,QueryableExtensions,D:\newReposJune17\kendo-labs_dlinq-helpers\Kendo.DynamicLinq\QueryableExtensions.cs,ToDataSourceResult,The method has 5 parameters.
Long Statement,Kendo.DynamicLinq,Aggregator,D:\newReposJune17\kendo-labs_dlinq-helpers\Kendo.DynamicLinq\Aggregate.cs,MethodInfo,The length of the statement  "		return GetMethod (CultureInfo.InvariantCulture.TextInfo.ToTitleCase (Aggregate)' MinMaxFunc ().Method' 2).MakeGenericMethod (type' proptype); " is 141.
Long Statement,Kendo.DynamicLinq,Aggregator,D:\newReposJune17\kendo-labs_dlinq-helpers\Kendo.DynamicLinq\Aggregate.cs,MethodInfo,The length of the statement  "		return GetMethod (CultureInfo.InvariantCulture.TextInfo.ToTitleCase (Aggregate)' ((Func<Type' Type[]>)this.GetType ().GetMethod ("SumAvgFunc"' BindingFlags.Static | BindingFlags.NonPublic).MakeGenericMethod (proptype).Invoke (null' null)).Method' 1).MakeGenericMethod (type); " is 275.
Long Statement,Kendo.DynamicLinq,Aggregator,D:\newReposJune17\kendo-labs_dlinq-helpers\Kendo.DynamicLinq\Aggregate.cs,MethodInfo,The length of the statement  "		return GetMethod (CultureInfo.InvariantCulture.TextInfo.ToTitleCase (Aggregate)' Nullable.GetUnderlyingType (proptype) != null ? CountNullableFunc ().Method : CountFunc ().Method' 1).MakeGenericMethod (type); " is 208.
Long Statement,Kendo.DynamicLinq,Aggregator,D:\newReposJune17\kendo-labs_dlinq-helpers\Kendo.DynamicLinq\Aggregate.cs,GetMethod,The length of the statement  "	where method.Name == methodName && genericArguments.Length == genericArgumentsCount && parameters.Select (p => p.ParameterType).SequenceEqual ((Type[])methodTypes.Invoke (null' genericArguments)) " is 195.
Long Statement,Kendo.DynamicLinq,Filter,D:\newReposJune17\kendo-labs_dlinq-helpers\Kendo.DynamicLinq\Filter.cs,ToExpression,The length of the statement  "		return "(" + String.Join (" " + Logic + " "' Filters.Select (filter => filter.ToExpression (filters)).ToArray ()) + ")"; " is 120.
Long Statement,Kendo.DynamicLinq,QueryableExtensions,D:\newReposJune17\kendo-labs_dlinq-helpers\Kendo.DynamicLinq\QueryableExtensions.cs,Aggregate,The length of the statement  "				var selector = aggregate.Aggregate == "count" && (Nullable.GetUnderlyingType (prop.PropertyType) != null) ? Expression.Lambda (Expression.NotEqual (Expression.MakeMemberAccess (param' prop)' Expression.Constant (null' prop.PropertyType))' param) : Expression.Lambda (Expression.MakeMemberAccess (param' prop)' param); " is 317.
Long Statement,Kendo.DynamicLinq,QueryableExtensions,D:\newReposJune17\kendo-labs_dlinq-helpers\Kendo.DynamicLinq\QueryableExtensions.cs,Aggregate,The length of the statement  "				var val = queryable.Provider.Execute (Expression.Call (null' mi' aggregate.Aggregate == "count" && (Nullable.GetUnderlyingType (prop.PropertyType) == null) ? new[] { " is 165.
Magic Number,Kendo.DynamicLinq,Aggregator,D:\newReposJune17\kendo-labs_dlinq-helpers\Kendo.DynamicLinq\Aggregate.cs,MethodInfo,The following statement contains a magic number: switch (Aggregate) {  case "max":  case "min":  	return GetMethod (CultureInfo.InvariantCulture.TextInfo.ToTitleCase (Aggregate)' MinMaxFunc ().Method' 2).MakeGenericMethod (type' proptype);  case "average":  case "sum":  	return GetMethod (CultureInfo.InvariantCulture.TextInfo.ToTitleCase (Aggregate)' ((Func<Type' Type[]>)this.GetType ().GetMethod ("SumAvgFunc"' BindingFlags.Static | BindingFlags.NonPublic).MakeGenericMethod (proptype).Invoke (null' null)).Method' 1).MakeGenericMethod (type);  case "count":  	return GetMethod (CultureInfo.InvariantCulture.TextInfo.ToTitleCase (Aggregate)' Nullable.GetUnderlyingType (proptype) != null ? CountNullableFunc ().Method : CountFunc ().Method' 1).MakeGenericMethod (type);  }  
Magic Number,Kendo.DynamicLinq,Aggregator,D:\newReposJune17\kendo-labs_dlinq-helpers\Kendo.DynamicLinq\Aggregate.cs,MethodInfo,The following statement contains a magic number: return GetMethod (CultureInfo.InvariantCulture.TextInfo.ToTitleCase (Aggregate)' MinMaxFunc ().Method' 2).MakeGenericMethod (type' proptype);  
Missing Default,Kendo.DynamicLinq,Aggregator,D:\newReposJune17\kendo-labs_dlinq-helpers\Kendo.DynamicLinq\Aggregate.cs,MethodInfo,The following switch statement is missing a default case: switch (Aggregate) {  case "max":  case "min":  	return GetMethod (CultureInfo.InvariantCulture.TextInfo.ToTitleCase (Aggregate)' MinMaxFunc ().Method' 2).MakeGenericMethod (type' proptype);  case "average":  case "sum":  	return GetMethod (CultureInfo.InvariantCulture.TextInfo.ToTitleCase (Aggregate)' ((Func<Type' Type[]>)this.GetType ().GetMethod ("SumAvgFunc"' BindingFlags.Static | BindingFlags.NonPublic).MakeGenericMethod (proptype).Invoke (null' null)).Method' 1).MakeGenericMethod (type);  case "count":  	return GetMethod (CultureInfo.InvariantCulture.TextInfo.ToTitleCase (Aggregate)' Nullable.GetUnderlyingType (proptype) != null ? CountNullableFunc ().Method : CountFunc ().Method' 1).MakeGenericMethod (type);  }  
