Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Harvester.Core.Tests.Configuration,TestConfigFile,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Configuration\TestConfigFile.cs,Open,The length of the statement  "            var callerNamespace = testMethod.DeclaringType == null ? "Unknown" : testMethod.DeclaringType.Namespace ?? String.Empty; " is 120.
Long Statement,Harvester.Core.Tests.Filters.UsingComparisonFilter,WhenConvertingValues,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingComparisonFilter\WhenConvertingValues.cs,ValueCanBeUInt32,The length of the statement  "            var extendedProperties = new FakeExtendedProperties { { "property"' "MessageId" }' { "value"' e.MessageId.ToString(CultureInfo.InvariantCulture) } }; " is 149.
Long Statement,Harvester.Core.Tests.Filters.UsingComparisonFilter,WhenConvertingValues,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingComparisonFilter\WhenConvertingValues.cs,ValueCanBeDateTime,The length of the statement  "            var extendedProperties = new FakeExtendedProperties { { "property"' "Timestamp" }' { "value"' now.ToString("yyyy-MM-dd HH:mm:ss") } }; " is 134.
Long Statement,Harvester.Core.Tests.Filters.UsingCompositeFilter,WhenNotFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingCompositeFilter\WhenNotFilter.cs,ReturnFalsefSingleChildFilterTrue,The length of the statement  "            var filter = new NotFilter(new FakeExtendedProperties()' new[] { new EqualFilter(extendedProperties' Enumerable.Empty<ICreateFilterExpressions>()) }); " is 150.
Long Statement,Harvester.Core.Tests.Filters.UsingCompositeFilter,WhenNotFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingCompositeFilter\WhenNotFilter.cs,ReturnTrueIfSingleChildFilterFalse,The length of the statement  "            var filter = new NotFilter(new FakeExtendedProperties()' new[] { new EqualFilter(extendedProperties' Enumerable.Empty<ICreateFilterExpressions>()) }); " is 150.
Long Statement,Harvester.Core.Tests.Filters.UsingCompositeFilter,WhenNotFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingCompositeFilter\WhenNotFilter.cs,ReturnFalseIfAllChildFiltersTrue,The length of the statement  "                                     new EqualFilter(new FakeExtendedProperties { { "property"' "ProcessId" }' { "value"' "1234" } }' Enumerable.Empty<ICreateFilterExpressions>())' " is 143.
Long Statement,Harvester.Core.Tests.Filters.UsingCompositeFilter,WhenNotFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingCompositeFilter\WhenNotFilter.cs,ReturnFalseIfAllChildFiltersTrue,The length of the statement  "                                     new EqualFilter(new FakeExtendedProperties { { "property"' "Thread" }' { "value"' "Unknown" } }' Enumerable.Empty<ICreateFilterExpressions>())' " is 143.
Long Statement,Harvester.Core.Tests.Filters.UsingCompositeFilter,WhenNotFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingCompositeFilter\WhenNotFilter.cs,ReturnFalseIfAllChildFiltersTrue,The length of the statement  "                                     new EqualFilter(new FakeExtendedProperties { { "property"' "Level" }' { "value"' "Error" } }' Enumerable.Empty<ICreateFilterExpressions>()) " is 139.
Long Statement,Harvester.Core.Tests.Filters.UsingCompositeFilter,WhenNotFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingCompositeFilter\WhenNotFilter.cs,ReturnTrueIfAnyChildFilterFalse,The length of the statement  "                                     new EqualFilter(new FakeExtendedProperties { { "property"' "ProcessId" }' { "value"' "1234" } }' Enumerable.Empty<ICreateFilterExpressions>())' " is 143.
Long Statement,Harvester.Core.Tests.Filters.UsingCompositeFilter,WhenNotFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingCompositeFilter\WhenNotFilter.cs,ReturnTrueIfAnyChildFilterFalse,The length of the statement  "                                     new EqualFilter(new FakeExtendedProperties { { "property"' "Thread" }' { "value"' "Unknown" } }' Enumerable.Empty<ICreateFilterExpressions>())' " is 143.
Long Statement,Harvester.Core.Tests.Filters.UsingCompositeFilter,WhenNotFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingCompositeFilter\WhenNotFilter.cs,ReturnTrueIfAnyChildFilterFalse,The length of the statement  "                                     new EqualFilter(new FakeExtendedProperties { { "property"' "Level" }' { "value"' "Error" } }' Enumerable.Empty<ICreateFilterExpressions>()) " is 139.
Long Statement,Harvester.Core.Tests.Filters.UsingCompositeFilter,WhenOrElseFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingCompositeFilter\WhenOrElseFilter.cs,ReturnTrueIfSingleChildFilterTrue,The length of the statement  "            var filter = new OrElseFilter(new FakeExtendedProperties()' new[] { new EqualFilter(extendedProperties' Enumerable.Empty<ICreateFilterExpressions>()) }); " is 153.
Long Statement,Harvester.Core.Tests.Filters.UsingCompositeFilter,WhenOrElseFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingCompositeFilter\WhenOrElseFilter.cs,ReturnFalseIfSingleChildFilterFalse,The length of the statement  "            var filter = new OrElseFilter(new FakeExtendedProperties()' new[] { new EqualFilter(extendedProperties' Enumerable.Empty<ICreateFilterExpressions>()) }); " is 153.
Long Statement,Harvester.Core.Tests.Filters.UsingCompositeFilter,WhenOrElseFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingCompositeFilter\WhenOrElseFilter.cs,ReturnTrueIfAnyChildFilterTrue,The length of the statement  "                                     new EqualFilter(new FakeExtendedProperties { { "property"' "ProcessId" }' { "value"' "1234" } }' Enumerable.Empty<ICreateFilterExpressions>())' " is 143.
Long Statement,Harvester.Core.Tests.Filters.UsingCompositeFilter,WhenOrElseFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingCompositeFilter\WhenOrElseFilter.cs,ReturnTrueIfAnyChildFilterTrue,The length of the statement  "                                     new EqualFilter(new FakeExtendedProperties { { "property"' "Thread" }' { "value"' "Unknown" } }' Enumerable.Empty<ICreateFilterExpressions>())' " is 143.
Long Statement,Harvester.Core.Tests.Filters.UsingCompositeFilter,WhenOrElseFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingCompositeFilter\WhenOrElseFilter.cs,ReturnTrueIfAnyChildFilterTrue,The length of the statement  "                                     new EqualFilter(new FakeExtendedProperties { { "property"' "Level" }' { "value"' "Error" } }' Enumerable.Empty<ICreateFilterExpressions>()) " is 139.
Long Statement,Harvester.Core.Tests.Filters.UsingCompositeFilter,WhenOrElseFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingCompositeFilter\WhenOrElseFilter.cs,ReturnFalseIfAllChildFiltersFalse,The length of the statement  "                                     new EqualFilter(new FakeExtendedProperties { { "property"' "ProcessId" }' { "value"' "1234" } }' Enumerable.Empty<ICreateFilterExpressions>())' " is 143.
Long Statement,Harvester.Core.Tests.Filters.UsingCompositeFilter,WhenOrElseFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingCompositeFilter\WhenOrElseFilter.cs,ReturnFalseIfAllChildFiltersFalse,The length of the statement  "                                     new EqualFilter(new FakeExtendedProperties { { "property"' "Thread" }' { "value"' "Main" } }' Enumerable.Empty<ICreateFilterExpressions>())' " is 140.
Long Statement,Harvester.Core.Tests.Filters.UsingCompositeFilter,WhenOrElseFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingCompositeFilter\WhenOrElseFilter.cs,ReturnFalseIfAllChildFiltersFalse,The length of the statement  "                                     new EqualFilter(new FakeExtendedProperties { { "property"' "Level" }' { "value"' "Warning" } }' Enumerable.Empty<ICreateFilterExpressions>()) " is 141.
Long Statement,Harvester.Core.Tests.Filters.UsingCompositeFilter,WhenAndAlsoFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingCompositeFilter\WhenAndAlsoFilter.cs,ReturnTrueIfSingleChildFilterTrue,The length of the statement  "            var filter = new AndAlsoFilter(new FakeExtendedProperties()' new[] { new EqualFilter(extendedProperties' Enumerable.Empty<ICreateFilterExpressions>()) }); " is 154.
Long Statement,Harvester.Core.Tests.Filters.UsingCompositeFilter,WhenAndAlsoFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingCompositeFilter\WhenAndAlsoFilter.cs,ReturnFalseIfSingleChildFilterFalse,The length of the statement  "            var filter = new AndAlsoFilter(new FakeExtendedProperties()' new[] { new EqualFilter(extendedProperties' Enumerable.Empty<ICreateFilterExpressions>()) }); " is 154.
Long Statement,Harvester.Core.Tests.Filters.UsingCompositeFilter,WhenAndAlsoFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingCompositeFilter\WhenAndAlsoFilter.cs,ReturnTrueIfAllChildFiltersTrue,The length of the statement  "                                     new EqualFilter(new FakeExtendedProperties { { "property"' "ProcessId" }' { "value"' "1234" } }' Enumerable.Empty<ICreateFilterExpressions>())' " is 143.
Long Statement,Harvester.Core.Tests.Filters.UsingCompositeFilter,WhenAndAlsoFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingCompositeFilter\WhenAndAlsoFilter.cs,ReturnTrueIfAllChildFiltersTrue,The length of the statement  "                                     new EqualFilter(new FakeExtendedProperties { { "property"' "Thread" }' { "value"' "Unknown" } }' Enumerable.Empty<ICreateFilterExpressions>())' " is 143.
Long Statement,Harvester.Core.Tests.Filters.UsingCompositeFilter,WhenAndAlsoFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingCompositeFilter\WhenAndAlsoFilter.cs,ReturnTrueIfAllChildFiltersTrue,The length of the statement  "                                     new EqualFilter(new FakeExtendedProperties { { "property"' "Level" }' { "value"' "Error" } }' Enumerable.Empty<ICreateFilterExpressions>()) " is 139.
Long Statement,Harvester.Core.Tests.Filters.UsingCompositeFilter,WhenAndAlsoFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingCompositeFilter\WhenAndAlsoFilter.cs,ReturnFalseIfAnyChildFilterFalse,The length of the statement  "                                     new EqualFilter(new FakeExtendedProperties { { "property"' "ProcessId" }' { "value"' "1234" } }' Enumerable.Empty<ICreateFilterExpressions>())' " is 143.
Long Statement,Harvester.Core.Tests.Filters.UsingCompositeFilter,WhenAndAlsoFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingCompositeFilter\WhenAndAlsoFilter.cs,ReturnFalseIfAnyChildFilterFalse,The length of the statement  "                                     new EqualFilter(new FakeExtendedProperties { { "property"' "Thread" }' { "value"' "Unknown" } }' Enumerable.Empty<ICreateFilterExpressions>())' " is 143.
Long Statement,Harvester.Core.Tests.Filters.UsingCompositeFilter,WhenAndAlsoFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingCompositeFilter\WhenAndAlsoFilter.cs,ReturnFalseIfAnyChildFilterFalse,The length of the statement  "                                     new EqualFilter(new FakeExtendedProperties { { "property"' "Level" }' { "value"' "Error" } }' Enumerable.Empty<ICreateFilterExpressions>()) " is 139.
Long Statement,Harvester.Core.Tests.Filters.UsingDynamicFilterExpression,WhenBuildingMessageFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingDynamicFilterExpression\WhenBuildingMessageFilters.cs,ThrowExceptionIfUnknownFriendlyFilterName,The length of the statement  "            var dynamicFilter = new DynamicFilterExpression(StaticFilter) { TextFilters = new[] { FilterDefinition.ForPositiveExpression("Message"' "Unknown"' "Some Value") } }; " is 165.
Long Statement,Harvester.Core.Tests.Filters.UsingDynamicFilterExpression,WhenBuildingMessageFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingDynamicFilterExpression\WhenBuildingMessageFilters.cs,ExcludeIfNegativeFilterDefinition,The length of the statement  "            var dynamicFilter = new DynamicFilterExpression(StaticFilter) { TextFilters = new[] { FilterDefinition.ForNegativeExpression("Message"' "Equal To"' "Some Value") } }; " is 166.
Long Statement,Harvester.Core.Tests.Filters.UsingDynamicFilterExpression,WhenBuildingMessageFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingDynamicFilterExpression\WhenBuildingMessageFilters.cs,IncludeIfPositiveFilterDefinition,The length of the statement  "            var dynamicFilter = new DynamicFilterExpression(StaticFilter) { TextFilters = new[] { FilterDefinition.ForPositiveExpression("Message"' "Equal To"' "Some Value") } }; " is 166.
Long Statement,Harvester.Core.Tests.Filters.UsingDynamicFilterExpression,WhenBuildingMessageFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingDynamicFilterExpression\WhenBuildingMessageFilters.cs,FiltersDefinitionsBySourceProperty,The length of the statement  "            var textFilters = new[] { FilterDefinition.ForPositiveExpression("Username"' "Equal To"' "Some Value")' FilterDefinition.ForPositiveExpression("Message"' "Equal To"' "Another Value") }; " is 185.
Long Statement,Harvester.Core.Tests.Filters.UsingDynamicFilterExpression,WhenBuildingMessageFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingDynamicFilterExpression\WhenBuildingMessageFilters.cs,SupportedFilterTypes,The length of the statement  "            var dynamicFilter = new DynamicFilterExpression(StaticFilter) { TextFilters = new[] { FilterDefinition.ForPositiveExpression("Message"' friendlyName' "Some Value") } }; " is 168.
Long Statement,Harvester.Core.Tests.Filters.UsingDynamicFilterExpression,WhenBuildingSourceFilters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingDynamicFilterExpression\WhenBuildingSourceFilters.cs,ThrowExceptionIfUnknownFriendlyFilterName,The length of the statement  "            var dynamicFilter = new DynamicFilterExpression(StaticFilter) { TextFilters = new[] { FilterDefinition.ForPositiveExpression("Source"' "Unknown"' "Some Value") } }; " is 164.
Long Statement,Harvester.Core.Tests.Filters.UsingDynamicFilterExpression,WhenBuildingSourceFilters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingDynamicFilterExpression\WhenBuildingSourceFilters.cs,ExcludeIfNegativeFilterDefinition,The length of the statement  "            var dynamicFilter = new DynamicFilterExpression(StaticFilter) { TextFilters = new[] { FilterDefinition.ForNegativeExpression("Source"' "Equal To"' "Some Value") } }; " is 165.
Long Statement,Harvester.Core.Tests.Filters.UsingDynamicFilterExpression,WhenBuildingSourceFilters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingDynamicFilterExpression\WhenBuildingSourceFilters.cs,IncludeIfPositiveFilterDefinition,The length of the statement  "            var dynamicFilter = new DynamicFilterExpression(StaticFilter) { TextFilters = new[] { FilterDefinition.ForPositiveExpression("Source"' "Equal To"' "Some Value") } }; " is 165.
Long Statement,Harvester.Core.Tests.Filters.UsingDynamicFilterExpression,WhenBuildingSourceFilters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingDynamicFilterExpression\WhenBuildingSourceFilters.cs,FiltersDefinitionsBySourceProperty,The length of the statement  "            var textFilters = new[] { FilterDefinition.ForPositiveExpression("Source"' "Equal To"' "Some Value")' FilterDefinition.ForPositiveExpression("Message"' "Equal To"' "Another Value") }; " is 183.
Long Statement,Harvester.Core.Tests.Filters.UsingDynamicFilterExpression,WhenBuildingSourceFilters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingDynamicFilterExpression\WhenBuildingSourceFilters.cs,SupportedFilterTypes,The length of the statement  "            var dynamicFilter = new DynamicFilterExpression(StaticFilter) { TextFilters = new[] { FilterDefinition.ForPositiveExpression("Source"' friendlyName' "Some Value") } }; " is 167.
Long Statement,Harvester.Core.Tests.Filters.UsingDynamicFilterExpression,WhenBuildingUsernameFilters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingDynamicFilterExpression\WhenBuildingUsernameFilters.cs,ThrowExceptionIfUnknownFriendlyFilterName,The length of the statement  "            var dynamicFilter = new DynamicFilterExpression(StaticFilter) { TextFilters = new[] { FilterDefinition.ForPositiveExpression("Username"' "Unknown"' "Some Value") } }; " is 166.
Long Statement,Harvester.Core.Tests.Filters.UsingDynamicFilterExpression,WhenBuildingUsernameFilters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingDynamicFilterExpression\WhenBuildingUsernameFilters.cs,ExcludeIfNegativeFilterDefinition,The length of the statement  "            var dynamicFilter = new DynamicFilterExpression(StaticFilter) { TextFilters = new[] { FilterDefinition.ForNegativeExpression("Username"' "Equal To"' "Some Value") } }; " is 167.
Long Statement,Harvester.Core.Tests.Filters.UsingDynamicFilterExpression,WhenBuildingUsernameFilters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingDynamicFilterExpression\WhenBuildingUsernameFilters.cs,IncludeIfPositiveFilterDefinition,The length of the statement  "            var dynamicFilter = new DynamicFilterExpression(StaticFilter) { TextFilters = new[] { FilterDefinition.ForPositiveExpression("Username"' "Equal To"' "Some Value") } }; " is 167.
Long Statement,Harvester.Core.Tests.Filters.UsingDynamicFilterExpression,WhenBuildingUsernameFilters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingDynamicFilterExpression\WhenBuildingUsernameFilters.cs,FiltersDefinitionsBySourceProperty,The length of the statement  "            var textFilters = new[] { FilterDefinition.ForPositiveExpression("Username"' "Equal To"' "Some Value")' FilterDefinition.ForPositiveExpression("Message"' "Equal To"' "Another Value") }; " is 185.
Long Statement,Harvester.Core.Tests.Filters.UsingDynamicFilterExpression,WhenBuildingUsernameFilters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingDynamicFilterExpression\WhenBuildingUsernameFilters.cs,SupportedFilterTypes,The length of the statement  "            var dynamicFilter = new DynamicFilterExpression(StaticFilter) { TextFilters = new[] { FilterDefinition.ForPositiveExpression("Username"' friendlyName' "Some Value") } }; " is 169.
Long Statement,Harvester.Core.Tests.Filters.UsingStaticFilterExpression,WhenCheckingEventExclusion,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingStaticFilterExpression\WhenCheckingEventExclusion.cs,ReturnFalseIfFilterExpressionIsSatisfied,The length of the statement  "            var filter = new StaticFilterExpression(systemEvent' new EqualFilter(extendedProperties' Enumerable.Empty<ICreateFilterExpressions>()).CreateExpression(filterParameters)); " is 171.
Long Statement,Harvester.Core.Tests.Filters.UsingStaticFilterExpression,WhenCheckingEventExclusion,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingStaticFilterExpression\WhenCheckingEventExclusion.cs,ReturnTrueIfFilterExpressionIsNotSatisfied,The length of the statement  "            var filter = new StaticFilterExpression(systemEvent' new EqualFilter(extendedProperties' Enumerable.Empty<ICreateFilterExpressions>()).CreateExpression(filterParameters)); " is 171.
Long Statement,Harvester.Core.Tests.Messaging.Parsers.UsingLog4NetParser,WhenParsingEmptyMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingLog4NetParser\WhenParsingEmptyMessage.cs,RawMessageIsFormattedXml,The length of the statement  "            Assert.Equal("<log4net:event xmlns:log4net=\"http://logging.apache.org/log4j/\">\r\n</log4net:event>"' messageParser.Parse(message).RawMessage.Value); " is 150.
Long Statement,Harvester.Core.Tests.Messaging.Parsers.UsingLog4NetParser,WhenParsingFullMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingLog4NetParser\WhenParsingFullMessage.cs,TraceLevelFromMessage,The length of the statement  "            var message = new OutputDebugString("xUnit Source"' 123' String.Format("<log4net:event level=\"{0}\"></log4net:event>"' level)); " is 128.
Long Statement,Harvester.Core.Tests.Messaging.Parsers.UsingLog4NetParser,WhenParsingFullMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingLog4NetParser\WhenParsingFullMessage.cs,RawMessageIsFormattedXml,The length of the statement  "                "<log4net:event level=\"error\" logger=\"Test Logger\" thread=\"Test Thread\" username=\"Test User\" xmlns:log4net=\"http://logging.apache.org/log4j/\">\r\n  <log4net:message>Test Message</log4net:message>\r\n</log4net:event>"' " is 227.
Long Statement,Harvester.Core.Tests.Messaging.Parsers.UsingLog4NetParser,WhenParsingFullMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingLog4NetParser\WhenParsingFullMessage.cs,CreateMessage,The length of the statement  "            return new OutputDebugString("xUnit Source"' 123' "<log4net:event level=\"error\" logger=\"Test Logger\" thread=\"Test Thread\" username=\"Test User\"><log4net:message>Test Message</log4net:message></log4net:event>"); " is 217.
Long Statement,Harvester.Core.Tests.Messaging.Parsers.UsingLog4JParser,WhenParsingFullMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingLog4JParser\WhenParsingFullMessage.cs,TraceLevelFromMessage,The length of the statement  "            var message = new OutputDebugString("xUnit Source"' 123' String.Format("<log4j:event level=\"{0}\"></log4j:event>"' level)); " is 124.
Long Statement,Harvester.Core.Tests.Messaging.Parsers.UsingLog4JParser,WhenParsingFullMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingLog4JParser\WhenParsingFullMessage.cs,RawMessageIsFormattedXml,The length of the statement  "                "<log4j:event level=\"error\" logger=\"Test Logger\" thread=\"Test Thread\" username=\"Test User\" xmlns:log4j=\"http://logging.apache.org/log4j/\">\r\n  <log4j:message>Test Message</log4j:message>\r\n</log4j:event>"' " is 217.
Long Statement,Harvester.Core.Tests.Messaging.Parsers.UsingLog4JParser,WhenParsingFullMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingLog4JParser\WhenParsingFullMessage.cs,CreateMessage,The length of the statement  "            return new OutputDebugString("xUnit Source"' 123' "<log4j:event level=\"error\" logger=\"Test Logger\" thread=\"Test Thread\" username=\"Test User\"><log4j:message>Test Message</log4j:message></log4j:event>"); " is 209.
Long Statement,Harvester.Core.Tests.Messaging.Parsers.UsingLog4JParser,WhenParsingEmptyMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingLog4JParser\WhenParsingEmptyMessage.cs,RawMessageIsFormattedXml,The length of the statement  "            Assert.Equal("<log4j:event xmlns:log4j=\"http://logging.apache.org/log4j/\">\r\n</log4j:event>"' messageParser.Parse(message).RawMessage.Value); " is 144.
Long Statement,Harvester.Core.Tests.Messaging.Parsers.UsingRegexParser,WhenParsingGroupedMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingRegexParser\WhenParsingGroupedMessage.cs,CreateMessage,The length of the statement  "            return new OutputDebugString("xUnit Source"' 123' String.Format("Test Logger: {0} [1] - CBaxter - Test{1}Message"' level' Environment.NewLine)); " is 144.
Long Statement,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingPipeMessageWriter,WhenWritingMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingPipeMessageWriter\WhenWritingMessageWithMutexOwned.cs,AlwaysWriteMessageWithProcessIdPreamble,The length of the statement  "                messageBuffer.Verify(mock => mock.Write(It.Is<Byte[]>(buffer => BitConverter.ToInt32(buffer' 0) == processId))' Times.Exactly(2)); " is 130.
Long Statement,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingPipeMessageWriter,WhenWritingMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingPipeMessageWriter\WhenWritingMessageWithMutexOwned.cs,DoNotWriteOutNullTerminatingByte,The length of the statement  "                messageBuffer.Setup(mock => mock.Write(It.IsAny<Byte[]>())).Callback((Byte[] buffer) => chunks.Enqueue(new PipeMessage("Source"' buffer).Message)); " is 147.
Long Statement,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugStringReader,WhenReadingNextMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugStringReader\WhenReadingNextMessage.cs,ReadSingleMessageIfFragmentsFromSameProcess,The length of the statement  "            Assert.True(ReadNextMessage(1' '^' + String.Empty.PadLeft(OutputDebugString.MaxMessageSize - 2) + '$' + '^' + String.Empty.PadLeft(126) + '$')); " is 144.
Long Statement,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugStringReader,WhenReadingNextMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugStringReader\WhenReadingNextMessage.cs,ReadMultipleMessageIfFragmentsExceedMaxMessageLength,The length of the statement  "                                                                     new OutputDebugString("Source"' 1' '^' + String.Empty.PadLeft(OutputDebugString.MaxMessageSize * 15 - 2) + '$').ToBytes()' " is 122.
Long Statement,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugStringReader,WhenReadingNextMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugStringReader\WhenReadingNextMessage.cs,ReadMultipleMessageIfFragmentsExceedMaxMessageLength,The length of the statement  "            Assert.True(ReadNextMessage(1' '^' + String.Empty.PadLeft(OutputDebugString.MaxMessageSize * 15 - 2) + '$' + '^' + String.Empty.PadLeft(OutputDebugString.MaxMessageSize - 2) + '$')); " is 182.
Long Statement,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugStringWriter,WhenWritingMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugStringWriter\WhenWritingMessage.cs,AlwaysWriteMessageWithProcessIdPreamble,The length of the statement  "                messageBuffer.Verify(mock => mock.Write(It.Is<Byte[]>(buffer => BitConverter.ToInt32(buffer' 0) == processId))' Times.Exactly(2)); " is 130.
Long Statement,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugStringWriter,WhenWritingMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugStringWriter\WhenWritingMessage.cs,ChunkMessageIfExceedsBufferSize,The length of the statement  "                messageBuffer.Setup(mock => mock.Write(It.IsAny<Byte[]>())).Callback((Byte[] buffer) => chunks.Enqueue(new OutputDebugString("Source"' buffer).Message)); " is 153.
Long Statement,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugStringWriter,WhenWritingMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugStringWriter\WhenWritingMessage.cs,SingleMessageIfLessThanBufferSize,The length of the statement  "                messageBuffer.Setup(mock => mock.Write(It.IsAny<Byte[]>())).Callback((Byte[] buffer) => chunks.Enqueue(new OutputDebugString("Source"' buffer).Message)); " is 153.
Long Statement,Harvester.Core.Tests.Processes.UsingProcessRetriever,WhenGettingProcess,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Processes\UsingProcessRetriever\WhenGettingProcess.cs,ReturnUnknownProcessIfProcessExitedBeforeWrapped,The length of the statement  "            using (var process = Process.Start(new ProcessStartInfo("cmd") { CreateNoWindow = true' WindowStyle = ProcessWindowStyle.Hidden })) " is 131.
Long Statement,Harvester.Core.Tests.Processes.UsingProcessRetriever,WhenGettingProcess,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Processes\UsingProcessRetriever\WhenGettingProcess.cs,ReturnCachedProcessReferenceIfProcessExits,The length of the statement  "            using (var process = Process.Start(new ProcessStartInfo("cmd") { CreateNoWindow = true' WindowStyle = ProcessWindowStyle.Hidden })) " is 131.
Long Statement,Harvester.Core.Tests.Processes.UsingProcessWrapper,WhenProcessHasExited,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Processes\UsingProcessWrapper\WhenProcessHasExited.cs,ThrowInvalidOperationExceptionIfWrappingExitedProcess,The length of the statement  "            using (var process = Process.Start(new ProcessStartInfo("cmd") { CreateNoWindow = true' WindowStyle = ProcessWindowStyle.Hidden })) " is 131.
Long Statement,Harvester.Core.Tests.Processes.UsingProcessWrapper,WhenProcessHasExited,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Processes\UsingProcessWrapper\WhenProcessHasExited.cs,ExitTimeSetWhenProcessExits,The length of the statement  "            using (var process = Process.Start(new ProcessStartInfo("cmd") { CreateNoWindow = true' WindowStyle = ProcessWindowStyle.Hidden })) " is 131.
Magic Number,Harvester.Core.Tests.Filters.UsingComparisonFilter,WhenCheckingGreaterThan,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingComparisonFilter\WhenCheckingGreaterThan.cs,ReturnTrueIfGreaterThan,The following statement contains a magic number: var e = new SystemEvent { ProcessId = 51 };
Magic Number,Harvester.Core.Tests.Filters.UsingComparisonFilter,WhenCheckingGreaterThan,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingComparisonFilter\WhenCheckingGreaterThan.cs,ReturnFalseIfNotGreaterThan,The following statement contains a magic number: var e = new SystemEvent { ProcessId = 50 };
Magic Number,Harvester.Core.Tests.Filters.UsingComparisonFilter,WhenCheckingGreaterThanOrEqual,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingComparisonFilter\WhenCheckingGreaterThanOrEqual.cs,ReturnTrueIfGreaterThanOrEqual,The following statement contains a magic number: var e = new SystemEvent { ProcessId = 50 };
Magic Number,Harvester.Core.Tests.Filters.UsingComparisonFilter,WhenCheckingGreaterThanOrEqual,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingComparisonFilter\WhenCheckingGreaterThanOrEqual.cs,ReturnFalseIfNotGreaterThanOrEqual,The following statement contains a magic number: var e = new SystemEvent { ProcessId = 49 };
Magic Number,Harvester.Core.Tests.Filters.UsingComparisonFilter,WhenCheckingLessThanOrEqual,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingComparisonFilter\WhenCheckingLessThanOrEqual.cs,ReturnTrueIfLessThanOrEqual,The following statement contains a magic number: var e = new SystemEvent { ProcessId = 50 };
Magic Number,Harvester.Core.Tests.Filters.UsingComparisonFilter,WhenCheckingLessThanOrEqual,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingComparisonFilter\WhenCheckingLessThanOrEqual.cs,ReturnFalseIfNotLessThanOrEqual,The following statement contains a magic number: var e = new SystemEvent { ProcessId = 51 };
Magic Number,Harvester.Core.Tests.Filters.UsingComparisonFilter,WhenCheckingLessThan,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingComparisonFilter\WhenCheckingLessThan.cs,ReturnTrueIfLessThan,The following statement contains a magic number: var e = new SystemEvent { ProcessId = 50 };
Magic Number,Harvester.Core.Tests.Filters.UsingComparisonFilter,WhenCheckingLessThan,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingComparisonFilter\WhenCheckingLessThan.cs,ReturnFalseIfNotLessThan,The following statement contains a magic number: var e = new SystemEvent { ProcessId = 50 };
Magic Number,Harvester.Core.Tests.Filters.UsingComparisonFilter,WhenConvertingValues,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingComparisonFilter\WhenConvertingValues.cs,ValueCanBeInt32,The following statement contains a magic number: var e = new SystemEvent { ProcessId = 123 };
Magic Number,Harvester.Core.Tests.Filters.UsingCompositeFilter,WhenNotFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingCompositeFilter\WhenNotFilter.cs,ReturnFalseIfAllChildFiltersTrue,The following statement contains a magic number: var e = new SystemEvent { Level = SystemEventLevel.Error' ProcessId = 1234' Thread = "Unknown" };
Magic Number,Harvester.Core.Tests.Filters.UsingCompositeFilter,WhenNotFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingCompositeFilter\WhenNotFilter.cs,ReturnTrueIfAnyChildFilterFalse,The following statement contains a magic number: var e = new SystemEvent { Level = SystemEventLevel.Error' ProcessId = 123' Thread = "Unknown" };
Magic Number,Harvester.Core.Tests.Filters.UsingCompositeFilter,WhenOrElseFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingCompositeFilter\WhenOrElseFilter.cs,ReturnTrueIfAnyChildFilterTrue,The following statement contains a magic number: var e = new SystemEvent { Level = SystemEventLevel.Warning' ProcessId = 1234' Thread = "Main" };
Magic Number,Harvester.Core.Tests.Filters.UsingCompositeFilter,WhenOrElseFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingCompositeFilter\WhenOrElseFilter.cs,ReturnFalseIfAllChildFiltersFalse,The following statement contains a magic number: var e = new SystemEvent { Level = SystemEventLevel.Error' ProcessId = 123' Thread = "Unknown" };
Magic Number,Harvester.Core.Tests.Filters.UsingCompositeFilter,WhenAndAlsoFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingCompositeFilter\WhenAndAlsoFilter.cs,ReturnTrueIfAllChildFiltersTrue,The following statement contains a magic number: var e = new SystemEvent { Level = SystemEventLevel.Error' ProcessId = 1234' Thread = "Unknown" };
Magic Number,Harvester.Core.Tests.Filters.UsingCompositeFilter,WhenAndAlsoFilter,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingCompositeFilter\WhenAndAlsoFilter.cs,ReturnFalseIfAnyChildFilterFalse,The following statement contains a magic number: var e = new SystemEvent { Level = SystemEventLevel.Error' ProcessId = 123' Thread = "Unknown" };
Magic Number,Harvester.Core.Tests.Filters.UsingDynamicFilterExpression,WhenBuildingProcessFilters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingDynamicFilterExpression\WhenBuildingProcessFilters.cs,ExcludeIfEventProcessIdNotEqualToAnyProcessFilter,The following statement contains a magic number: var dynamicFilter = new DynamicFilterExpression(StaticFilter) { ProcessFilters = new[] { 2' 4' 8' 16 } };
Magic Number,Harvester.Core.Tests.Filters.UsingDynamicFilterExpression,WhenBuildingProcessFilters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingDynamicFilterExpression\WhenBuildingProcessFilters.cs,ExcludeIfEventProcessIdNotEqualToAnyProcessFilter,The following statement contains a magic number: var dynamicFilter = new DynamicFilterExpression(StaticFilter) { ProcessFilters = new[] { 2' 4' 8' 16 } };
Magic Number,Harvester.Core.Tests.Filters.UsingDynamicFilterExpression,WhenBuildingProcessFilters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingDynamicFilterExpression\WhenBuildingProcessFilters.cs,ExcludeIfEventProcessIdNotEqualToAnyProcessFilter,The following statement contains a magic number: var dynamicFilter = new DynamicFilterExpression(StaticFilter) { ProcessFilters = new[] { 2' 4' 8' 16 } };
Magic Number,Harvester.Core.Tests.Filters.UsingDynamicFilterExpression,WhenBuildingProcessFilters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingDynamicFilterExpression\WhenBuildingProcessFilters.cs,ExcludeIfEventProcessIdNotEqualToAnyProcessFilter,The following statement contains a magic number: var dynamicFilter = new DynamicFilterExpression(StaticFilter) { ProcessFilters = new[] { 2' 4' 8' 16 } };
Magic Number,Harvester.Core.Tests.Filters.UsingDynamicFilterExpression,WhenBuildingProcessFilters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingDynamicFilterExpression\WhenBuildingProcessFilters.cs,IncludeIfEventProcessIdEqualToAnyProcessFilter,The following statement contains a magic number: var dynamicFilter = new DynamicFilterExpression(StaticFilter) { ProcessFilters = new[] { 2' 4' 8' 16 } };
Magic Number,Harvester.Core.Tests.Filters.UsingDynamicFilterExpression,WhenBuildingProcessFilters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingDynamicFilterExpression\WhenBuildingProcessFilters.cs,IncludeIfEventProcessIdEqualToAnyProcessFilter,The following statement contains a magic number: var dynamicFilter = new DynamicFilterExpression(StaticFilter) { ProcessFilters = new[] { 2' 4' 8' 16 } };
Magic Number,Harvester.Core.Tests.Filters.UsingDynamicFilterExpression,WhenBuildingProcessFilters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingDynamicFilterExpression\WhenBuildingProcessFilters.cs,IncludeIfEventProcessIdEqualToAnyProcessFilter,The following statement contains a magic number: var dynamicFilter = new DynamicFilterExpression(StaticFilter) { ProcessFilters = new[] { 2' 4' 8' 16 } };
Magic Number,Harvester.Core.Tests.Filters.UsingDynamicFilterExpression,WhenBuildingProcessFilters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Filters\UsingDynamicFilterExpression\WhenBuildingProcessFilters.cs,IncludeIfEventProcessIdEqualToAnyProcessFilter,The following statement contains a magic number: var dynamicFilter = new DynamicFilterExpression(StaticFilter) { ProcessFilters = new[] { 2' 4' 8' 16 } };
Magic Number,Harvester.Core.Tests.Messaging.Parsers.UsingLog4NetParser,WhenParsingEmptyMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingLog4NetParser\WhenParsingEmptyMessage.cs,CreateMessage,The following statement contains a magic number: process.Setup(mock => mock.Id).Returns(123);
Magic Number,Harvester.Core.Tests.Messaging.Parsers.UsingLog4NetParser,WhenParsingEmptyMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingLog4NetParser\WhenParsingEmptyMessage.cs,CreateMessage,The following statement contains a magic number: processRetriever.Setup(mock => mock.GetProcessById(123)).Returns(process.Object);
Magic Number,Harvester.Core.Tests.Messaging.Parsers.UsingLog4NetParser,WhenParsingEmptyMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingLog4NetParser\WhenParsingEmptyMessage.cs,CreateMessage,The following statement contains a magic number: return new OutputDebugString("xUnit Source"' 123' "<log4net:event ></log4net:event>");
Magic Number,Harvester.Core.Tests.Messaging.Parsers.UsingLog4NetParser,WhenParsingFullMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingLog4NetParser\WhenParsingFullMessage.cs,TraceLevelFromMessage,The following statement contains a magic number: processRetriever.Setup(mock => mock.GetProcessById(123)).Returns(new UnknownProcess(123));
Magic Number,Harvester.Core.Tests.Messaging.Parsers.UsingLog4NetParser,WhenParsingFullMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingLog4NetParser\WhenParsingFullMessage.cs,TraceLevelFromMessage,The following statement contains a magic number: processRetriever.Setup(mock => mock.GetProcessById(123)).Returns(new UnknownProcess(123));
Magic Number,Harvester.Core.Tests.Messaging.Parsers.UsingLog4NetParser,WhenParsingFullMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingLog4NetParser\WhenParsingFullMessage.cs,TraceLevelFromMessage,The following statement contains a magic number: var message = new OutputDebugString("xUnit Source"' 123' String.Format("<log4net:event level=\"{0}\"></log4net:event>"' level));
Magic Number,Harvester.Core.Tests.Messaging.Parsers.UsingLog4NetParser,WhenParsingFullMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingLog4NetParser\WhenParsingFullMessage.cs,CreateMessage,The following statement contains a magic number: process.Setup(mock => mock.Id).Returns(123);
Magic Number,Harvester.Core.Tests.Messaging.Parsers.UsingLog4NetParser,WhenParsingFullMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingLog4NetParser\WhenParsingFullMessage.cs,CreateMessage,The following statement contains a magic number: processRetriever.Setup(mock => mock.GetProcessById(123)).Returns(process.Object);
Magic Number,Harvester.Core.Tests.Messaging.Parsers.UsingLog4NetParser,WhenParsingFullMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingLog4NetParser\WhenParsingFullMessage.cs,CreateMessage,The following statement contains a magic number: return new OutputDebugString("xUnit Source"' 123' "<log4net:event level=\"error\" logger=\"Test Logger\" thread=\"Test Thread\" username=\"Test User\"><log4net:message>Test Message</log4net:message></log4net:event>");
Magic Number,Harvester.Core.Tests.Messaging.Parsers.UsingDefaultParser,WhenParsingMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingDefaultParser\WhenParsingMessage.cs,CreateMessage,The following statement contains a magic number: process.Setup(mock => mock.Id).Returns(123);
Magic Number,Harvester.Core.Tests.Messaging.Parsers.UsingDefaultParser,WhenParsingMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingDefaultParser\WhenParsingMessage.cs,CreateMessage,The following statement contains a magic number: processRetriever.Setup(mock => mock.GetProcessById(123)).Returns(process.Object);
Magic Number,Harvester.Core.Tests.Messaging.Parsers.UsingDefaultParser,WhenParsingMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingDefaultParser\WhenParsingMessage.cs,CreateMessage,The following statement contains a magic number: return new OutputDebugString("xUnit Source"' 123' "xUnit Test Message");
Magic Number,Harvester.Core.Tests.Messaging.Parsers.UsingLog4JParser,WhenParsingFullMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingLog4JParser\WhenParsingFullMessage.cs,TraceLevelFromMessage,The following statement contains a magic number: processRetriever.Setup(mock => mock.GetProcessById(123)).Returns(new UnknownProcess(123));
Magic Number,Harvester.Core.Tests.Messaging.Parsers.UsingLog4JParser,WhenParsingFullMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingLog4JParser\WhenParsingFullMessage.cs,TraceLevelFromMessage,The following statement contains a magic number: processRetriever.Setup(mock => mock.GetProcessById(123)).Returns(new UnknownProcess(123));
Magic Number,Harvester.Core.Tests.Messaging.Parsers.UsingLog4JParser,WhenParsingFullMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingLog4JParser\WhenParsingFullMessage.cs,TraceLevelFromMessage,The following statement contains a magic number: var message = new OutputDebugString("xUnit Source"' 123' String.Format("<log4j:event level=\"{0}\"></log4j:event>"' level));
Magic Number,Harvester.Core.Tests.Messaging.Parsers.UsingLog4JParser,WhenParsingFullMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingLog4JParser\WhenParsingFullMessage.cs,CreateMessage,The following statement contains a magic number: process.Setup(mock => mock.Id).Returns(123);
Magic Number,Harvester.Core.Tests.Messaging.Parsers.UsingLog4JParser,WhenParsingFullMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingLog4JParser\WhenParsingFullMessage.cs,CreateMessage,The following statement contains a magic number: processRetriever.Setup(mock => mock.GetProcessById(123)).Returns(process.Object);
Magic Number,Harvester.Core.Tests.Messaging.Parsers.UsingLog4JParser,WhenParsingFullMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingLog4JParser\WhenParsingFullMessage.cs,CreateMessage,The following statement contains a magic number: return new OutputDebugString("xUnit Source"' 123' "<log4j:event level=\"error\" logger=\"Test Logger\" thread=\"Test Thread\" username=\"Test User\"><log4j:message>Test Message</log4j:message></log4j:event>");
Magic Number,Harvester.Core.Tests.Messaging.Parsers.UsingLog4JParser,WhenParsingEmptyMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingLog4JParser\WhenParsingEmptyMessage.cs,CreateMessage,The following statement contains a magic number: process.Setup(mock => mock.Id).Returns(123);
Magic Number,Harvester.Core.Tests.Messaging.Parsers.UsingLog4JParser,WhenParsingEmptyMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingLog4JParser\WhenParsingEmptyMessage.cs,CreateMessage,The following statement contains a magic number: processRetriever.Setup(mock => mock.GetProcessById(123)).Returns(process.Object);
Magic Number,Harvester.Core.Tests.Messaging.Parsers.UsingLog4JParser,WhenParsingEmptyMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingLog4JParser\WhenParsingEmptyMessage.cs,CreateMessage,The following statement contains a magic number: return new OutputDebugString("xUnit Source"' 123' "<log4j:event ></log4j:event>");
Magic Number,Harvester.Core.Tests.Messaging.Parsers.UsingRegexParser,WhenParsingNonGroupedMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingRegexParser\WhenParsingNonGroupedMessage.cs,CreateMessage,The following statement contains a magic number: process.Setup(mock => mock.Id).Returns(123);
Magic Number,Harvester.Core.Tests.Messaging.Parsers.UsingRegexParser,WhenParsingNonGroupedMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingRegexParser\WhenParsingNonGroupedMessage.cs,CreateMessage,The following statement contains a magic number: processRetriever.Setup(mock => mock.GetProcessById(123)).Returns(process.Object);
Magic Number,Harvester.Core.Tests.Messaging.Parsers.UsingRegexParser,WhenParsingNonGroupedMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingRegexParser\WhenParsingNonGroupedMessage.cs,CreateMessage,The following statement contains a magic number: return new OutputDebugString("xUnit Source"' 123' "Test Logger: DEBUG [1] - CBaxter - Test Message");
Magic Number,Harvester.Core.Tests.Messaging.Parsers.UsingRegexParser,WhenParsingGroupedMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingRegexParser\WhenParsingGroupedMessage.cs,CreateMessage,The following statement contains a magic number: process.Setup(mock => mock.Id).Returns(123);
Magic Number,Harvester.Core.Tests.Messaging.Parsers.UsingRegexParser,WhenParsingGroupedMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingRegexParser\WhenParsingGroupedMessage.cs,CreateMessage,The following statement contains a magic number: processRetriever.Setup(mock => mock.GetProcessById(123)).Returns(process.Object);
Magic Number,Harvester.Core.Tests.Messaging.Parsers.UsingRegexParser,WhenParsingGroupedMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Parsers\UsingRegexParser\WhenParsingGroupedMessage.cs,CreateMessage,The following statement contains a magic number: return new OutputDebugString("xUnit Source"' 123' String.Format("Test Logger: {0} [1] - CBaxter - Test{1}Message"' level' Environment.NewLine));
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingNamedPipeServerBuffer,WhenReadingFromBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingNamedPipeServerBuffer\WhenReadingFromBuffer.cs,ReadAsSingleMessageIfMessageSmallerThanBuffer,The following statement contains a magic number: var message = new Byte[1024];
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingNamedPipeServerBuffer,WhenReadingFromBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingNamedPipeServerBuffer\WhenReadingFromBuffer.cs,ReadAsSingleMessageIfMessageLargerThanBuffer,The following statement contains a magic number: var message = new Byte[32768];
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingNamedPipeServerBuffer,WhenReadingFromBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingNamedPipeServerBuffer\WhenReadingFromBuffer.cs,CanHandleLargeReadVolume,The following statement contains a magic number: const Int32 iterations = 10000;
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingNamedPipeServerBuffer,WhenReadingFromBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingNamedPipeServerBuffer\WhenReadingFromBuffer.cs,RunClient,The following statement contains a magic number: var message = Encoding.UTF8.GetBytes("START->" + String.Empty.PadLeft(randomizer.Next(0' 32768)) + "<-END");
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingNamedPipeClientBuffer,WhenWritingToClosedBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingNamedPipeClientBuffer\WhenWritingToClosedBuffer.cs,WhenWritingToClosedBuffer,The following statement contains a magic number: buffer = new NamedPipeClientBuffer("."' pipeName) { Timeout = TimeSpan.FromMilliseconds(250) };
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingNamedPipeClientBuffer,WhenWritingToOpenBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingNamedPipeClientBuffer\WhenWritingToOpenBuffer.cs,WhenWritingToOpenBuffer,The following statement contains a magic number: buffer = new NamedPipeClientBuffer("."' pipeName) { Timeout = TimeSpan.FromMilliseconds(250) };
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingNamedPipeClientBuffer,WhenWritingToOpenBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingNamedPipeClientBuffer\WhenWritingToOpenBuffer.cs,CanHandleLargeWritesVolume,The following statement contains a magic number: const Int32 iterations = 10000;
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingNamedPipeClientBuffer,WhenWritingToOpenBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingNamedPipeClientBuffer\WhenWritingToOpenBuffer.cs,CanHandleLargeWritesVolume,The following statement contains a magic number: const Int32 messageSize = 4096;
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingPipeMessageWriter,WhenWritingMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingPipeMessageWriter\WhenWritingMessageWithMutexOwned.cs,WhenWritingMessage,The following statement contains a magic number: messageBuffer.Object.Timeout = TimeSpan.FromMilliseconds(25);
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingPipeMessageWriter,WhenWritingMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingPipeMessageWriter\WhenWritingMessageWithMutexOwned.cs,AlwaysWriteMessageWithProcessIdPreamble,The following statement contains a magic number: messageBuffer.Verify(mock => mock.Write(It.Is<Byte[]>(buffer => BitConverter.ToInt32(buffer' 0) == processId))' Times.Exactly(2));
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingPipeMessageWriter,WhenWritingMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingPipeMessageWriter\WhenWritingMessageWithMutexOwned.cs,WriteLargeMessagesAsSingleChunk,The following statement contains a magic number: var message = String.Empty.PadLeft(1048576);
Magic Number,Harvester.Core.Tests.Messaging.UsingMessageProcessor,WhenProcessingMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\UsingMessageProcessor\WhenProcessingMessage.cs,RenderMessageIfParserFound,The following statement contains a magic number: var message = new OutputDebugString("MySource"' 123' "My Message");
Magic Number,Harvester.Core.Tests.Messaging.UsingMessageProcessor,WhenProcessingMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\UsingMessageProcessor\WhenProcessingMessage.cs,RenderMessageIfNoParserFound,The following statement contains a magic number: var message = new OutputDebugString("MySource"' 123' "My Message");
Magic Number,Harvester.Core.Tests.Messaging.UsingMessageProcessor,WhenProcessingMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\UsingMessageProcessor\WhenProcessingMessage.cs,ProcessWillNotBlockOnCurrentThread,The following statement contains a magic number: Assert.InRange(stopwatch.ElapsedMilliseconds' 0' 10);
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingEventWaitHandleExtensions,WhenSafeSetInvokedOnValidWaitHandle,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingEventWaitHandleExtensions\WhenSafeSetInvokedOnValidWaitHandle.cs,SetSingnalledState,The following statement contains a magic number: Assert.True(waitHandle.WaitOne(100));
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugStringReader,WhenReadingNextMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugStringReader\WhenReadingNextMessage.cs,ReadSingleMessageIfFragmentsFromSameProcess,The following statement contains a magic number: messageBuffer.Setup(mock => mock.Read()).Returns(new[]                                                                   {                                                                       new OutputDebugString("Source"' 1' '^' + String.Empty.PadLeft(OutputDebugString.MaxMessageSize - 2) + '$').ToBytes()'                                                                       new OutputDebugString("Source"' 1' '^' + String.Empty.PadLeft(126) + '$').ToBytes()                                                                   });
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugStringReader,WhenReadingNextMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugStringReader\WhenReadingNextMessage.cs,ReadSingleMessageIfFragmentsFromSameProcess,The following statement contains a magic number: messageBuffer.Setup(mock => mock.Read()).Returns(new[]                                                                   {                                                                       new OutputDebugString("Source"' 1' '^' + String.Empty.PadLeft(OutputDebugString.MaxMessageSize - 2) + '$').ToBytes()'                                                                       new OutputDebugString("Source"' 1' '^' + String.Empty.PadLeft(126) + '$').ToBytes()                                                                   });
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugStringReader,WhenReadingNextMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugStringReader\WhenReadingNextMessage.cs,ReadSingleMessageIfFragmentsFromSameProcess,The following statement contains a magic number: Assert.True(ReadNextMessage(1' '^' + String.Empty.PadLeft(OutputDebugString.MaxMessageSize - 2) + '$' + '^' + String.Empty.PadLeft(126) + '$'));
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugStringReader,WhenReadingNextMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugStringReader\WhenReadingNextMessage.cs,ReadSingleMessageIfFragmentsFromSameProcess,The following statement contains a magic number: Assert.True(ReadNextMessage(1' '^' + String.Empty.PadLeft(OutputDebugString.MaxMessageSize - 2) + '$' + '^' + String.Empty.PadLeft(126) + '$'));
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugStringReader,WhenReadingNextMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugStringReader\WhenReadingNextMessage.cs,ReadSingleMessageIfFragmentsFromSameProcess,The following statement contains a magic number: messageBuffer.Verify(mock => mock.Read()' Times.Exactly(2));
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugStringReader,WhenReadingNextMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugStringReader\WhenReadingNextMessage.cs,ReadSingleMessageIfFragmentExactlyFillsBuffer,The following statement contains a magic number: messageBuffer.Setup(mock => mock.Read()).Returns(new[]                                                                   {                                                                       new OutputDebugString("Source"' 1' '^' + String.Empty.PadLeft(OutputDebugString.MaxMessageSize - 2) + '$').ToBytes()'                                                                       new OutputDebugString("Source"' 1' String.Empty).ToBytes()                                                                   });
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugStringReader,WhenReadingNextMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugStringReader\WhenReadingNextMessage.cs,ReadSingleMessageIfFragmentExactlyFillsBuffer,The following statement contains a magic number: Assert.True(ReadNextMessage(1' '^' + String.Empty.PadLeft(OutputDebugString.MaxMessageSize - 2) + '$'));
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugStringReader,WhenReadingNextMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugStringReader\WhenReadingNextMessage.cs,ReadSingleMessageIfFragmentExactlyFillsBuffer,The following statement contains a magic number: messageBuffer.Verify(mock => mock.Read()' Times.Exactly(2));
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugStringReader,WhenReadingNextMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugStringReader\WhenReadingNextMessage.cs,ReadMultipleMessageIfFragmentsFromDifferentProcesses,The following statement contains a magic number: messageBuffer.Setup(mock => mock.Read()).Returns(new[]                                                                   {                                                                       new OutputDebugString("Source"' 1' "First Fragment").ToBytes()'                                                                       new OutputDebugString("Source"' 2' "Second Fragment").ToBytes()                                                                   });
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugStringReader,WhenReadingNextMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugStringReader\WhenReadingNextMessage.cs,ReadMultipleMessageIfFragmentsFromDifferentProcesses,The following statement contains a magic number: Assert.True(ReadNextMessage(2' "Second Fragment"));
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugStringReader,WhenReadingNextMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugStringReader\WhenReadingNextMessage.cs,ReadMultipleMessageIfFragmentsFromDifferentProcesses,The following statement contains a magic number: messageBuffer.Verify(mock => mock.Read()' Times.Exactly(2));
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugStringReader,WhenReadingNextMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugStringReader\WhenReadingNextMessage.cs,ReadMultipleMessageIfFragmentsExceedMaxMessageLength,The following statement contains a magic number: messageBuffer.Setup(mock => mock.Read()).Returns(new[]                                                                   {                                                                       new OutputDebugString("Source"' 1' '^' + String.Empty.PadLeft(OutputDebugString.MaxMessageSize * 15 - 2) + '$').ToBytes()'                                                                       new OutputDebugString("Source"' 1' '^' + String.Empty.PadLeft(OutputDebugString.MaxMessageSize - 2) + '$').ToBytes()'                                                                       new OutputDebugString("Source"' 1' '^' + String.Empty.PadLeft(126) + '$').ToBytes()                                                                   });
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugStringReader,WhenReadingNextMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugStringReader\WhenReadingNextMessage.cs,ReadMultipleMessageIfFragmentsExceedMaxMessageLength,The following statement contains a magic number: messageBuffer.Setup(mock => mock.Read()).Returns(new[]                                                                   {                                                                       new OutputDebugString("Source"' 1' '^' + String.Empty.PadLeft(OutputDebugString.MaxMessageSize * 15 - 2) + '$').ToBytes()'                                                                       new OutputDebugString("Source"' 1' '^' + String.Empty.PadLeft(OutputDebugString.MaxMessageSize - 2) + '$').ToBytes()'                                                                       new OutputDebugString("Source"' 1' '^' + String.Empty.PadLeft(126) + '$').ToBytes()                                                                   });
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugStringReader,WhenReadingNextMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugStringReader\WhenReadingNextMessage.cs,ReadMultipleMessageIfFragmentsExceedMaxMessageLength,The following statement contains a magic number: messageBuffer.Setup(mock => mock.Read()).Returns(new[]                                                                   {                                                                       new OutputDebugString("Source"' 1' '^' + String.Empty.PadLeft(OutputDebugString.MaxMessageSize * 15 - 2) + '$').ToBytes()'                                                                       new OutputDebugString("Source"' 1' '^' + String.Empty.PadLeft(OutputDebugString.MaxMessageSize - 2) + '$').ToBytes()'                                                                       new OutputDebugString("Source"' 1' '^' + String.Empty.PadLeft(126) + '$').ToBytes()                                                                   });
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugStringReader,WhenReadingNextMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugStringReader\WhenReadingNextMessage.cs,ReadMultipleMessageIfFragmentsExceedMaxMessageLength,The following statement contains a magic number: messageBuffer.Setup(mock => mock.Read()).Returns(new[]                                                                   {                                                                       new OutputDebugString("Source"' 1' '^' + String.Empty.PadLeft(OutputDebugString.MaxMessageSize * 15 - 2) + '$').ToBytes()'                                                                       new OutputDebugString("Source"' 1' '^' + String.Empty.PadLeft(OutputDebugString.MaxMessageSize - 2) + '$').ToBytes()'                                                                       new OutputDebugString("Source"' 1' '^' + String.Empty.PadLeft(126) + '$').ToBytes()                                                                   });
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugStringReader,WhenReadingNextMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugStringReader\WhenReadingNextMessage.cs,ReadMultipleMessageIfFragmentsExceedMaxMessageLength,The following statement contains a magic number: Assert.True(ReadNextMessage(1' '^' + String.Empty.PadLeft(OutputDebugString.MaxMessageSize * 15 - 2) + '$' + '^' + String.Empty.PadLeft(OutputDebugString.MaxMessageSize - 2) + '$'));
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugStringReader,WhenReadingNextMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugStringReader\WhenReadingNextMessage.cs,ReadMultipleMessageIfFragmentsExceedMaxMessageLength,The following statement contains a magic number: Assert.True(ReadNextMessage(1' '^' + String.Empty.PadLeft(OutputDebugString.MaxMessageSize * 15 - 2) + '$' + '^' + String.Empty.PadLeft(OutputDebugString.MaxMessageSize - 2) + '$'));
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugStringReader,WhenReadingNextMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugStringReader\WhenReadingNextMessage.cs,ReadMultipleMessageIfFragmentsExceedMaxMessageLength,The following statement contains a magic number: Assert.True(ReadNextMessage(1' '^' + String.Empty.PadLeft(OutputDebugString.MaxMessageSize * 15 - 2) + '$' + '^' + String.Empty.PadLeft(OutputDebugString.MaxMessageSize - 2) + '$'));
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugStringReader,WhenReadingNextMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugStringReader\WhenReadingNextMessage.cs,ReadMultipleMessageIfFragmentsExceedMaxMessageLength,The following statement contains a magic number: Assert.True(ReadNextMessage(1' '^' + String.Empty.PadLeft(126) + '$'));
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugStringReader,WhenReadingNextMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugStringReader\WhenReadingNextMessage.cs,ReadMultipleMessageIfFragmentsExceedMaxMessageLength,The following statement contains a magic number: messageBuffer.Verify(mock => mock.Read()' Times.Exactly(3));
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugStringWriter,WhenWritingMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugStringWriter\WhenWritingMessage.cs,WhenWritingMessage,The following statement contains a magic number: messageBuffer.Object.Timeout = TimeSpan.FromMilliseconds(25);
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugStringWriter,WhenWritingMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugStringWriter\WhenWritingMessage.cs,AlwaysWriteMessageWithProcessIdPreamble,The following statement contains a magic number: messageBuffer.Verify(mock => mock.Write(It.Is<Byte[]>(buffer => BitConverter.ToInt32(buffer' 0) == processId))' Times.Exactly(2));
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugString,WhenCreatingFromParameters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugString\WhenCreatingFromParameters.cs,TimestampIsApproximatelyNow,The following statement contains a magic number: Assert.InRange(message.Timestamp' now.Subtract(TimeSpan.FromMilliseconds(10))' now.Add(TimeSpan.FromMilliseconds(10)));
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugString,WhenCreatingFromParameters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugString\WhenCreatingFromParameters.cs,TimestampIsApproximatelyNow,The following statement contains a magic number: Assert.InRange(message.Timestamp' now.Subtract(TimeSpan.FromMilliseconds(10))' now.Add(TimeSpan.FromMilliseconds(10)));
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugString,WhenCreatingFromParameters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugString\WhenCreatingFromParameters.cs,ProcessIdIsSet,The following statement contains a magic number: Assert.Equal(123' message.ProcessId);
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugString,WhenCreatingFromParameters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugString\WhenCreatingFromParameters.cs,SourceTrimmedOfWhitespace,The following statement contains a magic number: Assert.Equal("Source"' new OutputDebugString(" Source "' new Byte[] { 123' 0' 0' 0' 65 }).Source);
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugString,WhenCreatingFromParameters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugString\WhenCreatingFromParameters.cs,SourceTrimmedOfWhitespace,The following statement contains a magic number: Assert.Equal("Source"' new OutputDebugString(" Source "' new Byte[] { 123' 0' 0' 0' 65 }).Source);
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugString,WhenCreatingFromParameters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugString\WhenCreatingFromParameters.cs,MessageTrimmedOfWhitespace,The following statement contains a magic number: Assert.Equal("A"' new OutputDebugString(" Source "' new Byte[] { 123' 0' 0' 0' 32' 65' 32 }).Message);
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugString,WhenCreatingFromParameters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugString\WhenCreatingFromParameters.cs,MessageTrimmedOfWhitespace,The following statement contains a magic number: Assert.Equal("A"' new OutputDebugString(" Source "' new Byte[] { 123' 0' 0' 0' 32' 65' 32 }).Message);
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugString,WhenCreatingFromParameters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugString\WhenCreatingFromParameters.cs,MessageTrimmedOfWhitespace,The following statement contains a magic number: Assert.Equal("A"' new OutputDebugString(" Source "' new Byte[] { 123' 0' 0' 0' 32' 65' 32 }).Message);
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugString,WhenCreatingFromParameters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugString\WhenCreatingFromParameters.cs,MessageTrimmedOfWhitespace,The following statement contains a magic number: Assert.Equal("A"' new OutputDebugString(" Source "' new Byte[] { 123' 0' 0' 0' 32' 65' 32 }).Message);
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugString,WhenCreatingFromBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugString\WhenCreatingFromBuffer.cs,TimestampIsApproximatelyNow,The following statement contains a magic number: Assert.InRange(message.Timestamp' now.Subtract(TimeSpan.FromMilliseconds(10))' now.Add(TimeSpan.FromMilliseconds(10)));
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugString,WhenCreatingFromBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugString\WhenCreatingFromBuffer.cs,TimestampIsApproximatelyNow,The following statement contains a magic number: Assert.InRange(message.Timestamp' now.Subtract(TimeSpan.FromMilliseconds(10))' now.Add(TimeSpan.FromMilliseconds(10)));
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugString,WhenCreatingFromBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugString\WhenCreatingFromBuffer.cs,ProcessIdIsSet,The following statement contains a magic number: Assert.Equal(123' message.ProcessId);
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugString,WhenCreatingFromBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugString\WhenCreatingFromBuffer.cs,TolerateMissingNullTerminatingByte,The following statement contains a magic number: Assert.Equal("A"' new OutputDebugString("Source"' new Byte[] { 123' 0' 0' 0' 65 }).Message);
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugString,WhenCreatingFromBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugString\WhenCreatingFromBuffer.cs,TolerateMissingNullTerminatingByte,The following statement contains a magic number: Assert.Equal("A"' new OutputDebugString("Source"' new Byte[] { 123' 0' 0' 0' 65 }).Message);
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugString,WhenCreatingFromBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugString\WhenCreatingFromBuffer.cs,SourceTrimmedOfWhitespace,The following statement contains a magic number: Assert.Equal("Source"' new OutputDebugString(" Source "' new Byte[] { 123' 0' 0' 0' 65 }).Source);
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugString,WhenCreatingFromBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugString\WhenCreatingFromBuffer.cs,SourceTrimmedOfWhitespace,The following statement contains a magic number: Assert.Equal("Source"' new OutputDebugString(" Source "' new Byte[] { 123' 0' 0' 0' 65 }).Source);
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugString,WhenCreatingFromBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugString\WhenCreatingFromBuffer.cs,MessageTrimmedOfWhitespace,The following statement contains a magic number: Assert.Equal("A"' new OutputDebugString(" Source "' new Byte[] { 123' 0' 0' 0' 32' 65' 32 }).Message);
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugString,WhenCreatingFromBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugString\WhenCreatingFromBuffer.cs,MessageTrimmedOfWhitespace,The following statement contains a magic number: Assert.Equal("A"' new OutputDebugString(" Source "' new Byte[] { 123' 0' 0' 0' 32' 65' 32 }).Message);
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugString,WhenCreatingFromBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugString\WhenCreatingFromBuffer.cs,MessageTrimmedOfWhitespace,The following statement contains a magic number: Assert.Equal("A"' new OutputDebugString(" Source "' new Byte[] { 123' 0' 0' 0' 32' 65' 32 }).Message);
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingOutputDebugString,WhenCreatingFromBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingOutputDebugString\WhenCreatingFromBuffer.cs,MessageTrimmedOfWhitespace,The following statement contains a magic number: Assert.Equal("A"' new OutputDebugString(" Source "' new Byte[] { 123' 0' 0' 0' 32' 65' 32 }).Message);
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingSharedMemoryBuffer,WhenDisposingBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingSharedMemoryBuffer\WhenDisposingBuffer.cs,WhenDisposingBuffer,The following statement contains a magic number: buffer = new SharedMemoryBuffer(bufferName' 1024) { Timeout = TimeSpan.FromMilliseconds(250) };
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingSharedMemoryBuffer,WhenDisposingBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingSharedMemoryBuffer\WhenDisposingBuffer.cs,WhenDisposingBuffer,The following statement contains a magic number: buffer = new SharedMemoryBuffer(bufferName' 1024) { Timeout = TimeSpan.FromMilliseconds(250) };
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingSharedMemoryBuffer,WhenReadingFromBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingSharedMemoryBuffer\WhenReadingFromBuffer.cs,WhenReadingFromBuffer,The following statement contains a magic number: buffer = new SharedMemoryBuffer(bufferName' 1024) { Timeout = TimeSpan.FromMilliseconds(250) };
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingSharedMemoryBuffer,WhenReadingFromBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingSharedMemoryBuffer\WhenReadingFromBuffer.cs,WhenReadingFromBuffer,The following statement contains a magic number: buffer = new SharedMemoryBuffer(bufferName' 1024) { Timeout = TimeSpan.FromMilliseconds(250) };
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingSharedMemoryBuffer,WhenReadingFromBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingSharedMemoryBuffer\WhenReadingFromBuffer.cs,ReadBlocksUntilWrite,The following statement contains a magic number: Assert.False(syncEvent2.WaitOne(TimeSpan.FromMilliseconds(100)));
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingSharedMemoryBuffer,WhenReadingFromBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingSharedMemoryBuffer\WhenReadingFromBuffer.cs,CanOnlyReadDataOnce,The following statement contains a magic number: Assert.False(syncEvent3.WaitOne(TimeSpan.FromMilliseconds(100)));
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingSharedMemoryBuffer,WhenWrittingData,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingSharedMemoryBuffer\WhenWritingToBuffer.cs,WhenWrittingData,The following statement contains a magic number: buffer = new SharedMemoryBuffer(bufferName' 1024) { Timeout = TimeSpan.FromMilliseconds(250) };
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingSharedMemoryBuffer,WhenWrittingData,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingSharedMemoryBuffer\WhenWritingToBuffer.cs,WhenWrittingData,The following statement contains a magic number: buffer = new SharedMemoryBuffer(bufferName' 1024) { Timeout = TimeSpan.FromMilliseconds(250) };
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingSharedMemoryBuffer,WhenWrittingData,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingSharedMemoryBuffer\WhenWritingToBuffer.cs,CannotOverwriteData,The following statement contains a magic number: Assert.False(syncEvent2.WaitOne(TimeSpan.FromMilliseconds(100)));
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingSharedMemoryBuffer,WhenWrittingData,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingSharedMemoryBuffer\WhenWritingToBuffer.cs,CannotExceedBufferLength,The following statement contains a magic number: var largeMessage = '^' + string.Empty.PadLeft(1024) + '$';
Magic Number,Harvester.Core.Tests.Messaging.Sources.DbWin.UsingSharedMemoryBuffer,WhenWrittingData,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\DbWin\UsingSharedMemoryBuffer\WhenWritingToBuffer.cs,CannotExceedBufferLength,The following statement contains a magic number: Assert.Contains(largeMessage.Substring(0' 1024)' Encoding.ASCII.GetString(buffer.Read()));
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingPipeMessageReader,WhenReadingNextMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingPipeMessageReader\WhenReadingNextMessage.cs,ReadNextDoesNotCombineMessagesFromSameProcess,The following statement contains a magic number: messageBuffer.Verify(mock => mock.Read()' Times.Exactly(2));
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingPipeMessageReader,WhenReadingNextMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingPipeMessageReader\WhenReadingNextMessage.cs,ReadMultipleMessageIfFragmentsFromDifferentProcesses,The following statement contains a magic number: messageBuffer.Setup(mock => mock.Read()).Returns(new[]                                                                   {                                                                       new PipeMessage("Source"' 1' "First Fragment").ToBytes()'                                                                       new PipeMessage("Source"' 2' "Second Fragment").ToBytes()                                                                   });
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingPipeMessageReader,WhenReadingNextMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingPipeMessageReader\WhenReadingNextMessage.cs,ReadMultipleMessageIfFragmentsFromDifferentProcesses,The following statement contains a magic number: Assert.True(ReadNextMessage(2' "Second Fragment"));
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingPipeMessageReader,WhenReadingNextMessage,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingPipeMessageReader\WhenReadingNextMessage.cs,ReadMultipleMessageIfFragmentsFromDifferentProcesses,The following statement contains a magic number: messageBuffer.Verify(mock => mock.Read()' Times.Exactly(2));
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingPipeMessage,WhenCreatingFromBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingPipeMessage\WhenCreatingFromBuffer.cs,TimestampIsApproximatelyNow,The following statement contains a magic number: Assert.InRange(message.Timestamp' now.Subtract(TimeSpan.FromMilliseconds(10))' now.Add(TimeSpan.FromMilliseconds(10)));
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingPipeMessage,WhenCreatingFromBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingPipeMessage\WhenCreatingFromBuffer.cs,TimestampIsApproximatelyNow,The following statement contains a magic number: Assert.InRange(message.Timestamp' now.Subtract(TimeSpan.FromMilliseconds(10))' now.Add(TimeSpan.FromMilliseconds(10)));
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingPipeMessage,WhenCreatingFromBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingPipeMessage\WhenCreatingFromBuffer.cs,ProcessIdIsSet,The following statement contains a magic number: Assert.Equal(123' message.ProcessId);
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingPipeMessage,WhenCreatingFromBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingPipeMessage\WhenCreatingFromBuffer.cs,TolerateMissingNullTerminatingByte,The following statement contains a magic number: Assert.Equal("A"' new PipeMessage("Source"' new Byte[] { 123' 0' 0' 0' 65 }).Message);
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingPipeMessage,WhenCreatingFromBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingPipeMessage\WhenCreatingFromBuffer.cs,TolerateMissingNullTerminatingByte,The following statement contains a magic number: Assert.Equal("A"' new PipeMessage("Source"' new Byte[] { 123' 0' 0' 0' 65 }).Message);
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingPipeMessage,WhenCreatingFromBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingPipeMessage\WhenCreatingFromBuffer.cs,SourceTrimmedOfWhitespace,The following statement contains a magic number: Assert.Equal("Source"' new PipeMessage(" Source "' new Byte[] { 123' 0' 0' 0' 65 }).Source);
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingPipeMessage,WhenCreatingFromBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingPipeMessage\WhenCreatingFromBuffer.cs,SourceTrimmedOfWhitespace,The following statement contains a magic number: Assert.Equal("Source"' new PipeMessage(" Source "' new Byte[] { 123' 0' 0' 0' 65 }).Source);
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingPipeMessage,WhenCreatingFromBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingPipeMessage\WhenCreatingFromBuffer.cs,MessageTrimmedOfWhitespace,The following statement contains a magic number: Assert.Equal("A"' new PipeMessage(" Source "' new Byte[] { 123' 0' 0' 0' 32' 65' 32 }).Message);
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingPipeMessage,WhenCreatingFromBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingPipeMessage\WhenCreatingFromBuffer.cs,MessageTrimmedOfWhitespace,The following statement contains a magic number: Assert.Equal("A"' new PipeMessage(" Source "' new Byte[] { 123' 0' 0' 0' 32' 65' 32 }).Message);
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingPipeMessage,WhenCreatingFromBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingPipeMessage\WhenCreatingFromBuffer.cs,MessageTrimmedOfWhitespace,The following statement contains a magic number: Assert.Equal("A"' new PipeMessage(" Source "' new Byte[] { 123' 0' 0' 0' 32' 65' 32 }).Message);
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingPipeMessage,WhenCreatingFromBuffer,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingPipeMessage\WhenCreatingFromBuffer.cs,MessageTrimmedOfWhitespace,The following statement contains a magic number: Assert.Equal("A"' new PipeMessage(" Source "' new Byte[] { 123' 0' 0' 0' 32' 65' 32 }).Message);
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingPipeMessage,WhenCreatingFromParameters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingPipeMessage\WhenCreatingFromParameters.cs,TimestampIsApproximatelyNow,The following statement contains a magic number: Assert.InRange(message.Timestamp' now.Subtract(TimeSpan.FromMilliseconds(10))' now.Add(TimeSpan.FromMilliseconds(10)));
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingPipeMessage,WhenCreatingFromParameters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingPipeMessage\WhenCreatingFromParameters.cs,TimestampIsApproximatelyNow,The following statement contains a magic number: Assert.InRange(message.Timestamp' now.Subtract(TimeSpan.FromMilliseconds(10))' now.Add(TimeSpan.FromMilliseconds(10)));
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingPipeMessage,WhenCreatingFromParameters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingPipeMessage\WhenCreatingFromParameters.cs,ProcessIdIsSet,The following statement contains a magic number: Assert.Equal(123' message.ProcessId);
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingPipeMessage,WhenCreatingFromParameters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingPipeMessage\WhenCreatingFromParameters.cs,SourceTrimmedOfWhitespace,The following statement contains a magic number: Assert.Equal("Source"' new PipeMessage(" Source "' new Byte[] { 123' 0' 0' 0' 65 }).Source);
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingPipeMessage,WhenCreatingFromParameters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingPipeMessage\WhenCreatingFromParameters.cs,SourceTrimmedOfWhitespace,The following statement contains a magic number: Assert.Equal("Source"' new PipeMessage(" Source "' new Byte[] { 123' 0' 0' 0' 65 }).Source);
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingPipeMessage,WhenCreatingFromParameters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingPipeMessage\WhenCreatingFromParameters.cs,MessageTrimmedOfWhitespace,The following statement contains a magic number: Assert.Equal("A"' new PipeMessage(" Source "' new Byte[] { 123' 0' 0' 0' 32' 65' 32 }).Message);
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingPipeMessage,WhenCreatingFromParameters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingPipeMessage\WhenCreatingFromParameters.cs,MessageTrimmedOfWhitespace,The following statement contains a magic number: Assert.Equal("A"' new PipeMessage(" Source "' new Byte[] { 123' 0' 0' 0' 32' 65' 32 }).Message);
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingPipeMessage,WhenCreatingFromParameters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingPipeMessage\WhenCreatingFromParameters.cs,MessageTrimmedOfWhitespace,The following statement contains a magic number: Assert.Equal("A"' new PipeMessage(" Source "' new Byte[] { 123' 0' 0' 0' 32' 65' 32 }).Message);
Magic Number,Harvester.Core.Tests.Messaging.Sources.NamedPipe.UsingPipeMessage,WhenCreatingFromParameters,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Messaging\Sources\NamedPipe\UsingPipeMessage\WhenCreatingFromParameters.cs,MessageTrimmedOfWhitespace,The following statement contains a magic number: Assert.Equal("A"' new PipeMessage(" Source "' new Byte[] { 123' 0' 0' 0' 32' 65' 32 }).Message);
Magic Number,Harvester.Core.Tests.Processes.UsingProcessRetriever,WhenGettingProcess,D:\research\architectureSmells\repos\cbaxter_Harvester\src\Core.Tests\Processes\UsingProcessRetriever\WhenGettingProcess.cs,ReturnUnknownProcessIfProcessIdNotFound,The following statement contains a magic number: Assert.IsType(typeof(UnknownProcess)' processRetriever.GetProcessById(9999999));
