Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The method has 6 parameters.
Long Parameter List,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The method has 8 parameters.
Long Statement,Tremulous_Server_Search,Form1,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Form1.cs,GetServerList,The length of the statement  "		list.Add (input.Substring (input.IndexOf (match.Value)' input.IndexOf (match.NextMatch ().Value) - input.IndexOf (match.Value))); " is 129.
Long Statement,Tremulous_Server_Search,Form1,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Form1.cs,GoToPlayer,The length of the statement  "		Server s = new Server (subItems [0].Text' subItems [5].Text' subItems [1].Text' subItems [2].Text' int.Parse (subItems [3].Text)' int.Parse (subItems [4].Text)); " is 161.
Long Statement,Tremulous_Server_Search,Form1,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Form1.cs,GoToPlayer,The length of the statement  "		Player player2 = new Player (lstPlayers.Items [j].SubItems [0].Text' int.Parse (lstPlayers.Items [j].SubItems [1].Text)' int.Parse (lstPlayers.Items [j].SubItems [2].Text)); " is 173.
Long Statement,Tremulous_Server_Search,Form1,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Form1.cs,GoToPlayer,The length of the statement  "		Server server = new Server (subItems [0].Text' subItems [5].Text' subItems [1].Text' subItems [2].Text' int.Parse (subItems [3].Text)' int.Parse (subItems [4].Text)); " is 166.
Long Statement,Tremulous_Server_Search,Form1,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Form1.cs,GoToPlayer,The length of the statement  "		Player player = new Player (lstPlayers.Items [j].SubItems [0].Text' int.Parse (lstPlayers.Items [j].SubItems [1].Text)' int.Parse (lstPlayers.Items [j].SubItems [2].Text)); " is 172.
Long Statement,Tremulous_Server_Search,Form1,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Form1.cs,lstServers_SelectedIndexChanged,The length of the statement  "	Server server = new Server (subItems [0].Text' subItems [5].Text' subItems [1].Text' subItems [2].Text' int.Parse (subItems [3].Text)' int.Parse (subItems [4].Text)); " is 166.
Long Statement,Tremulous_Server_Search,ImageTextComparer,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\ImageTextComparer.cs,Compare,The length of the statement  "	return (imageIndex == num2) ? this.ObjectCompare.Compare (item.Text' item2.Text) : Convert.ToInt32 (imageIndex > num2) * 2 - 1; " is 127.
Long Statement,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Equals,The length of the statement  "	if (server.Game == Game && server.IP == IP && server.Map == Map && server.MaxPlayers == MaxPlayers && server.Name == Name && server.NumPlayers == NumPlayers) { " is 159.
Long Statement,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,isEmpty,The length of the statement  "	if (Name == "" && IP == "" && Map == "" && Game == "" && NumPlayers == 0 && NumServers == 0 && MaxPlayers == 0 && Variables.Count == 0) " is 135.
Long Statement,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Similar,The length of the statement  "	return s.Game == Game && s.IP == IP && s.Map == Map && s.MaxPlayers == MaxPlayers && s.Name == Name && s.NumPlayers == NumPlayers; " is 130.
Complex Conditional,Tremulous_Server_Search,NumberCaseInsensitiveComparer,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\NumberCaseInsensitiveComparer.cs,Compare,The conditional expression  "((x is string) && this.IsWholeNumber ((string)x)) && ((y is string) && this.IsWholeNumber ((string)y))"  is complex.
Complex Conditional,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Equals,The conditional expression  "server.Game == Game && server.IP == IP && server.Map == Map && server.MaxPlayers == MaxPlayers && server.Name == Name && server.NumPlayers == NumPlayers"  is complex.
Complex Conditional,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,isEmpty,The conditional expression  "Name == "" && IP == "" && Map == "" && Game == "" && NumPlayers == 0 && NumServers == 0 && MaxPlayers == 0 && Variables.Count == 0"  is complex.
Magic Number,Tremulous_Server_Search,Form1,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Form1.cs,GoToPlayer,The following statement contains a magic number: for (int i = 0; i < lstServers.Items.Count; i++) {  	ListViewItem.ListViewSubItemCollection subItems = lstServers.Items [i].SubItems;  	Server s = new Server (subItems [0].Text' subItems [5].Text' subItems [1].Text' subItems [2].Text' int.Parse (subItems [3].Text)' int.Parse (subItems [4].Text));  	if (server.Similar (s)) {  		lblServerName.Text = "Server: " + server.Name;  		lstServers.Items [i].Selected = true;  		break;  	}  }  
Magic Number,Tremulous_Server_Search,Form1,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Form1.cs,GoToPlayer,The following statement contains a magic number: for (int i = 0; i < lstServers.Items.Count; i++) {  	ListViewItem.ListViewSubItemCollection subItems = lstServers.Items [i].SubItems;  	Server s = new Server (subItems [0].Text' subItems [5].Text' subItems [1].Text' subItems [2].Text' int.Parse (subItems [3].Text)' int.Parse (subItems [4].Text));  	if (server.Similar (s)) {  		lblServerName.Text = "Server: " + server.Name;  		lstServers.Items [i].Selected = true;  		break;  	}  }  
Magic Number,Tremulous_Server_Search,Form1,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Form1.cs,GoToPlayer,The following statement contains a magic number: for (int i = 0; i < lstServers.Items.Count; i++) {  	ListViewItem.ListViewSubItemCollection subItems = lstServers.Items [i].SubItems;  	Server s = new Server (subItems [0].Text' subItems [5].Text' subItems [1].Text' subItems [2].Text' int.Parse (subItems [3].Text)' int.Parse (subItems [4].Text));  	if (server.Similar (s)) {  		lblServerName.Text = "Server: " + server.Name;  		lstServers.Items [i].Selected = true;  		break;  	}  }  
Magic Number,Tremulous_Server_Search,Form1,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Form1.cs,GoToPlayer,The following statement contains a magic number: for (int i = 0; i < lstServers.Items.Count; i++) {  	ListViewItem.ListViewSubItemCollection subItems = lstServers.Items [i].SubItems;  	Server s = new Server (subItems [0].Text' subItems [5].Text' subItems [1].Text' subItems [2].Text' int.Parse (subItems [3].Text)' int.Parse (subItems [4].Text));  	if (server.Similar (s)) {  		lblServerName.Text = "Server: " + server.Name;  		lstServers.Items [i].Selected = true;  		break;  	}  }  
Magic Number,Tremulous_Server_Search,Form1,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Form1.cs,GoToPlayer,The following statement contains a magic number: for (int j = 0; j < lstPlayers.Items.Count; j++) {  	Player player2 = new Player (lstPlayers.Items [j].SubItems [0].Text' int.Parse (lstPlayers.Items [j].SubItems [1].Text)' int.Parse (lstPlayers.Items [j].SubItems [2].Text));  	if (player.Equals (player2)) {  		lstPlayers.Focus ();  		lstPlayers.Items [j].Selected = true;  		lstPlayers.Items [j].Focused = true;  		return;  	}  }  
Magic Number,Tremulous_Server_Search,Form1,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Form1.cs,GoToPlayer,The following statement contains a magic number: for (int i = 0; i < lstServers.Items.Count; i++) {  	ListViewItem.ListViewSubItemCollection subItems = lstServers.Items [i].SubItems;  	Server server = new Server (subItems [0].Text' subItems [5].Text' subItems [1].Text' subItems [2].Text' int.Parse (subItems [3].Text)' int.Parse (subItems [4].Text));  	if (s.Similar (server)) {  		lblServerName.Text = "Server: " + s.Name;  		lstServers.Items [i].Selected = true;  		break;  	}  }  
Magic Number,Tremulous_Server_Search,Form1,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Form1.cs,GoToPlayer,The following statement contains a magic number: for (int i = 0; i < lstServers.Items.Count; i++) {  	ListViewItem.ListViewSubItemCollection subItems = lstServers.Items [i].SubItems;  	Server server = new Server (subItems [0].Text' subItems [5].Text' subItems [1].Text' subItems [2].Text' int.Parse (subItems [3].Text)' int.Parse (subItems [4].Text));  	if (s.Similar (server)) {  		lblServerName.Text = "Server: " + s.Name;  		lstServers.Items [i].Selected = true;  		break;  	}  }  
Magic Number,Tremulous_Server_Search,Form1,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Form1.cs,GoToPlayer,The following statement contains a magic number: for (int i = 0; i < lstServers.Items.Count; i++) {  	ListViewItem.ListViewSubItemCollection subItems = lstServers.Items [i].SubItems;  	Server server = new Server (subItems [0].Text' subItems [5].Text' subItems [1].Text' subItems [2].Text' int.Parse (subItems [3].Text)' int.Parse (subItems [4].Text));  	if (s.Similar (server)) {  		lblServerName.Text = "Server: " + s.Name;  		lstServers.Items [i].Selected = true;  		break;  	}  }  
Magic Number,Tremulous_Server_Search,Form1,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Form1.cs,GoToPlayer,The following statement contains a magic number: for (int i = 0; i < lstServers.Items.Count; i++) {  	ListViewItem.ListViewSubItemCollection subItems = lstServers.Items [i].SubItems;  	Server server = new Server (subItems [0].Text' subItems [5].Text' subItems [1].Text' subItems [2].Text' int.Parse (subItems [3].Text)' int.Parse (subItems [4].Text));  	if (s.Similar (server)) {  		lblServerName.Text = "Server: " + s.Name;  		lstServers.Items [i].Selected = true;  		break;  	}  }  
Magic Number,Tremulous_Server_Search,Form1,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Form1.cs,GoToPlayer,The following statement contains a magic number: for (int j = 0; j < lstPlayers.Items.Count; j++) {  	Player player = new Player (lstPlayers.Items [j].SubItems [0].Text' int.Parse (lstPlayers.Items [j].SubItems [1].Text)' int.Parse (lstPlayers.Items [j].SubItems [2].Text));  	if (p.Equals (player)) {  		lstPlayers.Focus ();  		lstPlayers.Items [j].Selected = true;  		lstPlayers.Items [j].Focused = true;  		return;  	}  }  
Magic Number,Tremulous_Server_Search,ImageTextComparer,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\ImageTextComparer.cs,Compare,The following statement contains a magic number: return (imageIndex == num2) ? this.ObjectCompare.Compare (item.Text' item2.Text) : Convert.ToInt32 (imageIndex > num2) * 2 - 1;  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: if (ServerHTML.Length > 0) {  	try {  		ServerVar[] varArray = new ServerVar[8];  		List<Player> list = new List<Player> ();  		List<ServerVar> list2 = new List<ServerVar> ();  		Regex regex = new Regex ("<tr xmlns=\"\" class=\"server\" id=\"server_.+?\">.+?</tr>");  		string input = regex.Match (ServerHTML).Value;  		regex = new Regex ("<td class=\".+?\">.*?</td>");  		Match match = regex.Match (input);  		Regex regex2 = new Regex ("<td class=\".+?\">");  		for (int i = 0; i < 8; i++) {  			string str4;  			string str2 = match.Value;  			string str3 = regex2.Match (str2).Value;  			if (str3.Length > 0) {  				str4 = str2.Substring (11' str2.IndexOf ("\">") - 11);  				str2 = str2.Substring (str3.Length);  				str2 = str2.Substring (0' str2.IndexOf ("</td>"));  			}  			else {  				str4 = "N/A";  				str2 = "N/A";  			}  			varArray [i] = new ServerVar (str4' str2);  			match = match.NextMatch ();  		}  		Name = varArray [1].Value;  		IP = varArray [7].Value;  		Map = varArray [2].Value;  		Game = varArray [3].Value;  		NumPlayers = int.Parse (varArray [4].Value);  		MaxPlayers = int.Parse (varArray [6].Value);  		string str5 = "<table class=\"players\"><thead><tr><td class=\"name\">Name</td><td class=\"score\">Score</td><td class=\"ping\">Ping</td></tr></thead>";  		string str6 = ServerHTML.Substring (ServerHTML.IndexOf (str5) + str5.Length);  		str6 = str6.Substring (7' str6.IndexOf ("</table>") - 15);  		regex = new Regex ("<tr>.+?</tr>");  		regex2 = new Regex ("<td class=\".+?\">.+?</td>");  		for (match = regex.Match (str6); match.Success; match = match.NextMatch ()) {  			regex2 = new Regex ("<td class=\".+?\">.+?</td>");  			Match match2 = regex2.Match (match.Value);  			string name = getVal (match2.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			match2 = match2.NextMatch ();  			int score = int.Parse (getVal (match2.Value));  			match2 = match2.NextMatch ();  			int ping = int.Parse (getVal (match2.Value));  			list.Add (new Player (name' score' ping));  		}  		Players = list;  		regex = new Regex ("<table class=\"rules\">.+?</table>");  		string str8 = regex.Match (ServerHTML).Value;  		str8 = str8.Substring (str8.IndexOf ("<tbody>")' (str8.Length - str8.IndexOf ("<tbody>")) - 0x10);  		regex = new Regex ("<tr>.+?</tr>");  		for (match = regex.Match (str8); match.Success; match = match.NextMatch ()) {  			Match match3 = new Regex ("<td class=\".+?\">.+?</td>").Match (match.Value);  			string str9 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			match3 = match3.NextMatch ();  			string str10 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			list2.Add (new ServerVar (str9' str10));  		}  		Variables = list2;  	}  	catch (Exception exception) {  		MessageBox.Show ("Error: Unable to parse server\n\nDetails:\n" + exception.ToString ());  	}  }  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: if (ServerHTML.Length > 0) {  	try {  		ServerVar[] varArray = new ServerVar[8];  		List<Player> list = new List<Player> ();  		List<ServerVar> list2 = new List<ServerVar> ();  		Regex regex = new Regex ("<tr xmlns=\"\" class=\"server\" id=\"server_.+?\">.+?</tr>");  		string input = regex.Match (ServerHTML).Value;  		regex = new Regex ("<td class=\".+?\">.*?</td>");  		Match match = regex.Match (input);  		Regex regex2 = new Regex ("<td class=\".+?\">");  		for (int i = 0; i < 8; i++) {  			string str4;  			string str2 = match.Value;  			string str3 = regex2.Match (str2).Value;  			if (str3.Length > 0) {  				str4 = str2.Substring (11' str2.IndexOf ("\">") - 11);  				str2 = str2.Substring (str3.Length);  				str2 = str2.Substring (0' str2.IndexOf ("</td>"));  			}  			else {  				str4 = "N/A";  				str2 = "N/A";  			}  			varArray [i] = new ServerVar (str4' str2);  			match = match.NextMatch ();  		}  		Name = varArray [1].Value;  		IP = varArray [7].Value;  		Map = varArray [2].Value;  		Game = varArray [3].Value;  		NumPlayers = int.Parse (varArray [4].Value);  		MaxPlayers = int.Parse (varArray [6].Value);  		string str5 = "<table class=\"players\"><thead><tr><td class=\"name\">Name</td><td class=\"score\">Score</td><td class=\"ping\">Ping</td></tr></thead>";  		string str6 = ServerHTML.Substring (ServerHTML.IndexOf (str5) + str5.Length);  		str6 = str6.Substring (7' str6.IndexOf ("</table>") - 15);  		regex = new Regex ("<tr>.+?</tr>");  		regex2 = new Regex ("<td class=\".+?\">.+?</td>");  		for (match = regex.Match (str6); match.Success; match = match.NextMatch ()) {  			regex2 = new Regex ("<td class=\".+?\">.+?</td>");  			Match match2 = regex2.Match (match.Value);  			string name = getVal (match2.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			match2 = match2.NextMatch ();  			int score = int.Parse (getVal (match2.Value));  			match2 = match2.NextMatch ();  			int ping = int.Parse (getVal (match2.Value));  			list.Add (new Player (name' score' ping));  		}  		Players = list;  		regex = new Regex ("<table class=\"rules\">.+?</table>");  		string str8 = regex.Match (ServerHTML).Value;  		str8 = str8.Substring (str8.IndexOf ("<tbody>")' (str8.Length - str8.IndexOf ("<tbody>")) - 0x10);  		regex = new Regex ("<tr>.+?</tr>");  		for (match = regex.Match (str8); match.Success; match = match.NextMatch ()) {  			Match match3 = new Regex ("<td class=\".+?\">.+?</td>").Match (match.Value);  			string str9 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			match3 = match3.NextMatch ();  			string str10 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			list2.Add (new ServerVar (str9' str10));  		}  		Variables = list2;  	}  	catch (Exception exception) {  		MessageBox.Show ("Error: Unable to parse server\n\nDetails:\n" + exception.ToString ());  	}  }  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: if (ServerHTML.Length > 0) {  	try {  		ServerVar[] varArray = new ServerVar[8];  		List<Player> list = new List<Player> ();  		List<ServerVar> list2 = new List<ServerVar> ();  		Regex regex = new Regex ("<tr xmlns=\"\" class=\"server\" id=\"server_.+?\">.+?</tr>");  		string input = regex.Match (ServerHTML).Value;  		regex = new Regex ("<td class=\".+?\">.*?</td>");  		Match match = regex.Match (input);  		Regex regex2 = new Regex ("<td class=\".+?\">");  		for (int i = 0; i < 8; i++) {  			string str4;  			string str2 = match.Value;  			string str3 = regex2.Match (str2).Value;  			if (str3.Length > 0) {  				str4 = str2.Substring (11' str2.IndexOf ("\">") - 11);  				str2 = str2.Substring (str3.Length);  				str2 = str2.Substring (0' str2.IndexOf ("</td>"));  			}  			else {  				str4 = "N/A";  				str2 = "N/A";  			}  			varArray [i] = new ServerVar (str4' str2);  			match = match.NextMatch ();  		}  		Name = varArray [1].Value;  		IP = varArray [7].Value;  		Map = varArray [2].Value;  		Game = varArray [3].Value;  		NumPlayers = int.Parse (varArray [4].Value);  		MaxPlayers = int.Parse (varArray [6].Value);  		string str5 = "<table class=\"players\"><thead><tr><td class=\"name\">Name</td><td class=\"score\">Score</td><td class=\"ping\">Ping</td></tr></thead>";  		string str6 = ServerHTML.Substring (ServerHTML.IndexOf (str5) + str5.Length);  		str6 = str6.Substring (7' str6.IndexOf ("</table>") - 15);  		regex = new Regex ("<tr>.+?</tr>");  		regex2 = new Regex ("<td class=\".+?\">.+?</td>");  		for (match = regex.Match (str6); match.Success; match = match.NextMatch ()) {  			regex2 = new Regex ("<td class=\".+?\">.+?</td>");  			Match match2 = regex2.Match (match.Value);  			string name = getVal (match2.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			match2 = match2.NextMatch ();  			int score = int.Parse (getVal (match2.Value));  			match2 = match2.NextMatch ();  			int ping = int.Parse (getVal (match2.Value));  			list.Add (new Player (name' score' ping));  		}  		Players = list;  		regex = new Regex ("<table class=\"rules\">.+?</table>");  		string str8 = regex.Match (ServerHTML).Value;  		str8 = str8.Substring (str8.IndexOf ("<tbody>")' (str8.Length - str8.IndexOf ("<tbody>")) - 0x10);  		regex = new Regex ("<tr>.+?</tr>");  		for (match = regex.Match (str8); match.Success; match = match.NextMatch ()) {  			Match match3 = new Regex ("<td class=\".+?\">.+?</td>").Match (match.Value);  			string str9 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			match3 = match3.NextMatch ();  			string str10 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			list2.Add (new ServerVar (str9' str10));  		}  		Variables = list2;  	}  	catch (Exception exception) {  		MessageBox.Show ("Error: Unable to parse server\n\nDetails:\n" + exception.ToString ());  	}  }  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: if (ServerHTML.Length > 0) {  	try {  		ServerVar[] varArray = new ServerVar[8];  		List<Player> list = new List<Player> ();  		List<ServerVar> list2 = new List<ServerVar> ();  		Regex regex = new Regex ("<tr xmlns=\"\" class=\"server\" id=\"server_.+?\">.+?</tr>");  		string input = regex.Match (ServerHTML).Value;  		regex = new Regex ("<td class=\".+?\">.*?</td>");  		Match match = regex.Match (input);  		Regex regex2 = new Regex ("<td class=\".+?\">");  		for (int i = 0; i < 8; i++) {  			string str4;  			string str2 = match.Value;  			string str3 = regex2.Match (str2).Value;  			if (str3.Length > 0) {  				str4 = str2.Substring (11' str2.IndexOf ("\">") - 11);  				str2 = str2.Substring (str3.Length);  				str2 = str2.Substring (0' str2.IndexOf ("</td>"));  			}  			else {  				str4 = "N/A";  				str2 = "N/A";  			}  			varArray [i] = new ServerVar (str4' str2);  			match = match.NextMatch ();  		}  		Name = varArray [1].Value;  		IP = varArray [7].Value;  		Map = varArray [2].Value;  		Game = varArray [3].Value;  		NumPlayers = int.Parse (varArray [4].Value);  		MaxPlayers = int.Parse (varArray [6].Value);  		string str5 = "<table class=\"players\"><thead><tr><td class=\"name\">Name</td><td class=\"score\">Score</td><td class=\"ping\">Ping</td></tr></thead>";  		string str6 = ServerHTML.Substring (ServerHTML.IndexOf (str5) + str5.Length);  		str6 = str6.Substring (7' str6.IndexOf ("</table>") - 15);  		regex = new Regex ("<tr>.+?</tr>");  		regex2 = new Regex ("<td class=\".+?\">.+?</td>");  		for (match = regex.Match (str6); match.Success; match = match.NextMatch ()) {  			regex2 = new Regex ("<td class=\".+?\">.+?</td>");  			Match match2 = regex2.Match (match.Value);  			string name = getVal (match2.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			match2 = match2.NextMatch ();  			int score = int.Parse (getVal (match2.Value));  			match2 = match2.NextMatch ();  			int ping = int.Parse (getVal (match2.Value));  			list.Add (new Player (name' score' ping));  		}  		Players = list;  		regex = new Regex ("<table class=\"rules\">.+?</table>");  		string str8 = regex.Match (ServerHTML).Value;  		str8 = str8.Substring (str8.IndexOf ("<tbody>")' (str8.Length - str8.IndexOf ("<tbody>")) - 0x10);  		regex = new Regex ("<tr>.+?</tr>");  		for (match = regex.Match (str8); match.Success; match = match.NextMatch ()) {  			Match match3 = new Regex ("<td class=\".+?\">.+?</td>").Match (match.Value);  			string str9 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			match3 = match3.NextMatch ();  			string str10 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			list2.Add (new ServerVar (str9' str10));  		}  		Variables = list2;  	}  	catch (Exception exception) {  		MessageBox.Show ("Error: Unable to parse server\n\nDetails:\n" + exception.ToString ());  	}  }  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: if (ServerHTML.Length > 0) {  	try {  		ServerVar[] varArray = new ServerVar[8];  		List<Player> list = new List<Player> ();  		List<ServerVar> list2 = new List<ServerVar> ();  		Regex regex = new Regex ("<tr xmlns=\"\" class=\"server\" id=\"server_.+?\">.+?</tr>");  		string input = regex.Match (ServerHTML).Value;  		regex = new Regex ("<td class=\".+?\">.*?</td>");  		Match match = regex.Match (input);  		Regex regex2 = new Regex ("<td class=\".+?\">");  		for (int i = 0; i < 8; i++) {  			string str4;  			string str2 = match.Value;  			string str3 = regex2.Match (str2).Value;  			if (str3.Length > 0) {  				str4 = str2.Substring (11' str2.IndexOf ("\">") - 11);  				str2 = str2.Substring (str3.Length);  				str2 = str2.Substring (0' str2.IndexOf ("</td>"));  			}  			else {  				str4 = "N/A";  				str2 = "N/A";  			}  			varArray [i] = new ServerVar (str4' str2);  			match = match.NextMatch ();  		}  		Name = varArray [1].Value;  		IP = varArray [7].Value;  		Map = varArray [2].Value;  		Game = varArray [3].Value;  		NumPlayers = int.Parse (varArray [4].Value);  		MaxPlayers = int.Parse (varArray [6].Value);  		string str5 = "<table class=\"players\"><thead><tr><td class=\"name\">Name</td><td class=\"score\">Score</td><td class=\"ping\">Ping</td></tr></thead>";  		string str6 = ServerHTML.Substring (ServerHTML.IndexOf (str5) + str5.Length);  		str6 = str6.Substring (7' str6.IndexOf ("</table>") - 15);  		regex = new Regex ("<tr>.+?</tr>");  		regex2 = new Regex ("<td class=\".+?\">.+?</td>");  		for (match = regex.Match (str6); match.Success; match = match.NextMatch ()) {  			regex2 = new Regex ("<td class=\".+?\">.+?</td>");  			Match match2 = regex2.Match (match.Value);  			string name = getVal (match2.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			match2 = match2.NextMatch ();  			int score = int.Parse (getVal (match2.Value));  			match2 = match2.NextMatch ();  			int ping = int.Parse (getVal (match2.Value));  			list.Add (new Player (name' score' ping));  		}  		Players = list;  		regex = new Regex ("<table class=\"rules\">.+?</table>");  		string str8 = regex.Match (ServerHTML).Value;  		str8 = str8.Substring (str8.IndexOf ("<tbody>")' (str8.Length - str8.IndexOf ("<tbody>")) - 0x10);  		regex = new Regex ("<tr>.+?</tr>");  		for (match = regex.Match (str8); match.Success; match = match.NextMatch ()) {  			Match match3 = new Regex ("<td class=\".+?\">.+?</td>").Match (match.Value);  			string str9 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			match3 = match3.NextMatch ();  			string str10 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			list2.Add (new ServerVar (str9' str10));  		}  		Variables = list2;  	}  	catch (Exception exception) {  		MessageBox.Show ("Error: Unable to parse server\n\nDetails:\n" + exception.ToString ());  	}  }  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: if (ServerHTML.Length > 0) {  	try {  		ServerVar[] varArray = new ServerVar[8];  		List<Player> list = new List<Player> ();  		List<ServerVar> list2 = new List<ServerVar> ();  		Regex regex = new Regex ("<tr xmlns=\"\" class=\"server\" id=\"server_.+?\">.+?</tr>");  		string input = regex.Match (ServerHTML).Value;  		regex = new Regex ("<td class=\".+?\">.*?</td>");  		Match match = regex.Match (input);  		Regex regex2 = new Regex ("<td class=\".+?\">");  		for (int i = 0; i < 8; i++) {  			string str4;  			string str2 = match.Value;  			string str3 = regex2.Match (str2).Value;  			if (str3.Length > 0) {  				str4 = str2.Substring (11' str2.IndexOf ("\">") - 11);  				str2 = str2.Substring (str3.Length);  				str2 = str2.Substring (0' str2.IndexOf ("</td>"));  			}  			else {  				str4 = "N/A";  				str2 = "N/A";  			}  			varArray [i] = new ServerVar (str4' str2);  			match = match.NextMatch ();  		}  		Name = varArray [1].Value;  		IP = varArray [7].Value;  		Map = varArray [2].Value;  		Game = varArray [3].Value;  		NumPlayers = int.Parse (varArray [4].Value);  		MaxPlayers = int.Parse (varArray [6].Value);  		string str5 = "<table class=\"players\"><thead><tr><td class=\"name\">Name</td><td class=\"score\">Score</td><td class=\"ping\">Ping</td></tr></thead>";  		string str6 = ServerHTML.Substring (ServerHTML.IndexOf (str5) + str5.Length);  		str6 = str6.Substring (7' str6.IndexOf ("</table>") - 15);  		regex = new Regex ("<tr>.+?</tr>");  		regex2 = new Regex ("<td class=\".+?\">.+?</td>");  		for (match = regex.Match (str6); match.Success; match = match.NextMatch ()) {  			regex2 = new Regex ("<td class=\".+?\">.+?</td>");  			Match match2 = regex2.Match (match.Value);  			string name = getVal (match2.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			match2 = match2.NextMatch ();  			int score = int.Parse (getVal (match2.Value));  			match2 = match2.NextMatch ();  			int ping = int.Parse (getVal (match2.Value));  			list.Add (new Player (name' score' ping));  		}  		Players = list;  		regex = new Regex ("<table class=\"rules\">.+?</table>");  		string str8 = regex.Match (ServerHTML).Value;  		str8 = str8.Substring (str8.IndexOf ("<tbody>")' (str8.Length - str8.IndexOf ("<tbody>")) - 0x10);  		regex = new Regex ("<tr>.+?</tr>");  		for (match = regex.Match (str8); match.Success; match = match.NextMatch ()) {  			Match match3 = new Regex ("<td class=\".+?\">.+?</td>").Match (match.Value);  			string str9 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			match3 = match3.NextMatch ();  			string str10 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			list2.Add (new ServerVar (str9' str10));  		}  		Variables = list2;  	}  	catch (Exception exception) {  		MessageBox.Show ("Error: Unable to parse server\n\nDetails:\n" + exception.ToString ());  	}  }  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: if (ServerHTML.Length > 0) {  	try {  		ServerVar[] varArray = new ServerVar[8];  		List<Player> list = new List<Player> ();  		List<ServerVar> list2 = new List<ServerVar> ();  		Regex regex = new Regex ("<tr xmlns=\"\" class=\"server\" id=\"server_.+?\">.+?</tr>");  		string input = regex.Match (ServerHTML).Value;  		regex = new Regex ("<td class=\".+?\">.*?</td>");  		Match match = regex.Match (input);  		Regex regex2 = new Regex ("<td class=\".+?\">");  		for (int i = 0; i < 8; i++) {  			string str4;  			string str2 = match.Value;  			string str3 = regex2.Match (str2).Value;  			if (str3.Length > 0) {  				str4 = str2.Substring (11' str2.IndexOf ("\">") - 11);  				str2 = str2.Substring (str3.Length);  				str2 = str2.Substring (0' str2.IndexOf ("</td>"));  			}  			else {  				str4 = "N/A";  				str2 = "N/A";  			}  			varArray [i] = new ServerVar (str4' str2);  			match = match.NextMatch ();  		}  		Name = varArray [1].Value;  		IP = varArray [7].Value;  		Map = varArray [2].Value;  		Game = varArray [3].Value;  		NumPlayers = int.Parse (varArray [4].Value);  		MaxPlayers = int.Parse (varArray [6].Value);  		string str5 = "<table class=\"players\"><thead><tr><td class=\"name\">Name</td><td class=\"score\">Score</td><td class=\"ping\">Ping</td></tr></thead>";  		string str6 = ServerHTML.Substring (ServerHTML.IndexOf (str5) + str5.Length);  		str6 = str6.Substring (7' str6.IndexOf ("</table>") - 15);  		regex = new Regex ("<tr>.+?</tr>");  		regex2 = new Regex ("<td class=\".+?\">.+?</td>");  		for (match = regex.Match (str6); match.Success; match = match.NextMatch ()) {  			regex2 = new Regex ("<td class=\".+?\">.+?</td>");  			Match match2 = regex2.Match (match.Value);  			string name = getVal (match2.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			match2 = match2.NextMatch ();  			int score = int.Parse (getVal (match2.Value));  			match2 = match2.NextMatch ();  			int ping = int.Parse (getVal (match2.Value));  			list.Add (new Player (name' score' ping));  		}  		Players = list;  		regex = new Regex ("<table class=\"rules\">.+?</table>");  		string str8 = regex.Match (ServerHTML).Value;  		str8 = str8.Substring (str8.IndexOf ("<tbody>")' (str8.Length - str8.IndexOf ("<tbody>")) - 0x10);  		regex = new Regex ("<tr>.+?</tr>");  		for (match = regex.Match (str8); match.Success; match = match.NextMatch ()) {  			Match match3 = new Regex ("<td class=\".+?\">.+?</td>").Match (match.Value);  			string str9 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			match3 = match3.NextMatch ();  			string str10 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			list2.Add (new ServerVar (str9' str10));  		}  		Variables = list2;  	}  	catch (Exception exception) {  		MessageBox.Show ("Error: Unable to parse server\n\nDetails:\n" + exception.ToString ());  	}  }  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: if (ServerHTML.Length > 0) {  	try {  		ServerVar[] varArray = new ServerVar[8];  		List<Player> list = new List<Player> ();  		List<ServerVar> list2 = new List<ServerVar> ();  		Regex regex = new Regex ("<tr xmlns=\"\" class=\"server\" id=\"server_.+?\">.+?</tr>");  		string input = regex.Match (ServerHTML).Value;  		regex = new Regex ("<td class=\".+?\">.*?</td>");  		Match match = regex.Match (input);  		Regex regex2 = new Regex ("<td class=\".+?\">");  		for (int i = 0; i < 8; i++) {  			string str4;  			string str2 = match.Value;  			string str3 = regex2.Match (str2).Value;  			if (str3.Length > 0) {  				str4 = str2.Substring (11' str2.IndexOf ("\">") - 11);  				str2 = str2.Substring (str3.Length);  				str2 = str2.Substring (0' str2.IndexOf ("</td>"));  			}  			else {  				str4 = "N/A";  				str2 = "N/A";  			}  			varArray [i] = new ServerVar (str4' str2);  			match = match.NextMatch ();  		}  		Name = varArray [1].Value;  		IP = varArray [7].Value;  		Map = varArray [2].Value;  		Game = varArray [3].Value;  		NumPlayers = int.Parse (varArray [4].Value);  		MaxPlayers = int.Parse (varArray [6].Value);  		string str5 = "<table class=\"players\"><thead><tr><td class=\"name\">Name</td><td class=\"score\">Score</td><td class=\"ping\">Ping</td></tr></thead>";  		string str6 = ServerHTML.Substring (ServerHTML.IndexOf (str5) + str5.Length);  		str6 = str6.Substring (7' str6.IndexOf ("</table>") - 15);  		regex = new Regex ("<tr>.+?</tr>");  		regex2 = new Regex ("<td class=\".+?\">.+?</td>");  		for (match = regex.Match (str6); match.Success; match = match.NextMatch ()) {  			regex2 = new Regex ("<td class=\".+?\">.+?</td>");  			Match match2 = regex2.Match (match.Value);  			string name = getVal (match2.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			match2 = match2.NextMatch ();  			int score = int.Parse (getVal (match2.Value));  			match2 = match2.NextMatch ();  			int ping = int.Parse (getVal (match2.Value));  			list.Add (new Player (name' score' ping));  		}  		Players = list;  		regex = new Regex ("<table class=\"rules\">.+?</table>");  		string str8 = regex.Match (ServerHTML).Value;  		str8 = str8.Substring (str8.IndexOf ("<tbody>")' (str8.Length - str8.IndexOf ("<tbody>")) - 0x10);  		regex = new Regex ("<tr>.+?</tr>");  		for (match = regex.Match (str8); match.Success; match = match.NextMatch ()) {  			Match match3 = new Regex ("<td class=\".+?\">.+?</td>").Match (match.Value);  			string str9 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			match3 = match3.NextMatch ();  			string str10 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			list2.Add (new ServerVar (str9' str10));  		}  		Variables = list2;  	}  	catch (Exception exception) {  		MessageBox.Show ("Error: Unable to parse server\n\nDetails:\n" + exception.ToString ());  	}  }  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: if (ServerHTML.Length > 0) {  	try {  		ServerVar[] varArray = new ServerVar[8];  		List<Player> list = new List<Player> ();  		List<ServerVar> list2 = new List<ServerVar> ();  		Regex regex = new Regex ("<tr xmlns=\"\" class=\"server\" id=\"server_.+?\">.+?</tr>");  		string input = regex.Match (ServerHTML).Value;  		regex = new Regex ("<td class=\".+?\">.*?</td>");  		Match match = regex.Match (input);  		Regex regex2 = new Regex ("<td class=\".+?\">");  		for (int i = 0; i < 8; i++) {  			string str4;  			string str2 = match.Value;  			string str3 = regex2.Match (str2).Value;  			if (str3.Length > 0) {  				str4 = str2.Substring (11' str2.IndexOf ("\">") - 11);  				str2 = str2.Substring (str3.Length);  				str2 = str2.Substring (0' str2.IndexOf ("</td>"));  			}  			else {  				str4 = "N/A";  				str2 = "N/A";  			}  			varArray [i] = new ServerVar (str4' str2);  			match = match.NextMatch ();  		}  		Name = varArray [1].Value;  		IP = varArray [7].Value;  		Map = varArray [2].Value;  		Game = varArray [3].Value;  		NumPlayers = int.Parse (varArray [4].Value);  		MaxPlayers = int.Parse (varArray [6].Value);  		string str5 = "<table class=\"players\"><thead><tr><td class=\"name\">Name</td><td class=\"score\">Score</td><td class=\"ping\">Ping</td></tr></thead>";  		string str6 = ServerHTML.Substring (ServerHTML.IndexOf (str5) + str5.Length);  		str6 = str6.Substring (7' str6.IndexOf ("</table>") - 15);  		regex = new Regex ("<tr>.+?</tr>");  		regex2 = new Regex ("<td class=\".+?\">.+?</td>");  		for (match = regex.Match (str6); match.Success; match = match.NextMatch ()) {  			regex2 = new Regex ("<td class=\".+?\">.+?</td>");  			Match match2 = regex2.Match (match.Value);  			string name = getVal (match2.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			match2 = match2.NextMatch ();  			int score = int.Parse (getVal (match2.Value));  			match2 = match2.NextMatch ();  			int ping = int.Parse (getVal (match2.Value));  			list.Add (new Player (name' score' ping));  		}  		Players = list;  		regex = new Regex ("<table class=\"rules\">.+?</table>");  		string str8 = regex.Match (ServerHTML).Value;  		str8 = str8.Substring (str8.IndexOf ("<tbody>")' (str8.Length - str8.IndexOf ("<tbody>")) - 0x10);  		regex = new Regex ("<tr>.+?</tr>");  		for (match = regex.Match (str8); match.Success; match = match.NextMatch ()) {  			Match match3 = new Regex ("<td class=\".+?\">.+?</td>").Match (match.Value);  			string str9 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			match3 = match3.NextMatch ();  			string str10 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			list2.Add (new ServerVar (str9' str10));  		}  		Variables = list2;  	}  	catch (Exception exception) {  		MessageBox.Show ("Error: Unable to parse server\n\nDetails:\n" + exception.ToString ());  	}  }  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: if (ServerHTML.Length > 0) {  	try {  		ServerVar[] varArray = new ServerVar[8];  		List<Player> list = new List<Player> ();  		List<ServerVar> list2 = new List<ServerVar> ();  		Regex regex = new Regex ("<tr xmlns=\"\" class=\"server\" id=\"server_.+?\">.+?</tr>");  		string input = regex.Match (ServerHTML).Value;  		regex = new Regex ("<td class=\".+?\">.*?</td>");  		Match match = regex.Match (input);  		Regex regex2 = new Regex ("<td class=\".+?\">");  		for (int i = 0; i < 8; i++) {  			string str4;  			string str2 = match.Value;  			string str3 = regex2.Match (str2).Value;  			if (str3.Length > 0) {  				str4 = str2.Substring (11' str2.IndexOf ("\">") - 11);  				str2 = str2.Substring (str3.Length);  				str2 = str2.Substring (0' str2.IndexOf ("</td>"));  			}  			else {  				str4 = "N/A";  				str2 = "N/A";  			}  			varArray [i] = new ServerVar (str4' str2);  			match = match.NextMatch ();  		}  		Name = varArray [1].Value;  		IP = varArray [7].Value;  		Map = varArray [2].Value;  		Game = varArray [3].Value;  		NumPlayers = int.Parse (varArray [4].Value);  		MaxPlayers = int.Parse (varArray [6].Value);  		string str5 = "<table class=\"players\"><thead><tr><td class=\"name\">Name</td><td class=\"score\">Score</td><td class=\"ping\">Ping</td></tr></thead>";  		string str6 = ServerHTML.Substring (ServerHTML.IndexOf (str5) + str5.Length);  		str6 = str6.Substring (7' str6.IndexOf ("</table>") - 15);  		regex = new Regex ("<tr>.+?</tr>");  		regex2 = new Regex ("<td class=\".+?\">.+?</td>");  		for (match = regex.Match (str6); match.Success; match = match.NextMatch ()) {  			regex2 = new Regex ("<td class=\".+?\">.+?</td>");  			Match match2 = regex2.Match (match.Value);  			string name = getVal (match2.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			match2 = match2.NextMatch ();  			int score = int.Parse (getVal (match2.Value));  			match2 = match2.NextMatch ();  			int ping = int.Parse (getVal (match2.Value));  			list.Add (new Player (name' score' ping));  		}  		Players = list;  		regex = new Regex ("<table class=\"rules\">.+?</table>");  		string str8 = regex.Match (ServerHTML).Value;  		str8 = str8.Substring (str8.IndexOf ("<tbody>")' (str8.Length - str8.IndexOf ("<tbody>")) - 0x10);  		regex = new Regex ("<tr>.+?</tr>");  		for (match = regex.Match (str8); match.Success; match = match.NextMatch ()) {  			Match match3 = new Regex ("<td class=\".+?\">.+?</td>").Match (match.Value);  			string str9 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			match3 = match3.NextMatch ();  			string str10 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			list2.Add (new ServerVar (str9' str10));  		}  		Variables = list2;  	}  	catch (Exception exception) {  		MessageBox.Show ("Error: Unable to parse server\n\nDetails:\n" + exception.ToString ());  	}  }  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: if (ServerHTML.Length > 0) {  	try {  		ServerVar[] varArray = new ServerVar[8];  		List<Player> list = new List<Player> ();  		List<ServerVar> list2 = new List<ServerVar> ();  		Regex regex = new Regex ("<tr xmlns=\"\" class=\"server\" id=\"server_.+?\">.+?</tr>");  		string input = regex.Match (ServerHTML).Value;  		regex = new Regex ("<td class=\".+?\">.*?</td>");  		Match match = regex.Match (input);  		Regex regex2 = new Regex ("<td class=\".+?\">");  		for (int i = 0; i < 8; i++) {  			string str4;  			string str2 = match.Value;  			string str3 = regex2.Match (str2).Value;  			if (str3.Length > 0) {  				str4 = str2.Substring (11' str2.IndexOf ("\">") - 11);  				str2 = str2.Substring (str3.Length);  				str2 = str2.Substring (0' str2.IndexOf ("</td>"));  			}  			else {  				str4 = "N/A";  				str2 = "N/A";  			}  			varArray [i] = new ServerVar (str4' str2);  			match = match.NextMatch ();  		}  		Name = varArray [1].Value;  		IP = varArray [7].Value;  		Map = varArray [2].Value;  		Game = varArray [3].Value;  		NumPlayers = int.Parse (varArray [4].Value);  		MaxPlayers = int.Parse (varArray [6].Value);  		string str5 = "<table class=\"players\"><thead><tr><td class=\"name\">Name</td><td class=\"score\">Score</td><td class=\"ping\">Ping</td></tr></thead>";  		string str6 = ServerHTML.Substring (ServerHTML.IndexOf (str5) + str5.Length);  		str6 = str6.Substring (7' str6.IndexOf ("</table>") - 15);  		regex = new Regex ("<tr>.+?</tr>");  		regex2 = new Regex ("<td class=\".+?\">.+?</td>");  		for (match = regex.Match (str6); match.Success; match = match.NextMatch ()) {  			regex2 = new Regex ("<td class=\".+?\">.+?</td>");  			Match match2 = regex2.Match (match.Value);  			string name = getVal (match2.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			match2 = match2.NextMatch ();  			int score = int.Parse (getVal (match2.Value));  			match2 = match2.NextMatch ();  			int ping = int.Parse (getVal (match2.Value));  			list.Add (new Player (name' score' ping));  		}  		Players = list;  		regex = new Regex ("<table class=\"rules\">.+?</table>");  		string str8 = regex.Match (ServerHTML).Value;  		str8 = str8.Substring (str8.IndexOf ("<tbody>")' (str8.Length - str8.IndexOf ("<tbody>")) - 0x10);  		regex = new Regex ("<tr>.+?</tr>");  		for (match = regex.Match (str8); match.Success; match = match.NextMatch ()) {  			Match match3 = new Regex ("<td class=\".+?\">.+?</td>").Match (match.Value);  			string str9 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			match3 = match3.NextMatch ();  			string str10 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  			list2.Add (new ServerVar (str9' str10));  		}  		Variables = list2;  	}  	catch (Exception exception) {  		MessageBox.Show ("Error: Unable to parse server\n\nDetails:\n" + exception.ToString ());  	}  }  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: try {  	ServerVar[] varArray = new ServerVar[8];  	List<Player> list = new List<Player> ();  	List<ServerVar> list2 = new List<ServerVar> ();  	Regex regex = new Regex ("<tr xmlns=\"\" class=\"server\" id=\"server_.+?\">.+?</tr>");  	string input = regex.Match (ServerHTML).Value;  	regex = new Regex ("<td class=\".+?\">.*?</td>");  	Match match = regex.Match (input);  	Regex regex2 = new Regex ("<td class=\".+?\">");  	for (int i = 0; i < 8; i++) {  		string str4;  		string str2 = match.Value;  		string str3 = regex2.Match (str2).Value;  		if (str3.Length > 0) {  			str4 = str2.Substring (11' str2.IndexOf ("\">") - 11);  			str2 = str2.Substring (str3.Length);  			str2 = str2.Substring (0' str2.IndexOf ("</td>"));  		}  		else {  			str4 = "N/A";  			str2 = "N/A";  		}  		varArray [i] = new ServerVar (str4' str2);  		match = match.NextMatch ();  	}  	Name = varArray [1].Value;  	IP = varArray [7].Value;  	Map = varArray [2].Value;  	Game = varArray [3].Value;  	NumPlayers = int.Parse (varArray [4].Value);  	MaxPlayers = int.Parse (varArray [6].Value);  	string str5 = "<table class=\"players\"><thead><tr><td class=\"name\">Name</td><td class=\"score\">Score</td><td class=\"ping\">Ping</td></tr></thead>";  	string str6 = ServerHTML.Substring (ServerHTML.IndexOf (str5) + str5.Length);  	str6 = str6.Substring (7' str6.IndexOf ("</table>") - 15);  	regex = new Regex ("<tr>.+?</tr>");  	regex2 = new Regex ("<td class=\".+?\">.+?</td>");  	for (match = regex.Match (str6); match.Success; match = match.NextMatch ()) {  		regex2 = new Regex ("<td class=\".+?\">.+?</td>");  		Match match2 = regex2.Match (match.Value);  		string name = getVal (match2.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		match2 = match2.NextMatch ();  		int score = int.Parse (getVal (match2.Value));  		match2 = match2.NextMatch ();  		int ping = int.Parse (getVal (match2.Value));  		list.Add (new Player (name' score' ping));  	}  	Players = list;  	regex = new Regex ("<table class=\"rules\">.+?</table>");  	string str8 = regex.Match (ServerHTML).Value;  	str8 = str8.Substring (str8.IndexOf ("<tbody>")' (str8.Length - str8.IndexOf ("<tbody>")) - 0x10);  	regex = new Regex ("<tr>.+?</tr>");  	for (match = regex.Match (str8); match.Success; match = match.NextMatch ()) {  		Match match3 = new Regex ("<td class=\".+?\">.+?</td>").Match (match.Value);  		string str9 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		match3 = match3.NextMatch ();  		string str10 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		list2.Add (new ServerVar (str9' str10));  	}  	Variables = list2;  }  catch (Exception exception) {  	MessageBox.Show ("Error: Unable to parse server\n\nDetails:\n" + exception.ToString ());  }  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: try {  	ServerVar[] varArray = new ServerVar[8];  	List<Player> list = new List<Player> ();  	List<ServerVar> list2 = new List<ServerVar> ();  	Regex regex = new Regex ("<tr xmlns=\"\" class=\"server\" id=\"server_.+?\">.+?</tr>");  	string input = regex.Match (ServerHTML).Value;  	regex = new Regex ("<td class=\".+?\">.*?</td>");  	Match match = regex.Match (input);  	Regex regex2 = new Regex ("<td class=\".+?\">");  	for (int i = 0; i < 8; i++) {  		string str4;  		string str2 = match.Value;  		string str3 = regex2.Match (str2).Value;  		if (str3.Length > 0) {  			str4 = str2.Substring (11' str2.IndexOf ("\">") - 11);  			str2 = str2.Substring (str3.Length);  			str2 = str2.Substring (0' str2.IndexOf ("</td>"));  		}  		else {  			str4 = "N/A";  			str2 = "N/A";  		}  		varArray [i] = new ServerVar (str4' str2);  		match = match.NextMatch ();  	}  	Name = varArray [1].Value;  	IP = varArray [7].Value;  	Map = varArray [2].Value;  	Game = varArray [3].Value;  	NumPlayers = int.Parse (varArray [4].Value);  	MaxPlayers = int.Parse (varArray [6].Value);  	string str5 = "<table class=\"players\"><thead><tr><td class=\"name\">Name</td><td class=\"score\">Score</td><td class=\"ping\">Ping</td></tr></thead>";  	string str6 = ServerHTML.Substring (ServerHTML.IndexOf (str5) + str5.Length);  	str6 = str6.Substring (7' str6.IndexOf ("</table>") - 15);  	regex = new Regex ("<tr>.+?</tr>");  	regex2 = new Regex ("<td class=\".+?\">.+?</td>");  	for (match = regex.Match (str6); match.Success; match = match.NextMatch ()) {  		regex2 = new Regex ("<td class=\".+?\">.+?</td>");  		Match match2 = regex2.Match (match.Value);  		string name = getVal (match2.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		match2 = match2.NextMatch ();  		int score = int.Parse (getVal (match2.Value));  		match2 = match2.NextMatch ();  		int ping = int.Parse (getVal (match2.Value));  		list.Add (new Player (name' score' ping));  	}  	Players = list;  	regex = new Regex ("<table class=\"rules\">.+?</table>");  	string str8 = regex.Match (ServerHTML).Value;  	str8 = str8.Substring (str8.IndexOf ("<tbody>")' (str8.Length - str8.IndexOf ("<tbody>")) - 0x10);  	regex = new Regex ("<tr>.+?</tr>");  	for (match = regex.Match (str8); match.Success; match = match.NextMatch ()) {  		Match match3 = new Regex ("<td class=\".+?\">.+?</td>").Match (match.Value);  		string str9 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		match3 = match3.NextMatch ();  		string str10 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		list2.Add (new ServerVar (str9' str10));  	}  	Variables = list2;  }  catch (Exception exception) {  	MessageBox.Show ("Error: Unable to parse server\n\nDetails:\n" + exception.ToString ());  }  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: try {  	ServerVar[] varArray = new ServerVar[8];  	List<Player> list = new List<Player> ();  	List<ServerVar> list2 = new List<ServerVar> ();  	Regex regex = new Regex ("<tr xmlns=\"\" class=\"server\" id=\"server_.+?\">.+?</tr>");  	string input = regex.Match (ServerHTML).Value;  	regex = new Regex ("<td class=\".+?\">.*?</td>");  	Match match = regex.Match (input);  	Regex regex2 = new Regex ("<td class=\".+?\">");  	for (int i = 0; i < 8; i++) {  		string str4;  		string str2 = match.Value;  		string str3 = regex2.Match (str2).Value;  		if (str3.Length > 0) {  			str4 = str2.Substring (11' str2.IndexOf ("\">") - 11);  			str2 = str2.Substring (str3.Length);  			str2 = str2.Substring (0' str2.IndexOf ("</td>"));  		}  		else {  			str4 = "N/A";  			str2 = "N/A";  		}  		varArray [i] = new ServerVar (str4' str2);  		match = match.NextMatch ();  	}  	Name = varArray [1].Value;  	IP = varArray [7].Value;  	Map = varArray [2].Value;  	Game = varArray [3].Value;  	NumPlayers = int.Parse (varArray [4].Value);  	MaxPlayers = int.Parse (varArray [6].Value);  	string str5 = "<table class=\"players\"><thead><tr><td class=\"name\">Name</td><td class=\"score\">Score</td><td class=\"ping\">Ping</td></tr></thead>";  	string str6 = ServerHTML.Substring (ServerHTML.IndexOf (str5) + str5.Length);  	str6 = str6.Substring (7' str6.IndexOf ("</table>") - 15);  	regex = new Regex ("<tr>.+?</tr>");  	regex2 = new Regex ("<td class=\".+?\">.+?</td>");  	for (match = regex.Match (str6); match.Success; match = match.NextMatch ()) {  		regex2 = new Regex ("<td class=\".+?\">.+?</td>");  		Match match2 = regex2.Match (match.Value);  		string name = getVal (match2.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		match2 = match2.NextMatch ();  		int score = int.Parse (getVal (match2.Value));  		match2 = match2.NextMatch ();  		int ping = int.Parse (getVal (match2.Value));  		list.Add (new Player (name' score' ping));  	}  	Players = list;  	regex = new Regex ("<table class=\"rules\">.+?</table>");  	string str8 = regex.Match (ServerHTML).Value;  	str8 = str8.Substring (str8.IndexOf ("<tbody>")' (str8.Length - str8.IndexOf ("<tbody>")) - 0x10);  	regex = new Regex ("<tr>.+?</tr>");  	for (match = regex.Match (str8); match.Success; match = match.NextMatch ()) {  		Match match3 = new Regex ("<td class=\".+?\">.+?</td>").Match (match.Value);  		string str9 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		match3 = match3.NextMatch ();  		string str10 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		list2.Add (new ServerVar (str9' str10));  	}  	Variables = list2;  }  catch (Exception exception) {  	MessageBox.Show ("Error: Unable to parse server\n\nDetails:\n" + exception.ToString ());  }  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: try {  	ServerVar[] varArray = new ServerVar[8];  	List<Player> list = new List<Player> ();  	List<ServerVar> list2 = new List<ServerVar> ();  	Regex regex = new Regex ("<tr xmlns=\"\" class=\"server\" id=\"server_.+?\">.+?</tr>");  	string input = regex.Match (ServerHTML).Value;  	regex = new Regex ("<td class=\".+?\">.*?</td>");  	Match match = regex.Match (input);  	Regex regex2 = new Regex ("<td class=\".+?\">");  	for (int i = 0; i < 8; i++) {  		string str4;  		string str2 = match.Value;  		string str3 = regex2.Match (str2).Value;  		if (str3.Length > 0) {  			str4 = str2.Substring (11' str2.IndexOf ("\">") - 11);  			str2 = str2.Substring (str3.Length);  			str2 = str2.Substring (0' str2.IndexOf ("</td>"));  		}  		else {  			str4 = "N/A";  			str2 = "N/A";  		}  		varArray [i] = new ServerVar (str4' str2);  		match = match.NextMatch ();  	}  	Name = varArray [1].Value;  	IP = varArray [7].Value;  	Map = varArray [2].Value;  	Game = varArray [3].Value;  	NumPlayers = int.Parse (varArray [4].Value);  	MaxPlayers = int.Parse (varArray [6].Value);  	string str5 = "<table class=\"players\"><thead><tr><td class=\"name\">Name</td><td class=\"score\">Score</td><td class=\"ping\">Ping</td></tr></thead>";  	string str6 = ServerHTML.Substring (ServerHTML.IndexOf (str5) + str5.Length);  	str6 = str6.Substring (7' str6.IndexOf ("</table>") - 15);  	regex = new Regex ("<tr>.+?</tr>");  	regex2 = new Regex ("<td class=\".+?\">.+?</td>");  	for (match = regex.Match (str6); match.Success; match = match.NextMatch ()) {  		regex2 = new Regex ("<td class=\".+?\">.+?</td>");  		Match match2 = regex2.Match (match.Value);  		string name = getVal (match2.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		match2 = match2.NextMatch ();  		int score = int.Parse (getVal (match2.Value));  		match2 = match2.NextMatch ();  		int ping = int.Parse (getVal (match2.Value));  		list.Add (new Player (name' score' ping));  	}  	Players = list;  	regex = new Regex ("<table class=\"rules\">.+?</table>");  	string str8 = regex.Match (ServerHTML).Value;  	str8 = str8.Substring (str8.IndexOf ("<tbody>")' (str8.Length - str8.IndexOf ("<tbody>")) - 0x10);  	regex = new Regex ("<tr>.+?</tr>");  	for (match = regex.Match (str8); match.Success; match = match.NextMatch ()) {  		Match match3 = new Regex ("<td class=\".+?\">.+?</td>").Match (match.Value);  		string str9 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		match3 = match3.NextMatch ();  		string str10 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		list2.Add (new ServerVar (str9' str10));  	}  	Variables = list2;  }  catch (Exception exception) {  	MessageBox.Show ("Error: Unable to parse server\n\nDetails:\n" + exception.ToString ());  }  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: try {  	ServerVar[] varArray = new ServerVar[8];  	List<Player> list = new List<Player> ();  	List<ServerVar> list2 = new List<ServerVar> ();  	Regex regex = new Regex ("<tr xmlns=\"\" class=\"server\" id=\"server_.+?\">.+?</tr>");  	string input = regex.Match (ServerHTML).Value;  	regex = new Regex ("<td class=\".+?\">.*?</td>");  	Match match = regex.Match (input);  	Regex regex2 = new Regex ("<td class=\".+?\">");  	for (int i = 0; i < 8; i++) {  		string str4;  		string str2 = match.Value;  		string str3 = regex2.Match (str2).Value;  		if (str3.Length > 0) {  			str4 = str2.Substring (11' str2.IndexOf ("\">") - 11);  			str2 = str2.Substring (str3.Length);  			str2 = str2.Substring (0' str2.IndexOf ("</td>"));  		}  		else {  			str4 = "N/A";  			str2 = "N/A";  		}  		varArray [i] = new ServerVar (str4' str2);  		match = match.NextMatch ();  	}  	Name = varArray [1].Value;  	IP = varArray [7].Value;  	Map = varArray [2].Value;  	Game = varArray [3].Value;  	NumPlayers = int.Parse (varArray [4].Value);  	MaxPlayers = int.Parse (varArray [6].Value);  	string str5 = "<table class=\"players\"><thead><tr><td class=\"name\">Name</td><td class=\"score\">Score</td><td class=\"ping\">Ping</td></tr></thead>";  	string str6 = ServerHTML.Substring (ServerHTML.IndexOf (str5) + str5.Length);  	str6 = str6.Substring (7' str6.IndexOf ("</table>") - 15);  	regex = new Regex ("<tr>.+?</tr>");  	regex2 = new Regex ("<td class=\".+?\">.+?</td>");  	for (match = regex.Match (str6); match.Success; match = match.NextMatch ()) {  		regex2 = new Regex ("<td class=\".+?\">.+?</td>");  		Match match2 = regex2.Match (match.Value);  		string name = getVal (match2.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		match2 = match2.NextMatch ();  		int score = int.Parse (getVal (match2.Value));  		match2 = match2.NextMatch ();  		int ping = int.Parse (getVal (match2.Value));  		list.Add (new Player (name' score' ping));  	}  	Players = list;  	regex = new Regex ("<table class=\"rules\">.+?</table>");  	string str8 = regex.Match (ServerHTML).Value;  	str8 = str8.Substring (str8.IndexOf ("<tbody>")' (str8.Length - str8.IndexOf ("<tbody>")) - 0x10);  	regex = new Regex ("<tr>.+?</tr>");  	for (match = regex.Match (str8); match.Success; match = match.NextMatch ()) {  		Match match3 = new Regex ("<td class=\".+?\">.+?</td>").Match (match.Value);  		string str9 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		match3 = match3.NextMatch ();  		string str10 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		list2.Add (new ServerVar (str9' str10));  	}  	Variables = list2;  }  catch (Exception exception) {  	MessageBox.Show ("Error: Unable to parse server\n\nDetails:\n" + exception.ToString ());  }  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: try {  	ServerVar[] varArray = new ServerVar[8];  	List<Player> list = new List<Player> ();  	List<ServerVar> list2 = new List<ServerVar> ();  	Regex regex = new Regex ("<tr xmlns=\"\" class=\"server\" id=\"server_.+?\">.+?</tr>");  	string input = regex.Match (ServerHTML).Value;  	regex = new Regex ("<td class=\".+?\">.*?</td>");  	Match match = regex.Match (input);  	Regex regex2 = new Regex ("<td class=\".+?\">");  	for (int i = 0; i < 8; i++) {  		string str4;  		string str2 = match.Value;  		string str3 = regex2.Match (str2).Value;  		if (str3.Length > 0) {  			str4 = str2.Substring (11' str2.IndexOf ("\">") - 11);  			str2 = str2.Substring (str3.Length);  			str2 = str2.Substring (0' str2.IndexOf ("</td>"));  		}  		else {  			str4 = "N/A";  			str2 = "N/A";  		}  		varArray [i] = new ServerVar (str4' str2);  		match = match.NextMatch ();  	}  	Name = varArray [1].Value;  	IP = varArray [7].Value;  	Map = varArray [2].Value;  	Game = varArray [3].Value;  	NumPlayers = int.Parse (varArray [4].Value);  	MaxPlayers = int.Parse (varArray [6].Value);  	string str5 = "<table class=\"players\"><thead><tr><td class=\"name\">Name</td><td class=\"score\">Score</td><td class=\"ping\">Ping</td></tr></thead>";  	string str6 = ServerHTML.Substring (ServerHTML.IndexOf (str5) + str5.Length);  	str6 = str6.Substring (7' str6.IndexOf ("</table>") - 15);  	regex = new Regex ("<tr>.+?</tr>");  	regex2 = new Regex ("<td class=\".+?\">.+?</td>");  	for (match = regex.Match (str6); match.Success; match = match.NextMatch ()) {  		regex2 = new Regex ("<td class=\".+?\">.+?</td>");  		Match match2 = regex2.Match (match.Value);  		string name = getVal (match2.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		match2 = match2.NextMatch ();  		int score = int.Parse (getVal (match2.Value));  		match2 = match2.NextMatch ();  		int ping = int.Parse (getVal (match2.Value));  		list.Add (new Player (name' score' ping));  	}  	Players = list;  	regex = new Regex ("<table class=\"rules\">.+?</table>");  	string str8 = regex.Match (ServerHTML).Value;  	str8 = str8.Substring (str8.IndexOf ("<tbody>")' (str8.Length - str8.IndexOf ("<tbody>")) - 0x10);  	regex = new Regex ("<tr>.+?</tr>");  	for (match = regex.Match (str8); match.Success; match = match.NextMatch ()) {  		Match match3 = new Regex ("<td class=\".+?\">.+?</td>").Match (match.Value);  		string str9 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		match3 = match3.NextMatch ();  		string str10 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		list2.Add (new ServerVar (str9' str10));  	}  	Variables = list2;  }  catch (Exception exception) {  	MessageBox.Show ("Error: Unable to parse server\n\nDetails:\n" + exception.ToString ());  }  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: try {  	ServerVar[] varArray = new ServerVar[8];  	List<Player> list = new List<Player> ();  	List<ServerVar> list2 = new List<ServerVar> ();  	Regex regex = new Regex ("<tr xmlns=\"\" class=\"server\" id=\"server_.+?\">.+?</tr>");  	string input = regex.Match (ServerHTML).Value;  	regex = new Regex ("<td class=\".+?\">.*?</td>");  	Match match = regex.Match (input);  	Regex regex2 = new Regex ("<td class=\".+?\">");  	for (int i = 0; i < 8; i++) {  		string str4;  		string str2 = match.Value;  		string str3 = regex2.Match (str2).Value;  		if (str3.Length > 0) {  			str4 = str2.Substring (11' str2.IndexOf ("\">") - 11);  			str2 = str2.Substring (str3.Length);  			str2 = str2.Substring (0' str2.IndexOf ("</td>"));  		}  		else {  			str4 = "N/A";  			str2 = "N/A";  		}  		varArray [i] = new ServerVar (str4' str2);  		match = match.NextMatch ();  	}  	Name = varArray [1].Value;  	IP = varArray [7].Value;  	Map = varArray [2].Value;  	Game = varArray [3].Value;  	NumPlayers = int.Parse (varArray [4].Value);  	MaxPlayers = int.Parse (varArray [6].Value);  	string str5 = "<table class=\"players\"><thead><tr><td class=\"name\">Name</td><td class=\"score\">Score</td><td class=\"ping\">Ping</td></tr></thead>";  	string str6 = ServerHTML.Substring (ServerHTML.IndexOf (str5) + str5.Length);  	str6 = str6.Substring (7' str6.IndexOf ("</table>") - 15);  	regex = new Regex ("<tr>.+?</tr>");  	regex2 = new Regex ("<td class=\".+?\">.+?</td>");  	for (match = regex.Match (str6); match.Success; match = match.NextMatch ()) {  		regex2 = new Regex ("<td class=\".+?\">.+?</td>");  		Match match2 = regex2.Match (match.Value);  		string name = getVal (match2.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		match2 = match2.NextMatch ();  		int score = int.Parse (getVal (match2.Value));  		match2 = match2.NextMatch ();  		int ping = int.Parse (getVal (match2.Value));  		list.Add (new Player (name' score' ping));  	}  	Players = list;  	regex = new Regex ("<table class=\"rules\">.+?</table>");  	string str8 = regex.Match (ServerHTML).Value;  	str8 = str8.Substring (str8.IndexOf ("<tbody>")' (str8.Length - str8.IndexOf ("<tbody>")) - 0x10);  	regex = new Regex ("<tr>.+?</tr>");  	for (match = regex.Match (str8); match.Success; match = match.NextMatch ()) {  		Match match3 = new Regex ("<td class=\".+?\">.+?</td>").Match (match.Value);  		string str9 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		match3 = match3.NextMatch ();  		string str10 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		list2.Add (new ServerVar (str9' str10));  	}  	Variables = list2;  }  catch (Exception exception) {  	MessageBox.Show ("Error: Unable to parse server\n\nDetails:\n" + exception.ToString ());  }  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: try {  	ServerVar[] varArray = new ServerVar[8];  	List<Player> list = new List<Player> ();  	List<ServerVar> list2 = new List<ServerVar> ();  	Regex regex = new Regex ("<tr xmlns=\"\" class=\"server\" id=\"server_.+?\">.+?</tr>");  	string input = regex.Match (ServerHTML).Value;  	regex = new Regex ("<td class=\".+?\">.*?</td>");  	Match match = regex.Match (input);  	Regex regex2 = new Regex ("<td class=\".+?\">");  	for (int i = 0; i < 8; i++) {  		string str4;  		string str2 = match.Value;  		string str3 = regex2.Match (str2).Value;  		if (str3.Length > 0) {  			str4 = str2.Substring (11' str2.IndexOf ("\">") - 11);  			str2 = str2.Substring (str3.Length);  			str2 = str2.Substring (0' str2.IndexOf ("</td>"));  		}  		else {  			str4 = "N/A";  			str2 = "N/A";  		}  		varArray [i] = new ServerVar (str4' str2);  		match = match.NextMatch ();  	}  	Name = varArray [1].Value;  	IP = varArray [7].Value;  	Map = varArray [2].Value;  	Game = varArray [3].Value;  	NumPlayers = int.Parse (varArray [4].Value);  	MaxPlayers = int.Parse (varArray [6].Value);  	string str5 = "<table class=\"players\"><thead><tr><td class=\"name\">Name</td><td class=\"score\">Score</td><td class=\"ping\">Ping</td></tr></thead>";  	string str6 = ServerHTML.Substring (ServerHTML.IndexOf (str5) + str5.Length);  	str6 = str6.Substring (7' str6.IndexOf ("</table>") - 15);  	regex = new Regex ("<tr>.+?</tr>");  	regex2 = new Regex ("<td class=\".+?\">.+?</td>");  	for (match = regex.Match (str6); match.Success; match = match.NextMatch ()) {  		regex2 = new Regex ("<td class=\".+?\">.+?</td>");  		Match match2 = regex2.Match (match.Value);  		string name = getVal (match2.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		match2 = match2.NextMatch ();  		int score = int.Parse (getVal (match2.Value));  		match2 = match2.NextMatch ();  		int ping = int.Parse (getVal (match2.Value));  		list.Add (new Player (name' score' ping));  	}  	Players = list;  	regex = new Regex ("<table class=\"rules\">.+?</table>");  	string str8 = regex.Match (ServerHTML).Value;  	str8 = str8.Substring (str8.IndexOf ("<tbody>")' (str8.Length - str8.IndexOf ("<tbody>")) - 0x10);  	regex = new Regex ("<tr>.+?</tr>");  	for (match = regex.Match (str8); match.Success; match = match.NextMatch ()) {  		Match match3 = new Regex ("<td class=\".+?\">.+?</td>").Match (match.Value);  		string str9 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		match3 = match3.NextMatch ();  		string str10 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		list2.Add (new ServerVar (str9' str10));  	}  	Variables = list2;  }  catch (Exception exception) {  	MessageBox.Show ("Error: Unable to parse server\n\nDetails:\n" + exception.ToString ());  }  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: try {  	ServerVar[] varArray = new ServerVar[8];  	List<Player> list = new List<Player> ();  	List<ServerVar> list2 = new List<ServerVar> ();  	Regex regex = new Regex ("<tr xmlns=\"\" class=\"server\" id=\"server_.+?\">.+?</tr>");  	string input = regex.Match (ServerHTML).Value;  	regex = new Regex ("<td class=\".+?\">.*?</td>");  	Match match = regex.Match (input);  	Regex regex2 = new Regex ("<td class=\".+?\">");  	for (int i = 0; i < 8; i++) {  		string str4;  		string str2 = match.Value;  		string str3 = regex2.Match (str2).Value;  		if (str3.Length > 0) {  			str4 = str2.Substring (11' str2.IndexOf ("\">") - 11);  			str2 = str2.Substring (str3.Length);  			str2 = str2.Substring (0' str2.IndexOf ("</td>"));  		}  		else {  			str4 = "N/A";  			str2 = "N/A";  		}  		varArray [i] = new ServerVar (str4' str2);  		match = match.NextMatch ();  	}  	Name = varArray [1].Value;  	IP = varArray [7].Value;  	Map = varArray [2].Value;  	Game = varArray [3].Value;  	NumPlayers = int.Parse (varArray [4].Value);  	MaxPlayers = int.Parse (varArray [6].Value);  	string str5 = "<table class=\"players\"><thead><tr><td class=\"name\">Name</td><td class=\"score\">Score</td><td class=\"ping\">Ping</td></tr></thead>";  	string str6 = ServerHTML.Substring (ServerHTML.IndexOf (str5) + str5.Length);  	str6 = str6.Substring (7' str6.IndexOf ("</table>") - 15);  	regex = new Regex ("<tr>.+?</tr>");  	regex2 = new Regex ("<td class=\".+?\">.+?</td>");  	for (match = regex.Match (str6); match.Success; match = match.NextMatch ()) {  		regex2 = new Regex ("<td class=\".+?\">.+?</td>");  		Match match2 = regex2.Match (match.Value);  		string name = getVal (match2.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		match2 = match2.NextMatch ();  		int score = int.Parse (getVal (match2.Value));  		match2 = match2.NextMatch ();  		int ping = int.Parse (getVal (match2.Value));  		list.Add (new Player (name' score' ping));  	}  	Players = list;  	regex = new Regex ("<table class=\"rules\">.+?</table>");  	string str8 = regex.Match (ServerHTML).Value;  	str8 = str8.Substring (str8.IndexOf ("<tbody>")' (str8.Length - str8.IndexOf ("<tbody>")) - 0x10);  	regex = new Regex ("<tr>.+?</tr>");  	for (match = regex.Match (str8); match.Success; match = match.NextMatch ()) {  		Match match3 = new Regex ("<td class=\".+?\">.+?</td>").Match (match.Value);  		string str9 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		match3 = match3.NextMatch ();  		string str10 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		list2.Add (new ServerVar (str9' str10));  	}  	Variables = list2;  }  catch (Exception exception) {  	MessageBox.Show ("Error: Unable to parse server\n\nDetails:\n" + exception.ToString ());  }  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: try {  	ServerVar[] varArray = new ServerVar[8];  	List<Player> list = new List<Player> ();  	List<ServerVar> list2 = new List<ServerVar> ();  	Regex regex = new Regex ("<tr xmlns=\"\" class=\"server\" id=\"server_.+?\">.+?</tr>");  	string input = regex.Match (ServerHTML).Value;  	regex = new Regex ("<td class=\".+?\">.*?</td>");  	Match match = regex.Match (input);  	Regex regex2 = new Regex ("<td class=\".+?\">");  	for (int i = 0; i < 8; i++) {  		string str4;  		string str2 = match.Value;  		string str3 = regex2.Match (str2).Value;  		if (str3.Length > 0) {  			str4 = str2.Substring (11' str2.IndexOf ("\">") - 11);  			str2 = str2.Substring (str3.Length);  			str2 = str2.Substring (0' str2.IndexOf ("</td>"));  		}  		else {  			str4 = "N/A";  			str2 = "N/A";  		}  		varArray [i] = new ServerVar (str4' str2);  		match = match.NextMatch ();  	}  	Name = varArray [1].Value;  	IP = varArray [7].Value;  	Map = varArray [2].Value;  	Game = varArray [3].Value;  	NumPlayers = int.Parse (varArray [4].Value);  	MaxPlayers = int.Parse (varArray [6].Value);  	string str5 = "<table class=\"players\"><thead><tr><td class=\"name\">Name</td><td class=\"score\">Score</td><td class=\"ping\">Ping</td></tr></thead>";  	string str6 = ServerHTML.Substring (ServerHTML.IndexOf (str5) + str5.Length);  	str6 = str6.Substring (7' str6.IndexOf ("</table>") - 15);  	regex = new Regex ("<tr>.+?</tr>");  	regex2 = new Regex ("<td class=\".+?\">.+?</td>");  	for (match = regex.Match (str6); match.Success; match = match.NextMatch ()) {  		regex2 = new Regex ("<td class=\".+?\">.+?</td>");  		Match match2 = regex2.Match (match.Value);  		string name = getVal (match2.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		match2 = match2.NextMatch ();  		int score = int.Parse (getVal (match2.Value));  		match2 = match2.NextMatch ();  		int ping = int.Parse (getVal (match2.Value));  		list.Add (new Player (name' score' ping));  	}  	Players = list;  	regex = new Regex ("<table class=\"rules\">.+?</table>");  	string str8 = regex.Match (ServerHTML).Value;  	str8 = str8.Substring (str8.IndexOf ("<tbody>")' (str8.Length - str8.IndexOf ("<tbody>")) - 0x10);  	regex = new Regex ("<tr>.+?</tr>");  	for (match = regex.Match (str8); match.Success; match = match.NextMatch ()) {  		Match match3 = new Regex ("<td class=\".+?\">.+?</td>").Match (match.Value);  		string str9 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		match3 = match3.NextMatch ();  		string str10 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		list2.Add (new ServerVar (str9' str10));  	}  	Variables = list2;  }  catch (Exception exception) {  	MessageBox.Show ("Error: Unable to parse server\n\nDetails:\n" + exception.ToString ());  }  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: try {  	ServerVar[] varArray = new ServerVar[8];  	List<Player> list = new List<Player> ();  	List<ServerVar> list2 = new List<ServerVar> ();  	Regex regex = new Regex ("<tr xmlns=\"\" class=\"server\" id=\"server_.+?\">.+?</tr>");  	string input = regex.Match (ServerHTML).Value;  	regex = new Regex ("<td class=\".+?\">.*?</td>");  	Match match = regex.Match (input);  	Regex regex2 = new Regex ("<td class=\".+?\">");  	for (int i = 0; i < 8; i++) {  		string str4;  		string str2 = match.Value;  		string str3 = regex2.Match (str2).Value;  		if (str3.Length > 0) {  			str4 = str2.Substring (11' str2.IndexOf ("\">") - 11);  			str2 = str2.Substring (str3.Length);  			str2 = str2.Substring (0' str2.IndexOf ("</td>"));  		}  		else {  			str4 = "N/A";  			str2 = "N/A";  		}  		varArray [i] = new ServerVar (str4' str2);  		match = match.NextMatch ();  	}  	Name = varArray [1].Value;  	IP = varArray [7].Value;  	Map = varArray [2].Value;  	Game = varArray [3].Value;  	NumPlayers = int.Parse (varArray [4].Value);  	MaxPlayers = int.Parse (varArray [6].Value);  	string str5 = "<table class=\"players\"><thead><tr><td class=\"name\">Name</td><td class=\"score\">Score</td><td class=\"ping\">Ping</td></tr></thead>";  	string str6 = ServerHTML.Substring (ServerHTML.IndexOf (str5) + str5.Length);  	str6 = str6.Substring (7' str6.IndexOf ("</table>") - 15);  	regex = new Regex ("<tr>.+?</tr>");  	regex2 = new Regex ("<td class=\".+?\">.+?</td>");  	for (match = regex.Match (str6); match.Success; match = match.NextMatch ()) {  		regex2 = new Regex ("<td class=\".+?\">.+?</td>");  		Match match2 = regex2.Match (match.Value);  		string name = getVal (match2.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		match2 = match2.NextMatch ();  		int score = int.Parse (getVal (match2.Value));  		match2 = match2.NextMatch ();  		int ping = int.Parse (getVal (match2.Value));  		list.Add (new Player (name' score' ping));  	}  	Players = list;  	regex = new Regex ("<table class=\"rules\">.+?</table>");  	string str8 = regex.Match (ServerHTML).Value;  	str8 = str8.Substring (str8.IndexOf ("<tbody>")' (str8.Length - str8.IndexOf ("<tbody>")) - 0x10);  	regex = new Regex ("<tr>.+?</tr>");  	for (match = regex.Match (str8); match.Success; match = match.NextMatch ()) {  		Match match3 = new Regex ("<td class=\".+?\">.+?</td>").Match (match.Value);  		string str9 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		match3 = match3.NextMatch ();  		string str10 = getVal (match3.Value).Replace ("&gt;"' ">").Replace ("&lt;"' "<").Replace ("&amp;"' "&");  		list2.Add (new ServerVar (str9' str10));  	}  	Variables = list2;  }  catch (Exception exception) {  	MessageBox.Show ("Error: Unable to parse server\n\nDetails:\n" + exception.ToString ());  }  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: for (int i = 0; i < 8; i++) {  	string str4;  	string str2 = match.Value;  	string str3 = regex2.Match (str2).Value;  	if (str3.Length > 0) {  		str4 = str2.Substring (11' str2.IndexOf ("\">") - 11);  		str2 = str2.Substring (str3.Length);  		str2 = str2.Substring (0' str2.IndexOf ("</td>"));  	}  	else {  		str4 = "N/A";  		str2 = "N/A";  	}  	varArray [i] = new ServerVar (str4' str2);  	match = match.NextMatch ();  }  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: for (int i = 0; i < 8; i++) {  	string str4;  	string str2 = match.Value;  	string str3 = regex2.Match (str2).Value;  	if (str3.Length > 0) {  		str4 = str2.Substring (11' str2.IndexOf ("\">") - 11);  		str2 = str2.Substring (str3.Length);  		str2 = str2.Substring (0' str2.IndexOf ("</td>"));  	}  	else {  		str4 = "N/A";  		str2 = "N/A";  	}  	varArray [i] = new ServerVar (str4' str2);  	match = match.NextMatch ();  }  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: for (int i = 0; i < 8; i++) {  	string str4;  	string str2 = match.Value;  	string str3 = regex2.Match (str2).Value;  	if (str3.Length > 0) {  		str4 = str2.Substring (11' str2.IndexOf ("\">") - 11);  		str2 = str2.Substring (str3.Length);  		str2 = str2.Substring (0' str2.IndexOf ("</td>"));  	}  	else {  		str4 = "N/A";  		str2 = "N/A";  	}  	varArray [i] = new ServerVar (str4' str2);  	match = match.NextMatch ();  }  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: if (str3.Length > 0) {  	str4 = str2.Substring (11' str2.IndexOf ("\">") - 11);  	str2 = str2.Substring (str3.Length);  	str2 = str2.Substring (0' str2.IndexOf ("</td>"));  }  else {  	str4 = "N/A";  	str2 = "N/A";  }  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: if (str3.Length > 0) {  	str4 = str2.Substring (11' str2.IndexOf ("\">") - 11);  	str2 = str2.Substring (str3.Length);  	str2 = str2.Substring (0' str2.IndexOf ("</td>"));  }  else {  	str4 = "N/A";  	str2 = "N/A";  }  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: str4 = str2.Substring (11' str2.IndexOf ("\">") - 11);  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: str4 = str2.Substring (11' str2.IndexOf ("\">") - 11);  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: IP = varArray [7].Value;  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: Map = varArray [2].Value;  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: Game = varArray [3].Value;  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: NumPlayers = int.Parse (varArray [4].Value);  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: MaxPlayers = int.Parse (varArray [6].Value);  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: str6 = str6.Substring (7' str6.IndexOf ("</table>") - 15);  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,Server,The following statement contains a magic number: str6 = str6.Substring (7' str6.IndexOf ("</table>") - 15);  
Magic Number,Tremulous_Server_Search,Server,C:\repos\Foe-of-Eternity_Tremulous-Server-Search\Server.cs,getVal,The following statement contains a magic number: return td.Substring (match.Value.Length' (td.Length - match.Value.Length) - 5);  
