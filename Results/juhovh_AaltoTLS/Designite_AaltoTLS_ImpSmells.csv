Implementation smell,Namespace,Class,File,Method,Description
Complex Method,AaltoTLS,SecureSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\SecureSession.cs,ReceiveHandshakeCallback,Cyclomatic complexity of the method is 10
Complex Method,AaltoTLS.RecordLayer,RecordHandler,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\RecordHandler.cs,TransformRecordBytes,Cyclomatic complexity of the method is 10
Complex Method,AaltoTLS.HandshakeLayer,HandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\HandshakeSession.cs,ProcessMessage,Cyclomatic complexity of the method is 11
Complex Method,AaltoTLS.HandshakeLayer,ServerHandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\ServerHandshakeSession.cs,SelectCipherSuite,Cyclomatic complexity of the method is 10
Complex Method,AaltoTLS.HandshakeLayer,ServerHandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\ServerHandshakeSession.cs,ProcessClientHello,Cyclomatic complexity of the method is 13
Complex Method,AaltoTLS.HandshakeLayer.Protocol,HandshakeCertificateRequest,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeCertificateRequest.cs,EncodeDataBytes,Cyclomatic complexity of the method is 10
Complex Method,AaltoTLS.HandshakeLayer.Protocol,HandshakeClientHello,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeClientHello.cs,EncodeDataBytes,Cyclomatic complexity of the method is 10
Complex Method,AaltoTLS.HandshakeLayer.Protocol,HandshakeMessage,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeMessage.cs,GetInstance,Cyclomatic complexity of the method is 13
Complex Method,AaltoTLS.Alerts,Alert,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\Alerts\Alert.cs,ValidateForProtocolVersion,Cyclomatic complexity of the method is 15
Long Parameter List,AaltoTLS,TLSStream,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\TLSStream.cs,BeginRead,The method has 5 parameters. Parameters: buffer' offset' count' asyncCallback' asyncState
Long Parameter List,AaltoTLS,TLSStream,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\TLSStream.cs,BeginWrite,The method has 5 parameters. Parameters: buffer' offset' count' asyncCallback' asyncState
Long Parameter List,AaltoTLS,TLSStream,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\TLSStream.cs,BeginAuthenticateAsClient,The method has 6 parameters. Parameters: targetHost' clientCertificates' enabledSslProtocols' checkCertificateRevocation' asyncCallback' asyncState
Long Parameter List,AaltoTLS,TLSStream,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\TLSStream.cs,BeginAuthenticateAsServer,The method has 6 parameters. Parameters: serverCertificate' clientCertificateRequired' enabledSslProtocols' checkCertificateRevocation' asyncCallback' asyncState
Long Parameter List,AaltoTLS,TLSStream,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\TLSStream.cs,DefaultCertificateSelectionCallback,The method has 5 parameters. Parameters: sender' targetHost' localCertificates' remoteCertificate' acceptableIssuers
Long Parameter List,AaltoTLS,SecureSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\SecureSession.cs,BeginSend,The method has 5 parameters. Parameters: buffer' offset' count' asyncCallback' asyncState
Long Parameter List,AaltoTLS.RecordLayer,RecordHandler,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\RecordHandler.cs,CreateAEADEncryptor,The method has 7 parameters. Parameters: cipherSuite' record' key' fixedIV' recordIV' seqNum' nonceExplicit
Long Parameter List,AaltoTLS.RecordLayer,RecordHandler,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\RecordHandler.cs,CreateAEADDecryptor,The method has 5 parameters. Parameters: cipherSuite' record' key' fixedIV' seqNum
Long Parameter List,AaltoTLS.HandshakeLayer,ServerHandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\ServerHandshakeSession.cs,SelectCipherSuite,The method has 8 parameters. Parameters: pluginManager' clientVersion' minVersion' maxVersion' clientSuites' serverSuites' certificateSelectionCallback' availableCertificates
Long Identifier,AaltoTLS,SecurityParameters,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\SecurityParameters.cs,,The length of the parameter ServerCertificateValidationCallback is 35.
Long Identifier,AaltoTLS,SecurityParameters,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\SecurityParameters.cs,,The length of the parameter ClientCertificateSelectionCallback is 34.
Long Identifier,AaltoTLS,SecurityParameters,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\SecurityParameters.cs,,The length of the parameter ServerCertificateSelectionCallback is 34.
Long Identifier,AaltoTLS,TLSStream,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\TLSStream.cs,TLSStream,The length of the parameter userCertificateValidationCallback is 33.
Long Identifier,AaltoTLS,TLSStream,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\TLSStream.cs,TLSStream,The length of the parameter userCertificateValidationCallback is 33.
Long Identifier,AaltoTLS,TLSStream,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\TLSStream.cs,TLSStream,The length of the parameter userCertificateSelectionCallback is 32.
Long Identifier,AaltoTLS.HandshakeLayer,ClientHandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\ClientHandshakeSession.cs,,The length of the parameter _certificateValidationCallback is 30.
Long Statement,AaltoTLS,SecureSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\SecureSession.cs,ProcessSendHandshakePacket,The length of the statement  "			Record[] records = _handshakePacketizer.ProcessHandshakeMessages(_handshakeSession.NegotiatedVersion' messages' _recordStream.MaximumFragmentLength); " is 149.
Long Statement,AaltoTLS.RecordLayer,RecordHandler,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\RecordHandler.cs,ProcessOutputRecord,The length of the statement  "				_encryptor = CreateAEADEncryptor(_outputCipherSuite' output' _outputKey' _outputFixedIV' _outputRecordIV' seqNum' out nonceExplicit); " is 133.
Long Statement,AaltoTLS.RecordLayer,TLSRecordStream,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\TLSRecordStream.cs,BeginSend,The length of the statement  "					asyncSendResult.SetComplete(new RecordTooLargeException("Trying to send a too large fragment: " + record.Fragment.Length)); " is 123.
Long Statement,AaltoTLS.HandshakeLayer,ClientHandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\ClientHandshakeSession.cs,ProcessServerKeyExchange,The length of the statement  "				byte[] signedData = new byte[_connectionState.ClientRandom.Length + _connectionState.ServerRandom.Length + serverKeys.Length]; " is 126.
Long Statement,AaltoTLS.HandshakeLayer,ClientHandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\ClientHandshakeSession.cs,ProcessServerKeyExchange,The length of the statement  "				Buffer.BlockCopy(_connectionState.ServerRandom' 0' signedData' _connectionState.ClientRandom.Length' _connectionState.ServerRandom.Length); " is 139.
Long Statement,AaltoTLS.HandshakeLayer,ClientHandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\ClientHandshakeSession.cs,ProcessServerKeyExchange,The length of the statement  "				Buffer.BlockCopy(serverKeys' 0' signedData' _connectionState.ClientRandom.Length + _connectionState.ServerRandom.Length' serverKeys.Length); " is 140.
Long Statement,AaltoTLS.HandshakeLayer,ClientHandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\ClientHandshakeSession.cs,ProcessLocalChangeCipherSpec,The length of the statement  "				verifyData = _cipherSuite.PseudoRandomFunction.GetBytes(_connectionState.MasterSecret' "client finished"' hash' length); " is 120.
Long Statement,AaltoTLS.HandshakeLayer,ClientHandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\ClientHandshakeSession.cs,ProcessFinished,The length of the statement  "				ourVerifyData = _cipherSuite.PseudoRandomFunction.GetBytes(_connectionState.MasterSecret' "server finished"' hash' length); " is 123.
Long Statement,AaltoTLS.HandshakeLayer,ServerHandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\ServerHandshakeSession.cs,ProcessClientHello,The length of the statement  "			_cipherSuite = SelectCipherSuite(_pluginManager' _clientVersion' _minVersion' _maxVersion' clientHello.CipherSuites' new List<UInt16>(_supportedCipherSuites)' _certificateSelectionCallback' _availableCertificates); " is 214.
Long Statement,AaltoTLS.HandshakeLayer,ServerHandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\ServerHandshakeSession.cs,ProcessClientHello,The length of the statement  "				byte[] dataToSign = new byte[_connectionState.ClientRandom.Length + _connectionState.ServerRandom.Length + serverKeys.Length]; " is 126.
Long Statement,AaltoTLS.HandshakeLayer,ServerHandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\ServerHandshakeSession.cs,ProcessClientHello,The length of the statement  "				Buffer.BlockCopy(_connectionState.ServerRandom' 0' dataToSign' _connectionState.ClientRandom.Length' _connectionState.ServerRandom.Length); " is 139.
Long Statement,AaltoTLS.HandshakeLayer,ServerHandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\ServerHandshakeSession.cs,ProcessClientHello,The length of the statement  "				Buffer.BlockCopy(serverKeys' 0' dataToSign' _connectionState.ClientRandom.Length + _connectionState.ServerRandom.Length' serverKeys.Length); " is 140.
Long Statement,AaltoTLS.HandshakeLayer,ServerHandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\ServerHandshakeSession.cs,ProcessFinished,The length of the statement  "				ourVerifyData = _cipherSuite.PseudoRandomFunction.GetBytes(_connectionState.MasterSecret' "client finished"' hash' length); " is 123.
Long Statement,AaltoTLS.HandshakeLayer,ServerHandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\ServerHandshakeSession.cs,ProcessLocalChangeCipherSpec,The length of the statement  "				verifyData = _cipherSuite.PseudoRandomFunction.GetBytes(_connectionState.MasterSecret' "server finished"' hash' length); " is 120.
Virtual Method Call from Constructor,AaltoTLS,KeyBlock,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\KeyBlock.cs,KeyBlock,The constructor "KeyBlock" calls a virtual method "CreateDeriveBytes".
Empty Catch Block,AaltoTLS,SecureSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\SecureSession.cs,ProcessSendFatalAlert,The method has an empty catch block.
Magic Number,AaltoTLS.RecordLayer,RecordHandler,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\RecordHandler.cs,SetCipherSuite,The following statement contains a magic number: byte[] seed = new byte[64];
Magic Number,AaltoTLS.RecordLayer,RecordHandler,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\RecordHandler.cs,SetCipherSuite,The following statement contains a magic number: Array.Copy(connectionState.ServerRandom' 0' seed' 0' 32);
Magic Number,AaltoTLS.RecordLayer,RecordHandler,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\RecordHandler.cs,SetCipherSuite,The following statement contains a magic number: Array.Copy(connectionState.ClientRandom' 0' seed' 32' 32);
Magic Number,AaltoTLS.RecordLayer,RecordHandler,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\RecordHandler.cs,SetCipherSuite,The following statement contains a magic number: Array.Copy(connectionState.ClientRandom' 0' seed' 32' 32);
Magic Number,AaltoTLS.RecordLayer,RecordHandler,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\RecordHandler.cs,ProcessOutputRecord,The following statement contains a magic number: (_outputSequenceNumber >> 48) != 0
Magic Number,AaltoTLS.RecordLayer,RecordHandler,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\RecordHandler.cs,ProcessOutputRecord,The following statement contains a magic number: seqNum = (((UInt64)_outputEpoch) << 48) | _outputSequenceNumber;
Magic Number,AaltoTLS.RecordLayer,RecordHandler,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\RecordHandler.cs,ProcessInputRecord,The following statement contains a magic number: seqNum = (((UInt64)input.Epoch) << 48) | input.SequenceNumber;
Magic Number,AaltoTLS.RecordLayer,RecordHandler,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\RecordHandler.cs,GeneratePadding,The following statement contains a magic number: int extra = (new System.Random()).Next(2);
Magic Number,AaltoTLS.RecordLayer,RecordHandler,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\RecordHandler.cs,GeneratePadding,The following statement contains a magic number: paddingLength + extra*blockSize < 256
Magic Number,AaltoTLS.RecordLayer,RecordHandler,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\RecordHandler.cs,GetAdditionalBytes,The following statement contains a magic number: additional = new byte[11];
Magic Number,AaltoTLS.RecordLayer,RecordHandler,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\RecordHandler.cs,GetAdditionalBytes,The following statement contains a magic number: Buffer.BlockCopy(seqData' 0' additional' 0' 8);
Magic Number,AaltoTLS.RecordLayer,RecordHandler,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\RecordHandler.cs,GetAdditionalBytes,The following statement contains a magic number: additional[8]  = (byte) (type);
Magic Number,AaltoTLS.RecordLayer,RecordHandler,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\RecordHandler.cs,GetAdditionalBytes,The following statement contains a magic number: additional[9]  = (byte) (length >> 8);
Magic Number,AaltoTLS.RecordLayer,RecordHandler,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\RecordHandler.cs,GetAdditionalBytes,The following statement contains a magic number: additional[9]  = (byte) (length >> 8);
Magic Number,AaltoTLS.RecordLayer,RecordHandler,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\RecordHandler.cs,GetAdditionalBytes,The following statement contains a magic number: additional[10] = (byte) (length);
Magic Number,AaltoTLS.RecordLayer,TLSRecordStream,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\TLSRecordStream.cs,ReadCallback,The following statement contains a magic number: _innerStream.BeginRead(_inputBuffer'  					                       _inputBufferCount'  					                       5-_inputBufferCount'  					                       new AsyncCallback(ReadCallback)'  					                       asyncReadResult);
Magic Number,AaltoTLS.RecordLayer,TLSRecordStream,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\TLSRecordStream.cs,ReadCallback,The following statement contains a magic number: _inputBufferCount < 5
Magic Number,AaltoTLS.RecordLayer,TLSRecordStream,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\TLSRecordStream.cs,ReadCallback,The following statement contains a magic number: int fragmentLength = (_inputBuffer[3] << 8) | _inputBuffer[4];
Magic Number,AaltoTLS.RecordLayer,TLSRecordStream,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\TLSRecordStream.cs,ReadCallback,The following statement contains a magic number: int fragmentLength = (_inputBuffer[3] << 8) | _inputBuffer[4];
Magic Number,AaltoTLS.RecordLayer,TLSRecordStream,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\TLSRecordStream.cs,ReadCallback,The following statement contains a magic number: int fragmentLength = (_inputBuffer[3] << 8) | _inputBuffer[4];
Magic Number,AaltoTLS.RecordLayer,TLSRecordStream,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\TLSRecordStream.cs,ReadCallback,The following statement contains a magic number: 5+fragmentLength > _inputBuffer.Length
Magic Number,AaltoTLS.RecordLayer,TLSRecordStream,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\TLSRecordStream.cs,ReadCallback,The following statement contains a magic number: Buffer.BlockCopy(_inputBuffer' 5' record.Fragment' 0' fragmentLength);
Magic Number,AaltoTLS.RecordLayer,TLSRecordStream,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\TLSRecordStream.cs,StartReceive,The following statement contains a magic number: _innerStream.BeginRead(_inputBuffer' 0' 5' new AsyncCallback(ReadCallback)' asyncReceiveResult);
Magic Number,AaltoTLS.RecordLayer,Record,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\Record.cs,Record,The following statement contains a magic number: _version = new ProtocolVersion(header[1]' header[2]);
Magic Number,AaltoTLS.RecordLayer,Record,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\Record.cs,Record,The following statement contains a magic number: _epoch = (UInt16) ((header[3] << 8) | header[4]);
Magic Number,AaltoTLS.RecordLayer,Record,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\Record.cs,Record,The following statement contains a magic number: _epoch = (UInt16) ((header[3] << 8) | header[4]);
Magic Number,AaltoTLS.RecordLayer,Record,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\Record.cs,Record,The following statement contains a magic number: _epoch = (UInt16) ((header[3] << 8) | header[4]);
Magic Number,AaltoTLS.RecordLayer,Record,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\Record.cs,Record,The following statement contains a magic number: _seqNum <<= 8;
Magic Number,AaltoTLS.RecordLayer,Record,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\Record.cs,Record,The following statement contains a magic number: _seqNum |= header[5+i];
Magic Number,AaltoTLS.RecordLayer,Record,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\Record.cs,Record,The following statement contains a magic number: i<6
Magic Number,AaltoTLS.RecordLayer,Record,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\Record.cs,Record,The following statement contains a magic number: _fragment = new byte[(header[11] << 8) | header[12]];
Magic Number,AaltoTLS.RecordLayer,Record,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\Record.cs,Record,The following statement contains a magic number: _fragment = new byte[(header[11] << 8) | header[12]];
Magic Number,AaltoTLS.RecordLayer,Record,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\Record.cs,Record,The following statement contains a magic number: _fragment = new byte[(header[11] << 8) | header[12]];
Magic Number,AaltoTLS.RecordLayer,Record,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\Record.cs,GetBytes,The following statement contains a magic number: ret = new byte[13+fragment.Length];
Magic Number,AaltoTLS.RecordLayer,Record,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\Record.cs,GetBytes,The following statement contains a magic number: ret[2] = Version.Minor;
Magic Number,AaltoTLS.RecordLayer,Record,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\Record.cs,GetBytes,The following statement contains a magic number: ret[3] = (byte) (_epoch >> 8);
Magic Number,AaltoTLS.RecordLayer,Record,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\Record.cs,GetBytes,The following statement contains a magic number: ret[3] = (byte) (_epoch >> 8);
Magic Number,AaltoTLS.RecordLayer,Record,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\Record.cs,GetBytes,The following statement contains a magic number: ret[4] = (byte) (_epoch);
Magic Number,AaltoTLS.RecordLayer,Record,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\Record.cs,GetBytes,The following statement contains a magic number: ret[5+i] = (byte) (_seqNum >> (5-i));
Magic Number,AaltoTLS.RecordLayer,Record,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\Record.cs,GetBytes,The following statement contains a magic number: ret[5+i] = (byte) (_seqNum >> (5-i));
Magic Number,AaltoTLS.RecordLayer,Record,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\Record.cs,GetBytes,The following statement contains a magic number: i<6
Magic Number,AaltoTLS.RecordLayer,Record,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\Record.cs,GetBytes,The following statement contains a magic number: ret[11] = (byte) (fragment.Length >> 8);
Magic Number,AaltoTLS.RecordLayer,Record,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\Record.cs,GetBytes,The following statement contains a magic number: ret[11] = (byte) (fragment.Length >> 8);
Magic Number,AaltoTLS.RecordLayer,Record,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\Record.cs,GetBytes,The following statement contains a magic number: ret[12] = (byte) (fragment.Length);
Magic Number,AaltoTLS.RecordLayer,Record,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\RecordLayer\Record.cs,GetBytes,The following statement contains a magic number: Array.Copy(fragment' 0' ret' 12' fragment.Length);
Magic Number,AaltoTLS.HandshakeLayer,HandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\HandshakeSession.cs,GenerateMasterSecret,The following statement contains a magic number: byte[] seed = new byte[64];
Magic Number,AaltoTLS.HandshakeLayer,HandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\HandshakeSession.cs,GenerateMasterSecret,The following statement contains a magic number: Array.Copy(connectionState.ClientRandom' 0' seed' 0' 32);
Magic Number,AaltoTLS.HandshakeLayer,HandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\HandshakeSession.cs,GenerateMasterSecret,The following statement contains a magic number: Array.Copy(connectionState.ServerRandom' 0' seed' 32' 32);
Magic Number,AaltoTLS.HandshakeLayer,HandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\HandshakeSession.cs,GenerateMasterSecret,The following statement contains a magic number: Array.Copy(connectionState.ServerRandom' 0' seed' 32' 32);
Magic Number,AaltoTLS.HandshakeLayer,HandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\HandshakeSession.cs,GetSignatureHashAlgorithm,The following statement contains a magic number: switch (hashAlgorithmType) {  			case 1:  				hashAlgorithm = new MD5CryptoServiceProvider();  				break;  			case 2:  				hashAlgorithm = new SHA1CryptoServiceProvider();  				break;  			case 4:  				hashAlgorithm = new SHA256Managed();  				break;  			case 5:  				hashAlgorithm = new SHA384Managed();  				break;  			case 6:  				hashAlgorithm = new SHA512Managed();  				break;  			default:  				throw new AlertException(AlertDescription.InternalError'  				                         "Unsupported hash algorithm type: " + hashAlgorithmType);  			}
Magic Number,AaltoTLS.HandshakeLayer,HandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\HandshakeSession.cs,GetSignatureHashAlgorithm,The following statement contains a magic number: switch (hashAlgorithmType) {  			case 1:  				hashAlgorithm = new MD5CryptoServiceProvider();  				break;  			case 2:  				hashAlgorithm = new SHA1CryptoServiceProvider();  				break;  			case 4:  				hashAlgorithm = new SHA256Managed();  				break;  			case 5:  				hashAlgorithm = new SHA384Managed();  				break;  			case 6:  				hashAlgorithm = new SHA512Managed();  				break;  			default:  				throw new AlertException(AlertDescription.InternalError'  				                         "Unsupported hash algorithm type: " + hashAlgorithmType);  			}
Magic Number,AaltoTLS.HandshakeLayer,HandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\HandshakeSession.cs,GetSignatureHashAlgorithm,The following statement contains a magic number: switch (hashAlgorithmType) {  			case 1:  				hashAlgorithm = new MD5CryptoServiceProvider();  				break;  			case 2:  				hashAlgorithm = new SHA1CryptoServiceProvider();  				break;  			case 4:  				hashAlgorithm = new SHA256Managed();  				break;  			case 5:  				hashAlgorithm = new SHA384Managed();  				break;  			case 6:  				hashAlgorithm = new SHA512Managed();  				break;  			default:  				throw new AlertException(AlertDescription.InternalError'  				                         "Unsupported hash algorithm type: " + hashAlgorithmType);  			}
Magic Number,AaltoTLS.HandshakeLayer,HandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\HandshakeSession.cs,GetSignatureHashAlgorithm,The following statement contains a magic number: switch (hashAlgorithmType) {  			case 1:  				hashAlgorithm = new MD5CryptoServiceProvider();  				break;  			case 2:  				hashAlgorithm = new SHA1CryptoServiceProvider();  				break;  			case 4:  				hashAlgorithm = new SHA256Managed();  				break;  			case 5:  				hashAlgorithm = new SHA384Managed();  				break;  			case 6:  				hashAlgorithm = new SHA512Managed();  				break;  			default:  				throw new AlertException(AlertDescription.InternalError'  				                         "Unsupported hash algorithm type: " + hashAlgorithmType);  			}
Magic Number,AaltoTLS.HandshakeLayer,HandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\HandshakeSession.cs,GenerateSignature,The following statement contains a magic number: byte hashAlgorithmType = 2;
Magic Number,AaltoTLS.HandshakeLayer,HandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\HandshakeSession.cs,GenerateSignature,The following statement contains a magic number: temp = new byte[signedParams.Length + 2];
Magic Number,AaltoTLS.HandshakeLayer,HandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\HandshakeSession.cs,GenerateSignature,The following statement contains a magic number: temp = new byte[signedParams.Length + 2 + signature.Length];
Magic Number,AaltoTLS.HandshakeLayer,HandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\HandshakeSession.cs,GenerateSignature,The following statement contains a magic number: temp[signedParams.Length]   = (byte) (signature.Length >> 8);
Magic Number,AaltoTLS.HandshakeLayer,HandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\HandshakeSession.cs,GenerateSignature,The following statement contains a magic number: Buffer.BlockCopy(signature' 0' temp' signedParams.Length+2' signature.Length);
Magic Number,AaltoTLS.HandshakeLayer,HandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\HandshakeSession.cs,VerifySignature,The following statement contains a magic number: int len = (signedParams[position] << 8) | signedParams[position+1];
Magic Number,AaltoTLS.HandshakeLayer,HandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\HandshakeSession.cs,VerifySignature,The following statement contains a magic number: len != signedParams.Length-position-2
Magic Number,AaltoTLS.HandshakeLayer,HandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\HandshakeSession.cs,VerifySignature,The following statement contains a magic number: position += 2;
Magic Number,AaltoTLS.HandshakeLayer,TLSHandshakePacketizer,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\TLSHandshakePacketizer.cs,ProcessHandshakeRecord,The following statement contains a magic number: int dataLength = (inputBuffer[_inputtedBytes+1] << 16) |  				                 (inputBuffer[_inputtedBytes+2] << 8)  |  				                  inputBuffer[_inputtedBytes+3];
Magic Number,AaltoTLS.HandshakeLayer,TLSHandshakePacketizer,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\TLSHandshakePacketizer.cs,ProcessHandshakeRecord,The following statement contains a magic number: int dataLength = (inputBuffer[_inputtedBytes+1] << 16) |  				                 (inputBuffer[_inputtedBytes+2] << 8)  |  				                  inputBuffer[_inputtedBytes+3];
Magic Number,AaltoTLS.HandshakeLayer,TLSHandshakePacketizer,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\TLSHandshakePacketizer.cs,ProcessHandshakeRecord,The following statement contains a magic number: int dataLength = (inputBuffer[_inputtedBytes+1] << 16) |  				                 (inputBuffer[_inputtedBytes+2] << 8)  |  				                  inputBuffer[_inputtedBytes+3];
Magic Number,AaltoTLS.HandshakeLayer,TLSHandshakePacketizer,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\TLSHandshakePacketizer.cs,ProcessHandshakeRecord,The following statement contains a magic number: int dataLength = (inputBuffer[_inputtedBytes+1] << 16) |  				                 (inputBuffer[_inputtedBytes+2] << 8)  |  				                  inputBuffer[_inputtedBytes+3];
Magic Number,AaltoTLS.HandshakeLayer,TLSHandshakePacketizer,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\TLSHandshakePacketizer.cs,ProcessHandshakeRecord,The following statement contains a magic number: 4+dataLength > _inputStream.Length-_inputtedBytes
Magic Number,AaltoTLS.HandshakeLayer,TLSHandshakePacketizer,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\TLSHandshakePacketizer.cs,ProcessHandshakeRecord,The following statement contains a magic number: byte[] msgData = new byte[4+dataLength];
Magic Number,AaltoTLS.HandshakeLayer,TLSHandshakePacketizer,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\TLSHandshakePacketizer.cs,ProcessHandshakeRecord,The following statement contains a magic number: _inputStream.Length-_inputtedBytes >= 4
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeCertificate,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeCertificate.cs,EncodeDataBytes,The following statement contains a magic number: certsLength += 3;
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeCertificate,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeCertificate.cs,DecodeDataBytes,The following statement contains a magic number: readBytes += 3+certLength;
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeCertificateRequest,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeCertificateRequest.cs,EncodeDataBytes,The following statement contains a magic number: CertificateTypes.Count > 255
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeCertificateRequest,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeCertificateRequest.cs,EncodeDataBytes,The following statement contains a magic number: SignatureAndHashAlgorithms.Count > 65535
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeCertificateRequest,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeCertificateRequest.cs,EncodeDataBytes,The following statement contains a magic number: authsLength += 2;
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeCertificateRequest,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeCertificateRequest.cs,EncodeDataBytes,The following statement contains a magic number: authsLength > 65535
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeCertificateRequest,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeCertificateRequest.cs,DecodeDataBytes,The following statement contains a magic number: (sighashLength%2) != 0
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeCertificateRequest,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeCertificateRequest.cs,DecodeDataBytes,The following statement contains a magic number: SignatureAndHashAlgorithms.Add((UInt16)((sighashData[i] << 8) | sighashData[i+1]));
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeCertificateRequest,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeCertificateRequest.cs,DecodeDataBytes,The following statement contains a magic number: int authLength = (authData[position] << 8) | authData[position+1];
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeCertificateRequest,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeCertificateRequest.cs,DecodeDataBytes,The following statement contains a magic number: position += 2;
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeClientHello,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeClientHello.cs,EncodeDataBytes,The following statement contains a magic number: stream.WriteUInt16((UInt16) (2*CipherSuites.Count));
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeClientHello,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeClientHello.cs,EncodeDataBytes,The following statement contains a magic number: length += 4 + ext.Data.Length;
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeClientHello,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeClientHello.cs,DecodeDataBytes,The following statement contains a magic number: byte[] randomBytes = stream.ReadBytes(32);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeClientHello,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeClientHello.cs,DecodeDataBytes,The following statement contains a magic number: UInt16 extensionType = (UInt16) ((extensionList[pos] << 8) | extensionList[pos+1]);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeClientHello,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeClientHello.cs,DecodeDataBytes,The following statement contains a magic number: UInt16 extensionDataLength = (UInt16) ((extensionList[pos+2] << 8) | extensionList[pos+3]);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeClientHello,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeClientHello.cs,DecodeDataBytes,The following statement contains a magic number: UInt16 extensionDataLength = (UInt16) ((extensionList[pos+2] << 8) | extensionList[pos+3]);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeClientHello,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeClientHello.cs,DecodeDataBytes,The following statement contains a magic number: UInt16 extensionDataLength = (UInt16) ((extensionList[pos+2] << 8) | extensionList[pos+3]);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeClientHello,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeClientHello.cs,DecodeDataBytes,The following statement contains a magic number: pos += 4;
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeClientHello,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeClientHello.cs,DecodeDataBytes,The following statement contains a magic number: pos+4 <= extensionList.Length
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeRandom,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeRandom.cs,HandshakeRandom,The following statement contains a magic number: TimeSpan ts = (DateTime.UtcNow - new DateTime(1970' 1' 1' 0' 0' 0' 0));
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeRandom,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeRandom.cs,HandshakeRandom,The following statement contains a magic number: byte[] randomBytes = new byte[28];
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeRandom,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeRandom.cs,HandshakeRandom,The following statement contains a magic number: unix_time |= ((UInt32) data[0]) << 24;
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeRandom,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeRandom.cs,HandshakeRandom,The following statement contains a magic number: unix_time |= ((UInt32) data[1]) << 16;
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeRandom,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeRandom.cs,HandshakeRandom,The following statement contains a magic number: unix_time |= ((UInt32) data[2]) << 8;
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeRandom,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeRandom.cs,HandshakeRandom,The following statement contains a magic number: unix_time |= ((UInt32) data[2]) << 8;
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeRandom,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeRandom.cs,HandshakeRandom,The following statement contains a magic number: unix_time |= (UInt32) data[3];
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeRandom,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeRandom.cs,HandshakeRandom,The following statement contains a magic number: byte[] randomBytes = new byte[28];
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeRandom,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeRandom.cs,HandshakeRandom,The following statement contains a magic number: Array.Copy(data' 4' randomBytes' 0' 28);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeRandom,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeRandom.cs,HandshakeRandom,The following statement contains a magic number: Array.Copy(data' 4' randomBytes' 0' 28);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeRandom,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeRandom.cs,GetBytes,The following statement contains a magic number: byte[] data = new byte[32];
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeRandom,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeRandom.cs,GetBytes,The following statement contains a magic number: data[0] = (byte) ((gmt_unix_time >> 24) & 0xff);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeRandom,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeRandom.cs,GetBytes,The following statement contains a magic number: data[1] = (byte) ((gmt_unix_time >> 16) & 0xff);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeRandom,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeRandom.cs,GetBytes,The following statement contains a magic number: data[2] = (byte) ((gmt_unix_time >>  8) & 0xff);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeRandom,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeRandom.cs,GetBytes,The following statement contains a magic number: data[2] = (byte) ((gmt_unix_time >>  8) & 0xff);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeRandom,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeRandom.cs,GetBytes,The following statement contains a magic number: data[3] = (byte) (gmt_unix_time & 0xff);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeRandom,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeRandom.cs,GetBytes,The following statement contains a magic number: Array.Copy(random_bytes' 0' data' 4' 28);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeRandom,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeRandom.cs,GetBytes,The following statement contains a magic number: Array.Copy(random_bytes' 0' data' 4' 28);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeServerHello,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeServerHello.cs,EncodeDataBytes,The following statement contains a magic number: length += 4 + ext.Data.Length;
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeServerHello,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeServerHello.cs,DecodeDataBytes,The following statement contains a magic number: byte[] randomBytes = stream.ReadBytes(32);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeServerHello,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeServerHello.cs,DecodeDataBytes,The following statement contains a magic number: UInt16 extensionType = (UInt16) ((extensionList[pos] << 8) | extensionList[pos+1]);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeServerHello,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeServerHello.cs,DecodeDataBytes,The following statement contains a magic number: UInt16 extensionDataLength = (UInt16) ((extensionList[pos+2] << 8) | extensionList[pos+3]);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeServerHello,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeServerHello.cs,DecodeDataBytes,The following statement contains a magic number: UInt16 extensionDataLength = (UInt16) ((extensionList[pos+2] << 8) | extensionList[pos+3]);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeServerHello,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeServerHello.cs,DecodeDataBytes,The following statement contains a magic number: UInt16 extensionDataLength = (UInt16) ((extensionList[pos+2] << 8) | extensionList[pos+3]);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeServerHello,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeServerHello.cs,DecodeDataBytes,The following statement contains a magic number: pos += 4;
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeServerHello,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeServerHello.cs,DecodeDataBytes,The following statement contains a magic number: pos+4 <= extensionList.Length
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeStream,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeStream.cs,ReadUInt16,The following statement contains a magic number: data = _reader.ReadBytes(2);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeStream,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeStream.cs,ReadUInt16,The following statement contains a magic number: data.Length != 2
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeStream,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeStream.cs,ReadUInt24,The following statement contains a magic number: idata = _reader.ReadBytes(3);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeStream,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeStream.cs,ReadUInt24,The following statement contains a magic number: idata.Length != 3
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeStream,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeStream.cs,ReadUInt24,The following statement contains a magic number: byte[] odata = new byte[4];
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeStream,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeStream.cs,ReadUInt32,The following statement contains a magic number: data = _reader.ReadBytes(4);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeStream,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeStream.cs,ReadUInt32,The following statement contains a magic number: data.Length != 4
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HandshakeStream,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeStream.cs,WriteUInt24,The following statement contains a magic number: _writer.Write(data' 1' 3);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HelloSignatureAlgorithmsExtension,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HelloSignatureAlgorithmsExtension.cs,EncodeDataBytes,The following statement contains a magic number: byte[] data = new byte[2+2*count];
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HelloSignatureAlgorithmsExtension,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HelloSignatureAlgorithmsExtension.cs,EncodeDataBytes,The following statement contains a magic number: byte[] data = new byte[2+2*count];
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HelloSignatureAlgorithmsExtension,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HelloSignatureAlgorithmsExtension.cs,EncodeDataBytes,The following statement contains a magic number: data[0] = (byte)((2*count)>>8);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HelloSignatureAlgorithmsExtension,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HelloSignatureAlgorithmsExtension.cs,EncodeDataBytes,The following statement contains a magic number: data[0] = (byte)((2*count)>>8);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HelloSignatureAlgorithmsExtension,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HelloSignatureAlgorithmsExtension.cs,EncodeDataBytes,The following statement contains a magic number: data[1] = (byte)(2*count);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HelloSignatureAlgorithmsExtension,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HelloSignatureAlgorithmsExtension.cs,EncodeDataBytes,The following statement contains a magic number: data[2+i*2] = (byte)(SupportedSignatureAlgorithms[i]>>8);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HelloSignatureAlgorithmsExtension,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HelloSignatureAlgorithmsExtension.cs,EncodeDataBytes,The following statement contains a magic number: data[2+i*2] = (byte)(SupportedSignatureAlgorithms[i]>>8);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HelloSignatureAlgorithmsExtension,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HelloSignatureAlgorithmsExtension.cs,EncodeDataBytes,The following statement contains a magic number: data[2+i*2] = (byte)(SupportedSignatureAlgorithms[i]>>8);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HelloSignatureAlgorithmsExtension,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HelloSignatureAlgorithmsExtension.cs,EncodeDataBytes,The following statement contains a magic number: data[2+i*2+1] = (byte)(SupportedSignatureAlgorithms[i]);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HelloSignatureAlgorithmsExtension,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HelloSignatureAlgorithmsExtension.cs,EncodeDataBytes,The following statement contains a magic number: data[2+i*2+1] = (byte)(SupportedSignatureAlgorithms[i]);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HelloSignatureAlgorithmsExtension,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HelloSignatureAlgorithmsExtension.cs,DecodeDataBytes,The following statement contains a magic number: data.Length < 2 || (data.Length % 2) != 0
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HelloSignatureAlgorithmsExtension,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HelloSignatureAlgorithmsExtension.cs,DecodeDataBytes,The following statement contains a magic number: data.Length < 2 || (data.Length % 2) != 0
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HelloSignatureAlgorithmsExtension,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HelloSignatureAlgorithmsExtension.cs,DecodeDataBytes,The following statement contains a magic number: int len = (data[0] << 8) | data[1];
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HelloSignatureAlgorithmsExtension,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HelloSignatureAlgorithmsExtension.cs,DecodeDataBytes,The following statement contains a magic number: len != data.Length-2
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HelloSignatureAlgorithmsExtension,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HelloSignatureAlgorithmsExtension.cs,DecodeDataBytes,The following statement contains a magic number: UInt16 sighash = (UInt16)((data[2+i*2] << 8) | data[2+i*2]);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HelloSignatureAlgorithmsExtension,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HelloSignatureAlgorithmsExtension.cs,DecodeDataBytes,The following statement contains a magic number: UInt16 sighash = (UInt16)((data[2+i*2] << 8) | data[2+i*2]);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HelloSignatureAlgorithmsExtension,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HelloSignatureAlgorithmsExtension.cs,DecodeDataBytes,The following statement contains a magic number: UInt16 sighash = (UInt16)((data[2+i*2] << 8) | data[2+i*2]);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HelloSignatureAlgorithmsExtension,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HelloSignatureAlgorithmsExtension.cs,DecodeDataBytes,The following statement contains a magic number: UInt16 sighash = (UInt16)((data[2+i*2] << 8) | data[2+i*2]);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HelloSignatureAlgorithmsExtension,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HelloSignatureAlgorithmsExtension.cs,DecodeDataBytes,The following statement contains a magic number: UInt16 sighash = (UInt16)((data[2+i*2] << 8) | data[2+i*2]);
Magic Number,AaltoTLS.HandshakeLayer.Protocol,HelloSignatureAlgorithmsExtension,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HelloSignatureAlgorithmsExtension.cs,DecodeDataBytes,The following statement contains a magic number: i<len/2
Magic Number,AaltoTLS.Alerts,Alert,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\Alerts\Alert.cs,Alert,The following statement contains a magic number: data.Length == 2
Magic Number,AaltoTLS.Alerts,Alert,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\Alerts\Alert.cs,GetBytes,The following statement contains a magic number: byte[] ret = new byte[2];
Missing Default,AaltoTLS.HandshakeLayer,HandshakeSession,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\HandshakeSession.cs,ProcessMessage,The following switch statement is missing a default case: switch (message.Type) {  			case HandshakeMessageType.HelloRequest:  				ProcessHelloRequest();  				break;  			case HandshakeMessageType.ClientHello:  				ProcessClientHello((HandshakeClientHello) message);  				break;  			case HandshakeMessageType.ServerHello:  				ProcessServerHello((HandshakeServerHello) message);  				break;  			case HandshakeMessageType.NewSessionTicket:  				ProcessNewSessionTicket(message);  				break;  			case HandshakeMessageType.Certificate:  				ProcessCertificate((HandshakeCertificate) message);  				break;  			case HandshakeMessageType.ServerKeyExchange:  				ProcessServerKeyExchange(message);  				break;  			case HandshakeMessageType.CertificateRequest:  				ProcessCertificateRequest((HandshakeCertificateRequest)message);  				break;  			case HandshakeMessageType.ServerHelloDone:  				ProcessServerHelloDone(message);  				break;  			case HandshakeMessageType.CertificateVerify:  				ProcessCertificateVerify(message);  				break;  			case HandshakeMessageType.ClientKeyExchange:  				ProcessClientKeyExchange(message);  				break;  			case HandshakeMessageType.Finished:  				ProcessFinished(message);  				break;  			}
Missing Default,AaltoTLS.HandshakeLayer.Protocol,HandshakeMessage,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\HandshakeLayer\Protocol\HandshakeMessage.cs,GetInstance,The following switch statement is missing a default case: switch ((HandshakeMessageType) data[0]) {  			case HandshakeMessageType.HelloRequest:  				ret = new HandshakeMessage(HandshakeMessageType.HelloRequest' version);  				break;  			case HandshakeMessageType.ClientHello:  				ret = new HandshakeClientHello();  				break;  			case HandshakeMessageType.ServerHello:  				ret = new HandshakeServerHello();  				break;  			case HandshakeMessageType.HelloVerifyRequest:  				ret = new HandshakeMessage(HandshakeMessageType.HelloVerifyRequest' version);  				break;  			case HandshakeMessageType.NewSessionTicket:  				ret = new HandshakeMessage(HandshakeMessageType.NewSessionTicket' version);  				break;  			case HandshakeMessageType.Certificate:  				ret = new HandshakeCertificate(version);  				break;  			case HandshakeMessageType.ServerKeyExchange:  				ret = new HandshakeMessage(HandshakeMessageType.ServerKeyExchange' version);  				break;  			case HandshakeMessageType.CertificateRequest:  				ret = new HandshakeCertificateRequest(version);  				break;  			case HandshakeMessageType.ServerHelloDone:  				ret = new HandshakeMessage(HandshakeMessageType.ServerHelloDone' version);  				break;  			case HandshakeMessageType.CertificateVerify:  				ret = new HandshakeMessage(HandshakeMessageType.CertificateVerify' version);  				break;  			case HandshakeMessageType.ClientKeyExchange:  				ret = new HandshakeMessage(HandshakeMessageType.ClientKeyExchange' version);  				break;  			case HandshakeMessageType.Finished:  				ret = new HandshakeMessage(HandshakeMessageType.Finished' version);  				break;  			}
Missing Default,AaltoTLS.Alerts,Alert,D:\research\architectureSmells\repos\juhovh_AaltoTLS\AaltoTLS\Alerts\Alert.cs,ValidateForProtocolVersion,The following switch statement is missing a default case: switch (Description) {  			// Warning alerts that are SSLv3 only  			case AlertDescription.NoCertificate:  				Level = AlertLevel.Warning;  				if (version != ProtocolVersion.SSL3_0)  					Level = AlertLevel.None;  				break;  				  			// Warning alerts supported in all versions  			case AlertDescription.CloseNotify:  				Level = AlertLevel.Warning;  				break;    			// Fatal alerts supported in all versions  			case AlertDescription.UnexpectedMessage:  			case AlertDescription.BadRecordMAC:  			case AlertDescription.DecompressionFailure:  			case AlertDescription.HandshakeFailure:  			case AlertDescription.IllegalParameter:  				Level = AlertLevel.Fatal;  				break;  				  			// Other alerts supported in all versions  			case AlertDescription.BadCertificate:  			case AlertDescription.UnsupportedCertificate:  			case AlertDescription.CertificateRevoked:  			case AlertDescription.CertificateExpired:  			case AlertDescription.CertificateUnknown:  				break;    			// Fatal alerts that are TLS only  			case AlertDescription.UnknownCA:  			case AlertDescription.AccessDenied:  				Level = AlertLevel.Fatal;  				if (version == ProtocolVersion.SSL3_0)  					Description = AlertDescription.CertificateUnknown;  				break;  			case AlertDescription.RecordOverflow:  			case AlertDescription.DecodeError:  			case AlertDescription.DecryptError:  			case AlertDescription.InternalError:  				Level = AlertLevel.Fatal;  				if (version == ProtocolVersion.SSL3_0)  					Description = AlertDescription.IllegalParameter;  				break;  			case AlertDescription.ProtocolVersion:  			case AlertDescription.InsufficientSecurity:  				Level = AlertLevel.Fatal;  				if (version == ProtocolVersion.SSL3_0)  					Description = AlertDescription.HandshakeFailure;  				break;  			  			// Warning alerts that are TLS only  			case AlertDescription.UserCanceled:  			case AlertDescription.NoRenegotiation:  				Level = AlertLevel.Warning;  				if (version == ProtocolVersion.SSL3_0)  					Level = AlertLevel.None;  				break;  			  			// Fatal alerts that are TLSv1.2 only  			case AlertDescription.UnsupportedExtension:  				Level = AlertLevel.Fatal;  				if (version != ProtocolVersion.TLS1_2)  					Description = AlertDescription.IllegalParameter;  				break;  			}
