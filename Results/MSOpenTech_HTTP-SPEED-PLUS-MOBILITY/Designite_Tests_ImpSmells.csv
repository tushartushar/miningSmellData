Implementation smell,Namespace,Class,File,Method,Description
Long Method,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,ProcessMessages,The method has 150 lines of code.
Complex Method,System.ServiceModel.SMProtocol,SMHeaders,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\SMHeaders.cs,ToString,Cyclomatic complexity of the method is 11
Complex Method,System.ServiceModel.SMProtocol,SMStream,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\SMStream.cs,OnProtocolData,Cyclomatic complexity of the method is 13
Complex Method,Tests,TestSuite,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Tests\TestSuite.cs,Check,Cyclomatic complexity of the method is 8
Long Statement,ClientProtocol.ServiceModel.SMProtocol.MessageProcessing,CompressionProcessor,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\MessageProcessing\CompressionProcessor.cs,Process,The length of the statement  "			if ((flags & (byte)FrameFlags.FlagNoHeaderCompression1) == 0 && (flags & (byte)FrameFlags.FlagNoHeaderCompression2) == 0)" is 121.
Long Statement,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,StartWebSocketHandshake,The length of the statement  "        	request = customHeaders.Aggregate(request' (current' header) => current + string.Format("{0}: {1}\r\n"' header.Key' header.Value));" is 131.
Long Statement,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,ProcessHandshakeResponseHeader,The length of the statement  "                this.FailWebSocketConnection(new ProtocolViolationException("Server responded with unrecognized protocol. Header line of server handshake response is not recognized: " + line)' false);" is 184.
Long Statement,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,ProcessHandshakeResponseHeader,The length of the statement  "                this.FailWebSocketConnection(new NotSupportedException("Proxy authentication is required by the client implementation does not support it yet: " + line)' false);" is 161.
Long Statement,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,ProcessHandshakeResponseHeader,The length of the statement  "                this.FailWebSocketConnection(new InvalidOperationException("Server status code of " + match.Groups[1].Value + " from the handshake response header does not match the expected 101 status code.")' false);" is 202.
Long Statement,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,ProcessHandshakeResponseHeaders,The length of the statement  "                        this.FailWebSocketConnection(new ProtocolViolationException("Server responded with unrecognized protocol. One of the header lines of server handshake response is malformed.")' false);" is 183.
Long Statement,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,ValidateHandshakeResponseHeaders,The length of the statement  "                    new ProtocolViolationException("Server protocol violation. Server did not respond with an Upgrade header with 'WebSocket' value."))'" is 132.
Long Statement,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,ValidateHandshakeResponseHeaders,The length of the statement  "                    new ProtocolViolationException("Server protocol violation. Server did not respond with an Connection header with 'Upgrade' value."))'" is 133.
Long Statement,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,ValidateHandshakeResponseHeaders,The length of the statement  "                    new ProtocolViolationException("Server protocol violation. Server did not respond with sec-websocket-accept header that matches the sec-websocket-accept header sent on request."))'" is 180.
Long Statement,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,ValidateHandshakeResponseHeaders,The length of the statement  "                    new ProtocolViolationException("Server protocol violation. Server did not respond with sec-websocket-protocol header that matches the protocol sent on request."))'" is 163.
Long Statement,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,ValidateHandshakeResponseHeaders,The length of the statement  "                        new ProtocolViolationException("Server protocol violation. Server did not respond with sec-websocket-extensions header that matches the protocol sent on request."))'" is 165.
Long Statement,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,ValidateHandshakeResponseHeaders,The length of the statement  "                    if (this.handshakeResponseHeaders.ContainsKey("set-cookie") || this.handshakeResponseHeaders.ContainsKey("set-cookie2"))" is 120.
Long Statement,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,ValidateHandshakeResponseHeaders,The length of the statement  "                        this.FailWebSocketConnection(new NotSupportedException("Server attempted to set cookies with handshake response. Cookies are not supported yet.")' false);" is 154.
Long Statement,System.ServiceModel.WebSockets,WebSocketProtocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\WebSocketProtocol.cs,ConsumeInputBytes,The length of the statement  "            Debug.Assert((count > 0 || count == -1) && count <= this.UnreadDataCount' "ConsumeInputBytes()|Attempt to consume more bytes from the input buffer that are available");" is 168.
Long Statement,System.ServiceModel.WebSockets,WebSocketProtocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\WebSocketProtocol.cs,EnsureRoomInBuffer,The length of the statement  "                    this.FailWebSocketConnection(new InvalidOperationException("Server message exceeds the size limit. Increase MaxInputBufferSize to allow it.")' false);" is 150.
Empty Catch Block,System.ServiceModel.WebSockets,WebSocket,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\WebSocket.cs,OnProtocolClose,The method has an empty catch block.
Empty Catch Block,System.ServiceModel.WebSockets,WebSocket,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\WebSocket.cs,OnProtocolData,The method has an empty catch block.
Empty Catch Block,System.ServiceModel.WebSockets,WebSocket,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\WebSocket.cs,OnProtocolConnected,The method has an empty catch block.
Empty Catch Block,System.ServiceModel.WebSockets,WebSocket,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\WebSocket.cs,OnProtocolPing,The method has an empty catch block.
Empty Catch Block,System.ServiceModel.WebSockets,WebSocketProtocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\WebSocketProtocol.cs,CloseNoThrow,The method has an empty catch block.
Magic Number,System.ServiceModel.SMProtocol,BinaryHelper,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\BinaryHelper.cs,Int32FromBytes,The following statement contains a magic number: result |= bytes[i] << (8 * i);
Magic Number,System.ServiceModel.SMProtocol,BinaryHelper,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\BinaryHelper.cs,Int32FromBytes,The following statement contains a magic number: result = result << 8;
Magic Number,System.ServiceModel.SMProtocol,BinaryHelper,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\BinaryHelper.cs,Int32ToBytes,The following statement contains a magic number: bytes.Array[bytes.Count - 1 - i + bytes.Offset] = (byte)((value & (0xFF << (i << 3))) >> (i * 8));
Magic Number,System.ServiceModel.SMProtocol,BinaryHelper,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\BinaryHelper.cs,Int32ToBytes,The following statement contains a magic number: bytes.Array[bytes.Count - 1 - i + bytes.Offset] = (byte)((value & (0xFF << (i << 3))) >> (i * 8));
Magic Number,System.ServiceModel.SMProtocol,BinaryHelper,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\BinaryHelper.cs,Int32ToBytes,The following statement contains a magic number: bytes[bytesNum - 1 - i] = (byte)((value & (0xFF << (i << 3))) >> (i * 8));
Magic Number,System.ServiceModel.SMProtocol,BinaryHelper,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\BinaryHelper.cs,Int32ToBytes,The following statement contains a magic number: bytes[bytesNum - 1 - i] = (byte)((value & (0xFF << (i << 3))) >> (i * 8));
Magic Number,System.ServiceModel.SMProtocol,BinaryHelper,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\BinaryHelper.cs,Int32ToBytes,The following statement contains a magic number: bytes[bytesNum - 1 - i] = (byte)((value & (0xFF << (i << 3))) >> (i * 8));
Magic Number,System.ServiceModel.SMProtocol,BinaryHelper,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\BinaryHelper.cs,Int32ToBytes,The following statement contains a magic number: bytes[bytesNum - 1 - i] = (byte)((value & (0xFF << (i << 3))) >> (i * 8));
Magic Number,System.ServiceModel.SMProtocol,BinaryHelper,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\BinaryHelper.cs,Int64ToBytes,The following statement contains a magic number: return Int32ToBytes(value' 4);
Magic Number,System.ServiceModel.SMProtocol,BinaryHelper,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\BinaryHelper.cs,Int32ToBytes,The following statement contains a magic number: return Int32ToBytes(value' 4);
Magic Number,System.ServiceModel.SMProtocol,BinaryHelper,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\BinaryHelper.cs,Int16ToBytes,The following statement contains a magic number: return Int32ToBytes(value' 2);
Magic Number,System.ServiceModel.SMProtocol,BinaryHelper,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\BinaryHelper.cs,Int16FromBytes,The following statement contains a magic number: return (Int16)((msByte << 8) | lsByte);
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,Deserialize,The following statement contains a magic number: bool isControlFrame = (data[0] >> 7) != 0;
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,DeserializeCloseFrameExt,The following statement contains a magic number: extData.LastGoodSessionId = BinaryHelper.Int32FromBytes(new ArraySegment<byte>(data' 2' 4));
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,DeserializeCloseFrameExt,The following statement contains a magic number: extData.LastGoodSessionId = BinaryHelper.Int32FromBytes(new ArraySegment<byte>(data' 2' 4));
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,SerializeControlFrame,The following statement contains a magic number: byteList.Add((byte)(((frame.Version & 0xFF00) >> 8) | 0x80));
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,SerializeControlFrame,The following statement contains a magic number: byteList.Add((byte)(((Int16)frame.Type & 0xFF00) >> 8));
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,SerializeControlFrame,The following statement contains a magic number: switch (frame.Type) 		    { 		            case FrameType.SynStream:                         byteList.Add(Convert.ToByte(frame.Flags | (frame.IsFinal ? 0x01 : 0x00)));                         byteList.Add(Convert.ToByte(frame.Priority >> 5));                         byteList.Add(Unused);                         byteList.Add(Unused); 		                headersArray = SerializeControlFrameHeaders(frame.Headers); 		                break;                     case FrameType.RTS:                         byteList.AddRange(BinaryHelper.Int32ToBytes((int)frame.StatusCode));                         break;                     case FrameType.SynReply:                         byteList.Add(frame.Flags);                         byteList.Add(Unused);                         byteList.Add(Unused);                         byteList.Add(Unused);                         headersArray = SerializeControlFrameHeaders(frame.Headers);                         break;                     case FrameType.CreditUpdate: 		                byteList.AddRange(BinaryHelper.Int64ToBytes(((CreditUpdateFrame)frame).CreditAddition));                         break; 		    }
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,SerializeDataFrame,The following statement contains a magic number: var data = new byte[8 + frame.Length];
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,SerializeDataFrame,The following statement contains a magic number: BinaryHelper.Int32ToBytes(frame.StreamId' new ArraySegment<byte>(data' 0' 4));
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,SerializeDataFrame,The following statement contains a magic number: data[4] = frame.Flags;
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,SerializeDataFrame,The following statement contains a magic number: BinaryHelper.Int32ToBytes(frame.Length' new ArraySegment<byte>(data' 5' 3));
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,SerializeDataFrame,The following statement contains a magic number: BinaryHelper.Int32ToBytes(frame.Length' new ArraySegment<byte>(data' 5' 3));
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,SerializeDataFrame,The following statement contains a magic number: Buffer.BlockCopy(frame.Data' 0' data' 8' frame.Length);
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,DeserializeControlFrame,The following statement contains a magic number: switch (frame.Type) 			{ 				case FrameType.RTS: 					frame.StatusCode = (StatusCode)BinaryHelper.Int32FromBytes(new ArraySegment<byte>(data' 8' 4)); 					break; 				case FrameType.Headers: 				case FrameType.SynReply: 					ParseControlFrameHeaders(ref frame' data' 12); 					break; 				case FrameType.SynStream: 					frame.Priority = (byte)(data[9] >> 5); 					ParseControlFrameHeaders(ref frame' data' 12); 					break;                 case FrameType.CreditUpdate: 			        ((CreditUpdateFrame)frame).CreditAddition = BinaryHelper.Int32FromBytes(new ArraySegment<byte>(data' 8' 4));                     break;  			}
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,DeserializeControlFrame,The following statement contains a magic number: switch (frame.Type) 			{ 				case FrameType.RTS: 					frame.StatusCode = (StatusCode)BinaryHelper.Int32FromBytes(new ArraySegment<byte>(data' 8' 4)); 					break; 				case FrameType.Headers: 				case FrameType.SynReply: 					ParseControlFrameHeaders(ref frame' data' 12); 					break; 				case FrameType.SynStream: 					frame.Priority = (byte)(data[9] >> 5); 					ParseControlFrameHeaders(ref frame' data' 12); 					break;                 case FrameType.CreditUpdate: 			        ((CreditUpdateFrame)frame).CreditAddition = BinaryHelper.Int32FromBytes(new ArraySegment<byte>(data' 8' 4));                     break;  			}
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,DeserializeControlFrame,The following statement contains a magic number: switch (frame.Type) 			{ 				case FrameType.RTS: 					frame.StatusCode = (StatusCode)BinaryHelper.Int32FromBytes(new ArraySegment<byte>(data' 8' 4)); 					break; 				case FrameType.Headers: 				case FrameType.SynReply: 					ParseControlFrameHeaders(ref frame' data' 12); 					break; 				case FrameType.SynStream: 					frame.Priority = (byte)(data[9] >> 5); 					ParseControlFrameHeaders(ref frame' data' 12); 					break;                 case FrameType.CreditUpdate: 			        ((CreditUpdateFrame)frame).CreditAddition = BinaryHelper.Int32FromBytes(new ArraySegment<byte>(data' 8' 4));                     break;  			}
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,DeserializeControlFrame,The following statement contains a magic number: switch (frame.Type) 			{ 				case FrameType.RTS: 					frame.StatusCode = (StatusCode)BinaryHelper.Int32FromBytes(new ArraySegment<byte>(data' 8' 4)); 					break; 				case FrameType.Headers: 				case FrameType.SynReply: 					ParseControlFrameHeaders(ref frame' data' 12); 					break; 				case FrameType.SynStream: 					frame.Priority = (byte)(data[9] >> 5); 					ParseControlFrameHeaders(ref frame' data' 12); 					break;                 case FrameType.CreditUpdate: 			        ((CreditUpdateFrame)frame).CreditAddition = BinaryHelper.Int32FromBytes(new ArraySegment<byte>(data' 8' 4));                     break;  			}
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,DeserializeControlFrame,The following statement contains a magic number: switch (frame.Type) 			{ 				case FrameType.RTS: 					frame.StatusCode = (StatusCode)BinaryHelper.Int32FromBytes(new ArraySegment<byte>(data' 8' 4)); 					break; 				case FrameType.Headers: 				case FrameType.SynReply: 					ParseControlFrameHeaders(ref frame' data' 12); 					break; 				case FrameType.SynStream: 					frame.Priority = (byte)(data[9] >> 5); 					ParseControlFrameHeaders(ref frame' data' 12); 					break;                 case FrameType.CreditUpdate: 			        ((CreditUpdateFrame)frame).CreditAddition = BinaryHelper.Int32FromBytes(new ArraySegment<byte>(data' 8' 4));                     break;  			}
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,DeserializeControlFrame,The following statement contains a magic number: switch (frame.Type) 			{ 				case FrameType.RTS: 					frame.StatusCode = (StatusCode)BinaryHelper.Int32FromBytes(new ArraySegment<byte>(data' 8' 4)); 					break; 				case FrameType.Headers: 				case FrameType.SynReply: 					ParseControlFrameHeaders(ref frame' data' 12); 					break; 				case FrameType.SynStream: 					frame.Priority = (byte)(data[9] >> 5); 					ParseControlFrameHeaders(ref frame' data' 12); 					break;                 case FrameType.CreditUpdate: 			        ((CreditUpdateFrame)frame).CreditAddition = BinaryHelper.Int32FromBytes(new ArraySegment<byte>(data' 8' 4));                     break;  			}
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,DeserializeControlFrame,The following statement contains a magic number: switch (frame.Type) 			{ 				case FrameType.RTS: 					frame.StatusCode = (StatusCode)BinaryHelper.Int32FromBytes(new ArraySegment<byte>(data' 8' 4)); 					break; 				case FrameType.Headers: 				case FrameType.SynReply: 					ParseControlFrameHeaders(ref frame' data' 12); 					break; 				case FrameType.SynStream: 					frame.Priority = (byte)(data[9] >> 5); 					ParseControlFrameHeaders(ref frame' data' 12); 					break;                 case FrameType.CreditUpdate: 			        ((CreditUpdateFrame)frame).CreditAddition = BinaryHelper.Int32FromBytes(new ArraySegment<byte>(data' 8' 4));                     break;  			}
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,DeserializeControlFrame,The following statement contains a magic number: switch (frame.Type) 			{ 				case FrameType.RTS: 					frame.StatusCode = (StatusCode)BinaryHelper.Int32FromBytes(new ArraySegment<byte>(data' 8' 4)); 					break; 				case FrameType.Headers: 				case FrameType.SynReply: 					ParseControlFrameHeaders(ref frame' data' 12); 					break; 				case FrameType.SynStream: 					frame.Priority = (byte)(data[9] >> 5); 					ParseControlFrameHeaders(ref frame' data' 12); 					break;                 case FrameType.CreditUpdate: 			        ((CreditUpdateFrame)frame).CreditAddition = BinaryHelper.Int32FromBytes(new ArraySegment<byte>(data' 8' 4));                     break;  			}
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,ParseControlFrameHeaders,The following statement contains a magic number: int nameLength = BinaryHelper.Int32FromBytes(new ArraySegment<byte>(data' offset' 4));
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,ParseControlFrameHeaders,The following statement contains a magic number: offset += 4;
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,ParseControlFrameHeaders,The following statement contains a magic number: int valLength = BinaryHelper.Int32FromBytes(new ArraySegment<byte>(data' offset' 4));
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,ParseControlFrameHeaders,The following statement contains a magic number: offset += 4;
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,ParseControlFrameHeader,The following statement contains a magic number: frame.Type = (FrameType)BinaryHelper.Int16FromBytes(data[2]' data[3]);
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,ParseControlFrameHeader,The following statement contains a magic number: frame.Type = (FrameType)BinaryHelper.Int16FromBytes(data[2]' data[3]);
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,ParseControlFrameHeader,The following statement contains a magic number: frame.StreamId = BinaryHelper.Int32FromBytes(new ArraySegment<byte>(data' 4' 4)' 0);
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,ParseControlFrameHeader,The following statement contains a magic number: frame.StreamId = BinaryHelper.Int32FromBytes(new ArraySegment<byte>(data' 4' 4)' 0);
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,ParseControlFrameHeader,The following statement contains a magic number: frame.Flags = data[8];
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,DeserializeDataFrame,The following statement contains a magic number: frame.Length = data.Length - 8;
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,DeserializeDataFrame,The following statement contains a magic number: Buffer.BlockCopy(data' 8' frame.Data' 0' frame.Length);
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,ParseDataFrameHeader,The following statement contains a magic number: frame.StreamId = BinaryHelper.Int32FromBytes(new ArraySegment<byte>(data' 0' 4)' 0);
Magic Number,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,ParseDataFrameHeader,The following statement contains a magic number: frame.Flags = data[4];
Magic Number,System.ServiceModel.SMProtocol,SMHeaders,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\SMHeaders.cs,InitExtraHeaders,The following statement contains a magic number: int toAddCookie = RandIndex.Next(0' 2);
Magic Number,System.ServiceModel.SMProtocol,SMSession,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\SMSession.cs,GenerateNewStreamId,The following statement contains a magic number: this.isServer == (newStreamId % 2 == 1)
Magic Number,ClientProtocol.ServiceModel.SMProtocol.MessageProcessing,CompressionProcessor,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\MessageProcessing\CompressionProcessor.cs,Compress,The following statement contains a magic number: _compressOutZStream.FlushMode = 2;
Magic Number,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,StartWebSocketHandshake,The following statement contains a magic number: string request = string.Format(                 CultureInfo.InvariantCulture'                 "GET {0} HTTP/1.1\r\n" +                 "Upgrade: WebSocket\r\n" +                 "Connection: Upgrade' http2-icb\r\n" +                 "Host: {1}{2}\r\n" +                 "Sec-WebSocket-Origin: {3}\r\n" +                 "Sec-WebSocket-Version: 8\r\n" +                 "{4}" + // web socket protocol' if specified by the user                 "Sec-WebSocket-Key: {5}\r\n" +                 "Sec-WebSocket-Extensions: http2\r\n"'                 this.Uri.AbsolutePath + this.Uri.Query'                 this.Uri.DnsSafeHost.ToLowerInvariant()'                 this.Uri.Port == 80                     ? string.Empty                     : string.Format(CultureInfo.InvariantCulture' ":{0}"' this.Uri.Port)'                 this.Origin.ToLowerInvariant()'                 string.IsNullOrEmpty(this.Protocol)                     ? string.Empty                     : string.Format(CultureInfo.InvariantCulture' "Sec-WebSocket-Protocol: {0}\r\n"' this.Protocol)'                 this.clientNonce);
Magic Number,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,SendMessage,The following statement contains a magic number: this.SendRaw(FrameFIN << 7 | FrameOpCodeText' encodedData);
Magic Number,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,SendMessage,The following statement contains a magic number: this.SendRaw(FrameFIN << 7 | FrameOpCodeBin' data);
Magic Number,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,Close,The following statement contains a magic number: this.SendRaw(FrameFIN << 7 | FrameOpCodeClose' data);
Magic Number,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,SendPing,The following statement contains a magic number: this.SendRaw(FrameFIN << 7 | FrameOpCodePing' new byte[0]);
Magic Number,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,SendPong,The following statement contains a magic number: this.SendRaw(FrameFIN << 7 | FrameOpCodePong' data);
Magic Number,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,SendFragmentRaw,The following statement contains a magic number: opcode |= FrameFIN << 7;
Magic Number,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,SendRaw,The following statement contains a magic number: maskingKeyOffset = 2;
Magic Number,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,SendRaw,The following statement contains a magic number: dataOffset = 6;
Magic Number,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,SendRaw,The following statement contains a magic number: length < 126
Magic Number,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,SendRaw,The following statement contains a magic number: payload[1] |= FrameMASK << 7;
Magic Number,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,ProcessMessages,The following statement contains a magic number: this.UnreadDataCount < 2
Magic Number,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,ProcessMessages,The following statement contains a magic number: bool isFinal = ((this.InputBuffer[this.UnreadDataOffset] & 0xF0) >> 7) == FrameFIN;
Magic Number,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,ProcessMessages,The following statement contains a magic number: bool isMasked = ((length & 0x80) >> 7) == FrameMASK;
Magic Number,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,ProcessMessages,The following statement contains a magic number: offset = 2;
Magic Number,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,ProcessMessages,The following statement contains a magic number: length < 126
Magic Number,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,ProcessMessages,The following statement contains a magic number: this.UnreadDataCount < offset + 4
Magic Number,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,ProcessMessages,The following statement contains a magic number: offset += 4;
Magic Number,System.ServiceModel.WebSockets,IETFHyBiWebSocketPotocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\IETFHyBiWebSocketPotocol.cs,GenerateClientNonce,The following statement contains a magic number: byte[] nonceBytes = new byte[16];
Magic Number,System.ServiceModel.WebSockets,WebSocketProtocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\WebSocketProtocol.cs,WebSocketProtocol,The following statement contains a magic number: this.InputBuffer = new byte[1024];
Magic Number,System.ServiceModel.WebSockets,WebSocketProtocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\WebSockets\WebSocketProtocol.cs,EnsureRoomInBuffer,The following statement contains a magic number: (this.InputBuffer.Length * 2) > this.MaxInputBufferSize
Magic Number,Tests,TestSuite,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Tests\TestSuite.cs,AttachSessionEvents,The following statement contains a magic number: session.OnStreamOpened += (s' e) => 			{ 				if (e.Stream.StreamId % 2 == 0) 				{ 					_isError = true; 					_errorMessage = "StreamId must be odd"; 				} 				_isOpenStream = true; 				_eventRaisedStream.Set(); 			};
Magic Number,Tests,TestSuite,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Tests\TestSuite.cs,SendFrameOnCloseStreamFailure,The following statement contains a magic number: SMData data = new SMData(new byte[] { 12' 3' 23' 35' 3' 11 });
Magic Number,Tests,TestSuite,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Tests\TestSuite.cs,SendFrameOnCloseStreamFailure,The following statement contains a magic number: SMData data = new SMData(new byte[] { 12' 3' 23' 35' 3' 11 });
Magic Number,Tests,TestSuite,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Tests\TestSuite.cs,SendFrameOnCloseStreamFailure,The following statement contains a magic number: SMData data = new SMData(new byte[] { 12' 3' 23' 35' 3' 11 });
Magic Number,Tests,TestSuite,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Tests\TestSuite.cs,SendFrameOnCloseStreamFailure,The following statement contains a magic number: SMData data = new SMData(new byte[] { 12' 3' 23' 35' 3' 11 });
Magic Number,Tests,TestSuite,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Tests\TestSuite.cs,SendFrameOnCloseStreamFailure,The following statement contains a magic number: SMData data = new SMData(new byte[] { 12' 3' 23' 35' 3' 11 });
Magic Number,Tests,TestSuite,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Tests\TestSuite.cs,SendFrameOnCloseStreamFailure,The following statement contains a magic number: SMData data = new SMData(new byte[] { 12' 3' 23' 35' 3' 11 });
Magic Number,Tests,TestSuite,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Tests\TestSuite.cs,IncorrectAddressFailure,The following statement contains a magic number: int random = rand.Next() % 1000;
Magic Number,Tests,TestSuite,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Tests\TestSuite.cs,IncorrectPortFailure,The following statement contains a magic number: int random = rand.Next() % 1000;
Missing Default,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,SerializeControlFrame,The following switch statement is missing a default case: switch (frame.Type) 		    { 		            case FrameType.SynStream:                         byteList.Add(Convert.ToByte(frame.Flags | (frame.IsFinal ? 0x01 : 0x00)));                         byteList.Add(Convert.ToByte(frame.Priority >> 5));                         byteList.Add(Unused);                         byteList.Add(Unused); 		                headersArray = SerializeControlFrameHeaders(frame.Headers); 		                break;                     case FrameType.RTS:                         byteList.AddRange(BinaryHelper.Int32ToBytes((int)frame.StatusCode));                         break;                     case FrameType.SynReply:                         byteList.Add(frame.Flags);                         byteList.Add(Unused);                         byteList.Add(Unused);                         byteList.Add(Unused);                         headersArray = SerializeControlFrameHeaders(frame.Headers);                         break;                     case FrameType.CreditUpdate: 		                byteList.AddRange(BinaryHelper.Int64ToBytes(((CreditUpdateFrame)frame).CreditAddition));                         break; 		    }
Missing Default,System.ServiceModel.SMProtocol,FrameSerializer,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\Serialization\FrameSerializer.cs,DeserializeControlFrame,The following switch statement is missing a default case: switch (frame.Type) 			{ 				case FrameType.RTS: 					frame.StatusCode = (StatusCode)BinaryHelper.Int32FromBytes(new ArraySegment<byte>(data' 8' 4)); 					break; 				case FrameType.Headers: 				case FrameType.SynReply: 					ParseControlFrameHeaders(ref frame' data' 12); 					break; 				case FrameType.SynStream: 					frame.Priority = (byte)(data[9] >> 5); 					ParseControlFrameHeaders(ref frame' data' 12); 					break;                 case FrameType.CreditUpdate: 			        ((CreditUpdateFrame)frame).CreditAddition = BinaryHelper.Int32FromBytes(new ArraySegment<byte>(data' 8' 4));                     break;  			}
Missing Default,System.ServiceModel.SMProtocol,SMProtocol,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\SMProtocol.cs,ProcessControlFrame,The following switch statement is missing a default case: switch (frame.Type) 			{                 case FrameType.CreditUpdate: 				case FrameType.SynStream: 				case FrameType.SynReply: 					this.OnSessionFrame(this' new ControlFrameEventArgs(frame)); 					break; 				case FrameType.Headers: 					this.OnStreamFrame(this' new HeadersEventArgs(this.streamsStore.GetStreamById(frame.StreamId)' frame.Headers)); 					break; 				case FrameType.RTS: 					this.OnStreamFrame(this' new RSTEventArgs(this.streamsStore.GetStreamById(frame.StreamId)' frame.StatusCode)); 					break; 			}
Missing Default,System.ServiceModel.SMProtocol,SMSession,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Client\ClientProtocol\ServiceModel\SMProtocol\SMSession.cs,OnSessionFrame,The following switch statement is missing a default case: switch (e.Frame.Type)             {                 case FrameType.SynStream:                     OpenStream(e.Frame.StreamId' e.Frame.Headers' false);                                         break;                 case FrameType.SynReply:                     SMStream stream = this.GetStreamById(e.Frame.StreamId);                     if (stream != null && stream.State != SMStreamState.Closed && stream.State != SMStreamState.HalfClosed)                     {                         stream.State = SMStreamState.Accepted;                     }                     break;                 case FrameType.CreditUpdate:                     CurrentCreditBalanceToServer += Convert.ToInt32(e.Frame.Headers["credit-addition"]);                     break;             }
Missing Default,Tests,TestSuite,C:\research\architectureSmells\repos\MSOpenTech_HTTP-SPEED-PLUS-MOBILITY\SMDemo\Tests\TestSuite.cs,Check,The following switch statement is missing a default case: switch (mode) 			{ 				case CheckModes.session: 					if (!_isOpenSession) 						Assert.Fail("Could not open session."); 					break; 				case CheckModes.fin: 					if (!_isClose) 						Assert.Fail("Could not close stream."); 					if (!_isReceived) 						Assert.Fail("Could not recieve data."); 					break; 				case CheckModes.stream: 					if (!_isOpenStream) 						Assert.Fail("Could not open stream."); 					break; 			}
