Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Sample.ViewModels,AsyncReactiveCommandViewModel,C:\repos\runceel_ReactiveProperty\Sample\Sample.ViewModels\AsyncReactiveCommandViewModel.cs,AsyncReactiveCommandViewModel,The following statement contains a magic number: this.ShareSourceCommand1.Subscribe(async _ => await Task.Delay(500));
Magic Number,Sample.ViewModels,AsyncReactiveCommandViewModel,C:\repos\runceel_ReactiveProperty\Sample\Sample.ViewModels\AsyncReactiveCommandViewModel.cs,AsyncReactiveCommandViewModel,The following statement contains a magic number: this.ShareSourceCommand2.Subscribe(async _ => await Task.Delay(2000));
Magic Number,Sample.ViewModels,AsyncReactiveCommandViewModel,C:\repos\runceel_ReactiveProperty\Sample\Sample.ViewModels\AsyncReactiveCommandViewModel.cs,HeavyWork,The following statement contains a magic number: await Task.Delay(3000);
Magic Number,Sample.ViewModels,AsynchronousViewModel,C:\repos\runceel_ReactiveProperty\Sample\Sample.ViewModels\AsynchronousViewModel.cs,AsynchronousViewModel,The following statement contains a magic number: ProgressStatus = progress                  .Select(x => string.Format("{0}/{1} {2}%"' x.Item1' x.Item2' ((double)x.Item1 / x.Item2) * 100))                  .ToReactiveProperty();
Magic Number,Sample.ViewModels,WikipediaModel,C:\repos\runceel_ReactiveProperty\Sample\Sample.ViewModels\AsynchronousViewModel.cs,SearchTermAsync,The following statement contains a magic number: var buffer = new byte[1024];
Magic Number,Sample.ViewModels,ValidationViewModel,C:\repos\runceel_ReactiveProperty\Sample\Sample.ViewModels\ValidationViewModel.cs,ValidationViewModel,The following statement contains a magic number: ValidationBoth = new ReactiveProperty<string>()                  .SetValidateAttribute(() => ValidationBoth)                  .SetValidateNotifyError(s => string.IsNullOrEmpty(s) ?                      "required" :                      s.Cast<char>().All(Char.IsLower) ?                          null :                          "not all lowercase")                  .SetValidateNotifyError(async x =>                  {                      await Task.Delay(2000);                      if (x == null)          return null;                      if (x.Contains("a"))    return "'a' shouldn't be contained";                      return null;                  })                  .SetValidateNotifyError(xs =>                  {                      return xs  					    .Throttle(TimeSpan.FromMilliseconds(500))                          .Select(x =>                          {                              if (x == null)          return null;                              if (x.Contains("b"))    return "'b' shouldn't be contained";                              return null;                          });                  });
Magic Number,Sample.ViewModels,ValidationViewModel,C:\repos\runceel_ReactiveProperty\Sample\Sample.ViewModels\ValidationViewModel.cs,ValidationViewModel,The following statement contains a magic number: ValidationBoth = new ReactiveProperty<string>()                  .SetValidateAttribute(() => ValidationBoth)                  .SetValidateNotifyError(s => string.IsNullOrEmpty(s) ?                      "required" :                      s.Cast<char>().All(Char.IsLower) ?                          null :                          "not all lowercase")                  .SetValidateNotifyError(async x =>                  {                      await Task.Delay(2000);                      if (x == null)          return null;                      if (x.Contains("a"))    return "'a' shouldn't be contained";                      return null;                  })                  .SetValidateNotifyError(xs =>                  {                      return xs  					    .Throttle(TimeSpan.FromMilliseconds(500))                          .Select(x =>                          {                              if (x == null)          return null;                              if (x.Contains("b"))    return "'b' shouldn't be contained";                              return null;                          });                  });
