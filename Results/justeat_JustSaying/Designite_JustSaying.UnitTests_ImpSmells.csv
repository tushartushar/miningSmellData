Implementation smell,Namespace,Class,File,Method,Description
Long Statement,JustSaying.UnitTests.AwsTools.MessageHandling.MessageDispatcherTests,AndMessageProcessingSucceeds,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\MessageDispatcherTests\WhenDispatchingMessage.cs,ShouldDeleteMessageIfHandledSuccessfully,The length of the statement  "                _amazonSqsClient.Received(1).DeleteMessageAsync(Arg.Is<DeleteMessageRequest>(x => x.QueueUrl == ExpectedQueueUrl && x.ReceiptHandle == _sqsMessage.ReceiptHandle)); " is 163.
Long Statement,JustSaying.UnitTests.AwsTools.MessageHandling.MessageDispatcherTests,AndMessageProcessingFails,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\MessageDispatcherTests\WhenDispatchingMessage.cs,Given,The length of the statement  "                _sqsMessage.Attributes.Add(MessageSystemAttributeName.ApproximateReceiveCount' ExpectedReceiveCount.ToString(CultureInfo.InvariantCulture)); " is 140.
Long Statement,JustSaying.UnitTests.AwsTools.MessageHandling.MessageDispatcherTests,AndMessageProcessingFails,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\MessageDispatcherTests\WhenDispatchingMessage.cs,ShouldInvokeMessageBackoffStrategyWithNumberOfReceives,The length of the statement  "                _messageBackoffStrategy.Received(1).GetBackoffDuration(Arg.Is(_typedMessage)' Arg.Is(ExpectedReceiveCount)' Arg.Is(_expectedException)); " is 136.
Long Statement,JustSaying.UnitTests.AwsTools.MessageHandling.MessageDispatcherTests,AndMessageProcessingFails,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\MessageDispatcherTests\WhenDispatchingMessage.cs,ShouldUpdateMessageVisibility,The length of the statement  "                _amazonSqsClient.Received(1).ChangeMessageVisibilityAsync(Arg.Is<ChangeMessageVisibilityRequest>(x => x.QueueUrl == ExpectedQueueUrl && x.ReceiptHandle == _sqsMessage.ReceiptHandle && x.VisibilityTimeout == (int)_expectedBackoffTimeSpan.TotalSeconds)); " is 252.
Long Statement,JustSaying.UnitTests.AwsTools.MessageHandling.MessageDispatcherTests,AndUpdatingMessageVisibilityErrors,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\MessageDispatcherTests\WhenDispatchingMessage.cs,Given,The length of the statement  "                _amazonSqsClient.ChangeMessageVisibilityAsync(Arg.Any<ChangeMessageVisibilityRequest>()).Throws(new AmazonServiceException("Something gone wrong")); " is 148.
Long Statement,JustSaying.UnitTests.AwsTools.MessageHandling.Sns.TopicByName,WhenPublishing,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\Sns\TopicByName\WhenPublishing.cs,CreateSystemUnderTestAsync,The length of the statement  "            var topic = new SnsTopicByName("TopicName"' Sns' _serializationRegister' Substitute.For<ILoggerFactory>()' new NonGenericMessageSubjectProvider()); " is 147.
Long Statement,JustSaying.UnitTests.AwsTools.MessageHandling.Sns.TopicByName,WhenPublishingAsync,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\Sns\TopicByName\WhenPublishingAsync.cs,CreateSystemUnderTestAsync,The length of the statement  "            var topic = new SnsTopicByName("TopicName"' Sns' _serializationRegister' Substitute.For<ILoggerFactory>()' new NonGenericMessageSubjectProvider()); " is 147.
Long Statement,JustSaying.UnitTests.AwsTools.MessageHandling.Sns.TopicByName,WhenPublishingAsync,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\Sns\TopicByName\WhenPublishingAsync.cs,MessageAttributeValueIsPublished,The length of the statement  "            Sns.Received().PublishAsync(Arg.Is<PublishRequest>(x => x.MessageAttributes.Single().Value.StringValue == MessageAttributeValue)); " is 130.
Long Statement,JustSaying.UnitTests.AwsTools.MessageHandling.Sns.TopicByName,WhenPublishingAsync,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\Sns\TopicByName\WhenPublishingAsync.cs,MessageAttributeDataTypeIsPublished,The length of the statement  "            Sns.Received().PublishAsync(Arg.Is<PublishRequest>(x => x.MessageAttributes.Single().Value.DataType == MessageAttributeDataType)); " is 130.
Long Statement,JustSaying.UnitTests.AwsTools.MessageHandling.Sns.TopicByName,WhenPublishingAsyncExceptionCanBeHandled,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\Sns\TopicByName\WhenPublishingAsyncExceptionCanBeHandled.cs,CreateSystemUnderTestAsync,The length of the statement  "            var topic = new SnsTopicByName("TopicName"' Sns' _serializationRegister' Substitute.For<ILoggerFactory>()' new SnsWriteConfiguration " is 132.
Long Statement,JustSaying.UnitTests.AwsTools.MessageHandling.Sns.TopicByName,WhenPublishingAsyncExceptionCanBeThrown,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\Sns\TopicByName\WhenPublishingAsyncExceptionCanBeThrown.cs,CreateSystemUnderTestAsync,The length of the statement  "            var topic = new SnsTopicByName("TopicName"' Sns' _serializationRegister' Substitute.For<ILoggerFactory>()' new SnsWriteConfiguration " is 132.
Long Statement,JustSaying.UnitTests.AwsTools.MessageHandling.Sns.TopicByName,WhenPublishingAsyncResultLoggerIsCalled,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\Sns\TopicByName\WhenPublishingAsyncResponseLoggerIsCalled.cs,CreateSystemUnderTestAsync,The length of the statement  "            var topic = new SnsTopicByName("TopicName"' Sns' _serializationRegister' Substitute.For<ILoggerFactory>()' Substitute.For<SnsWriteConfiguration>()' Substitute.For<IMessageSubjectProvider>()) " is 190.
Long Statement,JustSaying.UnitTests.AwsTools.MessageHandling.Sns.TopicByName,WhenPublishingAsyncWithGenericMessageSubjectProvider,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\Sns\TopicByName\WhenPublishingAsyncWithGenericMessageSubjectProvider.cs,CreateSystemUnderTestAsync,The length of the statement  "            var topic = new SnsTopicByName("TopicName"' Sns' _serializationRegister' Substitute.For<ILoggerFactory>()' new GenericMessageSubjectProvider()); " is 144.
Long Statement,JustSaying.UnitTests.AwsTools.MessageHandling.Sns.TopicByName,WhenPublishingAsyncWithGenericMessageSubjectProvider,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\Sns\TopicByName\WhenPublishingAsyncWithGenericMessageSubjectProvider.cs,MessageSubjectIsObjectType,The length of the statement  "            Sns.Received().PublishAsync(Arg.Is<PublishRequest>(x => x.Subject == new GenericMessageSubjectProvider().GetSubjectForType(typeof(MessageWithTypeParameters<int' string>)))); " is 173.
Long Statement,JustSaying.UnitTests.AwsTools.MessageHandling.Sqs,WhenPublishing,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\Sqs\WhenPublishing.cs,CreateSystemUnderTestAsync,The length of the statement  "            var sqs = new SqsPublisher(RegionEndpoint.EUWest1' QueueName' Sqs' 0' _serializationRegister' Substitute.For<ILoggerFactory>()); " is 128.
Long Statement,JustSaying.UnitTests.AwsTools.MessageHandling.Sqs,WhenPublishingAsync,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\Sqs\WhenPublishingAsync.cs,CreateSystemUnderTestAsync,The length of the statement  "            var sqs = new SqsPublisher(RegionEndpoint.EUWest1' QueueName' Sqs' 0' _serializationRegister' Substitute.For<ILoggerFactory>()); " is 128.
Long Statement,JustSaying.UnitTests.AwsTools.MessageHandling.Sqs,WhenPublishingAsyncResponseLoggerAsyncIsCalled,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\Sqs\WhenPublishingAsyncResponseLoggerAsyncIsCalled.cs,CreateSystemUnderTestAsync,The length of the statement  "            var sqs = new SqsPublisher(RegionEndpoint.EUWest1' QueueName' Sqs' 0' _serializationRegister' Substitute.For<ILoggerFactory>()) " is 127.
Long Statement,JustSaying.UnitTests.AwsTools.MessageHandling.Sqs,WhenPublishingDelayedMessage,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\Sqs\WhenPublishingDelayedMessage.cs,Given,The length of the statement  "            Sqs.ListQueuesAsync(Arg.Any<ListQueuesRequest>()).Returns(new ListQueuesResponse { QueueUrls = new List<string> { Url } }); " is 123.
Long Statement,JustSaying.UnitTests,TypeExtensionTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\TypeExtensionTests.cs,ToTopicName_GenericType_GivesLowercaseFullNameWithNonWordCharactersReplaced,The length of the statement  "                .ShouldBe($"justsaying_unittests_typeextensiontests_bar_1__justsaying_unittests_typeextensiontests_foo__{assemblyNamePart}__"); " is 127.
Long Statement,JustSaying.UnitTests.JustSayingFluently.AddingHandlers,WhenAddingASubscriptionHandler,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\JustSayingFluently\AddingHandlers\WhenAddingASubscriptionHandler.cs,TheTopicAndQueueIsCreatedInEachRegion,The length of the statement  "            QueueVerifier.Received().EnsureTopicExistsWithQueueSubscribedAsync("defaultRegion"' Bus.SerializationRegister' Arg.Any<SqsReadConfiguration>()' Bus.Config.MessageSubjectProvider); " is 179.
Long Statement,JustSaying.UnitTests.JustSayingFluently.AddingHandlers,WhenAddingASubscriptionHandler,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\JustSayingFluently\AddingHandlers\WhenAddingASubscriptionHandler.cs,TheTopicAndQueueIsCreatedInEachRegion,The length of the statement  "            QueueVerifier.Received().EnsureTopicExistsWithQueueSubscribedAsync("failoverRegion"' Bus.SerializationRegister' Arg.Any<SqsReadConfiguration>()' Bus.Config.MessageSubjectProvider); " is 180.
Long Statement,JustSaying.UnitTests.JustSayingFluently.AddingHandlers,WhenAddingASubscriptionHandlerForAGenericMessage,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\JustSayingFluently\AddingHandlers\WhenAddingASubscriptionHandlerForAGenericMessage.cs,HandlerIsAddedToBus,The length of the statement  "            Bus.Received().AddMessageHandler(Arg.Any<string>()' Arg.Any<string>()' Arg.Any<Func<IHandlerAsync<JustSayingMessage<MyMessage>>>>()); " is 133.
Long Statement,JustSaying.UnitTests.JustSayingFluently.AddingHandlers,WhenSubscribingPointToPoint,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\JustSayingFluently\AddingHandlers\WhenSubscribingPointToPoint.cs,NoTopicIsCreated,The length of the statement  "                .EnsureTopicExistsWithQueueSubscribedAsync(Arg.Any<string>()' Arg.Any<IMessageSerializationRegister>()' Arg.Any<SqsReadConfiguration>()' Arg.Any<IMessageSubjectProvider>()); " is 173.
Long Statement,JustSaying.UnitTests.Messaging.Serialization.Newtonsoft,WhenUsingCustomSettings,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\Serialization\Newtonsoft\WhenUsingCustomSettings.cs,GetMessageInContext,The length of the statement  "            var context = new { Subject = message.GetType().Name' Message = SystemUnderTest.Serialize(message' false' message.GetType().Name) }; " is 132.
Long Statement,JustSaying.UnitTests.Messaging.Serialization.SystemTextJson,WhenUsingCustomSettings,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\Serialization\SystemTextJson\WhenUsingCustomSettings.cs,GetMessageInContext,The length of the statement  "            var context = new { Subject = message.GetType().Name' Message = SystemUnderTest.Serialize(message' false' message.GetType().Name) }; " is 132.
Magic Number,JustSaying.UnitTests.AwsTools.MessageHandling,HandlerMetadataTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\HandlerMetadataTest.cs,OnceTestHandlerAsync_HasCorrectTimeout,The following statement contains a magic number: reader.GetTimeOut().ShouldBe(42);
Magic Number,JustSaying.UnitTests.AwsTools.MessageHandling,MessageContextAccessorTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\MessageContextAccessorTests.cs,CanStoreAndRetrieveAsync,The following statement contains a magic number: await Task.Delay(250)                  .ConfigureAwait(false);
Magic Number,JustSaying.UnitTests.AwsTools.MessageHandling,MessageContextAccessorTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\MessageContextAccessorTests.cs,MultiThreads,The following statement contains a magic number: i < 10
Magic Number,JustSaying.UnitTests.AwsTools.MessageHandling,MessageContextAccessorTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\MessageContextAccessorTests.cs,ThreadLocalDataRemainsTheSame,The following statement contains a magic number: await Task.Delay(100 + i)                      .ConfigureAwait(false);
Magic Number,JustSaying.UnitTests.AwsTools.MessageHandling,MessageContextAccessorTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\MessageContextAccessorTests.cs,ThreadLocalDataRemainsTheSame,The following statement contains a magic number: i < 5
Magic Number,JustSaying.UnitTests.AwsTools.MessageHandling.MessageDispatcherTests,AndUpdatingMessageVisibilityErrors,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\MessageDispatcherTests\WhenDispatchingMessage.cs,Given,The following statement contains a magic number: _messageBackoffStrategy.GetBackoffDuration(_typedMessage' Arg.Any<int>()).Returns(TimeSpan.FromMinutes(4));
Magic Number,JustSaying.UnitTests.AwsTools.MessageHandling.SqsNotificationListener,WhenExactlyOnceIsAppliedToHandler,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\SqsNotificationListener\WhenExactlyOnceIsAppliedToHandler.cs,Given,The following statement contains a magic number: _expectedTimeout = 5;
Magic Number,JustSaying.UnitTests.AwsTools.MessageHandling.SqsNotificationListener,WhenMessageHandlingSucceeds,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\SqsNotificationListener\WhenMessageHandlingSucceeds.cs,AllMessagesAreClearedFromQueue,The following statement contains a magic number: Sqs.Received(2).DeleteMessageAsync(Arg.Any<DeleteMessageRequest>());
Magic Number,JustSaying.UnitTests.AwsTools.MessageHandling.SqsNotificationListener,WhenPassingAHandledAndUnhandledMessage,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\SqsNotificationListener\WhenPassingAHandledAndUnhandledMessage.cs,AllMessagesAreClearedFromQueue,The following statement contains a magic number: SerializationRegister.Received(2).DeserializeMessage(Arg.Any<string>());
Magic Number,JustSaying.UnitTests.AwsTools.MessageHandling.SqsNotificationListener,WhenThereAreExceptionsInMessageProcessing,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\SqsNotificationListener\WhenThereAreExceptionsInMessageProcessing.cs,When,The following statement contains a magic number: await Task.Delay(100);
Magic Number,JustSaying.UnitTests.AwsTools.MessageHandling.SqsNotificationListener,WhenThereAreExceptionsInMessageProcessing,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\SqsNotificationListener\WhenThereAreExceptionsInMessageProcessing.cs,TheListenerDoesNotDie,The following statement contains a magic number: _callCount.ShouldBeGreaterThanOrEqualTo(3);
Magic Number,JustSaying.UnitTests.AwsTools.MessageHandling.SqsNotificationListener,WhenThereAreExceptionsInSqsCalling,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\SqsNotificationListener\WhenThereAreExceptionsInSqsCalling.cs,ExceptionOnFirstCall,The following statement contains a magic number: _sqsCallCounter == 2
Magic Number,JustSaying.UnitTests.AwsTools.MessageHandling.SqsNotificationListener,WhenThereAreNoMessagesToProcess,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\SqsNotificationListener\WhenThereAreNoMessagesToProcess.cs,When,The following statement contains a magic number: await Task.Delay(100);
Magic Number,JustSaying.UnitTests.AwsTools.MessageHandling.SqsNotificationListener,WhenThereAreNoMessagesToProcess,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\AwsTools\MessageHandling\SqsNotificationListener\WhenThereAreNoMessagesToProcess.cs,ListenLoopDoesNotDie,The following statement contains a magic number: _callCount.ShouldBeGreaterThan(3);
Magic Number,JustSaying.UnitTests.CreateMe,WhenCreatingABus,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\CreateMe\WhenCreatingABus.cs,WhenCreatingABus,The following statement contains a magic number: _config = x =>              {                  x.PublishFailureBackoff = TimeSpan.FromMilliseconds(50);                  x.PublishFailureReAttempts = 2;              };
Magic Number,JustSaying.UnitTests.CreateMe,WhenCreatingABus,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\CreateMe\WhenCreatingABus.cs,WhenCreatingABus,The following statement contains a magic number: _config = x =>              {                  x.PublishFailureBackoff = TimeSpan.FromMilliseconds(50);                  x.PublishFailureReAttempts = 2;              };
Magic Number,JustSaying.UnitTests.JustSayingBus,WhenRegisteringPublishers,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\JustSayingBus\WhenRegisteringPublishers.cs,RejectedOrderWasPublishedTwice,The following statement contains a magic number: _publisher.Received(2).PublishAsync(                  Arg.Is<Message>(m => m is OrderRejected)'                  Arg.Any<PublishMetadata>()'                  Arg.Any<CancellationToken>());
Magic Number,JustSaying.UnitTests.JustSayingBus,WhenRegisteringPublishers,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\JustSayingBus\WhenRegisteringPublishers.cs,AndInterrogationShowsPublishersHaveBeenSet,The following statement contains a magic number: response.Publishers.Count().ShouldBe(2);
Magic Number,JustSaying.UnitTests.JustSayingBus,WhenRegisteringSubscribers,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\JustSayingBus\WhenRegisteringSubscribers.cs,AndInterrogationShowsPublishersHaveBeenSet,The following statement contains a magic number: response.Subscribers.Count().ShouldBe(3);
Magic Number,JustSaying.UnitTests.JustSayingBus,WhenUsingMultipleRegions,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\JustSayingBus\WhenUsingMultipleRegions.cs,RegionsAreReturnedInTheInterrogationResult,The following statement contains a magic number: response.Regions.Count().ShouldBe(2);
Magic Number,JustSaying.UnitTests.JustSayingFluently.AddingHandlers,WhenAddingASubscriptionHandler,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\JustSayingFluently\AddingHandlers\WhenAddingASubscriptionHandler.cs,TheSubscriptionIsCreatedInEachRegion,The following statement contains a magic number: Bus.Received(2).AddNotificationSubscriber(Arg.Any<string>()' Arg.Any<INotificationSubscriber>());
Magic Number,JustSaying.UnitTests.JustSayingFluently.AddingHandlers,WhenSubscribingPointToPoint,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\JustSayingFluently\AddingHandlers\WhenSubscribingPointToPoint.cs,TheSubscriptionIsCreatedInEachRegion,The following statement contains a magic number: Bus.Received(2).AddNotificationSubscriber(Arg.Any<string>()' Arg.Any<INotificationSubscriber>());
Magic Number,JustSaying.UnitTests.JustSayingFluently.RegisteringPublishers,WhenAddingPublishers,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\JustSayingFluently\RegisteringPublishers\WhenAddingPublishers.cs,ConfigurationIsRequired,The following statement contains a magic number: SystemUnderTest.ConfigurePublisherWith(                  conf => conf.PublishFailureBackoff = TimeSpan.FromMilliseconds(50));
Magic Number,JustSaying.UnitTests.JustSayingFluently.RegisteringPublishers,WhenAddingPublishers,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\JustSayingFluently\RegisteringPublishers\WhenAddingPublishers.cs,ASnsPublisherCanBeSetup,The following statement contains a magic number: SystemUnderTest.ConfigurePublisherWith(                      conf => conf.PublishFailureBackoff = TimeSpan.FromMilliseconds(50))                  .WithSnsMessagePublisher<SimpleMessage>();
Magic Number,JustSaying.UnitTests.JustSayingFluently.RegisteringPublishers,WhenAddingPublishers,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\JustSayingFluently\RegisteringPublishers\WhenAddingPublishers.cs,MultipleSnsPublishersCanBeSetup,The following statement contains a magic number: SystemUnderTest.ConfigurePublisherWith(                      conf => conf.PublishFailureBackoff = TimeSpan.FromMilliseconds(50))                  .WithSnsMessagePublisher<SimpleMessage>()                  .WithSnsMessagePublisher<SimpleMessage>();
Magic Number,JustSaying.UnitTests.JustSayingFluently.RegisteringPublishers,WhenAddingPublishers,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\JustSayingFluently\RegisteringPublishers\WhenAddingPublishers.cs,ASqsPublisherCanBeSetupWithConfiguration,The following statement contains a magic number: SystemUnderTest.WithSqsMessagePublisher<SimpleMessage>(c =>              {                  c.VisibilityTimeout = TimeSpan.FromSeconds(1);                  c.RetryCountBeforeSendingToErrorQueue = 2;                  c.MessageRetention = TimeSpan.FromSeconds(3);                  c.ErrorQueueOptOut = true;              });
Magic Number,JustSaying.UnitTests.JustSayingFluently.RegisteringPublishers,WhenAddingPublishers,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\JustSayingFluently\RegisteringPublishers\WhenAddingPublishers.cs,ASqsPublisherCanBeSetupWithConfiguration,The following statement contains a magic number: SystemUnderTest.WithSqsMessagePublisher<SimpleMessage>(c =>              {                  c.VisibilityTimeout = TimeSpan.FromSeconds(1);                  c.RetryCountBeforeSendingToErrorQueue = 2;                  c.MessageRetention = TimeSpan.FromSeconds(3);                  c.ErrorQueueOptOut = true;              });
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,MessageLoopTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\MessageLoopTests.cs,SimulatedListenLoop_ProcessedAllMessages_In_Parallel,The following statement contains a magic number: await Task.Delay(2000);
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,MessageLoopTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\MessageLoopTests.cs,SimulatedListenLoop_ProcessedAllMessages_Sequentially,The following statement contains a magic number: await Task.Delay(2000);
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,MessageLoopTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\MessageLoopTests.cs,ListenLoopExecuted,The following statement contains a magic number: var timeout = MinTaskDuration + TimeSpan.FromMilliseconds(initalActionCount / 100);
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,MaxConcurrency_StartsAtMaxConcurrency,The following statement contains a magic number: var options = new ThrottledOptions()              {                  MaxConcurrency = 123'                  Logger = _logger'                  MessageMonitor = _monitor'                  StartTimeout = TimeSpan.FromSeconds(5)'              };
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,MaxConcurrency_StartsAtMaxConcurrency,The following statement contains a magic number: var options = new ThrottledOptions()              {                  MaxConcurrency = 123'                  Logger = _logger'                  MessageMonitor = _monitor'                  StartTimeout = TimeSpan.FromSeconds(5)'              };
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,MaxConcurrency_StartsAtMaxConcurrency,The following statement contains a magic number: messageProcessingStrategy.MaxConcurrency.ShouldBe(123);
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,AvailableWorkers_StartsAtMaxConcurrency,The following statement contains a magic number: var options = new ThrottledOptions()              {                  MaxConcurrency = 123'                  Logger = _logger'                  MessageMonitor = _monitor'                  StartTimeout = TimeSpan.FromSeconds(5)'              };
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,AvailableWorkers_StartsAtMaxConcurrency,The following statement contains a magic number: var options = new ThrottledOptions()              {                  MaxConcurrency = 123'                  Logger = _logger'                  MessageMonitor = _monitor'                  StartTimeout = TimeSpan.FromSeconds(5)'              };
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,AvailableWorkers_StartsAtMaxConcurrency,The following statement contains a magic number: messageProcessingStrategy.AvailableWorkers.ShouldBe(123);
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,WhenATasksIsAdded_MaxConcurrencyIsUnaffected,The following statement contains a magic number: var options = new ThrottledOptions()              {                  MaxConcurrency = 123'                  Logger = _logger'                  MessageMonitor = _monitor'                  StartTimeout = TimeSpan.FromSeconds(5)'              };
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,WhenATasksIsAdded_MaxConcurrencyIsUnaffected,The following statement contains a magic number: var options = new ThrottledOptions()              {                  MaxConcurrency = 123'                  Logger = _logger'                  MessageMonitor = _monitor'                  StartTimeout = TimeSpan.FromSeconds(5)'              };
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,WhenATasksIsAdded_MaxConcurrencyIsUnaffected,The following statement contains a magic number: messageProcessingStrategy.MaxConcurrency.ShouldBe(123);
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,WhenATasksIsAdded_AvailableWorkersIsDecremented,The following statement contains a magic number: var options = new ThrottledOptions()              {                  MaxConcurrency = 123'                  Logger = _logger'                  MessageMonitor = _monitor'                  StartTimeout = TimeSpan.FromSeconds(5)'              };
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,WhenATasksIsAdded_AvailableWorkersIsDecremented,The following statement contains a magic number: var options = new ThrottledOptions()              {                  MaxConcurrency = 123'                  Logger = _logger'                  MessageMonitor = _monitor'                  StartTimeout = TimeSpan.FromSeconds(5)'              };
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,WhenATasksIsAdded_AvailableWorkersIsDecremented,The following statement contains a magic number: messageProcessingStrategy.AvailableWorkers.ShouldBe(122);
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,WhenATaskCompletes_AvailableWorkersIsIncremented,The following statement contains a magic number: var options = new ThrottledOptions()              {                  MaxConcurrency = 3'                  Logger = _logger'                  MessageMonitor = _monitor'                  StartTimeout = TimeSpan.FromSeconds(5)'              };
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,WhenATaskCompletes_AvailableWorkersIsIncremented,The following statement contains a magic number: var options = new ThrottledOptions()              {                  MaxConcurrency = 3'                  Logger = _logger'                  MessageMonitor = _monitor'                  StartTimeout = TimeSpan.FromSeconds(5)'              };
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,WhenATaskCompletes_AvailableWorkersIsIncremented,The following statement contains a magic number: messageProcessingStrategy.AvailableWorkers.ShouldBe(2);
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,WhenATaskCompletes_AvailableWorkersIsIncremented,The following statement contains a magic number: messageProcessingStrategy.MaxConcurrency.ShouldBe(3);
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,WhenATaskCompletes_AvailableWorkersIsIncremented,The following statement contains a magic number: messageProcessingStrategy.AvailableWorkers.ShouldBe(3);
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,AvailableWorkers_CanReachZero,The following statement contains a magic number: var options = new ThrottledOptions()              {                  MaxConcurrency = 10'                  Logger = _logger'                  MessageMonitor = _monitor'                  StartTimeout = TimeSpan.FromSeconds(5)'              };
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,AvailableWorkers_CanReachZero,The following statement contains a magic number: var options = new ThrottledOptions()              {                  MaxConcurrency = 10'                  Logger = _logger'                  MessageMonitor = _monitor'                  StartTimeout = TimeSpan.FromSeconds(5)'              };
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,AvailableWorkers_CanReachZero,The following statement contains a magic number: const int capacity = 10;
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,AvailableWorkers_CanGoToZeroAndBackToFull,The following statement contains a magic number: var options = new ThrottledOptions()              {                  MaxConcurrency = 10'                  Logger = _logger'                  MessageMonitor = _monitor'                  StartTimeout = TimeSpan.FromSeconds(5)'              };
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,AvailableWorkers_CanGoToZeroAndBackToFull,The following statement contains a magic number: var options = new ThrottledOptions()              {                  MaxConcurrency = 10'                  Logger = _logger'                  MessageMonitor = _monitor'                  StartTimeout = TimeSpan.FromSeconds(5)'              };
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,AvailableWorkers_CanGoToZeroAndBackToFull,The following statement contains a magic number: const int capacity = 10;
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,AvailableWorkers_IsNeverNegative,The following statement contains a magic number: var options = new ThrottledOptions()              {                  MaxConcurrency = 10'                  Logger = _logger'                  MessageMonitor = _monitor'                  StartTimeout = TimeSpan.FromSeconds(5)'              };
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,AvailableWorkers_IsNeverNegative,The following statement contains a magic number: var options = new ThrottledOptions()              {                  MaxConcurrency = 10'                  Logger = _logger'                  MessageMonitor = _monitor'                  StartTimeout = TimeSpan.FromSeconds(5)'              };
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,AvailableWorkers_IsNeverNegative,The following statement contains a magic number: const int capacity = 10;
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,ProcessMessagesSequentially_True_Processes_Messages_One_By_One,The following statement contains a magic number: var options = new ThrottledOptions()              {                  MaxConcurrency = 1'                  Logger = _logger'                  MessageMonitor = _monitor'                  StartTimeout = TimeSpan.FromSeconds(5)'                  ProcessMessagesSequentially = true'              };
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,ProcessMessagesSequentially_False_Processes_Messages_In_Parallel,The following statement contains a magic number: var options = new ThrottledOptions()              {                  MaxConcurrency = 100'                  Logger = _logger'                  MessageMonitor = _monitor'                  StartTimeout = Timeout.InfiniteTimeSpan'                  ProcessMessagesSequentially = false'              };
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,ProcessMessagesSequentially_False_Processes_Messages_In_Parallel,The following statement contains a magic number: bool allWorkDone = SpinWait.SpinUntil(() => Interlocked.Read(ref count) >= 1000' TimeSpan.FromSeconds(10));
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,ProcessMessagesSequentially_False_Processes_Messages_In_Parallel,The following statement contains a magic number: bool allWorkDone = SpinWait.SpinUntil(() => Interlocked.Read(ref count) >= 1000' TimeSpan.FromSeconds(10));
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,Parallel_Processing_Does_Not_Exceed_Concurrency,The following statement contains a magic number: int maxConcurrency = 10;
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,Parallel_Processing_Does_Not_Exceed_Concurrency,The following statement contains a magic number: allWorkDone = SpinWait.SpinUntil(() => Interlocked.Read(ref workDone) >= 1000' TimeSpan.FromSeconds(10));
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,Parallel_Processing_Does_Not_Exceed_Concurrency,The following statement contains a magic number: allWorkDone = SpinWait.SpinUntil(() => Interlocked.Read(ref workDone) >= 1000' TimeSpan.FromSeconds(10));
Magic Number,JustSaying.UnitTests.Messaging.MessageProcessingStrategies,ThrottledTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\MessageProcessingStrategies\ThrottledTests.cs,AllowTasksToComplete,The following statement contains a magic number: await Task.Delay(100);
Magic Number,JustSaying.UnitTests.Messaging.Serialization.SubjectProviders,GenericMessageSubjectProviderTests,D:\research\architectureSmells\repos\justeat_JustSaying\tests\JustSaying.UnitTests\Messaging\Serialization\SubjectProviders\GenericMessageSubjectProviderTests.cs,GetSubjectForType_GenericType_ReturnsFlattenedTypeNamesWithNamepaces_TrunactedToMaxSnsSubjectLength,The following statement contains a magic number: subject.Length.ShouldBe(100);
