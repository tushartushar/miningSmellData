Implementation smell,Namespace,Class,File,Method,Description
Long Method,System.Windows.Controls,PopupHelper,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Runtime.Configuration\CustomControls\PopupHelper.cs,Arrange,The method has 106 lines of code.
Complex Method,System.Windows.Controls,AutoCompleteBox,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Runtime.Configuration\CustomControls\AutoCompleteBox.cs,OnMinimumPopulateDelayPropertyChanged,Cyclomatic complexity of the method is 8
Complex Method,System.Windows.Controls,AutoCompleteBox,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Runtime.Configuration\CustomControls\AutoCompleteBox.cs,UpdateTextCompletion,Cyclomatic complexity of the method is 9
Complex Method,System.Windows.Controls,AutoCompleteBox,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Runtime.Configuration\CustomControls\AutoCompleteBox.cs,ItemsSourceCollectionChanged,Cyclomatic complexity of the method is 12
Complex Method,System.Windows.Controls,AutoCompleteBox,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Runtime.Configuration\CustomControls\AutoCompleteBox.cs,OnKeyDown,Cyclomatic complexity of the method is 8
Complex Method,System.Windows.Controls,PopupHelper,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Runtime.Configuration\CustomControls\PopupHelper.cs,Arrange,Cyclomatic complexity of the method is 11
Long Parameter List,System.Windows.Controls,RoutedPropertyChangingEventArgs<T>,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Runtime.Configuration\CustomControls\RoutedPropertyChangingEventArgs.cs,RoutedPropertyChangingEventArgs,The method has 5 parameters. Parameters: property' oldValue' newValue' isCancelable' routedEvent
Long Identifier,System.Windows.Controls,AutoCompleteBox,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Runtime.Configuration\CustomControls\AutoCompleteBox.cs,,The length of the parameter IsTextCompletionEnabledProperty is 31.
Long Statement,System.Windows.Controls,AutoCompleteBox,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Runtime.Configuration\CustomControls\AutoCompleteBox.cs,OnMinimumPopulateDelayPropertyChanged,The length of the statement  "                    Dev2.Runtime.Configuration.Properties.Resources.AutoComplete_OnMinimumPopulateDelayPropertyChanged_InvalidValue' newValue)' "value"); " is 133.
Long Statement,System.Windows.Controls,AutoCompleteBox,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Runtime.Configuration\CustomControls\AutoCompleteBox.cs,OnMaxDropDownHeightPropertyChanged,The length of the statement  "                throw new ArgumentException(string.Format(CultureInfo.InvariantCulture' Dev2.Runtime.Configuration.Properties.Resources.AutoComplete_OnMaxDropDownHeightPropertyChanged_InvalidValue' e.NewValue)' "value"); " is 204.
Long Statement,System.Windows.Controls,AutoCompleteBox,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Runtime.Configuration\CustomControls\AutoCompleteBox.cs,OnSearchTextPropertyChanged,The length of the statement  "                throw new InvalidOperationException(Dev2.Runtime.Configuration.Properties.Resources.AutoComplete_OnSearchTextPropertyChanged_InvalidWrite); " is 139.
Long Statement,System.Windows.Controls,AutoCompleteBox,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Runtime.Configuration\CustomControls\AutoCompleteBox.cs,OnFilterModePropertyChanged,The length of the statement  "                throw new ArgumentException(Dev2.Runtime.Configuration.Properties.Resources.AutoComplete_OnFilterModePropertyChanged_InvalidValue' "value"); " is 140.
Long Statement,System.Windows.Controls,AutoCompleteBox,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Runtime.Configuration\CustomControls\AutoCompleteBox.cs,ClosingDropDown,The length of the statement  "            RoutedPropertyChangingEventArgs<bool> args = new RoutedPropertyChangingEventArgs<bool>(IsDropDownOpenProperty' oldValue' false' true); " is 134.
Long Statement,System.Windows.Controls,AutoCompleteBox,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Runtime.Configuration\CustomControls\AutoCompleteBox.cs,ClosingDropDown,The length of the statement  "            var args = new RoutedPropertyChangingEventArgs<bool>(IsDropDownOpenProperty' oldValue' false' true' DropDownClosingEvent); " is 122.
Long Statement,System.Windows.Controls,AutoCompleteBox,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Runtime.Configuration\CustomControls\AutoCompleteBox.cs,OpeningDropDown,The length of the statement  "            RoutedPropertyChangingEventArgs<bool> args = new RoutedPropertyChangingEventArgs<bool>(IsDropDownOpenProperty' oldValue' true' true); " is 133.
Long Statement,System.Windows.Controls,AutoCompleteBox,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Runtime.Configuration\CustomControls\AutoCompleteBox.cs,OpeningDropDown,The length of the statement  "            var args = new RoutedPropertyChangingEventArgs<bool>(IsDropDownOpenProperty' oldValue' true' true' DropDownOpeningEvent); " is 121.
Long Statement,System.Windows.Controls,AutoCompleteBox,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Runtime.Configuration\CustomControls\AutoCompleteBox.cs,HasFocus,The length of the statement  "                IsKeyboardFocusWithin ? Keyboard.FocusedElement as DependencyObject : FocusManager.GetFocusedElement(this) as DependencyObject; " is 127.
Long Statement,System.Windows.Controls,AutoCompleteBox,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Runtime.Configuration\CustomControls\AutoCompleteBox.cs,TextUpdated,The length of the statement  "            if (IsTextCompletionEnabled && TextBox != null && TextBox.SelectionLength > 0 && TextBox.SelectionStart != TextBox.Text.Length) " is 127.
Long Statement,System.Windows.Controls,AutoCompleteBox,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Runtime.Configuration\CustomControls\AutoCompleteBox.cs,UpdateTextCompletion,The length of the statement  "                        var top = FilterMode == AutoCompleteFilterMode.StartsWith || FilterMode == AutoCompleteFilterMode.StartsWithCaseSensitive " is 121.
Long Statement,System.Windows.Controls,AutoCompleteBox,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Runtime.Configuration\CustomControls\AutoCompleteBox.cs,UpdateVisualState,The length of the statement  "            VisualStateManager.GoToState(this' IsDropDownOpen ? VisualStates.StatePopupOpened : VisualStates.StatePopupClosed' useTransitions); " is 131.
Long Statement,System.Windows.Controls,InteractionHelper,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Runtime.Configuration\CustomControls\InteractionHelper.cs,UpdateVisualStateBase,The length of the statement  "                VisualStates.GoToState(Control' useTransitions' VisualStates.StatePressed' VisualStates.StateMouseOver' VisualStates.StateNormal); " is 130.
Long Statement,System.Windows.Controls,SelectorSelectionAdapter,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Runtime.Configuration\CustomControls\SelectorSelectionAdapter.cs,SelectedIndexIncrement,The length of the statement  "                SelectorControl.SelectedIndex = SelectorControl.SelectedIndex + 1 >= SelectorControl.Items.Count ? -1 : SelectorControl.SelectedIndex + 1; " is 138.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Runtime.Configuration\obj\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Complex Conditional,System.Windows.Controls,AutoCompleteBox,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Runtime.Configuration\CustomControls\AutoCompleteBox.cs,OnFilterModePropertyChanged,The conditional expression  "mode != AutoCompleteFilterMode.Contains &&                  mode != AutoCompleteFilterMode.EqualsCaseSensitive &&                  mode != AutoCompleteFilterMode.StartsWith &&                  mode != AutoCompleteFilterMode.Custom &&                  mode != AutoCompleteFilterMode.None"  is complex.
Complex Conditional,System.Windows.Controls,AutoCompleteBox,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Runtime.Configuration\CustomControls\AutoCompleteBox.cs,UpdateTextValue,The conditional expression  "(userInitiated == null || userInitiated == false) && TextBox != null && TextBox.Text != value"  is complex.
Complex Conditional,System.Windows.Controls,AutoCompleteBox,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Runtime.Configuration\CustomControls\AutoCompleteBox.cs,TextUpdated,The conditional expression  "IsTextCompletionEnabled && TextBox != null && TextBox.SelectionLength > 0 && TextBox.SelectionStart != TextBox.Text.Length"  is complex.
Complex Conditional,System.Windows.Controls,PopupHelper,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Runtime.Configuration\CustomControls\PopupHelper.cs,Arrange,The conditional expression  "rootHeight.Equals(0) || rootWidth.Equals(0) || popupContentWidth.Equals(0) || popupContentHeight.Equals(0)"  is complex.
Magic Number,System.Windows.Controls,PopupHelper,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Runtime.Configuration\CustomControls\PopupHelper.cs,Arrange,The following statement contains a magic number: if(double.IsInfinity(popupMaxHeight) || double.IsNaN(popupMaxHeight))              {                  popupMaxHeight = (rootHeight - myControlHeight) * 3 / 5;              }
Magic Number,System.Windows.Controls,PopupHelper,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Runtime.Configuration\CustomControls\PopupHelper.cs,Arrange,The following statement contains a magic number: if(double.IsInfinity(popupMaxHeight) || double.IsNaN(popupMaxHeight))              {                  popupMaxHeight = (rootHeight - myControlHeight) * 3 / 5;              }
Magic Number,System.Windows.Controls,PopupHelper,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Runtime.Configuration\CustomControls\PopupHelper.cs,Arrange,The following statement contains a magic number: if(rootHeight < popupY + popupContentHeight)              {                  below = false;                  popupY = rootOffsetY - popupContentHeight;                  if(popupY < 0)                  {                      if(rootOffsetY < (rootHeight - myControlHeight) / 2)                      {                          below = true;                          popupY = rootOffsetY + myControlHeight;                      }                      else                      {                          popupY = rootOffsetY - popupContentHeight;                      }                  }              }
