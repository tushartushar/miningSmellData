Implementation smell,Namespace,Class,File,Method,Description
Long Method,WarewolfCOMIPC,Program,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\WarewolfCOMIPC\Program.cs,LoadLibrary,The method has 114 lines of code.
Long Parameter List,WarewolfCOMIPC,IDispatchInfo,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\WarewolfCOMIPC\DispatchUtility.cs,GetDispId,The method has 5 parameters. Parameters: riid' name' nameCount' lcid' dispId
Long Statement,WarewolfCOMIPC,DispatchUtility,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\WarewolfCOMIPC\DispatchUtility.cs,Invoke,The length of the statement  "            var result = type.InvokeMember(memberName' BindingFlags.InvokeMethod | BindingFlags.GetProperty 'null' obj' args' null); " is 120.
Long Statement,WarewolfCOMIPC,Program,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\WarewolfCOMIPC\Program.cs,LoadLibrary,The length of the statement  "                                    var propValue = retType.InvokeMember(propertyInfo.Name' BindingFlags.Instance | BindingFlags.GetProperty' null' result' null); " is 126.
Long Statement,WarewolfCOMIPC,Program,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\WarewolfCOMIPC\Program.cs,BuildValuedTypeParams,The length of the statement  "                var type = Type.GetTypeFromProgID(methodParameterTypeName.Substring(0' methodParameterTypeName.IndexOf("&'"' StringComparison.InvariantCultureIgnoreCase))); " is 156.
Long Statement,WarewolfCOMIPC,Program,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\WarewolfCOMIPC\Program.cs,BuildObjectType,The length of the statement  "                    type.InvokeMember(prop.Name' BindingFlags.Instance | BindingFlags.SetProperty | BindingFlags.Public' null' obj' new object[] { valueForProp }); " is 143.
Magic Number,WarewolfCOMIPC,Program,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\WarewolfCOMIPC\Program.cs,Main,The following statement contains a magic number: using (var pipe = new NamedPipeServerStream(token' PipeDirection.InOut' 253' PipeTransmissionMode.Message))              {                  Console.WriteLine("Waiting Server Pipe Stream");                  pipe.WaitForConnection();                  AcceptMessagesFromPipe(pipe);              }
