Implementation smell,Namespace,Class,File,Method,Description
Long Method,Dev2.Common.ExtMethods,TypeExtensions,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\ExtMethods\TypeExtensions.cs,GetTypeFromSimpleName,The method has 108 lines of code.
Long Method,Dev2.Common.TimeZoneBuilder,DateTimeFormatPartsForDotNet,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPartsForDotNet.cs,Build,The method has 126 lines of code.
Long Method,Dev2.Common.TimeZoneBuilder,TimeFormatPartBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeFormatPartBuilder.cs,Build,The method has 173 lines of code.
Complex Method,Dev2.Common.DateAndTime,DateTimeParser,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeParser.cs,MatchInputFormatToCulture,Cyclomatic complexity of the method is 10
Complex Method,Dev2.Common.DateAndTime,DateTimeParser,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeParser.cs,TryGetDataFromDateTime,Cyclomatic complexity of the method is 8
Complex Method,Dev2.Common.DateAndTime.TO,DateTimeResultTO,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\TO\DateTimeResultTO.cs,ToDateTime,Cyclomatic complexity of the method is 8
Complex Method,Dev2.Common.ExtMethods,TypeExtensions,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\ExtMethods\TypeExtensions.cs,GetTypeFromSimpleName,Cyclomatic complexity of the method is 26
Complex Method,Dev2.Common.Utils,Interpreter,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Utils\JsonPath.cs,Trace,Cyclomatic complexity of the method is 9
Long Parameter List,Dev2.Common.DateAndTime,DateTimeConverterFactory,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeConverterFactory.cs,CreateDateTimeTO,The method has 6 parameters. Parameters: dateTime' inputFormat' outputFormat' timeModifierType' timeModifierAmount' result
Long Parameter List,Dev2.Common.DateAndTime,DateTimeFormatter,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeFormatter.cs,ApplyDateTimeFormatParts,The method has 7 parameters. Parameters: dateTimeTO' result' error' dateTimeParser' nothingDied' dateTimeResultTO' tmpDateTime
Long Parameter List,Dev2.Common.DateAndTime,DateTimeFormatter,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeFormatter.cs,AddParts,The method has 6 parameters. Parameters: result' error' nothingDied' dateTimeResultTO' tmpDateTime' formatParts
Long Parameter List,Dev2.Common.DateAndTime,DateTimeLiteralProcessor,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeLiteralProcessor.cs,ProcessInsideEscapedLiteral,The method has 5 parameters. Parameters: error' currentChar' literalRegionState' currentValue' nothingDied
Long Parameter List,Dev2.Common.DateAndTime,DateTimeLiteralProcessor,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeLiteralProcessor.cs,ProcessInsideLiteral,The method has 8 parameters. Parameters: formatParts' error' currentChar' formatArray' count' forwardLookupLength' currentValue' literalRegionState
Long Parameter List,Dev2.Common.DateAndTime,DateTimeLiteralProcessor,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeLiteralProcessor.cs,ProcessInsideInferredEscapedLiteral,The method has 5 parameters. Parameters: error' currentChar' literalRegionState' currentValue' nothingDied
Long Parameter List,Dev2.Common.DateAndTime,DateTimeLiteralProcessor,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeLiteralProcessor.cs,ProcessInsideInferredLiteral,The method has 10 parameters. Parameters: dateTimeFormatForwardLookups' dateTimeFormatPartOptions' formatParts' error' currentChar' formatArray' count' forwardLookupLength' currentValue' literalRegionState
Long Parameter List,Dev2.Common.DateAndTime,DateTimeLiteralProcessor,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeLiteralProcessor.cs,ProcessOutsideLiteral,The method has 10 parameters. Parameters: dateTimeFormatForwardLookups' dateTimeFormatPartOptions' formatParts' error' currentChar' formatArray' count' forwardLookupLength' literalRegionState' currentValue
Long Parameter List,Dev2.Common.DateAndTime,DateTimeLiteralProcessor,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeLiteralProcessor.cs,TryGetDateTimeFormatPart,The method has 7 parameters. Parameters: formatArray' startPosition' forwardLookupIndex' dateTimeFormatForwardLookups' dateTimeFormatPartOptions' result' error
Long Parameter List,Dev2.Common.DateAndTime,DateTimeLiteralProcessor,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeLiteralProcessor.cs,CheckLookupLengths,The method has 6 parameters. Parameters: startPosition' forwardLookupIndex' lookupLengths' count' error' nothingDied
Long Parameter List,Dev2.Common.DateAndTime,DateTimeParser,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeParser.cs,TryParse,The method has 5 parameters. Parameters: data' inputFormat' parseAsTime' result' error
Long Parameter List,Dev2.Common.DateAndTime,DateTimeParser,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeParser.cs,TryCulture,The method has 10 parameters. Parameters: parseAsTime' result' error' nothingDied' originalInputFormat' culturesTried' MaxAttempts' dateTimeArray' position' formatParts
Long Parameter List,Dev2.Common.DateAndTime,DateTimeParser,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeParser.cs,TryGetDataFromDateTime,The method has 7 parameters. Parameters: dateTimeArray' startPosition' part' result' passAsTime' resultLength' error
Long Parameter List,Dev2.Common.DateAndTime,DateTimeParser,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeParser.cs,TryGetAValueForEachOption,The method has 7 parameters. Parameters: dateTimeArray' startPosition' result' passAsTime' resultLength' dataFound' partOptions
Long Parameter List,Dev2.Common.DateAndTime,GetDateTimeFormatPartsProcess,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeParser.cs,GetLiteralRegionStateOrLength,The method has 6 parameters. Parameters: formatParts' formatArray' literalRegionState' count' currentValue' forwardLookupLength
Long Parameter List,Dev2.Common.Common,ExtensionMethods,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Common\ExtensionMethods.cs,IndexOf,The method has 5 parameters. Parameters: sb' value' escapeChar' startIndex' ignoreCase
Long Parameter List,Dev2.Common.Common,ExtensionMethods,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Common\ExtensionMethods.cs,GetIndexOfCharacter,The method has 5 parameters. Parameters: sb' value' startIndex' maxSearchLength' length
Long Parameter List,Dev2.Common.Common,ExtensionMethods,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Common\ExtensionMethods.cs,GetIndexOfCharacter,The method has 6 parameters. Parameters: sb' value' escapeChar' startIndex' maxSearchLength' length
Long Parameter List,Dev2.Common.Common,ExtensionMethods,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Common\ExtensionMethods.cs,IndexOf,The method has 5 parameters. Parameters: sb' value' index' length' startingAt
Long Parameter List,Dev2.Common.Common,ExtensionMethods,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Common\ExtensionMethods.cs,SkipDueToEscapeChar,The method has 5 parameters. Parameters: word' startIdx' candidatePos' escapeChar' searchValue
Long Parameter List,Dev2.Common.DateAndTime.TO,DateTimeFormatPartOptionTO,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\TO\DateTimeFormatPartOptionTO.cs,DateTimeFormatPartOptionTO,The method has 6 parameters. Parameters: length' predicate' isNumeric' actualValue' assignAction' resultLength
Long Parameter List,Dev2.Common.DateAndTime.TO,DateTimeOperationTO,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\TO\DateTimeOperationTO.cs,DateTimeOperationTO,The method has 6 parameters. Parameters: dateTime' inputFormat' outputFormat' timeModifierType' timeModifierAmount' result
Long Parameter List,Dev2.Common.Wrappers,DropboxClientWrapper,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Wrappers\DropboxClientWrapper.cs,UploadAsync,The method has 6 parameters. Parameters: path' mode' autorename' clientModified' mute' body
Long Parameter List,Dev2.Common.Search,SearchResult,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Search\Search.cs,SearchResult,The method has 5 parameters. Parameters: resourceId' name' path' type' match
Long Parameter List,Dev2.Common.Utils,Interpreter,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Utils\JsonPath.cs,Walk,The method has 5 parameters. Parameters: loc' expr' value' path' callback
Long Parameter List,Dev2.Common.Utils,Interpreter,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Utils\JsonPath.cs,WalkWild,The method has 5 parameters. Parameters: member' loc' expr' value' path
Long Parameter List,Dev2.Common.Utils,Interpreter,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Utils\JsonPath.cs,WalkTree,The method has 5 parameters. Parameters: member' loc' expr' value' path
Long Parameter List,Dev2.Common.Utils,Interpreter,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Utils\JsonPath.cs,WalkFiltered,The method has 5 parameters. Parameters: member' loc' expr' value' path
Long Parameter List,Dev2.Common.Utils,TextUtils,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Utils\TextUtils.cs,BackwardsLookup,The method has 5 parameters. Parameters: stringToReplaceIn' startIndex' indexOfReplacement' dontReplace' index
Long Identifier,Dev2.Common,DebugStateTreeBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DebugStateTreeBuilder.cs,AddChildren,The length of the parameter IsActualTypeDsfForEachActivity is 30.
Long Identifier,Dev2.Common,GlobalConstants,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\GlobalConstants.cs,,The length of the parameter ExecutionLoggingResultStartTag is 30.
Long Identifier,Dev2.Common,GlobalConstants,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\GlobalConstants.cs,,The length of the parameter ViewInBrowserForceDownloadSize is 30.
Long Identifier,Dev2.Common,GlobalConstants,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\GlobalConstants.cs,,The length of the parameter Dev2RuntimeConfigurationAssemblyName is 36.
Long Identifier,Dev2.Common,GlobalConstants,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\GlobalConstants.cs,,The length of the parameter Dev2MessageBoxDesignSurfaceTabPasteDialog is 41.
Long Identifier,Dev2.Common,GlobalConstants,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\GlobalConstants.cs,,The length of the parameter Dev2MessageBoxNoInputsWhenHyperlinkClickedDialog is 48.
Long Identifier,Dev2.Common,GlobalConstants,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\GlobalConstants.cs,,The length of the parameter NetworkCommunicationErrorTextFormat is 35.
Long Identifier,Dev2.Common,GlobalConstants,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\GlobalConstants.cs,,The length of the parameter AggregateCalculateTextConvertPrefix is 35.
Long Identifier,Dev2.Common,GlobalConstants,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\GlobalConstants.cs,,The length of the parameter AggregateCalculateTextConvertSuffix is 35.
Long Identifier,Dev2.Common,GlobalConstants,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\GlobalConstants.cs,,The length of the parameter AggregateCalculateTextConvertFormat is 35.
Long Identifier,Dev2.Common,GlobalConstants,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\GlobalConstants.cs,,The length of the parameter InjectedDecisionDataListVariable is 32.
Long Identifier,Dev2.Common,GlobalConstants,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\GlobalConstants.cs,,The length of the parameter DefaultDataListInitalizationString is 34.
Long Identifier,Dev2.Common,GlobalConstants,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\GlobalConstants.cs,,The length of the parameter SwitchExpressionTextPropertyText is 32.
Long Identifier,Dev2.Common,GlobalConstants,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\GlobalConstants.cs,,The length of the parameter UpgradedExplorerItemModelFormat is 31.
Long Identifier,Dev2.Common,GlobalConstants,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\GlobalConstants.cs,,The length of the parameter Dev2DotNetDefaultDateTimeFormat is 31.
Long Identifier,Dev2.Common,GlobalConstants,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\GlobalConstants.cs,,The length of the parameter Dev2CustomDefaultDateTimeFormat is 31.
Long Identifier,Dev2.Common,GlobalConstants,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\GlobalConstants.cs,,The length of the parameter PreviousDev2DotNetDefaultDateTimeFormat is 39.
Long Identifier,Dev2.Common,GlobalConstants,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\GlobalConstants.cs,,The length of the parameter PreviousGlobalDefaultNowFormat is 30.
Long Identifier,Dev2.Common,GlobalConstants,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\GlobalConstants.cs,,The length of the parameter SerializableResourceSingleQuote is 31.
Long Identifier,Dev2.Common,GlobalConstants,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\GlobalConstants.cs,,The length of the parameter GreaterThenOrEqualToUnicodeChar is 31.
Long Identifier,Dev2.Common,GlobalConstants,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\GlobalConstants.cs,,The length of the parameter DropboxPathMalformdedException is 30.
Long Identifier,Dev2.Common.DateAndTime,DateTimeParser,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeParser.cs,,The length of the parameter _dateTimeFormatPartOptionsForDotNet is 35.
Long Identifier,Dev2.Common.DateAndTime,DateTimeParser,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeParser.cs,,The length of the parameter _dateTimeFormatForwardLookupsForDotNet is 38.
Long Identifier,Dev2.Common.DateAndTime,GetDateTimeFormatPartsProcess,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeParser.cs,,The length of the parameter _dateTimeFormatForwardLookups1 is 30.
Long Statement,Dev2.Common,ApisJson,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\ApisJson.cs,Equals,The length of the statement  "            return string.Equals(Name' other.Name) && string.Equals(Description' other.Description) && string.Equals(Image' other.Image) && string.Equals(Url' other.Url) && Created.Equals(other.Created) && Modified.Equals(other.Modified) && string.Equals(SpecificationVersion' other.SpecificationVersion); " is 293.
Long Statement,Dev2.Common,FieldAndPropertyMapper,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Mapper.cs,MapFields,The length of the statement  "            var sourceFields = mapFrom.GetType().GetFields(BindingFlags.Instance | BindingFlags.NonPublic).Where(info => !info.Name.Contains("k__BackingField")); " is 149.
Long Statement,Dev2.Common,FieldAndPropertyMapper,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Mapper.cs,MapFields,The length of the statement  "            var targetFields = mapTo.GetType().GetFields(BindingFlags.Instance | BindingFlags.NonPublic).Where(info => !info.Name.Contains("k__BackingField")); " is 147.
Long Statement,Dev2.Common.DateAndTime,StandardDateTimeComparer,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\StandardDateTimeComparer.cs,TryCompare,The length of the statement  "            var parsedCorreclty = DateTime.TryParseExact(dateTimeDiffTo.Input1' dateTimeDiffTo.InputFormat' CultureInfo.InvariantCulture' DateTimeStyles.None' out var parsedDate); " is 167.
Long Statement,Dev2.Common.DateAndTime,StandardDateTimeComparer,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\StandardDateTimeComparer.cs,TryCompare,The length of the statement  "                parsedCorreclty = DateTime.TryParseExact(dateTimeDiffTo.Input2' dateTimeDiffTo.InputFormat' CultureInfo.InvariantCulture' DateTimeStyles.None' out var parsedDate1); " is 164.
Long Statement,Dev2.Common.DateAndTime,StandardDateTimeComparer,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\StandardDateTimeComparer.cs,TryCompare,The length of the statement  "                    parsedCorreclty = OutputFormats.TryGetValue(dateTimeDiffTo.OutputType' out Func<DateTime' DateTime' double> returnedFunc); " is 122.
Long Statement,Dev2.Common.DateAndTime,StandardDateTimeFormatter,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\StandardDateTimeFormatter.cs,TryFormat,The length of the statement  "                dateTimeTO.DateTime = DateTime.Now.ToString(GlobalConstants.Dev2DotNetDefaultDateTimeFormat' CultureInfo.InvariantCulture); " is 123.
Long Statement,Dev2.Common.DateAndTime,StandardDateTimeFormatter,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\StandardDateTimeFormatter.cs,TryFormat,The length of the statement  "            var internallyParsedValue = DateTime.TryParseExact(dateTimeTO.DateTime.Trim()' dateTimeTO.InputFormat' CultureInfo.InvariantCulture' DateTimeStyles.AllowWhiteSpaces' out var dateResult); " is 186.
Long Statement,Dev2.Common.DateAndTime,DateTimeComparer,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeComparer.cs,TryCompare,The length of the statement  "            var noErrorOccured = dateTimeParser.TryParseDateTime(dateTimeDiffTo.Input1' dateTimeDiffTo.InputFormat' out IDateTimeResultTO tmpRes' out error); " is 145.
Long Statement,Dev2.Common.DateAndTime,DateTimeComparer,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeComparer.cs,TryCompare,The length of the statement  "                noErrorOccured = dateTimeParser.TryParseDateTime(dateTimeDiffTo.Input2' dateTimeDiffTo.InputFormat' out tmpRes' out error); " is 123.
Long Statement,Dev2.Common.DateAndTime,DateTimeComparer,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeComparer.cs,TryCompare,The length of the statement  "                noErrorOccured = OutputFormats.TryGetValue(dateTimeDiffTo.OutputType' out Func<DateTime' DateTime' double> returnedFunc); " is 121.
Long Statement,Dev2.Common.DateAndTime,DateTimeFormatter,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeFormatter.cs,TryFormat,The length of the statement  "            if (dateTimeParser.TryParseDateTime(dateTimeTO.DateTime?.Trim()' dateTimeTO.InputFormat' out IDateTimeResultTO dateTimeResultTO' out error)) " is 140.
Long Statement,Dev2.Common.DateAndTime,DateTimeFormatter,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeFormatter.cs,TryFormat,The length of the statement  "                if (!string.IsNullOrWhiteSpace(dateTimeTO.TimeModifierType) && TimeModifiers.TryGetValue(dateTimeTO.TimeModifierType' out Func<DateTime' int' DateTime> funcToExecute) && funcToExecute != null) " is 192.
Long Statement,Dev2.Common.DateAndTime,DateTimeFormatter,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeFormatter.cs,TryFormat,The length of the statement  "                    result = ApplyDateTimeFormatParts(dateTimeTO' result' out error' dateTimeParser' out nothingDied' dateTimeResultTO' tmpDateTime); " is 129.
Long Statement,Dev2.Common.DateAndTime,DateTimeFormatter,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeFormatter.cs,ApplyDateTimeFormatParts,The length of the statement  "            nothingDied = dateTimeParser.TryGetDateTimeFormatParts(outputFormat' out List<IDateTimeFormatPartTO> formatParts' out error); " is 125.
Long Statement,Dev2.Common.DateAndTime,DateTimeLiteralProcessor,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeLiteralProcessor.cs,ProcessOutsideLiteral,The length of the statement  "            if(currentChar == DateTimeParser.DateLiteralCharacter && CheckForDoubleEscapedLiteralCharacter(formatArray' count' out tmpForwardLookupResult' out error)) " is 154.
Long Statement,Dev2.Common.DateAndTime,DateTimeParser,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeParser.cs,TranslateDotNetToDev2Format,The length of the statement  "            var getDateTimeFormatParts = new GetDateTimeFormatPartsProcess(originalFormat' _dateTimeFormatForwardLookupsForDotNet' _dateTimeFormatPartOptionsForDotNet); " is 156.
Long Statement,Dev2.Common.DateAndTime,DateTimeParser,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeParser.cs,TryGetDateTimeFormatParts,The length of the statement  "           var getDateTimeFormatParts = new GetDateTimeFormatPartsProcess(format' _dateTimeFormatForwardLookups' _dateTimeFormatPartOptions); " is 130.
Long Statement,Dev2.Common.DateAndTime,DateTimeParser,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeParser.cs,TryParse,The length of the statement  "                var getDateTimeFormatParts = new GetDateTimeFormatPartsProcess(originalInputFormat' _dateTimeFormatForwardLookups' _dateTimeFormatPartOptions); " is 143.
Long Statement,Dev2.Common.DateAndTime,DateTimeParser,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeParser.cs,TryParse,The length of the statement  "                    TryCulture(parseAsTime' ref result' ref error' ref nothingDied' ref originalInputFormat' ref culturesTried' MaxAttempts' dateTimeArray' ref position' getDateTimeFormatParts.Result); " is 181.
Long Statement,Dev2.Common.DateAndTime,DateTimeParser,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeParser.cs,TryGetDataFromDateTime,The length of the statement  "                    TryGetAValueForEachOption(dateTimeArray' startPosition' result' passAsTime' ref resultLength' ref dataFound' partOptions); " is 122.
Long Statement,Dev2.Common.DateAndTime,DateTimeParser,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeParser.cs,TryGetAValueForEachOption,The length of the statement  "                var (predicateRun' forwardLookupResult) = GetPredicateRunForwardLookupResult(dateTimeArray' startPosition' partOption' passAsTime); " is 131.
Long Statement,Dev2.Common.DateAndTime,GetDateTimeFormatPartsProcess,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeParser.cs,Execute,The length of the statement  "                GetLiteralRegionStateOrLength(_formatParts' formatArray' ref literalRegionState' count' ref currentValue' ref forwardLookupLength); " is 131.
Long Statement,Dev2.Common.DateAndTime,GetDateTimeFormatPartsProcess,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeParser.cs,GetLiteralRegionStateOrLength,The length of the statement  "                    forwardLookupLength = DateTimeLiteralProcessor.ProcessOutsideLiteral(_dateTimeFormatForwardLookups1' _dateTimeFormatPartOptions' formatParts' ref _error' currentChar' formatArray' count' forwardLookupLength' ref literalRegionState' ref currentValue); " is 250.
Long Statement,Dev2.Common.DateAndTime,GetDateTimeFormatPartsProcess,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeParser.cs,GetLiteralRegionStateOrLength,The length of the statement  "                    forwardLookupLength = DateTimeLiteralProcessor.ProcessInsideInferredLiteral(_dateTimeFormatForwardLookups1' _dateTimeFormatPartOptions' formatParts' ref _error' currentChar' formatArray' count' forwardLookupLength' ref currentValue' ref literalRegionState); " is 257.
Long Statement,Dev2.Common.DateAndTime,GetDateTimeFormatPartsProcess,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeParser.cs,GetLiteralRegionStateOrLength,The length of the statement  "                    literalRegionState = DateTimeLiteralProcessor.ProcessInsideInferredEscapedLiteral(ref _error' currentChar' literalRegionState' ref currentValue' ref _nothingDied); " is 163.
Long Statement,Dev2.Common.DateAndTime,GetDateTimeFormatPartsProcess,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeParser.cs,GetLiteralRegionStateOrLength,The length of the statement  "                    forwardLookupLength = DateTimeLiteralProcessor.ProcessInsideLiteral(formatParts' ref _error' currentChar' formatArray' count' forwardLookupLength' ref currentValue' ref literalRegionState); " is 189.
Long Statement,Dev2.Common.DateAndTime,GetDateTimeFormatPartsProcess,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeParser.cs,GetLiteralRegionStateOrLength,The length of the statement  "                    literalRegionState = DateTimeLiteralProcessor.ProcessInsideEscapedLiteral(ref _error' currentChar' literalRegionState' ref currentValue' ref _nothingDied); " is 155.
Long Statement,Dev2.Common.Common,ExtensionMethods,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Common\ExtensionMethods.cs,GetIndexOfCharacter,The length of the statement  "                    while (index < length && sb[i + index] == value[index] || SkipDueToEscapeChar(sb' startIndex' i + index - 1' escapeChar' value)) " is 128.
Long Statement,Dev2.Common.Common,ExtensionMethods,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Common\ExtensionMethods.cs,IsValidJson,The length of the statement  "            if (trimmedInput.StartsWith("{") && trimmedInput.EndsWith("}") || trimmedInput.StartsWith("[") && trimmedInput.EndsWith("]"' StringComparison.CurrentCulture)) " is 158.
Long Statement,Dev2.Common.ExtMethods,StringExtension,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\ExtMethods\StringExtension.cs,SpaceCaseInsenstiveComparision,The length of the statement  "                stringa.ToLowerInvariant().ExceptChars(new[] { ' '' '\t'' '\n'' '\r' }).Equals(stringb.ToLowerInvariant().ExceptChars(new[] { ' '' '\t'' '\n'' '\r' })); " is 152.
Long Statement,Dev2.Common.Wrappers,DirectoryWrapper,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Wrappers\DirectoryWrapper.cs,CreateDirectory,The length of the statement  "                Action action = () => throw new ArgumentNullException(string.Format(ErrorResource.ErrorCreatingDirectory' dir' ane.Message)); " is 125.
Long Statement,Dev2.Common.Wrappers,DirectoryWrapper,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Wrappers\DirectoryWrapper.cs,IsSystemFolder,The length of the statement  "            result |= fsi.FullName.Equals(Environment.GetFolderPath(Environment.SpecialFolder.System)' StringComparison.OrdinalIgnoreCase); " is 127.
Long Statement,Dev2.Common.Wrappers,DirectoryWrapper,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Wrappers\DirectoryWrapper.cs,IsSystemFolder,The length of the statement  "            result |= fsi.FullName.Equals(Environment.GetFolderPath(Environment.SpecialFolder.Windows)' StringComparison.OrdinalIgnoreCase); " is 128.
Long Statement,Dev2.Common.Wrappers,DirectoryWrapper,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Wrappers\DirectoryWrapper.cs,IsSystemFolder,The length of the statement  "            result |= fsi.FullName.Equals(Environment.GetFolderPath(Environment.SpecialFolder.SystemX86)' StringComparison.OrdinalIgnoreCase); " is 130.
Long Statement,Dev2.Common.Wrappers,DirectoryWrapper,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Wrappers\DirectoryWrapper.cs,IsSystemFolder,The length of the statement  "            result |= fsi.FullName.Equals(Environment.GetFolderPath(Environment.SpecialFolder.UserProfile)' StringComparison.OrdinalIgnoreCase); " is 132.
Long Statement,Dev2.Common.Wrappers,DirectoryWrapper,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Wrappers\DirectoryWrapper.cs,IsSystemFolder,The length of the statement  "            result |= fsi.FullName.Equals(Environment.GetFolderPath(Environment.SpecialFolder.Desktop)' StringComparison.OrdinalIgnoreCase); " is 128.
Long Statement,Dev2.Common.Wrappers,DirectoryWrapper,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Wrappers\DirectoryWrapper.cs,IsSystemFolder,The length of the statement  "            result |= fsi.FullName.Equals(Environment.GetFolderPath(Environment.SpecialFolder.DesktopDirectory)' StringComparison.OrdinalIgnoreCase); " is 137.
Long Statement,Dev2.Common.Wrappers,DirectoryWrapper,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Wrappers\DirectoryWrapper.cs,IsSystemFolder,The length of the statement  "            result |= fsi.FullName.Equals(Environment.GetFolderPath(Environment.SpecialFolder.ProgramFiles)' StringComparison.OrdinalIgnoreCase); " is 133.
Long Statement,Dev2.Common.Wrappers,DirectoryWrapper,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Wrappers\DirectoryWrapper.cs,IsSystemFolder,The length of the statement  "            result |= fsi.FullName.Equals(Environment.GetFolderPath(Environment.SpecialFolder.ProgramFilesX86)' StringComparison.OrdinalIgnoreCase); " is 136.
Long Statement,Dev2.Common.Wrappers,DirectoryWrapper,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Wrappers\DirectoryWrapper.cs,IsSystemFolder,The length of the statement  "            result |= fsi.FullName.Equals(Environment.GetFolderPath(Environment.SpecialFolder.AdminTools)' StringComparison.OrdinalIgnoreCase); " is 131.
Long Statement,Dev2.Common.Wrappers,DirectoryWrapper,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Wrappers\DirectoryWrapper.cs,IsSystemFolder,The length of the statement  "            result |= fsi.FullName.Equals(Environment.GetFolderPath(Environment.SpecialFolder.Programs)' StringComparison.OrdinalIgnoreCase); " is 129.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddYearParts,The length of the statement  "                new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)' " is 120.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddEraParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower(CultureInfo.InvariantCulture).Equals("a.d.")' false' "A.D."' _assignManager.AssignEra)' " is 156.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 1' _assignManager.AssignDays)' " is 188.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 2' _assignManager.AssignDays)' " is 188.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 3'_assignManager.AssignDays)' " is 188.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 4' _assignManager.AssignDays)' " is 191.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 5'  _assignManager.AssignDays)' " is 191.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 6' _assignManager.AssignDays)' " is 188.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 7'_assignManager.AssignDays)' " is 189.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 1' _assignManager.AssignDays)' " is 177.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 2' _assignManager.AssignDays)' " is 177.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 3' _assignManager.AssignDays)' " is 178.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 4' _assignManager.AssignDays)' " is 180.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 5' _assignManager.AssignDays)' " is 179.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 6' _assignManager.AssignDays)' " is 177.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 7' _assignManager.AssignDays)' " is 179.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                        CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' " is 129.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                        CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' " is 129.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                        CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' " is 130.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                        CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' " is 130.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                        CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' " is 128.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                        CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' " is 129.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                        CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' " is 129.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                        CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' " is 128.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                        CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' " is 124.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                        CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' " is 129.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                        CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' " is 124.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                        CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' " is 124.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)' " is 182.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)' " is 182.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)' " is 180.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)' " is 180.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)' " is 178.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)' " is 179.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)' " is 179.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)' " is 181.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)' " is 184.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)' " is 183.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)' " is 185.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)' " is 185.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddOffsetParts,The length of the statement  "            DateTimeFormatsParts.Add("K"' new DateTimeFormatPartTO("K"' false' "Time zone in short format: GMT (if available on the system)")); " is 131.
Long Statement,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddOffsetParts,The length of the statement  "             new DateTimeFormatPartOptionTO(6' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone) " is 124.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                        CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' " is 129.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                        CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' " is 129.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                        CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' " is 130.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                        CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' " is 130.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                        CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' " is 128.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                        CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' " is 129.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                        CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' " is 129.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                        CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' " is 128.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                        CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' " is 124.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                        CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' " is 129.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                        CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' " is 124.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                        CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' " is 124.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)' " is 182.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)' " is 182.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)' " is 180.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)' " is 180.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)' " is 178.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)' " is 179.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)' " is 179.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)' " is 181.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)' " is 184.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)' " is 183.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)' " is 185.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)' " is 185.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 7' _assignManager.AssignDaysOfWeek)' " is 181.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 1' _assignManager.AssignDaysOfWeek)' " is 181.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 2' _assignManager.AssignDaysOfWeek)' " is 182.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 3' _assignManager.AssignDaysOfWeek)' " is 184.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 4' _assignManager.AssignDaysOfWeek)' " is 183.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 5' _assignManager.AssignDaysOfWeek)' " is 181.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 6' _assignManager.AssignDaysOfWeek)' " is 183.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The length of the statement  "                        CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 7' " is 127.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The length of the statement  "                        CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 1' " is 127.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The length of the statement  "                        CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 2' " is 128.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The length of the statement  "                        CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' " is 127.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The length of the statement  "                        CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' " is 126.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The length of the statement  "                        CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 5' " is 127.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The length of the statement  "                        CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' " is 126.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddSecondParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager. AssignMilliseconds)' " is 125.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddSecondParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager. AssignMilliseconds)' " is 125.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddSecondParts,The length of the statement  "                    new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager. AssignMilliseconds)' " is 125.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddOffsetParts,The length of the statement  "                IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone); " is 193.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddOffsetParts,The length of the statement  "                IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone); " is 193.
Long Statement,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddOffsetParts,The length of the statement  "                IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone); " is 193.
Long Statement,Dev2.Common.TimeZoneBuilder,TimeFormatPartBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeFormatPartBuilder.cs,Build,The length of the statement  "                        new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)' " is 124.
Long Statement,Dev2.Common.TimeZoneBuilder,TimeFormatPartBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeFormatPartBuilder.cs,Build,The length of the statement  "                        new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)' " is 124.
Long Statement,Dev2.Common.TimeZoneBuilder,TimeFormatPartBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeFormatPartBuilder.cs,Build,The length of the statement  "                        new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)' " is 124.
Long Statement,Dev2.Common.TimeZoneBuilder,TimeFormatPartBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeFormatPartBuilder.cs,Build,The length of the statement  "                        IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone); " is 193.
Long Statement,Dev2.Common.TimeZoneBuilder,TimeFormatPartBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeFormatPartBuilder.cs,Build,The length of the statement  "                        IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone); " is 193.
Long Statement,Dev2.Common.TimeZoneBuilder,TimeFormatPartBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeFormatPartBuilder.cs,Build,The length of the statement  "                        IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone); " is 193.
Long Statement,Dev2.Common.Utils,VerifyArgument,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Utils\VerifyArgument.cs,AreNotNull,The length of the statement  "                throw new ArgumentNullException(@""' String.Format(ErrorResource.ArgumentsNotAllowedToBeNull' args.Where(a => a.Value == null).Aggregate(@""' (a' b) => $"{a}{b.Key}{Environment.NewLine}"))); " is 190.
Complex Conditional,Dev2.Common,DebugStateTreeBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DebugStateTreeBuilder.cs,AddChildren,The conditional expression  "source.ContainsKey(node.ID)                  && (!node.IsAdded || IsActualTypeDsfForEachActivity)                  && node.StateType != StateType.Duration"  is complex.
Complex Conditional,Dev2.Common.DateAndTime,DateTimeParser,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeParser.cs,TryGetAValueForEachOption,The conditional expression  "(forwardLookupResult.Length == partOption.Length ||                       forwardLookupResult.Length == partOption.ResultLength) &&                      (partOption.Predicate == null || predicateRun)"  is complex.
Complex Conditional,Dev2.Common.Common,ExtensionMethods,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Common\ExtensionMethods.cs,IsValidJson,The conditional expression  "trimmedInput.StartsWith("{") && trimmedInput.EndsWith("}") || trimmedInput.StartsWith("[") && trimmedInput.EndsWith("]"' StringComparison.CurrentCulture)"  is complex.
Complex Conditional,Dev2.Common.ExtMethods,StringExtension,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\ExtMethods\StringExtension.cs,IsJSON,The conditional expression  "(value.StartsWith("{") && value.EndsWith("}")) || //For object                  (value.StartsWith("[") && value.EndsWith("]"))"  is complex.
Complex Conditional,Dev2.Common.ExtMethods,StringExtension,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\ExtMethods\StringExtension.cs,ReadToEnd,The conditional expression  "reader.Read() && !isHtml && !isFragment && reader.NodeType != XmlNodeType.Document"  is complex.
Complex Conditional,Dev2.Common.Utils,Interpreter,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Utils\JsonPath.cs,Trace,The conditional expression  "atom.Length > 3 && atom[0] == '?' && atom[1] == '(' && atom[atom.Length - 1] == ')'"  is complex.
Empty Catch Block,Dev2.Common.ExtMethods,StringExtension,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\ExtMethods\StringExtension.cs,IsBase64,The method has an empty catch block.
Empty Catch Block,Dev2.Common.Serializers,Dev2JsonSerializer,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Serializers\Dev2JsonSerializer.cs,Deserialize,The method has an empty catch block.
Magic Number,Dev2.Common,Dev2XamlCleaner,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Dev2XamlCleaner.cs,ReplaceChangedNamespaces,The following statement contains a magic number: i < replaceNamespaces.Length / 2
Magic Number,Dev2.Common,ApisJson,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\ApisJson.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Description?.GetHashCode() ?? 0);
Magic Number,Dev2.Common,ApisJson,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\ApisJson.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Image?.GetHashCode() ?? 0);
Magic Number,Dev2.Common,ApisJson,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\ApisJson.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Url?.GetHashCode() ?? 0);
Magic Number,Dev2.Common,ApisJson,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\ApisJson.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Tags?.GetHashCode() ?? 0);
Magic Number,Dev2.Common,ApisJson,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\ApisJson.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Created.GetHashCode();
Magic Number,Dev2.Common,ApisJson,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\ApisJson.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Modified.GetHashCode();
Magic Number,Dev2.Common,ApisJson,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\ApisJson.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (SpecificationVersion?.GetHashCode() ?? 0);
Magic Number,Dev2.Common,ApisJson,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\ApisJson.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Apis?.GetHashCode() ?? 0);
Magic Number,Dev2.Common,ApisJson,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\ApisJson.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Include?.GetHashCode() ?? 0);
Magic Number,Dev2.Common,ApisJson,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\ApisJson.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Maintainers?.GetHashCode() ?? 0);
Magic Number,Dev2.Common,PluginConstructor,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\PluginConstructor.cs,GetHashCode,The following statement contains a magic number: return ((Inputs?.GetHashCode() ?? 0) * 397) ^ (ConstructorName?.GetHashCode() ?? 0);
Magic Number,Dev2.Common.DateAndTime,AssignManager,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\AssignManager.cs,AssignYears,The following statement contains a magic number: !assignAsTime && years < 100
Magic Number,Dev2.Common.DateAndTime,CompareTextValueToDateTimePart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\CompareTextValueToDateTimePart.cs,IsTextMarch,The following statement contains a magic number: return lowerData == CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedMonthNames[2].ToLower() ||                     lowerData == CultureInfo.CurrentCulture.DateTimeFormat.MonthNames[2].ToLower();
Magic Number,Dev2.Common.DateAndTime,CompareTextValueToDateTimePart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\CompareTextValueToDateTimePart.cs,IsTextMarch,The following statement contains a magic number: return lowerData == CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedMonthNames[2].ToLower() ||                     lowerData == CultureInfo.CurrentCulture.DateTimeFormat.MonthNames[2].ToLower();
Magic Number,Dev2.Common.DateAndTime,CompareTextValueToDateTimePart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\CompareTextValueToDateTimePart.cs,IsTextApril,The following statement contains a magic number: return lowerData == CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedMonthNames[3].ToLower() ||                     lowerData == CultureInfo.CurrentCulture.DateTimeFormat.MonthNames[3].ToLower();
Magic Number,Dev2.Common.DateAndTime,CompareTextValueToDateTimePart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\CompareTextValueToDateTimePart.cs,IsTextApril,The following statement contains a magic number: return lowerData == CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedMonthNames[3].ToLower() ||                     lowerData == CultureInfo.CurrentCulture.DateTimeFormat.MonthNames[3].ToLower();
Magic Number,Dev2.Common.DateAndTime,CompareTextValueToDateTimePart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\CompareTextValueToDateTimePart.cs,IsTextMay,The following statement contains a magic number: return lowerData == CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedMonthNames[4].ToLower() ||                     lowerData == CultureInfo.CurrentCulture.DateTimeFormat.MonthNames[4].ToLower();
Magic Number,Dev2.Common.DateAndTime,CompareTextValueToDateTimePart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\CompareTextValueToDateTimePart.cs,IsTextMay,The following statement contains a magic number: return lowerData == CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedMonthNames[4].ToLower() ||                     lowerData == CultureInfo.CurrentCulture.DateTimeFormat.MonthNames[4].ToLower();
Magic Number,Dev2.Common.DateAndTime,CompareTextValueToDateTimePart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\CompareTextValueToDateTimePart.cs,IsTextJune,The following statement contains a magic number: return lowerData == CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedMonthNames[5].ToLower() ||                     lowerData == CultureInfo.CurrentCulture.DateTimeFormat.MonthNames[5].ToLower();
Magic Number,Dev2.Common.DateAndTime,CompareTextValueToDateTimePart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\CompareTextValueToDateTimePart.cs,IsTextJune,The following statement contains a magic number: return lowerData == CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedMonthNames[5].ToLower() ||                     lowerData == CultureInfo.CurrentCulture.DateTimeFormat.MonthNames[5].ToLower();
Magic Number,Dev2.Common.DateAndTime,CompareTextValueToDateTimePart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\CompareTextValueToDateTimePart.cs,IsTextJuly,The following statement contains a magic number: return lowerData == CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedMonthNames[6].ToLower() ||                     lowerData == CultureInfo.CurrentCulture.DateTimeFormat.MonthNames[6].ToLower();
Magic Number,Dev2.Common.DateAndTime,CompareTextValueToDateTimePart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\CompareTextValueToDateTimePart.cs,IsTextJuly,The following statement contains a magic number: return lowerData == CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedMonthNames[6].ToLower() ||                     lowerData == CultureInfo.CurrentCulture.DateTimeFormat.MonthNames[6].ToLower();
Magic Number,Dev2.Common.DateAndTime,CompareTextValueToDateTimePart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\CompareTextValueToDateTimePart.cs,IsTextAugust,The following statement contains a magic number: return lowerData == CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedMonthNames[7].ToLower() ||                     lowerData == CultureInfo.CurrentCulture.DateTimeFormat.MonthNames[7].ToLower();
Magic Number,Dev2.Common.DateAndTime,CompareTextValueToDateTimePart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\CompareTextValueToDateTimePart.cs,IsTextAugust,The following statement contains a magic number: return lowerData == CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedMonthNames[7].ToLower() ||                     lowerData == CultureInfo.CurrentCulture.DateTimeFormat.MonthNames[7].ToLower();
Magic Number,Dev2.Common.DateAndTime,CompareTextValueToDateTimePart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\CompareTextValueToDateTimePart.cs,IsTextSeptember,The following statement contains a magic number: return lowerData == CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedMonthNames[8].ToLower() ||                     lowerData == CultureInfo.CurrentCulture.DateTimeFormat.MonthNames[8].ToLower();
Magic Number,Dev2.Common.DateAndTime,CompareTextValueToDateTimePart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\CompareTextValueToDateTimePart.cs,IsTextSeptember,The following statement contains a magic number: return lowerData == CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedMonthNames[8].ToLower() ||                     lowerData == CultureInfo.CurrentCulture.DateTimeFormat.MonthNames[8].ToLower();
Magic Number,Dev2.Common.DateAndTime,CompareTextValueToDateTimePart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\CompareTextValueToDateTimePart.cs,IsTextOctober,The following statement contains a magic number: return lowerData == CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedMonthNames[9].ToLower() ||                     lowerData == CultureInfo.CurrentCulture.DateTimeFormat.MonthNames[9].ToLower();
Magic Number,Dev2.Common.DateAndTime,CompareTextValueToDateTimePart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\CompareTextValueToDateTimePart.cs,IsTextOctober,The following statement contains a magic number: return lowerData == CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedMonthNames[9].ToLower() ||                     lowerData == CultureInfo.CurrentCulture.DateTimeFormat.MonthNames[9].ToLower();
Magic Number,Dev2.Common.DateAndTime,CompareTextValueToDateTimePart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\CompareTextValueToDateTimePart.cs,IsTextNovember,The following statement contains a magic number: return lowerData == CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedMonthNames[10].ToLower() ||                     lowerData == CultureInfo.CurrentCulture.DateTimeFormat.MonthNames[10].ToLower();
Magic Number,Dev2.Common.DateAndTime,CompareTextValueToDateTimePart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\CompareTextValueToDateTimePart.cs,IsTextNovember,The following statement contains a magic number: return lowerData == CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedMonthNames[10].ToLower() ||                     lowerData == CultureInfo.CurrentCulture.DateTimeFormat.MonthNames[10].ToLower();
Magic Number,Dev2.Common.DateAndTime,CompareTextValueToDateTimePart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\CompareTextValueToDateTimePart.cs,IsTextDecember,The following statement contains a magic number: return lowerData == CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedMonthNames[11].ToLower() ||                     lowerData == CultureInfo.CurrentCulture.DateTimeFormat.MonthNames[11].ToLower();
Magic Number,Dev2.Common.DateAndTime,CompareTextValueToDateTimePart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\CompareTextValueToDateTimePart.cs,IsTextDecember,The following statement contains a magic number: return lowerData == CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedMonthNames[11].ToLower() ||                     lowerData == CultureInfo.CurrentCulture.DateTimeFormat.MonthNames[11].ToLower();
Magic Number,Dev2.Common.DateAndTime,CompareTextValueToDateTimePart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\CompareTextValueToDateTimePart.cs,IsTextTuesday,The following statement contains a magic number: return lowerData == CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[2].ToLower() ||                     lowerData == CultureInfo.CurrentCulture.DateTimeFormat.DayNames[2].ToLower();
Magic Number,Dev2.Common.DateAndTime,CompareTextValueToDateTimePart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\CompareTextValueToDateTimePart.cs,IsTextTuesday,The following statement contains a magic number: return lowerData == CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[2].ToLower() ||                     lowerData == CultureInfo.CurrentCulture.DateTimeFormat.DayNames[2].ToLower();
Magic Number,Dev2.Common.DateAndTime,CompareTextValueToDateTimePart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\CompareTextValueToDateTimePart.cs,IsTextWednesday,The following statement contains a magic number: return lowerData == CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[3].ToLower() ||                     lowerData == CultureInfo.CurrentCulture.DateTimeFormat.DayNames[3].ToLower();
Magic Number,Dev2.Common.DateAndTime,CompareTextValueToDateTimePart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\CompareTextValueToDateTimePart.cs,IsTextWednesday,The following statement contains a magic number: return lowerData == CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[3].ToLower() ||                     lowerData == CultureInfo.CurrentCulture.DateTimeFormat.DayNames[3].ToLower();
Magic Number,Dev2.Common.DateAndTime,CompareTextValueToDateTimePart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\CompareTextValueToDateTimePart.cs,IsTextThursday,The following statement contains a magic number: return lowerData == CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[4].ToLower() ||                     lowerData == CultureInfo.CurrentCulture.DateTimeFormat.DayNames[4].ToLower();
Magic Number,Dev2.Common.DateAndTime,CompareTextValueToDateTimePart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\CompareTextValueToDateTimePart.cs,IsTextThursday,The following statement contains a magic number: return lowerData == CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[4].ToLower() ||                     lowerData == CultureInfo.CurrentCulture.DateTimeFormat.DayNames[4].ToLower();
Magic Number,Dev2.Common.DateAndTime,CompareTextValueToDateTimePart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\CompareTextValueToDateTimePart.cs,IsTextFriday,The following statement contains a magic number: return lowerData == CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[5].ToLower() ||                     lowerData == CultureInfo.CurrentCulture.DateTimeFormat.DayNames[5].ToLower();
Magic Number,Dev2.Common.DateAndTime,CompareTextValueToDateTimePart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\CompareTextValueToDateTimePart.cs,IsTextFriday,The following statement contains a magic number: return lowerData == CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[5].ToLower() ||                     lowerData == CultureInfo.CurrentCulture.DateTimeFormat.DayNames[5].ToLower();
Magic Number,Dev2.Common.DateAndTime,CompareTextValueToDateTimePart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\CompareTextValueToDateTimePart.cs,IsTextSaturday,The following statement contains a magic number: return lowerData == CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[6].ToLower() ||                     lowerData == CultureInfo.CurrentCulture.DateTimeFormat.DayNames[6].ToLower();
Magic Number,Dev2.Common.DateAndTime,CompareTextValueToDateTimePart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\CompareTextValueToDateTimePart.cs,IsTextSaturday,The following statement contains a magic number: return lowerData == CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[6].ToLower() ||                     lowerData == CultureInfo.CurrentCulture.DateTimeFormat.DayNames[6].ToLower();
Magic Number,Dev2.Common.DateAndTime,DateTimeComparer,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeComparer.cs,ReturnMonths,The following statement contains a magic number: result = result + 12 * tmpYears;
Magic Number,Dev2.Common.DateAndTime,DateTimeComparer,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeComparer.cs,ReturnWeeks,The following statement contains a magic number: var result = timeDiff.TotalDays / 7;
Magic Number,Dev2.Common.DateAndTime,DateTimeFormatter,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeFormatter.cs,ApplyDateTimeFormatParts,The following statement contains a magic number: outputFormat = finalPattern.Insert(finalPattern.IndexOf("ss"' StringComparison.Ordinal) + 2' ".fff");
Magic Number,Dev2.Common.DateAndTime,DateTimeLiteralProcessor,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeLiteralProcessor.cs,CheckForDoubleEscapedLiteralCharacter,The following statement contains a magic number: result = DateTimeParser.ForwardLookup(formatArray' startPosition' 2);
Magic Number,Dev2.Common.DateAndTime,DateTimeParser,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeParser.cs,TryParse,The following statement contains a magic number: const int MaxAttempts = 8;
Magic Number,Dev2.Common.DateAndTime,DateTimeParser,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeParser.cs,MatchInputFormatToCulture,The following statement contains a magic number: switch (culturesTried)              {                  case 0:                      inputFormat =                          TranslateDotNetToDev2Format(                              CultureInfo.CurrentUICulture.DateTimeFormat.FullDateTimePattern' out error);                      break;                    case 1:                      inputFormat =                          TranslateDotNetToDev2Format(                              CultureInfo.InvariantCulture.DateTimeFormat.FullDateTimePattern' out error);                      break;                    case 2:                      inputFormat =                          TranslateDotNetToDev2Format(                              CultureInfo.InvariantCulture.DateTimeFormat.ShortDatePattern + " " +                              CultureInfo.InvariantCulture.DateTimeFormat.LongTimePattern' out error);                      break;                    case 3:                      inputFormat =                          TranslateDotNetToDev2Format(                              new CultureInfo("en-ZA").DateTimeFormat.FullDateTimePattern' out error);                      break;                    case 4:                      inputFormat =                          TranslateDotNetToDev2Format(                              new CultureInfo("en-ZA").DateTimeFormat.ShortDatePattern + " " +                              new CultureInfo("en-ZA").DateTimeFormat.LongTimePattern' out error);                      break;                    case 5:                      inputFormat =                          TranslateDotNetToDev2Format(                              new CultureInfo("en-US").DateTimeFormat.FullDateTimePattern' out error);                      break;                    case 6:                      inputFormat =                          TranslateDotNetToDev2Format(                              new CultureInfo("en-US").DateTimeFormat.ShortDatePattern + " " +                              new CultureInfo("en-US").DateTimeFormat.LongTimePattern' out error);                      break;                    case 7:                      var shortPattern = CultureInfo.CurrentCulture.DateTimeFormat.ShortDatePattern;                      var longPattern = CultureInfo.CurrentCulture.DateTimeFormat.LongTimePattern;                      var finalPattern = shortPattern + " " + longPattern;                      if (finalPattern.Contains("ss"))                      {                          finalPattern =                              finalPattern.Insert(finalPattern.IndexOf("ss"' StringComparison.Ordinal) + 2'                                  ".fff");                      }                      inputFormat = TranslateDotNetToDev2Format(finalPattern' out error);                      break;                  default:                      break;              }
Magic Number,Dev2.Common.DateAndTime,DateTimeParser,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeParser.cs,MatchInputFormatToCulture,The following statement contains a magic number: switch (culturesTried)              {                  case 0:                      inputFormat =                          TranslateDotNetToDev2Format(                              CultureInfo.CurrentUICulture.DateTimeFormat.FullDateTimePattern' out error);                      break;                    case 1:                      inputFormat =                          TranslateDotNetToDev2Format(                              CultureInfo.InvariantCulture.DateTimeFormat.FullDateTimePattern' out error);                      break;                    case 2:                      inputFormat =                          TranslateDotNetToDev2Format(                              CultureInfo.InvariantCulture.DateTimeFormat.ShortDatePattern + " " +                              CultureInfo.InvariantCulture.DateTimeFormat.LongTimePattern' out error);                      break;                    case 3:                      inputFormat =                          TranslateDotNetToDev2Format(                              new CultureInfo("en-ZA").DateTimeFormat.FullDateTimePattern' out error);                      break;                    case 4:                      inputFormat =                          TranslateDotNetToDev2Format(                              new CultureInfo("en-ZA").DateTimeFormat.ShortDatePattern + " " +                              new CultureInfo("en-ZA").DateTimeFormat.LongTimePattern' out error);                      break;                    case 5:                      inputFormat =                          TranslateDotNetToDev2Format(                              new CultureInfo("en-US").DateTimeFormat.FullDateTimePattern' out error);                      break;                    case 6:                      inputFormat =                          TranslateDotNetToDev2Format(                              new CultureInfo("en-US").DateTimeFormat.ShortDatePattern + " " +                              new CultureInfo("en-US").DateTimeFormat.LongTimePattern' out error);                      break;                    case 7:                      var shortPattern = CultureInfo.CurrentCulture.DateTimeFormat.ShortDatePattern;                      var longPattern = CultureInfo.CurrentCulture.DateTimeFormat.LongTimePattern;                      var finalPattern = shortPattern + " " + longPattern;                      if (finalPattern.Contains("ss"))                      {                          finalPattern =                              finalPattern.Insert(finalPattern.IndexOf("ss"' StringComparison.Ordinal) + 2'                                  ".fff");                      }                      inputFormat = TranslateDotNetToDev2Format(finalPattern' out error);                      break;                  default:                      break;              }
Magic Number,Dev2.Common.DateAndTime,DateTimeParser,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeParser.cs,MatchInputFormatToCulture,The following statement contains a magic number: switch (culturesTried)              {                  case 0:                      inputFormat =                          TranslateDotNetToDev2Format(                              CultureInfo.CurrentUICulture.DateTimeFormat.FullDateTimePattern' out error);                      break;                    case 1:                      inputFormat =                          TranslateDotNetToDev2Format(                              CultureInfo.InvariantCulture.DateTimeFormat.FullDateTimePattern' out error);                      break;                    case 2:                      inputFormat =                          TranslateDotNetToDev2Format(                              CultureInfo.InvariantCulture.DateTimeFormat.ShortDatePattern + " " +                              CultureInfo.InvariantCulture.DateTimeFormat.LongTimePattern' out error);                      break;                    case 3:                      inputFormat =                          TranslateDotNetToDev2Format(                              new CultureInfo("en-ZA").DateTimeFormat.FullDateTimePattern' out error);                      break;                    case 4:                      inputFormat =                          TranslateDotNetToDev2Format(                              new CultureInfo("en-ZA").DateTimeFormat.ShortDatePattern + " " +                              new CultureInfo("en-ZA").DateTimeFormat.LongTimePattern' out error);                      break;                    case 5:                      inputFormat =                          TranslateDotNetToDev2Format(                              new CultureInfo("en-US").DateTimeFormat.FullDateTimePattern' out error);                      break;                    case 6:                      inputFormat =                          TranslateDotNetToDev2Format(                              new CultureInfo("en-US").DateTimeFormat.ShortDatePattern + " " +                              new CultureInfo("en-US").DateTimeFormat.LongTimePattern' out error);                      break;                    case 7:                      var shortPattern = CultureInfo.CurrentCulture.DateTimeFormat.ShortDatePattern;                      var longPattern = CultureInfo.CurrentCulture.DateTimeFormat.LongTimePattern;                      var finalPattern = shortPattern + " " + longPattern;                      if (finalPattern.Contains("ss"))                      {                          finalPattern =                              finalPattern.Insert(finalPattern.IndexOf("ss"' StringComparison.Ordinal) + 2'                                  ".fff");                      }                      inputFormat = TranslateDotNetToDev2Format(finalPattern' out error);                      break;                  default:                      break;              }
Magic Number,Dev2.Common.DateAndTime,DateTimeParser,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeParser.cs,MatchInputFormatToCulture,The following statement contains a magic number: switch (culturesTried)              {                  case 0:                      inputFormat =                          TranslateDotNetToDev2Format(                              CultureInfo.CurrentUICulture.DateTimeFormat.FullDateTimePattern' out error);                      break;                    case 1:                      inputFormat =                          TranslateDotNetToDev2Format(                              CultureInfo.InvariantCulture.DateTimeFormat.FullDateTimePattern' out error);                      break;                    case 2:                      inputFormat =                          TranslateDotNetToDev2Format(                              CultureInfo.InvariantCulture.DateTimeFormat.ShortDatePattern + " " +                              CultureInfo.InvariantCulture.DateTimeFormat.LongTimePattern' out error);                      break;                    case 3:                      inputFormat =                          TranslateDotNetToDev2Format(                              new CultureInfo("en-ZA").DateTimeFormat.FullDateTimePattern' out error);                      break;                    case 4:                      inputFormat =                          TranslateDotNetToDev2Format(                              new CultureInfo("en-ZA").DateTimeFormat.ShortDatePattern + " " +                              new CultureInfo("en-ZA").DateTimeFormat.LongTimePattern' out error);                      break;                    case 5:                      inputFormat =                          TranslateDotNetToDev2Format(                              new CultureInfo("en-US").DateTimeFormat.FullDateTimePattern' out error);                      break;                    case 6:                      inputFormat =                          TranslateDotNetToDev2Format(                              new CultureInfo("en-US").DateTimeFormat.ShortDatePattern + " " +                              new CultureInfo("en-US").DateTimeFormat.LongTimePattern' out error);                      break;                    case 7:                      var shortPattern = CultureInfo.CurrentCulture.DateTimeFormat.ShortDatePattern;                      var longPattern = CultureInfo.CurrentCulture.DateTimeFormat.LongTimePattern;                      var finalPattern = shortPattern + " " + longPattern;                      if (finalPattern.Contains("ss"))                      {                          finalPattern =                              finalPattern.Insert(finalPattern.IndexOf("ss"' StringComparison.Ordinal) + 2'                                  ".fff");                      }                      inputFormat = TranslateDotNetToDev2Format(finalPattern' out error);                      break;                  default:                      break;              }
Magic Number,Dev2.Common.DateAndTime,DateTimeParser,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeParser.cs,MatchInputFormatToCulture,The following statement contains a magic number: switch (culturesTried)              {                  case 0:                      inputFormat =                          TranslateDotNetToDev2Format(                              CultureInfo.CurrentUICulture.DateTimeFormat.FullDateTimePattern' out error);                      break;                    case 1:                      inputFormat =                          TranslateDotNetToDev2Format(                              CultureInfo.InvariantCulture.DateTimeFormat.FullDateTimePattern' out error);                      break;                    case 2:                      inputFormat =                          TranslateDotNetToDev2Format(                              CultureInfo.InvariantCulture.DateTimeFormat.ShortDatePattern + " " +                              CultureInfo.InvariantCulture.DateTimeFormat.LongTimePattern' out error);                      break;                    case 3:                      inputFormat =                          TranslateDotNetToDev2Format(                              new CultureInfo("en-ZA").DateTimeFormat.FullDateTimePattern' out error);                      break;                    case 4:                      inputFormat =                          TranslateDotNetToDev2Format(                              new CultureInfo("en-ZA").DateTimeFormat.ShortDatePattern + " " +                              new CultureInfo("en-ZA").DateTimeFormat.LongTimePattern' out error);                      break;                    case 5:                      inputFormat =                          TranslateDotNetToDev2Format(                              new CultureInfo("en-US").DateTimeFormat.FullDateTimePattern' out error);                      break;                    case 6:                      inputFormat =                          TranslateDotNetToDev2Format(                              new CultureInfo("en-US").DateTimeFormat.ShortDatePattern + " " +                              new CultureInfo("en-US").DateTimeFormat.LongTimePattern' out error);                      break;                    case 7:                      var shortPattern = CultureInfo.CurrentCulture.DateTimeFormat.ShortDatePattern;                      var longPattern = CultureInfo.CurrentCulture.DateTimeFormat.LongTimePattern;                      var finalPattern = shortPattern + " " + longPattern;                      if (finalPattern.Contains("ss"))                      {                          finalPattern =                              finalPattern.Insert(finalPattern.IndexOf("ss"' StringComparison.Ordinal) + 2'                                  ".fff");                      }                      inputFormat = TranslateDotNetToDev2Format(finalPattern' out error);                      break;                  default:                      break;              }
Magic Number,Dev2.Common.DateAndTime,DateTimeParser,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeParser.cs,MatchInputFormatToCulture,The following statement contains a magic number: switch (culturesTried)              {                  case 0:                      inputFormat =                          TranslateDotNetToDev2Format(                              CultureInfo.CurrentUICulture.DateTimeFormat.FullDateTimePattern' out error);                      break;                    case 1:                      inputFormat =                          TranslateDotNetToDev2Format(                              CultureInfo.InvariantCulture.DateTimeFormat.FullDateTimePattern' out error);                      break;                    case 2:                      inputFormat =                          TranslateDotNetToDev2Format(                              CultureInfo.InvariantCulture.DateTimeFormat.ShortDatePattern + " " +                              CultureInfo.InvariantCulture.DateTimeFormat.LongTimePattern' out error);                      break;                    case 3:                      inputFormat =                          TranslateDotNetToDev2Format(                              new CultureInfo("en-ZA").DateTimeFormat.FullDateTimePattern' out error);                      break;                    case 4:                      inputFormat =                          TranslateDotNetToDev2Format(                              new CultureInfo("en-ZA").DateTimeFormat.ShortDatePattern + " " +                              new CultureInfo("en-ZA").DateTimeFormat.LongTimePattern' out error);                      break;                    case 5:                      inputFormat =                          TranslateDotNetToDev2Format(                              new CultureInfo("en-US").DateTimeFormat.FullDateTimePattern' out error);                      break;                    case 6:                      inputFormat =                          TranslateDotNetToDev2Format(                              new CultureInfo("en-US").DateTimeFormat.ShortDatePattern + " " +                              new CultureInfo("en-US").DateTimeFormat.LongTimePattern' out error);                      break;                    case 7:                      var shortPattern = CultureInfo.CurrentCulture.DateTimeFormat.ShortDatePattern;                      var longPattern = CultureInfo.CurrentCulture.DateTimeFormat.LongTimePattern;                      var finalPattern = shortPattern + " " + longPattern;                      if (finalPattern.Contains("ss"))                      {                          finalPattern =                              finalPattern.Insert(finalPattern.IndexOf("ss"' StringComparison.Ordinal) + 2'                                  ".fff");                      }                      inputFormat = TranslateDotNetToDev2Format(finalPattern' out error);                      break;                  default:                      break;              }
Magic Number,Dev2.Common.DateAndTime,DateTimeParser,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DateTimeParser.cs,MatchInputFormatToCulture,The following statement contains a magic number: switch (culturesTried)              {                  case 0:                      inputFormat =                          TranslateDotNetToDev2Format(                              CultureInfo.CurrentUICulture.DateTimeFormat.FullDateTimePattern' out error);                      break;                    case 1:                      inputFormat =                          TranslateDotNetToDev2Format(                              CultureInfo.InvariantCulture.DateTimeFormat.FullDateTimePattern' out error);                      break;                    case 2:                      inputFormat =                          TranslateDotNetToDev2Format(                              CultureInfo.InvariantCulture.DateTimeFormat.ShortDatePattern + " " +                              CultureInfo.InvariantCulture.DateTimeFormat.LongTimePattern' out error);                      break;                    case 3:                      inputFormat =                          TranslateDotNetToDev2Format(                              new CultureInfo("en-ZA").DateTimeFormat.FullDateTimePattern' out error);                      break;                    case 4:                      inputFormat =                          TranslateDotNetToDev2Format(                              new CultureInfo("en-ZA").DateTimeFormat.ShortDatePattern + " " +                              new CultureInfo("en-ZA").DateTimeFormat.LongTimePattern' out error);                      break;                    case 5:                      inputFormat =                          TranslateDotNetToDev2Format(                              new CultureInfo("en-US").DateTimeFormat.FullDateTimePattern' out error);                      break;                    case 6:                      inputFormat =                          TranslateDotNetToDev2Format(                              new CultureInfo("en-US").DateTimeFormat.ShortDatePattern + " " +                              new CultureInfo("en-US").DateTimeFormat.LongTimePattern' out error);                      break;                    case 7:                      var shortPattern = CultureInfo.CurrentCulture.DateTimeFormat.ShortDatePattern;                      var longPattern = CultureInfo.CurrentCulture.DateTimeFormat.LongTimePattern;                      var finalPattern = shortPattern + " " + longPattern;                      if (finalPattern.Contains("ss"))                      {                          finalPattern =                              finalPattern.Insert(finalPattern.IndexOf("ss"' StringComparison.Ordinal) + 2'                                  ".fff");                      }                      inputFormat = TranslateDotNetToDev2Format(finalPattern' out error);                      break;                  default:                      break;              }
Magic Number,Dev2.Common.DateAndTime,DateTimeParserHelper,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DatetimeParserHelper.cs,IsNumberWeekOfYear,The following statement contains a magic number: nothingDied = numericData >= 1 && numericData <= 52;
Magic Number,Dev2.Common.DateAndTime,DateTimeParserHelper,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DatetimeParserHelper.cs,IsNumberDayOfYear,The following statement contains a magic number: int.TryParse(data' NumberStyles.None' null' out numericData) && numericData >= 1 && numericData <= 365
Magic Number,Dev2.Common.DateAndTime,DateTimeParserHelper,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DatetimeParserHelper.cs,IsNumberDayOfWeek,The following statement contains a magic number: nothingDied = numericData >= 1 && numericData <= 7;
Magic Number,Dev2.Common.DateAndTime,DateTimeParserHelper,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DatetimeParserHelper.cs,GetDayOfWeekInt,The following statement contains a magic number: val = 7;
Magic Number,Dev2.Common.DateAndTime,DateTimeParserHelper,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DatetimeParserHelper.cs,IsNumberDay,The following statement contains a magic number: nothingDied = numericData >= 1 && numericData <= 31;
Magic Number,Dev2.Common.DateAndTime,DateTimeParserHelper,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DatetimeParserHelper.cs,IsNumberMonth,The following statement contains a magic number: nothingDied = numericData >= 1 && numericData <= 12;
Magic Number,Dev2.Common.DateAndTime,DateTimeParserHelper,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DatetimeParserHelper.cs,IsNumber12H,The following statement contains a magic number: nothingDied = numericData >= 1 && numericData <= 12;
Magic Number,Dev2.Common.DateAndTime,DateTimeParserHelper,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DatetimeParserHelper.cs,IsNumber24H,The following statement contains a magic number: nothingDied = numericData >= 0 && numericData <= 24;
Magic Number,Dev2.Common.DateAndTime,DateTimeParserHelper,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DatetimeParserHelper.cs,IsNumber24H,The following statement contains a magic number: data.Length == 2 && int.TryParse(data' out numericData)
Magic Number,Dev2.Common.DateAndTime,DateTimeParserHelper,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DatetimeParserHelper.cs,IsNumberMinutes,The following statement contains a magic number: nothingDied = numericData >= 0 && numericData <= 59;
Magic Number,Dev2.Common.DateAndTime,DateTimeParserHelper,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DatetimeParserHelper.cs,IsNumberMilliseconds,The following statement contains a magic number: nothingDied = numericData >= 0 && numericData <= 999;
Magic Number,Dev2.Common.DateAndTime,DateTimeParserHelper,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\DatetimeParserHelper.cs,IsNumberSeconds,The following statement contains a magic number: nothingDied = numericData >= 0 && numericData <= 59;
Magic Number,Dev2.Common.Common,ExtensionMethods,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Common\ExtensionMethods.cs,CleanEncodingHeaderForXmlSave,The following statement contains a magic number: var len = removeEndIdx - removeStartIdx + 2;
Magic Number,Dev2.Common.Common,ExtensionMethods,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Common\ExtensionMethods.cs,SkipDueToEscapeChar,The following statement contains a magic number: var charToRemove = escapeChar.Length == 1 ? 2 : 1;
Magic Number,Dev2.Common.Common,ExtensionMethods,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Common\ExtensionMethods.cs,GetByteArray,The following statement contains a magic number: var buffer = new byte[16 * 1024];
Magic Number,Dev2.Common.Common,ExtensionMethods,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Common\ExtensionMethods.cs,GetByteArray,The following statement contains a magic number: var buffer = new byte[16 * 1024];
Magic Number,Dev2.Common.Common,SecurityIdentityForWindows,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Common\GetComputerNames.cs,GetWindowsDomainOrWorkgroupName,The following statement contains a magic number: var userHasWindowsDomain = parts.Length == 2;
Magic Number,Dev2.Common.DateAndTime.TO,DateTimeResultTO,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\DateAndTime\TO\DateTimeResultTO.cs,NormalizeHours,The following statement contains a magic number: Is24H && Hours >= 12
Magic Number,Dev2.Common.ExtMethods,StringExtension,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\ExtMethods\StringExtension.cs,ContainsUnicodeCharacter,The following statement contains a magic number: const int maxAnsiCode = 255;
Magic Number,Dev2.Common.ExtMethods,StringExtension,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\ExtMethods\StringExtension.cs,IsHex,The following statement contains a magic number: payload.Length % 2 != 0
Magic Number,Dev2.Common.ExtMethods,TypeExtensions,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\ExtMethods\TypeExtensions.cs,GetTypeFromSimpleName,The following statement contains a magic number: typeName = typeName.Remove(typeName.IndexOf("[]"' StringComparison.Ordinal)' 2);
Magic Number,Dev2.Common.Wrappers,DropboxClientWrapperFactory,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Wrappers\DropboxClientWrapper.cs,CreateWithSecret,The following statement contains a magic number: var httpClient = new HttpClient(new WebRequestHandler { ReadWriteTimeout = 10 * 1000 })              {                  Timeout = TimeSpan.FromMinutes(20)              };
Magic Number,Dev2.Common.Wrappers,DropboxClientWrapperFactory,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Wrappers\DropboxClientWrapper.cs,CreateWithSecret,The following statement contains a magic number: var httpClient = new HttpClient(new WebRequestHandler { ReadWriteTimeout = 10 * 1000 })              {                  Timeout = TimeSpan.FromMinutes(20)              };
Magic Number,Dev2.Common.Wrappers,DropboxClientWrapperFactory,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Wrappers\DropboxClientWrapper.cs,CreateWithSecret,The following statement contains a magic number: var httpClient = new HttpClient(new WebRequestHandler { ReadWriteTimeout = 10 * 1000 })              {                  Timeout = TimeSpan.FromMinutes(20)              };
Magic Number,Dev2.Common.Interfaces,PluginAction,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\PluginAction.cs,GetHashCode,The following statement contains a magic number: return ((Inputs?.GetHashCode() ?? 0) * 397) ^ (Method?.GetHashCode() ?? 0);
Magic Number,Dev2.Common.Search,SearchResult,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Search\Search.cs,GetHashCode,The following statement contains a magic number: var hashCode = 271001031;
Magic Number,Dev2.Common.Search,SearchResult,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Search\Search.cs,GetHashCode,The following statement contains a magic number: hashCode = hashCode * -1521134295 + EqualityComparer<Guid>.Default.GetHashCode(ResourceId);
Magic Number,Dev2.Common.Search,SearchResult,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Search\Search.cs,GetHashCode,The following statement contains a magic number: hashCode = hashCode * -1521134295 + EqualityComparer<string>.Default.GetHashCode(Name);
Magic Number,Dev2.Common.Search,SearchResult,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Search\Search.cs,GetHashCode,The following statement contains a magic number: hashCode = hashCode * -1521134295 + EqualityComparer<string>.Default.GetHashCode(Path);
Magic Number,Dev2.Common.Search,SearchResult,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Search\Search.cs,GetHashCode,The following statement contains a magic number: hashCode = hashCode * -1521134295 + Type.GetHashCode();
Magic Number,Dev2.Common.Search,SearchResult,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Search\Search.cs,GetHashCode,The following statement contains a magic number: hashCode = hashCode * -1521134295 + EqualityComparer<string>.Default.GetHashCode(Match);
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddYearParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("yy"' new List<IDateTimeFormatPartOptionTO>              {                  new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)              });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddYearParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("y"' new List<IDateTimeFormatPartOptionTO>              {                  new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)'                   new DateTimeFormatPartOptionTO(1' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)              });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddYearParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("yyyy"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddEraParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("gg"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower(CultureInfo.InvariantCulture).Equals("a.d.")' false' "A.D."' _assignManager.AssignEra)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddHourParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("HH"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber24H' true' null' _assignManager.Assign24Hours)                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddHourParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("H"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumber24H' true' null' _assignManager.Assign24Hours)'                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber24H' true' null' _assignManager.Assign24Hours)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddHourParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("hh"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddHourParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("h"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMinuteParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("m"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMinuteParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("mm"' new List<IDateTimeFormatPartOptionTO>              {                  new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'              });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("d"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dd"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("ddd"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 1' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 2' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 3'_assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 4' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 5'  _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 6' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 7'_assignManager.AssignDays)'                    });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("ddd"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 1' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 2' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 3'_assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 4' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 5'  _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 6' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 7'_assignManager.AssignDays)'                    });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("ddd"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 1' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 2' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 3'_assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 4' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 5'  _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 6' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 7'_assignManager.AssignDays)'                    });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("ddd"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 1' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 2' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 3'_assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 4' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 5'  _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 6' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 7'_assignManager.AssignDays)'                    });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("ddd"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 1' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 2' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 3'_assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 4' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 5'  _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 6' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 7'_assignManager.AssignDays)'                    });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("ddd"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 1' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 2' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 3'_assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 4' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 5'  _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 6' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 7'_assignManager.AssignDays)'                    });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("ddd"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 1' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 2' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 3'_assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 4' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 5'  _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 6' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 7'_assignManager.AssignDays)'                    });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("ddd"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 1' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 2' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 3'_assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 4' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 5'  _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 6' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 7'_assignManager.AssignDays)'                    });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("ddd"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 1' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 2' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 3'_assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 4' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 5'  _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 6' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 7'_assignManager.AssignDays)'                    });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("ddd"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 1' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 2' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 3'_assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 4' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 5'  _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 6' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 7'_assignManager.AssignDays)'                    });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("ddd"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 1' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 2' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 3'_assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 4' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 5'  _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 6' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedDayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 7'_assignManager.AssignDays)'                    });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dddd"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 1' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 2' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 3' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 4' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 5' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 6' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 7' _assignManager.AssignDays)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dddd"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 1' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 2' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 3' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 4' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 5' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 6' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 7' _assignManager.AssignDays)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dddd"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 1' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 2' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 3' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 4' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 5' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 6' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 7' _assignManager.AssignDays)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dddd"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 1' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 2' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 3' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 4' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 5' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 6' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 7' _assignManager.AssignDays)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dddd"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 1' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 2' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 3' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 4' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 5' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 6' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 7' _assignManager.AssignDays)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dddd"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 1' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 2' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 3' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 4' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 5' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 6' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 7' _assignManager.AssignDays)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dddd"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 1' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 2' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 3' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 4' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 5' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 6' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 7' _assignManager.AssignDays)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dddd"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 1' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 2' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 3' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 4' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 5' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 6' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 7' _assignManager.AssignDays)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dddd"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 1' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 2' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 3' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 4' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 5' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 6' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 7' _assignManager.AssignDays)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dddd"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 1' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 2' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 3' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 4' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 5' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 6' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 7' _assignManager.AssignDays)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dddd"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 1' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 2' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 3' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 4' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 5' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 6' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.DayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 7' _assignManager.AssignDays)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("M"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MMMM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddOffsetParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("tt"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      new DateTimeFormatPartOptionTO(3' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddOffsetParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("tt"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      new DateTimeFormatPartOptionTO(3' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddOffsetParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("tt"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      new DateTimeFormatPartOptionTO(3' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddOffsetParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("K"' new List<IDateTimeFormatPartOptionTO>              {               new DateTimeFormatPartOptionTO(6' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone)              });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddSecondParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("ss"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddSecondParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("s"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddSecondParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("F"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddSecondParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("FF"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddSecondParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("FFF"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddSecondParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("FFF"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddSecondParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("FFFF"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(4' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddSecondParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("FFFF"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(4' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddSecondParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("FFFF"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(4' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddSecondParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("FFFFF"'                  new List<IDateTimeFormatPartOptionTO>                  {                         new DateTimeFormatPartOptionTO(5' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(4' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddSecondParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("FFFFF"'                  new List<IDateTimeFormatPartOptionTO>                  {                         new DateTimeFormatPartOptionTO(5' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(4' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddSecondParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("FFFFF"'                  new List<IDateTimeFormatPartOptionTO>                  {                         new DateTimeFormatPartOptionTO(5' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(4' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddSecondParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("FFFFF"'                  new List<IDateTimeFormatPartOptionTO>                  {                         new DateTimeFormatPartOptionTO(5' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(4' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddSecondParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("FFFFFF"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(6' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(5' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(4' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddSecondParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("FFFFFF"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(6' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(5' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(4' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddSecondParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("FFFFFF"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(6' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(5' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(4' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddSecondParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("FFFFFF"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(6' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(5' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(4' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddSecondParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("FFFFFF"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(6' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(5' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(4' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddSecondParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("FFFFFFF"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(7' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(6' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(5' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(4' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddSecondParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("FFFFFFF"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(7' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(6' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(5' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(4' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddSecondParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("FFFFFFF"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(7' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(6' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(5' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(4' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddSecondParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("FFFFFFF"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(7' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(6' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(5' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(4' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddSecondParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("FFFFFFF"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(7' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(6' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(5' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(4' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,NewDateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\NewDateTimeFormatPart.cs,AddSecondParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("FFFFFFF"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(7' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(6' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(5' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(4' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookup,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookup.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookups.Add('y'' new List<int> { 5' 4' 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookup,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookup.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookups.Add('y'' new List<int> { 5' 4' 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookup,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookup.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookups.Add('y'' new List<int> { 5' 4' 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookup,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookup.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookups.Add('y'' new List<int> { 5' 4' 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookup,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookup.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookups.Add('m'' new List<int> { 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookup,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookup.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookups.Add('m'' new List<int> { 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookup,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookup.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookups.Add('M'' new List<int> { 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookup,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookup.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookups.Add('d'' new List<int> { 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookup,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookup.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookups.Add('w'' new List<int> { 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookup,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookup.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookups.Add('D'' new List<int> { 2 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookup,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookup.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookups.Add('2'' new List<int> { 3 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookup,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookup.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookups.Add('1'' new List<int> { 3 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookup,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookup.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookups.Add('s'' new List<int> { 2 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookup,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookup.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookups.Add('a'' new List<int> { 5 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookup,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookup.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookups.Add('Z'' new List<int> { 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookup,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookup.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookups.Add('Z'' new List<int> { 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookup,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookup.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookups.Add('E'' new List<int> { 3 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookup,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookup.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookups.Add('e'' new List<int> { 3 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookupsForDotNet,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookupsForDotNet.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookupsForDotNetLu.Add('d'' new List<int> { 4' 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookupsForDotNet,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookupsForDotNet.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookupsForDotNetLu.Add('d'' new List<int> { 4' 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookupsForDotNet,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookupsForDotNet.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookupsForDotNetLu.Add('d'' new List<int> { 4' 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookupsForDotNet,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookupsForDotNet.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookupsForDotNetLu.Add('f'' new List<int> { 7' 6' 5' 4' 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookupsForDotNet,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookupsForDotNet.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookupsForDotNetLu.Add('f'' new List<int> { 7' 6' 5' 4' 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookupsForDotNet,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookupsForDotNet.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookupsForDotNetLu.Add('f'' new List<int> { 7' 6' 5' 4' 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookupsForDotNet,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookupsForDotNet.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookupsForDotNetLu.Add('f'' new List<int> { 7' 6' 5' 4' 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookupsForDotNet,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookupsForDotNet.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookupsForDotNetLu.Add('f'' new List<int> { 7' 6' 5' 4' 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookupsForDotNet,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookupsForDotNet.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookupsForDotNetLu.Add('f'' new List<int> { 7' 6' 5' 4' 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookupsForDotNet,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookupsForDotNet.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookupsForDotNetLu.Add('F'' new List<int> { 7' 6' 5' 4' 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookupsForDotNet,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookupsForDotNet.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookupsForDotNetLu.Add('F'' new List<int> { 7' 6' 5' 4' 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookupsForDotNet,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookupsForDotNet.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookupsForDotNetLu.Add('F'' new List<int> { 7' 6' 5' 4' 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookupsForDotNet,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookupsForDotNet.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookupsForDotNetLu.Add('F'' new List<int> { 7' 6' 5' 4' 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookupsForDotNet,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookupsForDotNet.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookupsForDotNetLu.Add('F'' new List<int> { 7' 6' 5' 4' 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookupsForDotNet,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookupsForDotNet.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookupsForDotNetLu.Add('F'' new List<int> { 7' 6' 5' 4' 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookupsForDotNet,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookupsForDotNet.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookupsForDotNetLu.Add('g'' new List<int> { 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookupsForDotNet,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookupsForDotNet.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookupsForDotNetLu.Add('h'' new List<int> { 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookupsForDotNet,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookupsForDotNet.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookupsForDotNetLu.Add('H'' new List<int> { 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookupsForDotNet,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookupsForDotNet.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookupsForDotNetLu.Add('m'' new List<int> { 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookupsForDotNet,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookupsForDotNet.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookupsForDotNetLu.Add('M'' new List<int> { 4' 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookupsForDotNet,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookupsForDotNet.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookupsForDotNetLu.Add('M'' new List<int> { 4' 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookupsForDotNet,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookupsForDotNet.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookupsForDotNetLu.Add('M'' new List<int> { 4' 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookupsForDotNet,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookupsForDotNet.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookupsForDotNetLu.Add('s'' new List<int> { 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookupsForDotNet,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookupsForDotNet.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookupsForDotNetLu.Add('t'' new List<int> { 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookupsForDotNet,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookupsForDotNet.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookupsForDotNetLu.Add('y'' new List<int> { 5' 4' 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookupsForDotNet,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookupsForDotNet.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookupsForDotNetLu.Add('y'' new List<int> { 5' 4' 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookupsForDotNet,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookupsForDotNet.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookupsForDotNetLu.Add('y'' new List<int> { 5' 4' 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookupsForDotNet,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookupsForDotNet.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookupsForDotNetLu.Add('y'' new List<int> { 5' 4' 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookupsForDotNet,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookupsForDotNet.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookupsForDotNetLu.Add('z'' new List<int> { 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatForwardLookupsForDotNet,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatForwardLookupsForDotNet.cs,Build,The following statement contains a magic number: DateTimeFormatForwardLookupsForDotNetLu.Add('z'' new List<int> { 3' 2' 1 });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddYearParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("yy"' new List<IDateTimeFormatPartOptionTO>              {                  new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)              });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddYearParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("yyyy"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("mm"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("m"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("M"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("M"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("M"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("M"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("M"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("M"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("M"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("M"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("M"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("M"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("M"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("M"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("M"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("M"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("M"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("M"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("M"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("M"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("M"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("M"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("M"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false'                          1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false'                          2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7'                          _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false'                          8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember'                          false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false'                          10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember'                          false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.InvariantCulture.DateTimeFormat.AbbreviatedMonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember'                          false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMonthParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("MM"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0].Length' CompareTextValueToDateTimePart.IsTextJanuary' false' 1' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[1].Length' CompareTextValueToDateTimePart.IsTextFebuary' false' 2' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[2].Length' CompareTextValueToDateTimePart.IsTextMarch' false' 3' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[3].Length' CompareTextValueToDateTimePart.IsTextApril' false' 4' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[4].Length' CompareTextValueToDateTimePart.IsTextMay' false' 5' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[5].Length' CompareTextValueToDateTimePart.IsTextJune' false' 6' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[6].Length' CompareTextValueToDateTimePart.IsTextJuly' false' 7' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[7].Length' CompareTextValueToDateTimePart.IsTextAugust' false' 8' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[8].Length' CompareTextValueToDateTimePart.IsTextSeptember' false' 9' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[9].Length' CompareTextValueToDateTimePart.IsTextOctober' false' 10' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[10].Length' CompareTextValueToDateTimePart.IsTextNovember' false' 11' _assignManager.AssignMonths)'                      new DateTimeFormatPartOptionTO(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[11].Length' CompareTextValueToDateTimePart.IsTextDecember' false' 12' _assignManager.AssignMonths)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("d"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dd"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("DW"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 7' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 1' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 2' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 3' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 4' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 5' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 6' _assignManager.AssignDaysOfWeek)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("DW"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 7' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 1' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 2' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 3' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 4' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 5' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 6' _assignManager.AssignDaysOfWeek)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("DW"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 7' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 1' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 2' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 3' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 4' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 5' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 6' _assignManager.AssignDaysOfWeek)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("DW"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 7' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 1' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 2' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 3' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 4' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 5' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 6' _assignManager.AssignDaysOfWeek)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("DW"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 7' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 1' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 2' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 3' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 4' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 5' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 6' _assignManager.AssignDaysOfWeek)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("DW"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 7' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 1' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 2' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 3' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 4' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 5' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 6' _assignManager.AssignDaysOfWeek)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("DW"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 7' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 1' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 2' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 3' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 4' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 5' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 6' _assignManager.AssignDaysOfWeek)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("DW"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 7' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 1' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 2' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 3' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 4' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 5' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 6' _assignManager.AssignDaysOfWeek)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("DW"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 7' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 1' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 2' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 3' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 4' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 5' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 6' _assignManager.AssignDaysOfWeek)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("DW"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 7' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 1' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 2' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 3' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 4' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 5' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 6' _assignManager.AssignDaysOfWeek)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("DW"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 7' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 1' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 2' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false' 3' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false' 4' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 5' _assignManager.AssignDaysOfWeek)'                      new DateTimeFormatPartOptionTO(CultureInfo.CurrentCulture.DateTimeFormat.DayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false' 6' _assignManager.AssignDaysOfWeek)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dW"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 7'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 1'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 2'                          _assignManager.AssignDaysOfWeek' 7)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false'                          3' _assignManager.AssignDaysOfWeek' 9)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false'                          4' _assignManager.AssignDaysOfWeek' 8)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 5'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false'                          6' _assignManager.AssignDaysOfWeek' 7)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dW"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 7'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 1'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 2'                          _assignManager.AssignDaysOfWeek' 7)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false'                          3' _assignManager.AssignDaysOfWeek' 9)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false'                          4' _assignManager.AssignDaysOfWeek' 8)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 5'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false'                          6' _assignManager.AssignDaysOfWeek' 7)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dW"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 7'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 1'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 2'                          _assignManager.AssignDaysOfWeek' 7)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false'                          3' _assignManager.AssignDaysOfWeek' 9)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false'                          4' _assignManager.AssignDaysOfWeek' 8)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 5'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false'                          6' _assignManager.AssignDaysOfWeek' 7)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dW"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 7'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 1'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 2'                          _assignManager.AssignDaysOfWeek' 7)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false'                          3' _assignManager.AssignDaysOfWeek' 9)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false'                          4' _assignManager.AssignDaysOfWeek' 8)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 5'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false'                          6' _assignManager.AssignDaysOfWeek' 7)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dW"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 7'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 1'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 2'                          _assignManager.AssignDaysOfWeek' 7)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false'                          3' _assignManager.AssignDaysOfWeek' 9)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false'                          4' _assignManager.AssignDaysOfWeek' 8)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 5'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false'                          6' _assignManager.AssignDaysOfWeek' 7)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dW"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 7'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 1'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 2'                          _assignManager.AssignDaysOfWeek' 7)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false'                          3' _assignManager.AssignDaysOfWeek' 9)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false'                          4' _assignManager.AssignDaysOfWeek' 8)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 5'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false'                          6' _assignManager.AssignDaysOfWeek' 7)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dW"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 7'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 1'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 2'                          _assignManager.AssignDaysOfWeek' 7)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false'                          3' _assignManager.AssignDaysOfWeek' 9)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false'                          4' _assignManager.AssignDaysOfWeek' 8)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 5'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false'                          6' _assignManager.AssignDaysOfWeek' 7)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dW"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 7'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 1'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 2'                          _assignManager.AssignDaysOfWeek' 7)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false'                          3' _assignManager.AssignDaysOfWeek' 9)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false'                          4' _assignManager.AssignDaysOfWeek' 8)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 5'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false'                          6' _assignManager.AssignDaysOfWeek' 7)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dW"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 7'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 1'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 2'                          _assignManager.AssignDaysOfWeek' 7)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false'                          3' _assignManager.AssignDaysOfWeek' 9)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false'                          4' _assignManager.AssignDaysOfWeek' 8)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 5'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false'                          6' _assignManager.AssignDaysOfWeek' 7)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dW"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 7'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 1'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 2'                          _assignManager.AssignDaysOfWeek' 7)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false'                          3' _assignManager.AssignDaysOfWeek' 9)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false'                          4' _assignManager.AssignDaysOfWeek' 8)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 5'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false'                          6' _assignManager.AssignDaysOfWeek' 7)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dW"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 7'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 1'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 2'                          _assignManager.AssignDaysOfWeek' 7)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false'                          3' _assignManager.AssignDaysOfWeek' 9)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false'                          4' _assignManager.AssignDaysOfWeek' 8)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 5'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false'                          6' _assignManager.AssignDaysOfWeek' 7)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dW"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 7'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 1'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 2'                          _assignManager.AssignDaysOfWeek' 7)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false'                          3' _assignManager.AssignDaysOfWeek' 9)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false'                          4' _assignManager.AssignDaysOfWeek' 8)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 5'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false'                          6' _assignManager.AssignDaysOfWeek' 7)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dW"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 7'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 1'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 2'                          _assignManager.AssignDaysOfWeek' 7)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false'                          3' _assignManager.AssignDaysOfWeek' 9)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false'                          4' _assignManager.AssignDaysOfWeek' 8)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 5'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false'                          6' _assignManager.AssignDaysOfWeek' 7)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dW"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 7'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 1'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 2'                          _assignManager.AssignDaysOfWeek' 7)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false'                          3' _assignManager.AssignDaysOfWeek' 9)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false'                          4' _assignManager.AssignDaysOfWeek' 8)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 5'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false'                          6' _assignManager.AssignDaysOfWeek' 7)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dW"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 7'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 1'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 2'                          _assignManager.AssignDaysOfWeek' 7)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false'                          3' _assignManager.AssignDaysOfWeek' 9)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false'                          4' _assignManager.AssignDaysOfWeek' 8)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 5'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false'                          6' _assignManager.AssignDaysOfWeek' 7)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dW"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 7'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 1'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 2'                          _assignManager.AssignDaysOfWeek' 7)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false'                          3' _assignManager.AssignDaysOfWeek' 9)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false'                          4' _assignManager.AssignDaysOfWeek' 8)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 5'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false'                          6' _assignManager.AssignDaysOfWeek' 7)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dW"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 7'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 1'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 2'                          _assignManager.AssignDaysOfWeek' 7)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false'                          3' _assignManager.AssignDaysOfWeek' 9)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false'                          4' _assignManager.AssignDaysOfWeek' 8)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 5'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false'                          6' _assignManager.AssignDaysOfWeek' 7)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dW"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[0].Length' CompareTextValueToDateTimePart.IsTextSunday' false' 7'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[1].Length' CompareTextValueToDateTimePart.IsTextMonday' false' 1'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[2].Length' CompareTextValueToDateTimePart.IsTextTuesday' false' 2'                          _assignManager.AssignDaysOfWeek' 7)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[3].Length' CompareTextValueToDateTimePart.IsTextWednesday' false'                          3' _assignManager.AssignDaysOfWeek' 9)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[4].Length' CompareTextValueToDateTimePart.IsTextThursday' false'                          4' _assignManager.AssignDaysOfWeek' 8)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[5].Length' CompareTextValueToDateTimePart.IsTextFriday' false' 5'                          _assignManager.AssignDaysOfWeek' 6)'                      new DateTimeFormatPartOptionTO(                          CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames[6].Length' CompareTextValueToDateTimePart.IsTextSaturday' false'                          6' _assignManager.AssignDaysOfWeek' 7)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dy"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddDayParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("dy"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddWeekParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("ww"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddWeekParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("w"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddHourParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("24h"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber24H' true' null' _assignManager.Assign24Hours)                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddHourParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("12h"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddMinuteParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("min"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddSecondParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("ss"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null'  _assignManager.AssignSeconds)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddSecondParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("sp"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager. AssignMilliseconds)'                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager. AssignMilliseconds)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager. AssignMilliseconds)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddSecondParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("sp"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager. AssignMilliseconds)'                      new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager. AssignMilliseconds)'                      new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager. AssignMilliseconds)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddOffsetParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("am/pm"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      new DateTimeFormatPartOptionTO(3' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddOffsetParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("am/pm"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      new DateTimeFormatPartOptionTO(3' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddOffsetParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("am/pm"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      new DateTimeFormatPartOptionTO(3' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddEraParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("era"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                          _assignManager.AssignEra)'                      new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                          _assignManager.AssignEra)'                      new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                          _assignManager.AssignEra)                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddEraParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("era"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                          _assignManager.AssignEra)'                      new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                          _assignManager.AssignEra)'                      new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                          _assignManager.AssignEra)                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddEraParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("era"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                          _assignManager.AssignEra)'                      new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                          _assignManager.AssignEra)'                      new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                          _assignManager.AssignEra)                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddEraParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("Era"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                          _assignManager.AssignEra)'                      new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                          _assignManager.AssignEra)'                      new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                          _assignManager.AssignEra)                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddEraParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("Era"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                          _assignManager.AssignEra)'                      new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                          _assignManager.AssignEra)'                      new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                          _assignManager.AssignEra)                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddEraParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("Era"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                          _assignManager.AssignEra)'                      new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                          _assignManager.AssignEra)'                      new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                          _assignManager.AssignEra)                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddEraParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("ERA"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                          _assignManager.AssignEra)'                      new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                          _assignManager.AssignEra)'                      new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                          _assignManager. AssignEra)                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddEraParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("ERA"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                          _assignManager.AssignEra)'                      new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                          _assignManager.AssignEra)'                      new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                          _assignManager. AssignEra)                  });
Magic Number,Dev2.Common.TimeZoneBuilder,DateTimeFormatPart,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\DateTimeFormatPart.cs,AddEraParts,The following statement contains a magic number: DateTimeFormatPartOptions.Add("ERA"'                  new List<IDateTimeFormatPartOptionTO>                  {                      new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                          _assignManager.AssignEra)'                      new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                          _assignManager.AssignEra)'                      new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                          _assignManager. AssignEra)                  });
Magic Number,Dev2.Common.TimeZoneBuilder,TimeFormatPartBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeFormatPartBuilder.cs,Build,The following statement contains a magic number: TimeFormatPartOptions = new Dictionary<string' List<IDateTimeFormatPartOptionTO>>              {                  {                      "yy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "yyyy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "mm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "m"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "MM"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "M"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "d"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "dd"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "DW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dw"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)                      }                  }'                  {                      "w"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                      }                  }'                  {                      "24h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber24H' true' null' _assignManager.Assign24Hours)                      }                  }'                  {                      "12h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                      }                  }'                  {                      "min"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                      }                  }'                  {                      "ss"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      }                  }'                  {                      "sp"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                      }                  }'                  {                      "am/pm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(3' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      }                  }'                  {                      "Z"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                              _assignManager.AssignEra)                      }                  }'                  {                      "Era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                              _assignManager.AssignEra)                      }                  }'                  {                      "ERA"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                              _assignManager.AssignEra)                      }                } };
Magic Number,Dev2.Common.TimeZoneBuilder,TimeFormatPartBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeFormatPartBuilder.cs,Build,The following statement contains a magic number: TimeFormatPartOptions = new Dictionary<string' List<IDateTimeFormatPartOptionTO>>              {                  {                      "yy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "yyyy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "mm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "m"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "MM"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "M"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "d"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "dd"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "DW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dw"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)                      }                  }'                  {                      "w"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                      }                  }'                  {                      "24h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber24H' true' null' _assignManager.Assign24Hours)                      }                  }'                  {                      "12h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                      }                  }'                  {                      "min"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                      }                  }'                  {                      "ss"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      }                  }'                  {                      "sp"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                      }                  }'                  {                      "am/pm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(3' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      }                  }'                  {                      "Z"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                              _assignManager.AssignEra)                      }                  }'                  {                      "Era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                              _assignManager.AssignEra)                      }                  }'                  {                      "ERA"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                              _assignManager.AssignEra)                      }                } };
Magic Number,Dev2.Common.TimeZoneBuilder,TimeFormatPartBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeFormatPartBuilder.cs,Build,The following statement contains a magic number: TimeFormatPartOptions = new Dictionary<string' List<IDateTimeFormatPartOptionTO>>              {                  {                      "yy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "yyyy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "mm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "m"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "MM"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "M"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "d"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "dd"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "DW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dw"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)                      }                  }'                  {                      "w"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                      }                  }'                  {                      "24h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber24H' true' null' _assignManager.Assign24Hours)                      }                  }'                  {                      "12h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                      }                  }'                  {                      "min"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                      }                  }'                  {                      "ss"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      }                  }'                  {                      "sp"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                      }                  }'                  {                      "am/pm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(3' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      }                  }'                  {                      "Z"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                              _assignManager.AssignEra)                      }                  }'                  {                      "Era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                              _assignManager.AssignEra)                      }                  }'                  {                      "ERA"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                              _assignManager.AssignEra)                      }                } };
Magic Number,Dev2.Common.TimeZoneBuilder,TimeFormatPartBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeFormatPartBuilder.cs,Build,The following statement contains a magic number: TimeFormatPartOptions = new Dictionary<string' List<IDateTimeFormatPartOptionTO>>              {                  {                      "yy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "yyyy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "mm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "m"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "MM"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "M"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "d"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "dd"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "DW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dw"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)                      }                  }'                  {                      "w"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                      }                  }'                  {                      "24h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber24H' true' null' _assignManager.Assign24Hours)                      }                  }'                  {                      "12h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                      }                  }'                  {                      "min"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                      }                  }'                  {                      "ss"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      }                  }'                  {                      "sp"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                      }                  }'                  {                      "am/pm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(3' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      }                  }'                  {                      "Z"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                              _assignManager.AssignEra)                      }                  }'                  {                      "Era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                              _assignManager.AssignEra)                      }                  }'                  {                      "ERA"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                              _assignManager.AssignEra)                      }                } };
Magic Number,Dev2.Common.TimeZoneBuilder,TimeFormatPartBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeFormatPartBuilder.cs,Build,The following statement contains a magic number: TimeFormatPartOptions = new Dictionary<string' List<IDateTimeFormatPartOptionTO>>              {                  {                      "yy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "yyyy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "mm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "m"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "MM"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "M"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "d"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "dd"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "DW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dw"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)                      }                  }'                  {                      "w"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                      }                  }'                  {                      "24h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber24H' true' null' _assignManager.Assign24Hours)                      }                  }'                  {                      "12h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                      }                  }'                  {                      "min"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                      }                  }'                  {                      "ss"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      }                  }'                  {                      "sp"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                      }                  }'                  {                      "am/pm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(3' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      }                  }'                  {                      "Z"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                              _assignManager.AssignEra)                      }                  }'                  {                      "Era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                              _assignManager.AssignEra)                      }                  }'                  {                      "ERA"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                              _assignManager.AssignEra)                      }                } };
Magic Number,Dev2.Common.TimeZoneBuilder,TimeFormatPartBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeFormatPartBuilder.cs,Build,The following statement contains a magic number: TimeFormatPartOptions = new Dictionary<string' List<IDateTimeFormatPartOptionTO>>              {                  {                      "yy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "yyyy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "mm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "m"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "MM"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "M"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "d"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "dd"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "DW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dw"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)                      }                  }'                  {                      "w"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                      }                  }'                  {                      "24h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber24H' true' null' _assignManager.Assign24Hours)                      }                  }'                  {                      "12h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                      }                  }'                  {                      "min"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                      }                  }'                  {                      "ss"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      }                  }'                  {                      "sp"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                      }                  }'                  {                      "am/pm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(3' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      }                  }'                  {                      "Z"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                              _assignManager.AssignEra)                      }                  }'                  {                      "Era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                              _assignManager.AssignEra)                      }                  }'                  {                      "ERA"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                              _assignManager.AssignEra)                      }                } };
Magic Number,Dev2.Common.TimeZoneBuilder,TimeFormatPartBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeFormatPartBuilder.cs,Build,The following statement contains a magic number: TimeFormatPartOptions = new Dictionary<string' List<IDateTimeFormatPartOptionTO>>              {                  {                      "yy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "yyyy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "mm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "m"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "MM"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "M"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "d"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "dd"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "DW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dw"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)                      }                  }'                  {                      "w"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                      }                  }'                  {                      "24h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber24H' true' null' _assignManager.Assign24Hours)                      }                  }'                  {                      "12h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                      }                  }'                  {                      "min"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                      }                  }'                  {                      "ss"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      }                  }'                  {                      "sp"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                      }                  }'                  {                      "am/pm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(3' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      }                  }'                  {                      "Z"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                              _assignManager.AssignEra)                      }                  }'                  {                      "Era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                              _assignManager.AssignEra)                      }                  }'                  {                      "ERA"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                              _assignManager.AssignEra)                      }                } };
Magic Number,Dev2.Common.TimeZoneBuilder,TimeFormatPartBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeFormatPartBuilder.cs,Build,The following statement contains a magic number: TimeFormatPartOptions = new Dictionary<string' List<IDateTimeFormatPartOptionTO>>              {                  {                      "yy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "yyyy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "mm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "m"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "MM"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "M"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "d"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "dd"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "DW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dw"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)                      }                  }'                  {                      "w"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                      }                  }'                  {                      "24h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber24H' true' null' _assignManager.Assign24Hours)                      }                  }'                  {                      "12h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                      }                  }'                  {                      "min"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                      }                  }'                  {                      "ss"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      }                  }'                  {                      "sp"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                      }                  }'                  {                      "am/pm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(3' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      }                  }'                  {                      "Z"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                              _assignManager.AssignEra)                      }                  }'                  {                      "Era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                              _assignManager.AssignEra)                      }                  }'                  {                      "ERA"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                              _assignManager.AssignEra)                      }                } };
Magic Number,Dev2.Common.TimeZoneBuilder,TimeFormatPartBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeFormatPartBuilder.cs,Build,The following statement contains a magic number: TimeFormatPartOptions = new Dictionary<string' List<IDateTimeFormatPartOptionTO>>              {                  {                      "yy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "yyyy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "mm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "m"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "MM"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "M"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "d"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "dd"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "DW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dw"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)                      }                  }'                  {                      "w"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                      }                  }'                  {                      "24h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber24H' true' null' _assignManager.Assign24Hours)                      }                  }'                  {                      "12h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                      }                  }'                  {                      "min"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                      }                  }'                  {                      "ss"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      }                  }'                  {                      "sp"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                      }                  }'                  {                      "am/pm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(3' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      }                  }'                  {                      "Z"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                              _assignManager.AssignEra)                      }                  }'                  {                      "Era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                              _assignManager.AssignEra)                      }                  }'                  {                      "ERA"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                              _assignManager.AssignEra)                      }                } };
Magic Number,Dev2.Common.TimeZoneBuilder,TimeFormatPartBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeFormatPartBuilder.cs,Build,The following statement contains a magic number: TimeFormatPartOptions = new Dictionary<string' List<IDateTimeFormatPartOptionTO>>              {                  {                      "yy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "yyyy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "mm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "m"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "MM"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "M"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "d"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "dd"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "DW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dw"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)                      }                  }'                  {                      "w"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                      }                  }'                  {                      "24h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber24H' true' null' _assignManager.Assign24Hours)                      }                  }'                  {                      "12h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                      }                  }'                  {                      "min"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                      }                  }'                  {                      "ss"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      }                  }'                  {                      "sp"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                      }                  }'                  {                      "am/pm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(3' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      }                  }'                  {                      "Z"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                              _assignManager.AssignEra)                      }                  }'                  {                      "Era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                              _assignManager.AssignEra)                      }                  }'                  {                      "ERA"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                              _assignManager.AssignEra)                      }                } };
Magic Number,Dev2.Common.TimeZoneBuilder,TimeFormatPartBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeFormatPartBuilder.cs,Build,The following statement contains a magic number: TimeFormatPartOptions = new Dictionary<string' List<IDateTimeFormatPartOptionTO>>              {                  {                      "yy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "yyyy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "mm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "m"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "MM"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "M"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "d"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "dd"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "DW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dw"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)                      }                  }'                  {                      "w"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                      }                  }'                  {                      "24h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber24H' true' null' _assignManager.Assign24Hours)                      }                  }'                  {                      "12h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                      }                  }'                  {                      "min"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                      }                  }'                  {                      "ss"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      }                  }'                  {                      "sp"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                      }                  }'                  {                      "am/pm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(3' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      }                  }'                  {                      "Z"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                              _assignManager.AssignEra)                      }                  }'                  {                      "Era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                              _assignManager.AssignEra)                      }                  }'                  {                      "ERA"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                              _assignManager.AssignEra)                      }                } };
Magic Number,Dev2.Common.TimeZoneBuilder,TimeFormatPartBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeFormatPartBuilder.cs,Build,The following statement contains a magic number: TimeFormatPartOptions = new Dictionary<string' List<IDateTimeFormatPartOptionTO>>              {                  {                      "yy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "yyyy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "mm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "m"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "MM"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "M"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "d"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "dd"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "DW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dw"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)                      }                  }'                  {                      "w"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                      }                  }'                  {                      "24h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber24H' true' null' _assignManager.Assign24Hours)                      }                  }'                  {                      "12h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                      }                  }'                  {                      "min"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                      }                  }'                  {                      "ss"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      }                  }'                  {                      "sp"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                      }                  }'                  {                      "am/pm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(3' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      }                  }'                  {                      "Z"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                              _assignManager.AssignEra)                      }                  }'                  {                      "Era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                              _assignManager.AssignEra)                      }                  }'                  {                      "ERA"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                              _assignManager.AssignEra)                      }                } };
Magic Number,Dev2.Common.TimeZoneBuilder,TimeFormatPartBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeFormatPartBuilder.cs,Build,The following statement contains a magic number: TimeFormatPartOptions = new Dictionary<string' List<IDateTimeFormatPartOptionTO>>              {                  {                      "yy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "yyyy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "mm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "m"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "MM"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "M"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "d"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "dd"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "DW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dw"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)                      }                  }'                  {                      "w"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                      }                  }'                  {                      "24h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber24H' true' null' _assignManager.Assign24Hours)                      }                  }'                  {                      "12h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                      }                  }'                  {                      "min"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                      }                  }'                  {                      "ss"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      }                  }'                  {                      "sp"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                      }                  }'                  {                      "am/pm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(3' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      }                  }'                  {                      "Z"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                              _assignManager.AssignEra)                      }                  }'                  {                      "Era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                              _assignManager.AssignEra)                      }                  }'                  {                      "ERA"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                              _assignManager.AssignEra)                      }                } };
Magic Number,Dev2.Common.TimeZoneBuilder,TimeFormatPartBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeFormatPartBuilder.cs,Build,The following statement contains a magic number: TimeFormatPartOptions = new Dictionary<string' List<IDateTimeFormatPartOptionTO>>              {                  {                      "yy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "yyyy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "mm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "m"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "MM"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "M"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "d"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "dd"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "DW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dw"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)                      }                  }'                  {                      "w"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                      }                  }'                  {                      "24h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber24H' true' null' _assignManager.Assign24Hours)                      }                  }'                  {                      "12h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                      }                  }'                  {                      "min"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                      }                  }'                  {                      "ss"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      }                  }'                  {                      "sp"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                      }                  }'                  {                      "am/pm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(3' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      }                  }'                  {                      "Z"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                              _assignManager.AssignEra)                      }                  }'                  {                      "Era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                              _assignManager.AssignEra)                      }                  }'                  {                      "ERA"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                              _assignManager.AssignEra)                      }                } };
Magic Number,Dev2.Common.TimeZoneBuilder,TimeFormatPartBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeFormatPartBuilder.cs,Build,The following statement contains a magic number: TimeFormatPartOptions = new Dictionary<string' List<IDateTimeFormatPartOptionTO>>              {                  {                      "yy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "yyyy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "mm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "m"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "MM"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "M"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "d"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "dd"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "DW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dw"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)                      }                  }'                  {                      "w"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                      }                  }'                  {                      "24h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber24H' true' null' _assignManager.Assign24Hours)                      }                  }'                  {                      "12h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                      }                  }'                  {                      "min"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                      }                  }'                  {                      "ss"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      }                  }'                  {                      "sp"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                      }                  }'                  {                      "am/pm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(3' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      }                  }'                  {                      "Z"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                              _assignManager.AssignEra)                      }                  }'                  {                      "Era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                              _assignManager.AssignEra)                      }                  }'                  {                      "ERA"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                              _assignManager.AssignEra)                      }                } };
Magic Number,Dev2.Common.TimeZoneBuilder,TimeFormatPartBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeFormatPartBuilder.cs,Build,The following statement contains a magic number: TimeFormatPartOptions = new Dictionary<string' List<IDateTimeFormatPartOptionTO>>              {                  {                      "yy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "yyyy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "mm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "m"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "MM"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "M"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "d"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "dd"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "DW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dw"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)                      }                  }'                  {                      "w"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                      }                  }'                  {                      "24h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber24H' true' null' _assignManager.Assign24Hours)                      }                  }'                  {                      "12h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                      }                  }'                  {                      "min"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                      }                  }'                  {                      "ss"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      }                  }'                  {                      "sp"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                      }                  }'                  {                      "am/pm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(3' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      }                  }'                  {                      "Z"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                              _assignManager.AssignEra)                      }                  }'                  {                      "Era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                              _assignManager.AssignEra)                      }                  }'                  {                      "ERA"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                              _assignManager.AssignEra)                      }                } };
Magic Number,Dev2.Common.TimeZoneBuilder,TimeFormatPartBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeFormatPartBuilder.cs,Build,The following statement contains a magic number: TimeFormatPartOptions = new Dictionary<string' List<IDateTimeFormatPartOptionTO>>              {                  {                      "yy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "yyyy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "mm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "m"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "MM"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "M"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "d"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "dd"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "DW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dw"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)                      }                  }'                  {                      "w"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                      }                  }'                  {                      "24h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber24H' true' null' _assignManager.Assign24Hours)                      }                  }'                  {                      "12h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                      }                  }'                  {                      "min"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                      }                  }'                  {                      "ss"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      }                  }'                  {                      "sp"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                      }                  }'                  {                      "am/pm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(3' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      }                  }'                  {                      "Z"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                              _assignManager.AssignEra)                      }                  }'                  {                      "Era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                              _assignManager.AssignEra)                      }                  }'                  {                      "ERA"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                              _assignManager.AssignEra)                      }                } };
Magic Number,Dev2.Common.TimeZoneBuilder,TimeFormatPartBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeFormatPartBuilder.cs,Build,The following statement contains a magic number: TimeFormatPartOptions = new Dictionary<string' List<IDateTimeFormatPartOptionTO>>              {                  {                      "yy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "yyyy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "mm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "m"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "MM"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "M"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "d"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "dd"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "DW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dw"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)                      }                  }'                  {                      "w"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                      }                  }'                  {                      "24h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber24H' true' null' _assignManager.Assign24Hours)                      }                  }'                  {                      "12h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                      }                  }'                  {                      "min"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                      }                  }'                  {                      "ss"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      }                  }'                  {                      "sp"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                      }                  }'                  {                      "am/pm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(3' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      }                  }'                  {                      "Z"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                              _assignManager.AssignEra)                      }                  }'                  {                      "Era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                              _assignManager.AssignEra)                      }                  }'                  {                      "ERA"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                              _assignManager.AssignEra)                      }                } };
Magic Number,Dev2.Common.TimeZoneBuilder,TimeFormatPartBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeFormatPartBuilder.cs,Build,The following statement contains a magic number: TimeFormatPartOptions = new Dictionary<string' List<IDateTimeFormatPartOptionTO>>              {                  {                      "yy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "yyyy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "mm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "m"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "MM"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "M"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "d"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "dd"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "DW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dw"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)                      }                  }'                  {                      "w"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                      }                  }'                  {                      "24h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber24H' true' null' _assignManager.Assign24Hours)                      }                  }'                  {                      "12h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                      }                  }'                  {                      "min"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                      }                  }'                  {                      "ss"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      }                  }'                  {                      "sp"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                      }                  }'                  {                      "am/pm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(3' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      }                  }'                  {                      "Z"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                              _assignManager.AssignEra)                      }                  }'                  {                      "Era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                              _assignManager.AssignEra)                      }                  }'                  {                      "ERA"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                              _assignManager.AssignEra)                      }                } };
Magic Number,Dev2.Common.TimeZoneBuilder,TimeFormatPartBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeFormatPartBuilder.cs,Build,The following statement contains a magic number: TimeFormatPartOptions = new Dictionary<string' List<IDateTimeFormatPartOptionTO>>              {                  {                      "yy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "yyyy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "mm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "m"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "MM"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "M"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "d"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "dd"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "DW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dw"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)                      }                  }'                  {                      "w"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                      }                  }'                  {                      "24h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber24H' true' null' _assignManager.Assign24Hours)                      }                  }'                  {                      "12h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                      }                  }'                  {                      "min"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                      }                  }'                  {                      "ss"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      }                  }'                  {                      "sp"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                      }                  }'                  {                      "am/pm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(3' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      }                  }'                  {                      "Z"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                              _assignManager.AssignEra)                      }                  }'                  {                      "Era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                              _assignManager.AssignEra)                      }                  }'                  {                      "ERA"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                              _assignManager.AssignEra)                      }                } };
Magic Number,Dev2.Common.TimeZoneBuilder,TimeFormatPartBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeFormatPartBuilder.cs,Build,The following statement contains a magic number: TimeFormatPartOptions = new Dictionary<string' List<IDateTimeFormatPartOptionTO>>              {                  {                      "yy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "yyyy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "mm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "m"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "MM"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "M"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "d"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "dd"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "DW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dw"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)                      }                  }'                  {                      "w"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                      }                  }'                  {                      "24h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber24H' true' null' _assignManager.Assign24Hours)                      }                  }'                  {                      "12h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                      }                  }'                  {                      "min"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                      }                  }'                  {                      "ss"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      }                  }'                  {                      "sp"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                      }                  }'                  {                      "am/pm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(3' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      }                  }'                  {                      "Z"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                              _assignManager.AssignEra)                      }                  }'                  {                      "Era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                              _assignManager.AssignEra)                      }                  }'                  {                      "ERA"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                              _assignManager.AssignEra)                      }                } };
Magic Number,Dev2.Common.TimeZoneBuilder,TimeFormatPartBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeFormatPartBuilder.cs,Build,The following statement contains a magic number: TimeFormatPartOptions = new Dictionary<string' List<IDateTimeFormatPartOptionTO>>              {                  {                      "yy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "yyyy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "mm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "m"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "MM"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "M"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "d"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "dd"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "DW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dw"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)                      }                  }'                  {                      "w"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                      }                  }'                  {                      "24h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber24H' true' null' _assignManager.Assign24Hours)                      }                  }'                  {                      "12h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                      }                  }'                  {                      "min"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                      }                  }'                  {                      "ss"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      }                  }'                  {                      "sp"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                      }                  }'                  {                      "am/pm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(3' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      }                  }'                  {                      "Z"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                              _assignManager.AssignEra)                      }                  }'                  {                      "Era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                              _assignManager.AssignEra)                      }                  }'                  {                      "ERA"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                              _assignManager.AssignEra)                      }                } };
Magic Number,Dev2.Common.TimeZoneBuilder,TimeFormatPartBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeFormatPartBuilder.cs,Build,The following statement contains a magic number: TimeFormatPartOptions = new Dictionary<string' List<IDateTimeFormatPartOptionTO>>              {                  {                      "yy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "yyyy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextNumeric' true' null' _assignManager.AssignYears)                      }                  }'                  {                      "mm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "m"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "MM"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)                      }                  }'                  {                      "M"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMonth' true' null' _assignManager.AssignMonths)'                      }                  }'                  {                      "d"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "dd"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDay' true' null' _assignManager.AssignDays)                      }                  }'                  {                      "DW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dW"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dw"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfWeek' true' null' _assignManager.AssignDaysOfWeek)'                      }                  }'                  {                      "dy"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberDayOfYear' true' null' _assignManager.AssignDaysOfYear)                      }                  }'                  {                      "w"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberWeekOfYear' true' null' _assignManager.AssignWeeks)'                      }                  }'                  {                      "24h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber24H' true' null' _assignManager.Assign24Hours)                      }                  }'                  {                      "12h"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumber12H' true' null' _assignManager.Assign12Hours)'                      }                  }'                  {                      "min"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMinutes' true' null' _assignManager.AssignMinutes)'                      }                  }'                  {                      "ss"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberSeconds' true' null' _assignManager.AssignSeconds)'                      }                  }'                  {                      "sp"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(2' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                          new DateTimeFormatPartOptionTO(1' DatetimeParserHelper.IsNumberMilliseconds' true' null' _assignManager.AssignMilliseconds)'                      }                  }'                  {                      "am/pm"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(3' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                          new DateTimeFormatPartOptionTO(2' CompareTextValueToDateTimePart.IsTextAmPm' false' null' _assignManager.AssignAmPm)'                      }                  }'                  {                      "Z"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "ZZZ"' _timeZones.Select(k =>                      {                          IDateTimeFormatPartOptionTO dateTimeFormatPartOptionTo = new DateTimeFormatPartOptionTO(k.Key.Length' CompareTextValueToDateTimePart.IsTextTimeZone' false' null' _assignManager.AssignTimeZone);                          return dateTimeFormatPartOptionTo;                      }).OrderByDescending(k => k.Length).ToList()                  }'                  {                      "era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(2' (data' treatAsTim) => data.ToLower().Equals("ad")' false' "AD"'                              _assignManager.AssignEra)                      }                  }'                  {                      "Era"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(3' (data' treatAsTim) => data.ToLower().Equals("a.d")' false' "A.D"'                              _assignManager.AssignEra)                      }                  }'                  {                      "ERA"' new List<IDateTimeFormatPartOptionTO>                      {                          new DateTimeFormatPartOptionTO(4' (data' treatAsTim) => data.ToLower().Equals("a.d.")' false' "A.D."'                              _assignManager.AssignEra)                      }                } };
Magic Number,Dev2.Common.TimeZoneBuilder,TimeZoneBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeZoneBuilder.cs,Build,The following statement contains a magic number: var hrs = string.Concat(hours / Math.Abs(hours) < 0 ? "-" : "+"'                              Math.Abs(hours).ToString(CultureInfo.InvariantCulture).PadLeft(2' '0'));
Magic Number,Dev2.Common.TimeZoneBuilder,TimeZoneBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeZoneBuilder.cs,Build,The following statement contains a magic number: minutes < 2
Magic Number,Dev2.Common.TimeZoneBuilder,TimeZoneBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeZoneBuilder.cs,Build,The following statement contains a magic number: hours < 13
Magic Number,Dev2.Common.TimeZoneBuilder,TimeZoneBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeZoneBuilder.cs,CreateGMTEntries,The following statement contains a magic number: var hrs = string.Concat(hours / Math.Abs(hours) < 0 ? "-" : "+"'                              Math.Abs(hours).ToString(CultureInfo.InvariantCulture).PadLeft(2' '0'));
Magic Number,Dev2.Common.TimeZoneBuilder,TimeZoneBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeZoneBuilder.cs,CreateGMTEntries,The following statement contains a magic number: minutes < 2
Magic Number,Dev2.Common.TimeZoneBuilder,TimeZoneBuilder,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\TimeZoneBuilder\TimeZoneBuilder.cs,CreateGMTEntries,The following statement contains a magic number: hours < 13
Magic Number,Dev2.Common.Utils,JsonPathContext,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Utils\JsonPath.cs,SelectTo,The following statement contains a magic number: expr = expr.Substring(expr.Length >= 2 && expr[1] == ';' ? 2 : 1);
Magic Number,Dev2.Common.Utils,JsonPathContext,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Utils\JsonPath.cs,SelectTo,The following statement contains a magic number: expr = expr.Substring(expr.Length >= 2 && expr[1] == ';' ? 2 : 1);
Magic Number,Dev2.Common.Utils,Interpreter,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Utils\JsonPath.cs,Slice,The following statement contains a magic number: var step = parts.Length > 2 ? ParseInt(parts[2]' 1) : 1;
Magic Number,Dev2.Common.Utils,Interpreter,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Utils\JsonPath.cs,Slice,The following statement contains a magic number: var step = parts.Length > 2 ? ParseInt(parts[2]' 1) : 1;
Magic Number,Dev2.Common.Utils,JsonUtils,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Utils\JsonUtils.cs,GetLineBreak,The following statement contains a magic number: character == ''' && quotes % 2 == 0
Magic Number,Dev2.Common.Utils,TextUtils,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Utils\TextUtils.cs,ReplaceWorkflowNewLinesWithEnvironmentNewLines,The following statement contains a magic number: startIndex = indexOfReplacement + 2;
Magic Number,Dev2.Common.Utils,TextUtils,D:\research\architectureSmells\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Common\Utils\TextUtils.cs,BackwardsLookup,The following statement contains a magic number: startIndex = indexOfReplacement + 2;
