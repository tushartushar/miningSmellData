Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Gma.DataStructures.StringSearch,SplitResult,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\TrieNet\_PatriciaTrie\SplitResult.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  return (m_Head.GetHashCode()*397) ^ m_Rest.GetHashCode();              }
Magic Number,Gma.DataStructures.StringSearch,StringPartition,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\TrieNet\_PatriciaTrie\StringPartition.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int hashCode = (m_Origin != null ? m_Origin.GetHashCode() : 0);                  hashCode = (hashCode*397) ^ m_PartitionLength;                  hashCode = (hashCode*397) ^ m_StartIndex;                  return hashCode;              }
Magic Number,Gma.DataStructures.StringSearch,StringPartition,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\TrieNet\_PatriciaTrie\StringPartition.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int hashCode = (m_Origin != null ? m_Origin.GetHashCode() : 0);                  hashCode = (hashCode*397) ^ m_PartitionLength;                  hashCode = (hashCode*397) ^ m_StartIndex;                  return hashCode;              }
Magic Number,Gma.DataStructures.StringSearch,ZipResult,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\TrieNet\_PatriciaTrie\ZipResult.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int hashCode = m_CommonHead.GetHashCode();                  hashCode = (hashCode*397) ^ m_OtherRest.GetHashCode();                  hashCode = (hashCode*397) ^ m_ThisRest.GetHashCode();                  return hashCode;              }
Magic Number,Gma.DataStructures.StringSearch,ZipResult,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\TrieNet\_PatriciaTrie\ZipResult.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int hashCode = m_CommonHead.GetHashCode();                  hashCode = (hashCode*397) ^ m_OtherRest.GetHashCode();                  hashCode = (hashCode*397) ^ m_ThisRest.GetHashCode();                  return hashCode;              }
