Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Warewolf.Studio.Views,ExplorerView,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\ExplorerView.xaml.cs,ExplorerItemShortcuts,Cyclomatic complexity of the method is 9
Complex Method,Warewolf.Studio.Views,MessageBoxView,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\MessageBoxView.xaml.cs,MessageBoxView_OnPreviewKeyDown,Cyclomatic complexity of the method is 10
Long Identifier,Warewolf.Studio.Views,ConnectControl,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\ConnectControl.xaml.cs,,The length of the parameter ServerComboBoxAutomationIDProperty is 34.
Long Identifier,Warewolf.Studio.Views,ConnectControl,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\ConnectControl.xaml.cs,,The length of the parameter EditButtonAutomationIDProperty is 30.
Long Identifier,Warewolf.Studio.Views,ConnectControl,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\ConnectControl.xaml.cs,,The length of the parameter ConnectButtonAutomationIDProperty is 33.
Long Statement,Warewolf.Studio.Views,CircularProgressBar,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\CircularProgressBar.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Warewolf.Studio.Views;component/circularprogressbar.xaml"' System.UriKind.Relative); " is 130.
Long Statement,Warewolf.Studio.Views,ExplorerView,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\ExplorerView.xaml.cs,ExplorerItemShortcuts,The length of the statement  "                if (e.Key == Key.F && (Keyboard.Modifiers & (ModifierKeys.Control | ModifierKeys.Shift)) == (ModifierKeys.Control | ModifierKeys.Shift)) " is 136.
Long Statement,Warewolf.Studio.Views,ExplorerView,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\ExplorerView.xaml.cs,EnvironmentShortcuts,The length of the statement  "            if (e.Key == Key.F && (Keyboard.Modifiers & (ModifierKeys.Control | ModifierKeys.Shift)) == (ModifierKeys.Control | ModifierKeys.Shift)) " is 136.
Long Statement,Warewolf.Studio.Views,FileChooserView,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\FileChooserView.xaml.cs,ShowView,The length of the statement  "            var vm = new FileChooser(files' new FileChooserModel(server.QueryProxy' filter' new FileWrapper())' RequestClose' true); " is 120.
Long Statement,Warewolf.Studio.Views,FileChooserView,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\FileChooserView.xaml.cs,ShowView,The length of the statement  "            var vm = new FileChooser(new List<string>()' new FileChooserModel(server.QueryProxy)' RequestClose' allowMultipleSelection); " is 124.
Long Statement,Warewolf.Studio.Views,ManageOAuthSourceControl,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\ManageOAuthSourceControl.xaml.cs,HideScriptErrors,The length of the statement  "            objComWebBrowser?.GetType().InvokeMember("Silent"' BindingFlags.SetProperty' null' objComWebBrowser' new object[] { hide }); " is 124.
Long Statement,Warewolf.Studio.Views,MessageBoxView,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\MessageBoxView.xaml.cs,Hyperlink_OnRequestNavigate,The length of the statement  "                var listStrLineElements = resourcePath.NavigateUri.OriginalString.Split(new[] { "\r\n" }' StringSplitOptions.RemoveEmptyEntries).ToList(); " is 138.
Long Statement,Warewolf.Studio.Views,ToolboxView,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\ToolboxView.xaml.cs,ToolGrid_OnMouseLeftButtonDown,The length of the statement  "                    popupController?.Show(Studio.Resources.Languages.Core.ToolboxPopupDescription' Studio.Resources.Languages.Core.ToolboxPopupHeader' MessageBoxButton.OK' MessageBoxImage.Information' ""' false' false' true' false' false' false); " is 226.
Long Statement,Warewolf.Studio.Views,ActivityDefaultWindow,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\ActivityDefaultWindow.xaml.cs,ValidateSwitchCase,The length of the statement  "                    PopupController.Show(Studio.Resources.Languages.Core.SwitchCaseEmptyExpressionMessage' Studio.Resources.Languages.Core.SwitchFlowErrorHeader' " is 141.
Long Statement,Warewolf.Studio.Views,ActivityDefaultWindow,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\ActivityDefaultWindow.xaml.cs,ValidateSwitchCase,The length of the statement  "                        PopupController.Show(Studio.Resources.Languages.Core.SwitchCaseUniqueMessage' Studio.Resources.Languages.Core.SwitchFlowErrorHeader' " is 132.
Long Statement,Warewolf.Studio.Views,ActivityDefaultWindow,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\ActivityDefaultWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Warewolf.Studio.Views;component/activitydefaultwindow.xaml"' System.UriKind.Relative); " is 132.
Long Statement,Warewolf.Studio.Views,ActivityDefaultWindow,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\ActivityDefaultWindow.xaml.cs,Connect,The length of the statement  "            ((Warewolf.Studio.Views.ActivityDefaultWindow)(target)).MouseDown += new System.Windows.Input.MouseButtonEventHandler(this.WindowBorderLess_OnMouseDown); " is 153.
Long Statement,Warewolf.Studio.Views,ActivityDefaultWindow,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\ActivityDefaultWindow.xaml.cs,Connect,The length of the statement  "            ((Warewolf.Studio.Views.ActivityDefaultWindow)(target)).KeyUp += new System.Windows.Input.KeyEventHandler(this.ActivityDefaultWindow_OnKeyUp); " is 142.
Long Statement,Warewolf.Studio.Views,ActivityDefaultWindow,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\ActivityDefaultWindow.xaml.cs,Connect,The length of the statement  "            ((Warewolf.Studio.Views.ActivityDefaultWindow)(target)).Closed += new System.EventHandler(this.WindowBorderLess_OnClosed); " is 122.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\obj\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Complex Conditional,Warewolf.Studio.Views,ToolboxView,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\ToolboxView.xaml.cs,ToolGrid_OnMouseEnter,The conditional expression  "variablesPane != null && !variablesPane.IsActivePane &&                  explorerPane != null && !explorerPane.IsActivePane &&                  outputPane != null && !outputPane.IsActivePane &&                  documentHostPane != null && !documentHostPane.IsActivePane"  is complex.
Empty Catch Block,Warewolf.Studio.Views,ManageDatabaseSourceControl,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\ManageDatabaseSourceControl.xaml.cs,SelectDatabase,The method has an empty catch block.
Empty Catch Block,Warewolf.Studio.Views,ManageServerControl,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\ManageServerControl.xaml.cs,SelectServer,The method has an empty catch block.
Empty Catch Block,Warewolf.Studio.Views,ManageServerControl,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\ManageServerControl.xaml.cs,EnterServerName,The method has an empty catch block.
Magic Number,Warewolf.Studio.Views,CircularProgressBar,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\CircularProgressBar.xaml.cs,CircularProgressBar,The following statement contains a magic number: _animationTimer = new DispatcherTimer(DispatcherPriority.ContextIdle' Dispatcher)              {                  Interval = new TimeSpan(0' 0' 0' 0' 75)              };
Magic Number,Warewolf.Studio.Views,CircularProgressBar,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\CircularProgressBar.xaml.cs,SetPosition,The following statement contains a magic number: ellipse.SetValue(Canvas.LeftProperty' 50 + Math.Sin(offset + posOffSet * step) * 50);
Magic Number,Warewolf.Studio.Views,CircularProgressBar,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\CircularProgressBar.xaml.cs,SetPosition,The following statement contains a magic number: ellipse.SetValue(Canvas.LeftProperty' 50 + Math.Sin(offset + posOffSet * step) * 50);
Magic Number,Warewolf.Studio.Views,CircularProgressBar,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\CircularProgressBar.xaml.cs,SetPosition,The following statement contains a magic number: ellipse.SetValue(Canvas.TopProperty' 50 + Math.Cos(offset + posOffSet * step) * 50);
Magic Number,Warewolf.Studio.Views,CircularProgressBar,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\CircularProgressBar.xaml.cs,SetPosition,The following statement contains a magic number: ellipse.SetValue(Canvas.TopProperty' 50 + Math.Cos(offset + posOffSet * step) * 50);
Magic Number,Warewolf.Studio.Views,CircularProgressBar,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\CircularProgressBar.xaml.cs,OnAnimationTick,The following statement contains a magic number: SpinnerRotate.Angle = (SpinnerRotate.Angle + 36) % 360;
Magic Number,Warewolf.Studio.Views,CircularProgressBar,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\CircularProgressBar.xaml.cs,OnAnimationTick,The following statement contains a magic number: SpinnerRotate.Angle = (SpinnerRotate.Angle + 36) % 360;
Magic Number,Warewolf.Studio.Views,CircularProgressBar,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\CircularProgressBar.xaml.cs,OnCanvasLoaded,The following statement contains a magic number: const double step = Math.PI * 2 / 10.0;
Magic Number,Warewolf.Studio.Views,CircularProgressBar,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\CircularProgressBar.xaml.cs,OnCanvasLoaded,The following statement contains a magic number: const double step = Math.PI * 2 / 10.0;
Magic Number,Warewolf.Studio.Views,CircularProgressBar,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\CircularProgressBar.xaml.cs,OnCanvasLoaded,The following statement contains a magic number: SetPosition(Circle2' offset' 2.0' step);
Magic Number,Warewolf.Studio.Views,CircularProgressBar,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\CircularProgressBar.xaml.cs,OnCanvasLoaded,The following statement contains a magic number: SetPosition(Circle3' offset' 3.0' step);
Magic Number,Warewolf.Studio.Views,CircularProgressBar,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\CircularProgressBar.xaml.cs,OnCanvasLoaded,The following statement contains a magic number: SetPosition(Circle4' offset' 4.0' step);
Magic Number,Warewolf.Studio.Views,CircularProgressBar,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\CircularProgressBar.xaml.cs,OnCanvasLoaded,The following statement contains a magic number: SetPosition(Circle5' offset' 5.0' step);
Magic Number,Warewolf.Studio.Views,CircularProgressBar,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\CircularProgressBar.xaml.cs,OnCanvasLoaded,The following statement contains a magic number: SetPosition(Circle6' offset' 6.0' step);
Magic Number,Warewolf.Studio.Views,CircularProgressBar,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\CircularProgressBar.xaml.cs,OnCanvasLoaded,The following statement contains a magic number: SetPosition(Circle7' offset' 7.0' step);
Magic Number,Warewolf.Studio.Views,CircularProgressBar,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\CircularProgressBar.xaml.cs,OnCanvasLoaded,The following statement contains a magic number: SetPosition(Circle8' offset' 8.0' step);
Magic Number,Warewolf.Studio.Views,CircularProgressBar,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\CircularProgressBar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 17 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Loaded += new System.Windows.RoutedEventHandler(this.OnCanvasLoaded);                            #line default              #line hidden                            #line 18 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Unloaded += new System.Windows.RoutedEventHandler(this.OnCanvasUnloaded);                            #line default              #line hidden              return;              case 2:              this.Circle0 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 3:              this.Circle1 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.Circle2 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 5:              this.Circle3 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.Circle4 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.Circle5 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.Circle6 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.Circle7 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.Circle8 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.SpinnerRotate = ((System.Windows.Media.RotateTransform)(target));              return;              }
Magic Number,Warewolf.Studio.Views,CircularProgressBar,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\CircularProgressBar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 17 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Loaded += new System.Windows.RoutedEventHandler(this.OnCanvasLoaded);                            #line default              #line hidden                            #line 18 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Unloaded += new System.Windows.RoutedEventHandler(this.OnCanvasUnloaded);                            #line default              #line hidden              return;              case 2:              this.Circle0 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 3:              this.Circle1 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.Circle2 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 5:              this.Circle3 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.Circle4 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.Circle5 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.Circle6 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.Circle7 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.Circle8 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.SpinnerRotate = ((System.Windows.Media.RotateTransform)(target));              return;              }
Magic Number,Warewolf.Studio.Views,CircularProgressBar,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\CircularProgressBar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 17 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Loaded += new System.Windows.RoutedEventHandler(this.OnCanvasLoaded);                            #line default              #line hidden                            #line 18 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Unloaded += new System.Windows.RoutedEventHandler(this.OnCanvasUnloaded);                            #line default              #line hidden              return;              case 2:              this.Circle0 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 3:              this.Circle1 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.Circle2 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 5:              this.Circle3 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.Circle4 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.Circle5 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.Circle6 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.Circle7 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.Circle8 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.SpinnerRotate = ((System.Windows.Media.RotateTransform)(target));              return;              }
Magic Number,Warewolf.Studio.Views,CircularProgressBar,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\CircularProgressBar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 17 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Loaded += new System.Windows.RoutedEventHandler(this.OnCanvasLoaded);                            #line default              #line hidden                            #line 18 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Unloaded += new System.Windows.RoutedEventHandler(this.OnCanvasUnloaded);                            #line default              #line hidden              return;              case 2:              this.Circle0 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 3:              this.Circle1 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.Circle2 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 5:              this.Circle3 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.Circle4 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.Circle5 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.Circle6 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.Circle7 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.Circle8 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.SpinnerRotate = ((System.Windows.Media.RotateTransform)(target));              return;              }
Magic Number,Warewolf.Studio.Views,CircularProgressBar,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\CircularProgressBar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 17 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Loaded += new System.Windows.RoutedEventHandler(this.OnCanvasLoaded);                            #line default              #line hidden                            #line 18 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Unloaded += new System.Windows.RoutedEventHandler(this.OnCanvasUnloaded);                            #line default              #line hidden              return;              case 2:              this.Circle0 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 3:              this.Circle1 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.Circle2 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 5:              this.Circle3 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.Circle4 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.Circle5 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.Circle6 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.Circle7 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.Circle8 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.SpinnerRotate = ((System.Windows.Media.RotateTransform)(target));              return;              }
Magic Number,Warewolf.Studio.Views,CircularProgressBar,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\CircularProgressBar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 17 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Loaded += new System.Windows.RoutedEventHandler(this.OnCanvasLoaded);                            #line default              #line hidden                            #line 18 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Unloaded += new System.Windows.RoutedEventHandler(this.OnCanvasUnloaded);                            #line default              #line hidden              return;              case 2:              this.Circle0 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 3:              this.Circle1 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.Circle2 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 5:              this.Circle3 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.Circle4 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.Circle5 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.Circle6 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.Circle7 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.Circle8 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.SpinnerRotate = ((System.Windows.Media.RotateTransform)(target));              return;              }
Magic Number,Warewolf.Studio.Views,CircularProgressBar,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\CircularProgressBar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 17 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Loaded += new System.Windows.RoutedEventHandler(this.OnCanvasLoaded);                            #line default              #line hidden                            #line 18 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Unloaded += new System.Windows.RoutedEventHandler(this.OnCanvasUnloaded);                            #line default              #line hidden              return;              case 2:              this.Circle0 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 3:              this.Circle1 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.Circle2 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 5:              this.Circle3 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.Circle4 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.Circle5 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.Circle6 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.Circle7 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.Circle8 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.SpinnerRotate = ((System.Windows.Media.RotateTransform)(target));              return;              }
Magic Number,Warewolf.Studio.Views,CircularProgressBar,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\CircularProgressBar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 17 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Loaded += new System.Windows.RoutedEventHandler(this.OnCanvasLoaded);                            #line default              #line hidden                            #line 18 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Unloaded += new System.Windows.RoutedEventHandler(this.OnCanvasUnloaded);                            #line default              #line hidden              return;              case 2:              this.Circle0 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 3:              this.Circle1 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.Circle2 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 5:              this.Circle3 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.Circle4 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.Circle5 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.Circle6 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.Circle7 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.Circle8 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.SpinnerRotate = ((System.Windows.Media.RotateTransform)(target));              return;              }
Magic Number,Warewolf.Studio.Views,CircularProgressBar,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\CircularProgressBar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 17 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Loaded += new System.Windows.RoutedEventHandler(this.OnCanvasLoaded);                            #line default              #line hidden                            #line 18 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Unloaded += new System.Windows.RoutedEventHandler(this.OnCanvasUnloaded);                            #line default              #line hidden              return;              case 2:              this.Circle0 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 3:              this.Circle1 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.Circle2 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 5:              this.Circle3 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.Circle4 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.Circle5 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.Circle6 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.Circle7 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.Circle8 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.SpinnerRotate = ((System.Windows.Media.RotateTransform)(target));              return;              }
Magic Number,Warewolf.Studio.Views,CircularProgressBar,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\CircularProgressBar.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 17 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Loaded += new System.Windows.RoutedEventHandler(this.OnCanvasLoaded);                            #line default              #line hidden                            #line 18 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Unloaded += new System.Windows.RoutedEventHandler(this.OnCanvasUnloaded);                            #line default              #line hidden              return;              case 2:              this.Circle0 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 3:              this.Circle1 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.Circle2 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 5:              this.Circle3 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.Circle4 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.Circle5 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.Circle6 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.Circle7 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.Circle8 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.SpinnerRotate = ((System.Windows.Media.RotateTransform)(target));              return;              }
Magic Number,Warewolf.Studio.Views,HelpView,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\HelpView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.UserControl = ((Warewolf.Studio.Views.HelpView)(target));              return;              case 2:              this.HtmlDocumentAdapter = ((Infragistics.Documents.RichText.Html.HtmlDocumentAdapter)(target));              return;              case 3:              this.XamRichTextEditor = ((Infragistics.Controls.Editors.XamRichTextEditor)(target));              return;              }
Magic Number,Warewolf.Studio.Views,HelpView,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\HelpView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.UserControl = ((Warewolf.Studio.Views.HelpView)(target));              return;              case 2:              this.HtmlDocumentAdapter = ((Infragistics.Documents.RichText.Html.HtmlDocumentAdapter)(target));              return;              case 3:              this.XamRichTextEditor = ((Infragistics.Controls.Editors.XamRichTextEditor)(target));              return;              }
Magic Number,Warewolf.Studio.Views,MenuView,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\MenuView.xaml.cs,StartTimer,The following statement contains a magic number: _timer = new DispatcherTimer { Interval = TimeSpan.FromSeconds(18) };
Magic Number,Warewolf.Studio.Views,ActivityDefaultWindow,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\ActivityDefaultWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 8 "..\..\ActivityDefaultWindow.xaml"              ((Warewolf.Studio.Views.ActivityDefaultWindow)(target)).MouseDown += new System.Windows.Input.MouseButtonEventHandler(this.WindowBorderLess_OnMouseDown);                            #line default              #line hidden                            #line 9 "..\..\ActivityDefaultWindow.xaml"              ((Warewolf.Studio.Views.ActivityDefaultWindow)(target)).KeyUp += new System.Windows.Input.KeyEventHandler(this.ActivityDefaultWindow_OnKeyUp);                            #line default              #line hidden                            #line 10 "..\..\ActivityDefaultWindow.xaml"              ((Warewolf.Studio.Views.ActivityDefaultWindow)(target)).Closed += new System.EventHandler(this.WindowBorderLess_OnClosed);                            #line default              #line hidden              return;              case 2:              this.MainGrid = ((System.Windows.Controls.Grid)(target));              return;              case 3:              this.ControlContentPresenter = ((System.Windows.Controls.ContentPresenter)(target));              return;              case 4:              this.DoneButton = ((System.Windows.Controls.Button)(target));                            #line 34 "..\..\ActivityDefaultWindow.xaml"              this.DoneButton.Click += new System.Windows.RoutedEventHandler(this.DoneButton_OnClick);                            #line default              #line hidden              return;              case 5:              this.CancelButton = ((System.Windows.Controls.Button)(target));                            #line 35 "..\..\ActivityDefaultWindow.xaml"              this.CancelButton.Click += new System.Windows.RoutedEventHandler(this.CancelButton_OnClick);                            #line default              #line hidden              return;              }
Magic Number,Warewolf.Studio.Views,ActivityDefaultWindow,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\ActivityDefaultWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 8 "..\..\ActivityDefaultWindow.xaml"              ((Warewolf.Studio.Views.ActivityDefaultWindow)(target)).MouseDown += new System.Windows.Input.MouseButtonEventHandler(this.WindowBorderLess_OnMouseDown);                            #line default              #line hidden                            #line 9 "..\..\ActivityDefaultWindow.xaml"              ((Warewolf.Studio.Views.ActivityDefaultWindow)(target)).KeyUp += new System.Windows.Input.KeyEventHandler(this.ActivityDefaultWindow_OnKeyUp);                            #line default              #line hidden                            #line 10 "..\..\ActivityDefaultWindow.xaml"              ((Warewolf.Studio.Views.ActivityDefaultWindow)(target)).Closed += new System.EventHandler(this.WindowBorderLess_OnClosed);                            #line default              #line hidden              return;              case 2:              this.MainGrid = ((System.Windows.Controls.Grid)(target));              return;              case 3:              this.ControlContentPresenter = ((System.Windows.Controls.ContentPresenter)(target));              return;              case 4:              this.DoneButton = ((System.Windows.Controls.Button)(target));                            #line 34 "..\..\ActivityDefaultWindow.xaml"              this.DoneButton.Click += new System.Windows.RoutedEventHandler(this.DoneButton_OnClick);                            #line default              #line hidden              return;              case 5:              this.CancelButton = ((System.Windows.Controls.Button)(target));                            #line 35 "..\..\ActivityDefaultWindow.xaml"              this.CancelButton.Click += new System.Windows.RoutedEventHandler(this.CancelButton_OnClick);                            #line default              #line hidden              return;              }
Magic Number,Warewolf.Studio.Views,ActivityDefaultWindow,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\ActivityDefaultWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 8 "..\..\ActivityDefaultWindow.xaml"              ((Warewolf.Studio.Views.ActivityDefaultWindow)(target)).MouseDown += new System.Windows.Input.MouseButtonEventHandler(this.WindowBorderLess_OnMouseDown);                            #line default              #line hidden                            #line 9 "..\..\ActivityDefaultWindow.xaml"              ((Warewolf.Studio.Views.ActivityDefaultWindow)(target)).KeyUp += new System.Windows.Input.KeyEventHandler(this.ActivityDefaultWindow_OnKeyUp);                            #line default              #line hidden                            #line 10 "..\..\ActivityDefaultWindow.xaml"              ((Warewolf.Studio.Views.ActivityDefaultWindow)(target)).Closed += new System.EventHandler(this.WindowBorderLess_OnClosed);                            #line default              #line hidden              return;              case 2:              this.MainGrid = ((System.Windows.Controls.Grid)(target));              return;              case 3:              this.ControlContentPresenter = ((System.Windows.Controls.ContentPresenter)(target));              return;              case 4:              this.DoneButton = ((System.Windows.Controls.Button)(target));                            #line 34 "..\..\ActivityDefaultWindow.xaml"              this.DoneButton.Click += new System.Windows.RoutedEventHandler(this.DoneButton_OnClick);                            #line default              #line hidden              return;              case 5:              this.CancelButton = ((System.Windows.Controls.Button)(target));                            #line 35 "..\..\ActivityDefaultWindow.xaml"              this.CancelButton.Click += new System.Windows.RoutedEventHandler(this.CancelButton_OnClick);                            #line default              #line hidden              return;              }
Magic Number,Warewolf.Studio.Views,ActivityDefaultWindow,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\ActivityDefaultWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 8 "..\..\ActivityDefaultWindow.xaml"              ((Warewolf.Studio.Views.ActivityDefaultWindow)(target)).MouseDown += new System.Windows.Input.MouseButtonEventHandler(this.WindowBorderLess_OnMouseDown);                            #line default              #line hidden                            #line 9 "..\..\ActivityDefaultWindow.xaml"              ((Warewolf.Studio.Views.ActivityDefaultWindow)(target)).KeyUp += new System.Windows.Input.KeyEventHandler(this.ActivityDefaultWindow_OnKeyUp);                            #line default              #line hidden                            #line 10 "..\..\ActivityDefaultWindow.xaml"              ((Warewolf.Studio.Views.ActivityDefaultWindow)(target)).Closed += new System.EventHandler(this.WindowBorderLess_OnClosed);                            #line default              #line hidden              return;              case 2:              this.MainGrid = ((System.Windows.Controls.Grid)(target));              return;              case 3:              this.ControlContentPresenter = ((System.Windows.Controls.ContentPresenter)(target));              return;              case 4:              this.DoneButton = ((System.Windows.Controls.Button)(target));                            #line 34 "..\..\ActivityDefaultWindow.xaml"              this.DoneButton.Click += new System.Windows.RoutedEventHandler(this.DoneButton_OnClick);                            #line default              #line hidden              return;              case 5:              this.CancelButton = ((System.Windows.Controls.Button)(target));                            #line 35 "..\..\ActivityDefaultWindow.xaml"              this.CancelButton.Click += new System.Windows.RoutedEventHandler(this.CancelButton_OnClick);                            #line default              #line hidden              return;              }
Missing Default,Warewolf.Studio.Views,CircularProgressBar,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\CircularProgressBar.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 17 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Loaded += new System.Windows.RoutedEventHandler(this.OnCanvasLoaded);                            #line default              #line hidden                            #line 18 "..\..\CircularProgressBar.xaml"              ((System.Windows.Controls.Canvas)(target)).Unloaded += new System.Windows.RoutedEventHandler(this.OnCanvasUnloaded);                            #line default              #line hidden              return;              case 2:              this.Circle0 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 3:              this.Circle1 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.Circle2 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 5:              this.Circle3 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.Circle4 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.Circle5 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.Circle6 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.Circle7 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.Circle8 = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.SpinnerRotate = ((System.Windows.Media.RotateTransform)(target));              return;              }
Missing Default,Warewolf.Studio.Views,HelpView,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\HelpView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.UserControl = ((Warewolf.Studio.Views.HelpView)(target));              return;              case 2:              this.HtmlDocumentAdapter = ((Infragistics.Documents.RichText.Html.HtmlDocumentAdapter)(target));              return;              case 3:              this.XamRichTextEditor = ((Infragistics.Controls.Editors.XamRichTextEditor)(target));              return;              }
Missing Default,Warewolf.Studio.Views,ActivityDefaultWindow,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Warewolf.Studio.Views\ActivityDefaultWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 8 "..\..\ActivityDefaultWindow.xaml"              ((Warewolf.Studio.Views.ActivityDefaultWindow)(target)).MouseDown += new System.Windows.Input.MouseButtonEventHandler(this.WindowBorderLess_OnMouseDown);                            #line default              #line hidden                            #line 9 "..\..\ActivityDefaultWindow.xaml"              ((Warewolf.Studio.Views.ActivityDefaultWindow)(target)).KeyUp += new System.Windows.Input.KeyEventHandler(this.ActivityDefaultWindow_OnKeyUp);                            #line default              #line hidden                            #line 10 "..\..\ActivityDefaultWindow.xaml"              ((Warewolf.Studio.Views.ActivityDefaultWindow)(target)).Closed += new System.EventHandler(this.WindowBorderLess_OnClosed);                            #line default              #line hidden              return;              case 2:              this.MainGrid = ((System.Windows.Controls.Grid)(target));              return;              case 3:              this.ControlContentPresenter = ((System.Windows.Controls.ContentPresenter)(target));              return;              case 4:              this.DoneButton = ((System.Windows.Controls.Button)(target));                            #line 34 "..\..\ActivityDefaultWindow.xaml"              this.DoneButton.Click += new System.Windows.RoutedEventHandler(this.DoneButton_OnClick);                            #line default              #line hidden              return;              case 5:              this.CancelButton = ((System.Windows.Controls.Button)(target));                            #line 35 "..\..\ActivityDefaultWindow.xaml"              this.CancelButton.Click += new System.Windows.RoutedEventHandler(this.CancelButton_OnClick);                            #line default              #line hidden              return;              }
