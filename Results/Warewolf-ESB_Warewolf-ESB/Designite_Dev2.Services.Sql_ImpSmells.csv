Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Dev2.Services.Sql,MySqlServer,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Services.Sql\MySqlServer.cs,GetProcedureParameters,Cyclomatic complexity of the method is 8
Long Parameter List,Dev2.Services.Sql,OracleServer,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Services.Sql\OracleServer.cs,DbDataParameters,The method has 5 parameters. Parameters: dbName' command' fullProcedureName' isOut' helpText
Long Parameter List,Dev2.Services.Sql,OracleServer,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Services.Sql\OracleServer.cs,GetOutParamProperties,The method has 5 parameters. Parameters: command' outParams' parameters' isout' OracleParameter
Long Statement,Dev2.Services.Sql,ODBCServer,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Services.Sql\ODBCServer.cs,SetCommandType,The length of the statement  "            if (commandText.ToLower().StartsWith("select ") || commandText.ToLower().StartsWith("update ") || commandText.ToLower().StartsWith("delete ")) " is 142.
Long Statement,Dev2.Services.Sql,OracleServer,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Services.Sql\OracleServer.cs,FetchStoredProcedures,The length of the statement  "                    using (IDbCommand command = _factory.CreateCommand(_connection' CommandType.StoredProcedure' _owner + "." + fullProcedureName)) " is 127.
Long Statement,Dev2.Services.Sql,OracleServer,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Services.Sql\OracleServer.cs,FetchDatabases,The length of the statement  "            var cmd = new OracleCommand("SELECT DISTINCT(OWNER) AS DATABASE_NAME FROM DBA_SEGMENTS WHERE OWNER IN (SELECT USERNAME FROM DBA_USERS WHERE DEFAULT_TABLESPACE NOT IN ('SYSTEM'''SYSAUX'))"' (OracleConnection)_connection); " is 220.
Long Statement,Dev2.Services.Sql,OracleServer,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Services.Sql\OracleServer.cs,FetchStoredProcedures,The length of the statement  "                    using (IDbCommand command = _factory.CreateCommand(_connection' CommandType.StoredProcedure' _owner + "." + fullProcedureName)) " is 127.
Long Statement,Dev2.Services.Sql,OracleServer,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Services.Sql\OracleServer.cs,FetchStoredProcedures,The length of the statement  "                            var parameters = DbDataParameters(dbName' command' fullProcedureName' out List<IDbDataParameter> isOut' out string helpText); " is 125.
Long Statement,Dev2.Services.Sql,OracleServer,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Services.Sql\OracleServer.cs,Connect,The length of the statement  "                connectionString = connectionString.Replace(connectionString.Substring(connectionString.IndexOf("Database"' StringComparison.Ordinal))' ""); " is 140.
Long Statement,Dev2.Services.Sql,OracleServer,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Services.Sql\OracleServer.cs,Connect,The length of the statement  "                    connectionString = connectionString.Replace(connectionString.Substring(connectionString.IndexOf("Database"' StringComparison.Ordinal))' ""); " is 140.
Long Statement,Dev2.Services.Sql,OracleServer,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Services.Sql\OracleServer.cs,GetProcedureInputParameters,The length of the statement  "            command.CommandText = $"SELECT * from all_arguments where owner = '{dbName}' and object_name = '{procedureName.Substring(procedureName.IndexOf("."' StringComparison.Ordinal) + 1)}'"; " is 182.
Long Statement,Dev2.Services.Sql,OracleServer,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Services.Sql\OracleServer.cs,GetProcedureParameters,The length of the statement  "            command.CommandText = $"SELECT * from all_arguments where owner = '{dbName}' and object_name = '{procedureName.Substring(procedureName.IndexOf("."' StringComparison.Ordinal) + 1)}'"; " is 182.
Long Statement,Dev2.Services.Sql,PostgreServer,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Services.Sql\PostgreServer.cs,GetProcedureParameters,The length of the statement  "            var proc = string.Format(@"select parameter_name as paramname' parameters.udt_name as datatype' parameters.parameter_mode as direction FROM information_schema.routines " is 167.
Magic Number,Dev2.Services.Sql,MySqlServer,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Services.Sql\MySqlServer.cs,GetHelpText,The following statement contains a magic number: using (                  IDbCommand command = _factory.CreateCommand(connection' CommandType.Text'                      string.Format("SHOW CREATE PROCEDURE {0} "' objectName)))              {                  return ExecuteReader(command' delegate (IDataAdapter reader)                      {                          var sb = new StringBuilder();                          var ds = new DataSet(); //conn is opened by dataadapter                          reader.Fill(ds);                          var t = ds.Tables[0];                          var dataTableReader = t.CreateDataReader();                          while (dataTableReader.Read())                          {                              var value = dataTableReader.GetValue(2);                              if (value != null)                              {                                  sb.Append(value);                              }                          }                          return sb.ToString();                      });              }
Magic Number,Dev2.Services.Sql,OracleServer,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Services.Sql\OracleServer.cs,GetSizeForType,The following statement contains a magic number: switch (dbType)              {                  case OracleDbType.BFile:                  case OracleDbType.Blob:                  case OracleDbType.Clob:                      return int.MaxValue;                  case OracleDbType.Byte:                      return 8;                  case OracleDbType.Char:                      return 1;                  case OracleDbType.Date:                      return 100;                  case OracleDbType.Decimal:                  case OracleDbType.Double:                      return int.MaxValue;                  case OracleDbType.Long:                  case OracleDbType.LongRaw:                      return int.MaxValue;                  case OracleDbType.Int16:                      return Int16.MaxValue;                  case OracleDbType.Int32:                      return int.MaxValue;                  case OracleDbType.Int64:                      return int.MaxValue;                  case OracleDbType.IntervalDS:                      break;                  case OracleDbType.IntervalYM:                      break;                  case OracleDbType.NClob:                  case OracleDbType.NChar:                      return 3000;                  case OracleDbType.NVarchar2:                      return 3000;                  case OracleDbType.Raw:                      break;                  case OracleDbType.Single:                      break;                  case OracleDbType.TimeStamp:                  case OracleDbType.TimeStampLTZ:                  case OracleDbType.TimeStampTZ:                      return 100;                  case OracleDbType.XmlType:                  case OracleDbType.Varchar2:                      return 4000;                  case OracleDbType.BinaryDouble:                      break;                  case OracleDbType.BinaryFloat:                      break;                  case OracleDbType.RefCursor:                      break;                  default:                      return 4000;              }
Magic Number,Dev2.Services.Sql,OracleServer,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Services.Sql\OracleServer.cs,GetSizeForType,The following statement contains a magic number: switch (dbType)              {                  case OracleDbType.BFile:                  case OracleDbType.Blob:                  case OracleDbType.Clob:                      return int.MaxValue;                  case OracleDbType.Byte:                      return 8;                  case OracleDbType.Char:                      return 1;                  case OracleDbType.Date:                      return 100;                  case OracleDbType.Decimal:                  case OracleDbType.Double:                      return int.MaxValue;                  case OracleDbType.Long:                  case OracleDbType.LongRaw:                      return int.MaxValue;                  case OracleDbType.Int16:                      return Int16.MaxValue;                  case OracleDbType.Int32:                      return int.MaxValue;                  case OracleDbType.Int64:                      return int.MaxValue;                  case OracleDbType.IntervalDS:                      break;                  case OracleDbType.IntervalYM:                      break;                  case OracleDbType.NClob:                  case OracleDbType.NChar:                      return 3000;                  case OracleDbType.NVarchar2:                      return 3000;                  case OracleDbType.Raw:                      break;                  case OracleDbType.Single:                      break;                  case OracleDbType.TimeStamp:                  case OracleDbType.TimeStampLTZ:                  case OracleDbType.TimeStampTZ:                      return 100;                  case OracleDbType.XmlType:                  case OracleDbType.Varchar2:                      return 4000;                  case OracleDbType.BinaryDouble:                      break;                  case OracleDbType.BinaryFloat:                      break;                  case OracleDbType.RefCursor:                      break;                  default:                      return 4000;              }
Magic Number,Dev2.Services.Sql,OracleServer,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Services.Sql\OracleServer.cs,GetSizeForType,The following statement contains a magic number: switch (dbType)              {                  case OracleDbType.BFile:                  case OracleDbType.Blob:                  case OracleDbType.Clob:                      return int.MaxValue;                  case OracleDbType.Byte:                      return 8;                  case OracleDbType.Char:                      return 1;                  case OracleDbType.Date:                      return 100;                  case OracleDbType.Decimal:                  case OracleDbType.Double:                      return int.MaxValue;                  case OracleDbType.Long:                  case OracleDbType.LongRaw:                      return int.MaxValue;                  case OracleDbType.Int16:                      return Int16.MaxValue;                  case OracleDbType.Int32:                      return int.MaxValue;                  case OracleDbType.Int64:                      return int.MaxValue;                  case OracleDbType.IntervalDS:                      break;                  case OracleDbType.IntervalYM:                      break;                  case OracleDbType.NClob:                  case OracleDbType.NChar:                      return 3000;                  case OracleDbType.NVarchar2:                      return 3000;                  case OracleDbType.Raw:                      break;                  case OracleDbType.Single:                      break;                  case OracleDbType.TimeStamp:                  case OracleDbType.TimeStampLTZ:                  case OracleDbType.TimeStampTZ:                      return 100;                  case OracleDbType.XmlType:                  case OracleDbType.Varchar2:                      return 4000;                  case OracleDbType.BinaryDouble:                      break;                  case OracleDbType.BinaryFloat:                      break;                  case OracleDbType.RefCursor:                      break;                  default:                      return 4000;              }
Magic Number,Dev2.Services.Sql,OracleServer,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Services.Sql\OracleServer.cs,GetSizeForType,The following statement contains a magic number: switch (dbType)              {                  case OracleDbType.BFile:                  case OracleDbType.Blob:                  case OracleDbType.Clob:                      return int.MaxValue;                  case OracleDbType.Byte:                      return 8;                  case OracleDbType.Char:                      return 1;                  case OracleDbType.Date:                      return 100;                  case OracleDbType.Decimal:                  case OracleDbType.Double:                      return int.MaxValue;                  case OracleDbType.Long:                  case OracleDbType.LongRaw:                      return int.MaxValue;                  case OracleDbType.Int16:                      return Int16.MaxValue;                  case OracleDbType.Int32:                      return int.MaxValue;                  case OracleDbType.Int64:                      return int.MaxValue;                  case OracleDbType.IntervalDS:                      break;                  case OracleDbType.IntervalYM:                      break;                  case OracleDbType.NClob:                  case OracleDbType.NChar:                      return 3000;                  case OracleDbType.NVarchar2:                      return 3000;                  case OracleDbType.Raw:                      break;                  case OracleDbType.Single:                      break;                  case OracleDbType.TimeStamp:                  case OracleDbType.TimeStampLTZ:                  case OracleDbType.TimeStampTZ:                      return 100;                  case OracleDbType.XmlType:                  case OracleDbType.Varchar2:                      return 4000;                  case OracleDbType.BinaryDouble:                      break;                  case OracleDbType.BinaryFloat:                      break;                  case OracleDbType.RefCursor:                      break;                  default:                      return 4000;              }
Magic Number,Dev2.Services.Sql,OracleServer,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Services.Sql\OracleServer.cs,GetSizeForType,The following statement contains a magic number: switch (dbType)              {                  case OracleDbType.BFile:                  case OracleDbType.Blob:                  case OracleDbType.Clob:                      return int.MaxValue;                  case OracleDbType.Byte:                      return 8;                  case OracleDbType.Char:                      return 1;                  case OracleDbType.Date:                      return 100;                  case OracleDbType.Decimal:                  case OracleDbType.Double:                      return int.MaxValue;                  case OracleDbType.Long:                  case OracleDbType.LongRaw:                      return int.MaxValue;                  case OracleDbType.Int16:                      return Int16.MaxValue;                  case OracleDbType.Int32:                      return int.MaxValue;                  case OracleDbType.Int64:                      return int.MaxValue;                  case OracleDbType.IntervalDS:                      break;                  case OracleDbType.IntervalYM:                      break;                  case OracleDbType.NClob:                  case OracleDbType.NChar:                      return 3000;                  case OracleDbType.NVarchar2:                      return 3000;                  case OracleDbType.Raw:                      break;                  case OracleDbType.Single:                      break;                  case OracleDbType.TimeStamp:                  case OracleDbType.TimeStampLTZ:                  case OracleDbType.TimeStampTZ:                      return 100;                  case OracleDbType.XmlType:                  case OracleDbType.Varchar2:                      return 4000;                  case OracleDbType.BinaryDouble:                      break;                  case OracleDbType.BinaryFloat:                      break;                  case OracleDbType.RefCursor:                      break;                  default:                      return 4000;              }
Magic Number,Dev2.Services.Sql,OracleServer,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Services.Sql\OracleServer.cs,GetSizeForType,The following statement contains a magic number: switch (dbType)              {                  case OracleDbType.BFile:                  case OracleDbType.Blob:                  case OracleDbType.Clob:                      return int.MaxValue;                  case OracleDbType.Byte:                      return 8;                  case OracleDbType.Char:                      return 1;                  case OracleDbType.Date:                      return 100;                  case OracleDbType.Decimal:                  case OracleDbType.Double:                      return int.MaxValue;                  case OracleDbType.Long:                  case OracleDbType.LongRaw:                      return int.MaxValue;                  case OracleDbType.Int16:                      return Int16.MaxValue;                  case OracleDbType.Int32:                      return int.MaxValue;                  case OracleDbType.Int64:                      return int.MaxValue;                  case OracleDbType.IntervalDS:                      break;                  case OracleDbType.IntervalYM:                      break;                  case OracleDbType.NClob:                  case OracleDbType.NChar:                      return 3000;                  case OracleDbType.NVarchar2:                      return 3000;                  case OracleDbType.Raw:                      break;                  case OracleDbType.Single:                      break;                  case OracleDbType.TimeStamp:                  case OracleDbType.TimeStampLTZ:                  case OracleDbType.TimeStampTZ:                      return 100;                  case OracleDbType.XmlType:                  case OracleDbType.Varchar2:                      return 4000;                  case OracleDbType.BinaryDouble:                      break;                  case OracleDbType.BinaryFloat:                      break;                  case OracleDbType.RefCursor:                      break;                  default:                      return 4000;              }
Magic Number,Dev2.Services.Sql,OracleServer,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Services.Sql\OracleServer.cs,GetSizeForType,The following statement contains a magic number: switch (dbType)              {                  case OracleDbType.BFile:                  case OracleDbType.Blob:                  case OracleDbType.Clob:                      return int.MaxValue;                  case OracleDbType.Byte:                      return 8;                  case OracleDbType.Char:                      return 1;                  case OracleDbType.Date:                      return 100;                  case OracleDbType.Decimal:                  case OracleDbType.Double:                      return int.MaxValue;                  case OracleDbType.Long:                  case OracleDbType.LongRaw:                      return int.MaxValue;                  case OracleDbType.Int16:                      return Int16.MaxValue;                  case OracleDbType.Int32:                      return int.MaxValue;                  case OracleDbType.Int64:                      return int.MaxValue;                  case OracleDbType.IntervalDS:                      break;                  case OracleDbType.IntervalYM:                      break;                  case OracleDbType.NClob:                  case OracleDbType.NChar:                      return 3000;                  case OracleDbType.NVarchar2:                      return 3000;                  case OracleDbType.Raw:                      break;                  case OracleDbType.Single:                      break;                  case OracleDbType.TimeStamp:                  case OracleDbType.TimeStampLTZ:                  case OracleDbType.TimeStampTZ:                      return 100;                  case OracleDbType.XmlType:                  case OracleDbType.Varchar2:                      return 4000;                  case OracleDbType.BinaryDouble:                      break;                  case OracleDbType.BinaryFloat:                      break;                  case OracleDbType.RefCursor:                      break;                  default:                      return 4000;              }
Magic Number,Dev2.Services.Sql,OracleServer,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Services.Sql\OracleServer.cs,GetSizeForType,The following statement contains a magic number: return 4000;
Magic Number,Dev2.Services.Sql,PostgreServer,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Services.Sql\PostgreServer.cs,GetHelpText,The following statement contains a magic number: using (                  var command = _factory.CreateCommand(connection' CommandType.Text'                        string.Format("SHOW CREATE PROCEDURE {0} "' objectName)))              {                  return ExecuteReader(command' delegate (IDataAdapter reader)                      {                          var sb = new StringBuilder();                          var ds = new DataSet(); //conn is opened by dataadapter                          reader.Fill(ds);                          var t = ds.Tables[0];                          var dataTableReader = t.CreateDataReader();                          while (dataTableReader.Read())                          {                              var value = dataTableReader.GetValue(2);                              if (value != null)                              {                                  sb.Append(value);                              }                          }                          return sb.ToString();                      });              }
Magic Number,Dev2.Services.Sql,PostgreServer,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Services.Sql\PostgreServer.cs,GetProcedureParameters,The following statement contains a magic number: foreach (DataRow row in dataTable.Rows)              {                  if (row != null)                  {                      var value = row[0].ToString();                      var datatype = row[1].ToString();                      var direction = row[2].ToString();                          Enum.TryParse(datatype' true' out NpgsqlDbType sqlType);                        var sqlParameter = new NpgsqlParameter(value' sqlType);                        var isout = direction.ToUpper().Trim().Contains("OUT".Trim());                      if (direction.ToUpper().Trim().Contains("IN".Trim()))                      {                          isout = false;                      }                        if (!isout)                      {                          command.Parameters.Add(sqlParameter);                          parameters.Add(sqlParameter);                      }                      else                      {                          sqlParameter.Direction = ParameterDirection.Output;                          outParams.Add(sqlParameter);                          sqlParameter.Value = "@a";                      }                  }              }
Magic Number,Dev2.Services.Sql,SqlConnectionWrapper,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Services.Sql\SqlConnectionWrapper.cs,SqlConnectionWrapper,The following statement contains a magic number: var conStrBuilder = new SqlConnectionStringBuilder(connString)              {                  ConnectTimeout = 20'                  MaxPoolSize = 100'                  MultipleActiveResultSets = true'                  Pooling = true'                  ApplicationName = "Warewolf Service"              };
Magic Number,Dev2.Services.Sql,SqlConnectionWrapper,C:\repos\Warewolf-ESB_Warewolf-ESB\Dev\Dev2.Services.Sql\SqlConnectionWrapper.cs,SqlConnectionWrapper,The following statement contains a magic number: var conStrBuilder = new SqlConnectionStringBuilder(connString)              {                  ConnectTimeout = 20'                  MaxPoolSize = 100'                  MultipleActiveResultSets = true'                  Pooling = true'                  ApplicationName = "Warewolf Service"              };
