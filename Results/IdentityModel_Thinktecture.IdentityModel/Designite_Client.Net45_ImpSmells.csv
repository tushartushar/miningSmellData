Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Thinktecture.IdentityModel.Client,OAuth2Client,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Client.Shared\OAuth2Client.cs,CreateAuthorizeUrl,Cyclomatic complexity of the method is 8
Long Parameter List,Thinktecture.IdentityModel.Client,OAuth2Client,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Client.Shared\OAuth2Client.cs,OAuth2Client,The method has 5 parameters. Parameters: address' clientId' clientSecret' innerHttpClientHandler' style
Long Parameter List,Thinktecture.IdentityModel.Client,OAuth2Client,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Client.Shared\OAuth2Client.cs,CreateCodeFlowUrl,The method has 8 parameters. Parameters: clientId' scope' redirectUri' state' nonce' loginHint' acrValues' additionalValues
Long Parameter List,Thinktecture.IdentityModel.Client,OAuth2Client,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Client.Shared\OAuth2Client.cs,CreateImplicitFlowUrl,The method has 8 parameters. Parameters: clientId' scope' redirectUri' state' nonce' loginHint' acrValues' additionalValues
Long Parameter List,Thinktecture.IdentityModel.Client,OAuth2Client,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Client.Shared\OAuth2Client.cs,CreateAuthorizeUrl,The method has 10 parameters. Parameters: clientId' responseType' scope' redirectUri' state' nonce' loginHint' acrValues' responseMode' additionalValues
Long Parameter List,Thinktecture.IdentityModel.Client,OAuth2Client,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Client.Shared\OAuth2Client.cs,RequestResourceOwnerPasswordAsync,The method has 5 parameters. Parameters: userName' password' scope' additionalValues' cancellationToken
Long Parameter List,Thinktecture.IdentityModel.Client,OAuth2Client,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Client.Shared\OAuth2Client.cs,RequestAssertionAsync,The method has 5 parameters. Parameters: assertionType' assertion' scope' additionalValues' cancellationToken
Long Identifier,Thinktecture.IdentityModel.Client,JwtClaimTypes,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Client.Shared\JwtClaimTypes.cs,,The length of the parameter AuthenticationContextClassReference is 35.
Long Statement,Thinktecture.IdentityModel.Client,OAuth2Client,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Client.Shared\OAuth2Client.cs,CreateAuthorizeUrl,The length of the statement  "            var qs = string.Join("&"' values.Select(kvp => String.Format("{0}={1}"' WebUtility.UrlEncode(kvp.Key)' WebUtility.UrlEncode(kvp.Value))).ToArray()); " is 148.
Long Statement,Thinktecture.IdentityModel.Client,OAuth2Client,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Client.Shared\OAuth2Client.cs,RequestAsync,The length of the statement  "            var response = await _client.PostAsync(string.Empty' new FormUrlEncodedContent(form)' cancellationToken).ConfigureAwait(false); " is 127.
Magic Number,Thinktecture.IdentityModel.Client,AuthorizeResponse,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Client.Shared\AuthorizeResponse.cs,ParseRaw,The following statement contains a magic number: parts.Length == 2
Magic Number,Thinktecture.IdentityModel.Client,Base64Url,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Client.Shared\Base64Url.cs,Decode,The following statement contains a magic number: switch (s.Length % 4) // Pad with trailing '='s              {                  case 0: break; // No pad chars in this case                  case 2: s += "=="; break; // Two pad chars                  case 3: s += "="; break; // One pad char                  default: throw new Exception("Illegal base64url string!");              }
Magic Number,Thinktecture.IdentityModel.Client,Base64Url,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Client.Shared\Base64Url.cs,Decode,The following statement contains a magic number: switch (s.Length % 4) // Pad with trailing '='s              {                  case 0: break; // No pad chars in this case                  case 2: s += "=="; break; // Two pad chars                  case 3: s += "="; break; // One pad char                  default: throw new Exception("Illegal base64url string!");              }
Magic Number,Thinktecture.IdentityModel.Client,Base64Url,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Client.Shared\Base64Url.cs,Decode,The following statement contains a magic number: switch (s.Length % 4) // Pad with trailing '='s              {                  case 0: break; // No pad chars in this case                  case 2: s += "=="; break; // Two pad chars                  case 3: s += "="; break; // One pad char                  default: throw new Exception("Illegal base64url string!");              }
Magic Number,Thinktecture.IdentityModel.Client,EpochTimeExtensions,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Client.Shared\EpochTimeExtensions.cs,ToEpochTime,The following statement contains a magic number: var ticks = date.Ticks - new DateTime(1970' 1' 1' 0' 0' 0' 0' DateTimeKind.Utc).Ticks;
Magic Number,Thinktecture.IdentityModel.Client,EpochTimeExtensions,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Client.Shared\EpochTimeExtensions.cs,ToEpochTime,The following statement contains a magic number: var ticks = date.Ticks - new DateTimeOffset(1970' 1' 1' 0' 0' 0' TimeSpan.Zero).Ticks;
Magic Number,Thinktecture.IdentityModel.Client,EpochTimeExtensions,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Client.Shared\EpochTimeExtensions.cs,ToDateTimeFromEpoch,The following statement contains a magic number: return new DateTime(1970' 1' 1' 0' 0' 0' 0' DateTimeKind.Utc).AddTicks(timeInTicks);
Magic Number,Thinktecture.IdentityModel.Client,EpochTimeExtensions,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Client.Shared\EpochTimeExtensions.cs,ToDateTimeOffsetFromEpoch,The following statement contains a magic number: return new DateTimeOffset(1970' 1' 1' 0' 0' 0' TimeSpan.Zero).AddTicks(timeInTicks);
