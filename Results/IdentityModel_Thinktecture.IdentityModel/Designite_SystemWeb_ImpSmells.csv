Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Thinktecture.IdentityModel.SystemWeb,SessionConfiguration,F:\newReposMay17\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\SessionConfiguration.cs,Configure,Cyclomatic complexity of the method is 9
Complex Method,Thinktecture.IdentityModel.SystemWeb,CachingMetadataBasedIssuerNameRegistry,F:\newReposMay17\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\Metadata\CachingMetadataBasedIssuerNameRegistry.cs,LoadCustomConfiguration,Cyclomatic complexity of the method is 10
Complex Method,Thinktecture.IdentityModel.SystemWeb.Mvc,FrameOptionsAttribute,F:\newReposMay17\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\Mvc\FrameOptionsAttribute.cs,OnResultExecuting,Cyclomatic complexity of the method is 12
Long Parameter List,Thinktecture.IdentityModel.SystemWeb,CachingMetadataBasedIssuerNameRegistry,F:\newReposMay17\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\Metadata\CachingMetadataBasedIssuerNameRegistry.cs,CachingMetadataBasedIssuerNameRegistry,The method has 6 parameters.
Long Parameter List,Thinktecture.IdentityModel.SystemWeb,ProtectedCookie,F:\newReposMay17\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\ProtectedCookie.cs,Write,The method has 6 parameters.
Long Identifier,Thinktecture.IdentityModel.SystemWeb,PassiveModuleConfiguration,F:\newReposMay17\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\PassiveModuleConfiguration.cs,CacheSessionsOnServer,The length of the parameter checkForSessionSecurityTokenCache is 33.
Long Statement,Thinktecture.IdentityModel.SystemWeb,PassiveModuleConfiguration,F:\newReposMay17\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\PassiveModuleConfiguration.cs,CacheSessionsOnServer,The length of the statement  "	if (checkForSessionSecurityTokenCache && !(FederatedAuthentication.FederationConfiguration.IdentityConfiguration.Caches.SessionSecurityTokenCache is PassiveRepositorySessionSecurityTokenCache)) { " is 195.
Long Statement,Thinktecture.IdentityModel.SystemWeb,PassiveModuleConfiguration,F:\newReposMay17\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\PassiveModuleConfiguration.cs,EnableSlidingSessionExpirations,The length of the statement  "		var diff = token.ValidTo.Add (sam.FederationConfiguration.IdentityConfiguration.MaxClockSkew).Subtract (DateTime.UtcNow); " is 121.
Long Statement,Thinktecture.IdentityModel.SystemWeb,PassiveModuleConfiguration,F:\newReposMay17\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\PassiveModuleConfiguration.cs,EnableSlidingSessionExpirations,The length of the statement  "			var handler = sam.FederationConfiguration.IdentityConfiguration.SecurityTokenHandlers [typeof(SessionSecurityToken)] as SessionSecurityTokenHandler; " is 148.
Long Statement,Thinktecture.IdentityModel.SystemWeb,PassiveModuleConfiguration,F:\newReposMay17\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\PassiveModuleConfiguration.cs,EnableSlidingSessionExpirations,The length of the statement  "			e.SessionToken = new SessionSecurityToken (token.ClaimsPrincipal' token.Context' DateTime.UtcNow' DateTime.UtcNow.Add (duration)) { " is 131.
Long Statement,Thinktecture.IdentityModel.SystemWeb,PassiveModuleConfiguration,F:\newReposMay17\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\PassiveModuleConfiguration.cs,OverrideWSFedTokenLifetime,The length of the statement  "		var handler = (SessionSecurityTokenHandler)FederatedAuthentication.FederationConfiguration.IdentityConfiguration.SecurityTokenHandlers [typeof(SessionSecurityToken)]; " is 166.
Long Statement,Thinktecture.IdentityModel.SystemWeb,PassiveModuleConfiguration,F:\newReposMay17\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\PassiveModuleConfiguration.cs,OverrideWSFedTokenLifetime,The length of the statement  "		e.SessionToken = new SessionSecurityToken (token.ClaimsPrincipal' token.Context' token.ValidFrom' token.ValidFrom.Add (duration)) { " is 131.
Long Statement,Thinktecture.IdentityModel.SystemWeb,PassiveSessionConfiguration,F:\newReposMay17\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\PassiveSessionConfiguration.cs,ConfigureMackineKeyProtectionForSessionTokens,The length of the statement  "	var handler = (SessionSecurityTokenHandler)FederatedAuthentication.FederationConfiguration.IdentityConfiguration.SecurityTokenHandlers [typeof(SessionSecurityToken)]; " is 166.
Long Statement,Thinktecture.IdentityModel.SystemWeb,PassiveSessionConfiguration,F:\newReposMay17\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\PassiveSessionConfiguration.cs,ConfigureSessionCache,The length of the statement  "	if (!(FederatedAuthentication.FederationConfiguration.IdentityConfiguration.Caches.SessionSecurityTokenCache is PassiveRepositorySessionSecurityTokenCache)) { " is 158.
Long Statement,Thinktecture.IdentityModel.SystemWeb,PassiveSessionConfiguration,F:\newReposMay17\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\PassiveSessionConfiguration.cs,ConfigureSessionCache,The length of the statement  "		FederatedAuthentication.FederationConfiguration.IdentityConfiguration.Caches.SessionSecurityTokenCache = new PassiveRepositorySessionSecurityTokenCache (tokenCacheRepository); " is 175.
Long Statement,Thinktecture.IdentityModel.SystemWeb,PassiveSessionConfiguration,F:\newReposMay17\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\PassiveSessionConfiguration.cs,ConfigureDefaultSessionDuration,The length of the statement  "		throw new Exception ("Persistent session cookies are configured. Use ConfigurePersistentSessions instead to set the session cookie duration."); " is 143.
Long Statement,Thinktecture.IdentityModel.SystemWeb,PassiveSessionConfiguration,F:\newReposMay17\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\PassiveSessionConfiguration.cs,ConfigureDefaultSessionDuration,The length of the statement  "	var handler = (SessionSecurityTokenHandler)FederatedAuthentication.FederationConfiguration.IdentityConfiguration.SecurityTokenHandlers [typeof(SessionSecurityToken)]; " is 166.
Long Statement,Thinktecture.IdentityModel.SystemWeb,PassiveSessionConfiguration,F:\newReposMay17\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\PassiveSessionConfiguration.cs,ConfigurePersistentSessions,The length of the statement  "	var handler = (SessionSecurityTokenHandler)FederatedAuthentication.FederationConfiguration.IdentityConfiguration.SecurityTokenHandlers [typeof(SessionSecurityToken)]; " is 166.
Long Statement,Thinktecture.IdentityModel,Tracing,F:\newReposMay17\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\Tracing.cs,ErrorVerbose,The length of the statement  "	TraceEventFormat (TraceEventType.Error' "{0}\n\nMethod: {1}\nFilename: {2}\nLine number: {3}"' message' memberName' filePath' lineNumber); " is 138.
Magic Number,Thinktecture.IdentityModel.SystemWeb,PassiveModuleConfiguration,F:\newReposMay17\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\PassiveModuleConfiguration.cs,EnableSlidingSessionExpirations,The following statement contains a magic number: sam.SessionSecurityTokenReceived += delegate (object sender' SessionSecurityTokenReceivedEventArgs e) {  	var token = e.SessionToken;  	var duration = token.ValidTo.Subtract (token.ValidFrom);  	if (duration <= TimeSpan.Zero)  		return;  	var diff = token.ValidTo.Add (sam.FederationConfiguration.IdentityConfiguration.MaxClockSkew).Subtract (DateTime.UtcNow);  	if (diff <= TimeSpan.Zero)  		return;  	var halfWay = duration.Add (sam.FederationConfiguration.IdentityConfiguration.MaxClockSkew).TotalMinutes / 2;  	var timeLeft = diff.TotalMinutes;  	if (timeLeft <= halfWay) {  		// set duration not from original token' but from current app configuration  		var handler = sam.FederationConfiguration.IdentityConfiguration.SecurityTokenHandlers [typeof(SessionSecurityToken)] as SessionSecurityTokenHandler;  		duration = handler.TokenLifetime;  		e.ReissueCookie = true;  		e.SessionToken = new SessionSecurityToken (token.ClaimsPrincipal' token.Context' DateTime.UtcNow' DateTime.UtcNow.Add (duration)) {  			IsPersistent = token.IsPersistent'  			IsReferenceMode = token.IsReferenceMode  		};  	}  };  
