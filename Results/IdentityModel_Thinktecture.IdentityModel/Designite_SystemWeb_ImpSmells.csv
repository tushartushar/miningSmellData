Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Thinktecture.IdentityModel.SystemWeb,SessionConfiguration,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\SessionConfiguration.cs,Configure,Cyclomatic complexity of the method is 9
Complex Method,Thinktecture.IdentityModel.SystemWeb,CachingMetadataBasedIssuerNameRegistry,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\Metadata\CachingMetadataBasedIssuerNameRegistry.cs,LoadCustomConfiguration,Cyclomatic complexity of the method is 9
Long Parameter List,Thinktecture.IdentityModel.SystemWeb,CachingMetadataBasedIssuerNameRegistry,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\Metadata\CachingMetadataBasedIssuerNameRegistry.cs,CachingMetadataBasedIssuerNameRegistry,The method has 6 parameters. Parameters: metadataAddress' issuerName' cache' cacheDuration' protect' lazyLoad
Long Parameter List,Thinktecture.IdentityModel.SystemWeb,ProtectedCookie,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\ProtectedCookie.cs,Write,The method has 6 parameters. Parameters: name' value' expirationTime' domain' path' context
Long Identifier,Thinktecture.IdentityModel.SystemWeb,SecuritySessionSection,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\SecuritySessionSection.cs,,The length of the parameter _UseMackineKeyProtectionForSessionTokens is 40.
Long Identifier,Thinktecture.IdentityModel.SystemWeb,SecuritySessionSection,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\SecuritySessionSection.cs,,The length of the parameter _EnableSlidingSessionExpirations is 32.
Long Identifier,Thinktecture.IdentityModel.SystemWeb,SecuritySessionSection,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\SecuritySessionSection.cs,,The length of the parameter _SuppressLoginRedirectsForApiCalls is 34.
Long Identifier,Thinktecture.IdentityModel.SystemWeb,SecuritySessionSection,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\SecuritySessionSection.cs,,The length of the parameter _SuppressSecurityTokenExceptions is 32.
Long Identifier,Thinktecture.IdentityModel.SystemWeb,PassiveModuleConfiguration,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\PassiveModuleConfiguration.cs,CacheSessionsOnServer,The length of the parameter checkForSessionSecurityTokenCache is 33.
Long Statement,Thinktecture.IdentityModel.SystemWeb,SessionConfiguration,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\SessionConfiguration.cs,Configure,The length of the statement  "                if (type == null) throw new ConfigurationErrorsException("Invalid SessionTokenCacheType: " + config.SessionTokenCacheType); " is 123.
Long Statement,Thinktecture.IdentityModel.SystemWeb,SessionConfiguration,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\SessionConfiguration.cs,Configure,The length of the statement  "                if (cache == null) throw new Exception(config.SessionTokenCacheType + " does not implement ITokenCacheRepository interface"); " is 125.
Long Statement,Thinktecture.IdentityModel.SystemWeb,PassiveModuleConfiguration,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\PassiveModuleConfiguration.cs,CacheSessionsOnServer,The length of the statement  "                !(FederatedAuthentication.FederationConfiguration.IdentityConfiguration.Caches.SessionSecurityTokenCache is PassiveRepositorySessionSecurityTokenCache)) " is 152.
Long Statement,Thinktecture.IdentityModel.SystemWeb,PassiveModuleConfiguration,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\PassiveModuleConfiguration.cs,EnableSlidingSessionExpirations,The length of the statement  "                        var handler = sam.FederationConfiguration.IdentityConfiguration.SecurityTokenHandlers[typeof(SessionSecurityToken)] as SessionSecurityTokenHandler; " is 147.
Long Statement,Thinktecture.IdentityModel.SystemWeb,PassiveModuleConfiguration,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\PassiveModuleConfiguration.cs,OverrideWSFedTokenLifetime,The length of the statement  "                    var handler = (SessionSecurityTokenHandler)FederatedAuthentication.FederationConfiguration.IdentityConfiguration.SecurityTokenHandlers[typeof(SessionSecurityToken)]; " is 165.
Long Statement,Thinktecture.IdentityModel.SystemWeb,PassiveSessionConfiguration,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\PassiveSessionConfiguration.cs,ConfigureMackineKeyProtectionForSessionTokens,The length of the statement  "            var handler = (SessionSecurityTokenHandler)FederatedAuthentication.FederationConfiguration.IdentityConfiguration.SecurityTokenHandlers[typeof(SessionSecurityToken)]; " is 165.
Long Statement,Thinktecture.IdentityModel.SystemWeb,PassiveSessionConfiguration,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\PassiveSessionConfiguration.cs,ConfigureSessionCache,The length of the statement  "            if (!(FederatedAuthentication.FederationConfiguration.IdentityConfiguration.Caches.SessionSecurityTokenCache is PassiveRepositorySessionSecurityTokenCache)) " is 156.
Long Statement,Thinktecture.IdentityModel.SystemWeb,PassiveSessionConfiguration,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\PassiveSessionConfiguration.cs,ConfigureSessionCache,The length of the statement  "                FederatedAuthentication.FederationConfiguration.IdentityConfiguration.Caches.SessionSecurityTokenCache = new PassiveRepositorySessionSecurityTokenCache(tokenCacheRepository); " is 174.
Long Statement,Thinktecture.IdentityModel.SystemWeb,PassiveSessionConfiguration,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\PassiveSessionConfiguration.cs,ConfigureDefaultSessionDuration,The length of the statement  "                throw new Exception("Persistent session cookies are configured. Use ConfigurePersistentSessions instead to set the session cookie duration."); " is 142.
Long Statement,Thinktecture.IdentityModel.SystemWeb,PassiveSessionConfiguration,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\PassiveSessionConfiguration.cs,ConfigureDefaultSessionDuration,The length of the statement  "            var handler = (SessionSecurityTokenHandler)FederatedAuthentication.FederationConfiguration.IdentityConfiguration.SecurityTokenHandlers[typeof(SessionSecurityToken)]; " is 165.
Long Statement,Thinktecture.IdentityModel.SystemWeb,PassiveSessionConfiguration,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\PassiveSessionConfiguration.cs,ConfigurePersistentSessions,The length of the statement  "            var handler = (SessionSecurityTokenHandler)FederatedAuthentication.FederationConfiguration.IdentityConfiguration.SecurityTokenHandlers[typeof(SessionSecurityToken)]; " is 165.
Long Statement,Thinktecture.IdentityModel,Tracing,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\Tracing.cs,ErrorVerbose,The length of the statement  "            TraceEventFormat(TraceEventType.Error' "{0}\n\nMethod: {1}\nFilename: {2}\nLine number: {3}"' message' memberName' filePath' lineNumber); " is 137.
Virtual Method Call from Constructor,Thinktecture.IdentityModel.SystemWeb,CachingMetadataBasedIssuerNameRegistry,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\Metadata\CachingMetadataBasedIssuerNameRegistry.cs,CachingMetadataBasedIssuerNameRegistry,The constructor "CachingMetadataBasedIssuerNameRegistry" calls a virtual method "LoadMetadata".
Magic Number,Thinktecture.IdentityModel.SystemWeb,CachingMetadataBasedIssuerNameRegistry,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\Metadata\CachingMetadataBasedIssuerNameRegistry.cs,SetupCacheReloadTimer,The following statement contains a magic number: var halfTime = this.cacheDuration/2;
Magic Number,Thinktecture.IdentityModel.SystemWeb,PassiveModuleConfiguration,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\SystemWeb\WIF\PassiveModuleConfiguration.cs,EnableSlidingSessionExpirations,The following statement contains a magic number: sam.SessionSecurityTokenReceived +=                  delegate(object sender' SessionSecurityTokenReceivedEventArgs e)                  {                      var token = e.SessionToken;                                            var duration = token.ValidTo.Subtract(token.ValidFrom);                      if (duration <= TimeSpan.Zero) return;                        var diff = token.ValidTo.Add(sam.FederationConfiguration.IdentityConfiguration.MaxClockSkew).Subtract(DateTime.UtcNow);                      if (diff <= TimeSpan.Zero) return;                        var halfWay = duration.Add(sam.FederationConfiguration.IdentityConfiguration.MaxClockSkew).TotalMinutes / 2;                      var timeLeft = diff.TotalMinutes;                      if (timeLeft <= halfWay)                      {                          // set duration not from original token' but from current app configuration                          var handler = sam.FederationConfiguration.IdentityConfiguration.SecurityTokenHandlers[typeof(SessionSecurityToken)] as SessionSecurityTokenHandler;                          duration = handler.TokenLifetime;                            e.ReissueCookie = true;                          e.SessionToken =                              new SessionSecurityToken(                                  token.ClaimsPrincipal'                                   token.Context'                                   DateTime.UtcNow'                                   DateTime.UtcNow.Add(duration))                              {                                  IsPersistent = token.IsPersistent'                                  IsReferenceMode = token.IsReferenceMode                              };                      }                  };
