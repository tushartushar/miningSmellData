Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Thinktecture.IdentityModel.Hawk.Core,Bewit,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Core\Bewit.cs,Authenticate,Cyclomatic complexity of the method is 9
Complex Method,Thinktecture.IdentityModel.Hawk.Core,HawkSchemeHeader,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Core\HawkSchemeHeader.cs,AuthenticateAsync,Cyclomatic complexity of the method is 9
Complex Method,Thinktecture.IdentityModel.Hawk.Core,DefaultBehavior,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Core\Options.cs,DetermineHostDetails,Cyclomatic complexity of the method is 8
Long Parameter List,Thinktecture.IdentityModel.Hawk.Core,Bewit,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Core\Bewit.cs,Bewit,The method has 6 parameters. Parameters: request' credential' utcNow' lifeSeconds' applicationSpecificData' localOffset
Long Identifier,Thinktecture.IdentityModel.Hawk.Core,ArtifactsContainer,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Core\ArtifactsContainer.cs,,The length of the parameter SPECIFIC_PARAMETER_MATCH_PATTERN is 32.
Long Statement,Thinktecture.IdentityModel.Hawk.Client,HawkClient,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Client\HawkClient.cs,IsTimestampResponseTampered,The length of the statement  "                    var ts = new NormalizedTimestamp(timestampArtifacts.Timestamp' options.CredentialsCallback()' options.LocalTimeOffsetMillis); " is 125.
Long Statement,Thinktecture.IdentityModel.Hawk.Client,HawkValidationHandler,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Client\HawkValidatingHandler.cs,SendAsync,The length of the statement  "                HawkEventSource.Log.ServerResponse((int)responseMessage.StatusCode' await responseMessage.ReadBodyAsStringAsync()' header ?? String.Empty); " is 139.
Magic Number,Thinktecture.IdentityModel.Hawk.Core,ArtifactsContainer,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Core\ArtifactsContainer.cs,TryParse,The following statement contains a magic number: var replacedString = Regex.Replace(headerParameter' PARAMETER_MATCH_PATTERN' (Match match) =>              {                  string key = match.Groups[1].Value.Trim();                  string value = match.Groups[2].Value.Trim();                    bool isValidValue = Regex.Match(value' VALUE_MATCH_PATTERN).Success;                  bool isValidKey = keysToBeProcessed.Any(k => k == key); // Key is neither duplicate nor bad                    if (isValidValue && isValidKey)                  {                      switch (key)                      {                          case ID: result.Id = value; break;                            case TS:                              {                                  ulong timestamp;                                  if (UInt64.TryParse(value' out timestamp))                                  {                                      result.Timestamp = timestamp;                                      break;                                  }                                  else                                      return value;                              }                            case NONCE: result.Nonce = value; break;                          case EXT: result.ApplicationSpecificData = value; break;                          case MAC: result.Mac = value.ToBytesFromBase64(); break;                          case HASH: result.PayloadHash = value.ToBytesFromBase64(); break;                          case TSM: result.TimestampMac = value.ToBytesFromBase64(); break;                      }                        keysToBeProcessed.Remove(key); // Processed                        return String.Empty;                  }                  else                      return value;              });
Magic Number,Thinktecture.IdentityModel.Hawk.Core,Bewit,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Core\Bewit.cs,Authenticate,The following statement contains a magic number: string mac = parts[2];
Magic Number,Thinktecture.IdentityModel.Hawk.Core,Bewit,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Core\Bewit.cs,Authenticate,The following statement contains a magic number: string ext = parts[3];
Magic Number,Thinktecture.IdentityModel.Hawk.Core,Bewit,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Core\Bewit.cs,Authenticate,The following statement contains a magic number: UInt64.TryParse(parts[1]' out timestamp) && timestamp * 1000 > now
Magic Number,Thinktecture.IdentityModel.Hawk.Core,Bewit,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Core\Bewit.cs,Authenticate,The following statement contains a magic number: parts.Length == 4
Magic Number,Thinktecture.IdentityModel.Hawk.Core,HawkSchemeHeader,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Core\HawkSchemeHeader.cs,IsTimestampFresh,The following statement contains a magic number: ulong shelfLife = (Convert.ToUInt64(options.ClockSkewSeconds) * 1000);
Magic Number,Thinktecture.IdentityModel.Hawk.Core,HawkSchemeHeader,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Core\HawkSchemeHeader.cs,IsTimestampFresh,The following statement contains a magic number: var age = Math.Abs((artifacts.Timestamp * 1000.0) - now);
Magic Number,Thinktecture.IdentityModel.Hawk.Core,NormalizedTimestamp,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Core\NormalizedTimestamp.cs,NormalizedTimestamp,The following statement contains a magic number: this.unixTimeMillis = unixTime * 1000;
Magic Number,Thinktecture.IdentityModel.Hawk.Core,NormalizedTimestamp,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Core\NormalizedTimestamp.cs,NormalizedTimestamp,The following statement contains a magic number: fresh = Math.Floor((this.unixTimeMillis + Convert.ToUInt64(localOffset)) / 1000.0);
Magic Number,Thinktecture.IdentityModel.Hawk.Core,Options,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Core\Options.cs,Options,The following statement contains a magic number: this.ClockSkewSeconds = 60;
Magic Number,Thinktecture.IdentityModel.Hawk.Core,DefaultBehavior,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Core\Options.cs,DetermineHostDetails,The following statement contains a magic number: port = match.Groups[2].Value;
Magic Number,Thinktecture.IdentityModel.Hawk.Core,DefaultBehavior,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Core\Options.cs,DetermineHostDetails,The following statement contains a magic number: match.Success && match.Groups.Count == 3
Magic Number,Thinktecture.IdentityModel.Hawk.Core.Extensions,DateTimeExtension,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Core\Extensions\DateTimeExtension.cs,ToUnixTimeMillis,The following statement contains a magic number: DateTime epochStart = new DateTime(1970' 01' 01' 0' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Thinktecture.IdentityModel.Hawk.Core.Extensions,DateTimeExtension,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Core\Extensions\DateTimeExtension.cs,ToUnixTimeMillis,The following statement contains a magic number: return Convert.ToUInt64(ts.TotalSeconds * 1000);
Magic Number,Thinktecture.IdentityModel.Hawk.Core.Extensions,DateTimeExtension,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Core\Extensions\DateTimeExtension.cs,ToUnixTime,The following statement contains a magic number: return dateTime.ToUnixTimeMillis() / 1000;
Magic Number,Thinktecture.IdentityModel.Hawk.Core.Extensions,StringExtension,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Core\Extensions\StringExtension.cs,ToUtf8StringFromBase64Url,The following statement contains a magic number: int pad = 4 - (input.Length % 4);
Magic Number,Thinktecture.IdentityModel.Hawk.Core.Extensions,StringExtension,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Core\Extensions\StringExtension.cs,ToUtf8StringFromBase64Url,The following statement contains a magic number: int pad = 4 - (input.Length % 4);
Magic Number,Thinktecture.IdentityModel.Hawk.Core.Extensions,StringExtension,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Core\Extensions\StringExtension.cs,ToUtf8StringFromBase64Url,The following statement contains a magic number: pad = pad > 2 ? 0 : pad;
Magic Number,Thinktecture.IdentityModel.Hawk.Core.Helpers,NonceGenerator,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Core\Helpers\NonceGenerator.cs,Generate,The following statement contains a magic number: byte[] bytes = new byte[length * 8];
Magic Number,Thinktecture.IdentityModel.Hawk.Core.Helpers,NonceGenerator,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Core\Helpers\NonceGenerator.cs,Generate,The following statement contains a magic number: var characters = bytes.Where(b => (b >= 48 && b <= 57) ||       // 0 - 9                                                      (b >= 97 && b <= 122) ||    // a - z                                                      (b >= 65 && b <= 90))       // A - Z                      .Take(length - random.Count)                      .Select(b => Convert.ToChar(b));
Magic Number,Thinktecture.IdentityModel.Hawk.Core.Helpers,NonceGenerator,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Core\Helpers\NonceGenerator.cs,Generate,The following statement contains a magic number: var characters = bytes.Where(b => (b >= 48 && b <= 57) ||       // 0 - 9                                                      (b >= 97 && b <= 122) ||    // a - z                                                      (b >= 65 && b <= 90))       // A - Z                      .Take(length - random.Count)                      .Select(b => Convert.ToChar(b));
Magic Number,Thinktecture.IdentityModel.Hawk.Core.Helpers,NonceGenerator,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Core\Helpers\NonceGenerator.cs,Generate,The following statement contains a magic number: var characters = bytes.Where(b => (b >= 48 && b <= 57) ||       // 0 - 9                                                      (b >= 97 && b <= 122) ||    // a - z                                                      (b >= 65 && b <= 90))       // A - Z                      .Take(length - random.Count)                      .Select(b => Convert.ToChar(b));
Magic Number,Thinktecture.IdentityModel.Hawk.Core.Helpers,NonceGenerator,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Core\Helpers\NonceGenerator.cs,Generate,The following statement contains a magic number: var characters = bytes.Where(b => (b >= 48 && b <= 57) ||       // 0 - 9                                                      (b >= 97 && b <= 122) ||    // a - z                                                      (b >= 65 && b <= 90))       // A - Z                      .Take(length - random.Count)                      .Select(b => Convert.ToChar(b));
Magic Number,Thinktecture.IdentityModel.Hawk.Core.Helpers,NonceGenerator,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Core\Helpers\NonceGenerator.cs,Generate,The following statement contains a magic number: var characters = bytes.Where(b => (b >= 48 && b <= 57) ||       // 0 - 9                                                      (b >= 97 && b <= 122) ||    // a - z                                                      (b >= 65 && b <= 90))       // A - Z                      .Take(length - random.Count)                      .Select(b => Convert.ToChar(b));
Magic Number,Thinktecture.IdentityModel.Hawk.Core.Helpers,NonceGenerator,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Core\Helpers\NonceGenerator.cs,Generate,The following statement contains a magic number: var characters = bytes.Where(b => (b >= 48 && b <= 57) ||       // 0 - 9                                                      (b >= 97 && b <= 122) ||    // a - z                                                      (b >= 65 && b <= 90))       // A - Z                      .Take(length - random.Count)                      .Select(b => Convert.ToChar(b));
Magic Number,Thinktecture.IdentityModel.Hawk.Etw,HawkEventSource,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Etw\HawkEventSource.cs,NormalizedTimestamp,The following statement contains a magic number: this.WriteEvent(2' NormalizedFormat);
Magic Number,Thinktecture.IdentityModel.Hawk.Etw,HawkEventSource,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Etw\HawkEventSource.cs,UnparsedArtifact,The following statement contains a magic number: this.WriteEvent(3' Unparsed);
Magic Number,Thinktecture.IdentityModel.Hawk.Etw,HawkEventSource,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Etw\HawkEventSource.cs,NormalizedBody,The following statement contains a magic number: this.WriteEvent(4' NormalizedFormat);
Magic Number,Thinktecture.IdentityModel.Hawk.Etw,HawkEventSource,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Etw\HawkEventSource.cs,StaleTimestamp,The following statement contains a magic number: this.WriteEvent(5' Age' ShelfLife);
Magic Number,Thinktecture.IdentityModel.Hawk.Etw,HawkEventSource,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Etw\HawkEventSource.cs,NormalizedRequest,The following statement contains a magic number: this.WriteEvent(6' NormalizedFormat);
Magic Number,Thinktecture.IdentityModel.Hawk.Etw,HawkEventSource,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Etw\HawkEventSource.cs,Exception,The following statement contains a magic number: this.WriteEvent(7' Message);
Magic Number,Thinktecture.IdentityModel.Hawk.Etw,HawkEventSource,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Etw\HawkEventSource.cs,TimestampMismatch,The following statement contains a magic number: this.WriteEvent(8' CompensatorySeconds);
Magic Number,Thinktecture.IdentityModel.Hawk.Etw,HawkEventSource,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Etw\HawkEventSource.cs,ServerResponse,The following statement contains a magic number: this.WriteEvent(9' StatusCode' Body' AuthorizationHeader);
Magic Number,Thinktecture.IdentityModel.Hawk.Etw,HawkEventSource,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Etw\HawkEventSource.cs,NonceReplay,The following statement contains a magic number: this.WriteEvent(10' Nonce' LastUsedBy);
Magic Number,Thinktecture.IdentityModel.Hawk.Owin,HawkAuthenticationHandler,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Owin\HawkAuthenticationHandler.cs,ApplyResponseChallengeAsync,The following statement contains a magic number: Response.StatusCode == 401
Missing Default,Thinktecture.IdentityModel.Hawk.Core,ArtifactsContainer,D:\research\architectureSmells\repos\IdentityModel_Thinktecture.IdentityModel\source\Hawk\Core\ArtifactsContainer.cs,TryParse,The following switch statement is missing a default case: switch (key)                      {                          case ID: result.Id = value; break;                            case TS:                              {                                  ulong timestamp;                                  if (UInt64.TryParse(value' out timestamp))                                  {                                      result.Timestamp = timestamp;                                      break;                                  }                                  else                                      return value;                              }                            case NONCE: result.Nonce = value; break;                          case EXT: result.ApplicationSpecificData = value; break;                          case MAC: result.Mac = value.ToBytesFromBase64(); break;                          case HASH: result.PayloadHash = value.ToBytesFromBase64(); break;                          case TSM: result.TimestampMac = value.ToBytesFromBase64(); break;                      }
