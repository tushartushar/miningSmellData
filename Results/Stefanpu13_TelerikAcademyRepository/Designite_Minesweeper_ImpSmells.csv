Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MinesSweeper,GamePlay,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C# Part 4 - high quality code\High quality code - Homeworks\2. ProperNaming\4. Minesweeper\GamePlay.cs,CountAdjacentMines,Cyclomatic complexity of the method is 17
Complex Method,MinesSweeper,GamePlay,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C# Part 4 - high quality code\High quality code - Homeworks\2. ProperNaming\4. Minesweeper\GamePlay.cs,ExecuteCommand,Cyclomatic complexity of the method is 16
Long Parameter List,MinesSweeper,GamePlay,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C# Part 4 - high quality code\High quality code - Homeworks\2. ProperNaming\4. Minesweeper\GamePlay.cs,ExecuteCommand,The method has 5 parameters.
Long Statement,MinesSweeper,GameMetrics,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C# Part 4 - high quality code\High quality code - Homeworks\2. ProperNaming\4. Minesweeper\GameMetrics.cs,ToString,The length of the statement  "	FieldInfo[] gameMetrixFields = this.GetType ().GetFields (BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static); " is 128.
Complex Conditional,MinesSweeper,CommandHelper,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C# Part 4 - high quality code\High quality code - Homeworks\2. ProperNaming\4. Minesweeper\CommandHelper.cs,FieldCoordinatesAreInBoard,The conditional expression  "(row < boardRows && column < boardColumns) && (row >= 0 && column >= 0)"  is complex.
Magic Number,MinesSweeper,CommandHelper,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C# Part 4 - high quality code\High quality code - Homeworks\2. ProperNaming\4. Minesweeper\CommandHelper.cs,CommandIsValid,The following statement contains a magic number: return command.Length >= 3;  
Magic Number,MinesSweeper,CommandHelper,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C# Part 4 - high quality code\High quality code - Homeworks\2. ProperNaming\4. Minesweeper\CommandHelper.cs,FieldCoordinatesAreValidIntegers,The following statement contains a magic number: if (fieldCoordinates.Length != 2) {  	return false;  }  else {  	if (int.TryParse (fieldCoordinates [0]' out row) & int.TryParse (fieldCoordinates [1]' out column)) {  		return true;  	}  	else {  		return false;  	}  }  
Magic Number,MinesSweeper,GameInitializer,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C# Part 4 - high quality code\High quality code - Homeworks\2. ProperNaming\4. Minesweeper\GameInitializer.cs,GenerateMinesPositions,The following statement contains a magic number: while (mines.Count < metrics.TotalMines) {  	Random minePositionGenerator = new Random ();  	int minePosition = minePositionGenerator.Next (50);  	if (!mines.Contains (minePosition)) {  		mines.Add (minePosition);  	}  }  
Magic Number,MinesSweeper,TopScores,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C# Part 4 - high quality code\High quality code - Homeworks\2. ProperNaming\4. Minesweeper\TopScores.cs,SortedAdd,The following statement contains a magic number: if (this.Scores.Count == 0) {  	this.Scores.Add (score);  }  else {  	while (position < this.Scores.Count) {  		if (score.CompareTo (this.Scores [position]) < 0) {  			position++;  		}  		else {  			break;  		}  	}  	this.Scores.Insert (position' score);  	if (this.Scores.Count > 5) {  		this.Scores.RemoveAt (this.Scores.Count - 1);  	}  }  
Magic Number,MinesSweeper,TopScores,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C# Part 4 - high quality code\High quality code - Homeworks\2. ProperNaming\4. Minesweeper\TopScores.cs,SortedAdd,The following statement contains a magic number: if (this.Scores.Count > 5) {  	this.Scores.RemoveAt (this.Scores.Count - 1);  }  
