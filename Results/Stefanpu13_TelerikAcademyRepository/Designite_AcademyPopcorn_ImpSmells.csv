Implementation smell,Namespace,Class,File,Method,Description
Complex Method,AcademyPopcorn,CollisionDispatcher,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C#Part3-OOP\7. Workshop - Popcorn\AcademyPopcorn\AcademyPopcorn\CollisionDispatcher.cs,HandleMovingWithStaticCollisions,Cyclomatic complexity of the method is 10
Complex Method,AcademyPopcorn,KeyboardInterface,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C#Part3-OOP\7. Workshop - Popcorn\AcademyPopcorn\AcademyPopcorn\KeyboardInterface.cs,ProcessInput,Cyclomatic complexity of the method is 8
Long Parameter List,AcademyPopcorn,AcademyPopcornMain,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C#Part3-OOP\7. Workshop - Popcorn\AcademyPopcorn\AcademyPopcorn\AcademyPopcornMain.cs,Main,The method has 5 parameters.
Long Identifier,AcademyPopcorn,CollisionData,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C#Part3-OOP\7. Workshop - Popcorn\AcademyPopcorn\AcademyPopcorn\CollisionData.cs,CollisionData,The length of the parameter hitObjectsCollisionGroupStrings is 31.
Long Statement,AcademyPopcorn,CollisionDispatcher,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C#Part3-OOP\7. Workshop - Popcorn\AcademyPopcorn\AcademyPopcorn\CollisionDispatcher.cs,HandleMovingWithStaticCollisions,The length of the statement  "			staticObjects [verticalIndex].RespondToCollision (new CollisionData (new MatrixCoords (movingObject.Speed.Row' 0)' movingObject.GetCollisionGroupString ())); " is 157.
Long Statement,AcademyPopcorn,CollisionDispatcher,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C#Part3-OOP\7. Workshop - Popcorn\AcademyPopcorn\AcademyPopcorn\CollisionDispatcher.cs,HandleMovingWithStaticCollisions,The length of the statement  "			staticObjects [horizontalIndex].RespondToCollision (new CollisionData (new MatrixCoords (0' movingObject.Speed.Col)' movingObject.GetCollisionGroupString ())); " is 159.
Long Statement,AcademyPopcorn,CollisionDispatcher,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C#Part3-OOP\7. Workshop - Popcorn\AcademyPopcorn\AcademyPopcorn\CollisionDispatcher.cs,HandleMovingWithStaticCollisions,The length of the statement  "				staticObjects [diagonalIndex].RespondToCollision (new CollisionData (new MatrixCoords (movingObject.Speed.Row' 0)' movingObject.GetCollisionGroupString ())); " is 157.
Long Statement,AcademyPopcorn,Racket,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C#Part3-OOP\7. Workshop - Popcorn\AcademyPopcorn\AcademyPopcorn\Racket.cs,CanCollideWith,The length of the statement  "	return otherCollisionGroupString == "block" || otherCollisionGroupString == Racket.CollisionGroupString || otherCollisionGroupString == "ball"; " is 143.
Complex Conditional,AcademyPopcorn,ConsoleRenderer,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C#Part3-OOP\7. Workshop - Popcorn\AcademyPopcorn\AcademyPopcorn\ConsoleRenderer.cs,EnqueueForRendering,The conditional expression  "row >= 0 && row < renderContextMatrixRows && col >= 0 && col < renderContextMatrixCols"  is complex.
Magic Number,AcademyPopcorn,Engine,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C#Part3-OOP\7. Workshop - Popcorn\AcademyPopcorn\AcademyPopcorn\Engine.cs,Run,The following statement contains a magic number: while (true) {  	this.renderer.RenderAll ();  	System.Threading.Thread.Sleep (500);  	this.userInterface.ProcessInput ();  	this.renderer.ClearQueue ();  	foreach (var obj in this.allObjects) {  		obj.Update ();  		this.renderer.EnqueueForRendering (obj);  	}  	CollisionDispatcher.HandleCollisions (this.movingObjects' this.staticObjects);  	List<GameObject> producedObjects = new List<GameObject> ();  	foreach (var obj in this.allObjects) {  		producedObjects.AddRange (obj.ProduceObjects ());  	}  	this.allObjects.RemoveAll (obj => obj.IsDestroyed);  	this.movingObjects.RemoveAll (obj => obj.IsDestroyed);  	this.staticObjects.RemoveAll (obj => obj.IsDestroyed);  	foreach (var obj in producedObjects) {  		this.AddObject (obj);  	}  }  
Magic Number,AcademyPopcorn,Engine,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C#Part3-OOP\7. Workshop - Popcorn\AcademyPopcorn\AcademyPopcorn\Engine.cs,Run,The following statement contains a magic number: System.Threading.Thread.Sleep (500);  
Magic Number,AcademyPopcorn,ExplodingBlock,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C#Part3-OOP\7. Workshop - Popcorn\AcademyPopcorn\AcademyPopcorn\ExplodingBlock.cs,ProduceObjects,The following statement contains a magic number: if (this.IsDestroyed) {  	for (int row = this.TopLeft.Row - 1; row < this.TopLeft.Row + 1; row++) {  		for (int col = this.TopLeft.Col - 1; col < this.TopLeft.Col - 1; col++) {  			TrailObject blockChunk = new TrailObject (new MatrixCoords (row - 2' col - 2)' new char['] {  				{  					'A'  				}  			}' 7);  			explosionChunks.Add (blockChunk);  		}  	}  }  
Magic Number,AcademyPopcorn,ExplodingBlock,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C#Part3-OOP\7. Workshop - Popcorn\AcademyPopcorn\AcademyPopcorn\ExplodingBlock.cs,ProduceObjects,The following statement contains a magic number: if (this.IsDestroyed) {  	for (int row = this.TopLeft.Row - 1; row < this.TopLeft.Row + 1; row++) {  		for (int col = this.TopLeft.Col - 1; col < this.TopLeft.Col - 1; col++) {  			TrailObject blockChunk = new TrailObject (new MatrixCoords (row - 2' col - 2)' new char['] {  				{  					'A'  				}  			}' 7);  			explosionChunks.Add (blockChunk);  		}  	}  }  
Magic Number,AcademyPopcorn,ExplodingBlock,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C#Part3-OOP\7. Workshop - Popcorn\AcademyPopcorn\AcademyPopcorn\ExplodingBlock.cs,ProduceObjects,The following statement contains a magic number: if (this.IsDestroyed) {  	for (int row = this.TopLeft.Row - 1; row < this.TopLeft.Row + 1; row++) {  		for (int col = this.TopLeft.Col - 1; col < this.TopLeft.Col - 1; col++) {  			TrailObject blockChunk = new TrailObject (new MatrixCoords (row - 2' col - 2)' new char['] {  				{  					'A'  				}  			}' 7);  			explosionChunks.Add (blockChunk);  		}  	}  }  
Magic Number,AcademyPopcorn,ExplodingBlock,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C#Part3-OOP\7. Workshop - Popcorn\AcademyPopcorn\AcademyPopcorn\ExplodingBlock.cs,ProduceObjects,The following statement contains a magic number: for (int row = this.TopLeft.Row - 1; row < this.TopLeft.Row + 1; row++) {  	for (int col = this.TopLeft.Col - 1; col < this.TopLeft.Col - 1; col++) {  		TrailObject blockChunk = new TrailObject (new MatrixCoords (row - 2' col - 2)' new char['] {  			{  				'A'  			}  		}' 7);  		explosionChunks.Add (blockChunk);  	}  }  
Magic Number,AcademyPopcorn,ExplodingBlock,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C#Part3-OOP\7. Workshop - Popcorn\AcademyPopcorn\AcademyPopcorn\ExplodingBlock.cs,ProduceObjects,The following statement contains a magic number: for (int row = this.TopLeft.Row - 1; row < this.TopLeft.Row + 1; row++) {  	for (int col = this.TopLeft.Col - 1; col < this.TopLeft.Col - 1; col++) {  		TrailObject blockChunk = new TrailObject (new MatrixCoords (row - 2' col - 2)' new char['] {  			{  				'A'  			}  		}' 7);  		explosionChunks.Add (blockChunk);  	}  }  
Magic Number,AcademyPopcorn,ExplodingBlock,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C#Part3-OOP\7. Workshop - Popcorn\AcademyPopcorn\AcademyPopcorn\ExplodingBlock.cs,ProduceObjects,The following statement contains a magic number: for (int row = this.TopLeft.Row - 1; row < this.TopLeft.Row + 1; row++) {  	for (int col = this.TopLeft.Col - 1; col < this.TopLeft.Col - 1; col++) {  		TrailObject blockChunk = new TrailObject (new MatrixCoords (row - 2' col - 2)' new char['] {  			{  				'A'  			}  		}' 7);  		explosionChunks.Add (blockChunk);  	}  }  
Magic Number,AcademyPopcorn,ExplodingBlock,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C#Part3-OOP\7. Workshop - Popcorn\AcademyPopcorn\AcademyPopcorn\ExplodingBlock.cs,ProduceObjects,The following statement contains a magic number: for (int col = this.TopLeft.Col - 1; col < this.TopLeft.Col - 1; col++) {  	TrailObject blockChunk = new TrailObject (new MatrixCoords (row - 2' col - 2)' new char['] {  		{  			'A'  		}  	}' 7);  	explosionChunks.Add (blockChunk);  }  
Magic Number,AcademyPopcorn,ExplodingBlock,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C#Part3-OOP\7. Workshop - Popcorn\AcademyPopcorn\AcademyPopcorn\ExplodingBlock.cs,ProduceObjects,The following statement contains a magic number: for (int col = this.TopLeft.Col - 1; col < this.TopLeft.Col - 1; col++) {  	TrailObject blockChunk = new TrailObject (new MatrixCoords (row - 2' col - 2)' new char['] {  		{  			'A'  		}  	}' 7);  	explosionChunks.Add (blockChunk);  }  
Magic Number,AcademyPopcorn,ExplodingBlock,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C#Part3-OOP\7. Workshop - Popcorn\AcademyPopcorn\AcademyPopcorn\ExplodingBlock.cs,ProduceObjects,The following statement contains a magic number: for (int col = this.TopLeft.Col - 1; col < this.TopLeft.Col - 1; col++) {  	TrailObject blockChunk = new TrailObject (new MatrixCoords (row - 2' col - 2)' new char['] {  		{  			'A'  		}  	}' 7);  	explosionChunks.Add (blockChunk);  }  
Magic Number,AcademyPopcorn,MatrixCoords,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C#Part3-OOP\7. Workshop - Popcorn\AcademyPopcorn\AcademyPopcorn\MatrixCoords.cs,GetHashCode,The following statement contains a magic number: return this.Row.GetHashCode () * 7 + this.Col;  
Magic Number,AcademyPopcorn,MeteoriteBall,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C#Part3-OOP\7. Workshop - Popcorn\AcademyPopcorn\AcademyPopcorn\MeteoriteBall.cs,ProduceObjects,The following statement contains a magic number: trail.Add (new TrailObject (base.topLeft' new char['] {  	{  		'*'  	}  }' 3));  
Magic Number,AcademyPopcorn,AcademyPopcornMain,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C#Part3-OOP\7. Workshop - Popcorn\AcademyPopcorn\AcademyPopcorn\AcademyPopcornMain.cs,AddCeiling,The following statement contains a magic number: for (int i = 0; i < WorldCols; i++) {  	IndestructibleBlock ceiling = new UnpassableBlock (new MatrixCoords (startRow - 2' i));  	engine.AddObject (ceiling);  }  
Magic Number,AcademyPopcorn,AcademyPopcornMain,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C#Part3-OOP\7. Workshop - Popcorn\AcademyPopcorn\AcademyPopcorn\AcademyPopcornMain.cs,AddSidewalls,The following statement contains a magic number: for (int i = startRow - 1; i < WorldRows; i++) {  	IndestructibleBlock leftSidewall = new UnpassableBlock (new MatrixCoords (i' startCol - 2));  	engine.AddObject (leftSidewall);  }  
