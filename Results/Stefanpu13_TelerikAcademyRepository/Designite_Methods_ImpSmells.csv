Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Methods,NumberUtilities,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C# Part 4 - high quality code\High quality code - Homeworks\6. High quality methods\Methods\NumberUtilities.cs,NumberToDigit,Cyclomatic complexity of the method is 12
Long Statement,Methods,NumberFormatValidator,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C# Part 4 - high quality code\High quality code - Homeworks\6. High quality methods\Methods\NumberFormatValidator.cs,IsNumber,The length of the statement  "	if (number is byte || number is sbyte || number is short || number is ushort || number is int || number is uint || number is long || number is ulong || number is float || number is double) { " is 190.
Long Statement,Methods,RoundTripFormatValidator,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C# Part 4 - high quality code\High quality code - Homeworks\6. High quality methods\Methods\RoundTripFormatValidator.cs,ThrowExceptionIfCanNotBeFormatted,The length of the statement  "		string message = "Number must be of type Single' Double or BigInteger " + "to successfully apply round-trip format specifier. "; " is 128.
Complex Conditional,Methods,NumberFormatValidator,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C# Part 4 - high quality code\High quality code - Homeworks\6. High quality methods\Methods\NumberFormatValidator.cs,IsNumber,The conditional expression  "number is byte || number is sbyte || number is short || number is ushort || number is int || number is uint || number is long || number is ulong || number is float || number is double"  is complex.
Magic Number,Methods,NumberUtilities,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C# Part 4 - high quality code\High quality code - Homeworks\6. High quality methods\Methods\NumberUtilities.cs,NumberToDigit,The following statement contains a magic number: switch (number) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  default:  	throw new ArgumentException (message);  }  
Magic Number,Methods,NumberUtilities,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C# Part 4 - high quality code\High quality code - Homeworks\6. High quality methods\Methods\NumberUtilities.cs,NumberToDigit,The following statement contains a magic number: switch (number) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  default:  	throw new ArgumentException (message);  }  
Magic Number,Methods,NumberUtilities,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C# Part 4 - high quality code\High quality code - Homeworks\6. High quality methods\Methods\NumberUtilities.cs,NumberToDigit,The following statement contains a magic number: switch (number) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  default:  	throw new ArgumentException (message);  }  
Magic Number,Methods,NumberUtilities,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C# Part 4 - high quality code\High quality code - Homeworks\6. High quality methods\Methods\NumberUtilities.cs,NumberToDigit,The following statement contains a magic number: switch (number) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  default:  	throw new ArgumentException (message);  }  
Magic Number,Methods,NumberUtilities,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C# Part 4 - high quality code\High quality code - Homeworks\6. High quality methods\Methods\NumberUtilities.cs,NumberToDigit,The following statement contains a magic number: switch (number) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  default:  	throw new ArgumentException (message);  }  
Magic Number,Methods,NumberUtilities,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C# Part 4 - high quality code\High quality code - Homeworks\6. High quality methods\Methods\NumberUtilities.cs,NumberToDigit,The following statement contains a magic number: switch (number) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  default:  	throw new ArgumentException (message);  }  
Magic Number,Methods,NumberUtilities,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C# Part 4 - high quality code\High quality code - Homeworks\6. High quality methods\Methods\NumberUtilities.cs,NumberToDigit,The following statement contains a magic number: switch (number) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  default:  	throw new ArgumentException (message);  }  
Magic Number,Methods,NumberUtilities,C:\repos\Stefanpu13_TelerikAcademyRepository\C# Programming\C# Part 4 - high quality code\High quality code - Homeworks\6. High quality methods\Methods\NumberUtilities.cs,NumberToDigit,The following statement contains a magic number: switch (number) {  case 0:  	return "zero";  case 1:  	return "one";  case 2:  	return "two";  case 3:  	return "three";  case 4:  	return "four";  case 5:  	return "five";  case 6:  	return "six";  case 7:  	return "seven";  case 8:  	return "eight";  case 9:  	return "nine";  default:  	throw new ArgumentException (message);  }  
