Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Inedo.BuildMasterExtensions.Plastic,PlasticProvider,C:\repos\Inedo_bmx-plastic\PlasticProvider.cs,GetCurrentRevision,Cyclomatic complexity of the method is 8
Complex Method,Inedo.BuildMasterExtensions.Plastic,PlasticProvider,C:\repos\Inedo_bmx-plastic\PlasticProvider.cs,CMPath,Cyclomatic complexity of the method is 10
Long Statement,Inedo.BuildMasterExtensions.Plastic,PlasticProvider,C:\repos\Inedo_bmx-plastic\PlasticProvider.cs,GetDirectoryEntryInfo,The length of the statement  "			dirList.Add (new DirectoryEntryInfo (components [1]' joinSrcPath + components [1]' new DirectoryEntryInfo[0]' new FileEntryInfo[0])); " is 133.
Long Statement,Inedo.BuildMasterExtensions.Plastic,PlasticProvider,C:\repos\Inedo_bmx-plastic\PlasticProvider.cs,GetDirectoryEntryInfo,The length of the statement  "	return new DirectoryEntryInfo (dirName ?? string.Empty' sourcePath ?? string.Empty' dirList.ToArray ()' fileList.ToArray ()); " is 125.
Long Statement,Inedo.BuildMasterExtensions.Plastic,PlasticProvider,C:\repos\Inedo_bmx-plastic\PlasticProvider.cs,GetCurrentRevision,The length of the statement  "		//If we are not looking for a subpath' the newest changeset is all you need to get to know if anything has changed anywhere in the repository " is 141.
Long Statement,Inedo.BuildMasterExtensions.Plastic,PlasticProvider,C:\repos\Inedo_bmx-plastic\PlasticProvider.cs,GetCurrentRevision,The length of the statement  "		var results = CMPath (workspace.Location' "query"' "select top 1 changeset.iobjid from changeset'branch where changeset.fidbranch=branch.iobjid and branch.sname='main'  order by changeset.iobjid desc"); " is 202.
Long Statement,Inedo.BuildMasterExtensions.Plastic,PlasticProvider,C:\repos\Inedo_bmx-plastic\PlasticProvider.cs,GetCurrentRevision,The length of the statement  "			query = "select max(revisions.objectid) as maxrevision' revisions.itemid from revisions'branch where revisions.branchid = branch.iobjid and branch.sname='main' and revisions.revisionnumber >= 0 group by revisions.itemid order by max(revisions.objectid) desc"; " is 259.
Long Statement,Inedo.BuildMasterExtensions.Plastic,PlasticProvider,C:\repos\Inedo_bmx-plastic\PlasticProvider.cs,GetCurrentRevision,The length of the statement  "			query = "select max(revisions.objectid) as maxrevision' revisions.itemid from revisions'branch where revisions.branchid = branch.iobjid and branch.sname='main' group by revisions.itemid order by max(revisions.objectid) desc"; " is 225.
Long Statement,Inedo.BuildMasterExtensions.Plastic,PlasticProvider,C:\repos\Inedo_bmx-plastic\PlasticProvider.cs,GetProfilePath,The length of the statement  "	var usersPath = Path.GetFullPath (Path.Combine (Environment.GetFolderPath (Environment.SpecialFolder.ApplicationData)' @"..\..\")); " is 131.
Long Statement,Inedo.BuildMasterExtensions.Plastic,PlasticProvider,C:\repos\Inedo_bmx-plastic\PlasticProvider.cs,CMPath,The length of the statement  "		var errorMessage = string.Join (""' lines.ToArray ()) + process.StandardOutput.ReadToEnd ().Replace ("\r"' "").Replace ("\n"' ""); " is 130.
Long Statement,Inedo.BuildMasterExtensions.Plastic,PlasticProviderEditor,C:\repos\Inedo_bmx-plastic\PlasticProviderEditor.cs,CreateChildControls,The length of the statement  "	CUtil.Add (this' new FormFieldGroup ("Plastic Executable Path"' "The path to the CM executable on the server."' false' new StandardFormField ("CM Executable:"' txtCMExecutablePath))' new FormFieldGroup ("Repository"' "Specifies the repository that this provider is associated with."' false' new StandardFormField ("Repository Name:"' btnLoadRepositories' htmlBreak' ddlRepositories' rfvRepository' hfCreatedTicks))); " is 416.
Empty Catch Block,Inedo.BuildMasterExtensions.Plastic,PlasticProvider,C:\repos\Inedo_bmx-plastic\PlasticProvider.cs,GetWorkspace,The method has an empty catch block.
Empty Catch Block,Inedo.BuildMasterExtensions.Plastic,PlasticProvider,C:\repos\Inedo_bmx-plastic\PlasticProvider.cs,GetPlasticVersion,The method has an empty catch block.
Magic Number,Inedo.BuildMasterExtensions.Plastic,PlasticProvider,C:\repos\Inedo_bmx-plastic\PlasticProvider.cs,GetCurrentRevision,The following statement contains a magic number: if (string.IsNullOrEmpty (path)) {  	//If we are not looking for a subpath' the newest changeset is all you need to get to know if anything has changed anywhere in the repository  	var results = CMPath (workspace.Location' "query"' "select top 1 changeset.iobjid from changeset'branch where changeset.fidbranch=branch.iobjid and branch.sname='main'  order by changeset.iobjid desc");  	if (results != null && results.Count > 1) {  		long id;  		if (long.TryParse (results [results.Count - 1]' out id))  			return id;  	}  }  else {  	var fullPath = Path.Combine (workspace.Location' path.Replace ('/'' '\\')).ToLower ();  	//this query gets all of the files with their highest revision id (not revisionnumber)  	string query;  	if (ver == null || ver [0] == '3') {  		//revisions with revisionnumber = -1 are excluded because these are checkouts' not check-ins  		query = "select max(revisions.objectid) as maxrevision' revisions.itemid from revisions'branch where revisions.branchid = branch.iobjid and branch.sname='main' and revisions.revisionnumber >= 0 group by revisions.itemid order by max(revisions.objectid) desc";  	}  	else {  		query = "select max(revisions.objectid) as maxrevision' revisions.itemid from revisions'branch where revisions.branchid = branch.iobjid and branch.sname='main' group by revisions.itemid order by max(revisions.objectid) desc";  	}  	var results = CMPath (workspace.Location' "query"' query' "--solvepath=itemid");  	if (results != null && results.Count > 1) {  		//the first matching item is the max revision id because we are ordering the query by revision id descending  		for (int i = 0; i < results.Count; i++) {  			if (results [i].ToLower ().Contains (fullPath)) {  				var spl = results [i].Split (new char[] {  					' '  				}' 2);  				if (spl != null && spl.Length > 0) {  					long revID;  					if (long.TryParse (spl [0]' out revID))  						return revID;  				}  			}  		}  	}  }  
Magic Number,Inedo.BuildMasterExtensions.Plastic,PlasticProvider,C:\repos\Inedo_bmx-plastic\PlasticProvider.cs,GetCurrentRevision,The following statement contains a magic number: if (results != null && results.Count > 1) {  	//the first matching item is the max revision id because we are ordering the query by revision id descending  	for (int i = 0; i < results.Count; i++) {  		if (results [i].ToLower ().Contains (fullPath)) {  			var spl = results [i].Split (new char[] {  				' '  			}' 2);  			if (spl != null && spl.Length > 0) {  				long revID;  				if (long.TryParse (spl [0]' out revID))  					return revID;  			}  		}  	}  }  
Magic Number,Inedo.BuildMasterExtensions.Plastic,PlasticProvider,C:\repos\Inedo_bmx-plastic\PlasticProvider.cs,GetCurrentRevision,The following statement contains a magic number: for (int i = 0; i < results.Count; i++) {  	if (results [i].ToLower ().Contains (fullPath)) {  		var spl = results [i].Split (new char[] {  			' '  		}' 2);  		if (spl != null && spl.Length > 0) {  			long revID;  			if (long.TryParse (spl [0]' out revID))  				return revID;  		}  	}  }  
Magic Number,Inedo.BuildMasterExtensions.Plastic,PlasticProvider,C:\repos\Inedo_bmx-plastic\PlasticProvider.cs,GetCurrentRevision,The following statement contains a magic number: if (results [i].ToLower ().Contains (fullPath)) {  	var spl = results [i].Split (new char[] {  		' '  	}' 2);  	if (spl != null && spl.Length > 0) {  		long revID;  		if (long.TryParse (spl [0]' out revID))  			return revID;  	}  }  
Magic Number,Inedo.BuildMasterExtensions.Plastic,PlasticProvider,C:\repos\Inedo_bmx-plastic\PlasticProvider.cs,CMPath,The following statement contains a magic number: while (!process.HasExited) {  	line = process.StandardOutput.ReadLine ();  	if (line != null) {  		if (!string.IsNullOrEmpty (line))  			lines.Add (line);  	}  	else  		Thread.Sleep (5);  }  
Magic Number,Inedo.BuildMasterExtensions.Plastic,PlasticProvider,C:\repos\Inedo_bmx-plastic\PlasticProvider.cs,CMPath,The following statement contains a magic number: if (line != null) {  	if (!string.IsNullOrEmpty (line))  		lines.Add (line);  }  else  	Thread.Sleep (5);  
Magic Number,Inedo.BuildMasterExtensions.Plastic,PlasticProvider,C:\repos\Inedo_bmx-plastic\PlasticProvider.cs,CMPath,The following statement contains a magic number: Thread.Sleep (5);  
Magic Number,Inedo.BuildMasterExtensions.Plastic,PlasticProvider,C:\repos\Inedo_bmx-plastic\PlasticProvider.cs,GetPlasticVersion,The following statement contains a magic number: try {  	_rwlVersionLookup.AcquireReaderLock (1000);  	string ver = null;  	if (_versionLookup.TryGetValue (this.ExePath' out ver)) {  		_rwlVersionLookup.ReleaseLock ();  		return ver;  	}  	else {  		var verCheck = CM ("version");  		if (verCheck != null && verCheck.Count > 0) {  			ver = verCheck [0].Trim ();  			if (!_versionLookup.ContainsKey (this.ExePath)) {  				_rwlVersionLookup.UpgradeToWriterLock (1000);  				if (!_versionLookup.ContainsKey (this.ExePath)) {  					_versionLookup.Add (this.ExePath' ver);  				}  			}  			_rwlVersionLookup.ReleaseLock ();  			return ver;  		}  	}  }  catch (Exception ex) {  	//failed to get version' return default version (below)  }  finally {  	if (_rwlVersionLookup.IsReaderLockHeld || _rwlVersionLookup.IsWriterLockHeld) {  		_rwlVersionLookup.ReleaseLock ();  	}  }  
Magic Number,Inedo.BuildMasterExtensions.Plastic,PlasticProvider,C:\repos\Inedo_bmx-plastic\PlasticProvider.cs,GetPlasticVersion,The following statement contains a magic number: try {  	_rwlVersionLookup.AcquireReaderLock (1000);  	string ver = null;  	if (_versionLookup.TryGetValue (this.ExePath' out ver)) {  		_rwlVersionLookup.ReleaseLock ();  		return ver;  	}  	else {  		var verCheck = CM ("version");  		if (verCheck != null && verCheck.Count > 0) {  			ver = verCheck [0].Trim ();  			if (!_versionLookup.ContainsKey (this.ExePath)) {  				_rwlVersionLookup.UpgradeToWriterLock (1000);  				if (!_versionLookup.ContainsKey (this.ExePath)) {  					_versionLookup.Add (this.ExePath' ver);  				}  			}  			_rwlVersionLookup.ReleaseLock ();  			return ver;  		}  	}  }  catch (Exception ex) {  	//failed to get version' return default version (below)  }  finally {  	if (_rwlVersionLookup.IsReaderLockHeld || _rwlVersionLookup.IsWriterLockHeld) {  		_rwlVersionLookup.ReleaseLock ();  	}  }  
Magic Number,Inedo.BuildMasterExtensions.Plastic,PlasticProvider,C:\repos\Inedo_bmx-plastic\PlasticProvider.cs,GetPlasticVersion,The following statement contains a magic number: _rwlVersionLookup.AcquireReaderLock (1000);  
Magic Number,Inedo.BuildMasterExtensions.Plastic,PlasticProvider,C:\repos\Inedo_bmx-plastic\PlasticProvider.cs,GetPlasticVersion,The following statement contains a magic number: if (_versionLookup.TryGetValue (this.ExePath' out ver)) {  	_rwlVersionLookup.ReleaseLock ();  	return ver;  }  else {  	var verCheck = CM ("version");  	if (verCheck != null && verCheck.Count > 0) {  		ver = verCheck [0].Trim ();  		if (!_versionLookup.ContainsKey (this.ExePath)) {  			_rwlVersionLookup.UpgradeToWriterLock (1000);  			if (!_versionLookup.ContainsKey (this.ExePath)) {  				_versionLookup.Add (this.ExePath' ver);  			}  		}  		_rwlVersionLookup.ReleaseLock ();  		return ver;  	}  }  
Magic Number,Inedo.BuildMasterExtensions.Plastic,PlasticProvider,C:\repos\Inedo_bmx-plastic\PlasticProvider.cs,GetPlasticVersion,The following statement contains a magic number: if (verCheck != null && verCheck.Count > 0) {  	ver = verCheck [0].Trim ();  	if (!_versionLookup.ContainsKey (this.ExePath)) {  		_rwlVersionLookup.UpgradeToWriterLock (1000);  		if (!_versionLookup.ContainsKey (this.ExePath)) {  			_versionLookup.Add (this.ExePath' ver);  		}  	}  	_rwlVersionLookup.ReleaseLock ();  	return ver;  }  
Magic Number,Inedo.BuildMasterExtensions.Plastic,PlasticProvider,C:\repos\Inedo_bmx-plastic\PlasticProvider.cs,GetPlasticVersion,The following statement contains a magic number: if (!_versionLookup.ContainsKey (this.ExePath)) {  	_rwlVersionLookup.UpgradeToWriterLock (1000);  	if (!_versionLookup.ContainsKey (this.ExePath)) {  		_versionLookup.Add (this.ExePath' ver);  	}  }  
Magic Number,Inedo.BuildMasterExtensions.Plastic,PlasticProvider,C:\repos\Inedo_bmx-plastic\PlasticProvider.cs,GetPlasticVersion,The following statement contains a magic number: _rwlVersionLookup.UpgradeToWriterLock (1000);  
