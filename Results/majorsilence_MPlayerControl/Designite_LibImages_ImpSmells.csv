Implementation smell,Namespace,Class,File,Method,Description
Complex Method,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Resize,Cyclomatic complexity of the method is 8
Long Statement,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Invert,The length of the statement  "            BitmapData bmData = b.LockBits(new Rectangle(0' 0' b.Width' b.Height)' ImageLockMode.ReadWrite' PixelFormat.Format24bppRgb); " is 124.
Long Statement,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,GrayScale,The length of the statement  "            BitmapData bmData = b.LockBits(new Rectangle(0' 0' b.Width' b.Height)' ImageLockMode.ReadWrite' PixelFormat.Format24bppRgb); " is 124.
Long Statement,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Brightness,The length of the statement  "            BitmapData bmData = b.LockBits(new Rectangle(0' 0' b.Width' b.Height)' ImageLockMode.ReadWrite' PixelFormat.Format24bppRgb); " is 124.
Long Statement,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Contrast,The length of the statement  "            BitmapData bmData = b.LockBits(new Rectangle(0' 0' b.Width' b.Height)' ImageLockMode.ReadWrite' PixelFormat.Format24bppRgb); " is 124.
Long Statement,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Gamma,The length of the statement  "            BitmapData bmData = b.LockBits(new Rectangle(0' 0' b.Width' b.Height)' ImageLockMode.ReadWrite' PixelFormat.Format24bppRgb); " is 124.
Long Statement,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Color,The length of the statement  "            BitmapData bmData = b.LockBits(new Rectangle(0' 0' b.Width' b.Height)' ImageLockMode.ReadWrite' PixelFormat.Format24bppRgb); " is 124.
Long Statement,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The length of the statement  "            BitmapData bmData = b.LockBits(new Rectangle(0' 0' b.Width' b.Height)' ImageLockMode.ReadWrite' PixelFormat.Format24bppRgb); " is 124.
Long Statement,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The length of the statement  "            BitmapData bmSrc = bSrc.LockBits(new Rectangle(0' 0' bSrc.Width' bSrc.Height)' ImageLockMode.ReadWrite' PixelFormat.Format24bppRgb); " is 132.
Long Statement,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The length of the statement  "                            (pSrc[2 + stride2] * m.BottomLeft) + (pSrc[5 + stride2] * m.BottomMid) + (pSrc[8 + stride2] * m.BottomRight)) / m.Factor) + m.Offset); " is 134.
Long Statement,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The length of the statement  "                            (pSrc[1 + stride2] * m.BottomLeft) + (pSrc[4 + stride2] * m.BottomMid) + (pSrc[7 + stride2] * m.BottomRight)) / m.Factor) + m.Offset); " is 134.
Long Statement,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The length of the statement  "                            (pSrc[0 + stride2] * m.BottomLeft) + (pSrc[3 + stride2] * m.BottomMid) + (pSrc[6 + stride2] * m.BottomRight)) / m.Factor) + m.Offset); " is 134.
Long Statement,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectConvolution,The length of the statement  "            BitmapData bmData = b.LockBits(new Rectangle(0' 0' b.Width' b.Height)' ImageLockMode.ReadWrite' PixelFormat.Format24bppRgb); " is 124.
Long Statement,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectConvolution,The length of the statement  "            BitmapData bmData2 = bTemp.LockBits(new Rectangle(0' 0' b.Width' b.Height)' ImageLockMode.ReadWrite' PixelFormat.Format24bppRgb); " is 129.
Long Statement,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHorizontal,The length of the statement  "            BitmapData bmData = b.LockBits(new Rectangle(0' 0' b.Width' b.Height)' ImageLockMode.ReadWrite' PixelFormat.Format24bppRgb); " is 124.
Long Statement,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHorizontal,The length of the statement  "            BitmapData bmData2 = bmTemp.LockBits(new Rectangle(0' 0' b.Width' b.Height)' ImageLockMode.ReadWrite' PixelFormat.Format24bppRgb); " is 130.
Long Statement,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectVertical,The length of the statement  "            BitmapData bmData = b.LockBits(new Rectangle(0' 0' b.Width' b.Height)' ImageLockMode.ReadWrite' PixelFormat.Format24bppRgb); " is 124.
Long Statement,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectVertical,The length of the statement  "            BitmapData bmData2 = bmTemp.LockBits(new Rectangle(0' 0' b.Width' b.Height)' ImageLockMode.ReadWrite' PixelFormat.Format24bppRgb); " is 130.
Long Statement,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHomogenity,The length of the statement  "            BitmapData bmData = b.LockBits(new Rectangle(0' 0' b.Width' b.Height)' ImageLockMode.ReadWrite' PixelFormat.Format24bppRgb); " is 124.
Long Statement,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHomogenity,The length of the statement  "            BitmapData bmData2 = b2.LockBits(new Rectangle(0' 0' b.Width' b.Height)' ImageLockMode.ReadWrite' PixelFormat.Format24bppRgb); " is 126.
Long Statement,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectDifference,The length of the statement  "            BitmapData bmData = b.LockBits(new Rectangle(0' 0' b.Width' b.Height)' ImageLockMode.ReadWrite' PixelFormat.Format24bppRgb); " is 124.
Long Statement,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectDifference,The length of the statement  "            BitmapData bmData2 = b2.LockBits(new Rectangle(0' 0' b.Width' b.Height)' ImageLockMode.ReadWrite' PixelFormat.Format24bppRgb); " is 126.
Long Statement,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeEnhance,The length of the statement  "            BitmapData bmData = b.LockBits(new Rectangle(0' 0' b.Width' b.Height)' ImageLockMode.ReadWrite' PixelFormat.Format24bppRgb); " is 124.
Long Statement,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeEnhance,The length of the statement  "            BitmapData bmData2 = b2.LockBits(new Rectangle(0' 0' b.Width' b.Height)' ImageLockMode.ReadWrite' PixelFormat.Format24bppRgb); " is 126.
Long Statement,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAbs,The length of the statement  "            BitmapData bmData = b.LockBits(new Rectangle(0' 0' b.Width' b.Height)' ImageLockMode.ReadWrite' PixelFormat.Format24bppRgb); " is 124.
Long Statement,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAbs,The length of the statement  "            BitmapData bmSrc = bSrc.LockBits(new Rectangle(0' 0' bSrc.Width' bSrc.Height)' ImageLockMode.ReadWrite' PixelFormat.Format24bppRgb); " is 132.
Long Statement,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilter,The length of the statement  "            BitmapData bmData = b.LockBits(new Rectangle(0' 0' b.Width' b.Height)' ImageLockMode.ReadWrite' PixelFormat.Format24bppRgb); " is 124.
Long Statement,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilter,The length of the statement  "            BitmapData bmSrc = bSrc.LockBits(new Rectangle(0' 0' bSrc.Width' bSrc.Height)' ImageLockMode.ReadWrite' PixelFormat.Format24bppRgb); " is 132.
Long Statement,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAntiAlias,The length of the statement  "            BitmapData bmData = b.LockBits(new Rectangle(0' 0' b.Width' b.Height)' ImageLockMode.ReadWrite' PixelFormat.Format24bppRgb); " is 124.
Long Statement,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAntiAlias,The length of the statement  "            BitmapData bmSrc = bSrc.LockBits(new Rectangle(0' 0' bSrc.Width' bSrc.Height)' ImageLockMode.ReadWrite' PixelFormat.Format24bppRgb); " is 132.
Complex Conditional,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAbs,The conditional expression  "yOffset >= 0 && yOffset < nHeight && xOffset >= 0 && xOffset < nWidth"  is complex.
Complex Conditional,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilter,The conditional expression  "y + yOffset >= 0 && y + yOffset < nHeight && x + xOffset >= 0 && x + xOffset < nWidth"  is complex.
Complex Conditional,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAntiAlias,The conditional expression  "floor_y >= 0 && ceil_y < nHeight && floor_x >= 0 && ceil_x < nWidth"  is complex.
Complex Conditional,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Sphere,The conditional expression  "newY > 0 && newY < nHeight && newX > 0 && newX < nWidth"  is complex.
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Invert,The following statement contains a magic number: int nOffset = stride - b.Width * 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Invert,The following statement contains a magic number: int nWidth = b.Width * 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Invert,The following statement contains a magic number: p[0] = (byte)(255 - p[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,GrayScale,The following statement contains a magic number: int nOffset = stride - b.Width * 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,GrayScale,The following statement contains a magic number: red = p[2];
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,GrayScale,The following statement contains a magic number: p[0] = p[1] = p[2] = (byte)(.299 * red + .587 * green + .114 * blue);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,GrayScale,The following statement contains a magic number: p[0] = p[1] = p[2] = (byte)(.299 * red + .587 * green + .114 * blue);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,GrayScale,The following statement contains a magic number: p[0] = p[1] = p[2] = (byte)(.299 * red + .587 * green + .114 * blue);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,GrayScale,The following statement contains a magic number: p[0] = p[1] = p[2] = (byte)(.299 * red + .587 * green + .114 * blue);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,GrayScale,The following statement contains a magic number: p += 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Brightness,The following statement contains a magic number: nBrightness < -255 || nBrightness > 255
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Brightness,The following statement contains a magic number: nBrightness < -255 || nBrightness > 255
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Brightness,The following statement contains a magic number: int nOffset = stride - b.Width * 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Brightness,The following statement contains a magic number: int nWidth = b.Width * 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Brightness,The following statement contains a magic number: nVal = 255;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Brightness,The following statement contains a magic number: nVal > 255
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Contrast,The following statement contains a magic number: nContrast < -100
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Contrast,The following statement contains a magic number: nContrast > 100
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Contrast,The following statement contains a magic number: double pixel = 0' contrast = (100.0 + nContrast) / 100.0;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Contrast,The following statement contains a magic number: double pixel = 0' contrast = (100.0 + nContrast) / 100.0;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Contrast,The following statement contains a magic number: int nOffset = stride - b.Width * 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Contrast,The following statement contains a magic number: red = p[2];
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Contrast,The following statement contains a magic number: pixel = red / 255.0;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Contrast,The following statement contains a magic number: pixel -= 0.5;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Contrast,The following statement contains a magic number: pixel += 0.5;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Contrast,The following statement contains a magic number: pixel *= 255;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Contrast,The following statement contains a magic number: pixel = 255;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Contrast,The following statement contains a magic number: pixel > 255
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Contrast,The following statement contains a magic number: p[2] = (byte)pixel;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Contrast,The following statement contains a magic number: pixel = green / 255.0;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Contrast,The following statement contains a magic number: pixel -= 0.5;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Contrast,The following statement contains a magic number: pixel += 0.5;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Contrast,The following statement contains a magic number: pixel *= 255;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Contrast,The following statement contains a magic number: pixel = 255;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Contrast,The following statement contains a magic number: pixel > 255
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Contrast,The following statement contains a magic number: pixel = blue / 255.0;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Contrast,The following statement contains a magic number: pixel -= 0.5;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Contrast,The following statement contains a magic number: pixel += 0.5;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Contrast,The following statement contains a magic number: pixel *= 255;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Contrast,The following statement contains a magic number: pixel = 255;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Contrast,The following statement contains a magic number: pixel > 255
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Contrast,The following statement contains a magic number: p += 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Gamma,The following statement contains a magic number: red < .2 || red > 5
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Gamma,The following statement contains a magic number: red < .2 || red > 5
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Gamma,The following statement contains a magic number: green < .2 || green > 5
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Gamma,The following statement contains a magic number: green < .2 || green > 5
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Gamma,The following statement contains a magic number: blue < .2 || blue > 5
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Gamma,The following statement contains a magic number: blue < .2 || blue > 5
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Gamma,The following statement contains a magic number: byte[] redGamma = new byte[256];
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Gamma,The following statement contains a magic number: byte[] greenGamma = new byte[256];
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Gamma,The following statement contains a magic number: byte[] blueGamma = new byte[256];
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Gamma,The following statement contains a magic number: redGamma[i] = (byte)Math.Min(255' (int)((255.0 * Math.Pow(i / 255.0' 1.0 / red)) + 0.5));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Gamma,The following statement contains a magic number: redGamma[i] = (byte)Math.Min(255' (int)((255.0 * Math.Pow(i / 255.0' 1.0 / red)) + 0.5));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Gamma,The following statement contains a magic number: redGamma[i] = (byte)Math.Min(255' (int)((255.0 * Math.Pow(i / 255.0' 1.0 / red)) + 0.5));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Gamma,The following statement contains a magic number: redGamma[i] = (byte)Math.Min(255' (int)((255.0 * Math.Pow(i / 255.0' 1.0 / red)) + 0.5));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Gamma,The following statement contains a magic number: greenGamma[i] = (byte)Math.Min(255' (int)((255.0 * Math.Pow(i / 255.0' 1.0 / green)) + 0.5));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Gamma,The following statement contains a magic number: greenGamma[i] = (byte)Math.Min(255' (int)((255.0 * Math.Pow(i / 255.0' 1.0 / green)) + 0.5));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Gamma,The following statement contains a magic number: greenGamma[i] = (byte)Math.Min(255' (int)((255.0 * Math.Pow(i / 255.0' 1.0 / green)) + 0.5));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Gamma,The following statement contains a magic number: greenGamma[i] = (byte)Math.Min(255' (int)((255.0 * Math.Pow(i / 255.0' 1.0 / green)) + 0.5));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Gamma,The following statement contains a magic number: blueGamma[i] = (byte)Math.Min(255' (int)((255.0 * Math.Pow(i / 255.0' 1.0 / blue)) + 0.5));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Gamma,The following statement contains a magic number: blueGamma[i] = (byte)Math.Min(255' (int)((255.0 * Math.Pow(i / 255.0' 1.0 / blue)) + 0.5));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Gamma,The following statement contains a magic number: blueGamma[i] = (byte)Math.Min(255' (int)((255.0 * Math.Pow(i / 255.0' 1.0 / blue)) + 0.5));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Gamma,The following statement contains a magic number: blueGamma[i] = (byte)Math.Min(255' (int)((255.0 * Math.Pow(i / 255.0' 1.0 / blue)) + 0.5));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Gamma,The following statement contains a magic number: i < 256
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Gamma,The following statement contains a magic number: int nOffset = stride - b.Width * 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Gamma,The following statement contains a magic number: p[2] = redGamma[p[2]];
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Gamma,The following statement contains a magic number: p[2] = redGamma[p[2]];
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Gamma,The following statement contains a magic number: p += 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Color,The following statement contains a magic number: red < -255 || red > 255
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Color,The following statement contains a magic number: red < -255 || red > 255
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Color,The following statement contains a magic number: green < -255 || green > 255
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Color,The following statement contains a magic number: green < -255 || green > 255
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Color,The following statement contains a magic number: blue < -255 || blue > 255
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Color,The following statement contains a magic number: blue < -255 || blue > 255
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Color,The following statement contains a magic number: int nOffset = stride - b.Width * 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Color,The following statement contains a magic number: nPixel = p[2] + red;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Color,The following statement contains a magic number: p[2] = (byte)Math.Min(255' nPixel);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Color,The following statement contains a magic number: p[2] = (byte)Math.Min(255' nPixel);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Color,The following statement contains a magic number: p[1] = (byte)Math.Min(255' nPixel);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Color,The following statement contains a magic number: p[0] = (byte)Math.Min(255' nPixel);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Color,The following statement contains a magic number: p += 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: int stride2 = stride * 2;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: int nOffset = stride - b.Width * 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: int nWidth = b.Width - 2;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: int nHeight = b.Height - 2;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: nPixel = ((((pSrc[2] * m.TopLeft) + (pSrc[5] * m.TopMid) + (pSrc[8] * m.TopRight) +                              (pSrc[2 + stride] * m.MidLeft) + (pSrc[5 + stride] * m.Pixel) + (pSrc[8 + stride] * m.MidRight) +                              (pSrc[2 + stride2] * m.BottomLeft) + (pSrc[5 + stride2] * m.BottomMid) + (pSrc[8 + stride2] * m.BottomRight)) / m.Factor) + m.Offset);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: nPixel = ((((pSrc[2] * m.TopLeft) + (pSrc[5] * m.TopMid) + (pSrc[8] * m.TopRight) +                              (pSrc[2 + stride] * m.MidLeft) + (pSrc[5 + stride] * m.Pixel) + (pSrc[8 + stride] * m.MidRight) +                              (pSrc[2 + stride2] * m.BottomLeft) + (pSrc[5 + stride2] * m.BottomMid) + (pSrc[8 + stride2] * m.BottomRight)) / m.Factor) + m.Offset);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: nPixel = ((((pSrc[2] * m.TopLeft) + (pSrc[5] * m.TopMid) + (pSrc[8] * m.TopRight) +                              (pSrc[2 + stride] * m.MidLeft) + (pSrc[5 + stride] * m.Pixel) + (pSrc[8 + stride] * m.MidRight) +                              (pSrc[2 + stride2] * m.BottomLeft) + (pSrc[5 + stride2] * m.BottomMid) + (pSrc[8 + stride2] * m.BottomRight)) / m.Factor) + m.Offset);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: nPixel = ((((pSrc[2] * m.TopLeft) + (pSrc[5] * m.TopMid) + (pSrc[8] * m.TopRight) +                              (pSrc[2 + stride] * m.MidLeft) + (pSrc[5 + stride] * m.Pixel) + (pSrc[8 + stride] * m.MidRight) +                              (pSrc[2 + stride2] * m.BottomLeft) + (pSrc[5 + stride2] * m.BottomMid) + (pSrc[8 + stride2] * m.BottomRight)) / m.Factor) + m.Offset);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: nPixel = ((((pSrc[2] * m.TopLeft) + (pSrc[5] * m.TopMid) + (pSrc[8] * m.TopRight) +                              (pSrc[2 + stride] * m.MidLeft) + (pSrc[5 + stride] * m.Pixel) + (pSrc[8 + stride] * m.MidRight) +                              (pSrc[2 + stride2] * m.BottomLeft) + (pSrc[5 + stride2] * m.BottomMid) + (pSrc[8 + stride2] * m.BottomRight)) / m.Factor) + m.Offset);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: nPixel = ((((pSrc[2] * m.TopLeft) + (pSrc[5] * m.TopMid) + (pSrc[8] * m.TopRight) +                              (pSrc[2 + stride] * m.MidLeft) + (pSrc[5 + stride] * m.Pixel) + (pSrc[8 + stride] * m.MidRight) +                              (pSrc[2 + stride2] * m.BottomLeft) + (pSrc[5 + stride2] * m.BottomMid) + (pSrc[8 + stride2] * m.BottomRight)) / m.Factor) + m.Offset);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: nPixel = ((((pSrc[2] * m.TopLeft) + (pSrc[5] * m.TopMid) + (pSrc[8] * m.TopRight) +                              (pSrc[2 + stride] * m.MidLeft) + (pSrc[5 + stride] * m.Pixel) + (pSrc[8 + stride] * m.MidRight) +                              (pSrc[2 + stride2] * m.BottomLeft) + (pSrc[5 + stride2] * m.BottomMid) + (pSrc[8 + stride2] * m.BottomRight)) / m.Factor) + m.Offset);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: nPixel = ((((pSrc[2] * m.TopLeft) + (pSrc[5] * m.TopMid) + (pSrc[8] * m.TopRight) +                              (pSrc[2 + stride] * m.MidLeft) + (pSrc[5 + stride] * m.Pixel) + (pSrc[8 + stride] * m.MidRight) +                              (pSrc[2 + stride2] * m.BottomLeft) + (pSrc[5 + stride2] * m.BottomMid) + (pSrc[8 + stride2] * m.BottomRight)) / m.Factor) + m.Offset);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: nPixel = ((((pSrc[2] * m.TopLeft) + (pSrc[5] * m.TopMid) + (pSrc[8] * m.TopRight) +                              (pSrc[2 + stride] * m.MidLeft) + (pSrc[5 + stride] * m.Pixel) + (pSrc[8 + stride] * m.MidRight) +                              (pSrc[2 + stride2] * m.BottomLeft) + (pSrc[5 + stride2] * m.BottomMid) + (pSrc[8 + stride2] * m.BottomRight)) / m.Factor) + m.Offset);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: nPixel = 255;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: nPixel > 255
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: p[5 + stride] = (byte)nPixel;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: nPixel = ((((pSrc[1] * m.TopLeft) + (pSrc[4] * m.TopMid) + (pSrc[7] * m.TopRight) +                              (pSrc[1 + stride] * m.MidLeft) + (pSrc[4 + stride] * m.Pixel) + (pSrc[7 + stride] * m.MidRight) +                              (pSrc[1 + stride2] * m.BottomLeft) + (pSrc[4 + stride2] * m.BottomMid) + (pSrc[7 + stride2] * m.BottomRight)) / m.Factor) + m.Offset);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: nPixel = ((((pSrc[1] * m.TopLeft) + (pSrc[4] * m.TopMid) + (pSrc[7] * m.TopRight) +                              (pSrc[1 + stride] * m.MidLeft) + (pSrc[4 + stride] * m.Pixel) + (pSrc[7 + stride] * m.MidRight) +                              (pSrc[1 + stride2] * m.BottomLeft) + (pSrc[4 + stride2] * m.BottomMid) + (pSrc[7 + stride2] * m.BottomRight)) / m.Factor) + m.Offset);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: nPixel = ((((pSrc[1] * m.TopLeft) + (pSrc[4] * m.TopMid) + (pSrc[7] * m.TopRight) +                              (pSrc[1 + stride] * m.MidLeft) + (pSrc[4 + stride] * m.Pixel) + (pSrc[7 + stride] * m.MidRight) +                              (pSrc[1 + stride2] * m.BottomLeft) + (pSrc[4 + stride2] * m.BottomMid) + (pSrc[7 + stride2] * m.BottomRight)) / m.Factor) + m.Offset);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: nPixel = ((((pSrc[1] * m.TopLeft) + (pSrc[4] * m.TopMid) + (pSrc[7] * m.TopRight) +                              (pSrc[1 + stride] * m.MidLeft) + (pSrc[4 + stride] * m.Pixel) + (pSrc[7 + stride] * m.MidRight) +                              (pSrc[1 + stride2] * m.BottomLeft) + (pSrc[4 + stride2] * m.BottomMid) + (pSrc[7 + stride2] * m.BottomRight)) / m.Factor) + m.Offset);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: nPixel = ((((pSrc[1] * m.TopLeft) + (pSrc[4] * m.TopMid) + (pSrc[7] * m.TopRight) +                              (pSrc[1 + stride] * m.MidLeft) + (pSrc[4 + stride] * m.Pixel) + (pSrc[7 + stride] * m.MidRight) +                              (pSrc[1 + stride2] * m.BottomLeft) + (pSrc[4 + stride2] * m.BottomMid) + (pSrc[7 + stride2] * m.BottomRight)) / m.Factor) + m.Offset);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: nPixel = ((((pSrc[1] * m.TopLeft) + (pSrc[4] * m.TopMid) + (pSrc[7] * m.TopRight) +                              (pSrc[1 + stride] * m.MidLeft) + (pSrc[4 + stride] * m.Pixel) + (pSrc[7 + stride] * m.MidRight) +                              (pSrc[1 + stride2] * m.BottomLeft) + (pSrc[4 + stride2] * m.BottomMid) + (pSrc[7 + stride2] * m.BottomRight)) / m.Factor) + m.Offset);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: nPixel = 255;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: nPixel > 255
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: p[4 + stride] = (byte)nPixel;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: nPixel = ((((pSrc[0] * m.TopLeft) + (pSrc[3] * m.TopMid) + (pSrc[6] * m.TopRight) +                              (pSrc[0 + stride] * m.MidLeft) + (pSrc[3 + stride] * m.Pixel) + (pSrc[6 + stride] * m.MidRight) +                              (pSrc[0 + stride2] * m.BottomLeft) + (pSrc[3 + stride2] * m.BottomMid) + (pSrc[6 + stride2] * m.BottomRight)) / m.Factor) + m.Offset);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: nPixel = ((((pSrc[0] * m.TopLeft) + (pSrc[3] * m.TopMid) + (pSrc[6] * m.TopRight) +                              (pSrc[0 + stride] * m.MidLeft) + (pSrc[3 + stride] * m.Pixel) + (pSrc[6 + stride] * m.MidRight) +                              (pSrc[0 + stride2] * m.BottomLeft) + (pSrc[3 + stride2] * m.BottomMid) + (pSrc[6 + stride2] * m.BottomRight)) / m.Factor) + m.Offset);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: nPixel = ((((pSrc[0] * m.TopLeft) + (pSrc[3] * m.TopMid) + (pSrc[6] * m.TopRight) +                              (pSrc[0 + stride] * m.MidLeft) + (pSrc[3 + stride] * m.Pixel) + (pSrc[6 + stride] * m.MidRight) +                              (pSrc[0 + stride2] * m.BottomLeft) + (pSrc[3 + stride2] * m.BottomMid) + (pSrc[6 + stride2] * m.BottomRight)) / m.Factor) + m.Offset);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: nPixel = ((((pSrc[0] * m.TopLeft) + (pSrc[3] * m.TopMid) + (pSrc[6] * m.TopRight) +                              (pSrc[0 + stride] * m.MidLeft) + (pSrc[3 + stride] * m.Pixel) + (pSrc[6 + stride] * m.MidRight) +                              (pSrc[0 + stride2] * m.BottomLeft) + (pSrc[3 + stride2] * m.BottomMid) + (pSrc[6 + stride2] * m.BottomRight)) / m.Factor) + m.Offset);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: nPixel = ((((pSrc[0] * m.TopLeft) + (pSrc[3] * m.TopMid) + (pSrc[6] * m.TopRight) +                              (pSrc[0 + stride] * m.MidLeft) + (pSrc[3 + stride] * m.Pixel) + (pSrc[6 + stride] * m.MidRight) +                              (pSrc[0 + stride2] * m.BottomLeft) + (pSrc[3 + stride2] * m.BottomMid) + (pSrc[6 + stride2] * m.BottomRight)) / m.Factor) + m.Offset);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: nPixel = ((((pSrc[0] * m.TopLeft) + (pSrc[3] * m.TopMid) + (pSrc[6] * m.TopRight) +                              (pSrc[0 + stride] * m.MidLeft) + (pSrc[3 + stride] * m.Pixel) + (pSrc[6 + stride] * m.MidRight) +                              (pSrc[0 + stride2] * m.BottomLeft) + (pSrc[3 + stride2] * m.BottomMid) + (pSrc[6 + stride2] * m.BottomRight)) / m.Factor) + m.Offset);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: nPixel = 255;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: nPixel > 255
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: p[3 + stride] = (byte)nPixel;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: p += 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Conv3x3,The following statement contains a magic number: pSrc += 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Smooth,The following statement contains a magic number: m.Factor = nWeight + 8;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,GaussianBlur,The following statement contains a magic number: m.TopMid = m.MidLeft = m.MidRight = m.BottomMid = 2;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,GaussianBlur,The following statement contains a magic number: m.Factor = nWeight + 12;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,MeanRemoval,The following statement contains a magic number: m.Factor = nWeight - 8;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Sharpen,The following statement contains a magic number: m.TopMid = m.MidLeft = m.MidRight = m.BottomMid = -2;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Sharpen,The following statement contains a magic number: m.Factor = nWeight - 8;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EmbossLaplacian,The following statement contains a magic number: m.Pixel = 4;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EmbossLaplacian,The following statement contains a magic number: m.Offset = 127;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectQuick,The following statement contains a magic number: m.Offset = 127;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectConvolution,The following statement contains a magic number: switch (nType)              {                  case EDGE_DETECT_SOBEL:                      m.SetAll(0);                      m.TopLeft = m.BottomLeft = 1;                      m.TopRight = m.BottomRight = -1;                      m.MidLeft = 2;                      m.MidRight = -2;                      m.Offset = 0;                      break;                  case EDGE_DETECT_PREWITT:                      m.SetAll(0);                      m.TopLeft = m.MidLeft = m.BottomLeft = -1;                      m.TopRight = m.MidRight = m.BottomRight = 1;                      m.Offset = 0;                      break;                  case EDGE_DETECT_KIRSH:                      m.SetAll(-3);                      m.Pixel = 0;                      m.TopLeft = m.MidLeft = m.BottomLeft = 5;                      m.Offset = 0;                      break;              }
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectConvolution,The following statement contains a magic number: switch (nType)              {                  case EDGE_DETECT_SOBEL:                      m.SetAll(0);                      m.TopLeft = m.BottomLeft = 1;                      m.TopRight = m.BottomRight = -1;                      m.MidLeft = 2;                      m.MidRight = -2;                      m.Offset = 0;                      break;                  case EDGE_DETECT_PREWITT:                      m.SetAll(0);                      m.TopLeft = m.MidLeft = m.BottomLeft = -1;                      m.TopRight = m.MidRight = m.BottomRight = 1;                      m.Offset = 0;                      break;                  case EDGE_DETECT_KIRSH:                      m.SetAll(-3);                      m.Pixel = 0;                      m.TopLeft = m.MidLeft = m.BottomLeft = 5;                      m.Offset = 0;                      break;              }
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectConvolution,The following statement contains a magic number: switch (nType)              {                  case EDGE_DETECT_SOBEL:                      m.SetAll(0);                      m.TopLeft = m.BottomLeft = 1;                      m.TopRight = m.BottomRight = -1;                      m.MidLeft = 2;                      m.MidRight = -2;                      m.Offset = 0;                      break;                  case EDGE_DETECT_PREWITT:                      m.SetAll(0);                      m.TopLeft = m.MidLeft = m.BottomLeft = -1;                      m.TopRight = m.MidRight = m.BottomRight = 1;                      m.Offset = 0;                      break;                  case EDGE_DETECT_KIRSH:                      m.SetAll(-3);                      m.Pixel = 0;                      m.TopLeft = m.MidLeft = m.BottomLeft = 5;                      m.Offset = 0;                      break;              }
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectConvolution,The following statement contains a magic number: switch (nType)              {                  case EDGE_DETECT_SOBEL:                      m.SetAll(0);                      m.TopLeft = m.BottomLeft = 1;                      m.TopRight = m.BottomRight = -1;                      m.MidLeft = 2;                      m.MidRight = -2;                      m.Offset = 0;                      break;                  case EDGE_DETECT_PREWITT:                      m.SetAll(0);                      m.TopLeft = m.MidLeft = m.BottomLeft = -1;                      m.TopRight = m.MidRight = m.BottomRight = 1;                      m.Offset = 0;                      break;                  case EDGE_DETECT_KIRSH:                      m.SetAll(-3);                      m.Pixel = 0;                      m.TopLeft = m.MidLeft = m.BottomLeft = 5;                      m.Offset = 0;                      break;              }
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectConvolution,The following statement contains a magic number: switch (nType)              {                  case EDGE_DETECT_SOBEL:                      m.SetAll(0);                      m.TopLeft = m.TopRight = 1;                      m.BottomLeft = m.BottomRight = -1;                      m.TopMid = 2;                      m.BottomMid = -2;                      m.Offset = 0;                      break;                  case EDGE_DETECT_PREWITT:                      m.SetAll(0);                      m.BottomLeft = m.BottomMid = m.BottomRight = -1;                      m.TopLeft = m.TopMid = m.TopRight = 1;                      m.Offset = 0;                      break;                  case EDGE_DETECT_KIRSH:                      m.SetAll(-3);                      m.Pixel = 0;                      m.BottomLeft = m.BottomMid = m.BottomRight = 5;                      m.Offset = 0;                      break;              }
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectConvolution,The following statement contains a magic number: switch (nType)              {                  case EDGE_DETECT_SOBEL:                      m.SetAll(0);                      m.TopLeft = m.TopRight = 1;                      m.BottomLeft = m.BottomRight = -1;                      m.TopMid = 2;                      m.BottomMid = -2;                      m.Offset = 0;                      break;                  case EDGE_DETECT_PREWITT:                      m.SetAll(0);                      m.BottomLeft = m.BottomMid = m.BottomRight = -1;                      m.TopLeft = m.TopMid = m.TopRight = 1;                      m.Offset = 0;                      break;                  case EDGE_DETECT_KIRSH:                      m.SetAll(-3);                      m.Pixel = 0;                      m.BottomLeft = m.BottomMid = m.BottomRight = 5;                      m.Offset = 0;                      break;              }
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectConvolution,The following statement contains a magic number: switch (nType)              {                  case EDGE_DETECT_SOBEL:                      m.SetAll(0);                      m.TopLeft = m.TopRight = 1;                      m.BottomLeft = m.BottomRight = -1;                      m.TopMid = 2;                      m.BottomMid = -2;                      m.Offset = 0;                      break;                  case EDGE_DETECT_PREWITT:                      m.SetAll(0);                      m.BottomLeft = m.BottomMid = m.BottomRight = -1;                      m.TopLeft = m.TopMid = m.TopRight = 1;                      m.Offset = 0;                      break;                  case EDGE_DETECT_KIRSH:                      m.SetAll(-3);                      m.Pixel = 0;                      m.BottomLeft = m.BottomMid = m.BottomRight = 5;                      m.Offset = 0;                      break;              }
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectConvolution,The following statement contains a magic number: switch (nType)              {                  case EDGE_DETECT_SOBEL:                      m.SetAll(0);                      m.TopLeft = m.TopRight = 1;                      m.BottomLeft = m.BottomRight = -1;                      m.TopMid = 2;                      m.BottomMid = -2;                      m.Offset = 0;                      break;                  case EDGE_DETECT_PREWITT:                      m.SetAll(0);                      m.BottomLeft = m.BottomMid = m.BottomRight = -1;                      m.TopLeft = m.TopMid = m.TopRight = 1;                      m.Offset = 0;                      break;                  case EDGE_DETECT_KIRSH:                      m.SetAll(-3);                      m.Pixel = 0;                      m.BottomLeft = m.BottomMid = m.BottomRight = 5;                      m.Offset = 0;                      break;              }
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectConvolution,The following statement contains a magic number: int nOffset = stride - b.Width * 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectConvolution,The following statement contains a magic number: int nWidth = b.Width * 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectConvolution,The following statement contains a magic number: nPixel = 255;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectConvolution,The following statement contains a magic number: nPixel > 255
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHorizontal,The following statement contains a magic number: int nOffset = stride - b.Width * 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHorizontal,The following statement contains a magic number: int nWidth = b.Width * 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHorizontal,The following statement contains a magic number: p += 9;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHorizontal,The following statement contains a magic number: p2 += 9;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHorizontal,The following statement contains a magic number: nPixel = ((p2 + stride - 9)[0] +                              (p2 + stride - 6)[0] +                              (p2 + stride - 3)[0] +                              (p2 + stride)[0] +                              (p2 + stride + 3)[0] +                              (p2 + stride + 6)[0] +                              (p2 + stride + 9)[0] -                              (p2 - stride - 9)[0] -                              (p2 - stride - 6)[0] -                              (p2 - stride - 3)[0] -                              (p2 - stride)[0] -                              (p2 - stride + 3)[0] -                              (p2 - stride + 6)[0] -                              (p2 - stride + 9)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHorizontal,The following statement contains a magic number: nPixel = ((p2 + stride - 9)[0] +                              (p2 + stride - 6)[0] +                              (p2 + stride - 3)[0] +                              (p2 + stride)[0] +                              (p2 + stride + 3)[0] +                              (p2 + stride + 6)[0] +                              (p2 + stride + 9)[0] -                              (p2 - stride - 9)[0] -                              (p2 - stride - 6)[0] -                              (p2 - stride - 3)[0] -                              (p2 - stride)[0] -                              (p2 - stride + 3)[0] -                              (p2 - stride + 6)[0] -                              (p2 - stride + 9)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHorizontal,The following statement contains a magic number: nPixel = ((p2 + stride - 9)[0] +                              (p2 + stride - 6)[0] +                              (p2 + stride - 3)[0] +                              (p2 + stride)[0] +                              (p2 + stride + 3)[0] +                              (p2 + stride + 6)[0] +                              (p2 + stride + 9)[0] -                              (p2 - stride - 9)[0] -                              (p2 - stride - 6)[0] -                              (p2 - stride - 3)[0] -                              (p2 - stride)[0] -                              (p2 - stride + 3)[0] -                              (p2 - stride + 6)[0] -                              (p2 - stride + 9)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHorizontal,The following statement contains a magic number: nPixel = ((p2 + stride - 9)[0] +                              (p2 + stride - 6)[0] +                              (p2 + stride - 3)[0] +                              (p2 + stride)[0] +                              (p2 + stride + 3)[0] +                              (p2 + stride + 6)[0] +                              (p2 + stride + 9)[0] -                              (p2 - stride - 9)[0] -                              (p2 - stride - 6)[0] -                              (p2 - stride - 3)[0] -                              (p2 - stride)[0] -                              (p2 - stride + 3)[0] -                              (p2 - stride + 6)[0] -                              (p2 - stride + 9)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHorizontal,The following statement contains a magic number: nPixel = ((p2 + stride - 9)[0] +                              (p2 + stride - 6)[0] +                              (p2 + stride - 3)[0] +                              (p2 + stride)[0] +                              (p2 + stride + 3)[0] +                              (p2 + stride + 6)[0] +                              (p2 + stride + 9)[0] -                              (p2 - stride - 9)[0] -                              (p2 - stride - 6)[0] -                              (p2 - stride - 3)[0] -                              (p2 - stride)[0] -                              (p2 - stride + 3)[0] -                              (p2 - stride + 6)[0] -                              (p2 - stride + 9)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHorizontal,The following statement contains a magic number: nPixel = ((p2 + stride - 9)[0] +                              (p2 + stride - 6)[0] +                              (p2 + stride - 3)[0] +                              (p2 + stride)[0] +                              (p2 + stride + 3)[0] +                              (p2 + stride + 6)[0] +                              (p2 + stride + 9)[0] -                              (p2 - stride - 9)[0] -                              (p2 - stride - 6)[0] -                              (p2 - stride - 3)[0] -                              (p2 - stride)[0] -                              (p2 - stride + 3)[0] -                              (p2 - stride + 6)[0] -                              (p2 - stride + 9)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHorizontal,The following statement contains a magic number: nPixel = ((p2 + stride - 9)[0] +                              (p2 + stride - 6)[0] +                              (p2 + stride - 3)[0] +                              (p2 + stride)[0] +                              (p2 + stride + 3)[0] +                              (p2 + stride + 6)[0] +                              (p2 + stride + 9)[0] -                              (p2 - stride - 9)[0] -                              (p2 - stride - 6)[0] -                              (p2 - stride - 3)[0] -                              (p2 - stride)[0] -                              (p2 - stride + 3)[0] -                              (p2 - stride + 6)[0] -                              (p2 - stride + 9)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHorizontal,The following statement contains a magic number: nPixel = ((p2 + stride - 9)[0] +                              (p2 + stride - 6)[0] +                              (p2 + stride - 3)[0] +                              (p2 + stride)[0] +                              (p2 + stride + 3)[0] +                              (p2 + stride + 6)[0] +                              (p2 + stride + 9)[0] -                              (p2 - stride - 9)[0] -                              (p2 - stride - 6)[0] -                              (p2 - stride - 3)[0] -                              (p2 - stride)[0] -                              (p2 - stride + 3)[0] -                              (p2 - stride + 6)[0] -                              (p2 - stride + 9)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHorizontal,The following statement contains a magic number: nPixel = ((p2 + stride - 9)[0] +                              (p2 + stride - 6)[0] +                              (p2 + stride - 3)[0] +                              (p2 + stride)[0] +                              (p2 + stride + 3)[0] +                              (p2 + stride + 6)[0] +                              (p2 + stride + 9)[0] -                              (p2 - stride - 9)[0] -                              (p2 - stride - 6)[0] -                              (p2 - stride - 3)[0] -                              (p2 - stride)[0] -                              (p2 - stride + 3)[0] -                              (p2 - stride + 6)[0] -                              (p2 - stride + 9)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHorizontal,The following statement contains a magic number: nPixel = ((p2 + stride - 9)[0] +                              (p2 + stride - 6)[0] +                              (p2 + stride - 3)[0] +                              (p2 + stride)[0] +                              (p2 + stride + 3)[0] +                              (p2 + stride + 6)[0] +                              (p2 + stride + 9)[0] -                              (p2 - stride - 9)[0] -                              (p2 - stride - 6)[0] -                              (p2 - stride - 3)[0] -                              (p2 - stride)[0] -                              (p2 - stride + 3)[0] -                              (p2 - stride + 6)[0] -                              (p2 - stride + 9)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHorizontal,The following statement contains a magic number: nPixel = ((p2 + stride - 9)[0] +                              (p2 + stride - 6)[0] +                              (p2 + stride - 3)[0] +                              (p2 + stride)[0] +                              (p2 + stride + 3)[0] +                              (p2 + stride + 6)[0] +                              (p2 + stride + 9)[0] -                              (p2 - stride - 9)[0] -                              (p2 - stride - 6)[0] -                              (p2 - stride - 3)[0] -                              (p2 - stride)[0] -                              (p2 - stride + 3)[0] -                              (p2 - stride + 6)[0] -                              (p2 - stride + 9)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHorizontal,The following statement contains a magic number: nPixel = ((p2 + stride - 9)[0] +                              (p2 + stride - 6)[0] +                              (p2 + stride - 3)[0] +                              (p2 + stride)[0] +                              (p2 + stride + 3)[0] +                              (p2 + stride + 6)[0] +                              (p2 + stride + 9)[0] -                              (p2 - stride - 9)[0] -                              (p2 - stride - 6)[0] -                              (p2 - stride - 3)[0] -                              (p2 - stride)[0] -                              (p2 - stride + 3)[0] -                              (p2 - stride + 6)[0] -                              (p2 - stride + 9)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHorizontal,The following statement contains a magic number: nPixel = 255;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHorizontal,The following statement contains a magic number: nPixel > 255
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHorizontal,The following statement contains a magic number: x < nWidth - 9
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHorizontal,The following statement contains a magic number: p += 9 + nOffset;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHorizontal,The following statement contains a magic number: p2 += 9 + nOffset;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectVertical,The following statement contains a magic number: int nOffset = stride - b.Width * 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectVertical,The following statement contains a magic number: int nWidth = b.Width * 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectVertical,The following statement contains a magic number: int nStride2 = stride * 2;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectVertical,The following statement contains a magic number: int nStride3 = stride * 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectVertical,The following statement contains a magic number: p += 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectVertical,The following statement contains a magic number: p2 += 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectVertical,The following statement contains a magic number: nPixel = ((p2 + nStride3 + 3)[0] +                              (p2 + nStride2 + 3)[0] +                              (p2 + stride + 3)[0] +                              (p2 + 3)[0] +                              (p2 - stride + 3)[0] +                              (p2 - nStride2 + 3)[0] +                              (p2 - nStride3 + 3)[0] -                              (p2 + nStride3 - 3)[0] -                              (p2 + nStride2 - 3)[0] -                              (p2 + stride - 3)[0] -                              (p2 - 3)[0] -                              (p2 - stride - 3)[0] -                              (p2 - nStride2 - 3)[0] -                              (p2 - nStride3 - 3)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectVertical,The following statement contains a magic number: nPixel = ((p2 + nStride3 + 3)[0] +                              (p2 + nStride2 + 3)[0] +                              (p2 + stride + 3)[0] +                              (p2 + 3)[0] +                              (p2 - stride + 3)[0] +                              (p2 - nStride2 + 3)[0] +                              (p2 - nStride3 + 3)[0] -                              (p2 + nStride3 - 3)[0] -                              (p2 + nStride2 - 3)[0] -                              (p2 + stride - 3)[0] -                              (p2 - 3)[0] -                              (p2 - stride - 3)[0] -                              (p2 - nStride2 - 3)[0] -                              (p2 - nStride3 - 3)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectVertical,The following statement contains a magic number: nPixel = ((p2 + nStride3 + 3)[0] +                              (p2 + nStride2 + 3)[0] +                              (p2 + stride + 3)[0] +                              (p2 + 3)[0] +                              (p2 - stride + 3)[0] +                              (p2 - nStride2 + 3)[0] +                              (p2 - nStride3 + 3)[0] -                              (p2 + nStride3 - 3)[0] -                              (p2 + nStride2 - 3)[0] -                              (p2 + stride - 3)[0] -                              (p2 - 3)[0] -                              (p2 - stride - 3)[0] -                              (p2 - nStride2 - 3)[0] -                              (p2 - nStride3 - 3)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectVertical,The following statement contains a magic number: nPixel = ((p2 + nStride3 + 3)[0] +                              (p2 + nStride2 + 3)[0] +                              (p2 + stride + 3)[0] +                              (p2 + 3)[0] +                              (p2 - stride + 3)[0] +                              (p2 - nStride2 + 3)[0] +                              (p2 - nStride3 + 3)[0] -                              (p2 + nStride3 - 3)[0] -                              (p2 + nStride2 - 3)[0] -                              (p2 + stride - 3)[0] -                              (p2 - 3)[0] -                              (p2 - stride - 3)[0] -                              (p2 - nStride2 - 3)[0] -                              (p2 - nStride3 - 3)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectVertical,The following statement contains a magic number: nPixel = ((p2 + nStride3 + 3)[0] +                              (p2 + nStride2 + 3)[0] +                              (p2 + stride + 3)[0] +                              (p2 + 3)[0] +                              (p2 - stride + 3)[0] +                              (p2 - nStride2 + 3)[0] +                              (p2 - nStride3 + 3)[0] -                              (p2 + nStride3 - 3)[0] -                              (p2 + nStride2 - 3)[0] -                              (p2 + stride - 3)[0] -                              (p2 - 3)[0] -                              (p2 - stride - 3)[0] -                              (p2 - nStride2 - 3)[0] -                              (p2 - nStride3 - 3)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectVertical,The following statement contains a magic number: nPixel = ((p2 + nStride3 + 3)[0] +                              (p2 + nStride2 + 3)[0] +                              (p2 + stride + 3)[0] +                              (p2 + 3)[0] +                              (p2 - stride + 3)[0] +                              (p2 - nStride2 + 3)[0] +                              (p2 - nStride3 + 3)[0] -                              (p2 + nStride3 - 3)[0] -                              (p2 + nStride2 - 3)[0] -                              (p2 + stride - 3)[0] -                              (p2 - 3)[0] -                              (p2 - stride - 3)[0] -                              (p2 - nStride2 - 3)[0] -                              (p2 - nStride3 - 3)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectVertical,The following statement contains a magic number: nPixel = ((p2 + nStride3 + 3)[0] +                              (p2 + nStride2 + 3)[0] +                              (p2 + stride + 3)[0] +                              (p2 + 3)[0] +                              (p2 - stride + 3)[0] +                              (p2 - nStride2 + 3)[0] +                              (p2 - nStride3 + 3)[0] -                              (p2 + nStride3 - 3)[0] -                              (p2 + nStride2 - 3)[0] -                              (p2 + stride - 3)[0] -                              (p2 - 3)[0] -                              (p2 - stride - 3)[0] -                              (p2 - nStride2 - 3)[0] -                              (p2 - nStride3 - 3)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectVertical,The following statement contains a magic number: nPixel = ((p2 + nStride3 + 3)[0] +                              (p2 + nStride2 + 3)[0] +                              (p2 + stride + 3)[0] +                              (p2 + 3)[0] +                              (p2 - stride + 3)[0] +                              (p2 - nStride2 + 3)[0] +                              (p2 - nStride3 + 3)[0] -                              (p2 + nStride3 - 3)[0] -                              (p2 + nStride2 - 3)[0] -                              (p2 + stride - 3)[0] -                              (p2 - 3)[0] -                              (p2 - stride - 3)[0] -                              (p2 - nStride2 - 3)[0] -                              (p2 - nStride3 - 3)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectVertical,The following statement contains a magic number: nPixel = ((p2 + nStride3 + 3)[0] +                              (p2 + nStride2 + 3)[0] +                              (p2 + stride + 3)[0] +                              (p2 + 3)[0] +                              (p2 - stride + 3)[0] +                              (p2 - nStride2 + 3)[0] +                              (p2 - nStride3 + 3)[0] -                              (p2 + nStride3 - 3)[0] -                              (p2 + nStride2 - 3)[0] -                              (p2 + stride - 3)[0] -                              (p2 - 3)[0] -                              (p2 - stride - 3)[0] -                              (p2 - nStride2 - 3)[0] -                              (p2 - nStride3 - 3)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectVertical,The following statement contains a magic number: nPixel = ((p2 + nStride3 + 3)[0] +                              (p2 + nStride2 + 3)[0] +                              (p2 + stride + 3)[0] +                              (p2 + 3)[0] +                              (p2 - stride + 3)[0] +                              (p2 - nStride2 + 3)[0] +                              (p2 - nStride3 + 3)[0] -                              (p2 + nStride3 - 3)[0] -                              (p2 + nStride2 - 3)[0] -                              (p2 + stride - 3)[0] -                              (p2 - 3)[0] -                              (p2 - stride - 3)[0] -                              (p2 - nStride2 - 3)[0] -                              (p2 - nStride3 - 3)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectVertical,The following statement contains a magic number: nPixel = ((p2 + nStride3 + 3)[0] +                              (p2 + nStride2 + 3)[0] +                              (p2 + stride + 3)[0] +                              (p2 + 3)[0] +                              (p2 - stride + 3)[0] +                              (p2 - nStride2 + 3)[0] +                              (p2 - nStride3 + 3)[0] -                              (p2 + nStride3 - 3)[0] -                              (p2 + nStride2 - 3)[0] -                              (p2 + stride - 3)[0] -                              (p2 - 3)[0] -                              (p2 - stride - 3)[0] -                              (p2 - nStride2 - 3)[0] -                              (p2 - nStride3 - 3)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectVertical,The following statement contains a magic number: nPixel = ((p2 + nStride3 + 3)[0] +                              (p2 + nStride2 + 3)[0] +                              (p2 + stride + 3)[0] +                              (p2 + 3)[0] +                              (p2 - stride + 3)[0] +                              (p2 - nStride2 + 3)[0] +                              (p2 - nStride3 + 3)[0] -                              (p2 + nStride3 - 3)[0] -                              (p2 + nStride2 - 3)[0] -                              (p2 + stride - 3)[0] -                              (p2 - 3)[0] -                              (p2 - stride - 3)[0] -                              (p2 - nStride2 - 3)[0] -                              (p2 - nStride3 - 3)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectVertical,The following statement contains a magic number: nPixel = ((p2 + nStride3 + 3)[0] +                              (p2 + nStride2 + 3)[0] +                              (p2 + stride + 3)[0] +                              (p2 + 3)[0] +                              (p2 - stride + 3)[0] +                              (p2 - nStride2 + 3)[0] +                              (p2 - nStride3 + 3)[0] -                              (p2 + nStride3 - 3)[0] -                              (p2 + nStride2 - 3)[0] -                              (p2 + stride - 3)[0] -                              (p2 - 3)[0] -                              (p2 - stride - 3)[0] -                              (p2 - nStride2 - 3)[0] -                              (p2 - nStride3 - 3)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectVertical,The following statement contains a magic number: nPixel = ((p2 + nStride3 + 3)[0] +                              (p2 + nStride2 + 3)[0] +                              (p2 + stride + 3)[0] +                              (p2 + 3)[0] +                              (p2 - stride + 3)[0] +                              (p2 - nStride2 + 3)[0] +                              (p2 - nStride3 + 3)[0] -                              (p2 + nStride3 - 3)[0] -                              (p2 + nStride2 - 3)[0] -                              (p2 + stride - 3)[0] -                              (p2 - 3)[0] -                              (p2 - stride - 3)[0] -                              (p2 - nStride2 - 3)[0] -                              (p2 - nStride3 - 3)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectVertical,The following statement contains a magic number: nPixel = 255;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectVertical,The following statement contains a magic number: nPixel > 255
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectVertical,The following statement contains a magic number: x < nWidth - 3
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectVertical,The following statement contains a magic number: p += 3 + nOffset;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectVertical,The following statement contains a magic number: p2 += 3 + nOffset;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectVertical,The following statement contains a magic number: y < b.Height - 3
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHomogenity,The following statement contains a magic number: int nOffset = stride - b.Width * 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHomogenity,The following statement contains a magic number: int nWidth = b.Width * 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHomogenity,The following statement contains a magic number: p += 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHomogenity,The following statement contains a magic number: p2 += 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHomogenity,The following statement contains a magic number: nPixelMax = Math.Abs(p2[0] - (p2 + stride - 3)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHomogenity,The following statement contains a magic number: nPixel = Math.Abs(p2[0] - (p2 + stride + 3)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHomogenity,The following statement contains a magic number: nPixel = Math.Abs(p2[0] - (p2 - stride - 3)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHomogenity,The following statement contains a magic number: nPixel = Math.Abs(p2[0] - (p2 - stride + 3)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHomogenity,The following statement contains a magic number: x < nWidth - 3
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHomogenity,The following statement contains a magic number: p += 3 + nOffset;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectHomogenity,The following statement contains a magic number: p2 += 3 + nOffset;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectDifference,The following statement contains a magic number: int nOffset = stride - b.Width * 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectDifference,The following statement contains a magic number: int nWidth = b.Width * 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectDifference,The following statement contains a magic number: p += 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectDifference,The following statement contains a magic number: p2 += 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectDifference,The following statement contains a magic number: nPixelMax = Math.Abs((p2 - stride + 3)[0] - (p2 + stride - 3)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectDifference,The following statement contains a magic number: nPixelMax = Math.Abs((p2 - stride + 3)[0] - (p2 + stride - 3)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectDifference,The following statement contains a magic number: nPixel = Math.Abs((p2 + stride + 3)[0] - (p2 - stride - 3)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectDifference,The following statement contains a magic number: nPixel = Math.Abs((p2 + stride + 3)[0] - (p2 - stride - 3)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectDifference,The following statement contains a magic number: nPixel = Math.Abs((p2 + 3)[0] - (p2 - 3)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectDifference,The following statement contains a magic number: nPixel = Math.Abs((p2 + 3)[0] - (p2 - 3)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectDifference,The following statement contains a magic number: x < nWidth - 3
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectDifference,The following statement contains a magic number: p += 3 + nOffset;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectDifference,The following statement contains a magic number: p2 += 3 + nOffset;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeEnhance,The following statement contains a magic number: int nOffset = stride - b.Width * 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeEnhance,The following statement contains a magic number: int nWidth = b.Width * 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeEnhance,The following statement contains a magic number: p += 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeEnhance,The following statement contains a magic number: p2 += 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeEnhance,The following statement contains a magic number: nPixelMax = Math.Abs((p2 - stride + 3)[0] - (p2 + stride - 3)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeEnhance,The following statement contains a magic number: nPixelMax = Math.Abs((p2 - stride + 3)[0] - (p2 + stride - 3)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeEnhance,The following statement contains a magic number: nPixel = Math.Abs((p2 + stride + 3)[0] - (p2 - stride - 3)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeEnhance,The following statement contains a magic number: nPixel = Math.Abs((p2 + stride + 3)[0] - (p2 - stride - 3)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeEnhance,The following statement contains a magic number: nPixel = Math.Abs((p2 + 3)[0] - (p2 - 3)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeEnhance,The following statement contains a magic number: nPixel = Math.Abs((p2 + 3)[0] - (p2 - 3)[0]);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeEnhance,The following statement contains a magic number: x < nWidth - 3
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeEnhance,The following statement contains a magic number: p += nOffset + 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeEnhance,The following statement contains a magic number: p2 += nOffset + 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Resize,The following statement contains a magic number: b.SetPixel(x' y' System.Drawing.Color.FromArgb(255' red' green' blue));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAbs,The following statement contains a magic number: int nOffset = bmData.Stride - b.Width * 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAbs,The following statement contains a magic number: p[0] = pSrc[(yOffset * scanline) + (xOffset * 3)];
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAbs,The following statement contains a magic number: p[1] = pSrc[(yOffset * scanline) + (xOffset * 3) + 1];
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAbs,The following statement contains a magic number: p[2] = pSrc[(yOffset * scanline) + (xOffset * 3) + 2];
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAbs,The following statement contains a magic number: p[2] = pSrc[(yOffset * scanline) + (xOffset * 3) + 2];
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAbs,The following statement contains a magic number: p[2] = pSrc[(yOffset * scanline) + (xOffset * 3) + 2];
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAbs,The following statement contains a magic number: p += 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilter,The following statement contains a magic number: int nOffset = bmData.Stride - b.Width * 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilter,The following statement contains a magic number: p[0] = pSrc[((y + yOffset) * scanline) + ((x + xOffset) * 3)];
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilter,The following statement contains a magic number: p[1] = pSrc[((y + yOffset) * scanline) + ((x + xOffset) * 3) + 1];
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilter,The following statement contains a magic number: p[2] = pSrc[((y + yOffset) * scanline) + ((x + xOffset) * 3) + 2];
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilter,The following statement contains a magic number: p[2] = pSrc[((y + yOffset) * scanline) + ((x + xOffset) * 3) + 2];
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilter,The following statement contains a magic number: p[2] = pSrc[((y + yOffset) * scanline) + ((x + xOffset) * 3) + 2];
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilter,The following statement contains a magic number: p += 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAntiAlias,The following statement contains a magic number: int nOffset = bmData.Stride - b.Width * 3;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAntiAlias,The following statement contains a magic number: p1 = (Byte)(one_minus_x * (double)(pSrc[floor_y * scanline + floor_x * 3]) +                                  fraction_x * (double)(pSrc[floor_y * scanline + ceil_x * 3]));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAntiAlias,The following statement contains a magic number: p1 = (Byte)(one_minus_x * (double)(pSrc[floor_y * scanline + floor_x * 3]) +                                  fraction_x * (double)(pSrc[floor_y * scanline + ceil_x * 3]));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAntiAlias,The following statement contains a magic number: p2 = (Byte)(one_minus_x * (double)(pSrc[ceil_y * scanline + floor_x * 3]) +                                  fraction_x * (double)(pSrc[ceil_y * scanline + 3 * ceil_x]));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAntiAlias,The following statement contains a magic number: p2 = (Byte)(one_minus_x * (double)(pSrc[ceil_y * scanline + floor_x * 3]) +                                  fraction_x * (double)(pSrc[ceil_y * scanline + 3 * ceil_x]));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAntiAlias,The following statement contains a magic number: p[x * 3 + y * scanline] = (Byte)(one_minus_y * (double)(p1) + fraction_y * (double)(p2));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAntiAlias,The following statement contains a magic number: p1 = (Byte)(one_minus_x * (double)(pSrc[floor_y * scanline + floor_x * 3 + 1]) +                                  fraction_x * (double)(pSrc[floor_y * scanline + ceil_x * 3 + 1]));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAntiAlias,The following statement contains a magic number: p1 = (Byte)(one_minus_x * (double)(pSrc[floor_y * scanline + floor_x * 3 + 1]) +                                  fraction_x * (double)(pSrc[floor_y * scanline + ceil_x * 3 + 1]));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAntiAlias,The following statement contains a magic number: p2 = (Byte)(one_minus_x * (double)(pSrc[ceil_y * scanline + floor_x * 3 + 1]) +                                  fraction_x * (double)(pSrc[ceil_y * scanline + 3 * ceil_x + 1]));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAntiAlias,The following statement contains a magic number: p2 = (Byte)(one_minus_x * (double)(pSrc[ceil_y * scanline + floor_x * 3 + 1]) +                                  fraction_x * (double)(pSrc[ceil_y * scanline + 3 * ceil_x + 1]));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAntiAlias,The following statement contains a magic number: p[x * 3 + y * scanline + 1] = (Byte)(one_minus_y * (double)(p1) + fraction_y * (double)(p2));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAntiAlias,The following statement contains a magic number: p1 = (Byte)(one_minus_x * (double)(pSrc[floor_y * scanline + floor_x * 3 + 2]) +                                  fraction_x * (double)(pSrc[floor_y * scanline + ceil_x * 3 + 2]));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAntiAlias,The following statement contains a magic number: p1 = (Byte)(one_minus_x * (double)(pSrc[floor_y * scanline + floor_x * 3 + 2]) +                                  fraction_x * (double)(pSrc[floor_y * scanline + ceil_x * 3 + 2]));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAntiAlias,The following statement contains a magic number: p1 = (Byte)(one_minus_x * (double)(pSrc[floor_y * scanline + floor_x * 3 + 2]) +                                  fraction_x * (double)(pSrc[floor_y * scanline + ceil_x * 3 + 2]));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAntiAlias,The following statement contains a magic number: p1 = (Byte)(one_minus_x * (double)(pSrc[floor_y * scanline + floor_x * 3 + 2]) +                                  fraction_x * (double)(pSrc[floor_y * scanline + ceil_x * 3 + 2]));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAntiAlias,The following statement contains a magic number: p2 = (Byte)(one_minus_x * (double)(pSrc[ceil_y * scanline + floor_x * 3 + 2]) +                                  fraction_x * (double)(pSrc[ceil_y * scanline + 3 * ceil_x + 2]));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAntiAlias,The following statement contains a magic number: p2 = (Byte)(one_minus_x * (double)(pSrc[ceil_y * scanline + floor_x * 3 + 2]) +                                  fraction_x * (double)(pSrc[ceil_y * scanline + 3 * ceil_x + 2]));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAntiAlias,The following statement contains a magic number: p2 = (Byte)(one_minus_x * (double)(pSrc[ceil_y * scanline + floor_x * 3 + 2]) +                                  fraction_x * (double)(pSrc[ceil_y * scanline + 3 * ceil_x + 2]));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAntiAlias,The following statement contains a magic number: p2 = (Byte)(one_minus_x * (double)(pSrc[ceil_y * scanline + floor_x * 3 + 2]) +                                  fraction_x * (double)(pSrc[ceil_y * scanline + 3 * ceil_x + 2]));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAntiAlias,The following statement contains a magic number: p[x * 3 + y * scanline + 2] = (Byte)(one_minus_y * (double)(p1) + fraction_y * (double)(p2));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,OffsetFilterAntiAlias,The following statement contains a magic number: p[x * 3 + y * scanline + 2] = (Byte)(one_minus_y * (double)(p1) + fraction_y * (double)(p2));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,RandomJitter,The following statement contains a magic number: short nHalf = (short)Math.Floor(nDegree / 2.0);
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Swirl,The following statement contains a magic number: mid.X = nWidth / 2;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Swirl,The following statement contains a magic number: mid.Y = nHeight / 2;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Sphere,The following statement contains a magic number: mid.X = nWidth / 2;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Sphere,The following statement contains a magic number: mid.Y = nHeight / 2;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,TimeWarp,The following statement contains a magic number: mid.X = nWidth / 2;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,TimeWarp,The following statement contains a magic number: mid.Y = nHeight / 2;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Moire,The following statement contains a magic number: mid.X = nWidth / 2;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Moire,The following statement contains a magic number: mid.Y = nHeight / 2;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Water,The following statement contains a magic number: mid.X = nWidth / 2;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Water,The following statement contains a magic number: mid.Y = nHeight / 2;
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Water,The following statement contains a magic number: xo = ((double)nWave * Math.Sin(2.0 * 3.1415 * (float)y / 128.0));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Water,The following statement contains a magic number: xo = ((double)nWave * Math.Sin(2.0 * 3.1415 * (float)y / 128.0));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Water,The following statement contains a magic number: xo = ((double)nWave * Math.Sin(2.0 * 3.1415 * (float)y / 128.0));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Water,The following statement contains a magic number: yo = ((double)nWave * Math.Cos(2.0 * 3.1415 * (float)x / 128.0));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Water,The following statement contains a magic number: yo = ((double)nWave * Math.Cos(2.0 * 3.1415 * (float)x / 128.0));
Magic Number,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,Water,The following statement contains a magic number: yo = ((double)nWave * Math.Cos(2.0 * 3.1415 * (float)x / 128.0));
Magic Number,LibImages,ImageResize,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\ImageResize.cs,ResizeBlackBar,The following statement contains a magic number: startY = (height - destHeight) / 2;
Missing Default,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectConvolution,The following switch statement is missing a default case: switch (nType)              {                  case EDGE_DETECT_SOBEL:                      m.SetAll(0);                      m.TopLeft = m.BottomLeft = 1;                      m.TopRight = m.BottomRight = -1;                      m.MidLeft = 2;                      m.MidRight = -2;                      m.Offset = 0;                      break;                  case EDGE_DETECT_PREWITT:                      m.SetAll(0);                      m.TopLeft = m.MidLeft = m.BottomLeft = -1;                      m.TopRight = m.MidRight = m.BottomRight = 1;                      m.Offset = 0;                      break;                  case EDGE_DETECT_KIRSH:                      m.SetAll(-3);                      m.Pixel = 0;                      m.TopLeft = m.MidLeft = m.BottomLeft = 5;                      m.Offset = 0;                      break;              }
Missing Default,LibImages,BitmapFilter,D:\research\architectureSmells\repos\majorsilence_MPlayerControl\LibImages\BitmapFilters.cs,EdgeDetectConvolution,The following switch statement is missing a default case: switch (nType)              {                  case EDGE_DETECT_SOBEL:                      m.SetAll(0);                      m.TopLeft = m.TopRight = 1;                      m.BottomLeft = m.BottomRight = -1;                      m.TopMid = 2;                      m.BottomMid = -2;                      m.Offset = 0;                      break;                  case EDGE_DETECT_PREWITT:                      m.SetAll(0);                      m.BottomLeft = m.BottomMid = m.BottomRight = -1;                      m.TopLeft = m.TopMid = m.TopRight = 1;                      m.Offset = 0;                      break;                  case EDGE_DETECT_KIRSH:                      m.SetAll(-3);                      m.Pixel = 0;                      m.BottomLeft = m.BottomMid = m.BottomRight = 5;                      m.Offset = 0;                      break;              }
