Implementation smell,Namespace,Class,File,Method,Description
Long Method,PopForums.Mvc.Areas.Forums.TagHelpers,PagerLinksTagHelper,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\TagHelpers\PagerLinksTagHelper.cs,Process,The method has 139 lines of code.
Complex Method,PopForums.Mvc.Areas.Forums.Controllers,AccountController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\AccountController.cs,ValidateSignupData,Cyclomatic complexity of the method is 9
Complex Method,PopForums.Mvc.Areas.Forums.Controllers,ForumController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\ForumController.cs,Topic,Cyclomatic complexity of the method is 13
Complex Method,PopForums.Mvc.Areas.Forums.Controllers,ForumController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\ForumController.cs,PostReply,Cyclomatic complexity of the method is 11
Complex Method,PopForums.Mvc.Areas.Forums.Controllers,ForumController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\ForumController.cs,PostReply,Cyclomatic complexity of the method is 11
Complex Method,PopForums.Mvc.Areas.Forums.TagHelpers,PagerLinksTagHelper,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\TagHelpers\PagerLinksTagHelper.cs,Process,Cyclomatic complexity of the method is 29
Long Parameter List,PopForums.Mvc.Areas.Forums.Controllers,AccountController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\AccountController.cs,AccountController,The method has 16 parameters. Parameters: userService' profileService' newAccountMailer' settingsManager' postService' topicService' forumService' lastReadService' clientSettingsMapper' userEmailer' imageService' feedService' userAwardService' externalUserAssociationManager' userRetrievalShim' authenticationSchemeProvider
Long Parameter List,PopForums.Mvc.Areas.Forums.Controllers,AdminController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\AdminController.cs,AdminController,The method has 18 parameters. Parameters: userService' profileService' settingsManager' categoryService' forumService' searchService' securityLogService' errorLog' banService' modLogService' ipHistoryService' imageService' mailingListService' eventDefinitionService' awardDefinitionService' eventPublisher' userRetrievalShim' serviceHeartbeat
Long Parameter List,PopForums.Mvc.Areas.Forums.Controllers,AdminController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\AdminController.cs,AddForum,The method has 7 parameters. Parameters: categoryID' title' description' isVisible' isArchived' forumAdapterName' isQAForum
Long Parameter List,PopForums.Mvc.Areas.Forums.Controllers,AdminController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\AdminController.cs,EditForum,The method has 8 parameters. Parameters: id' categoryID' title' description' isVisible' isArchived' forumAdapterName' isQAForum
Long Parameter List,PopForums.Mvc.Areas.Forums.Controllers,FavoritesController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\FavoritesController.cs,FavoritesController,The method has 5 parameters. Parameters: favoriteTopicService' forumService' lastReadService' topicService' userRetrievalShim
Long Parameter List,PopForums.Mvc.Areas.Forums.Controllers,ForumController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\ForumController.cs,ForumController,The method has 11 parameters. Parameters: settingsManager' forumService' topicService' postService' topicViewCountService' subService' lastReadService' favoriteTopicService' profileService' mobileDetectionWrapper' userRetrievalShim
Long Parameter List,PopForums.Mvc.Areas.Forums.Controllers,ForumController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\ForumController.cs,ComposeTopicContainer,The method has 11 parameters. Parameters: topic' forum' permissionContext' isSubscribed' posts' pagerContext' isFavorite' signatures' avatars' votedPostIDs' lastreadTime
Long Parameter List,PopForums.Mvc.Areas.Forums.Controllers,ModeratorController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\ModeratorController.cs,ModeratorController,The method has 5 parameters. Parameters: topicService' forumService' postService' moderationLogService' userRetrievalShim
Long Parameter List,PopForums.Mvc.Areas.Forums.Controllers,SubscriptionController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\SubscriptionController.cs,SubscriptionController,The method has 6 parameters. Parameters: subService' topicService' userService' lastReadService' forumService' userRetrievalShim
Long Parameter List,PopForums.Mvc.Areas.Forums.Extensions,Logger,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Extensions\Logger.cs,Log,The method has 5 parameters. Parameters: logLevel' eventId' state' exception' formatter
Long Parameter List,PopForums.Mvc.Areas.Forums,ForumRouteConstraint,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\ForumRouteConstraint.cs,Match,The method has 5 parameters. Parameters: httpContext' route' routeKey' values' routeDirection
Long Parameter List,PopForums.Mvc.Areas.Forums.Messaging,Broker,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Messaging\Broker.cs,Broker,The method has 6 parameters. Parameters: timeFormattingService' forumRepo' topicHubContext' feedHubContext' forumsHubContext' recentHubContext
Long Identifier,PopForums.Mvc.Areas.Forums.Controllers,AccountController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\AccountController.cs,AccountController,The length of the parameter externalUserAssociationManager is 30.
Long Identifier,PopForums.Mvc.Areas.Forums.Controllers,AccountController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\AccountController.cs,,The length of the parameter _externalUserAssociationManager is 31.
Long Identifier,PopForums.Mvc.Areas.Forums.Controllers,AuthorizationController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\AuthorizationController.cs,AuthorizationController,The length of the parameter externalUserAssociationManager is 30.
Long Identifier,PopForums.Mvc.Areas.Forums.Controllers,AuthorizationController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\AuthorizationController.cs,,The length of the parameter _externalUserAssociationManager is 31.
Long Statement,PopForums.Mvc.Areas.Forums.Authorization,PopForumsUserAttribute,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Authorization\PopForumsUserAttribute.cs,OnAuthorization,The length of the statement  "			var attributes = controllerActionDescriptor.MethodInfo.GetCustomAttributes(typeof(PopForumsAuthorizationIgnoreAttribute)' false); " is 129.
Long Statement,PopForums.Mvc.Areas.Forums.Authorization,PopForumsUserAttribute,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Authorization\PopForumsUserAttribute.cs,OnActionExecuting,The length of the statement  "			if (filterContext.HttpContext.Response.StatusCode == StatusCodes.Status301MovedPermanently || filterContext.HttpContext.Response.StatusCode == StatusCodes.Status302Found) " is 170.
Long Statement,PopForums.Mvc.Areas.Forums.Authorization,PopForumsUserAttribute,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Authorization\PopForumsUserAttribute.cs,OnActionExecuting,The length of the statement  "			int.TryParse(filterContext.HttpContext.Request.Cookies[UserSessionService._sessionIDCookieName]' out var cookieSessionID); " is 122.
Long Statement,PopForums.Mvc.Areas.Forums.Authorization,PopForumsUserAttribute,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Authorization\PopForumsUserAttribute.cs,OnActionExecuting,The length of the statement  "			_userSessionService.ProcessUserRequest(user' sessionID' filterContext.HttpContext.Connection.RemoteIpAddress.ToString()'  " is 120.
Long Statement,PopForums.Mvc.Areas.Forums.Controllers,AccountController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\AccountController.cs,ChangePassword,The length of the statement  "			return View("Security"' new UserEditSecurity { NewEmail = String.Empty' NewEmailRetype = String.Empty' IsNewUserApproved = _settingsManager.Current.IsNewUserApproved }); " is 169.
Long Statement,PopForums.Mvc.Areas.Forums.Controllers,AccountController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\AccountController.cs,ChangeEmail,The length of the statement  "			return View("Security"' new UserEditSecurity { NewEmail = String.Empty' NewEmailRetype = String.Empty' IsNewUserApproved = _settingsManager.Current.IsNewUserApproved }); " is 169.
Long Statement,PopForums.Mvc.Areas.Forums.Controllers,AdminController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\AdminController.cs,EditUser,The length of the statement  "			_userService.EditUser(targetUser' userEdit' userEdit.DeleteAvatar' userEdit.DeleteImage' avatarFile' photoFile' HttpContext.Connection.RemoteIpAddress.ToString()' user); " is 169.
Long Statement,PopForums.Mvc.Areas.Forums.Controllers,AuthorizationController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\AuthorizationController.cs,ExternalLoginCallback,The length of the statement  "			var email = info.ExternalPrincipal.HasClaim(x => x.Type == ClaimTypes.Email) ? info.ExternalPrincipal.FindFirst(ClaimTypes.Email).Value : null; " is 143.
Long Statement,PopForums.Mvc.Areas.Forums.Controllers,AuthorizationController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\AuthorizationController.cs,ExternalLoginCallback,The length of the statement  "			var name = info.ExternalPrincipal.HasClaim(x => x.Type == ClaimTypes.Name) ? info.ExternalPrincipal.FindFirst(ClaimTypes.Name).Value : null; " is 140.
Long Statement,PopForums.Mvc.Areas.Forums.Controllers,ForumController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\ForumController.cs,Index,The length of the statement  "			var container = new ForumTopicContainer { Forum = forum' Topics = topics' PagerContext = pagerContext' PermissionContext = permissionContext }; " is 143.
Long Statement,PopForums.Mvc.Areas.Forums.Controllers,ForumController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\ForumController.cs,PostTopic,The length of the statement  "			var newPost = new NewPost { ItemID = forum.ForumID' IncludeSignature = profile.Signature.Length > 0' IsPlainText = _mobileDetectionWrapper.IsMobileDevice(HttpContext) || profile.IsPlainText' IsImageEnabled = _settingsManager.Current.AllowImages }; " is 247.
Long Statement,PopForums.Mvc.Areas.Forums.Controllers,ForumController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\ForumController.cs,PostTopic,The length of the statement  "				return Json(new BasicJsonMessage { Message = String.Format(Resources.PostWait' _settingsManager.Current.MinimumSecondsBetweenPosts)' Result = false }); " is 151.
Long Statement,PopForums.Mvc.Areas.Forums.Controllers,ForumController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\ForumController.cs,PostTopic,The length of the statement  "			var topic = _forumService.PostNewTopic(forum' user' permissionContext' newPost' HttpContext.Connection.RemoteIpAddress.ToString()' userProfileUrl' topicLinkGenerator); " is 167.
Long Statement,PopForums.Mvc.Areas.Forums.Controllers,ForumController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\ForumController.cs,PostTopic,The length of the statement  "			return Json(new BasicJsonMessage { Result = true' Redirect = urlHelper.RouteUrl(new { controller = "Forum"' action = "Topic"' id = topic.UrlName }) }); " is 151.
Long Statement,PopForums.Mvc.Areas.Forums.Controllers,ForumController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\ForumController.cs,Topic,The length of the statement  "				throw new Exception(String.Format("TopicID {0} references ForumID {1}' which does not exist."' topic.TopicID' topic.ForumID)); " is 126.
Long Statement,PopForums.Mvc.Areas.Forums.Controllers,ForumController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\ForumController.cs,Topic,The length of the statement  "			var container = ComposeTopicContainer(topic' forum' permissionContext' isSubscribed' posts' pagerContext' isFavorite' signatures' avatars' votedIDs' lastReadTime); " is 163.
Long Statement,PopForums.Mvc.Areas.Forums.Controllers,ForumController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\ForumController.cs,TopicPage,The length of the statement  "				throw new Exception(String.Format("TopicID {0} references ForumID {1}' which does not exist."' topic.TopicID' topic.ForumID)); " is 126.
Long Statement,PopForums.Mvc.Areas.Forums.Controllers,ForumController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\ForumController.cs,TopicPage,The length of the statement  "			var container = ComposeTopicContainer(topic' forum' permissionContext' false' posts' pagerContext' false' signatures' avatars' votedIDs' lastReadTime); " is 151.
Long Statement,PopForums.Mvc.Areas.Forums.Controllers,ForumController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\ForumController.cs,PostReply,The length of the statement  "				throw new Exception(String.Format("TopicID {0} references ForumID {1}' which does not exist."' topic.TopicID' topic.ForumID)); " is 126.
Long Statement,PopForums.Mvc.Areas.Forums.Controllers,ForumController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\ForumController.cs,PostReply,The length of the statement  "			var newPost = new NewPost { ItemID = topic.TopicID' Title = title' IncludeSignature = profile.Signature.Length > 0' IsPlainText = forcePlainText || profile.IsPlainText' IsImageEnabled = _settingsManager.Current.AllowImages' ParentPostID = replyID }; " is 249.
Long Statement,PopForums.Mvc.Areas.Forums.Controllers,ForumController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\ForumController.cs,PostReply,The length of the statement  "				return Json(new BasicJsonMessage { Message = String.Format(Resources.PostWait' _settingsManager.Current.MinimumSecondsBetweenPosts)' Result = false }); " is 151.
Long Statement,PopForums.Mvc.Areas.Forums.Controllers,ForumController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\ForumController.cs,PostReply,The length of the statement  "					return Json(new BasicJsonMessage { Message = "This reply attempt is being made to a post in another topic"' Result = false }); " is 126.
Long Statement,PopForums.Mvc.Areas.Forums.Controllers,ForumController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\ForumController.cs,PostReply,The length of the statement  "				u => this.FullUrlHelper("Unsubscribe"' SubscriptionController.Name' new { topicID = topic.TopicID' authKey = u.AuthorizationKey }); " is 131.
Long Statement,PopForums.Mvc.Areas.Forums.Controllers,ForumController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\ForumController.cs,PostReply,The length of the statement  "			var post = _topicService.PostReply(topic' user' newPost.ParentPostID' HttpContext.Connection.RemoteIpAddress.ToString()' false' newPost' DateTime.UtcNow' topicLink' unsubscribeLinkGenerator' userProfileUrl' postLinkGenerator); " is 226.
Long Statement,PopForums.Mvc.Areas.Forums.Controllers,ForumController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\ForumController.cs,PostReply,The length of the statement  "			return Json(new BasicJsonMessage { Result = true' Redirect = urlHelper.RouteUrl(new { controller = "Forum"' action = "PostLink"' id = post.PostID }) }); " is 152.
Long Statement,PopForums.Mvc.Areas.Forums.Controllers,ForumController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\ForumController.cs,Post,The length of the statement  "			return View("PostItem"' new PostItemContainer { Post = post' Avatars = avatars' Signatures = signatures' VotedPostIDs = votedPostIDs' Topic = topic' User = user }); " is 164.
Long Statement,PopForums.Mvc.Areas.Forums.Controllers,ForumController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\ForumController.cs,TopicPartial,The length of the statement  "				throw new Exception(String.Format("TopicID {0} references ForumID {1}' which does not exist."' topic.TopicID' topic.ForumID)); " is 126.
Long Statement,PopForums.Mvc.Areas.Forums.Controllers,ForumController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\ForumController.cs,TopicPartial,The length of the statement  "			var container = ComposeTopicContainer(topic' forum' permissionContext' false' posts' pagerContext' false' signatures' avatars' votedIDs' lastReadTime); " is 151.
Long Statement,PopForums.Mvc.Areas.Forums.Controllers,ForumController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\ForumController.cs,ComposeTopicContainer,The length of the statement  "			return new TopicContainer { Forum = forum' Topic = topic' Posts = posts' PagerContext = pagerContext' PermissionContext = permissionContext' IsSubscribed = isSubscribed' IsFavorite = isFavorite' Signatures = signatures' Avatars = avatars' VotedPostIDs = votedPostIDs' LastReadTime = lastreadTime }; " is 298.
Long Statement,PopForums.Mvc.Areas.Forums.Controllers,ImageController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\ImageController.cs,SetupImageResult,The length of the statement  "				var couldParse = DateTime.TryParseExact(Request.Headers["If-Modified-Since"]' "r"' provider' DateTimeStyles.None' out lastMod); " is 127.
Long Statement,PopForums.Mvc.Areas.Forums.Controllers,PrivateMessagesController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\PrivateMessagesController.cs,Index,The length of the statement  "			var privateMessages = _privateMessageService.GetPrivateMessages(user' PrivateMessageBoxType.Inbox' page' out pagerContext); " is 123.
Long Statement,PopForums.Mvc.Areas.Forums.Controllers,PrivateMessagesController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\PrivateMessagesController.cs,Archive,The length of the statement  "			var privateMessages = _privateMessageService.GetPrivateMessages(user' PrivateMessageBoxType.Archive' page' out pagerContext); " is 125.
Long Statement,PopForums.Mvc.Areas.Forums.Controllers,SearchController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\SearchController.cs,Index,The length of the statement  "			var container = new PagedTopicContainer { PagerContext = new PagerContext { PageCount = 0' PageIndex = 1 }' Topics = new List<Topic>() }; " is 137.
Long Statement,PopForums.Mvc.Areas.Forums.Extensions,AuthorizationOptionsExtensions,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Extensions\AuthorizationOptionsExtensions.cs,AddPopForumsPolicies,The length of the statement  "			options.AddPolicy(PermanentRoles.Admin' policy => policy.RequireClaim(PopForumsAuthorizationDefaults.ForumsClaimType' PermanentRoles.Admin)); " is 141.
Long Statement,PopForums.Mvc.Areas.Forums.Extensions,AuthorizationOptionsExtensions,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Extensions\AuthorizationOptionsExtensions.cs,AddPopForumsPolicies,The length of the statement  "			options.AddPolicy(PermanentRoles.Moderator' policy => policy.RequireClaim(PopForumsAuthorizationDefaults.ForumsClaimType' PermanentRoles.Moderator)); " is 149.
Long Statement,PopForums.Mvc.Areas.Forums.Extensions,ServiceCollections,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Extensions\ServiceCollections.cs,AddPopForumsMvc,The length of the statement  "				.AddCookie(PopForumsAuthorizationDefaults.AuthenticationScheme' option => option.ExpireTimeSpan = new TimeSpan(365' 0' 0' 0)); " is 126.
Long Statement,PopForums.Mvc.Areas.Forums.Messaging,Broker,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Messaging\Broker.cs,NotifyFeed,The length of the statement  "			var data = new { Message = message' Utc = new DateTime(DateTime.UtcNow.Ticks' DateTimeKind.Unspecified).ToString("o")' TimeStamp = Resources.LessThanMinute }; " is 158.
Long Statement,PopForums.Mvc.Areas.Forums.Messaging,Broker,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Messaging\Broker.cs,NotifyForumUpdate,The length of the statement  "			_forumsHubContext.Clients.All.InvokeAsync("notifyForumUpdate"' new { forum.ForumID' TopicCount = forum.TopicCount.ToString("N0")' PostCount = forum.PostCount.ToString("N0")' LastPostTime = _timeFormattingService.GetFormattedTime(forum.LastPostTime' null)' forum.LastPostName' Utc = forum.LastPostTime.ToString("o")' Image = "NewIndicator.png" }); " is 346.
Long Statement,PopForums.Mvc.Areas.Forums.TagHelpers,PagerLinksTagHelper,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\TagHelpers\PagerLinksTagHelper.cs,Process,The length of the statement  "				var firstRouteDictionary = new RouteValueDictionary(new { controller = ControllerName' action = ActionName' page = 1 }); " is 120.
Long Statement,PopForums.Mvc.Areas.Forums.TagHelpers,PagerLinksTagHelper,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\TagHelpers\PagerLinksTagHelper.cs,Process,The length of the statement  "					var previousRouteDictionary = new RouteValueDictionary(new { controller = ControllerName' action = ActionName' page = previousIndex }); " is 135.
Long Statement,PopForums.Mvc.Areas.Forums.TagHelpers,PagerLinksTagHelper,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\TagHelpers\PagerLinksTagHelper.cs,Process,The length of the statement  "					var previousLink = _htmlGenerator.GenerateActionLink(ViewContext' ""' ActionName' ControllerName' null' null' null' previousRouteDictionary' new { title = Resources.Previous' @class = "glyphicon glyphicon-chevron-left"' rel = "prev" }); " is 236.
Long Statement,PopForums.Mvc.Areas.Forums.TagHelpers,PagerLinksTagHelper,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\TagHelpers\PagerLinksTagHelper.cs,Process,The length of the statement  "						else builder.Append(String.Format("<li class=\"active {0}\"><span>{1} of {2}</span></li>"' CurrentTextClass' x' PagerContext.PageCount)); " is 137.
Long Statement,PopForums.Mvc.Areas.Forums.TagHelpers,PagerLinksTagHelper,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\TagHelpers\PagerLinksTagHelper.cs,Process,The length of the statement  "						var numericRouteDictionary = new RouteValueDictionary { { "controller"' ControllerName }' { "action"' ActionName }' { "page"' x } }; " is 132.
Long Statement,PopForums.Mvc.Areas.Forums.TagHelpers,PagerLinksTagHelper,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\TagHelpers\PagerLinksTagHelper.cs,Process,The length of the statement  "						var link = _htmlGenerator.GenerateActionLink(ViewContext' x.ToString()' ActionName' ControllerName' null' null' null' numericRouteDictionary' null); " is 148.
Long Statement,PopForums.Mvc.Areas.Forums.TagHelpers,PagerLinksTagHelper,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\TagHelpers\PagerLinksTagHelper.cs,Process,The length of the statement  "								builder.Append(String.Format("<li class=\"active\"><span>{0}-{1} of {2}</span></li>"' Low' High' PagerContext.PageCount)); " is 122.
Long Statement,PopForums.Mvc.Areas.Forums.TagHelpers,PagerLinksTagHelper,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\TagHelpers\PagerLinksTagHelper.cs,Process,The length of the statement  "							else builder.Append(String.Format("<li class=\"active {0}\"><span>{1}-{2} of {3}</span></li>"' CurrentTextClass' Low' High' PagerContext.PageCount)); " is 149.
Long Statement,PopForums.Mvc.Areas.Forums.TagHelpers,PagerLinksTagHelper,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\TagHelpers\PagerLinksTagHelper.cs,Process,The length of the statement  "						var numericRouteDictionary = new RouteValueDictionary { { "controller"' ControllerName }' { "action"' ActionName }' { "page"' x } }; " is 132.
Long Statement,PopForums.Mvc.Areas.Forums.TagHelpers,PagerLinksTagHelper,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\TagHelpers\PagerLinksTagHelper.cs,Process,The length of the statement  "						var link = _htmlGenerator.GenerateActionLink(ViewContext' x.ToString()' ActionName' ControllerName' null' null' null' numericRouteDictionary' null); " is 148.
Long Statement,PopForums.Mvc.Areas.Forums.TagHelpers,PagerLinksTagHelper,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\TagHelpers\PagerLinksTagHelper.cs,Process,The length of the statement  "					var nextRouteDictionary = new RouteValueDictionary(new { controller = ControllerName' action = ActionName' page = nextIndex }); " is 127.
Long Statement,PopForums.Mvc.Areas.Forums.TagHelpers,PagerLinksTagHelper,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\TagHelpers\PagerLinksTagHelper.cs,Process,The length of the statement  "					var nextLink = _htmlGenerator.GenerateActionLink(ViewContext' ""' ActionName' ControllerName' null' null' null' nextRouteDictionary' new { title = Resources.Next' @class = "glyphicon glyphicon-chevron-right"' rel = "next" }); " is 225.
Long Statement,PopForums.Mvc.Areas.Forums.TagHelpers,PagerLinksTagHelper,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\TagHelpers\PagerLinksTagHelper.cs,Process,The length of the statement  "				var lastRouteDictionary = new RouteValueDictionary(new { controller = ControllerName' action = ActionName' page = PagerContext.PageCount }); " is 140.
Long Statement,PopForums.Mvc.Areas.Forums.TagHelpers,PagerLinksTagHelper,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\TagHelpers\PagerLinksTagHelper.cs,Process,The length of the statement  "				var lastLink = _htmlGenerator.GenerateActionLink(ViewContext' ""' ActionName' ControllerName' null' null' null' lastRouteDictionary' new { title = Resources.Last' @class = "glyphicon glyphicon-step-forward"' rel = "next" }); " is 224.
Complex Conditional,PopForums.Mvc.Areas.Forums.Controllers,ForumController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\ForumController.cs,PostLink,The conditional expression  "post == null || (post.IsDeleted && (user == null || !user.IsInRole(PermanentRoles.Moderator)))"  is complex.
Magic Number,PopForums.Mvc.Areas.Forums.Controllers,AdminController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\AdminController.cs,AddForum,The following statement contains a magic number: _forumService.Create(categoryID' title' description' isVisible' isArchived' -2' forumAdapterName' isQAForum);
Magic Number,PopForums.Mvc.Areas.Forums.Controllers,AdminController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\AdminController.cs,ErrorLog,The following statement contains a magic number: var errors = _errorLogService.GetErrors(page' 20' out pagerContext);
Magic Number,PopForums.Mvc.Areas.Forums.Controllers,ImageController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\ImageController.cs,SetupImageResult,The following statement contains a magic number: if (!String.IsNullOrEmpty(Request.Headers["If-Modified-Since"]))  			{  				var provider = CultureInfo.InvariantCulture;  				DateTime lastMod;  				var couldParse = DateTime.TryParseExact(Request.Headers["If-Modified-Since"]' "r"' provider' DateTimeStyles.None' out lastMod);  				if (couldParse && lastMod == timeStamp.Value.AddMilliseconds(-timeStamp.Value.Millisecond))  				{  					Response.StatusCode = 304;  					return Content(String.Empty);  				}  			}
Magic Number,PopForums.Mvc.Areas.Forums.Controllers,SetupController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\SetupController.cs,Index,The following statement contains a magic number: var setupVariables = new SetupVariables  			{  				SmtpPort = 25'  				ServerDaylightSaving = true'  				ServerTimeZone = -5  			};
Magic Number,PopForums.Mvc.Areas.Forums.Controllers,SetupController,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Controllers\SetupController.cs,Index,The following statement contains a magic number: var setupVariables = new SetupVariables  			{  				SmtpPort = 25'  				ServerDaylightSaving = true'  				ServerTimeZone = -5  			};
Magic Number,PopForums.Mvc.Areas.Forums.Extensions,ServiceCollections,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Extensions\ServiceCollections.cs,AddPopForumsMvc,The following statement contains a magic number: var authenticationBuilder = services.AddAuthentication()  				.AddCookie(PopForumsAuthorizationDefaults.AuthenticationScheme' option => option.ExpireTimeSpan = new TimeSpan(365' 0' 0' 0));
Magic Number,PopForums.Mvc.Areas.Forums.Services,MobileDetectionWrapper,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\Services\MobileDetectionWrapper.cs,IsMobileBrowser,The following statement contains a magic number: if ((b.IsMatch(userAgent) || v.IsMatch(userAgent.ToString().Substring(0' 4))))  			{  				return true;  			}
Magic Number,PopForums.Mvc.Areas.Forums.TagHelpers,PagerLinksTagHelper,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\TagHelpers\PagerLinksTagHelper.cs,Process,The following statement contains a magic number: if (PagerContext.PageIndex != 1 && Low != 1)  			{  				// first page link  				builder.Append("<li>");  				var firstRouteDictionary = new RouteValueDictionary(new { controller = ControllerName' action = ActionName' page = 1 });  				if (RouteParameters != null)  					foreach (var item in RouteParameters)  						firstRouteDictionary.Add(item.Key' item.Value);  				var firstLink = _htmlGenerator.GenerateActionLink(ViewContext' ""' ActionName' ControllerName' null' null' null'  					firstRouteDictionary' new { title = Resources.First' @class = "glyphicon glyphicon-step-backward" });  				builder.Append(GetString(firstLink));  				builder.Append("</li>");  				if (PagerContext.PageIndex > 2)  				{  					// previous page link  					var previousIndex = PagerContext.PageIndex - 1;  					if (Low != 0)  						previousIndex = Low - 1;  					builder.Append("<li>");  					var previousRouteDictionary = new RouteValueDictionary(new { controller = ControllerName' action = ActionName' page = previousIndex });  					if (RouteParameters != null)  						foreach (var item in RouteParameters)  							previousRouteDictionary.Add(item.Key' item.Value);  					var previousLink = _htmlGenerator.GenerateActionLink(ViewContext' ""' ActionName' ControllerName' null' null' null' previousRouteDictionary' new { title = Resources.Previous' @class = "glyphicon glyphicon-chevron-left"' rel = "prev" });  					builder.Append(GetString(previousLink));  					builder.Append("</li>");  				}  			}
Magic Number,PopForums.Mvc.Areas.Forums.TagHelpers,PagerLinksTagHelper,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\TagHelpers\PagerLinksTagHelper.cs,Process,The following statement contains a magic number: if (Low == 0 || High == 0)  			{  				// not a multipage set of links used in partial page  				// calc low and high limits for numeric links  				var low = PagerContext.PageIndex - 1;  				var high = PagerContext.PageIndex + 3;  				if (low < 1) low = 1;  				if (high > PagerContext.PageCount) high = PagerContext.PageCount;  				if (high - low < 5) while ((high < low + 4) && high < PagerContext.PageCount) high++;  				if (high - low < 5) while ((low > high - 4) && low > 1) low--;  				for (var x = low; x < high + 1; x++)  				{  					// numeric links  					if (x == PagerContext.PageIndex)  					{  						if (String.IsNullOrEmpty(CurrentTextClass))  							builder.Append(String.Format("<li><span class=\"active\">{0} of {1}</span></li>"' x' PagerContext.PageCount));  						else builder.Append(String.Format("<li class=\"active {0}\"><span>{1} of {2}</span></li>"' CurrentTextClass' x' PagerContext.PageCount));  					}  					else  					{  						builder.Append("<li>");  						var numericRouteDictionary = new RouteValueDictionary { { "controller"' ControllerName }' { "action"' ActionName }' { "page"' x } };  						if (RouteParameters != null)  							foreach (var item in RouteParameters)  								numericRouteDictionary.Add(item.Key' item.Value);  						var link = _htmlGenerator.GenerateActionLink(ViewContext' x.ToString()' ActionName' ControllerName' null' null' null' numericRouteDictionary' null);  						builder.Append(GetString(link));  						builder.Append("</li>");  					}  				}  			}  			else  			{  				// multipage set of links used in partial page  				// calc low and high limits for numeric links  				var calcLow = PagerContext.PageIndex - 1;  				var calcHigh = PagerContext.PageIndex + 3;  				if (calcLow < 1) calcLow = 1;  				if (calcHigh > PagerContext.PageCount) calcHigh = PagerContext.PageCount;  				if (calcHigh - calcLow < 5) while ((calcHigh < calcLow + 4) && calcHigh < PagerContext.PageCount) calcHigh++;  				if (calcHigh - calcLow < 5) while ((calcLow > calcHigh - 4) && calcLow > 1) calcLow--;  				var isRangeRendered = false;  				for (var x = calcLow; x < calcHigh + 1; x++)  				{  					// numeric links  					if (x >= Low && x <= High)  					{  						if (!isRangeRendered)  						{  							isRangeRendered = true;  							if (String.IsNullOrEmpty(CurrentTextClass))  								builder.Append(String.Format("<li class=\"active\"><span>{0}-{1} of {2}</span></li>"' Low' High' PagerContext.PageCount));  							else builder.Append(String.Format("<li class=\"active {0}\"><span>{1}-{2} of {3}</span></li>"' CurrentTextClass' Low' High' PagerContext.PageCount));  						}  					}  					else  					{  						builder.Append("<li>");  						var numericRouteDictionary = new RouteValueDictionary { { "controller"' ControllerName }' { "action"' ActionName }' { "page"' x } };  						if (RouteParameters != null)  							foreach (var item in RouteParameters)  								numericRouteDictionary.Add(item.Key' item.Value);  						var link = _htmlGenerator.GenerateActionLink(ViewContext' x.ToString()' ActionName' ControllerName' null' null' null' numericRouteDictionary' null);  						builder.Append(GetString(link));  						builder.Append("</li>");  					}  				}  			}
Magic Number,PopForums.Mvc.Areas.Forums.TagHelpers,PagerLinksTagHelper,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\TagHelpers\PagerLinksTagHelper.cs,Process,The following statement contains a magic number: if (Low == 0 || High == 0)  			{  				// not a multipage set of links used in partial page  				// calc low and high limits for numeric links  				var low = PagerContext.PageIndex - 1;  				var high = PagerContext.PageIndex + 3;  				if (low < 1) low = 1;  				if (high > PagerContext.PageCount) high = PagerContext.PageCount;  				if (high - low < 5) while ((high < low + 4) && high < PagerContext.PageCount) high++;  				if (high - low < 5) while ((low > high - 4) && low > 1) low--;  				for (var x = low; x < high + 1; x++)  				{  					// numeric links  					if (x == PagerContext.PageIndex)  					{  						if (String.IsNullOrEmpty(CurrentTextClass))  							builder.Append(String.Format("<li><span class=\"active\">{0} of {1}</span></li>"' x' PagerContext.PageCount));  						else builder.Append(String.Format("<li class=\"active {0}\"><span>{1} of {2}</span></li>"' CurrentTextClass' x' PagerContext.PageCount));  					}  					else  					{  						builder.Append("<li>");  						var numericRouteDictionary = new RouteValueDictionary { { "controller"' ControllerName }' { "action"' ActionName }' { "page"' x } };  						if (RouteParameters != null)  							foreach (var item in RouteParameters)  								numericRouteDictionary.Add(item.Key' item.Value);  						var link = _htmlGenerator.GenerateActionLink(ViewContext' x.ToString()' ActionName' ControllerName' null' null' null' numericRouteDictionary' null);  						builder.Append(GetString(link));  						builder.Append("</li>");  					}  				}  			}  			else  			{  				// multipage set of links used in partial page  				// calc low and high limits for numeric links  				var calcLow = PagerContext.PageIndex - 1;  				var calcHigh = PagerContext.PageIndex + 3;  				if (calcLow < 1) calcLow = 1;  				if (calcHigh > PagerContext.PageCount) calcHigh = PagerContext.PageCount;  				if (calcHigh - calcLow < 5) while ((calcHigh < calcLow + 4) && calcHigh < PagerContext.PageCount) calcHigh++;  				if (calcHigh - calcLow < 5) while ((calcLow > calcHigh - 4) && calcLow > 1) calcLow--;  				var isRangeRendered = false;  				for (var x = calcLow; x < calcHigh + 1; x++)  				{  					// numeric links  					if (x >= Low && x <= High)  					{  						if (!isRangeRendered)  						{  							isRangeRendered = true;  							if (String.IsNullOrEmpty(CurrentTextClass))  								builder.Append(String.Format("<li class=\"active\"><span>{0}-{1} of {2}</span></li>"' Low' High' PagerContext.PageCount));  							else builder.Append(String.Format("<li class=\"active {0}\"><span>{1}-{2} of {3}</span></li>"' CurrentTextClass' Low' High' PagerContext.PageCount));  						}  					}  					else  					{  						builder.Append("<li>");  						var numericRouteDictionary = new RouteValueDictionary { { "controller"' ControllerName }' { "action"' ActionName }' { "page"' x } };  						if (RouteParameters != null)  							foreach (var item in RouteParameters)  								numericRouteDictionary.Add(item.Key' item.Value);  						var link = _htmlGenerator.GenerateActionLink(ViewContext' x.ToString()' ActionName' ControllerName' null' null' null' numericRouteDictionary' null);  						builder.Append(GetString(link));  						builder.Append("</li>");  					}  				}  			}
Magic Number,PopForums.Mvc.Areas.Forums.TagHelpers,PagerLinksTagHelper,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\TagHelpers\PagerLinksTagHelper.cs,Process,The following statement contains a magic number: if (Low == 0 || High == 0)  			{  				// not a multipage set of links used in partial page  				// calc low and high limits for numeric links  				var low = PagerContext.PageIndex - 1;  				var high = PagerContext.PageIndex + 3;  				if (low < 1) low = 1;  				if (high > PagerContext.PageCount) high = PagerContext.PageCount;  				if (high - low < 5) while ((high < low + 4) && high < PagerContext.PageCount) high++;  				if (high - low < 5) while ((low > high - 4) && low > 1) low--;  				for (var x = low; x < high + 1; x++)  				{  					// numeric links  					if (x == PagerContext.PageIndex)  					{  						if (String.IsNullOrEmpty(CurrentTextClass))  							builder.Append(String.Format("<li><span class=\"active\">{0} of {1}</span></li>"' x' PagerContext.PageCount));  						else builder.Append(String.Format("<li class=\"active {0}\"><span>{1} of {2}</span></li>"' CurrentTextClass' x' PagerContext.PageCount));  					}  					else  					{  						builder.Append("<li>");  						var numericRouteDictionary = new RouteValueDictionary { { "controller"' ControllerName }' { "action"' ActionName }' { "page"' x } };  						if (RouteParameters != null)  							foreach (var item in RouteParameters)  								numericRouteDictionary.Add(item.Key' item.Value);  						var link = _htmlGenerator.GenerateActionLink(ViewContext' x.ToString()' ActionName' ControllerName' null' null' null' numericRouteDictionary' null);  						builder.Append(GetString(link));  						builder.Append("</li>");  					}  				}  			}  			else  			{  				// multipage set of links used in partial page  				// calc low and high limits for numeric links  				var calcLow = PagerContext.PageIndex - 1;  				var calcHigh = PagerContext.PageIndex + 3;  				if (calcLow < 1) calcLow = 1;  				if (calcHigh > PagerContext.PageCount) calcHigh = PagerContext.PageCount;  				if (calcHigh - calcLow < 5) while ((calcHigh < calcLow + 4) && calcHigh < PagerContext.PageCount) calcHigh++;  				if (calcHigh - calcLow < 5) while ((calcLow > calcHigh - 4) && calcLow > 1) calcLow--;  				var isRangeRendered = false;  				for (var x = calcLow; x < calcHigh + 1; x++)  				{  					// numeric links  					if (x >= Low && x <= High)  					{  						if (!isRangeRendered)  						{  							isRangeRendered = true;  							if (String.IsNullOrEmpty(CurrentTextClass))  								builder.Append(String.Format("<li class=\"active\"><span>{0}-{1} of {2}</span></li>"' Low' High' PagerContext.PageCount));  							else builder.Append(String.Format("<li class=\"active {0}\"><span>{1}-{2} of {3}</span></li>"' CurrentTextClass' Low' High' PagerContext.PageCount));  						}  					}  					else  					{  						builder.Append("<li>");  						var numericRouteDictionary = new RouteValueDictionary { { "controller"' ControllerName }' { "action"' ActionName }' { "page"' x } };  						if (RouteParameters != null)  							foreach (var item in RouteParameters)  								numericRouteDictionary.Add(item.Key' item.Value);  						var link = _htmlGenerator.GenerateActionLink(ViewContext' x.ToString()' ActionName' ControllerName' null' null' null' numericRouteDictionary' null);  						builder.Append(GetString(link));  						builder.Append("</li>");  					}  				}  			}
Magic Number,PopForums.Mvc.Areas.Forums.TagHelpers,PagerLinksTagHelper,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\TagHelpers\PagerLinksTagHelper.cs,Process,The following statement contains a magic number: if (Low == 0 || High == 0)  			{  				// not a multipage set of links used in partial page  				// calc low and high limits for numeric links  				var low = PagerContext.PageIndex - 1;  				var high = PagerContext.PageIndex + 3;  				if (low < 1) low = 1;  				if (high > PagerContext.PageCount) high = PagerContext.PageCount;  				if (high - low < 5) while ((high < low + 4) && high < PagerContext.PageCount) high++;  				if (high - low < 5) while ((low > high - 4) && low > 1) low--;  				for (var x = low; x < high + 1; x++)  				{  					// numeric links  					if (x == PagerContext.PageIndex)  					{  						if (String.IsNullOrEmpty(CurrentTextClass))  							builder.Append(String.Format("<li><span class=\"active\">{0} of {1}</span></li>"' x' PagerContext.PageCount));  						else builder.Append(String.Format("<li class=\"active {0}\"><span>{1} of {2}</span></li>"' CurrentTextClass' x' PagerContext.PageCount));  					}  					else  					{  						builder.Append("<li>");  						var numericRouteDictionary = new RouteValueDictionary { { "controller"' ControllerName }' { "action"' ActionName }' { "page"' x } };  						if (RouteParameters != null)  							foreach (var item in RouteParameters)  								numericRouteDictionary.Add(item.Key' item.Value);  						var link = _htmlGenerator.GenerateActionLink(ViewContext' x.ToString()' ActionName' ControllerName' null' null' null' numericRouteDictionary' null);  						builder.Append(GetString(link));  						builder.Append("</li>");  					}  				}  			}  			else  			{  				// multipage set of links used in partial page  				// calc low and high limits for numeric links  				var calcLow = PagerContext.PageIndex - 1;  				var calcHigh = PagerContext.PageIndex + 3;  				if (calcLow < 1) calcLow = 1;  				if (calcHigh > PagerContext.PageCount) calcHigh = PagerContext.PageCount;  				if (calcHigh - calcLow < 5) while ((calcHigh < calcLow + 4) && calcHigh < PagerContext.PageCount) calcHigh++;  				if (calcHigh - calcLow < 5) while ((calcLow > calcHigh - 4) && calcLow > 1) calcLow--;  				var isRangeRendered = false;  				for (var x = calcLow; x < calcHigh + 1; x++)  				{  					// numeric links  					if (x >= Low && x <= High)  					{  						if (!isRangeRendered)  						{  							isRangeRendered = true;  							if (String.IsNullOrEmpty(CurrentTextClass))  								builder.Append(String.Format("<li class=\"active\"><span>{0}-{1} of {2}</span></li>"' Low' High' PagerContext.PageCount));  							else builder.Append(String.Format("<li class=\"active {0}\"><span>{1}-{2} of {3}</span></li>"' CurrentTextClass' Low' High' PagerContext.PageCount));  						}  					}  					else  					{  						builder.Append("<li>");  						var numericRouteDictionary = new RouteValueDictionary { { "controller"' ControllerName }' { "action"' ActionName }' { "page"' x } };  						if (RouteParameters != null)  							foreach (var item in RouteParameters)  								numericRouteDictionary.Add(item.Key' item.Value);  						var link = _htmlGenerator.GenerateActionLink(ViewContext' x.ToString()' ActionName' ControllerName' null' null' null' numericRouteDictionary' null);  						builder.Append(GetString(link));  						builder.Append("</li>");  					}  				}  			}
Magic Number,PopForums.Mvc.Areas.Forums.TagHelpers,PagerLinksTagHelper,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\TagHelpers\PagerLinksTagHelper.cs,Process,The following statement contains a magic number: if (Low == 0 || High == 0)  			{  				// not a multipage set of links used in partial page  				// calc low and high limits for numeric links  				var low = PagerContext.PageIndex - 1;  				var high = PagerContext.PageIndex + 3;  				if (low < 1) low = 1;  				if (high > PagerContext.PageCount) high = PagerContext.PageCount;  				if (high - low < 5) while ((high < low + 4) && high < PagerContext.PageCount) high++;  				if (high - low < 5) while ((low > high - 4) && low > 1) low--;  				for (var x = low; x < high + 1; x++)  				{  					// numeric links  					if (x == PagerContext.PageIndex)  					{  						if (String.IsNullOrEmpty(CurrentTextClass))  							builder.Append(String.Format("<li><span class=\"active\">{0} of {1}</span></li>"' x' PagerContext.PageCount));  						else builder.Append(String.Format("<li class=\"active {0}\"><span>{1} of {2}</span></li>"' CurrentTextClass' x' PagerContext.PageCount));  					}  					else  					{  						builder.Append("<li>");  						var numericRouteDictionary = new RouteValueDictionary { { "controller"' ControllerName }' { "action"' ActionName }' { "page"' x } };  						if (RouteParameters != null)  							foreach (var item in RouteParameters)  								numericRouteDictionary.Add(item.Key' item.Value);  						var link = _htmlGenerator.GenerateActionLink(ViewContext' x.ToString()' ActionName' ControllerName' null' null' null' numericRouteDictionary' null);  						builder.Append(GetString(link));  						builder.Append("</li>");  					}  				}  			}  			else  			{  				// multipage set of links used in partial page  				// calc low and high limits for numeric links  				var calcLow = PagerContext.PageIndex - 1;  				var calcHigh = PagerContext.PageIndex + 3;  				if (calcLow < 1) calcLow = 1;  				if (calcHigh > PagerContext.PageCount) calcHigh = PagerContext.PageCount;  				if (calcHigh - calcLow < 5) while ((calcHigh < calcLow + 4) && calcHigh < PagerContext.PageCount) calcHigh++;  				if (calcHigh - calcLow < 5) while ((calcLow > calcHigh - 4) && calcLow > 1) calcLow--;  				var isRangeRendered = false;  				for (var x = calcLow; x < calcHigh + 1; x++)  				{  					// numeric links  					if (x >= Low && x <= High)  					{  						if (!isRangeRendered)  						{  							isRangeRendered = true;  							if (String.IsNullOrEmpty(CurrentTextClass))  								builder.Append(String.Format("<li class=\"active\"><span>{0}-{1} of {2}</span></li>"' Low' High' PagerContext.PageCount));  							else builder.Append(String.Format("<li class=\"active {0}\"><span>{1}-{2} of {3}</span></li>"' CurrentTextClass' Low' High' PagerContext.PageCount));  						}  					}  					else  					{  						builder.Append("<li>");  						var numericRouteDictionary = new RouteValueDictionary { { "controller"' ControllerName }' { "action"' ActionName }' { "page"' x } };  						if (RouteParameters != null)  							foreach (var item in RouteParameters)  								numericRouteDictionary.Add(item.Key' item.Value);  						var link = _htmlGenerator.GenerateActionLink(ViewContext' x.ToString()' ActionName' ControllerName' null' null' null' numericRouteDictionary' null);  						builder.Append(GetString(link));  						builder.Append("</li>");  					}  				}  			}
Magic Number,PopForums.Mvc.Areas.Forums.TagHelpers,PagerLinksTagHelper,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\TagHelpers\PagerLinksTagHelper.cs,Process,The following statement contains a magic number: if (Low == 0 || High == 0)  			{  				// not a multipage set of links used in partial page  				// calc low and high limits for numeric links  				var low = PagerContext.PageIndex - 1;  				var high = PagerContext.PageIndex + 3;  				if (low < 1) low = 1;  				if (high > PagerContext.PageCount) high = PagerContext.PageCount;  				if (high - low < 5) while ((high < low + 4) && high < PagerContext.PageCount) high++;  				if (high - low < 5) while ((low > high - 4) && low > 1) low--;  				for (var x = low; x < high + 1; x++)  				{  					// numeric links  					if (x == PagerContext.PageIndex)  					{  						if (String.IsNullOrEmpty(CurrentTextClass))  							builder.Append(String.Format("<li><span class=\"active\">{0} of {1}</span></li>"' x' PagerContext.PageCount));  						else builder.Append(String.Format("<li class=\"active {0}\"><span>{1} of {2}</span></li>"' CurrentTextClass' x' PagerContext.PageCount));  					}  					else  					{  						builder.Append("<li>");  						var numericRouteDictionary = new RouteValueDictionary { { "controller"' ControllerName }' { "action"' ActionName }' { "page"' x } };  						if (RouteParameters != null)  							foreach (var item in RouteParameters)  								numericRouteDictionary.Add(item.Key' item.Value);  						var link = _htmlGenerator.GenerateActionLink(ViewContext' x.ToString()' ActionName' ControllerName' null' null' null' numericRouteDictionary' null);  						builder.Append(GetString(link));  						builder.Append("</li>");  					}  				}  			}  			else  			{  				// multipage set of links used in partial page  				// calc low and high limits for numeric links  				var calcLow = PagerContext.PageIndex - 1;  				var calcHigh = PagerContext.PageIndex + 3;  				if (calcLow < 1) calcLow = 1;  				if (calcHigh > PagerContext.PageCount) calcHigh = PagerContext.PageCount;  				if (calcHigh - calcLow < 5) while ((calcHigh < calcLow + 4) && calcHigh < PagerContext.PageCount) calcHigh++;  				if (calcHigh - calcLow < 5) while ((calcLow > calcHigh - 4) && calcLow > 1) calcLow--;  				var isRangeRendered = false;  				for (var x = calcLow; x < calcHigh + 1; x++)  				{  					// numeric links  					if (x >= Low && x <= High)  					{  						if (!isRangeRendered)  						{  							isRangeRendered = true;  							if (String.IsNullOrEmpty(CurrentTextClass))  								builder.Append(String.Format("<li class=\"active\"><span>{0}-{1} of {2}</span></li>"' Low' High' PagerContext.PageCount));  							else builder.Append(String.Format("<li class=\"active {0}\"><span>{1}-{2} of {3}</span></li>"' CurrentTextClass' Low' High' PagerContext.PageCount));  						}  					}  					else  					{  						builder.Append("<li>");  						var numericRouteDictionary = new RouteValueDictionary { { "controller"' ControllerName }' { "action"' ActionName }' { "page"' x } };  						if (RouteParameters != null)  							foreach (var item in RouteParameters)  								numericRouteDictionary.Add(item.Key' item.Value);  						var link = _htmlGenerator.GenerateActionLink(ViewContext' x.ToString()' ActionName' ControllerName' null' null' null' numericRouteDictionary' null);  						builder.Append(GetString(link));  						builder.Append("</li>");  					}  				}  			}
Magic Number,PopForums.Mvc.Areas.Forums.TagHelpers,PagerLinksTagHelper,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\TagHelpers\PagerLinksTagHelper.cs,Process,The following statement contains a magic number: if (Low == 0 || High == 0)  			{  				// not a multipage set of links used in partial page  				// calc low and high limits for numeric links  				var low = PagerContext.PageIndex - 1;  				var high = PagerContext.PageIndex + 3;  				if (low < 1) low = 1;  				if (high > PagerContext.PageCount) high = PagerContext.PageCount;  				if (high - low < 5) while ((high < low + 4) && high < PagerContext.PageCount) high++;  				if (high - low < 5) while ((low > high - 4) && low > 1) low--;  				for (var x = low; x < high + 1; x++)  				{  					// numeric links  					if (x == PagerContext.PageIndex)  					{  						if (String.IsNullOrEmpty(CurrentTextClass))  							builder.Append(String.Format("<li><span class=\"active\">{0} of {1}</span></li>"' x' PagerContext.PageCount));  						else builder.Append(String.Format("<li class=\"active {0}\"><span>{1} of {2}</span></li>"' CurrentTextClass' x' PagerContext.PageCount));  					}  					else  					{  						builder.Append("<li>");  						var numericRouteDictionary = new RouteValueDictionary { { "controller"' ControllerName }' { "action"' ActionName }' { "page"' x } };  						if (RouteParameters != null)  							foreach (var item in RouteParameters)  								numericRouteDictionary.Add(item.Key' item.Value);  						var link = _htmlGenerator.GenerateActionLink(ViewContext' x.ToString()' ActionName' ControllerName' null' null' null' numericRouteDictionary' null);  						builder.Append(GetString(link));  						builder.Append("</li>");  					}  				}  			}  			else  			{  				// multipage set of links used in partial page  				// calc low and high limits for numeric links  				var calcLow = PagerContext.PageIndex - 1;  				var calcHigh = PagerContext.PageIndex + 3;  				if (calcLow < 1) calcLow = 1;  				if (calcHigh > PagerContext.PageCount) calcHigh = PagerContext.PageCount;  				if (calcHigh - calcLow < 5) while ((calcHigh < calcLow + 4) && calcHigh < PagerContext.PageCount) calcHigh++;  				if (calcHigh - calcLow < 5) while ((calcLow > calcHigh - 4) && calcLow > 1) calcLow--;  				var isRangeRendered = false;  				for (var x = calcLow; x < calcHigh + 1; x++)  				{  					// numeric links  					if (x >= Low && x <= High)  					{  						if (!isRangeRendered)  						{  							isRangeRendered = true;  							if (String.IsNullOrEmpty(CurrentTextClass))  								builder.Append(String.Format("<li class=\"active\"><span>{0}-{1} of {2}</span></li>"' Low' High' PagerContext.PageCount));  							else builder.Append(String.Format("<li class=\"active {0}\"><span>{1}-{2} of {3}</span></li>"' CurrentTextClass' Low' High' PagerContext.PageCount));  						}  					}  					else  					{  						builder.Append("<li>");  						var numericRouteDictionary = new RouteValueDictionary { { "controller"' ControllerName }' { "action"' ActionName }' { "page"' x } };  						if (RouteParameters != null)  							foreach (var item in RouteParameters)  								numericRouteDictionary.Add(item.Key' item.Value);  						var link = _htmlGenerator.GenerateActionLink(ViewContext' x.ToString()' ActionName' ControllerName' null' null' null' numericRouteDictionary' null);  						builder.Append(GetString(link));  						builder.Append("</li>");  					}  				}  			}
Magic Number,PopForums.Mvc.Areas.Forums.TagHelpers,PagerLinksTagHelper,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\TagHelpers\PagerLinksTagHelper.cs,Process,The following statement contains a magic number: if (Low == 0 || High == 0)  			{  				// not a multipage set of links used in partial page  				// calc low and high limits for numeric links  				var low = PagerContext.PageIndex - 1;  				var high = PagerContext.PageIndex + 3;  				if (low < 1) low = 1;  				if (high > PagerContext.PageCount) high = PagerContext.PageCount;  				if (high - low < 5) while ((high < low + 4) && high < PagerContext.PageCount) high++;  				if (high - low < 5) while ((low > high - 4) && low > 1) low--;  				for (var x = low; x < high + 1; x++)  				{  					// numeric links  					if (x == PagerContext.PageIndex)  					{  						if (String.IsNullOrEmpty(CurrentTextClass))  							builder.Append(String.Format("<li><span class=\"active\">{0} of {1}</span></li>"' x' PagerContext.PageCount));  						else builder.Append(String.Format("<li class=\"active {0}\"><span>{1} of {2}</span></li>"' CurrentTextClass' x' PagerContext.PageCount));  					}  					else  					{  						builder.Append("<li>");  						var numericRouteDictionary = new RouteValueDictionary { { "controller"' ControllerName }' { "action"' ActionName }' { "page"' x } };  						if (RouteParameters != null)  							foreach (var item in RouteParameters)  								numericRouteDictionary.Add(item.Key' item.Value);  						var link = _htmlGenerator.GenerateActionLink(ViewContext' x.ToString()' ActionName' ControllerName' null' null' null' numericRouteDictionary' null);  						builder.Append(GetString(link));  						builder.Append("</li>");  					}  				}  			}  			else  			{  				// multipage set of links used in partial page  				// calc low and high limits for numeric links  				var calcLow = PagerContext.PageIndex - 1;  				var calcHigh = PagerContext.PageIndex + 3;  				if (calcLow < 1) calcLow = 1;  				if (calcHigh > PagerContext.PageCount) calcHigh = PagerContext.PageCount;  				if (calcHigh - calcLow < 5) while ((calcHigh < calcLow + 4) && calcHigh < PagerContext.PageCount) calcHigh++;  				if (calcHigh - calcLow < 5) while ((calcLow > calcHigh - 4) && calcLow > 1) calcLow--;  				var isRangeRendered = false;  				for (var x = calcLow; x < calcHigh + 1; x++)  				{  					// numeric links  					if (x >= Low && x <= High)  					{  						if (!isRangeRendered)  						{  							isRangeRendered = true;  							if (String.IsNullOrEmpty(CurrentTextClass))  								builder.Append(String.Format("<li class=\"active\"><span>{0}-{1} of {2}</span></li>"' Low' High' PagerContext.PageCount));  							else builder.Append(String.Format("<li class=\"active {0}\"><span>{1}-{2} of {3}</span></li>"' CurrentTextClass' Low' High' PagerContext.PageCount));  						}  					}  					else  					{  						builder.Append("<li>");  						var numericRouteDictionary = new RouteValueDictionary { { "controller"' ControllerName }' { "action"' ActionName }' { "page"' x } };  						if (RouteParameters != null)  							foreach (var item in RouteParameters)  								numericRouteDictionary.Add(item.Key' item.Value);  						var link = _htmlGenerator.GenerateActionLink(ViewContext' x.ToString()' ActionName' ControllerName' null' null' null' numericRouteDictionary' null);  						builder.Append(GetString(link));  						builder.Append("</li>");  					}  				}  			}
Magic Number,PopForums.Mvc.Areas.Forums.TagHelpers,PagerLinksTagHelper,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\TagHelpers\PagerLinksTagHelper.cs,Process,The following statement contains a magic number: if (Low == 0 || High == 0)  			{  				// not a multipage set of links used in partial page  				// calc low and high limits for numeric links  				var low = PagerContext.PageIndex - 1;  				var high = PagerContext.PageIndex + 3;  				if (low < 1) low = 1;  				if (high > PagerContext.PageCount) high = PagerContext.PageCount;  				if (high - low < 5) while ((high < low + 4) && high < PagerContext.PageCount) high++;  				if (high - low < 5) while ((low > high - 4) && low > 1) low--;  				for (var x = low; x < high + 1; x++)  				{  					// numeric links  					if (x == PagerContext.PageIndex)  					{  						if (String.IsNullOrEmpty(CurrentTextClass))  							builder.Append(String.Format("<li><span class=\"active\">{0} of {1}</span></li>"' x' PagerContext.PageCount));  						else builder.Append(String.Format("<li class=\"active {0}\"><span>{1} of {2}</span></li>"' CurrentTextClass' x' PagerContext.PageCount));  					}  					else  					{  						builder.Append("<li>");  						var numericRouteDictionary = new RouteValueDictionary { { "controller"' ControllerName }' { "action"' ActionName }' { "page"' x } };  						if (RouteParameters != null)  							foreach (var item in RouteParameters)  								numericRouteDictionary.Add(item.Key' item.Value);  						var link = _htmlGenerator.GenerateActionLink(ViewContext' x.ToString()' ActionName' ControllerName' null' null' null' numericRouteDictionary' null);  						builder.Append(GetString(link));  						builder.Append("</li>");  					}  				}  			}  			else  			{  				// multipage set of links used in partial page  				// calc low and high limits for numeric links  				var calcLow = PagerContext.PageIndex - 1;  				var calcHigh = PagerContext.PageIndex + 3;  				if (calcLow < 1) calcLow = 1;  				if (calcHigh > PagerContext.PageCount) calcHigh = PagerContext.PageCount;  				if (calcHigh - calcLow < 5) while ((calcHigh < calcLow + 4) && calcHigh < PagerContext.PageCount) calcHigh++;  				if (calcHigh - calcLow < 5) while ((calcLow > calcHigh - 4) && calcLow > 1) calcLow--;  				var isRangeRendered = false;  				for (var x = calcLow; x < calcHigh + 1; x++)  				{  					// numeric links  					if (x >= Low && x <= High)  					{  						if (!isRangeRendered)  						{  							isRangeRendered = true;  							if (String.IsNullOrEmpty(CurrentTextClass))  								builder.Append(String.Format("<li class=\"active\"><span>{0}-{1} of {2}</span></li>"' Low' High' PagerContext.PageCount));  							else builder.Append(String.Format("<li class=\"active {0}\"><span>{1}-{2} of {3}</span></li>"' CurrentTextClass' Low' High' PagerContext.PageCount));  						}  					}  					else  					{  						builder.Append("<li>");  						var numericRouteDictionary = new RouteValueDictionary { { "controller"' ControllerName }' { "action"' ActionName }' { "page"' x } };  						if (RouteParameters != null)  							foreach (var item in RouteParameters)  								numericRouteDictionary.Add(item.Key' item.Value);  						var link = _htmlGenerator.GenerateActionLink(ViewContext' x.ToString()' ActionName' ControllerName' null' null' null' numericRouteDictionary' null);  						builder.Append(GetString(link));  						builder.Append("</li>");  					}  				}  			}
Magic Number,PopForums.Mvc.Areas.Forums.TagHelpers,PagerLinksTagHelper,C:\repos\POPWorldMedia_POPForums\src\PopForums.Mvc\Areas\Forums\TagHelpers\PagerLinksTagHelper.cs,Process,The following statement contains a magic number: if (Low == 0 || High == 0)  			{  				// not a multipage set of links used in partial page  				// calc low and high limits for numeric links  				var low = PagerContext.PageIndex - 1;  				var high = PagerContext.PageIndex + 3;  				if (low < 1) low = 1;  				if (high > PagerContext.PageCount) high = PagerContext.PageCount;  				if (high - low < 5) while ((high < low + 4) && high < PagerContext.PageCount) high++;  				if (high - low < 5) while ((low > high - 4) && low > 1) low--;  				for (var x = low; x < high + 1; x++)  				{  					// numeric links  					if (x == PagerContext.PageIndex)  					{  						if (String.IsNullOrEmpty(CurrentTextClass))  							builder.Append(String.Format("<li><span class=\"active\">{0} of {1}</span></li>"' x' PagerContext.PageCount));  						else builder.Append(String.Format("<li class=\"active {0}\"><span>{1} of {2}</span></li>"' CurrentTextClass' x' PagerContext.PageCount));  					}  					else  					{  						builder.Append("<li>");  						var numericRouteDictionary = new RouteValueDictionary { { "controller"' ControllerName }' { "action"' ActionName }' { "page"' x } };  						if (RouteParameters != null)  							foreach (var item in RouteParameters)  								numericRouteDictionary.Add(item.Key' item.Value);  						var link = _htmlGenerator.GenerateActionLink(ViewContext' x.ToString()' ActionName' ControllerName' null' null' null' numericRouteDictionary' null);  						builder.Append(GetString(link));  						builder.Append("</li>");  					}  				}  			}  			else  			{  				// multipage set of links used in partial page  				// calc low and high limits for numeric links  				var calcLow = PagerContext.PageIndex - 1;  				var calcHigh = PagerContext.PageIndex + 3;  				if (calcLow < 1) calcLow = 1;  				if (calcHigh > PagerContext.PageCount) calcHigh = PagerContext.PageCount;  				if (calcHigh - calcLow < 5) while ((calcHigh < calcLow + 4) && calcHigh < PagerContext.PageCount) calcHigh++;  				if (calcHigh - calcLow < 5) while ((calcLow > calcHigh - 4) && calcLow > 1) calcLow--;  				var isRangeRendered = false;  				for (var x = calcLow; x < calcHigh + 1; x++)  				{  					// numeric links  					if (x >= Low && x <= High)  					{  						if (!isRangeRendered)  						{  							isRangeRendered = true;  							if (String.IsNullOrEmpty(CurrentTextClass))  								builder.Append(String.Format("<li class=\"active\"><span>{0}-{1} of {2}</span></li>"' Low' High' PagerContext.PageCount));  							else builder.Append(String.Format("<li class=\"active {0}\"><span>{1}-{2} of {3}</span></li>"' CurrentTextClass' Low' High' PagerContext.PageCount));  						}  					}  					else  					{  						builder.Append("<li>");  						var numericRouteDictionary = new RouteValueDictionary { { "controller"' ControllerName }' { "action"' ActionName }' { "page"' x } };  						if (RouteParameters != null)  							foreach (var item in RouteParameters)  								numericRouteDictionary.Add(item.Key' item.Value);  						var link = _htmlGenerator.GenerateActionLink(ViewContext' x.ToString()' ActionName' ControllerName' null' null' null' numericRouteDictionary' null);  						builder.Append(GetString(link));  						builder.Append("</li>");  					}  				}  			}
