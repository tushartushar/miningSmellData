Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,PopForums.AzureKit.Search,SearchIndexSubsystem,C:\repos\POPWorldMedia_POPForums\src\PopForums.AzureKit\Search\SearchIndexSubsystem.cs,DoIndex,The method has 6 parameters. Parameters: searchService' settingsManager' postService' config' topicService' errorLog
Long Parameter List,PopForums.AzureKit.Search,SearchRepository,C:\repos\POPWorldMedia_POPForums\src\PopForums.AzureKit\Search\SearchRepository.cs,SearchTopics,The method has 6 parameters. Parameters: searchTerm' hiddenForums' searchType' startRow' pageSize' topicCount
Long Statement,PopForums.AzureKit.Search,SearchRepository,C:\repos\POPWorldMedia_POPForums\src\PopForums.AzureKit\Search\SearchRepository.cs,SearchTopics,The length of the statement  "			var serviceIndexClient = new SearchIndexClient(_config.SearchUrl' SearchIndexSubsystem.IndexName' new SearchCredentials(_config.SearchKey)); " is 140.
Magic Number,PopForums.AzureKit.Redis,CacheHelper,C:\repos\POPWorldMedia_POPForums\src\PopForums.AzureKit\Redis\CacheHelper.cs,SetLongTermCacheObject,The following statement contains a magic number: var options = new MemoryCacheEntryOptions { SlidingExpiration = TimeSpan.FromMinutes(60) };
Magic Number,PopForums.AzureKit.Search,SearchIndexSubsystem,C:\repos\POPWorldMedia_POPForums\src\PopForums.AzureKit\Search\SearchIndexSubsystem.cs,CreateIndex,The following statement contains a magic number: var indexDefinition = new Index  		    {  			    Name = IndexName'  			    Fields = new[]  			    {  				    new Field("topicID"' DataType.String) {IsKey = true' IsSearchable = false}'  				    new Field("forumID"' DataType.Int32) {IsFilterable = true' IsSearchable = false}'  				    new Field("title"' DataType.String) {IsSearchable = true' IsSortable = true}'  					new Field("lastPostTime"' DataType.DateTimeOffset) {IsSortable = true' IsSearchable = false}'  					new Field("startedByName"' DataType.String) {IsSortable = true' IsSearchable = true}'  					new Field("replies"' DataType.Int32) {IsSortable = true' IsSearchable = false}'  					new Field("views"' DataType.Int32) {IsSortable = true' IsSearchable = false}'  					new Field("isClosed"' DataType.Boolean) {IsSortable = false' IsSearchable = false}'  					new Field("isPinned"' DataType.Boolean) {IsSortable = false' IsSearchable = false}'  					new Field("urlName"' DataType.String) {IsSortable = false' IsSearchable = false}'  					new Field("lastPostName"' DataType.String) {IsSortable = false' IsSearchable = false}'  					new Field("posts"' DataType.Collection(DataType.String)) {IsSortable = false' IsSearchable = true}  			    }'  				ScoringProfiles = new []  				{  					new ScoringProfile("TopicWeight"' new TextWeights(new Dictionary<string' double>  					{  						{"title"' 10}'  						{"startedByName"' 5}'  						{"posts"' 1}  					}))  				}  		    };
Magic Number,PopForums.AzureKit.Search,SearchIndexSubsystem,C:\repos\POPWorldMedia_POPForums\src\PopForums.AzureKit\Search\SearchIndexSubsystem.cs,CreateIndex,The following statement contains a magic number: var indexDefinition = new Index  		    {  			    Name = IndexName'  			    Fields = new[]  			    {  				    new Field("topicID"' DataType.String) {IsKey = true' IsSearchable = false}'  				    new Field("forumID"' DataType.Int32) {IsFilterable = true' IsSearchable = false}'  				    new Field("title"' DataType.String) {IsSearchable = true' IsSortable = true}'  					new Field("lastPostTime"' DataType.DateTimeOffset) {IsSortable = true' IsSearchable = false}'  					new Field("startedByName"' DataType.String) {IsSortable = true' IsSearchable = true}'  					new Field("replies"' DataType.Int32) {IsSortable = true' IsSearchable = false}'  					new Field("views"' DataType.Int32) {IsSortable = true' IsSearchable = false}'  					new Field("isClosed"' DataType.Boolean) {IsSortable = false' IsSearchable = false}'  					new Field("isPinned"' DataType.Boolean) {IsSortable = false' IsSearchable = false}'  					new Field("urlName"' DataType.String) {IsSortable = false' IsSearchable = false}'  					new Field("lastPostName"' DataType.String) {IsSortable = false' IsSearchable = false}'  					new Field("posts"' DataType.Collection(DataType.String)) {IsSortable = false' IsSearchable = true}  			    }'  				ScoringProfiles = new []  				{  					new ScoringProfile("TopicWeight"' new TextWeights(new Dictionary<string' double>  					{  						{"title"' 10}'  						{"startedByName"' 5}'  						{"posts"' 1}  					}))  				}  		    };
