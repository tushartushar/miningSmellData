Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,PopForums.AzureKit.Search,SearchIndexSubsystem,C:\research\architectureSmells\repos\POPWorldMedia_POPForums\src\PopForums.AzureKit\Search\SearchIndexSubsystem.cs,SearchIndexSubsystem,The method has 6 parameters. Parameters: textParsingService' searchService' postService' config' topicService' errorLog
Long Parameter List,PopForums.AzureKit.Search,SearchRepository,C:\research\architectureSmells\repos\POPWorldMedia_POPForums\src\PopForums.AzureKit\Search\SearchRepository.cs,SearchTopics,The method has 5 parameters. Parameters: searchTerm' hiddenForums' searchType' startRow' pageSize
Long Statement,PopForums.AzureKit.Queue,AwardCalculationQueueRepository,C:\research\architectureSmells\repos\POPWorldMedia_POPForums\src\PopForums.AzureKit\Queue\AwardCalculationQueueRepository.cs,Dequeue,The length of the statement  "			throw new System.NotImplementedException($"{nameof(Dequeue)} should never be called because it's automatically bound to an Azure function.");" is 141.
Long Statement,PopForums.AzureKit.Queue,EmailQueueRepository,C:\research\architectureSmells\repos\POPWorldMedia_POPForums\src\PopForums.AzureKit\Queue\EmailQueueRepository.cs,Dequeue,The length of the statement  "			throw new System.NotImplementedException($"{nameof(Dequeue)} should never be called because it's automatically bound to an Azure function.");" is 141.
Long Statement,PopForums.AzureKit.Queue,SearchIndexQueueRepository,C:\research\architectureSmells\repos\POPWorldMedia_POPForums\src\PopForums.AzureKit\Queue\SearchIndexQueueRepository.cs,Dequeue,The length of the statement  "			throw new System.NotImplementedException($"{nameof(Dequeue)} should never be called because it's automatically bound to an Azure function.");" is 141.
Long Statement,PopForums.AzureKit.Redis,CacheHelper,C:\research\architectureSmells\repos\POPWorldMedia_POPForums\src\PopForums.AzureKit\Redis\CacheHelper.cs,SetPagedListCacheObject,The length of the statement  "			var options = new MemoryCacheEntryOptions { AbsoluteExpirationRelativeToNow = TimeSpan.FromSeconds(_config.CacheSeconds) };" is 123.
Long Statement,PopForums.AzureKit.Search,SearchRepository,C:\research\architectureSmells\repos\POPWorldMedia_POPForums\src\PopForums.AzureKit\Search\SearchRepository.cs,SearchTopics,The length of the statement  "			var serviceIndexClient = new SearchIndexClient(_config.SearchUrl' SearchIndexSubsystem.IndexName' new SearchCredentials(_config.SearchKey));" is 140.
Long Statement,PopForums.AzureKit,ServiceCollectionExtensions,C:\research\architectureSmells\repos\POPWorldMedia_POPForums\src\PopForums.AzureKit\ServiceCollectionExtensions.cs,AddPopForumsAzureFunctionsAndQueues,The length of the statement  "			services.Replace(ServiceDescriptor.Transient<IAwardCalculationQueueRepository' PopForums.AzureKit.Queue.AwardCalculationQueueRepository>());" is 140.
Long Statement,PopForums.AzureKit,ServiceCollectionExtensions,C:\research\architectureSmells\repos\POPWorldMedia_POPForums\src\PopForums.AzureKit\ServiceCollectionExtensions.cs,AddPopForumsAzureFunctionsAndQueues,The length of the statement  "			services.Replace(ServiceDescriptor.Transient<ISearchIndexQueueRepository' PopForums.AzureKit.Queue.SearchIndexQueueRepository>());" is 130.
Magic Number,PopForums.AzureKit.Redis,CacheHelper,C:\research\architectureSmells\repos\POPWorldMedia_POPForums\src\PopForums.AzureKit\Redis\CacheHelper.cs,SetLongTermCacheObject,The following statement contains a magic number: var options = new MemoryCacheEntryOptions { SlidingExpiration = TimeSpan.FromMinutes(60) };
Magic Number,PopForums.AzureKit.Search,SearchIndexSubsystem,C:\research\architectureSmells\repos\POPWorldMedia_POPForums\src\PopForums.AzureKit\Search\SearchIndexSubsystem.cs,CreateIndex,The following statement contains a magic number: var indexDefinition = new Index 		    { 			    Name = IndexName' 			    Fields = new[] 				{ 					new Field("key"' DataType.String) {IsKey = true' IsSearchable = false}' 					new Field("topicID"' DataType.String) {IsSearchable = false}' 				    new Field("forumID"' DataType.Int32) {IsFilterable = true' IsSearchable = false}' 				    new Field("title"' DataType.String) {IsSearchable = true' IsSortable = true}' 					new Field("lastPostTime"' DataType.DateTimeOffset) {IsSortable = true' IsSearchable = false}' 					new Field("startedByName"' DataType.String) {IsSortable = true' IsSearchable = true}' 					new Field("replies"' DataType.Int32) {IsSortable = true' IsSearchable = false}' 					new Field("views"' DataType.Int32) {IsSortable = true' IsSearchable = false}' 					new Field("isClosed"' DataType.Boolean) {IsSortable = false' IsSearchable = false}' 					new Field("isPinned"' DataType.Boolean) {IsSortable = false' IsSearchable = false}' 					new Field("urlName"' DataType.String) {IsSortable = false' IsSearchable = false}' 					new Field("lastPostName"' DataType.String) {IsSortable = false' IsSearchable = false}' 					new Field("posts"' DataType.Collection(DataType.String)) {IsSortable = false' IsSearchable = true}' 					new Field("tenantID"' DataType.String) {IsSearchable = true} 			    }' 				ScoringProfiles = new [] 				{ 					new ScoringProfile("TopicWeight"' new TextWeights(new Dictionary<string' double> 					{ 						{"title"' 10}' 						{"startedByName"' 5}' 						{"posts"' 1} 					})) 				} 		    };
Magic Number,PopForums.AzureKit.Search,SearchIndexSubsystem,C:\research\architectureSmells\repos\POPWorldMedia_POPForums\src\PopForums.AzureKit\Search\SearchIndexSubsystem.cs,CreateIndex,The following statement contains a magic number: var indexDefinition = new Index 		    { 			    Name = IndexName' 			    Fields = new[] 				{ 					new Field("key"' DataType.String) {IsKey = true' IsSearchable = false}' 					new Field("topicID"' DataType.String) {IsSearchable = false}' 				    new Field("forumID"' DataType.Int32) {IsFilterable = true' IsSearchable = false}' 				    new Field("title"' DataType.String) {IsSearchable = true' IsSortable = true}' 					new Field("lastPostTime"' DataType.DateTimeOffset) {IsSortable = true' IsSearchable = false}' 					new Field("startedByName"' DataType.String) {IsSortable = true' IsSearchable = true}' 					new Field("replies"' DataType.Int32) {IsSortable = true' IsSearchable = false}' 					new Field("views"' DataType.Int32) {IsSortable = true' IsSearchable = false}' 					new Field("isClosed"' DataType.Boolean) {IsSortable = false' IsSearchable = false}' 					new Field("isPinned"' DataType.Boolean) {IsSortable = false' IsSearchable = false}' 					new Field("urlName"' DataType.String) {IsSortable = false' IsSearchable = false}' 					new Field("lastPostName"' DataType.String) {IsSortable = false' IsSearchable = false}' 					new Field("posts"' DataType.Collection(DataType.String)) {IsSortable = false' IsSearchable = true}' 					new Field("tenantID"' DataType.String) {IsSearchable = true} 			    }' 				ScoringProfiles = new [] 				{ 					new ScoringProfile("TopicWeight"' new TextWeights(new Dictionary<string' double> 					{ 						{"title"' 10}' 						{"startedByName"' 5}' 						{"posts"' 1} 					})) 				} 		    };
